1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA CHAN: Ini adalah-saya, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Hari ini, kita akan menerapkan
Mario, di mana kita menarik Mario

4
00:00:06,950 --> 00:00:10,730
piramida penuh baginya untuk melompat lebih.

5
00:00:10,730 --> 00:00:14,430
Mari kita memecah
sub-tugas untuk masalah ini.

6
00:00:14,430 --> 00:00:17,930
>> Pertama, kami ingin meminta pengguna
untuk ketinggian piramida.

7
00:00:17,930 --> 00:00:20,510
Dan kemudian kita ingin memastikan
bahwa masukan yang valid.

8
00:00:20,510 --> 00:00:23,280
Dan kemudian kita akan
ingin menarik piramida.

9
00:00:23,280 --> 00:00:26,850
>> Jadi mari kita bicara tentang mendorong
dan memvalidasi input pengguna.

10
00:00:26,850 --> 00:00:29,920
Ini mungkin terlihat seperti
ini, loop do-while yang

11
00:00:29,920 --> 00:00:33,250
mendorong pengguna untuk
bilangan bulat dan kemudian hanya mengulangi

12
00:00:33,250 --> 00:00:35,700
jika itu bilangan bulat tidak valid.

13
00:00:35,700 --> 00:00:38,220
Jadi apa yang harus kondisi ini terjadi?

14
00:00:38,220 --> 00:00:40,630
>> Untuk ini, mari kita kembali
dengan spesifikasi.

15
00:00:40,630 --> 00:00:46,240
Nah, spec memberitahu kita bahwa setiap valid
tinggi akan menjadi antara 0 dan 23,

16
00:00:46,240 --> 00:00:47,350
inklusif.

17
00:00:47,350 --> 00:00:51,400
Jadi itu berarti bahwa setiap valid
tinggi akan menjadi kurang dari 0

18
00:00:51,400 --> 00:00:53,840
atau lebih dari 23.

19
00:00:53,840 --> 00:00:57,220
>> Jadi sekarang kita memiliki informasi ini,
mari kita merancang kondisi kita.

20
00:00:57,220 --> 00:00:59,230
Tapi kita harus berhati-hati,
karena sekarang kita memiliki

21
00:00:59,230 --> 00:01:02,130
dua Booleans yang ingin kita untuk mengevaluasi.

22
00:01:02,130 --> 00:01:04,150
>> Di sini saya berikan Anda
dengan tabel kebenaran.

23
00:01:04,150 --> 00:01:07,520
Hal ini memungkinkan kita untuk mengambil dua
Booleans, Boolean satu dan dua.

24
00:01:07,520 --> 00:01:13,600
Dan kita dapat mengevaluasi baik bool1
dan bool2 atau bool1 atau bool2.

25
00:01:13,600 --> 00:01:17,390
>> Jadi apa bedanya
antara dan dan atau?

26
00:01:17,390 --> 00:01:21,810
Nah, bool1 dan bool2 akan
mengevaluasi dengan benar jika dan hanya

27
00:01:21,810 --> 00:01:25,680
jika kedua Booleans benar,
sedangkan atau operasi

28
00:01:25,680 --> 00:01:30,190
akan benar jika salah satu dari
yang Booleans atau keduanya benar.

29
00:01:30,190 --> 00:01:33,110
Jadi dengan ini dalam pikiran,
lihat apakah Anda dapat mencari tahu

30
00:01:33,110 --> 00:01:37,460
apa kondisi yang tepat untuk
lingkaran do-while Anda untuk n valid

31
00:01:37,460 --> 00:01:38,850
akan menjadi.

32
00:01:38,850 --> 00:01:43,540
>> Dengan itu, kami telah diminta dan divalidasi
pengguna untuk ketinggian piramida

33
00:01:43,540 --> 00:01:44,550
yang mereka inginkan.

34
00:01:44,550 --> 00:01:47,740
Jadi sekarang, itu terserah kita
menggambar piramida.

35
00:01:47,740 --> 00:01:50,520
Piramida penuh untuk ini
masalah akan terlihat sedikit

36
00:01:50,520 --> 00:01:56,340
seperti ini, di mana kami memiliki piramida kiri,
beberapa kesenjangan, dan kemudian piramida yang tepat.

37
00:01:56,340 --> 00:01:58,630
Jadi mari kita istirahat ini turun sedikit.

38
00:01:58,630 --> 00:02:03,510
>> Jika saya pergi ke editor teks saya, di sini saya sudah
ditarik kita piramida kiri-blok.

39
00:02:03,510 --> 00:02:05,160
Tapi itu tidak akan dilakukan.

40
00:02:05,160 --> 00:02:10,139
Apa yang ingin kita lakukan adalah kita ingin
membuat piramida benar-blok pertama.

41
00:02:10,139 --> 00:02:13,580
Jadi untuk melakukan ini, hanya mendorong
hash saya bersama ke samping,

42
00:02:13,580 --> 00:02:18,240
Aku hanya akan menaruh beberapa karakter
di antara, hanya titik-titik ini.

43
00:02:18,240 --> 00:02:22,560
Lalu aku akan menempatkan dua di
baris berikutnya, dan satu pada baris tersebut.

44
00:02:22,560 --> 00:02:26,070
Dan jadi di sini aku punya
benar-blok piramida.

45
00:02:26,070 --> 00:02:28,540
>> Setelah itu, aku akan
kembali ke baris atas

46
00:02:28,540 --> 00:02:33,930
dan dimasukkan ke dalam celah, yang
adalah, per spec, dua ruang.

47
00:02:33,930 --> 00:02:37,680
Lalu aku akan mengisi
sisi lain dari piramida.

48
00:02:37,680 --> 00:02:42,030
Aku akan pergi ke baris kedua, menulis
dua ruang untuk kesenjangan dan kemudian dua

49
00:02:42,030 --> 00:02:42,920
hash.

50
00:02:42,920 --> 00:02:47,020
Kembali ke baris ketiga, dua ruang
untuk gap dan tiga hash.

51
00:02:47,020 --> 00:02:51,480
Dan pada akhirnya, dua ruang
untuk kesenjangan dan empat hash.

52
00:02:51,480 --> 00:02:54,400
Jadi itulah yang penuh
piramida akan terlihat seperti.

53
00:02:54,400 --> 00:02:57,260
>> Tentu saja, kita tidak ingin
titik-titik ini di jalan.

54
00:02:57,260 --> 00:03:01,220
Jadi kita akan mengganti ini
titik dengan menempatkan beberapa ruang di.

55
00:03:01,220 --> 00:03:03,720
Satu, dua, tiga di baris pertama.

56
00:03:03,720 --> 00:03:05,650
Satu, dua di kedua.

57
00:03:05,650 --> 00:03:08,200
Dan satu di baris ketiga.

58
00:03:08,200 --> 00:03:12,060
Jadi ini adalah apa yang akan kita lakukan jika kita
ingin hanya membuat piramida penuh,

59
00:03:12,060 --> 00:03:13,700
mengatakan, dalam editor teks kita.

60
00:03:13,700 --> 00:03:15,860
>> Jadi mari kita ini,
memahami pola,

61
00:03:15,860 --> 00:03:19,870
dan mengubahnya ke beberapa pseudocode.

62
00:03:19,870 --> 00:03:24,500
Untuk setiap baris piramida, kami ingin
untuk mencetak piramida kiri dan kemudian

63
00:03:24,500 --> 00:03:26,580
kesenjangan dan kemudian piramida yang tepat.

64
00:03:26,580 --> 00:03:30,260
Untuk piramida kiri, kita mencetak
jumlah yang diperlukan ruang,

65
00:03:30,260 --> 00:03:31,740
diikuti oleh hash.

66
00:03:31,740 --> 00:03:35,030
Kemudian kami mencetak gap, yang
hanya dua ruang setiap kali.

67
00:03:35,030 --> 00:03:38,080
Dan di piramida yang tepat, kami mencetak
jumlah yang diperlukan hash.

68
00:03:38,080 --> 00:03:41,410
>> Untuk baris kedua, kami melakukan
proses yang tepat sama.

69
00:03:41,410 --> 00:03:44,510
Kami mencetak ruang untuk sebelah kiri
piramida, jumlah yang diperlukan

70
00:03:44,510 --> 00:03:49,930
hash, kesenjangan, dua ruang, dan
maka hash untuk piramida yang tepat.

71
00:03:49,930 --> 00:03:52,490
>> Mari kita mengatasi pola
untuk piramida kiri.

72
00:03:52,490 --> 00:03:55,660
Jika aku punya, untuk tujuan
dari contoh ini, ketinggian

73
00:03:55,660 --> 00:03:58,790
delapan diminta oleh
pengguna, maka baris pertama saya

74
00:03:58,790 --> 00:04:01,020
akan memiliki satu hash dan tujuh ruang.

75
00:04:01,020 --> 00:04:03,860
baris kedua saya akan
dua hash, enam ruang.

76
00:04:03,860 --> 00:04:06,749
Baris ketiga, tiga hash, lima spasi.

77
00:04:06,749 --> 00:04:09,040
Anda mungkin dapat melakukan hal ini
diri untuk ketinggian delapan

78
00:04:09,040 --> 00:04:13,470
dan menentukan untuk setiap baris berapa banyak
hash dan berapa banyak ruang yang Anda butuhkan.

79
00:04:13,470 --> 00:04:16,209
Tapi apa yang kita ingin lakukan adalah
kami ingin abstrak itu.

80
00:04:16,209 --> 00:04:22,660
Jadi saya meminta Anda untuk setiap baris n, berapa banyak
hash dan berapa banyak ruang yang kita butuhkan?

81
00:04:22,660 --> 00:04:25,410
>> Sekarang, karena Anda menentukan
pola untuk berapa banyak hash

82
00:04:25,410 --> 00:04:29,920
dan berapa banyak ruang yang Anda butuhkan untuk
setiap baris n untuk ketinggian tertentu,

83
00:04:29,920 --> 00:04:32,910
ingat untuk berhati-hati
bagaimana Anda mengindeks.

84
00:04:32,910 --> 00:04:37,160
Apa yang saya maksudkan dengan ini adalah bahwa dalam sehari-hari
kehidupan sebagian besar dari kita mulai menghitung per satu.

85
00:04:37,160 --> 00:04:39,680
Jadi baris pertama akan menjadi nomor satu.

86
00:04:39,680 --> 00:04:43,620
Dan baris kedua akan berturut-turut
nomor dua, seterusnya dan sebagainya.

87
00:04:43,620 --> 00:04:47,620
>> Tapi dalam ilmu komputer dan
CS50, kita nol-diindeks.

88
00:04:47,620 --> 00:04:50,750
Jadi kita benar-benar mulai menghitung dari nol.

89
00:04:50,750 --> 00:04:54,020
Jadi baris pertama akan
menjadi baris angka nol.

90
00:04:54,020 --> 00:04:56,640
Dan baris kedua
akan menjadi baris nomor satu.

91
00:04:56,640 --> 00:05:02,510
Jadi jika saya memiliki ketinggian delapan untuk
piramida saya, maka nilai terakhir dari n

92
00:05:02,510 --> 00:05:05,850
akan benar-benar menjadi tujuh dan tidak delapan.

93
00:05:05,850 --> 00:05:07,010
>> Jadi hati-hati tentang hal ini.

94
00:05:07,010 --> 00:05:10,750
Dan menyadari ketika Anda menentukan
pola Anda apakah Anda nol-diindeks

95
00:05:10,750 --> 00:05:12,360
atau satu-diindeks

96
00:05:12,360 --> 00:05:13,070
>> BAIK.

97
00:05:13,070 --> 00:05:15,380
Jadi sekarang kita memiliki
pola untuk piramida kiri,

98
00:05:15,380 --> 00:05:18,650
kita perlu menentukan
pola untuk kesenjangan.

99
00:05:18,650 --> 00:05:20,480
Untungnya, ini benar-benar mudah.

100
00:05:20,480 --> 00:05:22,690
Ini hanya selalu dua ruang.

101
00:05:22,690 --> 00:05:25,240
>> Jadi sekarang kita lanjutkan ke pola yang tepat.

102
00:05:25,240 --> 00:05:27,220
Baris pertama akan memiliki satu hash.

103
00:05:27,220 --> 00:05:28,640
Kedua berturut-turut, dua.

104
00:05:28,640 --> 00:05:29,530
Baris ketiga, tiga.

105
00:05:29,530 --> 00:05:30,790
Seterusnya dan sebagainya.

106
00:05:30,790 --> 00:05:35,540
Jadi sekali lagi, menentukan untuk setiap abstrak
n dan tinggi setiap berapa banyak hash

107
00:05:35,540 --> 00:05:38,810
dan berapa banyak ruang
setiap baris harus memiliki.

108
00:05:38,810 --> 00:05:39,700
>> BAIK.

109
00:05:39,700 --> 00:05:45,050
Jadi kita tahu bahwa untuk setiap kita baris
perlu melakukan beberapa proses.

110
00:05:45,050 --> 00:05:46,600
Bagaimana kita melakukannya?

111
00:05:46,600 --> 00:05:50,440
Nah, kita menggunakan untuk loop membangun,
terdiri dari sebuah inisialisasi,

112
00:05:50,440 --> 00:05:52,310
kondisi, dan update.

113
00:05:52,310 --> 00:05:54,830
Untuk loop dapat digunakan
mengulangi proses.

114
00:05:54,830 --> 00:05:59,610
>> Jadi mengatakan saya ingin menyapa,
dunia 50 kali, kemudian saya untuk loop

115
00:05:59,610 --> 00:06:03,510
akan terlihat seperti ini, di mana
Aku menginisialisasi variabel saya ke nol.

116
00:06:03,510 --> 00:06:06,200
Kondisi ini yang saya kurang dari 50.

117
00:06:06,200 --> 00:06:09,670
Dan kemudian update adalah bahwa hal itu
bertahap per satu setiap kali.

118
00:06:09,670 --> 00:06:14,700
Jadi apa ini akan dilakukan akan
mencetak halo, dunia 50 kali berturut-turut.

119
00:06:14,700 --> 00:06:18,080
>> Sekarang, mengatakan saya ingin iterate
lebih tinggi dari piramida.

120
00:06:18,080 --> 00:06:21,560
Maka bukan coding keras
beberapa nilai dalam kondisi tersebut,

121
00:06:21,560 --> 00:06:23,280
Saya hanya menggunakan variabel tinggi.

122
00:06:23,280 --> 00:06:27,180
Jadi apa ini akan lakukan adalah iterate
lebih tinggi setiap baris.

123
00:06:27,180 --> 00:06:30,280
Dan aku bisa melakukan sesuatu di dalam
tubuh loop itu.

124
00:06:30,280 --> 00:06:32,710
>> Apa yang kita ingin lakukan
dalam tubuh loop?

125
00:06:32,710 --> 00:06:36,550
Yah, seperti yang kita ditunjukkan sebelumnya, kami ingin
untuk mencetak ruang dan hash

126
00:06:36,550 --> 00:06:40,730
untuk piramida kiri dan kemudian cetak
dua ruang dan kemudian mencetak hash.

127
00:06:40,730 --> 00:06:42,500
Jadi kita sudah tahu itu.

128
00:06:42,500 --> 00:06:45,670
Jadi kita bisa mulai untuk mengisi
dalam program kami lebih banyak.

129
00:06:45,670 --> 00:06:49,850
>> Di sini saya memiliki luar untuk loop yang
iterates atas setiap baris dalam piramida.

130
00:06:49,850 --> 00:06:53,340
Dan di dalam tubuh yang akan saya
untuk mencetak spasi berulang kali,

131
00:06:53,340 --> 00:06:56,860
hash berulang kali, dan kemudian kesenjangan,
dan kemudian membagi untuk piramida yang tepat,

132
00:06:56,860 --> 00:07:00,440
dan kemudian, akhirnya, baru
line untuk memulai baris berikutnya.

133
00:07:00,440 --> 00:07:02,860
>> Dengan itu, kami diminta
pengguna untuk input.

134
00:07:02,860 --> 00:07:04,510
Kami sudah memastikan bahwa itu valid.

135
00:07:04,510 --> 00:07:06,280
Dan kemudian kami telah ditarik piramida.

136
00:07:06,280 --> 00:07:09,540
Jadi Mario berhasil bisa
memanjat piramida.

137
00:07:09,540 --> 00:07:10,970
>> Nama saya Zamyla.

138
00:07:10,970 --> 00:07:13,840
Dan ini CS50.

139
00:07:13,840 --> 00:07:15,419

