1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA CHAN: To je-me, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Danas ćemo provesti
Mario, gdje skrećemo Mario

4
00:00:06,950 --> 00:00:10,730
pun piramide za njega preskočiti.

5
00:00:10,730 --> 00:00:14,430
Idemo razbiti
pod-zadatke za taj problem.

6
00:00:14,430 --> 00:00:17,930
>> Prvo, želimo brz korisnik
za visinu piramide.

7
00:00:17,930 --> 00:00:20,510
A onda želimo biti sigurni
da je ulaz vrijedi.

8
00:00:20,510 --> 00:00:23,280
A onda ćemo
želim nacrtati piramidu.

9
00:00:23,280 --> 00:00:26,850
>> Dakle, pričajmo o navelo
i potvrđivanju korisničkog unosa.

10
00:00:26,850 --> 00:00:29,920
To može izgledati nešto poput
ovaj, do-while petlja koja

11
00:00:29,920 --> 00:00:33,250
traži od korisnika ima li
cijeli broj i onda samo ponavlja

12
00:00:33,250 --> 00:00:35,700
ako je taj broj nije valjan.

13
00:00:35,700 --> 00:00:38,220
Tako što bi ovo stanje moglo biti?

14
00:00:38,220 --> 00:00:40,630
>> Za to, vratimo se natrag
u specifikaciji.

15
00:00:40,630 --> 00:00:46,240
Pa, spec nam govori da bilo koji valjani
visina će biti između 0 i 23,

16
00:00:46,240 --> 00:00:47,350
inclusive.

17
00:00:47,350 --> 00:00:51,400
Dakle, to znači da je bilo koji nevažeći
visina će biti manji od 0

18
00:00:51,400 --> 00:00:53,840
ili više od 23.

19
00:00:53,840 --> 00:00:57,220
>> Tako da sada imamo tu informaciju,
neka je dizajn naše stanje.

20
00:00:57,220 --> 00:00:59,230
No, moramo biti oprezni,
jer sada imamo

21
00:00:59,230 --> 00:01:02,130
dvije logičke koje želimo procijeniti.

22
00:01:02,130 --> 00:01:04,150
>> Ovdje sam te pod uvjetom
sa stolom istine.

23
00:01:04,150 --> 00:01:07,520
To nam omogućuje da se dva
Logičke, Boolean jedan i dva.

24
00:01:07,520 --> 00:01:13,600
I možemo ocijeniti bilo bool1
i bool2 ili bool1 ili bool2.

25
00:01:13,600 --> 00:01:17,390
>> Dakle, u čemu je razlika
između i i ili?

26
00:01:17,390 --> 00:01:21,810
Pa, bool1 i bool2 će
procijeniti da vrijedi ako i samo

27
00:01:21,810 --> 00:01:25,680
ako su obje logičke istinite,
a ili rad

28
00:01:25,680 --> 00:01:30,190
će biti istina, ako ni jedan od
su logičke ili i jedno i drugo istina.

29
00:01:30,190 --> 00:01:33,110
Tako je s tim na umu,
vidjeti ako možete shvatiti

30
00:01:33,110 --> 00:01:37,460
ono što je prikladno uvjet za
Vaš do-while petlja za nevažeće n

31
00:01:37,460 --> 00:01:38,850
će biti.

32
00:01:38,850 --> 00:01:43,540
>> Uz to, mi smo to zatraži, a potvrđen
korisnik za visinu piramide

33
00:01:43,540 --> 00:01:44,550
da oni žele.

34
00:01:44,550 --> 00:01:47,740
Tako sada, to je do nas
nacrtati piramidu.

35
00:01:47,740 --> 00:01:50,520
Puna piramida za to
Problem će izgledati malo

36
00:01:50,520 --> 00:01:56,340
ovako, gdje imamo lijevi piramida,
neka praznina, a onda pravo piramida.

37
00:01:56,340 --> 00:01:58,630
Tako ćemo razbiti ovaj dolje malo.

38
00:01:58,630 --> 00:02:03,510
>> Ako odem na moj tekst editor, ovdje imam
nacrtana nam u lijevu usklađeni piramidu.

39
00:02:03,510 --> 00:02:05,160
No, to neće učiniti.

40
00:02:05,160 --> 00:02:10,139
Ono što želimo učiniti je želimo
stvoriti pravi poravnat piramidu na prvom mjestu.

41
00:02:10,139 --> 00:02:13,580
Pa za to, da se samo gurnuti
moji raspršivanja zajedno sa strane,

42
00:02:13,580 --> 00:02:18,240
Samo ću staviti neke znakove
između, samo tih točaka.

43
00:02:18,240 --> 00:02:22,560
Onda ću staviti dva na
Sljedeći linija, a jedna na toj liniji.

44
00:02:22,560 --> 00:02:26,070
I tako ovdje imam
Pravo poravnat piramidu.

45
00:02:26,070 --> 00:02:28,540
>> Nakon toga, ja ću
povratak na vrh reda

46
00:02:28,540 --> 00:02:33,930
i staviti u prazninu, koja se
je, po spec, dva prostora.

47
00:02:33,930 --> 00:02:37,680
Onda ću ispuniti u
Druga strana piramide.

48
00:02:37,680 --> 00:02:42,030
Ja ću ići u drugi red, pisati
Dva mjesta za razmak, a zatim dva

49
00:02:42,030 --> 00:02:42,920
hashes.

50
00:02:42,920 --> 00:02:47,020
Natrag na treći red, dva razmaka
za jaz i tri hashes.

51
00:02:47,020 --> 00:02:51,480
I na kraju, dva razmaka
za jaz i četiri hashes.

52
00:02:51,480 --> 00:02:54,400
Dakle, to je ono full
Piramida će izgledati.

53
00:02:54,400 --> 00:02:57,260
>> Naravno, ne želimo
ove točke na putu.

54
00:02:57,260 --> 00:03:01,220
Tako ćemo zamijeni
točkice Stavljanjem neke prostore u.

55
00:03:01,220 --> 00:03:03,720
Jedan, dva, tri na prvoj crti.

56
00:03:03,720 --> 00:03:05,650
Jedan, dva na drugom.

57
00:03:05,650 --> 00:03:08,200
I jedan na trećem retku.

58
00:03:08,200 --> 00:03:12,060
Dakle, to je ono što će učiniti ako mi
želio samo napraviti puni piramida,

59
00:03:12,060 --> 00:03:13,700
Naime, u našem programu za uređivanje teksta.

60
00:03:13,700 --> 00:03:15,860
>> Dakle, uzmimo to,
razumijevanje obrasce,

61
00:03:15,860 --> 00:03:19,870
i pretvoriti ga na neki pseudokod.

62
00:03:19,870 --> 00:03:24,500
Za svaki red piramide, želimo
ispisati utakmice piramide, a zatim

63
00:03:24,500 --> 00:03:26,580
jaz, a zatim desnu piramida.

64
00:03:26,580 --> 00:03:30,260
Za lijevoj piramide, mi ispisati
nužna količina prostora,

65
00:03:30,260 --> 00:03:31,740
Slijede hashes.

66
00:03:31,740 --> 00:03:35,030
Onda smo ispisali prazninu koja
samo dva mjesta svaki put.

67
00:03:35,030 --> 00:03:38,080
I u pravu piramidu, mi ispisati
potreban broj hashes.

68
00:03:38,080 --> 00:03:41,410
>> Za drugog reda, proveli smo
isti točan postupak.

69
00:03:41,410 --> 00:03:44,510
Tiskamo prostore za lijevo
piramida, nužna količina

70
00:03:44,510 --> 00:03:49,930
hashes, jaz, dva prostora, i
onda raspršivanja za pravom piramide.

71
00:03:49,930 --> 00:03:52,490
>> Ajmo uhvatiti u koštac uzorak
za lijevi piramide.

72
00:03:52,490 --> 00:03:55,660
Da jesam, za potrebe
ovog primjera, visine

73
00:03:55,660 --> 00:03:58,790
osam zatražio od strane
korisnik, onda je moj prvi red

74
00:03:58,790 --> 00:04:01,020
će imati jednu mljeveno meso i sedam mjesta.

75
00:04:01,020 --> 00:04:03,860
Moj drugi red bi
Dva raspršivanja šest mjesta.

76
00:04:03,860 --> 00:04:06,749
Treći red, tri raspršivanja pet mjesta.

77
00:04:06,749 --> 00:04:09,040
Vjerojatno možete to učiniti
sami za visine od osam

78
00:04:09,040 --> 00:04:13,470
i odrediti za svaki red koliko
raspršivanja i koliko prostora je potrebno.

79
00:04:13,470 --> 00:04:16,209
No, ono što želimo učiniti je
želimo apstraktno to.

80
00:04:16,209 --> 00:04:22,660
Zato vas molim za bilo tko zna red, koliko
raspršivanja i koliko mjesta trebamo?

81
00:04:22,660 --> 00:04:25,410
>> Sada, kao što se utvrdilo
Uzorak na koliko hashes

82
00:04:25,410 --> 00:04:29,920
i koliko prostora je potrebno za
bilo n-ti red za određenu visinu,

83
00:04:29,920 --> 00:04:32,910
sjećam se da budu oprezni
kako ste indeksiranje.

84
00:04:32,910 --> 00:04:37,160
Što mislim je to da se u svakodnevnom
život je većina nas početi računati po jedan.

85
00:04:37,160 --> 00:04:39,680
Dakle, prvi red bi bio broj jedan.

86
00:04:39,680 --> 00:04:43,620
I drugi red bi bio red
broj dva, tako dalje i tako dalje.

87
00:04:43,620 --> 00:04:47,620
>> No, u računalnih znanosti i
CS50, mi smo nula klauzulom.

88
00:04:47,620 --> 00:04:50,750
Tako smo zapravo početi brojati od nule.

89
00:04:50,750 --> 00:04:54,020
Dakle, prvi red bi
biti red broj nula.

90
00:04:54,020 --> 00:04:56,640
I drugi red
bio bi red broj jedan.

91
00:04:56,640 --> 00:05:02,510
Dakle, ako sam imao visinu od osam za
moje piramide, tada je zadnji vrijednost n

92
00:05:02,510 --> 00:05:05,850
zapravo bi biti sedam, a ne osam.

93
00:05:05,850 --> 00:05:07,010
>> Dakle, budite oprezni o tome.

94
00:05:07,010 --> 00:05:10,750
I imajte na umu kad ste određivanju
Vaš uzorak je li vaš nula indeksiranih

95
00:05:10,750 --> 00:05:12,360
ili jedan indeksiranih

96
00:05:12,360 --> 00:05:13,070
>> U REDU.

97
00:05:13,070 --> 00:05:15,380
Tako da sada imamo
Obrazac za lijevi piramide,

98
00:05:15,380 --> 00:05:18,650
moramo utvrditi
uzorak za jaz.

99
00:05:18,650 --> 00:05:20,480
Srećom, to je stvarno lako.

100
00:05:20,480 --> 00:05:22,690
To je samo uvijek dva mjesta.

101
00:05:22,690 --> 00:05:25,240
>> Dakle, sada smo prešli na pravom uzorak.

102
00:05:25,240 --> 00:05:27,220
Prvi red će imati jedan mljeveno meso.

103
00:05:27,220 --> 00:05:28,640
Drugi red, dva.

104
00:05:28,640 --> 00:05:29,530
Treći red, tri.

105
00:05:29,530 --> 00:05:30,790
Tako dalje i tako dalje.

106
00:05:30,790 --> 00:05:35,540
Pa opet, odrediti za bilo apstraktno
n i bilo kojoj visini koliko raspršivanja

107
00:05:35,540 --> 00:05:38,810
i koliko mjesta
svaki red bi trebao imati.

108
00:05:38,810 --> 00:05:39,700
>> U REDU.

109
00:05:39,700 --> 00:05:45,050
Tako znamo da je za svaku zaredom
potrebno je provesti neki proces.

110
00:05:45,050 --> 00:05:46,600
Kako ćemo to učiniti?

111
00:05:46,600 --> 00:05:50,440
Pa, mi koristimo za petlje konstrukt,
Sastoji se od inicijalizacije,

112
00:05:50,440 --> 00:05:52,310
stanje i ažuriranje.

113
00:05:52,310 --> 00:05:54,830
Za mogu koristiti petlje
ponoviti procesa.

114
00:05:54,830 --> 00:05:59,610
>> Tako kažu Želim pozdraviti,
Svijet 50 puta, a zatim moj for petlje

115
00:05:59,610 --> 00:06:03,510
će izgledati nešto poput ovoga, gdje je
Ja inicijalizirati svoju varijablu na nulu.

116
00:06:03,510 --> 00:06:06,200
Uvjet je da je i manje od 50 godina.

117
00:06:06,200 --> 00:06:09,670
A onda se ažuriranje da to
koracima po jedan svaki put.

118
00:06:09,670 --> 00:06:14,700
Pa što će to učiniti da bi se
ispisati Hello, World 50 puta zaredom.

119
00:06:14,700 --> 00:06:18,080
>> Sada, recimo ja sam htjela ponoviti
više visine piramide.

120
00:06:18,080 --> 00:06:21,560
Tada umjesto tvrdog kodiranja
neke vrijednosti u stanju,

121
00:06:21,560 --> 00:06:23,280
Ja samo koristiti podesivu visinu.

122
00:06:23,280 --> 00:06:27,180
Pa što će to učiniti je mijenjajte
više visine svakog reda.

123
00:06:27,180 --> 00:06:30,280
I ja mogu učiniti nešto iznutra
tijela te petlje.

124
00:06:30,280 --> 00:06:32,710
>> Što želimo napraviti
unutar tijela petlje?

125
00:06:32,710 --> 00:06:36,550
Pa, kao što smo prije navedeno, želimo
Za ispis prostore i hash

126
00:06:36,550 --> 00:06:40,730
za lijevi piramide, a zatim ispisati
dva razmaka, a zatim ispisati hash vrijednosti.

127
00:06:40,730 --> 00:06:42,500
Dakle, već smo shvatili da je van.

128
00:06:42,500 --> 00:06:45,670
Tako možemo početi popuniti
u našem programu puno više.

129
00:06:45,670 --> 00:06:49,850
>> Evo ja imati vanjski za petlje da
iterira preko svakog reda u piramidi.

130
00:06:49,850 --> 00:06:53,340
A unutar tog tijela idem
ispisati prostore u više navrata,

131
00:06:53,340 --> 00:06:56,860
hashes u više navrata, a zatim razmak,
a zatim hashes za pravu piramidu,

132
00:06:56,860 --> 00:07:00,440
a onda, konačno, nova
linija za početak sljedećeg retka.

133
00:07:00,440 --> 00:07:02,860
>> Uz to, mi smo to zatraži
korisnik za unos.

134
00:07:02,860 --> 00:07:04,510
Napravili smo sigurni da je valjana.

135
00:07:04,510 --> 00:07:06,280
A onda smo izvučeni piramidu.

136
00:07:06,280 --> 00:07:09,540
Dakle, Mario uspješno
popeti se na piramidu.

137
00:07:09,540 --> 00:07:10,970
>> Moje ime je Zamyla.

138
00:07:10,970 --> 00:07:13,840
A to je CS50.

139
00:07:13,840 --> 00:07:15,419

