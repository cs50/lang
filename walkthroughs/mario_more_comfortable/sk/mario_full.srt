1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA Chan: Je to-me, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Dnes budeme realizovať
Mario, kde čerpáme Mario

4
00:00:06,950 --> 00:00:10,730
plná pyramída pre neho preskočiť.

5
00:00:10,730 --> 00:00:14,430
Poďme rozobrať
čiastkové úlohy tohto problému.

6
00:00:14,430 --> 00:00:17,930
>> Po prvé, chceme vyzvať užívateľa
pre výšku pyramídy.

7
00:00:17,930 --> 00:00:20,510
A potom chceme, aby sa ubezpečil,
že tento vstup je platný.

8
00:00:20,510 --> 00:00:23,280
A potom budeme
chcete nakresliť pyramídy.

9
00:00:23,280 --> 00:00:26,850
>> Takže poďme hovoriť o dopytovania
a overovanie vstup užívateľa.

10
00:00:26,850 --> 00:00:29,920
Mohlo by to vyzerať
to, do-while, že

11
00:00:29,920 --> 00:00:33,250
vyzve užívateľa k
integer a potom len opakuje

12
00:00:33,250 --> 00:00:35,700
v prípade, že číslo je neplatné.

13
00:00:35,700 --> 00:00:38,220
Takže to, čo by mala byť táto podmienka?

14
00:00:38,220 --> 00:00:40,630
>> K tomu, vráťme
špecifikáciu.

15
00:00:40,630 --> 00:00:46,240
No, spec nám hovorí, že akýkoľvek platný
výška bude medzi 0 a 23,

16
00:00:46,240 --> 00:00:47,350
inclusive.

17
00:00:47,350 --> 00:00:51,400
A tak, že znamená, že akékoľvek neplatné
výška bude menší ako 0

18
00:00:51,400 --> 00:00:53,840
alebo viac ako 23.

19
00:00:53,840 --> 00:00:57,220
>> Takže teraz, že máme túto informáciu,
Poďme vytvoriť našu kondíciu.

20
00:00:57,220 --> 00:00:59,230
Ale musíme byť opatrní,
pretože teraz máme

21
00:00:59,230 --> 00:01:02,130
Dva Booleans, ktoré chceme hodnotiť.

22
00:01:02,130 --> 00:01:04,150
>> Tu som vám poskytol
s pravdivostnú tabuľky.

23
00:01:04,150 --> 00:01:07,520
To nám umožní prijať dva
Booleans, Boolean jedna a dve.

24
00:01:07,520 --> 00:01:13,600
A môžeme hodnotiť ani bool1
a bool2 alebo bool1 alebo bool2.

25
00:01:13,600 --> 00:01:17,390
>> Takže aký je rozdiel
a medzi nimi a alebo?

26
00:01:17,390 --> 00:01:21,810
No, bool1 a bool2 bude
vyhodnotí na true práve vtedy,

27
00:01:21,810 --> 00:01:25,680
ak sú splnené obe Booleans,
vzhľadom k tomu, alebo prevádzku

28
00:01:25,680 --> 00:01:30,190
bude platiť, ak sa niektorá zo
že Booleans alebo obe sú pravdivé.

29
00:01:30,190 --> 00:01:33,110
Takže s tým na mysli,
uvidíme, či môžete prísť na to,

30
00:01:33,110 --> 00:01:37,460
aký by bol vhodný podmienkou
Vaša do-while za neplatnú n

31
00:01:37,460 --> 00:01:38,850
Bude.

32
00:01:38,850 --> 00:01:43,540
>> S tým sme vyzvaní a overené
Užívateľ pre výšku pyramídy

33
00:01:43,540 --> 00:01:44,550
že chcú.

34
00:01:44,550 --> 00:01:47,740
Takže teraz je to na nás
nakresliť pyramídy.

35
00:01:47,740 --> 00:01:50,520
Plná pyramída pre toto
Problém bude vyzerať trochu

36
00:01:50,520 --> 00:01:56,340
ako je tento, kde máme ľavej pyramídy,
niektoré medzery, a potom hneď pyramídy.

37
00:01:56,340 --> 00:01:58,630
Takže poďme rozčleniť tento systém trochu.

38
00:01:58,630 --> 00:02:03,510
>> Ak by som ísť do môjho textového editora, tu som
ťahané nám pyramídu zarovnané doľava.

39
00:02:03,510 --> 00:02:05,160
Ale to nebude robiť.

40
00:02:05,160 --> 00:02:10,139
To, čo chceme urobiť, je chceme
Vytvorenie zarovnaný vpravo pyramídu ako prvý.

41
00:02:10,139 --> 00:02:13,580
Tak, ako to urobiť, aby stačí stlačiť
moja hashes pozdĺž na stranu,

42
00:02:13,580 --> 00:02:18,240
Práve idem dať niektoré znaky
medzi tým, práve týchto bodiek.

43
00:02:18,240 --> 00:02:22,560
Potom idem dať dva na
Nasledujúci riadok a jeden na tomto riadku.

44
00:02:22,560 --> 00:02:26,070
A tak tu mám
zarovnaný vpravo pyramídy.

45
00:02:26,070 --> 00:02:28,540
>> Za to, že budem
vrátiť do hornej rade

46
00:02:28,540 --> 00:02:33,930
a dať do medzery, ktorá
je, podľa špecifikácie, dve medzery.

47
00:02:33,930 --> 00:02:37,680
Potom idem k vyplneniu
druhej strane pyramídy.

48
00:02:37,680 --> 00:02:42,030
Chystám sa ísť do druhého radu, písať
Dva priestory pre medzeru a potom dva

49
00:02:42,030 --> 00:02:42,920
hash.

50
00:02:42,920 --> 00:02:47,020
Späť na treťom rade, dve medzery
Pre medzery a tri hash.

51
00:02:47,020 --> 00:02:51,480
A na konci, dve medzery
pre medzeru a štyri hash.

52
00:02:51,480 --> 00:02:54,400
Takže to je to, čo full
pyramída bude vyzerať.

53
00:02:54,400 --> 00:02:57,260
>> Samozrejme, že nechceme
Tieto bodky v ceste.

54
00:02:57,260 --> 00:03:01,220
Takže budeme nahradiť tieto
body tým, že niektoré medzery.

55
00:03:01,220 --> 00:03:03,720
Jedna, dve, tri na prvom riadku.

56
00:03:03,720 --> 00:03:05,650
Jedna, dva na druhom.

57
00:03:05,650 --> 00:03:08,200
A jeden na treťom riadku.

58
00:03:08,200 --> 00:03:12,060
Tak toto je to, čo budeme robiť, keď my
chcel len urobiť plnú pyramídu,

59
00:03:12,060 --> 00:03:13,700
hovoriť, v našom textovom editore.

60
00:03:13,700 --> 00:03:15,860
>> Takže berme to,
pochopenie vzory,

61
00:03:15,860 --> 00:03:19,870
a previesť ju do istej pseudokódu.

62
00:03:19,870 --> 00:03:24,500
Pre každý riadok pyramídy, chceme
vytlačiť ľavý pyramídu a potom

63
00:03:24,500 --> 00:03:26,580
medzera a potom pravé pyramída.

64
00:03:26,580 --> 00:03:30,260
Pre ľavú pyramídy, tlačíme
Potrebný objem priestorov,

65
00:03:30,260 --> 00:03:31,740
nasleduje hash kódy.

66
00:03:31,740 --> 00:03:35,030
Potom sme vytlačiť schodok, ktorý
je len dva priestory zakaždým.

67
00:03:35,030 --> 00:03:38,080
A v správnom pyramídy, tlačíme
potrebný počet hash.

68
00:03:38,080 --> 00:03:41,410
>> Po druhé rade, sme vykonali
rovnaký presný proces.

69
00:03:41,410 --> 00:03:44,510
Tlačíme priestory pre ľavý
pyramída, požadovaná čiastka

70
00:03:44,510 --> 00:03:49,930
Hash, medzery, dvoma priestormi a
Potom sa hash pre pravú pyramídu.

71
00:03:49,930 --> 00:03:52,490
>> Poďme riešiť vzor
pre ľavé pyramídy.

72
00:03:52,490 --> 00:03:55,660
Keby som mal na účely
tohto príkladu, výška

73
00:03:55,660 --> 00:03:58,790
z ôsmich, o ktoré požiadal
Užívateľ potom moja prvá riadok

74
00:03:58,790 --> 00:04:01,020
bude mať jednu hash a sedem miest.

75
00:04:01,020 --> 00:04:03,860
Môj druhý riadok by mal
dve hodnoty hash, šesť priestory.

76
00:04:03,860 --> 00:04:06,749
Tretí rad, tri, päť hashes priestory.

77
00:04:06,749 --> 00:04:09,040
Môžete Pravdepodobne to urobiť
sami o výške ôsmich

78
00:04:09,040 --> 00:04:13,470
a určenie, pre každý riadok, koľko
hash a koľko miesta budete potrebovať.

79
00:04:13,470 --> 00:04:16,209
Ale to, čo chceme urobiť, je
Ak chceme abstraktu.

80
00:04:16,209 --> 00:04:22,660
Tak som vás požiadať o akékoľvek n-tej riadky koľko
hash a koľko miesta potrebujeme?

81
00:04:22,660 --> 00:04:25,410
>> Teraz, ako si určiť
vzor pre to, ako veľa hashe

82
00:04:25,410 --> 00:04:29,920
a koľko miesta budete potrebovať pre
akékoľvek n-tý riadok pre danú výšku,

83
00:04:29,920 --> 00:04:32,910
pamätať si dávať pozor
o tom, ako ste indexovanie.

84
00:04:32,910 --> 00:04:37,160
Čo tým chcem povedať je to, že v každodenných
život väčšina z nás začať počítať o jednu.

85
00:04:37,160 --> 00:04:39,680
Takže prvom rade by bolo číslo jedna.

86
00:04:39,680 --> 00:04:43,620
A v druhom rade by riadok
číslo dva, a tak ďalej a tak ďalej.

87
00:04:43,620 --> 00:04:47,620
>> Ale v oblasti počítačovej vedy a
CS50 sme zero-indexované.

88
00:04:47,620 --> 00:04:50,750
Takže sme vlastne začať počítať od nuly.

89
00:04:50,750 --> 00:04:54,020
Takže prvý rade by
byť riadok číslo nula.

90
00:04:54,020 --> 00:04:56,640
A v druhom rade
by riadok číslo jedna.

91
00:04:56,640 --> 00:05:02,510
Takže keby som mal výšku osem pre
môj pyramídy, potom posledná hodnota n

92
00:05:02,510 --> 00:05:05,850
by v skutočnosti bolo sedem a osem nie.

93
00:05:05,850 --> 00:05:07,010
>> Tak dávať pozor na to.

94
00:05:07,010 --> 00:05:10,750
A byť si vedomý, keď ste stanovenie
Váš vzor, ​​či je váš zero-indexované

95
00:05:10,750 --> 00:05:12,360
alebo jeden-indexované

96
00:05:12,360 --> 00:05:13,070
>> OK.

97
00:05:13,070 --> 00:05:15,380
Takže teraz, že máme
vzor pre ľavú pyramídy,

98
00:05:15,380 --> 00:05:18,650
musíme zistiť,
vzor pre medzery.

99
00:05:18,650 --> 00:05:20,480
Našťastie je to naozaj jednoduché.

100
00:05:20,480 --> 00:05:22,690
Je to len vždy dva priestory.

101
00:05:22,690 --> 00:05:25,240
>> Takže teraz budeme pokračovať do pravého vzoru.

102
00:05:25,240 --> 00:05:27,220
Prvý riadok bude mať jeden hash.

103
00:05:27,220 --> 00:05:28,640
Druhý riadok, dva.

104
00:05:28,640 --> 00:05:29,530
Tretí rad, tri.

105
00:05:29,530 --> 00:05:30,790
A tak ďalej a tak ďalej.

106
00:05:30,790 --> 00:05:35,540
Takže znovu, stanoviť pre všetky abstraktné
n a akákoľvek výška koľko hash

107
00:05:35,540 --> 00:05:38,810
a koľko miest
Každý riadok by mal mať.

108
00:05:38,810 --> 00:05:39,700
>> OK.

109
00:05:39,700 --> 00:05:45,050
Takže vieme, že pre každú sebou sme
je potrebné vykonať nejakú proces.

110
00:05:45,050 --> 00:05:46,600
Ako to urobíme?

111
00:05:46,600 --> 00:05:50,440
No, my používame pre konštrukciu cyklu,
pozostáva z inicializácia,

112
00:05:50,440 --> 00:05:52,310
podmienka, a aktualizácie.

113
00:05:52,310 --> 00:05:54,830
Pre môžu byť použité slučky
opakovať procesy.

114
00:05:54,830 --> 00:05:59,610
>> Takže povedať, chcem, aby to pozdraviť,
world 50-krát, potom my pre sláčiky

115
00:05:59,610 --> 00:06:03,510
bude vyzerať nejako takto, kde
Aj inicializovať svoj premennú na nulu.

116
00:06:03,510 --> 00:06:06,200
Podmienkou je, že aj je nižšia ako 50 ° C.

117
00:06:06,200 --> 00:06:09,670
A potom aktualizácie je to tak
prírastkov podľa jedného zakaždým.

118
00:06:09,670 --> 00:06:14,700
Takže to, čo by to urobiť, by bolo
vytlačiť Hello, world 50-krát v rade.

119
00:06:14,700 --> 00:06:18,080
>> Teraz, že som chcel iterácii
cez výšku pyramídy.

120
00:06:18,080 --> 00:06:21,560
Potom miesto pevného kódovania
niektoré hodnoty v stave,

121
00:06:21,560 --> 00:06:23,280
Len som použiť premennú výšku.

122
00:06:23,280 --> 00:06:27,180
Tak čo to bude robiť, je ITERATE
cez výšku každého riadku.

123
00:06:27,180 --> 00:06:30,280
A môžem robiť niečo vnútri
telesa tejto slučky.

124
00:06:30,280 --> 00:06:32,710
>> Čo chceme urobiť
vnútri tela slučky?

125
00:06:32,710 --> 00:06:36,550
No, ako bolo uvedené vyššie, chceme
tlačiť priestor a hodnoty hash

126
00:06:36,550 --> 00:06:40,730
pre ľavú pyramídy a potom Tlač
dve medzery a vytlačiť hodnoty hash.

127
00:06:40,730 --> 00:06:42,500
Takže sme už prišiel na to von.

128
00:06:42,500 --> 00:06:45,670
Takže môžeme začať vypĺňať
v našom programe oveľa viac.

129
00:06:45,670 --> 00:06:49,850
>> Tu mám vonkajšie pre sláčiky, ktorá sa
iteruje cez každý riadok v pyramíde.

130
00:06:49,850 --> 00:06:53,340
A vo vnútri tohto orgánu Idem
opakovane tlače medzery,

131
00:06:53,340 --> 00:06:56,860
Opakovane hashe, a potom medzera,
a potom hash pre pravú pyramídu,

132
00:06:56,860 --> 00:07:00,440
a potom, konečne, nový
linka spustiť ďalší riadok.

133
00:07:00,440 --> 00:07:02,860
>> S tým sme vyzvaní
užívateľ pre vstup.

134
00:07:02,860 --> 00:07:04,510
Urobili sme istí, že je to platné.

135
00:07:04,510 --> 00:07:06,280
A potom sme nakreslil pyramídu.

136
00:07:06,280 --> 00:07:09,540
Takže Mario môže úspešne
liezť na pyramídu.

137
00:07:09,540 --> 00:07:10,970
>> Volám sa Zamyla.

138
00:07:10,970 --> 00:07:13,840
A to je CS50.

139
00:07:13,840 --> 00:07:15,419

