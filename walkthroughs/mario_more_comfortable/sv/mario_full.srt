1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA CHAN: Det är en-me, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Idag ska vi genomföra
Mario, där vi drar Mario

4
00:00:06,950 --> 00:00:10,730
en fullständig pyramid för honom att hoppa över.

5
00:00:10,730 --> 00:00:14,430
Låt oss bryta ner
deluppgifter för det här problemet.

6
00:00:14,430 --> 00:00:17,930
>> Först vill vi uppmana användaren
för höjden på pyramiden.

7
00:00:17,930 --> 00:00:20,510
Och sedan vill vi se till att
att den ingången är giltig.

8
00:00:20,510 --> 00:00:23,280
Och sedan ska vi
vill rita pyramiden.

9
00:00:23,280 --> 00:00:26,850
>> Så låt oss tala om uppmaning
och validera användarinmatning.

10
00:00:26,850 --> 00:00:29,920
Det kan se ut ungefär som
detta, en gör-while-slinga som

11
00:00:29,920 --> 00:00:33,250
uppmanar användaren för en
heltal och sedan bara upprepningar

12
00:00:33,250 --> 00:00:35,700
om det heltal är ogiltig.

13
00:00:35,700 --> 00:00:38,220
Så vad bör detta tillstånd vara?

14
00:00:38,220 --> 00:00:40,630
>> För detta, låt oss gå tillbaka
specifikationen.

15
00:00:40,630 --> 00:00:46,240
Tja, berättar spec oss att något giltigt
höjd kommer att vara mellan 0 och 23,

16
00:00:46,240 --> 00:00:47,350
inclusive.

17
00:00:47,350 --> 00:00:51,400
Så då det betyder att alla ogiltiga
höjd kommer att vara mindre än 0

18
00:00:51,400 --> 00:00:53,840
eller mer än 23.

19
00:00:53,840 --> 00:00:57,220
>> Så nu när vi har den här informationen,
Låt oss utforma vårt tillstånd.

20
00:00:57,220 --> 00:00:59,230
Men vi måste vara försiktiga,
för nu har vi

21
00:00:59,230 --> 00:01:02,130
två Booleans som vi vill utvärdera.

22
00:01:02,130 --> 00:01:04,150
>> Här har jag förutsatt att du
med en sanningstabell.

23
00:01:04,150 --> 00:01:07,520
Detta gör det möjligt för oss att ta två
Booleans, Boolean ett och två.

24
00:01:07,520 --> 00:01:13,600
Och vi kan utvärdera antingen bool1
och bool2 eller bool1 eller bool2.

25
00:01:13,600 --> 00:01:17,390
>> Så vad är skillnaden
mellan och och eller?

26
00:01:17,390 --> 00:01:21,810
Tja, bool1 och bool2 kommer
utvärderas till sant om och endast

27
00:01:21,810 --> 00:01:25,680
om båda Booleans är sanna,
medan eller drift

28
00:01:25,680 --> 00:01:30,190
kommer att vara sant om antingen en av
de Booleans eller båda är sanna.

29
00:01:30,190 --> 00:01:33,110
Så med detta i åtanke,
se om du kan räkna ut

30
00:01:33,110 --> 00:01:37,460
vad den lämpliga villkor för
din gör-while-slinga för en ogiltig n

31
00:01:37,460 --> 00:01:38,850
kommer att bli.

32
00:01:38,850 --> 00:01:43,540
>> Därmed har vi uppmanas och valideras
användaren för höjden på pyramiden

33
00:01:43,540 --> 00:01:44,550
som de vill.

34
00:01:44,550 --> 00:01:47,740
Så nu är det upp till oss
att rita pyramiden.

35
00:01:47,740 --> 00:01:50,520
Den fullständiga pyramid för detta
Problemet kommer att se lite

36
00:01:50,520 --> 00:01:56,340
så här, där vi har en vänster pyramid,
några gap, och sedan en rätt pyramid.

37
00:01:56,340 --> 00:01:58,630
Så låt oss bryta ner det lite.

38
00:01:58,630 --> 00:02:03,510
>> Om jag går till min textredigerare, här har jag
dragen oss en vänsterjusterad pyramid.

39
00:02:03,510 --> 00:02:05,160
Men som inte kommer att göra.

40
00:02:05,160 --> 00:02:10,139
Vad vi vill göra är att vi vill
skapa en högerjusterad pyramid först.

41
00:02:10,139 --> 00:02:13,580
Så för att göra detta, att bara trycka
mina hashes längs åt sidan,

42
00:02:13,580 --> 00:02:18,240
Jag kommer bara att ställa några tecken
däremellan, just dessa punkter.

43
00:02:18,240 --> 00:02:22,560
Då kommer jag att sätta två på
nästa rad, och en på den linjen.

44
00:02:22,560 --> 00:02:26,070
Och så här har jag en
högerjusterad pyramid.

45
00:02:26,070 --> 00:02:28,540
>> Efter det kommer jag att
gå tillbaka till den översta raden

46
00:02:28,540 --> 00:02:33,930
och sätta i gapet, som
är, per spec, två utrymmen.

47
00:02:33,930 --> 00:02:37,680
Då kommer jag att fylla i
andra sidan av pyramiden.

48
00:02:37,680 --> 00:02:42,030
Jag kommer att gå till den andra raden, skriver
två utrymmen för gapet och sedan två

49
00:02:42,030 --> 00:02:42,920
hashar.

50
00:02:42,920 --> 00:02:47,020
Tillbaka till den tredje raden, två utrymmen
för gapet och tre hashar.

51
00:02:47,020 --> 00:02:51,480
Och i slutet, två utrymmen
för gapet och fyra hashar.

52
00:02:51,480 --> 00:02:54,400
Så det är vad en fullständig
pyramid kommer att se ut.

53
00:02:54,400 --> 00:02:57,260
>> Naturligtvis vill vi inte
dessa punkter i vägen.

54
00:02:57,260 --> 00:03:01,220
Så vi kommer att ersätta dessa
punkter genom att sätta vissa utrymmen i.

55
00:03:01,220 --> 00:03:03,720
Ett, två, tre på första raden.

56
00:03:03,720 --> 00:03:05,650
Ett, två på den andra.

57
00:03:05,650 --> 00:03:08,200
Och en på tredje raden.

58
00:03:08,200 --> 00:03:12,060
Så detta är vad vi skulle göra om vi
ville bara göra en fullständig pyramid,

59
00:03:12,060 --> 00:03:13,700
säga i vår textredigerare.

60
00:03:13,700 --> 00:03:15,860
>> Så låt oss ta det här,
förstå mönstren,

61
00:03:15,860 --> 00:03:19,870
och konvertera det till någon pseudokod.

62
00:03:19,870 --> 00:03:24,500
För varje rad av pyramiden, vi vill
att skriva ut den vänstra pyramid och sedan

63
00:03:24,500 --> 00:03:26,580
spalten och sedan den högra pyramiden.

64
00:03:26,580 --> 00:03:30,260
För vänster pyramiden, vi ut
erforderlig mängd utrymmen,

65
00:03:30,260 --> 00:03:31,740
följt av kontrollsummor.

66
00:03:31,740 --> 00:03:35,030
Då kan vi skriva ut gapet, som
är bara två platser varje gång.

67
00:03:35,030 --> 00:03:38,080
Och på rätt pyramiden, vi ut
erforderligt antal hashar.

68
00:03:38,080 --> 00:03:41,410
>> För den andra raden, genomförde vi
exakt samma process.

69
00:03:41,410 --> 00:03:44,510
Vi trycker utrymmen för vänster
pyramid, den erforderliga mängden

70
00:03:44,510 --> 00:03:49,930
av hashes, gapet, två utrymmen, och
då kontrollsummor för rätt pyramiden.

71
00:03:49,930 --> 00:03:52,490
>> Låt oss ta itu med mönster
för den vänstra pyramiden.

72
00:03:52,490 --> 00:03:55,660
Om jag hade, för ändamål
i detta exempel, en höjd

73
00:03:55,660 --> 00:03:58,790
av åtta begärts av
användare, då min första raden

74
00:03:58,790 --> 00:04:01,020
skulle ha ett hash och sju utrymmen.

75
00:04:01,020 --> 00:04:03,860
Min andra raden skulle ha
två hashes, sex utrymmen.

76
00:04:03,860 --> 00:04:06,749
Tredje raden, tre hash, fem utrymmen.

77
00:04:06,749 --> 00:04:09,040
Du kan förmodligen göra detta
själv för en höjd av åtta

78
00:04:09,040 --> 00:04:13,470
och bestämma för varje rad hur många
hashes och hur många platser du behöver.

79
00:04:13,470 --> 00:04:16,209
Men vad vi vill göra är
vi vill abstrakt det.

80
00:04:16,209 --> 00:04:22,660
Så jag ber er om någon n: te raden, hur många
hashes och hur många platser behöver vi?

81
00:04:22,660 --> 00:04:25,410
>> Nu, när du bestämmer
mönster för hur många hashes

82
00:04:25,410 --> 00:04:29,920
och hur många platser du behöver för
någon n: te raden för en given höjd,

83
00:04:29,920 --> 00:04:32,910
kom ihåg att vara försiktig
hur du indexerar.

84
00:04:32,910 --> 00:04:37,160
Vad jag menar med detta är att i vardagen
liv de flesta av oss börja räkna med en.

85
00:04:37,160 --> 00:04:39,680
Så den första raden skulle vara nummer ett.

86
00:04:39,680 --> 00:04:43,620
Och den andra raden skulle vara rad
nummer två, så vidare och så vidare.

87
00:04:43,620 --> 00:04:47,620
>> Men i datavetenskap och
CS50, vi är noll-indexeras.

88
00:04:47,620 --> 00:04:50,750
Så vi faktiskt börja räkna på noll.

89
00:04:50,750 --> 00:04:54,020
Så den första raden skulle
vara radnummer noll.

90
00:04:54,020 --> 00:04:56,640
Och den andra raden
skulle vara rad nummer ett.

91
00:04:56,640 --> 00:05:02,510
Så om jag hade en höjd av åtta för
min pyramid, då det sista värdet på n

92
00:05:02,510 --> 00:05:05,850
skulle faktiskt vara sju och inte åtta.

93
00:05:05,850 --> 00:05:07,010
>> Så var försiktig om detta.

94
00:05:07,010 --> 00:05:10,750
Och vara medveten om när du bestämma
mönstret om din nollindex

95
00:05:10,750 --> 00:05:12,360
eller en-indexerade

96
00:05:12,360 --> 00:05:13,070
>> OK.

97
00:05:13,070 --> 00:05:15,380
Så nu när vi har
mönstret för vänster pyramid,

98
00:05:15,380 --> 00:05:18,650
Vi måste bestämma
mönstret för gapet.

99
00:05:18,650 --> 00:05:20,480
Lyckligtvis är detta verkligen lätt.

100
00:05:20,480 --> 00:05:22,690
Det är bara alltid två utrymmen.

101
00:05:22,690 --> 00:05:25,240
>> Så nu går vi vidare till rätt mönster.

102
00:05:25,240 --> 00:05:27,220
Den första raden kommer att ha en hash.

103
00:05:27,220 --> 00:05:28,640
Den andra raden, två.

104
00:05:28,640 --> 00:05:29,530
Tredje raden, tre.

105
00:05:29,530 --> 00:05:30,790
Och så vidare.

106
00:05:30,790 --> 00:05:35,540
Så återigen, bestämma något abstrakt
n och valfri höjd hur många hash

107
00:05:35,540 --> 00:05:38,810
och hur många utrymmen
varje rad ska ha.

108
00:05:38,810 --> 00:05:39,700
>> OK.

109
00:05:39,700 --> 00:05:45,050
Så vi vet att för varje rad som vi
behöver genomföra någon process.

110
00:05:45,050 --> 00:05:46,600
Hur gör vi det?

111
00:05:46,600 --> 00:05:50,440
Tja, använder vi för loop-konstruktionen,
består av en initiering,

112
00:05:50,440 --> 00:05:52,310
ett tillstånd, och en uppdatering.

113
00:05:52,310 --> 00:05:54,830
För loopar kan användas
att upprepa processerna.

114
00:05:54,830 --> 00:05:59,610
>> Så säger jag vill att det ska säga hej,
värld 50 gånger, då min för slinga

115
00:05:59,610 --> 00:06:03,510
skulle se ut så här, där
Jag initiera min variabel till noll.

116
00:06:03,510 --> 00:06:06,200
Villkoret är att k är mindre än 50.

117
00:06:06,200 --> 00:06:09,670
Och då uppdateringen är att det
ökar med ett varje gång.

118
00:06:09,670 --> 00:06:14,700
Så vad detta skulle göra vore att
skriva hej, världens 50 gånger i rad.

119
00:06:14,700 --> 00:06:18,080
>> Nu säger jag ville iterera
över höjden av pyramiden.

120
00:06:18,080 --> 00:06:21,560
Sedan i stället för hårdkodning
något värde i det skick,

121
00:06:21,560 --> 00:06:23,280
Jag använder bara varierande höjd.

122
00:06:23,280 --> 00:06:27,180
Vad detta kommer att göra är iterate
över höjden varje rad.

123
00:06:27,180 --> 00:06:30,280
Och jag kan göra något inuti
i kroppen av denna slinga.

124
00:06:30,280 --> 00:06:32,710
>> Vad vill vi göra
inuti kroppen av slingan?

125
00:06:32,710 --> 00:06:36,550
Tja, som vi angav tidigare, vi vill
att skriva ut utrymmen och kontrollsummor

126
00:06:36,550 --> 00:06:40,730
för vänster pyramiden och sedan skriva ut
två utrymmen och sedan skriva ut kontrollsummor.

127
00:06:40,730 --> 00:06:42,500
Så vi har redan listat ut.

128
00:06:42,500 --> 00:06:45,670
Så vi kan börja fylla
i vårt program mycket mer.

129
00:06:45,670 --> 00:06:49,850
>> Här har jag en yttre för slinga som
itererar över varje rad i pyramiden.

130
00:06:49,850 --> 00:06:53,340
Och i detta organ kommer jag
att skriva ut utrymmen upprepade gånger,

131
00:06:53,340 --> 00:06:56,860
hashes upprepade gånger, och sedan i gapet,
och sedan hashar för rätt pyramiden,

132
00:06:56,860 --> 00:07:00,440
och, slutligen, en ny
linje för att starta nästa rad.

133
00:07:00,440 --> 00:07:02,860
>> Därmed har vi uppmanas
användaren för inmatning.

134
00:07:02,860 --> 00:07:04,510
Vi har sett till att det är giltigt.

135
00:07:04,510 --> 00:07:06,280
Och sedan har vi dragit pyramiden.

136
00:07:06,280 --> 00:07:09,540
Så Mario kan framgångsrikt
klättra pyramiden.

137
00:07:09,540 --> 00:07:10,970
>> Mitt namn är Zamyla.

138
00:07:10,970 --> 00:07:13,840
Och detta är CS50.

139
00:07:13,840 --> 00:07:15,419

