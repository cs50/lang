1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA CHAN: Es ist ein-me, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Heute werden wir zu implementieren
Mario, wo wir Mario ziehen

4
00:00:06,950 --> 00:00:10,730
eine vollständige Pyramide für ihn zu springen.

5
00:00:10,730 --> 00:00:14,430
Lassen Sie uns brechen die
Unteraufgaben für dieses Problem.

6
00:00:14,430 --> 00:00:17,930
>> Erstens wollen wir den Benutzer aufzufordern,
für die Höhe der Pyramide.

7
00:00:17,930 --> 00:00:20,510
Und dann wollen wir sicherstellen,
dass die Eingabe gültig ist.

8
00:00:20,510 --> 00:00:23,280
Und dann werden wir
wollen die Pyramide zu zeichnen.

9
00:00:23,280 --> 00:00:26,850
>> Also lassen Sie uns darüber reden, woraufhin
und Validieren von Benutzereingaben.

10
00:00:26,850 --> 00:00:29,920
Es könnte etwa so aussehen
Dazu wird eine do-while-Schleife,

11
00:00:29,920 --> 00:00:33,250
fordert den Benutzer für eine
repeats ganze Zahl ist und nur dann,

12
00:00:33,250 --> 00:00:35,700
wenn das ganze Zahl ist ungültig.

13
00:00:35,700 --> 00:00:38,220
Also, was sollte diese Bedingung?

14
00:00:38,220 --> 00:00:40,630
>> Dazu gehen wir zurück
der Spezifikation.

15
00:00:40,630 --> 00:00:46,240
Nun, die Spezifikation sagt uns, dass jede gültige
Höhe wird zwischen 0 und 23 ist,

16
00:00:46,240 --> 00:00:47,350
inklusive.

17
00:00:47,350 --> 00:00:51,400
Also dann bedeutet das, dass jeder ungültig
Höhe sein wird, kleiner als 0 ist

18
00:00:51,400 --> 00:00:53,840
oder mehr als 23.

19
00:00:53,840 --> 00:00:57,220
>> So, jetzt haben wir diese Informationen haben,
Lassen Sie uns unseren Zustand entwerfen.

20
00:00:57,220 --> 00:00:59,230
Aber wir müssen vorsichtig sein,
denn jetzt haben wir

21
00:00:59,230 --> 00:01:02,130
zwei Boolesche Werte, die wir auswerten möchten.

22
00:01:02,130 --> 00:01:04,150
>> Hier habe ich Ihnen zur Verfügung gestellten
mit einer Wahrheitstabelle.

23
00:01:04,150 --> 00:01:07,520
Dies ermöglicht es uns, zwei zu nehmen
Boolesche Werte, Boolean eins und zwei.

24
00:01:07,520 --> 00:01:13,600
Und wir können entweder bool1 bewerten
und bool2 oder bool1 oder bool2.

25
00:01:13,600 --> 00:01:17,390
>> Also, was ist der Unterschied
zwischen und und oder?

26
00:01:17,390 --> 00:01:21,810
Nun, bool1 und bool2 werden
bewerten, um wahr, wenn und nur

27
00:01:21,810 --> 00:01:25,680
wenn beide Boolesche Werte sind wahr,
während der oder Betrieb

28
00:01:25,680 --> 00:01:30,190
wird wahr sein, wenn eine von
die Boolesche Werte oder beide sind wahr.

29
00:01:30,190 --> 00:01:33,110
Also das mit im Sinn,
sehen, wenn Sie herausfinden können,

30
00:01:33,110 --> 00:01:37,460
was die entsprechende Bedingung für
Ihre do-while-Schleife für einen ungültigen n

31
00:01:37,460 --> 00:01:38,850
sein wird.

32
00:01:38,850 --> 00:01:43,540
>> Damit haben wir aufgefordert und validiert
der Benutzer für die Höhe der Pyramide

33
00:01:43,540 --> 00:01:44,550
dass sie wollen.

34
00:01:44,550 --> 00:01:47,740
So, jetzt ist es an uns
die Pyramide zu zeichnen.

35
00:01:47,740 --> 00:01:50,520
Die vollständige Pyramide für diese
Problem wird sich ein wenig

36
00:01:50,520 --> 00:01:56,340
wie dieser, wo wir eine linke Pyramide haben,
einige Lücke, und dann eine richtige Pyramide.

37
00:01:56,340 --> 00:01:58,630
Also lassen Sie uns diese brechen ein wenig nach unten.

38
00:01:58,630 --> 00:02:03,510
>> Wenn ich meinen Text-Editor, Bereits da ich habe
gezeichnet uns eine linksbündige Pyramide.

39
00:02:03,510 --> 00:02:05,160
Aber das wird nicht tun.

40
00:02:05,160 --> 00:02:10,139
Was wir wollen, zu tun ist, wir wollen
erstellen Sie zuerst eine rechtsbündige Pyramide.

41
00:02:10,139 --> 00:02:13,580
Also, dies zu tun, nur um Push
meine Hashes entlang zur Seite,

42
00:02:13,580 --> 00:02:18,240
Ich werde nur ein paar Zeichen setzen
dazwischen, nur diesen Punkten.

43
00:02:18,240 --> 00:02:22,560
Dann werde ich zwei auf das zu setzen
nächste Zeile, und eine auf dieser Linie.

44
00:02:22,560 --> 00:02:26,070
Und hier habe ich eine
rechtsbündig Pyramide.

45
00:02:26,070 --> 00:02:28,540
>> Danach werde ich auf
gehen Sie zurück in die obere Reihe

46
00:02:28,540 --> 00:02:33,930
und in den Spalt gelegt, die
ist, gemäß der Spezifikation, zwei Räume.

47
00:02:33,930 --> 00:02:37,680
Dann gehe ich in die zu füllen
anderen Seite der Pyramide.

48
00:02:37,680 --> 00:02:42,030
Ich gehe in die zweite Reihe zu gehen, schreiben
zwei Räume für die Lücke und dann zwei

49
00:02:42,030 --> 00:02:42,920
Hashes.

50
00:02:42,920 --> 00:02:47,020
Zurück zu der dritten Reihe, zwei Räume
für die Lücke und drei Hashes.

51
00:02:47,020 --> 00:02:51,480
Und am Ende, zwei Räume
für die Lücke und vier Hashes.

52
00:02:51,480 --> 00:02:54,400
Also das ist, was eine vollständige
Pyramide aussehen wird.

53
00:02:54,400 --> 00:02:57,260
>> Natürlich wollen wir nicht,
Diese Punkte im Weg.

54
00:02:57,260 --> 00:03:01,220
So werden wir diese zu ersetzen
Punkte, die durch einige Räume in Putten.

55
00:03:01,220 --> 00:03:03,720
Ein, zwei, drei auf der ersten Zeile.

56
00:03:03,720 --> 00:03:05,650
Ein, zwei auf der zweiten.

57
00:03:05,650 --> 00:03:08,200
Und ein in der dritten Zeile.

58
00:03:08,200 --> 00:03:12,060
So ist das, was wir, wenn wir tun würden,
machen nur eine vollständige Pyramide wollte,

59
00:03:12,060 --> 00:03:13,700
sagen, in unserem Texteditor.

60
00:03:13,700 --> 00:03:15,860
>> Also lassen Sie uns dies nehmen,
die Muster zu verstehen,

61
00:03:15,860 --> 00:03:19,870
und wandelt es in einigen Pseudo-Code über.

62
00:03:19,870 --> 00:03:24,500
Für jede Zeile der Pyramide, wollen wir
die linke Pyramide zu drucken und dann

63
00:03:24,500 --> 00:03:26,580
der Zwischenraum und dann die rechte Pyramide.

64
00:03:26,580 --> 00:03:30,260
Für die linke Pyramide, wir drucken
die erforderliche Menge von Räumen,

65
00:03:30,260 --> 00:03:31,740
durch die Hashes gefolgt.

66
00:03:31,740 --> 00:03:35,030
Dann drucken wir die Lücke, die
jedes Mal, Räume ist nur zwei.

67
00:03:35,030 --> 00:03:38,080
Und in der rechten Pyramide, drucken wir
die erforderliche Anzahl von Hashes.

68
00:03:38,080 --> 00:03:41,410
>> Für die zweite Reihe führten wir
exakt das gleiche Verfahren.

69
00:03:41,410 --> 00:03:44,510
Wir drucken die Räume für die linke
Pyramide, die erforderliche Menge

70
00:03:44,510 --> 00:03:49,930
von Hashes, die Lücke, zwei Räume, und
dann die Hashes für die richtige Pyramide.

71
00:03:49,930 --> 00:03:52,490
>> Lassen Sie uns das Muster angehen
für die linke Pyramide.

72
00:03:52,490 --> 00:03:55,660
Wenn ich für die Zwecke
dieses beispielsweise eine Höhe

73
00:03:55,660 --> 00:03:58,790
von acht von der angeforderten
Benutzer, dann meine erste Reihe

74
00:03:58,790 --> 00:04:01,020
würde ein Hash und sieben Räume haben.

75
00:04:01,020 --> 00:04:03,860
Meine zweite Reihe hätte
zwei Hashes, sechs Räume.

76
00:04:03,860 --> 00:04:06,749
Dritte Reihe, drei Hashes, fünf Räume.

77
00:04:06,749 --> 00:04:09,040
Sie können dies wahrscheinlich tun
sich für eine Höhe von acht

78
00:04:09,040 --> 00:04:13,470
und zu bestimmen, für jede Zeile, wie viele
Hashes und wie viele Räume, die Sie benötigen.

79
00:04:13,470 --> 00:04:16,209
Aber was wir tun wollen ist
wir wollen abstrahieren.

80
00:04:16,209 --> 00:04:22,660
Also frage ich Sie für jede n-te Zeile, wie viele
Hashes und wie viele Räume brauchen wir?

81
00:04:22,660 --> 00:04:25,410
>> Jetzt, da Sie die bestimmen
Muster für wie viele Hashes

82
00:04:25,410 --> 00:04:29,920
und wie viele Räume, die Sie brauchen für
jede n-te Zeile für eine bestimmte Höhe,

83
00:04:29,920 --> 00:04:32,910
denken Sie daran, vorsichtig zu sein
wie Sie die Indizierung.

84
00:04:32,910 --> 00:04:37,160
Was ich damit meine ist, dass im Alltag
Leben die meisten von uns durch ein Zählen beginnen.

85
00:04:37,160 --> 00:04:39,680
So ist die erste Reihe wäre die Nummer eins.

86
00:04:39,680 --> 00:04:43,620
Und die zweite Reihe würde Reihe sein
Nummer zwei, so weiter und so fort.

87
00:04:43,620 --> 00:04:47,620
>> Aber in der Informatik und
CS50, wir sind Null-indiziert.

88
00:04:47,620 --> 00:04:50,750
So beginnen wir tatsächlich bei Null zu zählen.

89
00:04:50,750 --> 00:04:54,020
So ist die erste Zeile würde
sein Zeilennummer Null.

90
00:04:54,020 --> 00:04:56,640
Und die zweite Reihe
würde Reihe Nummer eins sein.

91
00:04:56,640 --> 00:05:02,510
Also, wenn ich hatte eine Höhe von acht für
meine Pyramide, wird der letzte Wert von n

92
00:05:02,510 --> 00:05:05,850
wäre eigentlich sieben und nicht acht.

93
00:05:05,850 --> 00:05:07,010
>> Seien Sie also vorsichtig darüber.

94
00:05:07,010 --> 00:05:10,750
Und beachten Sie, wenn Sie die Bestimmung
Ihr Muster, ob Ihre Null indiziert

95
00:05:10,750 --> 00:05:12,360
oder ein indexierte

96
00:05:12,360 --> 00:05:13,070
>> OK.

97
00:05:13,070 --> 00:05:15,380
So, jetzt haben wir die haben
Muster für die linke Pyramide,

98
00:05:15,380 --> 00:05:18,650
wir brauchen, um zu bestimmen
das Muster für die Lücke.

99
00:05:18,650 --> 00:05:20,480
Zum Glück, das ist wirklich einfach.

100
00:05:20,480 --> 00:05:22,690
Es ist nur immer zwei Räume.

101
00:05:22,690 --> 00:05:25,240
>> So, jetzt gehen wir nach rechts Muster.

102
00:05:25,240 --> 00:05:27,220
Die erste Reihe wird ein Hash haben.

103
00:05:27,220 --> 00:05:28,640
Die zweite Reihe, zwei.

104
00:05:28,640 --> 00:05:29,530
Dritte Reihe, die drei.

105
00:05:29,530 --> 00:05:30,790
Und so weiter und so fort.

106
00:05:30,790 --> 00:05:35,540
Also noch einmal, bestimmen für jede abstrakte
n und jede Höhe, wie viele Hashes

107
00:05:35,540 --> 00:05:38,810
und wie viele Räume
jede Zeile sollte.

108
00:05:38,810 --> 00:05:39,700
>> OK.

109
00:05:39,700 --> 00:05:45,050
So wissen wir, dass für jede Zeile wir
müssen einen Prozess durchführen.

110
00:05:45,050 --> 00:05:46,600
Wie machen wir das?

111
00:05:46,600 --> 00:05:50,440
Nun, wir verwenden die for-Schleife-Konstrukt,
bestehend aus einer Initialisierung,

112
00:05:50,440 --> 00:05:52,310
eine Bedingung, und ein Update.

113
00:05:52,310 --> 00:05:54,830
Für Schleifen können verwendet werden,
Prozesse zu wiederholen.

114
00:05:54,830 --> 00:05:59,610
>> Also sage ich es will Hallo zu sagen,
Welt 50-mal, dann meine for-Schleife

115
00:05:59,610 --> 00:06:03,510
würde in etwa so aussehen, wo
Ich initialisieren meine Variable auf Null.

116
00:06:03,510 --> 00:06:06,200
Die Bedingung ist, daß i kleiner ist als 50.

117
00:06:06,200 --> 00:06:09,670
Und dann ist das Update, dass es
um eins erhöht, jedes Mal.

118
00:06:09,670 --> 00:06:14,700
Also, was würde dies wäre zu tun, um
drucken Hallo, Welt 50 Mal in Folge.

119
00:06:14,700 --> 00:06:18,080
>> Nun, sage ich wollte iterieren
über die Höhe der Pyramide.

120
00:06:18,080 --> 00:06:21,560
Dann statt harter Codierung
einen gewissen Wert in dem Zustand,

121
00:06:21,560 --> 00:06:23,280
Ich benutze nur die variable Höhe.

122
00:06:23,280 --> 00:06:27,180
Also, was es tun wird, ist Iterierte
über die Höhe jeder Zeile.

123
00:06:27,180 --> 00:06:30,280
Und ich kann im Inneren etwas tun
des Körpers dieser Schleife.

124
00:06:30,280 --> 00:06:32,710
>> Was wollen wir machen
im Inneren des Körpers der Schleife?

125
00:06:32,710 --> 00:06:36,550
Nun, wie wir bereits erwähnt, wir wollen
die Räume und die Hashes zu drucken

126
00:06:36,550 --> 00:06:40,730
für die linke Pyramide und dann drucken
zwei Räume und drucken dann die Hashes.

127
00:06:40,730 --> 00:06:42,500
Also haben wir das schon herausgefunden.

128
00:06:42,500 --> 00:06:45,670
So können wir beginnen zu füllen
viel mehr in unserem Programm.

129
00:06:45,670 --> 00:06:49,850
>> Hier habe ich eine äußere for-Schleife, dass
iteriert in der Pyramide jede Zeile über.

130
00:06:49,850 --> 00:06:53,340
Und innerhalb dieser Körper Ich werde
Räume immer wieder zu drucken,

131
00:06:53,340 --> 00:06:56,860
wiederholt Hashes, und dann ist die Lücke,
und dann Hashes für die richtige Pyramide,

132
00:06:56,860 --> 00:07:00,440
und dann schließlich eine neue
Zeile die nächste Zeile zu beginnen.

133
00:07:00,440 --> 00:07:02,860
>> Damit haben wir aufgefordert,
der Benutzer für die Eingabe.

134
00:07:02,860 --> 00:07:04,510
Wir haben dafür gesorgt, dass es gültig ist.

135
00:07:04,510 --> 00:07:06,280
Und dann haben wir die Pyramide gezogen.

136
00:07:06,280 --> 00:07:09,540
So Mario erfolgreich
klettern die Pyramide.

137
00:07:09,540 --> 00:07:10,970
>> Mein Name ist Zamyla.

138
00:07:10,970 --> 00:07:13,840
Und das ist CS50.

139
00:07:13,840 --> 00:07:15,419

