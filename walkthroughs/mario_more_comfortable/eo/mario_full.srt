1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
Zamyla CHAN: Estas-mi, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Hodiaŭ, ni tuj apliki
Mario, kie ni desegni mario

4
00:00:06,950 --> 00:00:10,730
plena piramido lin salti super.

5
00:00:10,730 --> 00:00:14,430
Ni detruu la
sub- taskoj por tiu problemo.

6
00:00:14,430 --> 00:00:17,930
>> Unue, ni volas instigi la uzanton
la alto de la piramido.

7
00:00:17,930 --> 00:00:20,510
Kaj poste ni volas certigi
ke tiu enigo estas valida.

8
00:00:20,510 --> 00:00:23,280
Kaj tiam ni tuj
volas tiri la piramido.

9
00:00:23,280 --> 00:00:26,850
>> Do ni parolu pri instigante
kaj validigi uzanto enigo.

10
00:00:26,850 --> 00:00:29,920
Ĝi povus rigardi ion kiel
tiu, do-dum buklo ke

11
00:00:29,920 --> 00:00:33,250
instigas la uzanton por
entjero kaj tiam nur ripetoj

12
00:00:33,250 --> 00:00:35,700
se tiu entjero estas nevalida.

13
00:00:35,700 --> 00:00:38,220
Do kion devus kondicxo esti?

14
00:00:38,220 --> 00:00:40,630
>> Por tiu, ni revenu
al la specifo.

15
00:00:40,630 --> 00:00:46,240
Nu, la spec nin diras ke ajna valida
alteco tuj estos inter 0 kaj 23,

16
00:00:46,240 --> 00:00:47,350
inkluziva.

17
00:00:47,350 --> 00:00:51,400
Tiel do signifas ke ajna nevalida
alteco tuj estos malpli ol 0

18
00:00:51,400 --> 00:00:53,840
aŭ pli ol 23.

19
00:00:53,840 --> 00:00:57,220
>> Do nun ni havas ĉi tiun informon,
ni desegni nia kondiĉo.

20
00:00:57,220 --> 00:00:59,230
Sed ni devas esti zorgemaj,
ĉar nun ni havas

21
00:00:59,230 --> 00:01:02,130
du Booleans ke ni volas taksi.

22
00:01:02,130 --> 00:01:04,150
>> Tie mi provizis vin
kun vertabelo.

23
00:01:04,150 --> 00:01:07,520
Ĉi tio nin permesas preni du
Bulea tipo, Bulea unu kaj du.

24
00:01:07,520 --> 00:01:13,600
Kaj ni povas taksi ĉu bool1
kaj bool2 aŭ bool1 aŭ bool2.

25
00:01:13,600 --> 00:01:17,390
>> Do kio estas la diferenco
inter kaj kaj aŭ?

26
00:01:17,390 --> 00:01:21,810
Nu, bool1 kaj bool2 volo
taksi al vera se kaj nur

27
00:01:21,810 --> 00:01:25,680
se ambaŭ Booleans estas vera,
dum la aŭ operacio

28
00:01:25,680 --> 00:01:30,190
estos vera se ĉu unu el
la Booleans aŭ ambaŭ estas veraj.

29
00:01:30,190 --> 00:01:33,110
Do kun ĉi tio en menso,
ĉu vi povas diveni

30
00:01:33,110 --> 00:01:37,460
kio la konvena kondiĉo
vian do-dum buklo por nevalidan n

31
00:01:37,460 --> 00:01:38,850
tuj estos.

32
00:01:38,850 --> 00:01:43,540
>> Kun tiu, ni instigis kaj validigitaj
la uzanto por la alteco de la piramido

33
00:01:43,540 --> 00:01:44,550
ke ili volas.

34
00:01:44,550 --> 00:01:47,740
Tial nun, ĝi estas supren al ni
desegni la piramido.

35
00:01:47,740 --> 00:01:50,520
La plena piramido por tiu
problemo aspektos iomete

36
00:01:50,520 --> 00:01:56,340
kiel tiu, kie ni havas maldekstran piramido,
iu breĉo, kaj tiam dekstre piramidon.

37
00:01:56,340 --> 00:01:58,630
Do ni rompos ĉi malsupren iomete.

38
00:01:58,630 --> 00:02:03,510
>> Se mi iras al mia tekstoredaktilo, tie mi havas
tirita ni maldekstra-vicigita piramido.

39
00:02:03,510 --> 00:02:05,160
Sed tio ne faros.

40
00:02:05,160 --> 00:02:10,139
Kion ni volas fari estas ni volas
krei dekstra vicigitaj piramido unue.

41
00:02:10,139 --> 00:02:13,580
Do fari tion, nur puŝi
mia hashes kune al la flanko,

42
00:02:13,580 --> 00:02:18,240
Mi simple tuj metos iuj karakteroj
intere, nur tiuj punktoj.

43
00:02:18,240 --> 00:02:22,560
Tiam mi tuj metis du sur la
sekva linio, kaj unu sur tiu linio.

44
00:02:22,560 --> 00:02:26,070
Kaj tiel tie mi havas
dekstra vicigitaj piramido.

45
00:02:26,070 --> 00:02:28,540
>> Post tio, mi tuj
reiru al la supera vico

46
00:02:28,540 --> 00:02:33,930
kaj metis en la breĉon, kiun
estas, por la spec, du spacoj.

47
00:02:33,930 --> 00:02:37,680
Tiam mi tuj plenigi la
trans la piramido.

48
00:02:37,680 --> 00:02:42,030
Mi tuj iros al la dua vico, skribi
du spacoj por la breĉo kaj tiam du

49
00:02:42,030 --> 00:02:42,920
hashes.

50
00:02:42,920 --> 00:02:47,020
Reen al la tria vico, du spacoj
por la breĉo kaj tri hashes.

51
00:02:47,020 --> 00:02:51,480
Kaj fine, du spacoj
por la breĉo kaj kvar hashes.

52
00:02:51,480 --> 00:02:54,400
Do jen kion plena
piramido similos.

53
00:02:54,400 --> 00:02:57,260
>> Kompreneble, ni ne volas
tiujn punktojn en la vojo.

54
00:02:57,260 --> 00:03:01,220
Do ni tuj anstataŭigi tiujn
punktojn metante iuj spacoj en.

55
00:03:01,220 --> 00:03:03,720
Unu, du, tri sur la unua linio.

56
00:03:03,720 --> 00:03:05,650
Unu, du sur la dua.

57
00:03:05,650 --> 00:03:08,200
Kaj unu sur la tria linio.

58
00:03:08,200 --> 00:03:12,060
Do ĉi tiu estas kion ni povus fari, se ni
volis nur fari kompletan piramido,

59
00:03:12,060 --> 00:03:13,700
diru, en nia tekstoredaktilo.

60
00:03:13,700 --> 00:03:15,860
>> Do ni prenu tiun,
kompreni la mastroj,

61
00:03:15,860 --> 00:03:19,870
kaj konverti ĝin al iuj _pseudocode_.

62
00:03:19,870 --> 00:03:24,500
Por ĉiu vico de la piramido, ni volas
presi maldekstre piramido kaj tiam

63
00:03:24,500 --> 00:03:26,580
la breĉo kaj tiam dekstre piramidon.

64
00:03:26,580 --> 00:03:30,260
Por la maldekstra piramido, ni presi
la kondiĉo kvanton de spacoj,

65
00:03:30,260 --> 00:03:31,740
sekvita de la hashes.

66
00:03:31,740 --> 00:03:35,030
Tiam ni presi la interspacon, kiu
Estas nur du spacoj ĉiufoje.

67
00:03:35,030 --> 00:03:38,080
Kaj en la dekstra piramido, ni presi
la kondiĉo da hashes.

68
00:03:38,080 --> 00:03:41,410
>> Por la dua vico, ni direktis
la sama ĝusta procezo.

69
00:03:41,410 --> 00:03:44,510
Ni presi la spacoj por la maldekstra
piramido, la kondiĉo kvanto

70
00:03:44,510 --> 00:03:49,930
de hashes, la breĉo, du spacoj, kaj
tiam la hashes por la dekstra piramido.

71
00:03:49,930 --> 00:03:52,490
>> Ni pritrakti la padrono
por la maldekstra piramido.

72
00:03:52,490 --> 00:03:55,660
Se mi havis, por celoj
de tiu ekzemplo, alteco

73
00:03:55,660 --> 00:03:58,790
de ok petita de la
uzanto, tiam mia unua vico

74
00:03:58,790 --> 00:04:01,020
havus hash sep spacoj.

75
00:04:01,020 --> 00:04:03,860
Mia dua vico havus
du hashes, ses spacoj.

76
00:04:03,860 --> 00:04:06,749
Tria vico, tri hashes, kvin spacoj.

77
00:04:06,749 --> 00:04:09,040
Vi povas verŝajne fari ĉi
Vin alteco de ok

78
00:04:09,040 --> 00:04:13,470
kaj determini por ĉiu vico kiom
hashes kaj kiom da spacoj vi bezonos.

79
00:04:13,470 --> 00:04:16,209
Sed kion ni volas fari estas
ni volas abstrakta ĝin.

80
00:04:16,209 --> 00:04:22,660
Do mi demandas vin por ajna n vico, kiom da
hashes kaj kiom da spacoj ni bezonas?

81
00:04:22,660 --> 00:04:25,410
>> Nun, kiel vi trovis la
skemo por kiom da hashes

82
00:04:25,410 --> 00:04:29,920
kaj kiom da spacoj vi bezonas por
ajna na vico por donita alto,

83
00:04:29,920 --> 00:04:32,910
memoru esti zorgema
de kiel vi indicigo.

84
00:04:32,910 --> 00:04:37,160
Kion mi celas diri per tio, ke en ĉiutaga
vivo plimulto de ni komencos rakonti de unu.

85
00:04:37,160 --> 00:04:39,680
Do la unua vico estus numero unu.

86
00:04:39,680 --> 00:04:43,620
Kaj la dua vico estus vico
numeron du, tiel plu kaj tiel plu.

87
00:04:43,620 --> 00:04:47,620
>> Sed en komputiko kaj
CS50, ni nul-indeksita.

88
00:04:47,620 --> 00:04:50,750
Do ni vere komencos rakonti ĉe nulo.

89
00:04:50,750 --> 00:04:54,020
Do la unua vico farus
estu vico nombro nulo.

90
00:04:54,020 --> 00:04:56,640
Kaj la dua vico
estus vico numero unu.

91
00:04:56,640 --> 00:05:02,510
Do se mi havis altecon de ok por
mia piramido, do la fina valoro de n

92
00:05:02,510 --> 00:05:05,850
estus reale esti sep kaj ne ok.

93
00:05:05,850 --> 00:05:07,010
>> Sekve esti zorgema pri tio.

94
00:05:07,010 --> 00:05:10,750
Kaj konscii kiam vi determinado
via mastro, ĉu via nulo-indeksita

95
00:05:10,750 --> 00:05:12,360
aŭ unu-indeksita

96
00:05:12,360 --> 00:05:13,070
>> BONE.

97
00:05:13,070 --> 00:05:15,380
Do nun ni havas la
skemo por la maldekstra piramido,

98
00:05:15,380 --> 00:05:18,650
Ni devas determini
la ŝablono por la breĉo.

99
00:05:18,650 --> 00:05:20,480
Feliĉe, ĉi tiu estas vere facila.

100
00:05:20,480 --> 00:05:22,690
Estas nur ĉiam du spacojn.

101
00:05:22,690 --> 00:05:25,240
>> Do nun ni procedi al la dekstra ŝablono.

102
00:05:25,240 --> 00:05:27,220
La unua vico havos unu hash.

103
00:05:27,220 --> 00:05:28,640
La dua vico, du.

104
00:05:28,640 --> 00:05:29,530
Tria vico, tri.

105
00:05:29,530 --> 00:05:30,790
Tiel plu kaj tiel plu.

106
00:05:30,790 --> 00:05:35,540
Do denove, determini por ajna abstrakta
n kaj ajna alteco kiom hashes

107
00:05:35,540 --> 00:05:38,810
kaj kiom da spacoj
ĉiu vico devus havi.

108
00:05:38,810 --> 00:05:39,700
>> BONE.

109
00:05:39,700 --> 00:05:45,050
Do ni scias, ke por ĉiu vico ni
bezonas fari iun procezon.

110
00:05:45,050 --> 00:05:46,600
Kiel ni faru tion?

111
00:05:46,600 --> 00:05:50,440
Nu, ni uzas la por buklo konstrukcio,
ĝi formis parton de inicialización,

112
00:05:50,440 --> 00:05:52,310
kondiĉo, kaj ĝisdatigo.

113
00:05:52,310 --> 00:05:54,830
Por cikloj povas kutimi
ripeti procezoj.

114
00:05:54,830 --> 00:05:59,610
>> Tiel diru mi volas diri saluton,
mondo 50 fojojn, tiam mia por buklo

115
00:05:59,610 --> 00:06:03,510
aspektus ion kiel tiu, kie
Mi pravalorizi miaj variablo al nulo.

116
00:06:03,510 --> 00:06:06,200
La kondiĉo estas ke i estas malpli ol 50.

117
00:06:06,200 --> 00:06:09,670
Kaj tiam la ĝisdatigo estas kiu
pliigoj de unu ĉiufoje.

118
00:06:09,670 --> 00:06:14,700
Do kion tio farus estus
presi saluton, mondo 50 fojojn en vico.

119
00:06:14,700 --> 00:06:18,080
>> Nun diru mi volis persisti
super la alteco de la piramido.

120
00:06:18,080 --> 00:06:21,560
Tiam anstataŭe de malmola kodigo
iu valoro en la kondiĉo,

121
00:06:21,560 --> 00:06:23,280
Mi nur uzas la variablon alteco.

122
00:06:23,280 --> 00:06:27,180
Do kio estas tiu faros estas ripeti
super la alteco ĉiu vico.

123
00:06:27,180 --> 00:06:30,280
Kaj mi povas fari ion interne
de la korpo de tiu buklo.

124
00:06:30,280 --> 00:06:32,710
>> Kion ni volas fari
en la korpo de la ciklo?

125
00:06:32,710 --> 00:06:36,550
Nu, kiel ni indikis antaŭe, ni volas
presi la spacoj kaj la hashes

126
00:06:36,550 --> 00:06:40,730
por la maldekstra piramido kaj tiam presitaj
du spacoj kaj tiam presi la hashes.

127
00:06:40,730 --> 00:06:42,500
Do ni jam kalkulis, ke el.

128
00:06:42,500 --> 00:06:45,670
Do ni povas starti plenigi
en nia programo multe pli.

129
00:06:45,670 --> 00:06:49,850
>> Tie mi havas eksteran por buklo ke
ripetas super ĉiu vico en la piramido.

130
00:06:49,850 --> 00:06:53,340
Kaj interne, ke korpo Mi tuj
presi spacoj ree,

131
00:06:53,340 --> 00:06:56,860
hashes ree, kaj tiam la interspaco,
kaj tiam hashes por la dekstra piramido,

132
00:06:56,860 --> 00:07:00,440
kaj poste, fine, nova
linio por komenci la sekva vico.

133
00:07:00,440 --> 00:07:02,860
>> Kun tiu, ni instigis
la uzanto por la enigo.

134
00:07:02,860 --> 00:07:04,510
Ni certigis ke ĝi estas valida.

135
00:07:04,510 --> 00:07:06,280
Kaj tiam ni tiris la piramido.

136
00:07:06,280 --> 00:07:09,540
Tial Mario povas sukcese
grimpi la piramido.

137
00:07:09,540 --> 00:07:10,970
>> Mia nomo estas Zamyla.

138
00:07:10,970 --> 00:07:13,840
Kaj ĉi tiu estas CS50.

139
00:07:13,840 --> 00:07:15,419

