1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA ЧАН: Това е един-ми, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Днес, ние ще се приложат
Марио, където ние се направи Марио

4
00:00:06,950 --> 00:00:10,730
пълен пирамида за него да скочи над.

5
00:00:10,730 --> 00:00:14,430
Нека съборят
подзадачи за този проблем.

6
00:00:14,430 --> 00:00:17,930
>> На първо място, ние искаме да се напомни на потребителя
за височината на пирамидата.

7
00:00:17,930 --> 00:00:20,510
И след това, което искаме да се уверите,
че този вход е валиден.

8
00:00:20,510 --> 00:00:23,280
И тогава ние ще
искате да се направи на пирамидата.

9
00:00:23,280 --> 00:00:26,850
>> Така че нека да говорим за подтиква
и валидиране на приноса на потребителите.

10
00:00:26,850 --> 00:00:29,920
Тя може да изглежда като
това, да не се прави, докато контур, че

11
00:00:29,920 --> 00:00:33,250
подсказва на потребителя за
целочислени и след това само се повтаря

12
00:00:33,250 --> 00:00:35,700
ако това число е невалиден.

13
00:00:35,700 --> 00:00:38,220
И така, какво трябва да бъде това състояние?

14
00:00:38,220 --> 00:00:40,630
>> За това, нека се върнем
в спецификацията.

15
00:00:40,630 --> 00:00:46,240
Е, спец ни казва, че който и да е валиден
височина ще бъде между 0 и 23,

16
00:00:46,240 --> 00:00:47,350
включително.

17
00:00:47,350 --> 00:00:51,400
Така че след това, което означава, че всеки невалиден
височина ще бъде по-малко от 0

18
00:00:51,400 --> 00:00:53,840
или повече от 23.

19
00:00:53,840 --> 00:00:57,220
>> Така че сега ние имаме тази информация,
нека да се изработи нашето състояние.

20
00:00:57,220 --> 00:00:59,230
Но ние трябва да бъдем внимателни,
защото сега имаме

21
00:00:59,230 --> 00:01:02,130
две булеви, които искаме да се оцени.

22
00:01:02,130 --> 00:01:04,150
>> Тук съм ви предвидено
с маса истина.

23
00:01:04,150 --> 00:01:07,520
Това ни позволява да се вземат две
Booleans, Булева една и две.

24
00:01:07,520 --> 00:01:13,600
И ние можем да се оцени или bool1
и bool2 или bool1 или bool2.

25
00:01:13,600 --> 00:01:17,390
>> Така че каква е разликата
между и и или?

26
00:01:17,390 --> 00:01:21,810
Е, bool1 и bool2 ще
оценка, за да е вярно, ако и само

27
00:01:21,810 --> 00:01:25,680
ако двете булеви са верни,
като има предвид, или операция

28
00:01:25,680 --> 00:01:30,190
ще бъде вярно, ако нито една от
на булеви или и двете са верни.

29
00:01:30,190 --> 00:01:33,110
Така че с оглед на това,
вижте дали можете да разбера

30
00:01:33,110 --> 00:01:37,460
това, което е подходящо състояние за
не се прави линия, докато за невалиден п

31
00:01:37,460 --> 00:01:38,850
ще бъде.

32
00:01:38,850 --> 00:01:43,540
>> С това, ние сме подкана и валидирани
потребителят е височината на пирамидата

33
00:01:43,540 --> 00:01:44,550
че те искат.

34
00:01:44,550 --> 00:01:47,740
Така че сега, това е до нас
да изготви пирамидата.

35
00:01:47,740 --> 00:01:50,520
Пълният пирамида за това
проблем ще изглежда малко по-

36
00:01:50,520 --> 00:01:56,340
като тази, в която ние имаме лявата пирамида,
някои празнина, а след това и дясната пирамида.

37
00:01:56,340 --> 00:01:58,630
Така че нека да се разбие малко.

38
00:01:58,630 --> 00:02:03,510
>> Ако отида да ми текстов редактор, тук съм
ни привлече подравнен вляво пирамида.

39
00:02:03,510 --> 00:02:05,160
Но това няма да стане.

40
00:02:05,160 --> 00:02:10,139
Това, което искаме да направим, е да искаме да
създава право подравнен пирамида първия.

41
00:02:10,139 --> 00:02:13,580
Така че, за да направите това, просто натиснете
моите хешове по настрани,

42
00:02:13,580 --> 00:02:18,240
Аз съм просто ще постави някои символи
между тях, само на тези точки.

43
00:02:18,240 --> 00:02:22,560
Тогава аз ще постави две на
следващия ред, и един по тази линия.

44
00:02:22,560 --> 00:02:26,070
И така, тук имам
десния подравнени пирамида.

45
00:02:26,070 --> 00:02:28,540
>> След това, аз ще
се върнем към най-горния ред

46
00:02:28,540 --> 00:02:33,930
и се слага в пропастта, която
е, за спец, две пространства.

47
00:02:33,930 --> 00:02:37,680
След това аз ще се попълни в
другата страна на пирамидата.

48
00:02:37,680 --> 00:02:42,030
Отивам да отидете на втория ред, напиши
две пространства за разликата и след това два

49
00:02:42,030 --> 00:02:42,920
хешове.

50
00:02:42,920 --> 00:02:47,020
Обратно към третия ред, две пространства
за разликата и три хешове.

51
00:02:47,020 --> 00:02:51,480
И в края, две пространства
за разликата и четири хешове.

52
00:02:51,480 --> 00:02:54,400
Така че това е, което е пълен
пирамида ще изглежда така.

53
00:02:54,400 --> 00:02:57,260
>> Разбира се, ние не искаме
тези точки по пътя.

54
00:02:57,260 --> 00:03:01,220
Така че ние ще замени тези
точки от пускането някои пространства в.

55
00:03:01,220 --> 00:03:03,720
Един, два, три на първа линия.

56
00:03:03,720 --> 00:03:05,650
Едно, две на втория.

57
00:03:05,650 --> 00:03:08,200
И един на трета линия.

58
00:03:08,200 --> 00:03:12,060
Така че това е, което ние ще направим, ако искаме
Исках просто да направи пълен пирамида,

59
00:03:12,060 --> 00:03:13,700
се каже, в нашия текстов редактор.

60
00:03:13,700 --> 00:03:15,860
>> Така че нека да се възползвам от тази,
разбиране на моделите,

61
00:03:15,860 --> 00:03:19,870
и да го превърнете в продължение на известно Псевдокод.

62
00:03:19,870 --> 00:03:24,500
За всеки ред на пирамидата, ние искаме
за отпечатване на ляво пирамидата и след това

63
00:03:24,500 --> 00:03:26,580
разликата и след това дясната пирамида.

64
00:03:26,580 --> 00:03:30,260
За лявата пирамида, се печата
необходимото количество пространства,

65
00:03:30,260 --> 00:03:31,740
последвано от хешовете.

66
00:03:31,740 --> 00:03:35,030
Тогава ние отпечатване на пропастта, която
е само на две места за всеки път.

67
00:03:35,030 --> 00:03:38,080
И в дясната пирамида, отпечатваме
необходимия брой хешове.

68
00:03:38,080 --> 00:03:41,410
>> За втория ред, ние проведохме
точно същата процес.

69
00:03:41,410 --> 00:03:44,510
Ние печат пространствата за ляво
пирамида, необходимото количество

70
00:03:44,510 --> 00:03:49,930
на хешове, разликата, две помещения, и
а след това на хешове за правилната пирамида.

71
00:03:49,930 --> 00:03:52,490
>> Нека да се справи с модела
за левия пирамидата.

72
00:03:52,490 --> 00:03:55,660
Ако имах, за целите на
на този пример, на височина

73
00:03:55,660 --> 00:03:58,790
на осем искания от
потребител, а след това ми първия ред

74
00:03:58,790 --> 00:04:01,020
ще има един хашиш и седем пространства.

75
00:04:01,020 --> 00:04:03,860
Вторият ми ред ще има
две хешове, шест пространства.

76
00:04:03,860 --> 00:04:06,749
Трети ред, три хешове, пет помещения.

77
00:04:06,749 --> 00:04:09,040
Вероятно можете да направите това
себе си, за височина на осем

78
00:04:09,040 --> 00:04:13,470
и определи за всеки ред, колко
хешове и колко пространства, което трябва.

79
00:04:13,470 --> 00:04:16,209
Но това, което искаме да направим, е да
ние искаме да абстрактна него.

80
00:04:16,209 --> 00:04:22,660
Така че аз ви питам за всеки тото подред, колко
хешове и колко пространства се нуждаем?

81
00:04:22,660 --> 00:04:25,410
>> Сега, като ви се определи
модел за колко хешове

82
00:04:25,410 --> 00:04:29,920
и колко пространства необходимо за
всеки тото подред за дадена височина,

83
00:04:29,920 --> 00:04:32,910
не забравяйте да бъдете внимателни
за това как можете да започнете индексиране.

84
00:04:32,910 --> 00:04:37,160
Какво искам да кажа от това е, че в ежедневието
живот, повечето от нас започне да брои от едно.

85
00:04:37,160 --> 00:04:39,680
Така че на първия ред ще бъде номер едно.

86
00:04:39,680 --> 00:04:43,620
И на втория ред ще бъде ред
номер две, така нататък и така нататък.

87
00:04:43,620 --> 00:04:47,620
>> Но по компютърни науки и
CS50, ние сме нула индексирани.

88
00:04:47,620 --> 00:04:50,750
Така че ние действително започне преброяване на нула.

89
00:04:50,750 --> 00:04:54,020
Така че на първия ред ще
да е ред номер нула.

90
00:04:54,020 --> 00:04:56,640
Вторият ред
Би било ред номер едно.

91
00:04:56,640 --> 00:05:02,510
Така че, ако имах височина от осем за
ми пирамида, след последната стойност на N

92
00:05:02,510 --> 00:05:05,850
всъщност ще бъде седем и не осем.

93
00:05:05,850 --> 00:05:07,010
>> Така че бъдете внимателни за това.

94
00:05:07,010 --> 00:05:10,750
И да знаете, когато сте определяне
вашия модел дали си нула индексирани

95
00:05:10,750 --> 00:05:12,360
или един индексирани

96
00:05:12,360 --> 00:05:13,070
>> ДОБРЕ.

97
00:05:13,070 --> 00:05:15,380
Така че сега ние имаме
модел за левия пирамида,

98
00:05:15,380 --> 00:05:18,650
ние трябва да се определи
модела за разликата.

99
00:05:18,650 --> 00:05:20,480
За щастие, това е наистина лесно.

100
00:05:20,480 --> 00:05:22,690
Това е просто винаги две пространства.

101
00:05:22,690 --> 00:05:25,240
>> Така че сега се пристъпва към десния модел.

102
00:05:25,240 --> 00:05:27,220
Първият ред ще има един хашиш.

103
00:05:27,220 --> 00:05:28,640
Вторият ред, двете.

104
00:05:28,640 --> 00:05:29,530
Трети ред, три.

105
00:05:29,530 --> 00:05:30,790
Така нататък и така нататък.

106
00:05:30,790 --> 00:05:35,540
Така че отново, определя за всяко абстрактно
п и всяка височина колко хешове

107
00:05:35,540 --> 00:05:38,810
и колко много пространства
всеки ред трябва да има.

108
00:05:38,810 --> 00:05:39,700
>> ДОБРЕ.

109
00:05:39,700 --> 00:05:45,050
Така че ние знаем, че за всеки ред ние
Трябва да проведат някакъв процес.

110
00:05:45,050 --> 00:05:46,600
Как да го направим?

111
00:05:46,600 --> 00:05:50,440
Е, ние използваме за контур конструкт,
състои от инициализация,

112
00:05:50,440 --> 00:05:52,310
състояние, и актуализация.

113
00:05:52,310 --> 00:05:54,830
За да се използват вериги
да се повтаря процеси.

114
00:05:54,830 --> 00:05:59,610
>> Така че да кажа, че искам да кажа здрасти,
свят 50 пъти, след това ми за цикъл

115
00:05:59,610 --> 00:06:03,510
ще изглежда нещо като това, където
Аз се инициализира променлива ми до нула.

116
00:06:03,510 --> 00:06:06,200
Условието е, че аз е по-малко от 50.

117
00:06:06,200 --> 00:06:09,670
И след актуализацията е, че тя
стъпки по един всеки път.

118
00:06:09,670 --> 00:06:14,700
Така че какво ще направя е да се
отпечатате Hello, World 50 пъти подред.

119
00:06:14,700 --> 00:06:18,080
>> Сега, казват, аз исках да превъртите
над височината на пирамидата.

120
00:06:18,080 --> 00:06:21,560
Тогава вместо твърд кодиране
някаква ценност в състоянието,

121
00:06:21,560 --> 00:06:23,280
Просто използвайте променлива височина.

122
00:06:23,280 --> 00:06:27,180
Така че това, което ще направим, е обхождане
над височината на всеки ред.

123
00:06:27,180 --> 00:06:30,280
И аз мога да направя нещо вътре
на тялото на тази линия.

124
00:06:30,280 --> 00:06:32,710
>> Какво искаме да направим
вътре в тялото на цикъла?

125
00:06:32,710 --> 00:06:36,550
Е, както посочихме преди, ние искаме
за отпечатване на пространствата и хешовете

126
00:06:36,550 --> 00:06:40,730
за левия пирамидата и след това печат
две пространства и след това да отпечатате хешовете.

127
00:06:40,730 --> 00:06:42,500
Така че ние вече сте разбрали, че навън.

128
00:06:42,500 --> 00:06:45,670
Така че можем да започнем да запълни
в нашата програма много повече.

129
00:06:45,670 --> 00:06:49,850
>> Тук имам един външен за линия, която
итерации над всеки ред в пирамидата.

130
00:06:49,850 --> 00:06:53,340
И вътре, че тялото Отивам
да отпечатате пространства многократно,

131
00:06:53,340 --> 00:06:56,860
хешове многократно, и след това разликата,
и след това хешове за правилната пирамида,

132
00:06:56,860 --> 00:07:00,440
и след това, най-накрая, нов
линия, за да започне на следващия ред.

133
00:07:00,440 --> 00:07:02,860
>> С това, ние сме подканени
потребителя за въвеждане.

134
00:07:02,860 --> 00:07:04,510
Ние сме се уверили, че това е валидно.

135
00:07:04,510 --> 00:07:06,280
И тогава ние сме съставен пирамидата.

136
00:07:06,280 --> 00:07:09,540
Така че Марио може успешно
изкачи на пирамидата.

137
00:07:09,540 --> 00:07:10,970
>> Моето име е Zamyla.

138
00:07:10,970 --> 00:07:13,840
И това е CS50.

139
00:07:13,840 --> 00:07:15,419

