1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
ZAMYLA CHAN: Tas ir-me, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Šodien, mēs ejam, lai īstenotu
Mario, kur mēs vēršam Mario

4
00:00:06,950 --> 00:00:10,730
pilna piramīda viņam lēkt pāri.

5
00:00:10,730 --> 00:00:14,430
Pieņemsim nojauktu
apakšprogrammas uzdevumi šo problēmu.

6
00:00:14,430 --> 00:00:17,930
>> Pirmkārt, mēs vēlamies, lai nekavējoties lietotājam
augstumam piramīdas.

7
00:00:17,930 --> 00:00:20,510
Un tad mēs gribam, lai pārliecinātos, ka
ka tas ievade ir derīgs.

8
00:00:20,510 --> 00:00:23,280
Un tad mēs ejam
vēlas vērst piramīdu.

9
00:00:23,280 --> 00:00:26,850
>> So parunāsim par pamudinot
un apstiprinot lietotāja ievadi.

10
00:00:26,850 --> 00:00:29,920
Tas varētu izskatīties kaut kas līdzīgs
tas, do-kamēr cilpa, kas

11
00:00:29,920 --> 00:00:33,250
liek lietotājam par
vesels un tad tikai atkārtojas

12
00:00:33,250 --> 00:00:35,700
ja tas skaitlis ir nederīgs.

13
00:00:35,700 --> 00:00:38,220
Tātad, ko šis nosacījums būtu?

14
00:00:38,220 --> 00:00:40,630
>> Lai to izdarītu, iesim atpakaļ
specifikācijai.

15
00:00:40,630 --> 00:00:46,240
Nu, spec stāsta mums, ka jebkurš derīgs
augstums būs no 0 līdz 23,

16
00:00:46,240 --> 00:00:47,350
ieskaitot.

17
00:00:47,350 --> 00:00:51,400
Tātad tas nozīmē, ka jebkurš nederīgs
augstums būs mazāks par 0

18
00:00:51,400 --> 00:00:53,840
vai vairāk nekā 23.

19
00:00:53,840 --> 00:00:57,220
>> Tāpēc tagad, ka mums ir šī informācija,
pieņemsim dizains mūsu stāvokli.

20
00:00:57,220 --> 00:00:59,230
Bet mums ir jābūt uzmanīgiem,
jo tagad mums ir

21
00:00:59,230 --> 00:01:02,130
divas Booleans ka mēs vēlamies, lai novērtētu.

22
00:01:02,130 --> 00:01:04,150
>> Šeit es esmu nodrošināts tevi
ar patiesību galda.

23
00:01:04,150 --> 00:01:07,520
Tas ļauj mums veikt divas
Booleans, Būla viens un divi.

24
00:01:07,520 --> 00:01:13,600
Un mēs varam novērtēt vai nu bool1
un bool2 vai bool1 vai bool2.

25
00:01:13,600 --> 00:01:17,390
>> Tātad, kāda ir atšķirība
starp un un vai?

26
00:01:17,390 --> 00:01:21,810
Nu, bool1 un bool2 būs
izvērtēt patiess tad un tikai

27
00:01:21,810 --> 00:01:25,680
ja abi Booleans ir taisnība,
tā kā darbības vai

28
00:01:25,680 --> 00:01:30,190
būs taisnība, ja nu kāds no
tad Booleans vai abi ir patiesi.

29
00:01:30,190 --> 00:01:33,110
Tātad ar šo prātā,
redzēt, ja jūs varat izdomāt

30
00:01:33,110 --> 00:01:37,460
kāds piemērots nosacījums
Jūsu do-kamēr cilpa par nederīgu n

31
00:01:37,460 --> 00:01:38,850
būs.

32
00:01:38,850 --> 00:01:43,540
>> Ar to, ka mēs esam pamudināja un apstiprināti
lietotājs augstuma piramīdas

33
00:01:43,540 --> 00:01:44,550
ka viņi vēlas.

34
00:01:44,550 --> 00:01:47,740
Tāpēc tagad, tas ir atkarīgs no mums
lai pievērstu piramīdu.

35
00:01:47,740 --> 00:01:50,520
Pilns piramīda šim
Problēma izskatīsies mazliet

36
00:01:50,520 --> 00:01:56,340
kā šis, kur mums ir kreiso piramīdas,
daži sprauga, un pēc tam pa labi piramīdas.

37
00:01:56,340 --> 00:01:58,630
Tātad, pieņemsim lauzt šo leju mazliet.

38
00:01:58,630 --> 00:02:03,510
>> Ja es iet uz manu teksta redaktoru, šeit es esmu
sastādīts mums pa kreisi līdzināts piramīdu.

39
00:02:03,510 --> 00:02:05,160
Bet tas nebūs jādara.

40
00:02:05,160 --> 00:02:10,139
Ko mēs vēlamies darīt, ir mēs vēlamies
izveidot pareizo saskaņots piramīdu pirmās.

41
00:02:10,139 --> 00:02:13,580
Tātad, lai to izdarītu, vienkārši push
mans hashes gar sāniem,

42
00:02:13,580 --> 00:02:18,240
Es esmu tikai gatavojas īstenot dažas rakstzīmes
starp, tikai šiem punktiem.

43
00:02:18,240 --> 00:02:22,560
Tad es esmu gatavojas īstenot divi par
nākamais līnija, un viens uz šīs līnijas.

44
00:02:22,560 --> 00:02:26,070
Un tāpēc šeit man ir
labo jāsaskaņo piramīdu.

45
00:02:26,070 --> 00:02:28,540
>> Pēc tam, es esmu gatavojas
doties atpakaļ uz augšējā rindā

46
00:02:28,540 --> 00:02:33,930
un nodot plaisu, kas
ir, par spec, divām telpām.

47
00:02:33,930 --> 00:02:37,680
Tad es esmu gatavojas aizpildīt
otra puse no piramīdas.

48
00:02:37,680 --> 00:02:42,030
Es iešu uz otro rindu, rakstiet
divas telpas plaisa un tad divas

49
00:02:42,030 --> 00:02:42,920
hashes.

50
00:02:42,920 --> 00:02:47,020
Atpakaļ uz trešās kārtas, divas atstarpes
par plaisu un trīs hashes.

51
00:02:47,020 --> 00:02:51,480
Un beigās, divas telpas
par plaisu un četri hashes.

52
00:02:51,480 --> 00:02:54,400
Tātad, tas ko pilna
piramīda izskatīsies.

53
00:02:54,400 --> 00:02:57,260
>> Protams, mēs negribam
šie punkti ceļā.

54
00:02:57,260 --> 00:03:01,220
Tātad mēs ejam, lai aizstātu tos
punkti, ievietojot dažas atstarpes.

55
00:03:01,220 --> 00:03:03,720
Viens, divi, trīs pirmajā līnijā.

56
00:03:03,720 --> 00:03:05,650
Viens, divi uz otro.

57
00:03:05,650 --> 00:03:08,200
Un viens trešajā rindā.

58
00:03:08,200 --> 00:03:12,060
Tātad tas ir tas, ko mēs varētu darīt, ja mēs
gribēja tikai veikt pilnu piramīdas,

59
00:03:12,060 --> 00:03:13,700
teikt, mūsu teksta redaktoru.

60
00:03:13,700 --> 00:03:15,860
>> Tātad pieņemsim šo,
izprast modeļus,

61
00:03:15,860 --> 00:03:19,870
un pārvērst to pa kādu pseudocode.

62
00:03:19,870 --> 00:03:24,500
Katrai rindu piramīdas, mēs gribam
izdrukāt kreisi piramīdu un tad

63
00:03:24,500 --> 00:03:26,580
plaisa un tad tiesības piramīda.

64
00:03:26,580 --> 00:03:30,260
Par kreisās piramīdas, mēs drukāt
nepieciešamais daudzums telpās,

65
00:03:30,260 --> 00:03:31,740
kam seko hashes.

66
00:03:31,740 --> 00:03:35,030
Tad mēs drukāt plaisu, kas
ir tikai divas vietas katru reizi.

67
00:03:35,030 --> 00:03:38,080
Un īstajā piramīdas, mēs drukāt
vajadzīgo skaitu hashes.

68
00:03:38,080 --> 00:03:41,410
>> Attiecībā uz otro rindu, veicām
tāds pats precīzs process.

69
00:03:41,410 --> 00:03:44,510
Mēs drukāt atstarpes, lai pa kreisi
piramīda, nepieciešamais daudzums

70
00:03:44,510 --> 00:03:49,930
no hashes, plaisa, divas telpas, un
tad hashes par labo piramīdas.

71
00:03:49,930 --> 00:03:52,490
>> Pieņemsim risināt modeli
kreisajam piramīdas.

72
00:03:52,490 --> 00:03:55,660
Ja man būtu, mērķiem
no šajā piemērā, augstums

73
00:03:55,660 --> 00:03:58,790
no astoņiem līdz pieprasīto
lietotājs, tad mana pirmā rinda

74
00:03:58,790 --> 00:04:01,020
būtu viena hash un septiņas vietas.

75
00:04:01,020 --> 00:04:03,860
Mans otrais rindā būtu
divi hashes, sešas atstarpēm.

76
00:04:03,860 --> 00:04:06,749
Trešajā rindā, trīs hashes, piecas telpas.

77
00:04:06,749 --> 00:04:09,040
Jūs varat droši izdarīt
pats par kuru augstums ir astoņi

78
00:04:09,040 --> 00:04:13,470
un noteikt, katrā rindā cik
hashes un cik daudz vietas jums ir nepieciešams.

79
00:04:13,470 --> 00:04:16,209
Bet ko mēs vēlamies darīt, ir
mēs gribam abstrakts tā.

80
00:04:16,209 --> 00:04:22,660
Tāpēc es aicinu jūs uz jebkuru n rindas, cik daudz
hashes un cik daudz vietas mums vajag?

81
00:04:22,660 --> 00:04:25,410
>> Tagad, kā jūs noteikt
modelis uz cik hashes

82
00:04:25,410 --> 00:04:29,920
un cik daudz vietas jums ir nepieciešams, lai
jebkurš n rindu konkrētā augstumā,

83
00:04:29,920 --> 00:04:32,910
atcerieties jābūt uzmanīgiem
par to, kā jūs indeksēšanu.

84
00:04:32,910 --> 00:04:37,160
Ko es domāju ar šo ir tas, ka ikdienā
dzīve lielākā daļa no mums sākt skaitīšanas pa vienam.

85
00:04:37,160 --> 00:04:39,680
Tātad pirmais rindā būs numur viens.

86
00:04:39,680 --> 00:04:43,620
Un otrajā rindā būs rinda
numurs divi, tā tālāk un tā tālāk.

87
00:04:43,620 --> 00:04:47,620
>> Bet datorzinātnē un
CS50, mēs nulles indeksētas.

88
00:04:47,620 --> 00:04:50,750
Tātad mēs faktiski sākt skaitīt no nulles.

89
00:04:50,750 --> 00:04:54,020
Tātad pirmais rindā būtu
būt rindas numurs nulle.

90
00:04:54,020 --> 00:04:56,640
Un otrajā rindā
būtu rinda numur viens.

91
00:04:56,640 --> 00:05:02,510
Tātad, ja man bija augstumu astoņi par
mans piramīdas, pēc tam pēdējo n vērtība

92
00:05:02,510 --> 00:05:05,850
faktiski nebūtu septiņi un nav astoņi.

93
00:05:05,850 --> 00:05:07,010
>> Tāpēc jābūt uzmanīgiem par to.

94
00:05:07,010 --> 00:05:10,750
Un jāapzinās, ja jūs nosakot
Jūsu raksts vai jūsu nulles indeksētas

95
00:05:10,750 --> 00:05:12,360
vai vienu indeksētas

96
00:05:12,360 --> 00:05:13,070
>> LABI.

97
00:05:13,070 --> 00:05:15,380
Tāpēc tagad, ka mums ir
modelis kreisajā piramīdas,

98
00:05:15,380 --> 00:05:18,650
mums ir nepieciešams, lai noteiktu,
modelis par plaisa.

99
00:05:18,650 --> 00:05:20,480
Par laimi, tas ir patiešām viegli.

100
00:05:20,480 --> 00:05:22,690
Tas ir tikai vienmēr divas telpas.

101
00:05:22,690 --> 00:05:25,240
>> Tāpēc tagad mēs pārejam pie pareizā modeli.

102
00:05:25,240 --> 00:05:27,220
Pirmajā rindā būs viens hash.

103
00:05:27,220 --> 00:05:28,640
Otrajā rindā, divi.

104
00:05:28,640 --> 00:05:29,530
Trešajā rindā, trīs.

105
00:05:29,530 --> 00:05:30,790
Tā tālāk un tā tālāk.

106
00:05:30,790 --> 00:05:35,540
Tātad vēlreiz, noteikt, kādu abstraktu
n un jebkura augstuma cik hashes

107
00:05:35,540 --> 00:05:38,810
un cik daudz vietas
Katrā rindā ir jābūt.

108
00:05:38,810 --> 00:05:39,700
>> LABI.

109
00:05:39,700 --> 00:05:45,050
Tātad mēs zinām, ka katrā rindā mēs
nepieciešams veikt kādu procesu.

110
00:05:45,050 --> 00:05:46,600
Kā mēs to darām?

111
00:05:46,600 --> 00:05:50,440
Nu, mēs izmantojam, lai cilpu būvēt,
sastāv no inicializācijas,

112
00:05:50,440 --> 00:05:52,310
nosacījums, un atjauninājumu.

113
00:05:52,310 --> 00:05:54,830
Attiecībā uz cilpas var tikt izmantoti
atkārtot procesu.

114
00:05:54,830 --> 00:05:59,610
>> Tā teikt, es gribu to pateikt hello,
pasaules 50 reizes, tad mans cilpas

115
00:05:59,610 --> 00:06:03,510
varētu izskatīties kaut kas līdzīgs šim, kur
Es sāktu manu mainīgo līdz nullei.

116
00:06:03,510 --> 00:06:06,200
Nosacījums ir, ka man ir mazāks par 50.

117
00:06:06,200 --> 00:06:09,670
Un tad update ir tas, ka tā
soli pa vienam katru reizi.

118
00:06:09,670 --> 00:06:14,700
Tātad, ko tas varētu darīt, būtu
drukāt hello, pasaules 50 reizes pēc kārtas.

119
00:06:14,700 --> 00:06:18,080
>> Tagad, ka es gribēju atkārtot
vairāk nekā augstums piramīdas.

120
00:06:18,080 --> 00:06:21,560
Tad nevis cieto kodēšanas
daži vērtība stāvoklī,

121
00:06:21,560 --> 00:06:23,280
Es tikai izmantot mainīgo augstumu.

122
00:06:23,280 --> 00:06:27,180
Tātad, ko tas būs jādara, ir atkārtot
vairāk nekā augstums katrā rindā.

123
00:06:27,180 --> 00:06:30,280
Un es varu darīt kaut ko iekšā
no korpusa minētās cilpas.

124
00:06:30,280 --> 00:06:32,710
>> Ko mēs vēlamies darīt
ķermeņa iekšpusē cilpa?

125
00:06:32,710 --> 00:06:36,550
Nu, kā mēs norādīts iepriekš, mēs gribam
drukāt atstarpes un hashes

126
00:06:36,550 --> 00:06:40,730
par kreiso piramīdas un pēc tam izdrukāt
divas telpas, un pēc tam izdrukāt hashes.

127
00:06:40,730 --> 00:06:42,500
Tāpēc mēs esam jau sapratu, ka out.

128
00:06:42,500 --> 00:06:45,670
Tātad, mēs varam sākt aizpildīt
mūsu programmā ir daudz vairāk.

129
00:06:45,670 --> 00:06:49,850
>> Šeit man ir ārējā uz cilpas, kas
vairākkārt uzsvērts pār katru rindu piramīdas.

130
00:06:49,850 --> 00:06:53,340
Un iekšā šīs struktūras es eju
drukāt telpas atkārtoti,

131
00:06:53,340 --> 00:06:56,860
hashes atkārtoti, un tad plaisa,
un tad hashes par tiesībām piramīdas,

132
00:06:56,860 --> 00:07:00,440
un pēc tam, beidzot, jauns
line lai sāktu nākamo rindu.

133
00:07:00,440 --> 00:07:02,860
>> Ar to, ka mēs esam piedāvāts
lietotājs par ieguldījumu.

134
00:07:02,860 --> 00:07:04,510
Mēs esam pārliecināts, ka tas ir derīgs.

135
00:07:04,510 --> 00:07:06,280
Un tad mēs esam sastādīts piramīdu.

136
00:07:06,280 --> 00:07:09,540
Tātad Mario var veiksmīgi
kāpt piramīdu.

137
00:07:09,540 --> 00:07:10,970
>> Mans vārds ir Zamyla.

138
00:07:10,970 --> 00:07:13,840
Un tas ir CS50.

139
00:07:13,840 --> 00:07:15,419

