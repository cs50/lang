1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,640
Zamyla CHAN: Тоа е-ме, Zamyla.

3
00:00:02,640 --> 00:00:06,950
Денес, ние ќе треба да се спроведе
Марио, каде што се повлече Марио

4
00:00:06,950 --> 00:00:10,730
целосна пирамида за него да скокаат над.

5
00:00:10,730 --> 00:00:14,430
Ајде да се прекине
под-задачи за овој проблем.

6
00:00:14,430 --> 00:00:17,930
>> Прво, ние сакаме да го извести корисникот
за висината на пирамидата.

7
00:00:17,930 --> 00:00:20,510
И тогаш ние сакаме да се осигураме
дека влезот е валидна.

8
00:00:20,510 --> 00:00:23,280
И тогаш ние ќе треба да
сакате да се подготви на пирамидата.

9
00:00:23,280 --> 00:00:26,850
>> Па ајде да разговараме за поттикнувајќи
и оценување на корисник влез.

10
00:00:26,850 --> 00:00:29,920
Тоа може да изгледа нешто како
ова, не-додека јамка која

11
00:00:29,920 --> 00:00:33,250
поттикнува на корисникот за
цел број, а потоа само се повторува

12
00:00:33,250 --> 00:00:35,700
ако тој број не е валиден.

13
00:00:35,700 --> 00:00:38,220
Значи она што треба да биде оваа состојба?

14
00:00:38,220 --> 00:00:40,630
>> За ова, ајде да се вратиме
на спецификација.

15
00:00:40,630 --> 00:00:46,240
Па, спец ни кажува дека некој валиден
висина ќе биде помеѓу 0 и 23,

16
00:00:46,240 --> 00:00:47,350
инклузивна.

17
00:00:47,350 --> 00:00:51,400
Па тогаш тоа значи дека не валиден
висина ќе биде помал од 0

18
00:00:51,400 --> 00:00:53,840
или повеќе од 23.

19
00:00:53,840 --> 00:00:57,220
>> Па сега дека имаме оваа информација,
ајде да дизајн нашата состојба.

20
00:00:57,220 --> 00:00:59,230
Но, треба да се биде внимателен,
бидејќи сега имаме

21
00:00:59,230 --> 00:01:02,130
две Booleans дека ние сакаме да се оцени.

22
00:01:02,130 --> 00:01:04,150
>> Тука сум ви се предвидени
со маса вистината.

23
00:01:04,150 --> 00:01:07,520
Ова ни овозможува да се земе два
Booleans, Булова еден и два.

24
00:01:07,520 --> 00:01:13,600
И ние може да се оцени или bool1
и bool2 или bool1 или bool2.

25
00:01:13,600 --> 00:01:17,390
>> Па што е разликата
помеѓу и и или?

26
00:01:17,390 --> 00:01:21,810
Па, bool1 и bool2 ќе
оценка на true ако и само

27
00:01:21,810 --> 00:01:25,680
ако двата Booleans се вистинити,
со оглед на тоа или операција

28
00:01:25,680 --> 00:01:30,190
ќе биде вистина ако ниту една од
на Booleans или и двете се вистинити.

29
00:01:30,190 --> 00:01:33,110
Значи со ова на ум,
види дали може да дознаам

30
00:01:33,110 --> 00:01:37,460
што е соодветно услов за
вашата не-додека јамка за невалиден n

31
00:01:37,460 --> 00:01:38,850
е и ќе биде.

32
00:01:38,850 --> 00:01:43,540
>> Со тоа, ние сме на поттикна и потврдени
на корисникот за висината на пирамидата

33
00:01:43,540 --> 00:01:44,550
што тие сакаат.

34
00:01:44,550 --> 00:01:47,740
Па сега, тоа е до нас
да се подготви на пирамида.

35
00:01:47,740 --> 00:01:50,520
Целосната пирамида за ова
Проблемот ќе изгледа малку

36
00:01:50,520 --> 00:01:56,340
како овој, каде што имаме лево пирамида,
некој пропуст, а потоа и во право пирамида.

37
00:01:56,340 --> 00:01:58,630
Значи, да се скрши оваа надолу малку.

38
00:01:58,630 --> 00:02:03,510
>> Ако одам во мојот уредувач на текст, тука сум
САД подготвени од левата подреден пирамида.

39
00:02:03,510 --> 00:02:05,160
Но, тоа нема да го стори.

40
00:02:05,160 --> 00:02:10,139
Она што сакаме да направите е да сакаме да
создаде подреден десно пирамида во прв план.

41
00:02:10,139 --> 00:02:13,580
Значи да го направите ова, да им помогнам само
мојот хаш заедно на страна,

42
00:02:13,580 --> 00:02:18,240
Јас сум само се случува да се стави некои ликови
меѓу нив, само овие точки.

43
00:02:18,240 --> 00:02:22,560
Тогаш јас ќе одам да се стави два на
следната линија, и еден на таа линија.

44
00:02:22,560 --> 00:02:26,070
И така тука имам
подреден десно пирамида.

45
00:02:26,070 --> 00:02:28,540
>> После тоа, јас ќе одам да се
се врати на врвот ред

46
00:02:28,540 --> 00:02:33,930
и го стави во празнина, што
е, според спецификации, две места.

47
00:02:33,930 --> 00:02:37,680
Тогаш јас ќе одам да се пополни во
другата страна на пирамида.

48
00:02:37,680 --> 00:02:42,030
Одам да се оди на вториот ред, пишува
две празни места за јазот, а потоа две

49
00:02:42,030 --> 00:02:42,920
хашови.

50
00:02:42,920 --> 00:02:47,020
Вратете се на третиот ред, две места
за јазот и три хаш.

51
00:02:47,020 --> 00:02:51,480
И на крајот, две места
за јазот и четири хаш.

52
00:02:51,480 --> 00:02:54,400
Значи тоа е она целосна
пирамида ќе изгледа.

53
00:02:54,400 --> 00:02:57,260
>> Се разбира, ние не сакаме
овие точки на патот.

54
00:02:57,260 --> 00:03:01,220
Па ние ќе ги замени овие
точки со ставање на некои места во.

55
00:03:01,220 --> 00:03:03,720
Еден, два, три на прва линија.

56
00:03:03,720 --> 00:03:05,650
Еден, два на вториот кат.

57
00:03:05,650 --> 00:03:08,200
И еден на третата линија.

58
00:03:08,200 --> 00:03:12,060
Значи ова е она што ние ќе направиме ако
сакаше само да се направи целосна пирамида,

59
00:03:12,060 --> 00:03:13,700
каже, во нашиот текст едитор.

60
00:03:13,700 --> 00:03:15,860
>> Значи, да ја искористам оваа,
разбирање на модели,

61
00:03:15,860 --> 00:03:19,870
и да го претворите во текот на некои pseudocode.

62
00:03:19,870 --> 00:03:24,500
За секој ред на пирамидата, ние сакаме
за печатење на левата пирамида, а потоа

63
00:03:24,500 --> 00:03:26,580
јазот, а потоа и во право пирамида.

64
00:03:26,580 --> 00:03:30,260
На левата пирамида, ние печати
потребната количина на простор,

65
00:03:30,260 --> 00:03:31,740
проследено со хашови.

66
00:03:31,740 --> 00:03:35,030
Тогаш ние се печати на празнина, што
е само две места во секое време.

67
00:03:35,030 --> 00:03:38,080
И во право пирамида, ние печати
потребниот број на хаш.

68
00:03:38,080 --> 00:03:41,410
>> За вториот ред, ние спроведе
исто точно процес.

69
00:03:41,410 --> 00:03:44,510
Ние печати празни места за левицата
пирамида, потребното количество

70
00:03:44,510 --> 00:03:49,930
на хаш, јазот, две места, и
тогаш хаш за правото пирамида.

71
00:03:49,930 --> 00:03:52,490
>> Ајде да се справи со модел
за левата пирамида.

72
00:03:52,490 --> 00:03:55,660
Ако имав, за целите на
на овој пример, висина

73
00:03:55,660 --> 00:03:58,790
од осум барање на
корисникот, а потоа мојот прв ред

74
00:03:58,790 --> 00:04:01,020
ќе имаат една хашиш и седум места.

75
00:04:01,020 --> 00:04:03,860
Мојот втор ред ќе има
две хаш, шест места.

76
00:04:03,860 --> 00:04:06,749
Третиот ред, три хаш, пет места.

77
00:04:06,749 --> 00:04:09,040
Што веројатно може да се направи ова
се за висина од осум

78
00:04:09,040 --> 00:04:13,470
и да се одреди за секој ред колку
хаш и колку простор ви треба.

79
00:04:13,470 --> 00:04:16,209
Но, она што сакате да го направите е да се
ние сакаме да одвоиме.

80
00:04:16,209 --> 00:04:22,660
Па јас да ве прашам за било n-ти ред, колку
хаш и колку простори ни треба?

81
00:04:22,660 --> 00:04:25,410
>> Сега, како да се одреди
модел за колку хаш

82
00:04:25,410 --> 00:04:29,920
и колку простор ви треба за
било n-ти ред за одредена висина,

83
00:04:29,920 --> 00:04:32,910
не заборавајте да бидете внимателни
за тоа како сте индексирање.

84
00:04:32,910 --> 00:04:37,160
Што мислам со ова е тоа што во секојдневниот
живот повеќето од нас почнат да бројат по еден.

85
00:04:37,160 --> 00:04:39,680
Така, првиот ред ќе биде број еден.

86
00:04:39,680 --> 00:04:43,620
И вториот ред ќе биде ред
број два, па натаму и така натаму.

87
00:04:43,620 --> 00:04:47,620
>> Но, во компјутерски науки и
CS50, ние сме нула-индексирани.

88
00:04:47,620 --> 00:04:50,750
Значи ние всушност почне пребројување на нула.

89
00:04:50,750 --> 00:04:54,020
Така, првиот ред ќе
биде ред бројот нула.

90
00:04:54,020 --> 00:04:56,640
И вториот ред
ќе биде број еден ред.

91
00:04:56,640 --> 00:05:02,510
Значи, ако имав висина од осум за
мојот пирамида, тогаш последната вредност на n

92
00:05:02,510 --> 00:05:05,850
всушност, ќе биде седум, а не осум.

93
00:05:05,850 --> 00:05:07,010
>> Значи да се биде внимателен во врска со тоа.

94
00:05:07,010 --> 00:05:10,750
И да бидат свесни кога сте утврдување
шемата дали вашиот нула индексирани

95
00:05:10,750 --> 00:05:12,360
или еден-индексирани

96
00:05:12,360 --> 00:05:13,070
>> ДОБРО.

97
00:05:13,070 --> 00:05:15,380
Па сега дека имаме
модел за левата пирамида,

98
00:05:15,380 --> 00:05:18,650
ние треба да се утврди
моделот за јазот.

99
00:05:18,650 --> 00:05:20,480
За среќа, ова е навистина лесно.

100
00:05:20,480 --> 00:05:22,690
Тоа е само секогаш две места.

101
00:05:22,690 --> 00:05:25,240
>> Така, сега продолжи кон вистинскиот модел.

102
00:05:25,240 --> 00:05:27,220
Во првиот ред ќе има еден хаш.

103
00:05:27,220 --> 00:05:28,640
Вториот ред, два.

104
00:05:28,640 --> 00:05:29,530
Третиот ред, три.

105
00:05:29,530 --> 00:05:30,790
Така натаму и така натаму.

106
00:05:30,790 --> 00:05:35,540
Значи, повторно, се утврди за било апстрактни
n и било која висина колку хаш

107
00:05:35,540 --> 00:05:38,810
и колку места
секој ред треба да има.

108
00:05:38,810 --> 00:05:39,700
>> ДОБРО.

109
00:05:39,700 --> 00:05:45,050
Па знаеме дека за секој ред ние
треба да се спроведе некоја процедура.

110
00:05:45,050 --> 00:05:46,600
Како го правиме тоа?

111
00:05:46,600 --> 00:05:50,440
Па, ние ги користиме за телефонска линија конструкција,
составен на иницијализација,

112
00:05:50,440 --> 00:05:52,310
услов, и ажурирање.

113
00:05:52,310 --> 00:05:54,830
За може да се користи јамки
да се повтори процеси.

114
00:05:54,830 --> 00:05:59,610
>> Така велат сакам да се каже здраво,
светот 50 пати, а потоа ми за телефонска линија

115
00:05:59,610 --> 00:06:03,510
ќе изгледа нешто како ова, во
Јас се иницијализира променливи ми на нула.

116
00:06:03,510 --> 00:06:06,200
Состојбата е дека јас е помал од 50.

117
00:06:06,200 --> 00:06:09,670
И тогаш ажурирање е тоа што
чекори на зголемување од по еден во секое време.

118
00:06:09,670 --> 00:06:14,700
Така што ова ќе се направи ќе биде да
печати Здраво, свет 50 пати по ред.

119
00:06:14,700 --> 00:06:18,080
>> Сега, велат сакав да iterate
над висината на пирамидата.

120
00:06:18,080 --> 00:06:21,560
Потоа, наместо на хард кодирање
да се процени состојбата,

121
00:06:21,560 --> 00:06:23,280
Јас само користење на променлива висина.

122
00:06:23,280 --> 00:06:27,180
Така што ова ќе направите е да iterate
над висината секој ред.

123
00:06:27,180 --> 00:06:30,280
И јас може да се направи нешто во
на телото на таа јамка.

124
00:06:30,280 --> 00:06:32,710
>> Што сакаме да се направи
во внатрешноста на телото на јамка?

125
00:06:32,710 --> 00:06:36,550
Па, како што е наведено претходно, ние сакаме
за печатење на простори и хаш

126
00:06:36,550 --> 00:06:40,730
за левата пирамида а потоа печати
две места, а потоа печати на хаш.

127
00:06:40,730 --> 00:06:42,500
Па ние веќе го сфатиле тоа.

128
00:06:42,500 --> 00:06:45,670
Значи можеме да почнеме да се пополни
во нашата програма многу повеќе.

129
00:06:45,670 --> 00:06:49,850
>> Еве ги имаат надворешен за телефонска линија која
iterates над секој ред во пирамидата.

130
00:06:49,850 --> 00:06:53,340
И во внатрешноста на телото Одам
да се печати простори постојано,

131
00:06:53,340 --> 00:06:56,860
хашови постојано, а потоа на јазот,
а потоа хашови за правото пирамида,

132
00:06:56,860 --> 00:07:00,440
а потоа, конечно, нов
линија за да започне следниот ред.

133
00:07:00,440 --> 00:07:02,860
>> Со тоа, ние сме поттикнати
на корисникот за влез.

134
00:07:02,860 --> 00:07:04,510
Ние сме направени сигурни дека тоа е валидна.

135
00:07:04,510 --> 00:07:06,280
И тогаш ние сме подготвени на пирамидата.

136
00:07:06,280 --> 00:07:09,540
Па Марио може успешно
се искачи на пирамида.

137
00:07:09,540 --> 00:07:10,970
>> Моето име е Zamyla.

138
00:07:10,970 --> 00:07:13,840
И ова е CS50.

139
00:07:13,840 --> 00:07:15,419

