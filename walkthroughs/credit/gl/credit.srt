1
00:00:00,000 --> 00:00:00,820

2
00:00:00,820 --> 00:00:02,560
>> Zamyla Chan: Imos comprobar o seu crédito.

3
00:00:02,560 --> 00:00:06,360
Neste problema, imos pedir ao usuario
para unha entrada dun número de tarxeta de crédito.

4
00:00:06,360 --> 00:00:10,090
Entón imos correr ese tarxeta de crédito
número para ver se é válido.

5
00:00:10,090 --> 00:00:13,430
Se é así, imos imprimir a empresa
que a tarxeta de crédito pertence.

6
00:00:13,430 --> 00:00:17,520
Se non, imos dicir ao usuario
que ese tarxeta non é válido.

7
00:00:17,520 --> 00:00:20,210
>> Imos saltar directo con
solicitude de entrada do usuario.

8
00:00:20,210 --> 00:00:23,080
O número da tarxeta de crédito é
do tipo de datos long_long,

9
00:00:23,080 --> 00:00:27,190
de xeito que a función da biblioteca CS50
get_long_long ha ser moi útil.

10
00:00:27,190 --> 00:00:30,690
Pero esta función que asegura
o usuario inserir un número enteiro calquera.

11
00:00:30,690 --> 00:00:34,730
Así, calquera enteiros positivos, negativos
enteiros ou cero é todo moi ben.

12
00:00:34,730 --> 00:00:37,560
Entón, cómpre a vostede aínda máis
validar ou non

13
00:00:37,560 --> 00:00:41,770
o usuario nos deu unha válida
número de tipo de tarxeta de crédito.

14
00:00:41,770 --> 00:00:44,560
>> Agora que temos unha tarxeta de crédito
número do usuario, a continuación,

15
00:00:44,560 --> 00:00:46,580
necesitamos calcular a suma de comprobación.

16
00:00:46,580 --> 00:00:49,780
Así, as sumas de verificación de tarxeta de crédito
calcúlanse como segue.

17
00:00:49,780 --> 00:00:54,370
Desde o segundo ao último díxito,
multiplicarmos os outros díxitos por 2.

18
00:00:54,370 --> 00:00:57,060
A continuación, engade os
díxitos dos produtos xuntos.

19
00:00:57,060 --> 00:01:00,140
Dende que nós engadimos o
suma dos díxitos que

20
00:01:00,140 --> 00:01:03,780
non foron multiplicados por 2 para que
suma anterior, que foi calculado.

21
00:01:03,780 --> 00:01:08,480
Finalmente, se este número remata
0, a continuación, o número é válido.

22
00:01:08,480 --> 00:01:11,760
>> Imos pasar por un exemplo
e dar este paso a paso.

23
00:01:11,760 --> 00:01:14,930
Así, o noso primeiro paso é comezar
do segundo ao último díxito

24
00:01:14,930 --> 00:01:18,080
e multiplicar os outros díxitos por dous.

25
00:01:18,080 --> 00:01:22,240
Agora, se eu gardados na tarxeta de crédito
número nunha variable chamada número CC,

26
00:01:22,240 --> 00:01:26,060
logo modding que en 10 faría
dáme o último díxito.

27
00:01:26,060 --> 00:01:28,910
Entón, como pode acceder
o segundo ao último díxito?

28
00:01:28,910 --> 00:01:32,030
>> OK, entón cando temos acceder
o segundo ao último díxito,

29
00:01:32,030 --> 00:01:35,790
entón imos percorrer
multiplicando cada dous díxitos por 2.

30
00:01:35,790 --> 00:01:38,620
Unha vez que temos isto, entón
imos dar estes produtos

31
00:01:38,620 --> 00:01:41,350
e engade díxitos destes produtos en conxunto.

32
00:01:41,350 --> 00:01:43,830
Entón aquí eu teño único
díxitos, entón iso é bo.

33
00:01:43,830 --> 00:01:47,480
Pero, a continuación, xa que recibín a miña última
number-- 7 multiplicado por 2--

34
00:01:47,480 --> 00:01:52,080
Eu podo engadir o 1 eo 4 de me dar 27.

35
00:01:52,080 --> 00:01:55,980
A partir de aí, engadimos que product--
27-- á suma dos díxitos que

36
00:01:55,980 --> 00:01:57,790
Non se multiplicados por 2.

37
00:01:57,790 --> 00:02:01,070
>> Entón aquí eu destacou todo
deses números en laranxa.

38
00:02:01,070 --> 00:02:04,900
Xa que sumar estes díxitos, logo
Temos o noso número final de checksum.

39
00:02:04,900 --> 00:02:09,120
Por iso, válida-lo, facendo
-se que o último díxito é 0.

40
00:02:09,120 --> 00:02:12,635
Se a suma de comprobación non termina
0, a continuación, o número de tarxeta de crédito

41
00:02:12,635 --> 00:02:14,400
é sempre válido.

42
00:02:14,400 --> 00:02:17,840
Se non, seguiremos
comprobar os identificadores de empresa

43
00:02:17,840 --> 00:02:19,870
ea lonxitude do número de tarxeta de crédito.

44
00:02:19,870 --> 00:02:21,830
>> Nós fornecen unha lista
de tres empresas,

45
00:02:21,830 --> 00:02:25,940
xunto con iso, o número de enteiros
que os seus números de tarxeta de crédito teñen.

46
00:02:25,940 --> 00:02:29,630
A continuación, os dous primeiros díxitos que
estas tarxetas poden comezar.

47
00:02:29,630 --> 00:02:34,070
Entón, ata a manter o control do
os dous primeiros díxitos da tarxeta de crédito

48
00:02:34,070 --> 00:02:37,620
eo número de enteiros en que a tarxeta.

49
00:02:37,620 --> 00:02:40,110
E con iso, ten
rematado o problema.

50
00:02:40,110 --> 00:02:44,210
O meu nome é Zamyla, e esta foi de Crédito.

51
00:02:44,210 --> 00:02:45,859

