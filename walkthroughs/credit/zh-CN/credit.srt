1
00:00:00,000 --> 00:00:00,820

2
00:00:00,820 --> 00:00:02,560
>> Zamyla成龙：让我们来看看你的信用。

3
00:00:02,560 --> 00:00:06,360
在这个问题中，我们将提示用户
为信用卡号的输入端。

4
00:00:06,360 --> 00:00:10,090
然后，我们将运行信用卡
看号码，如果它是有效的。

5
00:00:10,090 --> 00:00:13,430
如果是这样，我们就会打印公司
该信用卡所属。

6
00:00:13,430 --> 00:00:17,520
否则，我们将告诉用户
即该卡无效。

7
00:00:17,520 --> 00:00:20,210
>> 让我们跳右
提示用户输入。

8
00:00:20,210 --> 00:00:23,080
信用卡号码是
数据类型long_long的，

9
00:00:23,080 --> 00:00:27,190
所以CS50库函数
get_long_long将是相当有用的。

10
00:00:27,190 --> 00:00:30,690
但是，该功能可确保
用户输入的任意整数。

11
00:00:30,690 --> 00:00:34,730
因此任何正整数，负
整数或零是一切正常。

12
00:00:34,730 --> 00:00:37,560
所以，你来进一步
验证是否不

13
00:00:37,560 --> 00:00:41,770
用户给了我们一个有效的
信用卡类型号。

14
00:00:41,770 --> 00:00:44,560
>> 现在，我们有一张信用卡
从用户号码，然后

15
00:00:44,560 --> 00:00:46,580
我们需要计算校验和。

16
00:00:46,580 --> 00:00:49,780
因此，信用卡校验
的计算方法如下。

17
00:00:49,780 --> 00:00:54,370
从第二到最后的数字开始，
我们乘以2每隔数字。

18
00:00:54,370 --> 00:00:57,060
然后，我们添加这些
产品的数字在一起。

19
00:00:57,060 --> 00:01:00,140
从我们添加
的数字之和是

20
00:01:00,140 --> 00:01:03,780
不乘以2到
我们以前的计算总和。

21
00:01:03,780 --> 00:01:08,480
最后，如​​果这一数字结束
在0，则数是有效的。

22
00:01:08,480 --> 00:01:11,760
>> 让我们通过一个例子
并借此一步一步来。

23
00:01:11,760 --> 00:01:14,930
因此，我们的第一个步骤是启动
从第二到最后的数字

24
00:01:14,930 --> 00:01:18,080
和乘以二每隔一个数字。

25
00:01:18,080 --> 00:01:22,240
现在，如果我储存的信用卡
在一个变量叫做CC数数，

26
00:01:22,240 --> 00:01:26,060
然后改装，通过10将
给我的最后一位数字。

27
00:01:26,060 --> 00:01:28,910
那么你怎么可能访问
倒数第二个数字吗？

28
00:01:28,910 --> 00:01:32,030
>> 好了，一旦我们访问
倒数第二位，

29
00:01:32,030 --> 00:01:35,790
然后我们会遍历
2每隔位数相乘。

30
00:01:35,790 --> 00:01:38,620
一旦我们有了这一点，那么
我们将这些产品

31
00:01:38,620 --> 00:01:41,350
并增加这些产品的数字在一起。

32
00:01:41,350 --> 00:01:43,830
所以在这里我有一个
数字，所以这是很好。

33
00:01:43,830 --> 00:01:47,480
但后来一旦我得到我上次
number-- 7乘以2--

34
00:01:47,480 --> 00:01:52,080
我加了1和4给我27。

35
00:01:52,080 --> 00:01:55,980
从那里，我们补充一点，产品展示 - 
27--到的数字的总和是

36
00:01:55,980 --> 00:01:57,790
不乘以2。

37
00:01:57,790 --> 00:02:01,070
>> 所以在这里我已经强调所有
在橙色的那些数字。

38
00:02:01,070 --> 00:02:04,900
一旦我们加入这些数字，然后
我们得到我们最后的校验数。

39
00:02:04,900 --> 00:02:09,120
因此，我们通过验证它
确保最后一个数字为0。

40
00:02:09,120 --> 00:02:12,635
如果校验和不结束在
0，则信用卡号码

41
00:02:12,635 --> 00:02:14,400
肯定是无效的。

42
00:02:14,400 --> 00:02:17,840
否则，我们就一起去
检查企业标识

43
00:02:17,840 --> 00:02:19,870
和信用卡号码的长度。

44
00:02:19,870 --> 00:02:21,830
>> 我们提供了一个列表
三家企业，

45
00:02:21,830 --> 00:02:25,940
沿着与，整数的数
他们的信用卡号码有。

46
00:02:25,940 --> 00:02:29,630
然后前两个数字是
这些卡可能下手。

47
00:02:29,630 --> 00:02:34,070
所以，你来跟踪的
信用卡的前两个数字

48
00:02:34,070 --> 00:02:37,620
并且在该卡的整数的数目。

49
00:02:37,620 --> 00:02:40,110
有了这样的，你已经
完成的问题。

50
00:02:40,110 --> 00:02:44,210
我的名字是Zamyla，这是信用。

51
00:02:44,210 --> 00:02:45,859

