Zamyla成龙：让我们来看看你的信用。 在这个问题中，我们将提示用户 为信用卡号的输入端。 然后，我们将运行信用卡 看号码，如果它是有效的。 如果是这样，我们就会打印公司 该信用卡所属。 否则，我们将告诉用户 即该卡无效。 

让我们跳右 提示用户输入。 信用卡号码是 数据类型long_long的， 所以CS50库函数 get_long_long将是相当有用的。 但是，该功能可确保 用户输入的任意整数。 因此任何正整数，负 整数或零是一切正常。 所以，你来进一步 验证是否不 用户给了我们一个有效的 信用卡类型号。 

现在，我们有一张信用卡 从用户号码，然后 我们需要计算校验和。 因此，信用卡校验 的计算方法如下。 从第二到最后的数字开始， 我们乘以2每隔数字。 然后，我们添加这些 产品的数字在一起。 从我们添加 的数字之和是 不乘以2到 我们以前的计算总和。 最后，如​​果这一数字结束 在0，则数是有效的。 

让我们通过一个例子 并借此一步一步来。 因此，我们的第一个步骤是启动 从第二到最后的数字 和乘以二每隔一个数字。 现在，如果我储存的信用卡 在一个变量叫做CC数数， 然后改装，通过10将 给我的最后一位数字。 那么你怎么可能访问 倒数第二个数字吗？ 

好了，一旦我们访问 倒数第二位， 然后我们会遍历 2每隔位数相乘。 一旦我们有了这一点，那么 我们将这些产品 并增加这些产品的数字在一起。 所以在这里我有一个 数字，所以这是很好。 但后来一旦我得到我上次 number-- 7乘以2-- 我加了1和4给我27。 从那里，我们补充一点，产品展示 -  27--到的数字的总和是 不乘以2。 

所以在这里我已经强调所有 在橙色的那些数字。 一旦我们加入这些数字，然后 我们得到我们最后的校验数。 因此，我们通过验证它 确保最后一个数字为0。 如果校验和不结束在 0，则信用卡号码 肯定是无效的。 否则，我们就一起去 检查企业标识 和信用卡号码的长度。 

我们提供了一个列表 三家企业， 沿着与，整数的数 他们的信用卡号码有。 然后前两个数字是 这些卡可能下手。 所以，你来跟踪的 信用卡的前两个数字 并且在该卡的整数的数目。 有了这样的，你已经 完成的问题。 我的名字是Zamyla，这是信用。 