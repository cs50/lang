Zamylaチャンは：それでは、あなたの信用を確認してみましょう。 この問題では、ユーザを促します クレジットカード番号の入力のために。 その後、我々は、そのクレジットカードを実行します それが有効だかどうかを確認するために数。 もしそうなら、私たちは会社を印刷します そのクレジットカードが属しています。 そうでなければ、我々はユーザーに教えてあげましょう そのカードが無効であること。 

と右にジャンプしてみましょう ユーザーに入力を求めるプロンプトが表示。 クレジットカード番号であります データ型long_longの、 そうCS50ライブラリ関数 get_long_longは非常に有用であろう。 しかし、この機能はことを保証します ユーザは、任意の整数を入力します。 だから、任意の正の整数、負 整数、またはゼロは、すべての罰金です。 まであなたのため、さらなる か否かを検証します ユーザーは、私たちに有効を与えています クレジットカードの種類の数。 

今、私たちはクレジットカードを持っていること その後、ユーザからの数、 私たちは、チェックサムを計算する必要があります。 だから、クレジットカードのチェックサム 次のように計算されます。 最後の数字に2番目から出発し、 我々は2によって他のすべての数字を掛けます。 その後、我々はそれらを追加します。 一緒に製品の桁。 それから、我々は追加します その数字の和 それに2を乗じていませんでした 我々は計算された前の合計。 最後に、その数は終了した場合 0で、数値は有効です。 

それでは、例を挙げて行きましょう ステップによって、この一歩を踏み出します。 だから、私たちの最初のステップは、起動することです 最後の数字に2番目から そして2によって他のすべての数字を掛けます。 今、私はクレジットカードを保存した場合 CC番号と呼ばれる変数の数値、 その後、10であることをだろう改造 私は非常に最後の桁を与えます。 だから、どのようにアクセスする可能性があります 最後の数字に2番目の？ 

[OK]を、ので、一度私たちは、アクセスしました 最後の数字に2番目、 その後、我々は反復処理します 2によって他のすべての数字を掛けます。 我々はその後、ということをしたら 私たちは、それらの製品を取りますよ そして、一緒に、これらの製品の数字を追加します。 だからここに私は、単一の持っています 数字は、そのためには大丈夫です。 しかし、私は私の最後に到達したら 2--を乗じnumber-- 7 私は私に27を与えるために1と4を追加します。 そこから、私たちはそのproduct--を追加します その数字の和に27-- 2を乗じていませんでした。 

だからここに私はすべての強調表示されました オレンジ色でこれらの数字の。 我々は、これらの数字を追加すると、その後、 私たちは、最終的なチェックサム番号を取得します。 だから我々は作ることによってそれを検証します 最後の桁が0であることを確認してください。 チェックサムはで終了しない場合 0の場合、クレジットカード番号 間違いなく無効です。 そうでなければ、のにに行こう 会社識別子をチェック そして、クレジットカード番号の長さ。 

私たちは、リストを提供してきました 3社の、 それとともに、整数の個数 自分のクレジットカード番号を持っています。 そして、最初の2桁という それらのカードはで始まる可能性があります。 ですからまでを追跡するために クレジットカードの最初の2桁 そしてそのカードの整数の数。 ことで、あなたはしました 問題を終えました。 私の名前はZamylaであり、これはクレジットでした。 