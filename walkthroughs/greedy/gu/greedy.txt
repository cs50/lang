લોભી વિચાર કરીએ. લોભી, અમારા કામ ભજવે છે લોભી કેશિયર ભૂમિકા. વપરાશકર્તા કેવી રીતે અમને જણાવો કરશે ખૂબ ફેરફાર અમે તેમને ઋણી છું, અને પછી અમારી નોકરી ગણતરી છે સિક્કા ની ન્યુનત્તમ નંબર અમે બનાવવા માટે ઉપયોગ કરી શકો છો કે ફેરફાર કે રકમ. 

ચાલો એક ઉદાહરણ સાથે શરૂ કરો. વપરાશકર્તા $ 0.32 પાછા જરૂર કહો. અમે આપીને આ કરી શકે છે તેમને 32 પેનિઝ, એક ટકા દરેક. અથવા હું પણ પાંચ coins-- ઉપયોગ કરી શકે છે તેમને ત્રણ dimes આપ્યા, $ 0.10 દરેક, અને બે પેનિઝ, $ 0.02 દરેક. પરંતુ અમે પણ ઉપયોગ કરી શકે છે ઓછા સિક્કા કે બનાવવા માટે? 

greedy-- સમગ્ર યુક્તિ લોભી cashier-- હોઈ સૌથી સિક્કો શક્ય ઉપયોગ છે. તેથી જ્યારે અમે હોય નિવાસ અમે તેમને ઉપયોગ કરશો. અને પછી તે બહાર ચલાવવા એકવાર, અમે dimes, $ 0.10 દરેક ઉપયોગ કરશો. પછી nickels, 5 સેન્ટનો દરેક અને પછી પેનિઝ નીચે, એક ટકા દરેક. સૌથી સિક્કો ઉપયોગ કરીને શક્ય જ્યારે અમે કરી શકો છો, અમે ખાતરી કરો કે અમે સૌથી ઓછા નંબર ઉપયોગ શક્ય સિક્કા ફેરફાર કરવા માટે. 

તો ચાલો આ લઈ જવામાં. વપરાશકર્તા $ 0.32 જરૂર છે. તેથી આપણે આપણી જાતને પૂછો, અમે એક ક્વાર્ટર ઉપયોગ કરી શકો છો? વેલ, હા અમે કરી શકો છો. તેથી હવે અમે માત્ર તેમને ખબર $ 0.07, અને અમે એક સિક્કો ઉપયોગ થાય છે. 

અમે બીજા ક્વાર્ટરમાં ઉપયોગ કરી શકું? ના, એ જ પ્રમાણે. $ 0.07 $ 0.25 કરતાં ઓછી છે, તેથી અમે આગળ વધવા આગામી સૌથી સિક્કો ઉપલબ્ધ છે. Dimes $ 0.10 છે, અને ફરીથી, અમે dimes ઉપયોગ કરી શકતા નથી. કારણ કે dimes $ 0.10 વર્થ છે જે ફેરફાર જથ્થો દેવું કરતાં વધુ છે. 

અમે nickels પર જાઓ. અને, હા ખરેખર, $ 0.05 કરતાં ઓછી છે $ 0.10-- તેથી અમે એક નિકલ ઉપયોગ કરી શકો છો. તેથી હવે અમે માત્ર $ 0.02 વપરાશકર્તા બાકી અને અમે અત્યાર સુધી બે સિક્કા ઉપયોગ કર્યો છે. અમે બીજા નિકલ ઉપયોગ કરી શકતા નથી. તેથી તો અમે અંતે છેલ્લા સિક્કો પર આગળ વધો અમારા નિકાલ, જે પેનિઝ છે. 

અને અમે પૈસો ઉપયોગ કરી શકો છો? વેલ, yes-- અને અમે બે મદદથી અંત ચાર સિક્કા કુલ પેનિઝ. 

એકવાર તમે પૂર્ણ કરી રહ્યાં છો, કાર્યક્રમ આના જેવો દેખાશે. એકવાર વપરાશકર્તા ચાલે લોભી કાર્યક્રમ, તેઓ પડશે જથ્થો આપવા માટે પૂછવામાં આવશે ડોલર ફેરફાર કે તેઓ દેવું કરી રહ્યાં છો. અને પછી તમારા કાર્યક્રમ આઉટપુટ કરશે સિક્કા ન્યુનત્તમ જથ્થો જે લોભી કેશિયર ઉપયોગ કરશે ફેરફાર કે રકમ બનાવવા માટે. 

તેથી હવે આપણે આ તોડી દો અમારા subtasks ફેરવાઇ. પ્રથમ અમે પૂછવા માટે જઈ રહ્યાં છો અમારા ફેરફાર રકમ માટે વપરાશકર્તા. અને, કોઇપણ વપરાશકર્તા ઇનપુટ સાથે, અમે કરવા માંગો છો ખાતરી કરો કે અમે કે જે ઇનપુટ માન્ય કરી અને ખાતરી કરો કે અમે તે ઉપયોગ કરી શકો છો કે અમારા કાર્યક્રમ બાકીના માટે ઇનપુટ. પછી આપણે હંમેશા જઈ રહ્યાં છો સૌથી બિંદુ શક્ય ઉપયોગ અને તેનો ઉપયોગ સિક્કા સાચવી રાખે. અને છેલ્લે, અંતિમ પ્રિન્ટ સિક્કા કે અમે ઉપયોગ સંખ્યા. 

તેથી આપણે પૂછવાની વિશે વાત કરો. રકમ, સેન્ટ બનાવવા જ પડશે અને આ ડોલર છે. અને તેથી ડોલર માટે, અમે જઈ રહ્યાં છો ફ્લોટ ચલ પ્રકાર વાપરવા માટે. હવે જ્યારે તમે ઇનપુટ માટે વપરાશકર્તા પૂછો, તમે ખાતરી કરો કે તે માન્ય છે તેની ખાતરી કરવા માંગો છો. અને તેથી અહીં અમે લાભ લેવા માંગો ડુ-જ્યારે લૂપ રચના. 

ડુ-જ્યારે લૂપ ચલાવવા કરશે લૂપ શરીર ઓછામાં ઓછા એક વખત. તેથી આ હાથમાં આવે છે. અમે જાણીએ છીએ કે અમે પૂછવા જરૂર વપરાશકર્તા ફ્લોટ માટે ઓછામાં ઓછા એક વખત. હવે જો કે ફ્લોટ માન્ય છે. તે મહાન છે. અમે પર ખસેડો. પરંતુ જો નહિં, તો લૂપ ખાતરી કરશે અમે યોગ્ય ફ્લોટ વિચાર ત્યાં સુધી સતત પુનરાવર્તન કરીને વપરાશકર્તા અમને માન્ય કિંમત આપે છે. 

હવે ડુ-જ્યારે માટે લૂપ શરત, અમે જરૂર ધ્યાનમાં તે શું અર્થ થાય છે અમાન્ય ફ્લોટ છે. સંદર્ભમાં તેથી આ સમસ્યા, કદાચ તે માત્ર અર્થમાં બનાવે છે હકારાત્મક કિંમતો સ્વીકારે છે. 

તેથી થઈ વધવા આપણે મેળવી કર્યું વપરાશકર્તા માંથી ડોલર મૂલ્ય. પરંતુ અમે સિક્કા સાથે કામ કરીએ છીએ, જે સેન્ટ માં સંપૂર્ણપણે છે. $ 1 100 સેન્ટનો માટે સમકક્ષ હોય છે. આવું કરવા માટે એક સારી બાબત છે સેન્ટ માં તે કિંમતો કન્વર્ટ. 

હવે જ્યારે એક ફ્લોટ માંથી રૂપાંતરિત પૂર્ણાંક માટે, સેન્ટ ડોલર તેથી, અમે ખાતરી કરો કે અમે કાળજી કરશો બનાવવા માંગો છો ફ્લોટિંગ પોઇન્ટ અશુદ્ધિ વિશે. તેથી તે કરતી કહે છે એનો અર્થ એ થાય મારા ડોલર મારા ફ્લોટ કિંમત કિંમત એક પણ $ 2, ત્યાં હજુ પણ હતી ત્યાં કેટલાક છૂટાછવાયા નંબરો હોઈ શકે છે. તેથી અમે તે તેની ખાતરી કરવા માંગો છો અમે 100 દ્વારા મલ્ટીપ્લાય સેન્ટ વિચાર નથી, પરંતુ અમે પણ તે બંધ ધરપકડ. 

તેથી હવે અમે જથ્થો છે ફેરફાર વપરાશકર્તા માટે દેવું કર્યું હતું. અમે મૂળ ડોલર તે મેળવી, અને હવે અમે સેન્ટ તે રૂપાંતરિત કર્યા છે. હવે તો આપણે હૃદય સાથે આગળ વધી શકે લોભી અલ્ગોરિધમનો છે, જે હંમેશા છે સૌથી સિક્કો શક્ય મદદથી. જ્યારે અમે આ કરી રહ્યા છીએ, તે અમે પણ આવશ્યક છે કેટલા સિક્કા છે ટ્રૅક રાખવા વપરાશકર્તા પરત ફર્યા કરી રહ્યું તેમજ બાકી વપરાશકર્તા માટે દેવું બદલો. 

કાર્યક્રમ જોવા મળશે થોડું આના જેવું. તમે પછી રકમ મળી ડોલર અને સેન્ટ રૂપાંતરિત કે, પછી તમે લૂપ દાખલ કરશો. નિવાસ હોઇ શકે છે used-- કે જે કહે છે જ્યારે ફેરફાર જથ્થો માટે દેવું વપરાશકર્તા કરતાં વધારે અથવા $ 0.25 માટે સમાન છે, તમે એક ક્વાર્ટર ઉપયોગ કરશો. 

હવે શું એક ક્વાર્ટર વારસાક્રમ નક્કી મદદથી કરે છે? વેલ, દાખલો તમે સિક્કો વધારો પડશે વપરાશકર્તા પરત કરવામાં ગણતરી. અને બીજા તમે વર્તમાન ઘટાડો પડશે ફેરફાર જથ્થો વપરાશકર્તા પાછા દેવું $ 0.25. 

પુનરાવર્તન કે પછી ત્યાં સુધી નિવાસ લાંબા સમય સુધી ઉપયોગ કરી શકાય છે, આગામી સૌથી પર આગળ વધો $ 0.10 આ કિસ્સામાં dimes માં coin--. તેથી જો તમે ત્યાં સુધી કે લૂપ દાખલ કરશો તમે લાંબા સમય સુધી dimes ઉપયોગ કરી શકો છો. પછી આગામી કરવા માટે આગળ ધપાવો સૌથી સિક્કો, nickels. nickels લાંબા સમય સુધી ઉપયોગ કરી શકાય છે પછી, પેનિઝ બાકી રકમ ઉપયોગ કરે છે. અને છેલ્લે, પ્રિન્ટ સિક્કા સંખ્યા ઉપયોગ થાય છે. 

બીજી રીતે કે તમે કરી શકો છો લોભી સમસ્યા સંપર્ક મોડ્યૂલો અભિગમ ઉપયોગ કરવા માટે છે. એડિશનનો ઓપરેટર છે કે બાકીની આપે બે નંબર વચ્ચે વિભાગ. હું 50 ફેરફારની 5 કહે છે હતા. વેલ, 5 50 એક પરિબળ છે, જેથી બાકીની 0 હશે. 50 ફેરફારની 10-- વેલ, 10 પણ એક પરીબળ છે 50, જેથી બાકીની પણ 0 હોય છે. 50 ફેરફારની 50--, કોઈપણ નંબર પોતે mod કોઈપણ શેષ છે નથી જઈ રહ્યા છે. 

શું 50 ફેરફારની 49 વિશે શું? વેલ, 49 માત્ર એક જ વાર 50 માં જાય છે. તેથી બાકીની માટે 1 પ્રયત્ન રહ્યું છે. 53 ફેરફારની 50 રહ્યું છે તમે 3 એક બાકીની આપે છે. 

તેથી અમે મોડ્યૂલો કેવી રીતે ઉપયોગ કરી શકો છો અને કદાચ અમુક વિભાગ અમારા લોભી અલ્ગોરિધમનો અમલ કરવા માટે? વેલ, અમે હજુ પણ સાચી રહેવા માંગો છો અલ્ગોરિધમનો લોભી હૃદય સૌથી સિક્કો શક્ય ઉપયોગ કરે છે. 

તેથી જો આપણે કોઇ પણ ઉપયોગ કરી શકો છો માતાનો જાતને પૂછો નિવાસ વપરાશકર્તા માટે $ 0.32 પાછા. વેલ, 32 ફેરફારની 25 આપે છે યુએસ $ 0.07 શેષ. તેથી તે કહે છે કે અમે ચોક્કસપણે કરી શકો છો $ 0.07 બાકી એક ક્વાર્ટર ઉપયોગ કરે છે. 

અમે પછી કોઈપણ dimes ઉપયોગ કરી શકું? વેલ, no-- કારણ કે $ 0.07 ફેરફારની $ 0.10 અમને 7 ની બાકીની આપે છે. 10 7 માં તમામ જાઓ નથી. 

પછી અમે nickels ઉપયોગ કરી શકો છો? વેલ $ 0.07 ફેરફારની 5 સેન્ટનો અમને બે બાકી આપે છે. અને છેલ્લે, અમે કોઈપણ પેનિઝ ઉપયોગ કરી શકો છો? 2 મોડ 1 યુએસ 0 આપે છે, જે છેવટે શું છે અમે પછી કારણ કે માંગો છો એનો અર્થ એ થાય છે કે અમે પરત કર્યું વપરાશકર્તા ફેરફાર તમામ દેવું. 

તેથી હવે તમે બે શક્ય માર્ગો છે લોભી અલ્ગોરિધમનો અમલીકરણ આંટીઓ સાથે અને એક સાથે એક મોડ્યૂલો અને વિભાગ મિશ્રણ. તેથી છેવટે, અમે ફક્ત જરૂર સિક્કા અંતિમ નંબર છાપો. 

જો હું તમને કે હું હતો કહી ઇચ્છતા 3 પાળતુ પ્રાણી અને આ કિંમત નિશ્ચિત કરવામાં આવી હતી, પછી હું માત્ર એક ઉપયોગ કરી શકે છે સરળ પ્રિન્ટ ટેસ્ટ નિવેદન. પરંતુ અમારા કિંમત ખરેખર છે એક ચલ માં સ્ટોર. તેથી તમે કેવી રીતે છાપી નથી કિંમતો ચલો સંગ્રહિત? 

આ માટે અમે લઈ જગ્યામાં ફાયદો. હું પહેલેથી જ જાહેર કર્યું હતું કહો એક આરંભ પૂર્ણાંક n એ. પછી પાછળથી તો હું છાપો કે ઇચ્છતા કિંમત, પછી હું શબ્દમાળા લખી શકે છે. અને તે કિંમત બદલે હું ઉપયોગ કરશે કે integer--% હું માટે એક પ્લેસહોલ્ડર. એક પછી શબ્દમાળા પછી, હું અલ્પવિરામ, ચલ દ્વારા અનુસરવામાં હું પ્રિન્ટ કરવા માંગો છો છે. અને પછી, જ્યારે તે છાપે છે, તે n ના કિંમત છાપી પડશે. 

હું પણ એક પ્લેસહોલ્ડર ઉપયોગ કરી શકે છે એક ફ્લોટ, દાખલા તરીકે છે. જો હું તમને કહું છું કે કેવી રીતે કરવા માગે છે ખૂબ રોકડ હું મારા ખિસ્સામાંથી હોય છે, પછી હું કહી શકે છે હું% એફ ડોલર છે. અને પછી જ્યારે તે પ્રિન્ટ પર, પછી n કરશે તે જગ્યાએ ધારક યોજાય છે. હું પણ, દાખલા તરીકે, ઘણા ઉપયોગ કરી શકે છે કેટલાક ચલો માટે જગ્યામાં. તેથી લાંબા તરીકે હું યાદી ક્રમમાં તેમને, પછી હું તમે કેવી રીતે કહી ઘણા શકો કૂતરાં અને બિલાડીઓ હું હોય છે. 

હવે અમે જાણીએ છીએ પૂછવા કેવી રીતે ફેરફાર રકમ માટે વપરાશકર્તા, ખાતરી કરો કે જે ઇનપુટ માન્ય છે, અને પછી અમે અમલીકરણ બે શક્ય માર્ગો છે હંમેશા ઉપયોગ લોભી અલ્ગોરિધમનો સૌથી સિક્કો શક્ય છે. કારણ કે અમે ટ્રેક રાખવામાં કર્યું કેટલા સિક્કા અમે ઉપયોગ કરી રહ્યાં છો, અમે પછી ઓવરને અંતે તે કિંમત છાપી શકો છો, વપરાશકર્તા કેટલા સિક્કા તેઓ કહેવાની પાછા ફરવામાં. 

મારું નામ Amayla છે, અને આ CS50 છે. 