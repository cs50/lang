Hãy tham lam. Trong tham lam, công việc của chúng tôi là để chơi vai trò của một thủ quỹ tham lam. Người sử dụng sẽ cho chúng tôi biết làm thế nào nhiều thay đổi, chúng tôi nợ họ, và sau đó công việc của chúng tôi là để tính toán số lượng tối thiểu của đồng tiền rằng chúng ta có thể sử dụng để làm rằng số lượng thay đổi. 

Hãy bắt đầu với một ví dụ. Nói người dùng đòi hỏi $ 0,32 trở lại. Chúng ta có thể làm điều này bằng cách cho họ 32 đồng xu, một xu cho mỗi. Hoặc tôi cũng có thể sử dụng năm coins-- bởi cho họ ba mưu sinh, $ 0,10 mỗi, và hai đồng xu, 0,02 $ mỗi. Nhưng chúng ta có thể sử dụng ngay cả đồng tiền ít hơn để làm cho điều đó? 

Toàn bộ chiến thuật trong greedy-- là một cashier-- tham lam là sử dụng các đồng tiền lớn nhất có thể. Vì vậy, bất cứ khi nào chúng tôi có quý chúng tôi sẽ sử dụng chúng. Và sau đó một lần những người chạy ra ngoài, chúng tôi sẽ sử dụng mưu sinh, 0,10 $ mỗi. Sau đó nickels, 5 cent mỗi, và sau đó xuống đồng xu, một xu cho mỗi. Bằng cách sử dụng các đồng tiền lớn nhất có thể bất cứ khi nào có thể, chúng tôi đảm bảo rằng chúng tôi sử dụng số lượng ít nhất tiền xu có thể thay đổi. 

Vì vậy, hãy đi bộ này thông qua. Người sử dụng cần $ 0,32. Vì vậy, chúng ta tự hỏi, chúng ta có thể sử dụng một phần tư? Vâng, vâng, chúng tôi có thể. Vì vậy, bây giờ chúng ta chỉ biết họ $ 0,07, và chúng tôi sử dụng một đồng xu. 

Chúng ta có thể sử dụng một quý? Ồ không. 0,07 $ là ít hơn $ 0,25, vì vậy chúng tôi tiến hành để đồng xu lớn nhất tiếp theo có sẵn. Dimes là $ 0.10, và một lần nữa, chúng ta không thể sử dụng mưu sinh. Vì mưu sinh trị giá $ 0.10, mà là nhiều hơn so với số lượng thay đổi nợ. 

Chúng tôi đi đến nickels. Và, có thực sự, 0,05 $ là ít hơn $ 0.10-- vì vậy chúng tôi có thể sử dụng một niken. Vì vậy, bây giờ chúng tôi chỉ còn nợ người sử dụng $ 0.02, và chúng tôi cho đến nay sử dụng hai đồng tiền. Chúng tôi không thể sử dụng niken khác. Vì vậy, sau đó chúng tôi tiến tới đồng xu cuối cùng tại xử lý của chúng tôi, đó là những đồng xu. 

Và chúng ta có thể sử dụng đồng xu? Vâng, yes-- và chúng tôi sẽ chỉ sử dụng hai đồng xu cho tổng cộng bốn xu. 

Khi bạn đã hoàn tất, chương trình sẽ giống như thế này. Một khi người dùng chạy các Chương trình tham lam, họ sẽ được nhắc nhở để cung cấp cho số lượng thay đổi bằng đô la mà họ đang nợ. Và sau đó bạn chương trình sẽ ra số tiền tối thiểu của đồng tiền mà thủ quỹ tham lam sẽ sử dụng để làm cho rằng số lượng thay đổi. 

Vì vậy, bây giờ hãy phá vỡ này thành nhiệm vụ nhỏ của chúng tôi. Đầu tiên chúng ta sẽ nhắc chúng tôi sử dụng cho một số lượng thay đổi. Và, như với bất kỳ người sử dụng, chúng tôi muốn hãy chắc chắn rằng chúng tôi xác nhận đầu vào và đảm bảo rằng chúng tôi có thể sử dụng đầu vào cho phần còn lại của chương trình của chúng tôi. Sau đó, chúng ta sẽ luôn luôn sử dụng các điểm lớn nhất có thể và theo dõi các đồng tiền được sử dụng. Và cuối cùng, in thức số tiền mà chúng tôi sử dụng. 

Vì vậy, chúng ta hãy nói về nhắc. Lượng phải làm cent, và đây là bằng đô la. Và vì vậy đối với đồng USD, chúng ta sẽ sử dụng các loại biến float. Bây giờ mỗi khi bạn hỏi một người sử dụng cho đầu vào, bạn muốn chắc chắn rằng đó là hợp lệ. Và vì vậy ở đây chúng tôi muốn tận dụng lợi thế của do-while loop xây dựng. 

Một vòng lặp do-while sẽ thực hiện các cơ thể của vòng ít nhất một lần. Vì vậy, đây có ích. Chúng ta biết rằng chúng ta cần phải nhắc nhở sử dụng ít nhất một lần cho một phao. Bây giờ nếu float đó là hợp lệ. Thật tuyệt. Chúng tôi di chuyển trên. Nhưng nếu không, vòng lặp sẽ đảm bảo mà chúng ta có được một phao thích bằng cách lặp lại liên tục cho đến người sử dụng cung cấp cho chúng tôi một giá trị hợp lệ. 

Bây giờ cho các do-while điều kiện vòng lặp, chúng ta cần để xem xét những gì nó có nghĩa là để có một phao không hợp lệ. Vì vậy, với bối cảnh của vấn đề này, có lẽ nó làm cho cảm giác chỉ để chấp nhận các giá trị tích cực. 

Vì vậy, di chuyển on-- chúng tôi đã thu được một giá trị đồng đô la từ người sử dụng. Nhưng chúng tôi đang làm việc với các đồng tiền, đó là hoàn toàn trong xu. $ 1 là tương đương với 100 xu. Vì vậy, một điều tốt để làm là để chuyển đổi các giá trị vào xu. 

Bây giờ khi chuyển đổi từ một phao một số nguyên, do đô la để cent, chúng tôi muốn chắc chắn rằng chúng tôi đang cẩn thận về dấu chấm động không chính xác. Vì vậy, đó có nghĩa là mà-- nói đô la của tôi value-- phao của tôi value-- thậm chí nhiều $ 2, vẫn còn có thể một số con số đi lạc trong đó. Vì vậy, chúng tôi muốn chắc chắn rằng không chỉ Chúng ta nhân với 100 để có được xu, nhưng chúng tôi cũng tròn nó đi. 

Vì vậy, bây giờ chúng tôi có số tiền thay đổi nợ cho người dùng. Chúng tôi ban đầu thu được bằng tiền đôla, và bây giờ chúng tôi đã chuyển đổi nó để xu. Vì vậy, bây giờ chúng tôi có thể tiến hành với trái tim của các thuật toán tham lam, mà luôn luôn là sử dụng các đồng tiền lớn nhất có thể. Trong khi chúng tôi đang làm điều này, đó là điều cần thiết mà chúng tôi cũng theo dõi có bao nhiêu tiền là sẽ được trả lại cho người sử dụng cũng như phần còn lại thay đổi nợ cho người dùng. 

Chương trình sẽ tìm một cái gì đó như thế này. Sau khi bạn nhận được lượng USD và chuyển đổi đó để cent, sau đó bạn sẽ bước vào một vòng lặp. Trong khi phần tư có thể used-- mà là để nói trong khi số lượng thay đổi nợ đến người sử dụng lớn hơn hoặc bằng $ 0,25, bạn sẽ sử dụng một phần tư. 

Bây giờ những gì sử dụng một phần tư đòi hỏi? Vâng, cùng-- bạn sẽ tăng đồng xu đếm được trả về cho người dùng. Và thứ hai, bạn sẽ giảm hiện tại số lượng thay đổi còn nợ lại cho người sử dụng bởi $ 0.25. 

Sau khi lặp đi lặp lại đó cho đến khi tư có thể không còn được sử dụng, tiến tới lớn nhất tiếp theo coin-- trong trường hợp này mưu sinh, $ 0.10. Vì vậy, bạn sẽ nhập vòng lặp cho đến khi bạn không còn có thể sử dụng mưu sinh. Sau đó tiến hành tiếp theo đồng xu lớn nhất, nickels. Sau nickels không còn có thể được sử dụng, sử dụng số tiền còn lại trong xu. Và cuối cùng, in số tiền được sử dụng. 

Một cách khác mà bạn có thể tiếp cận vấn đề tham lam là sử dụng các phương pháp tiếp cận theo modulo. Modulo là một nhà điều hành mà trả phần còn lại của sự phân chia giữa hai con số. Nói rằng tôi có 50 mod 5. Vâng, 5 là một yếu tố của 50, nên phần cuối sẽ là 0. 50 mod 10-- tốt, 10 cũng là một yếu tố 50, vì vậy phần còn lại cũng là 0. 50 mod 50-- tốt, bất kỳ số mod tự sẽ không có bất kỳ còn lại. 

Còn 50 mod 49? Vâng, 49 chỉ đi vào 50 lần. Vì vậy, phần còn lại sẽ là 1. 53 mod 50 sẽ cung cấp cho bạn một phần còn lại của 3. 

Vậy làm thế nào chúng ta có thể sử dụng modulo và có lẽ một số bộ phận để thực hiện thuật toán tham lam của chúng tôi? Vâng, chúng tôi vẫn muốn ở lại đúng với trung tâm của sự tham lam algorithm-- đó là sử dụng các đồng tiền lớn nhất có thể. 

Vì vậy, hãy tự hỏi mình, nếu chúng ta có thể sử dụng bất kỳ khu để trả $ 0,32 cho người dùng. Vâng, 32 mod 25 cho chúng tôi còn lại của $ 0.07. Vì vậy, cho chúng ta biết rằng chúng ta có thể chắc chắn sử dụng một phần tư với 0,07 $ còn lại. 

Chúng ta có thể sau đó sử dụng bất kỳ mưu sinh? Vâng, no-- vì 0,07 $ mod $ 0,10 cho chúng ta một phần còn lại của 7. 10 không đi vào 7 cả. 

Sau đó, chúng ta có thể sử dụng nickels? Vâng 0,07 $ mod 5 cent cho chúng ta hai người còn lại. Và cuối cùng, chúng ta có thể sử dụng bất kỳ đồng xu? 2 mod 1 cho chúng ta 0, đó là những gì cuối cùng chúng tôi muốn bởi vì sau đó có nghĩa là chúng tôi đã trở lại cho người sử dụng tất cả các thay đổi nợ. 

Vì vậy, bây giờ bạn có hai cách có thể có của thực hiện algorithm-- tham lam một với các vòng lặp và một với một sự kết hợp của modulo và phân chia. Vì vậy, cuối cùng, chúng ta chỉ cần in số cuối cùng của tiền xu. 

Nếu tôi muốn nói với bạn rằng tôi đã có 3 vật nuôi và giá trị này được hardcoded, sau đó tôi chỉ có thể sử dụng một đơn giản tuyên bố thử nghiệm in. Nhưng giá trị của chúng tôi thực sự là được lưu trữ trong một biến. Vì vậy, làm thế nào để bạn in giá trị được lưu trữ trong các biến? 

Đối với điều này chúng ta lợi dụng giữ chỗ. Nói rằng tôi đã tuyên bố một số nguyên n khởi tạo. Sau đó, sau này nếu tôi muốn in mà giá trị, sau đó tôi sẽ viết các chuỗi. Và thay vì giá trị mà tôi sẽ sử dụng một giữ chỗ cho rằng% integer-- i. Sau đó, sau khi chuỗi, tôi có một dấu phẩy, tiếp theo là các biến mà tôi muốn in. Và sau này, khi in, nó sẽ in giá trị của n. 

Tôi cũng có thể sử dụng một trình giữ chỗ cho một phao, ví dụ. Nếu tôi muốn nói với bạn như thế nào nhiều tiền tôi có trong túi của tôi, sau đó tôi có thể nói rằng tôi có% f USD. Và sau khi in, sau đó n sẽ mất nơi mà giữ chỗ. Tôi cũng có thể, ví dụ, sử dụng một số giữ chỗ cho một số biến. Vì vậy, miễn là tôi liệt kê chúng theo thứ tự, sau đó tôi có thể cho bạn biết có bao nhiêu chó và mèo tôi có. 

Bây giờ chúng tôi biết làm thế nào để nhắc nhở người sử dụng cho một số lượng thay đổi, đảm bảo rằng đầu vào là hợp lệ, và sau đó chúng tôi có hai cách có thể thực hiện các thuật toán tham lam luôn phải sử dụng đồng xu lớn nhất có thể. Bởi vì chúng tôi đã lưu giữ theo dõi bao nhiêu tiền, chúng tôi đang sử dụng, sau đó chúng ta có thể in giá trị là lúc kết thúc, cho người dùng biết bao nhiêu tiền họ việc trở lại. 

Tên tôi là Amayla, và điều này là CS50. 