1
00:00:00,000 --> 00:00:00,710

2
00:00:00,710 --> 00:00:02,900
>> Hãy tham lam.

3
00:00:02,900 --> 00:00:06,810
Trong tham lam, công việc của chúng tôi là để chơi
vai trò của một thủ quỹ tham lam.

4
00:00:06,810 --> 00:00:09,750
Người sử dụng sẽ cho chúng tôi biết làm thế nào
nhiều thay đổi, chúng tôi nợ họ,

5
00:00:09,750 --> 00:00:13,520
và sau đó công việc của chúng tôi là để tính toán
số lượng tối thiểu của đồng tiền

6
00:00:13,520 --> 00:00:17,240
rằng chúng ta có thể sử dụng để làm
rằng số lượng thay đổi.

7
00:00:17,240 --> 00:00:19,560
>> Hãy bắt đầu với một ví dụ.

8
00:00:19,560 --> 00:00:23,170
Nói người dùng đòi hỏi $ 0,32 trở lại.

9
00:00:23,170 --> 00:00:28,960
Chúng ta có thể làm điều này bằng cách cho
họ 32 đồng xu, một xu cho mỗi.

10
00:00:28,960 --> 00:00:35,180
Hoặc tôi cũng có thể sử dụng năm coins-- bởi
cho họ ba mưu sinh, $ 0,10 mỗi,

11
00:00:35,180 --> 00:00:38,060
và hai đồng xu, 0,02 $ mỗi.

12
00:00:38,060 --> 00:00:42,580
Nhưng chúng ta có thể sử dụng ngay cả
đồng tiền ít hơn để làm cho điều đó?

13
00:00:42,580 --> 00:00:45,100
>> Toàn bộ chiến thuật trong greedy--
là một cashier-- tham lam

14
00:00:45,100 --> 00:00:47,600
là sử dụng các đồng tiền lớn nhất có thể.

15
00:00:47,600 --> 00:00:50,670
Vì vậy, bất cứ khi nào chúng tôi có
quý chúng tôi sẽ sử dụng chúng.

16
00:00:50,670 --> 00:00:54,100
Và sau đó một lần những người chạy ra ngoài,
chúng tôi sẽ sử dụng mưu sinh, 0,10 $ mỗi.

17
00:00:54,100 --> 00:00:58,840
Sau đó nickels, 5 cent mỗi, và
sau đó xuống đồng xu, một xu cho mỗi.

18
00:00:58,840 --> 00:01:01,792
Bằng cách sử dụng các đồng tiền lớn nhất
có thể bất cứ khi nào có thể,

19
00:01:01,792 --> 00:01:07,350
chúng tôi đảm bảo rằng chúng tôi sử dụng số lượng ít nhất
tiền xu có thể thay đổi.

20
00:01:07,350 --> 00:01:09,180
>> Vì vậy, hãy đi bộ này thông qua.

21
00:01:09,180 --> 00:01:11,660
Người sử dụng cần $ 0,32.

22
00:01:11,660 --> 00:01:14,200
Vì vậy, chúng ta tự hỏi,
chúng ta có thể sử dụng một phần tư?

23
00:01:14,200 --> 00:01:15,560
Vâng, vâng, chúng tôi có thể.

24
00:01:15,560 --> 00:01:19,720
Vì vậy, bây giờ chúng ta chỉ biết họ
$ 0,07, và chúng tôi sử dụng một đồng xu.

25
00:01:19,720 --> 00:01:20,970
>> Chúng ta có thể sử dụng một quý?

26
00:01:20,970 --> 00:01:21,890
Ồ không.

27
00:01:21,890 --> 00:01:27,570
0,07 $ là ít hơn $ 0,25, vì vậy chúng tôi tiến hành
để đồng xu lớn nhất tiếp theo có sẵn.

28
00:01:27,570 --> 00:01:30,690
Dimes là $ 0.10, và
một lần nữa, chúng ta không thể sử dụng mưu sinh.

29
00:01:30,690 --> 00:01:35,480
Vì mưu sinh trị giá $ 0.10, mà
là nhiều hơn so với số lượng thay đổi nợ.

30
00:01:35,480 --> 00:01:36,790
>> Chúng tôi đi đến nickels.

31
00:01:36,790 --> 00:01:40,890
Và, có thực sự, 0,05 $ là ít hơn
$ 0.10-- vì vậy chúng tôi có thể sử dụng một niken.

32
00:01:40,890 --> 00:01:46,104
Vì vậy, bây giờ chúng tôi chỉ còn nợ người sử dụng $ 0.02,
và chúng tôi cho đến nay sử dụng hai đồng tiền.

33
00:01:46,104 --> 00:01:47,270
Chúng tôi không thể sử dụng niken khác.

34
00:01:47,270 --> 00:01:51,140
Vì vậy, sau đó chúng tôi tiến tới đồng xu cuối cùng tại
xử lý của chúng tôi, đó là những đồng xu.

35
00:01:51,140 --> 00:01:52,270
>> Và chúng ta có thể sử dụng đồng xu?

36
00:01:52,270 --> 00:01:59,060
Vâng, yes-- và chúng tôi sẽ chỉ sử dụng hai
đồng xu cho tổng cộng bốn xu.

37
00:01:59,060 --> 00:02:01,430
>> Khi bạn đã hoàn tất,
chương trình sẽ giống như thế này.

38
00:02:01,430 --> 00:02:03,710
Một khi người dùng chạy các
Chương trình tham lam, họ sẽ

39
00:02:03,710 --> 00:02:07,270
được nhắc nhở để cung cấp cho số lượng
thay đổi bằng đô la mà họ đang nợ.

40
00:02:07,270 --> 00:02:11,140
Và sau đó bạn chương trình sẽ ra
số tiền tối thiểu của đồng tiền

41
00:02:11,140 --> 00:02:14,740
mà thủ quỹ tham lam sẽ sử dụng
để làm cho rằng số lượng thay đổi.

42
00:02:14,740 --> 00:02:18,160
>> Vì vậy, bây giờ hãy phá vỡ này
thành nhiệm vụ nhỏ của chúng tôi.

43
00:02:18,160 --> 00:02:21,410
Đầu tiên chúng ta sẽ nhắc chúng tôi
sử dụng cho một số lượng thay đổi.

44
00:02:21,410 --> 00:02:25,630
Và, như với bất kỳ người sử dụng, chúng tôi muốn
hãy chắc chắn rằng chúng tôi xác nhận đầu vào

45
00:02:25,630 --> 00:02:29,360
và đảm bảo rằng chúng tôi có thể sử dụng
đầu vào cho phần còn lại của chương trình của chúng tôi.

46
00:02:29,360 --> 00:02:32,480
Sau đó, chúng ta sẽ luôn luôn
sử dụng các điểm lớn nhất có thể

47
00:02:32,480 --> 00:02:35,240
và theo dõi các đồng tiền được sử dụng.

48
00:02:35,240 --> 00:02:39,080
Và cuối cùng, in thức
số tiền mà chúng tôi sử dụng.

49
00:02:39,080 --> 00:02:40,970
>> Vì vậy, chúng ta hãy nói về nhắc.

50
00:02:40,970 --> 00:02:43,550
Lượng phải làm cent,
và đây là bằng đô la.

51
00:02:43,550 --> 00:02:48,440
Và vì vậy đối với đồng USD, chúng ta sẽ
sử dụng các loại biến float.

52
00:02:48,440 --> 00:02:52,390
Bây giờ mỗi khi bạn hỏi một người sử dụng cho đầu vào,
bạn muốn chắc chắn rằng đó là hợp lệ.

53
00:02:52,390 --> 00:02:56,640
Và vì vậy ở đây chúng tôi muốn tận dụng lợi thế
của do-while loop xây dựng.

54
00:02:56,640 --> 00:03:00,320
>> Một vòng lặp do-while sẽ thực hiện các
cơ thể của vòng ít nhất một lần.

55
00:03:00,320 --> 00:03:01,650
Vì vậy, đây có ích.

56
00:03:01,650 --> 00:03:05,510
Chúng ta biết rằng chúng ta cần phải nhắc nhở
sử dụng ít nhất một lần cho một phao.

57
00:03:05,510 --> 00:03:07,100
Bây giờ nếu float đó là hợp lệ.

58
00:03:07,100 --> 00:03:07,710
Thật tuyệt.

59
00:03:07,710 --> 00:03:08,460
Chúng tôi di chuyển trên.

60
00:03:08,460 --> 00:03:11,910
Nhưng nếu không, vòng lặp sẽ đảm bảo
mà chúng ta có được một phao thích

61
00:03:11,910 --> 00:03:16,810
bằng cách lặp lại liên tục cho đến
người sử dụng cung cấp cho chúng tôi một giá trị hợp lệ.

62
00:03:16,810 --> 00:03:18,760
>> Bây giờ cho các do-while
điều kiện vòng lặp, chúng ta cần

63
00:03:18,760 --> 00:03:22,000
để xem xét những gì nó có nghĩa là
để có một phao không hợp lệ.

64
00:03:22,000 --> 00:03:24,220
Vì vậy, với bối cảnh của
vấn đề này, có lẽ

65
00:03:24,220 --> 00:03:27,450
nó làm cho cảm giác chỉ để
chấp nhận các giá trị tích cực.

66
00:03:27,450 --> 00:03:32,010
>> Vì vậy, di chuyển on-- chúng tôi đã thu được một
giá trị đồng đô la từ người sử dụng.

67
00:03:32,010 --> 00:03:35,380
Nhưng chúng tôi đang làm việc với các đồng tiền,
đó là hoàn toàn trong xu.

68
00:03:35,380 --> 00:03:38,660
$ 1 là tương đương với 100 xu.

69
00:03:38,660 --> 00:03:43,670
Vì vậy, một điều tốt để làm là để
chuyển đổi các giá trị vào xu.

70
00:03:43,670 --> 00:03:48,380
>> Bây giờ khi chuyển đổi từ một phao
một số nguyên, do đô la để cent,

71
00:03:48,380 --> 00:03:52,230
chúng tôi muốn chắc chắn rằng chúng tôi đang cẩn thận
về dấu chấm động không chính xác.

72
00:03:52,230 --> 00:03:55,260
Vì vậy, đó có nghĩa là mà-- nói
đô la của tôi value-- phao của tôi

73
00:03:55,260 --> 00:04:00,260
value-- thậm chí nhiều $ 2, vẫn còn
có thể một số con số đi lạc trong đó.

74
00:04:00,260 --> 00:04:04,590
Vì vậy, chúng tôi muốn chắc chắn rằng không chỉ
Chúng ta nhân với 100 để có được xu,

75
00:04:04,590 --> 00:04:06,480
nhưng chúng tôi cũng tròn nó đi.

76
00:04:06,480 --> 00:04:09,210
>> Vì vậy, bây giờ chúng tôi có số tiền
thay đổi nợ cho người dùng.

77
00:04:09,210 --> 00:04:13,430
Chúng tôi ban đầu thu được bằng tiền đôla,
và bây giờ chúng tôi đã chuyển đổi nó để xu.

78
00:04:13,430 --> 00:04:17,029
Vì vậy, bây giờ chúng tôi có thể tiến hành với trái tim của
các thuật toán tham lam, mà luôn luôn là

79
00:04:17,029 --> 00:04:19,220
sử dụng các đồng tiền lớn nhất có thể.

80
00:04:19,220 --> 00:04:21,930
Trong khi chúng tôi đang làm điều này,
đó là điều cần thiết mà chúng tôi cũng

81
00:04:21,930 --> 00:04:25,360
theo dõi có bao nhiêu tiền là
sẽ được trả lại cho người sử dụng

82
00:04:25,360 --> 00:04:28,630
cũng như phần còn lại
thay đổi nợ cho người dùng.

83
00:04:28,630 --> 00:04:31,130
>> Chương trình sẽ tìm
một cái gì đó như thế này.

84
00:04:31,130 --> 00:04:34,190
Sau khi bạn nhận được lượng
USD và chuyển đổi đó để cent,

85
00:04:34,190 --> 00:04:35,790
sau đó bạn sẽ bước vào một vòng lặp.

86
00:04:35,790 --> 00:04:38,400
Trong khi phần tư có thể
used-- mà là để nói

87
00:04:38,400 --> 00:04:43,660
trong khi số lượng thay đổi nợ đến
người sử dụng lớn hơn hoặc bằng $ 0,25,

88
00:04:43,660 --> 00:04:45,040
bạn sẽ sử dụng một phần tư.

89
00:04:45,040 --> 00:04:47,000
>> Bây giờ những gì sử dụng một phần tư đòi hỏi?

90
00:04:47,000 --> 00:04:51,280
Vâng, cùng-- bạn sẽ tăng đồng xu
đếm được trả về cho người dùng.

91
00:04:51,280 --> 00:04:55,890
Và thứ hai, bạn sẽ giảm hiện tại
số lượng thay đổi còn nợ lại cho người sử dụng

92
00:04:55,890 --> 00:04:57,520
bởi $ 0.25.

93
00:04:57,520 --> 00:05:00,680
>> Sau khi lặp đi lặp lại đó cho đến khi
tư có thể không còn được sử dụng,

94
00:05:00,680 --> 00:05:04,630
tiến tới lớn nhất tiếp theo
coin-- trong trường hợp này mưu sinh, $ 0.10.

95
00:05:04,630 --> 00:05:07,750
Vì vậy, bạn sẽ nhập vòng lặp cho đến khi
bạn không còn có thể sử dụng mưu sinh.

96
00:05:07,750 --> 00:05:10,720
Sau đó tiến hành tiếp theo
đồng xu lớn nhất, nickels.

97
00:05:10,720 --> 00:05:14,810
Sau nickels không còn có thể được sử dụng,
sử dụng số tiền còn lại trong xu.

98
00:05:14,810 --> 00:05:17,800
Và cuối cùng, in
số tiền được sử dụng.

99
00:05:17,800 --> 00:05:20,350
>> Một cách khác mà bạn có thể
tiếp cận vấn đề tham lam

100
00:05:20,350 --> 00:05:22,950
là sử dụng các phương pháp tiếp cận theo modulo.

101
00:05:22,950 --> 00:05:25,690
Modulo là một nhà điều hành
mà trả phần còn lại

102
00:05:25,690 --> 00:05:27,680
của sự phân chia giữa hai con số.

103
00:05:27,680 --> 00:05:30,270
Nói rằng tôi có 50 mod 5.

104
00:05:30,270 --> 00:05:34,070
Vâng, 5 là một yếu tố của 50,
nên phần cuối sẽ là 0.

105
00:05:34,070 --> 00:05:39,230
50 mod 10-- tốt, 10 cũng là một yếu tố
50, vì vậy phần còn lại cũng là 0.

106
00:05:39,230 --> 00:05:43,660
50 mod 50-- tốt, bất kỳ số mod tự
sẽ không có bất kỳ còn lại.

107
00:05:43,660 --> 00:05:45,510
>> Còn 50 mod 49?

108
00:05:45,510 --> 00:05:47,910
Vâng, 49 chỉ đi vào 50 lần.

109
00:05:47,910 --> 00:05:50,290
Vì vậy, phần còn lại sẽ là 1.

110
00:05:50,290 --> 00:05:55,180
53 mod 50 sẽ
cung cấp cho bạn một phần còn lại của 3.

111
00:05:55,180 --> 00:05:59,120
>> Vậy làm thế nào chúng ta có thể sử dụng modulo
và có lẽ một số bộ phận

112
00:05:59,120 --> 00:06:01,690
để thực hiện thuật toán tham lam của chúng tôi?

113
00:06:01,690 --> 00:06:05,550
Vâng, chúng tôi vẫn muốn ở lại đúng với
trung tâm của sự tham lam algorithm-- đó

114
00:06:05,550 --> 00:06:07,910
là sử dụng các đồng tiền lớn nhất có thể.

115
00:06:07,910 --> 00:06:14,570
>> Vì vậy, hãy tự hỏi mình, nếu chúng ta có thể sử dụng bất kỳ
khu để trả $ 0,32 cho người dùng.

116
00:06:14,570 --> 00:06:20,070
Vâng, 32 mod 25 cho
chúng tôi còn lại của $ 0.07.

117
00:06:20,070 --> 00:06:24,500
Vì vậy, cho chúng ta biết rằng chúng ta có thể chắc chắn
sử dụng một phần tư với 0,07 $ còn lại.

118
00:06:24,500 --> 00:06:26,180
>> Chúng ta có thể sau đó sử dụng bất kỳ mưu sinh?

119
00:06:26,180 --> 00:06:32,740
Vâng, no-- vì 0,07 $ mod
$ 0,10 cho chúng ta một phần còn lại của 7.

120
00:06:32,740 --> 00:06:34,960
10 không đi vào 7 cả.

121
00:06:34,960 --> 00:06:36,390
>> Sau đó, chúng ta có thể sử dụng nickels?

122
00:06:36,390 --> 00:06:40,490
Vâng 0,07 $ mod 5 cent
cho chúng ta hai người còn lại.

123
00:06:40,490 --> 00:06:42,930
Và cuối cùng, chúng ta có thể sử dụng bất kỳ đồng xu?

124
00:06:42,930 --> 00:06:45,930
2 mod 1 cho chúng ta 0,
đó là những gì cuối cùng

125
00:06:45,930 --> 00:06:48,160
chúng tôi muốn bởi vì sau đó
có nghĩa là chúng tôi đã trở lại

126
00:06:48,160 --> 00:06:50,160
cho người sử dụng tất cả các thay đổi nợ.

127
00:06:50,160 --> 00:06:54,320
>> Vì vậy, bây giờ bạn có hai cách có thể có của
thực hiện algorithm-- tham lam

128
00:06:54,320 --> 00:06:59,230
một với các vòng lặp và một với một
sự kết hợp của modulo và phân chia.

129
00:06:59,230 --> 00:07:03,010
Vì vậy, cuối cùng, chúng ta chỉ cần
in số cuối cùng của tiền xu.

130
00:07:03,010 --> 00:07:06,520
>> Nếu tôi muốn nói với bạn rằng tôi đã có
3 vật nuôi và giá trị này được hardcoded,

131
00:07:06,520 --> 00:07:09,240
sau đó tôi chỉ có thể sử dụng một
đơn giản tuyên bố thử nghiệm in.

132
00:07:09,240 --> 00:07:12,320
Nhưng giá trị của chúng tôi thực sự là
được lưu trữ trong một biến.

133
00:07:12,320 --> 00:07:15,260
Vì vậy, làm thế nào để bạn in
giá trị được lưu trữ trong các biến?

134
00:07:15,260 --> 00:07:17,880
>> Đối với điều này chúng ta
lợi dụng giữ chỗ.

135
00:07:17,880 --> 00:07:21,540
Nói rằng tôi đã tuyên bố
một số nguyên n khởi tạo.

136
00:07:21,540 --> 00:07:25,170
Sau đó, sau này nếu tôi muốn in mà
giá trị, sau đó tôi sẽ viết các chuỗi.

137
00:07:25,170 --> 00:07:30,500
Và thay vì giá trị mà tôi sẽ sử dụng
một giữ chỗ cho rằng% integer-- i.

138
00:07:30,500 --> 00:07:33,800
Sau đó, sau khi chuỗi, tôi có một
dấu phẩy, tiếp theo là các biến

139
00:07:33,800 --> 00:07:34,950
mà tôi muốn in.

140
00:07:34,950 --> 00:07:38,550
Và sau này, khi in,
nó sẽ in giá trị của n.

141
00:07:38,550 --> 00:07:41,570
>> Tôi cũng có thể sử dụng một trình giữ chỗ
cho một phao, ví dụ.

142
00:07:41,570 --> 00:07:44,000
Nếu tôi muốn nói với bạn như thế nào
nhiều tiền tôi có trong túi của tôi,

143
00:07:44,000 --> 00:07:46,820
sau đó tôi có thể nói rằng tôi có% f USD.

144
00:07:46,820 --> 00:07:51,330
Và sau khi in, sau đó n sẽ
mất nơi mà giữ chỗ.

145
00:07:51,330 --> 00:07:55,530
Tôi cũng có thể, ví dụ, sử dụng một số
giữ chỗ cho một số biến.

146
00:07:55,530 --> 00:07:57,590
Vì vậy, miễn là tôi liệt kê
chúng theo thứ tự, sau đó tôi

147
00:07:57,590 --> 00:08:00,390
có thể cho bạn biết có bao nhiêu
chó và mèo tôi có.

148
00:08:00,390 --> 00:08:03,710
>> Bây giờ chúng tôi biết làm thế nào để nhắc nhở người
sử dụng cho một số lượng thay đổi,

149
00:08:03,710 --> 00:08:06,130
đảm bảo rằng đầu vào
là hợp lệ, và sau đó chúng tôi

150
00:08:06,130 --> 00:08:10,370
có hai cách có thể thực hiện
các thuật toán tham lam luôn phải sử dụng

151
00:08:10,370 --> 00:08:12,090
đồng xu lớn nhất có thể.

152
00:08:12,090 --> 00:08:15,050
Bởi vì chúng tôi đã lưu giữ theo dõi
bao nhiêu tiền, chúng tôi đang sử dụng,

153
00:08:15,050 --> 00:08:19,210
sau đó chúng ta có thể in giá trị là lúc kết thúc,
cho người dùng biết bao nhiêu tiền họ

154
00:08:19,210 --> 00:08:20,240
việc trở lại.

155
00:08:20,240 --> 00:08:24,240
>> Tên tôi là Amayla, và điều này là CS50.

156
00:08:24,240 --> 00:08:25,915

