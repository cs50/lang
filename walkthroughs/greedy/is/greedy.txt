Við skulum fá gráðugur. Í gráðugur, starf okkar er að spila hlutverk gráðugur gjaldkera. Notandinn verður að segja okkur hvernig miklar breytingar við eigum þá, og þá er starf okkar að reikna lágmarks fjölda mynt að við getum notað til að gera sem fjárhæð breytingar. 

Við skulum byrja með dæmi. Segja notandinn þarf $ 0,32 til baka. Við gætum gert þetta með því að gefa þá 32 smáaurarnir, eitt prósent hvor. Eða ég gæti líka notað fimm coins-- með gefa þeim þremur dimes, $ 0,10 hvor, og tveir smáaurarnir, $ 0,02 hvor. En gætum við notað jafnvel færri mynt til að gera það? 

Í heild aðferð í greedy-- að vera gráðugur cashier-- er að nota stærsta mynt mögulega. Svo þegar við höfum fjórðu við munum nota þær. Og svo þegar þeir hlaupa út, við munum nota dimes, $ 0,10 hvor. Þá Nickels, 5 sent hvor, og þá niður til smáaurarnir, eitt sent hvor. Með því að nota stærsta mynt hægt þegar við getum, við að tryggja að við notum fewest fjölda mynt mögulegt að gera breytingar. 

Svo skulum ganga þetta í gegnum. Notandinn þarf $ 0,32. Svo við spurt okkur, getum við notað fjórðung? Jæja, já við getum. Svo nú vitum við aðeins þá $ 0,07, og við notuðum einn mynt. 

Getum við notað annan ársfjórðung? Jæja, nr. $ 0,07 er minna en $ 0,25, svo við getum haldið áfram til næstu stærsta peningnum í boði. Dimes eru $ 0,10, og aftur, getum við ekki notað dimes. Vegna Dimes eru þess virði $ 0,10, sem er meira en nemur breytingu skuldar. 

Við að fara að nikkel. Og, já reyndar, $ 0,05 er minna en $ 0.10-- svo við getum notað nikkel. Svo nú erum við skuldar aðeins notanda $ 0,02, og við höfum hingað til notað tvær mynt. Við getum ekki notað aðra nikkel. Svo þá getum haldið áfram að síðasta peningnum á förgun okkar, sem eru krónurnar. 

Og við getum notað eyri? Jæja, yes-- og við endað með tveimur smáaurarnir fyrir samtals fjórum mynt. 

Þegar þú ert búinn, sem Forritið mun líta svona út. Þegar notandi keyrir gráðugur program, þeir beðinn um að gefa magn af Breyting á dollara sem þeir eru skuldaði. Og þá þinn program vilja framleiðsla lágmarks magn af mynt sem gráðugur gjaldkeri myndi nota að gera það magn af breytingum. 

Svo nú skulum brjóta þetta niður í undirverkefni okkar. Fyrst við erum að fara að hvetja okkar Notandinn fyrir fjárhæð breytinga. Og, eins og með allar notandi inntak, viljum við ganga úr skugga um að við staðfesta að inntak og tryggja að við getum notað það inntak fyrir the hvíla af áætlun okkar. Þá erum við að fara að alltaf nota stærsta lið mögulega og halda utan um mynt notuð. Og að lokum, prenta endanleg Fjölda mynt sem við notuðum. 

Svo skulum við tala um vekur. Upphæðin verður að sent, og þetta er í dollurum. Og svo fyrir dollara, við erum að fara að nota fljóta breytilega tegund. Nú þegar þú biður notanda fyrir hjálpina, þú vilt vera viss um að það er í gildi. Og svo hér við eins og að nýta af do-while lykkju reisa. 

A do-while lykkju mun framkvæma meginmál lykkju að minnsta kosti einu sinni. Svo kemur þetta sér vel. Við vitum að við þurfum að hvetja Notandinn minnsta kosti einu sinni á flot. Nú ef það fljóta er gild. Það er frábært. Við hreyfa á. En ef ekki, lykkja mun tryggja að við fáum rétta fljóta með því að endurtaka stöðugt þar notandi gefur okkur gilt gildi. 

Nú fyrir gera-en lykkja ástand, þurfum við til að íhuga hvað það þýðir er á ógildu fljóta. Svo fyrir samhengi þetta vandamál, líklega það er vit bara að samþykkja jákvæð gildi. 

Svo áhrifamikill skráin sem við höfum fengið að gildi í dollurum frá notanda. En við erum að fást við mynt, sem eru alfarið í sentum. $ 1 er jafngildir 100 cents. Svo gott að gera er að umbreyta þeim gildum í sent. 

Nú þegar skipt er úr flotholt heiltölu, þannig dollara til sent, við viljum tryggja að við erum varkár um fljótandi punkta ónákvæmni. Svo þýðir that-- segja dollara mín value-- fljóta minn value-- það var jafnvel $ 2, enn kann vera nokkur villast tölur þar. Þannig að við viljum ganga úr skugga um að ekki aðeins eigum við að margfalda með 100 til að fá sent, en við umferð líka það burt. 

Svo nú höfum við magn breytinga gagnvart notandanum. Fengum upphaflega það í dollurum, og nú höfum við breytt því til sent. Svo nú getum við haldið áfram með hjarta gráðugur reiknirit, sem er alltaf með stærsta mynt mögulegt. Á meðan við erum að gera þetta, það er nauðsynlegt að við líka halda utan um hversu margir mynt eru fara að koma aftur til the notandi sem og eftir breyting gagnvart notandanum. 

The program vilja líta eitthvað eins og þetta. Eftir að þú færð magn af dollara og umbreyta það til sent, þá munt þú koma inn lykkju. Þó fjórðu getur verið used-- það er að segja en fjárhæð breytingar skuldar við notandi er stærra en eða jafnt og 0,25 $, þú munt nota fjórðung. 

Nú er það að nota fjórðung í för með sér? Jæja, one-- þú munt auka pening telja að koma aftur til the notandi. Og annað sem þú munt minnka núverandi fjárhæð breytingar skuldar til baka til notandans með $ 0,25. 

Eftir að endurtaka að þar fjórðu geta ekki lengur hægt að nota, halda áfram á næsta stærsta coin-- í þessu tilfelli dimes, $ 0,10. Svo þú munt slá þessi lykkja fyrr þú getur ekki lengur notað dimes. Þá halda áfram á næsta Stærsti mynt, Nickels. Eftir er lengur hægt að nota Nickels, nota eftir upphæð í smáaurum. Og að lokum, prenta Fjölda mynt notað. 

Önnur leið sem þú getur nálgast gráðugur vandann er að nota modulo nálgun. Modulo er rekstraraðili sem skilar afganginum á skiptingu milli tveggja talna. Segja að ég hafði 50 mod 5. Jæja, 5 er þáttur 50, svo afgangurinn verður 0. 50 Mod 10-- vel, 10 er einnig þáttur af 50, en afgangurinn er einnig 0. 50 Mod 50-- vel, allir tala unga fólkið sjálft er ekki að fara að hafa nein afganginn. 

Hvað um 50 unga fólkið 49? Jæja, 49 fer aðeins í 50 einu sinni. En afgangurinn er að fara að vera 1. 53 unga fólkið 50 er að fara að gefa þér afganginn af 3. 

Svo hvernig getum við notað modulo og kannski sumir deild að innleiða gráðugur reiknirit okkar? Jæja, við viljum samt að vera satt að það Hjarta gráðugur algorithm-- sem er með stærsta mynt mögulegt. 

Svo skulum spyrja okkur hvort að við getum notað eitthvað fjórðu til að fara aftur $ 0,32 til notandans. Jæja, 32 Mod 25 gefur okkur afgangur af $ 0,07. Svo sem segir okkur að við getum örugglega nota fjórðung með $ 0,07 eftir. 

Getum við notað þá einhverjar dimes? Jæja, no-- því $ 0,07 Mod $ 0,10 gefur okkur afganginn af 7. 10 er ekki að fara inn í 7. yfirleitt. 

Þá getum við notað nikkel? Jæja $ 0,07 mod 5 sent gefur okkur tvo eftir. Og loks, við getum notað hvaða smáaurarnir? 2 Mod 1 gefur okkur 0, sem er á endanum það Við viljum því þá að þýðir að við höfum skilað til notanda öllum breytingum skuldaði. 

Svo nú þú hafa tvær mögulegar leiðir framkvæmd gráðugur algorithm-- einn með lykkjur og eitt með Sambland af mátað og skiptingu. Svo að lokum, við þurfum bara að prenta endanlega fjölda mynt. 

Ef ég vildi segja þér að ég hafði 3 gæludýr og þetta gildi var hardcoded, þá gæti ég bara nota Einföld prenta próf yfirlýsingu. En gildi okkar er í raun geymdar í breytu. Svo hvernig gera þú prenta gildi geymd í breytum? 

Fyrir þetta við taka Kosturinn við staðgengla. Segja að ég hafði þegar lýst An frumstilla heiltala n. Þá seinna ef ég vildi til að prenta það gildi, þá myndi ég skrifa band. Og í stað þess virði myndi ég nota tákn fyrir þeirri integer--% i. Síðan eftir band, ég er með komma, fylgt eftir með breytunni að ég vil prenta. Og síðar, þegar það prentar, það mun prenta gildi n. 

Ég gæti líka notað tákn fyrir fljóta og, til dæmis. Ef ég vildi segja þér hvernig mikið fé ég hef í vasa mínum, þá gæti ég sagt að ég hef% f dollara. Og síðar þegar það prentar, þá n mun í stað þeirrar stað handhafa. Ég gæti líka, til dæmis, nota margar staðgengla fyrir nokkrum breytum. Svo lengi sem ég lista þá í röð, þá er ég get sagt þér hversu margir hundar og kettir sem ég hef. 

Nú vitum við hvernig á að hvetja Notandinn fyrir fjárhæð breytinga, tryggja að þeim inntak er í gildi, og þá erum við hafa tvær mögulegar leiðir við framkvæmd gráðugur reiknirit alltaf með stærsta mynt mögulegt. Vegna þess að við höfum haldið utan um hversu margir mynt við notum, getum við þá prenta þessi gildi í lok, segja að notandinn hversu margir mynt þeir eru komast aftur. 

Mitt nafn er Amayla, og þetta er CS50. 