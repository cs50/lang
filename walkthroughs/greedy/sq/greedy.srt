1
00:00:00,000 --> 00:00:00,710

2
00:00:00,710 --> 00:00:02,900
>> Le të merrni babëzitur.

3
00:00:02,900 --> 00:00:06,810
Në pangopur, puna jonë është që të luajë
roli i një turp pangopur.

4
00:00:06,810 --> 00:00:09,750
Përdorues do të na tregoni se si
shumë ndryshim kemi borxh atyre,

5
00:00:09,750 --> 00:00:13,520
dhe pastaj puna jonë është për të llogaritur
numri minimal i monedhave

6
00:00:13,520 --> 00:00:17,240
që ne mund të përdorim për të bërë
se sasia e ndryshimit.

7
00:00:17,240 --> 00:00:19,560
>> Le të fillojmë me një shembull.

8
00:00:19,560 --> 00:00:23,170
Thonë se përdoruesi kërkon $ 0.32 mbrapa.

9
00:00:23,170 --> 00:00:28,960
Ne mund të bëjmë këtë duke i dhënë
ata 32 pennies, një cent secili.

10
00:00:28,960 --> 00:00:35,180
Ose unë mund të përdorni edhe pesë coins-- nga
duke u dhënë atyre tre dimes, $ 0,10 secili,

11
00:00:35,180 --> 00:00:38,060
dhe dy pennies, $ 0.02 secili.

12
00:00:38,060 --> 00:00:42,580
Por mund ta përdorni edhe
më pak monedha për të bërë këtë?

13
00:00:42,580 --> 00:00:45,100
>> E gjithë taktikë në greedy--
të jetë një cashier-- babëzitur

14
00:00:45,100 --> 00:00:47,600
është që të përdorin monedhë të madhe të mundshme.

15
00:00:47,600 --> 00:00:50,670
Pra, sa herë që ne kemi
lagjet ne do të përdorin ato.

16
00:00:50,670 --> 00:00:54,100
Dhe pastaj një herë ata të drejtuar nga,
ne do të përdorim dimes, $ 0,10 secili.

17
00:00:54,100 --> 00:00:58,840
Pastaj nickels, 5 cent secila, dhe
pastaj poshtë për pennies, një cent secili.

18
00:00:58,840 --> 00:01:01,792
Duke përdorur monedhën më të madh
të jetë e mundur kur ne mund,

19
00:01:01,792 --> 00:01:07,350
ne kemi siguruar që ne përdorim numrin fewest
e monedhave të jetë e mundur për të bërë ndryshimin.

20
00:01:07,350 --> 00:01:09,180
>> Pra, le të ecin nëpër këtë.

21
00:01:09,180 --> 00:01:11,660
Ky përdorues ka nevojë për $ 0.32.

22
00:01:11,660 --> 00:01:14,200
Pra, ne pyesim veten,
mund të përdorim një të katërtën?

23
00:01:14,200 --> 00:01:15,560
E pra, po ne mund.

24
00:01:15,560 --> 00:01:19,720
Deri tani ne vetëm e di ato
$ 0.07, dhe kemi përdorur një monedhë.

25
00:01:19,720 --> 00:01:20,970
>> Mund të përdorim edhe një të katërtën?

26
00:01:20,970 --> 00:01:21,890
E pra, nuk ka.

27
00:01:21,890 --> 00:01:27,570
$ 0.07 është më pak se $ 0.25, kështu që ne të vazhdojë
në monedhë tjetër më të madhe në dispozicion.

28
00:01:27,570 --> 00:01:30,690
Dimes janë $ 0,10, dhe
përsëri, ne nuk mund të përdorim dimes.

29
00:01:30,690 --> 00:01:35,480
Sepse dimes janë me vlerë $ 0,10, e cila
është më shumë se shuma e ndryshimit borxh.

30
00:01:35,480 --> 00:01:36,790
>> Ne do të shkojmë për të nickels.

31
00:01:36,790 --> 00:01:40,890
Dhe, po në të vërtetë, $ 0,05 është më pak se
$ 0.10-- kështu që ne mund të përdorni një nikel.

32
00:01:40,890 --> 00:01:46,104
Deri tani ne vetëm borxh përdorues $ 0.02,
dhe ne kemi përdorur deri tani dy monedha.

33
00:01:46,104 --> 00:01:47,270
Ne nuk mund të përdorë një tjetër nikel.

34
00:01:47,270 --> 00:01:51,140
Pra, atëherë ne të vazhdojë të medaljes së fundit në
asgjësimin tona, të cilat janë pennies.

35
00:01:51,140 --> 00:01:52,270
>> Dhe mund të përdorim denar?

36
00:01:52,270 --> 00:01:59,060
Well, yes-- dhe ne fund duke përdorur dy
pennies për një total prej katër monedha.

37
00:01:59,060 --> 00:02:01,430
>> Pasi të jeni të mbaruar,
program do të duket si ky.

38
00:02:01,430 --> 00:02:03,710
Pasi përdorues menaxhere e faqes së
Programi i babëzitur, ata do të

39
00:02:03,710 --> 00:02:07,270
të nxitet për të dhënë sasinë e
ndryshimi në dollarë që ata janë borxh.

40
00:02:07,270 --> 00:02:11,140
Dhe pastaj juaj output program do
shuma minimale e monedhave

41
00:02:11,140 --> 00:02:14,740
se turp pangopur do të përdorë
për të bërë që sasia e ndryshimit.

42
00:02:14,740 --> 00:02:18,160
>> Pra, tani le të thyejnë këtë
poshtë në subtasks tona.

43
00:02:18,160 --> 00:02:21,410
Së pari ne jemi duke shkuar për të nxitur tonë
përdoruesit për një shumë prej ndryshimit.

44
00:02:21,410 --> 00:02:25,630
Dhe, si me çdo dhëna përdoruesi, ne duam të
sigurohuni që të vërtetoni se të dhëna

45
00:02:25,630 --> 00:02:29,360
dhe për të siguruar që ne mund të përdorni atë
input për pjesën tjetër të programit tonë.

46
00:02:29,360 --> 00:02:32,480
Pastaj ne do të gjithmonë të
përdorin pikën më të madh të mundshëm

47
00:02:32,480 --> 00:02:35,240
dhe për të mbajtur gjurmët e monedhave të përdorura.

48
00:02:35,240 --> 00:02:39,080
Dhe së fundi, të shtypura në finale
numri i monedhave që kemi përdorur.

49
00:02:39,080 --> 00:02:40,970
>> Pra, le të flasim për nxitje.

50
00:02:40,970 --> 00:02:43,550
Shuma duhet të bëjë cent,
dhe kjo është në dollarë.

51
00:02:43,550 --> 00:02:48,440
Dhe kështu për dollarë, ne jemi duke shkuar
për të përdorur llojin e ndryshueshme noton.

52
00:02:48,440 --> 00:02:52,390
Tani sa herë që ju të kërkoni një përdorues për të dhëna,
ju doni të bëni të sigurtë që kjo është e vlefshme.

53
00:02:52,390 --> 00:02:56,640
Dhe kështu që këtu ne si për të përfituar
e ndërtimin lak do-ndërsa.

54
00:02:56,640 --> 00:03:00,320
>> Një lak do-ndërsa do të ekzekutojë
trupi i lak paktën një herë.

55
00:03:00,320 --> 00:03:01,650
Pra, kjo vjen në dispozicion.

56
00:03:01,650 --> 00:03:05,510
Ne e dimë se kemi nevojë të menjëhershëm
Përdorues të paktën një herë për një noton.

57
00:03:05,510 --> 00:03:07,100
Tani në qoftë se noton është e vlefshme.

58
00:03:07,100 --> 00:03:07,710
Kjo është e madhe.

59
00:03:07,710 --> 00:03:08,460
Ne të lëvizë.

60
00:03:08,460 --> 00:03:11,910
Por nëse jo, lak do të sigurojë
që ne të merrni një noton duhur

61
00:03:11,910 --> 00:03:16,810
duke përsëritur vazhdimisht deri në
përdoruesi na jep një vlerë të vlefshme.

62
00:03:16,810 --> 00:03:18,760
>> Tani për ta bërë kohë
gjendja loop, ne kemi nevojë

63
00:03:18,760 --> 00:03:22,000
të marrin në konsideratë se çfarë do të thotë
të ketë një noton të pavlefshme.

64
00:03:22,000 --> 00:03:24,220
Pra, për kontekstin e
ky problem, ndoshta

65
00:03:24,220 --> 00:03:27,450
kjo ka kuptim vetëm për të
pranojë vlerat pozitive.

66
00:03:27,450 --> 00:03:32,010
>> Pra, duke lëvizur on-- ne kemi marrë një
Vlera në dollarë nga përdoruesit.

67
00:03:32,010 --> 00:03:35,380
Por ne jemi që kanë të bëjnë me monedha,
të cilat janë tërësisht në cent.

68
00:03:35,380 --> 00:03:38,660
$ 1 është më e barabartë me 100 cent.

69
00:03:38,660 --> 00:03:43,670
Pra, një gjë e mirë për të bërë është që të
kthyer ato vlera në centë.

70
00:03:43,670 --> 00:03:48,380
>> Kur konvertimin nga një noton
për një numër të plotë, në mënyrë dollarë për cent,

71
00:03:48,380 --> 00:03:52,230
ne duam të sigurohemi se jemi të kujdesshëm
rreth lundrues-pikë pasaktësi.

72
00:03:52,230 --> 00:03:55,260
Pra, kjo do të thotë that-- thonë
dollar im value-- noton tim

73
00:03:55,260 --> 00:04:00,260
value-- ishte edhe më $ 2, ende
mund të ketë disa numra endacakë në atje.

74
00:04:00,260 --> 00:04:04,590
Pra, ne duam të sigurohemi që jo vetëm
nuk kemi të shumohen me 100 për të marrë cent,

75
00:04:04,590 --> 00:04:06,480
por ne gjithashtu të rrumbullakët atë.

76
00:04:06,480 --> 00:04:09,210
>> Deri tani ne kemi sasinë
e ndryshimit borxh të përdoruesit.

77
00:04:09,210 --> 00:04:13,430
Ne fillimisht e marrë atë në dollarë,
dhe tani ne kemi konvertuar atë në cent.

78
00:04:13,430 --> 00:04:17,029
Deri tani ne mund të vazhdojë me zemër të
algoritmi i pangopur, i cili është gjithmonë

79
00:04:17,029 --> 00:04:19,220
duke përdorur monedhën më të madh të jetë e mundur.

80
00:04:19,220 --> 00:04:21,930
Ndërsa ne jemi duke bërë këtë,
është e domosdoshme që ne gjithashtu

81
00:04:21,930 --> 00:04:25,360
mbajnë gjurmët e sa monedha janë
do të kthehet perdorues

82
00:04:25,360 --> 00:04:28,630
si dhe pjesa e mbetur
ndryshojë borxh për përdoruesit.

83
00:04:28,630 --> 00:04:31,130
>> Programi do të duket
diçka si kjo.

84
00:04:31,130 --> 00:04:34,190
Pasi ju të merrni shumën e
dollarë dhe kthyer atë në cent,

85
00:04:34,190 --> 00:04:35,790
atëherë ju do të hyjë në një lak.

86
00:04:35,790 --> 00:04:38,400
Ndërsa lagjet mund të jetë
used-- që do të thotë

87
00:04:38,400 --> 00:04:43,660
ndërsa shuma e ndryshimit detyrohet të
përdorues është më e madhe se ose e barabartë me $ 0.25,

88
00:04:43,660 --> 00:04:45,040
ju do të përdorni një të katërtën.

89
00:04:45,040 --> 00:04:47,000
>> Tani çfarë bën duke përdorur një çerek të sjellë?

90
00:04:47,000 --> 00:04:51,280
E pra, one-- ju do të rrisë monedhë
numërimin që do të kthehen për përdoruesit.

91
00:04:51,280 --> 00:04:55,890
Dhe së dyti ju do të ulet e tanishme
shumën e ndryshimit detyrohet përsëri në përdoruesit

92
00:04:55,890 --> 00:04:57,520
me $ 0.25.

93
00:04:57,520 --> 00:05:00,680
>> Pas përsëritur se deri
katërtat mund të përdoret më,

94
00:05:00,680 --> 00:05:04,630
të vazhdojë për të më e madhe e ardhshme
coin-- në këtë rast dimes, $ 0,10.

95
00:05:04,630 --> 00:05:07,750
Pra, ju do të hyjë në atë lak deri
ju mund të përdorni më dimes.

96
00:05:07,750 --> 00:05:10,720
Pastaj do të vazhdojë për të ardhshëm
monedhë e madhe, nickels.

97
00:05:10,720 --> 00:05:14,810
Pas nickels mund të përdoret më,
përdorin shumën e mbetur në pennies.

98
00:05:14,810 --> 00:05:17,800
Dhe së fundi, të shtypur
Numri i monedhave të përdorura.

99
00:05:17,800 --> 00:05:20,350
>> Një tjetër mënyrë që ju mund të
qasur problemit lakmitar

100
00:05:20,350 --> 00:05:22,950
është që të përdorin metodën e modulo.

101
00:05:22,950 --> 00:05:25,690
Modulo është një operator
që kthen mbetur

102
00:05:25,690 --> 00:05:27,680
e ndarjes në mes të dy numrave.

103
00:05:27,680 --> 00:05:30,270
Thuaj kam pasur 50 mod 5.

104
00:05:30,270 --> 00:05:34,070
Edhe, 5 është një faktor i 50,
kështu që pjesa e mbetur do të jetë 0.

105
00:05:34,070 --> 00:05:39,230
50 mod 10-- mirë, 10 është gjithashtu një faktor
e 50, kështu që pjesa e mbetur është gjithashtu 0.

106
00:05:39,230 --> 00:05:43,660
50 mod 50-- mirë, çdo numër mod veten
nuk do të ketë ndonjë mbetur.

107
00:05:43,660 --> 00:05:45,510
>> Po në lidhje me 50 mod 49?

108
00:05:45,510 --> 00:05:47,910
E pra, 49 shkon vetëm në 50 herë.

109
00:05:47,910 --> 00:05:50,290
Pra, pjesa e mbetur do të jetë 1.

110
00:05:50,290 --> 00:05:55,180
53 mod 50 do të
ju jap një tjetër të 3.

111
00:05:55,180 --> 00:05:59,120
>> Pra, si mund ta përdorim modulo
dhe ndoshta disa ndarje

112
00:05:59,120 --> 00:06:01,690
për të zbatuar algoritmin tonë lakmitar?

113
00:06:01,690 --> 00:06:05,550
E pra, ne ende duan të qëndrojnë të vërtetë të
Zemra e të pangopur algorithm-- se

114
00:06:05,550 --> 00:06:07,910
është përdorur monedhën më të madh të jetë e mundur.

115
00:06:07,910 --> 00:06:14,570
>> Pra, le të pyesim veten nëse ne mund të përdorni ndonjë
katërtat për të kthyer $ 0.32 për përdoruesit.

116
00:06:14,570 --> 00:06:20,070
E pra, 32 mod 25 jep
ne një tjetër prej $ 0.07.

117
00:06:20,070 --> 00:06:24,500
Kështu që na tregon se ne mund patjetër
përdorin një të katërtën me $ 0.07 mbetur.

118
00:06:24,500 --> 00:06:26,180
>> A mund të pastaj të përdorin ndonjë dimes?

119
00:06:26,180 --> 00:06:32,740
E pra, për shkak no-- $ 0.07 mod
$ 0,10 na jep një tjetër të 7.

120
00:06:32,740 --> 00:06:34,960
10 nuk do të shkojë në 7 në të gjitha.

121
00:06:34,960 --> 00:06:36,390
>> Atëherë mund të përdorim nickels?

122
00:06:36,390 --> 00:06:40,490
Well $ 0.07 mod 5 cent
na jep dy të tjerët.

123
00:06:40,490 --> 00:06:42,930
Dhe së fundi, mund të përdorni ndonjë pennies?

124
00:06:42,930 --> 00:06:45,930
2 mod 1 na jep 0,
e cila është në fund të fundit çfarë

125
00:06:45,930 --> 00:06:48,160
ne duam sepse atëherë se
do të thotë që ne i kemi kthyer

126
00:06:48,160 --> 00:06:50,160
të përdoruesit të gjithë ndryshimit detyrohet.

127
00:06:50,160 --> 00:06:54,320
>> Deri tani ju keni dy mënyra të mundshme të
zbatimin e algorithm-- lakmitar

128
00:06:54,320 --> 00:06:59,230
një me sythe dhe një me një
Kombinimi i modulo dhe ndarjes.

129
00:06:59,230 --> 00:07:03,010
Pra më në fund, ne vetëm duhet të
të shtypur numrin përfundimtar të monedhave.

130
00:07:03,010 --> 00:07:06,520
>> Nëse do të doja të them se kam pasur
3 kafshët shtëpiake dhe kjo vlerë është hardcoded,

131
00:07:06,520 --> 00:07:09,240
atëherë unë mund të përdorni vetëm një
thjeshtë deklaratë provë të shtypura.

132
00:07:09,240 --> 00:07:12,320
Por vlera jonë është në fakt
të ruhet në një variabël.

133
00:07:12,320 --> 00:07:15,260
Pra, si ju të shtypur
Vlerat ruhen në variablat?

134
00:07:15,260 --> 00:07:17,880
>> Për këtë ne kemi marrë
Avantazhi i placeholders.

135
00:07:17,880 --> 00:07:21,540
Thuaj I kishte deklaruar tashmë
një numër të plotë n nisur.

136
00:07:21,540 --> 00:07:25,170
Pastaj më vonë në qoftë se unë të kërkuar për të shkruar se
vlera, atëherë unë do të shkruaj vargun.

137
00:07:25,170 --> 00:07:30,500
Dhe në vend të kësaj vlere unë do të përdorin
një placeholder për këtë% integer-- i.

138
00:07:30,500 --> 00:07:33,800
Pastaj, pas vargut, unë kam një
presje, e ndjekur nga variablit

139
00:07:33,800 --> 00:07:34,950
që unë dua të shtypura.

140
00:07:34,950 --> 00:07:38,550
Dhe më vonë, kur ajo shtyp,
ajo do të shtypura vlerën e n.

141
00:07:38,550 --> 00:07:41,570
>> Unë mund të përdorin një placeholder
për një noton, për shembull.

142
00:07:41,570 --> 00:07:44,000
Në qoftë se unë të kërkuar për të ju tregojnë se si
sa para kam në xhep,

143
00:07:44,000 --> 00:07:46,820
atëherë unë mund të them unë kam% f dollarë.

144
00:07:46,820 --> 00:07:51,330
Dhe më vonë, kur ajo printon, atëherë n do
marrë vendin e këtë vend mbajtësit.

145
00:07:51,330 --> 00:07:55,530
Unë mund të, për shembull, përdorin disa
placeholders për disa variablave.

146
00:07:55,530 --> 00:07:57,590
Pra, për sa kohë që unë lista
ato në mënyrë, atëherë unë

147
00:07:57,590 --> 00:08:00,390
mund t'ju them se sa
qentë dhe macet kam.

148
00:08:00,390 --> 00:08:03,710
>> Tani ne e dimë se si të menjëhershëm
përdoruesit për një shumë e ndryshimeve,

149
00:08:03,710 --> 00:08:06,130
të sigurojë që ajo të dhëna
është e vlefshme, dhe pastaj ne

150
00:08:06,130 --> 00:08:10,370
kanë dy mënyra të mundshme të zbatimit
algoritmi pangopur e gjithmonë duke përdorur

151
00:08:10,370 --> 00:08:12,090
monedha më e madhe të jetë e mundur.

152
00:08:12,090 --> 00:08:15,050
Sepse ne kemi mbajtur gjurmët e
sa monedha ne jemi duke përdorur,

153
00:08:15,050 --> 00:08:19,210
ne pastaj mund të shtypura atë vlerë në fund,
thënë përdoruesit sa monedha ata janë

154
00:08:19,210 --> 00:08:20,240
duke u kthyer.

155
00:08:20,240 --> 00:08:24,240
>> Emri im është Amayla, dhe kjo është CS50.

156
00:08:24,240 --> 00:08:25,915

