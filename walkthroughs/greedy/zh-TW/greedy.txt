讓我們貪婪。 在貪婪的，我們的工作就是玩 貪婪收銀員的角色。 用戶將告訴我們如何 太大的變化，我們欠他們的， 然後我們的工作就是計算 硬幣的最小數量 我們可以用它來製作 變化量。 

讓我們先從一個例子。 假設用戶需要$ 0.32回來。 我們可以通過給做 他們32便士，每一分錢。 或者，我也可以用五年coins--通過 給他們三天硬幣，$ 0.10， 兩便士，$ 0.02每。 但是，我們可以使用，甚至 更少的硬幣做的？ 

在greedy--整體戰術 是一個貪婪的cashier-- 是使用最大硬幣可能。 所以每當我們有 宿舍，我們將使用它們。 然後，一旦這些用完， 我們將使用硬幣，每個$ 0.10 然後鎳，每次5美分，而 再往下便士，每一分錢。 通過使用最大的硬幣 只要有可能，我們可以， 我們必須確保我們用最少數量的 硬幣的可能作出改變。 

因此，讓我們走在這條通過。 用戶需要$ 0.32。 因此，我們捫心自問， 我們可以用四分之一？ 嗯，是的，我們可以。 所以，現在我們只知道他們 $ 0.07，我們用一個硬幣。 

我們可以用一個季度？ 哦，不。 $為0.07少於$ 0.25，所以我們進行 可用下一個最大的硬幣。 角錢為$ 0.10和 再次，我們不能用角錢。 由於硬幣是值得$ 0.10這 比變化的欠款金額。 

我們去鎳。 而且，是真的，$是0.05小於 $ 0.10--所以我們可以使用鎳。 所以，現在我們只欠用戶$ 0.02 而且到目前為止我們用了兩個硬幣。 我們不能用另一個鎳。 於是我們進行了最後一枚硬幣在 我們所掌握的，哪些是便士。 

我們可以用一分錢？ 好吧，yes--和我們最終使用兩個 便士總共四個硬幣。 

一旦你完成後， 程序會這個樣子。 一旦用戶運行 貪婪的計劃，他們將 被提示以得到的量 以美元計價的變化，他們正在欠款。 然後你的程序將輸出 硬幣的最小量 該貪婪的收銀員會用 做出改變的量。 

所以，現在讓我們來打破這種 下到我們的子任務。 首先我們要提醒我們 用戶對變化量。 並且，與任何用戶輸入，我們希望 確保我們驗證輸入 並確保我們可以使用 輸入對我們的節目的其餘部分。 然後，我們要始終 使用最大可能點 並跟踪使用的硬幣。 最後，打印最終 我們使用硬幣的數目。 

所以，讓我們來談談提示。 量必須美分， 這也是美元。 因此對於美元，我們要去 使用浮點變量類型。 現在，每當你問一個用戶輸入， 要確保它是有效的。 所以在這裡我們想利用 的do-whil​​e循環結構。 

一個do-whil​​e循環將執行 循環體至少一次。 所以這個就派上用場了。 我們知道，我們需要提示 用戶至少一次的浮動。 現在，如果花車是有效的。 那很棒。 我們繼續前進。 但如果沒有，則循環將確保 我們得到適當浮動 通過不斷重複，直到 用戶為我們提供了一個有效的值。 

現在的DO-而 環情況下，我們需要 考慮是什麼意思 有一個無效的浮動。 所以為的範圍內 此問題，​​可能 這是有道理的只是 接受正值。 

因此，移動on--，我們已經獲得了 在來自用戶的美元值。 但是，我們正在處理的硬幣， 這是完全美分。 $ 1等價於100美分。 因此，一個好東西做的是 轉換這些值轉換成美分。 

現在從一個浮動轉換時 為整數，所以美元美分， 我們要確保我們很小心 有關浮點不精確。 因此，這意味著that--說 我的美元value--我的浮法 value--是偶數2 $，仍有 可能是在那裡一些流浪的數字。 因此，我們要確保，不僅 我們乘以100，以獲得美分， 但我們也圓其關閉。 

所以現在我們有量 改變欠給用戶。 我們最初得到的以美元， 現在我們將它轉換為美分。 所以，現在我們可以用的心臟進行 貪心算法，這始終是 用最大的硬幣可能。 雖然我們這樣做， 這是至關重要的，我們也 跟踪有多少硬幣是 將要返回給用戶 以及剩餘的 改變欠給用戶。 

該程序會 這樣的事情。 你得到後的金額 美元和轉換，要美分， 那麼你會進入一個循環。 雖然宿舍可 used--也就是說 而變化的欠量 用戶是大於或等於$ 0.25， 您將使用的四分之一。 

現在做什麼用的四分之一意味著什麼？ 好吧，one--你會增加硬幣 算要返回給用戶。 其次，你會減少電流 變化量欠回用戶 由$ 0.25。 

重複直到後 小區可以不再使用， 進行到下一個最大的 coin--在這種情況下硬幣，$ 0.10 所以你輸入循環，直到 你可以不再使用角錢。 然後繼續下一個 最大的硬幣，鎳。 後鎳不能再被使用， 使用便士的剩餘量。 最後，打印 使用硬幣的數目。 

另一種方式，你可以 接近貪婪的問題 是使用模數的方法。 模是一個操作符 返回剩餘 的兩個數字之間的分工。 說我有50個MOD 5。 那麼，5是50倍， 所以，其餘為0。 50 MOD 10--好，10也是一個因素 50，所以餘數也為0。 50 MOD 50--好，任何數量的國防部本身 不會有任何剩餘部分。 

什麼50國防部49？ 那麼，只有49進入50次。 因此，其餘部分將是1。 53 MOD 50將 給你3餘數。 

那麼，如何才能用模 也許有些分裂 實現我們的貪心算法？ 好了，我們還是要留真實的 貪心算法 - 即心臟的 使用是最大的硬幣可能。 

因此，讓我們捫心自問，我們可以使用任何 季度返回$ 0.32〜用戶。 那麼，32國防部25給 我們的$為0.07剩餘部分。 所以這告訴我們，我們絕對可以 用一個季度的$為0.07剩餘。 

然後我們可以使用任何銀幣嗎？ 那麼，no--因為0.07 $ MOD $ 0.10為我們提供了7餘數。 10不進入7可言。 

這樣，我們才能使用鎳？ 嗯$為0.07國防部5美分 給了我們兩個剩餘。 最後，我們可以使用任何便士？ 2 MOD 1給了我們0， 這是什麼最終 我們希望，因為那時， 也就是說，我們已經返回 給用戶的所有變化的欠款。 

所以，現在你有兩種可能的方式 實施貪心算法 -  一個用環和一個具有 模和除法的組合。 所以最後，我們只需要 打印硬幣的最終數目。 

如果我想告訴你，我有 3寵物和這個值硬編碼， 然後，我可以只使用一個 簡單的打印測試聲明。 但是，我們的價值實際上是 存儲在變量。 那麼，你如何打印 存儲在變量的值？ 

為此，我們採取 優勢佔位符。 說我已經宣布 初始化的整數n。 再後來，如果我想打印 值，那麼我會寫的字符串。 和而不是價值，我會用 對於integer--％我的佔位符。 然後，後弦，我有一個 逗號，其次是可變 我想打印。 而後來，當它打印， 它會打印n的值。 

我還可以使用一個佔位符 為浮點數，例如。 如果我想告訴你如何 多少現金我在我的口袋裡， 然後，我可以說我有％F美元。 而後來當它打印，則n會 採取該地方持有人的地方。 我還，例如，使用幾個 佔位符的幾個變量。 所以只要我列出 他們為了，那我 可以告訴你有多少 狗和貓我有。 

現在我們知道如何提示 用戶對變化量， 確保該輸入 是有效的，然後我們 實施有兩種可能的方式 始終使用的貪心算法 最大的硬幣可能。 因為我們已經把軌道 我們有多少硬幣使用， 那麼我們可以打印在最後的價值， 告訴他們有多少硬幣是用戶 取回。 

我的名字是Amayla，這是CS50。 