Sabihin makakuha ng matakaw. Sa matakaw, ang aming trabaho ay upang i-play ang papel ng isang matakaw cashier. Ang user ay sabihin sa amin kung paano gaanong pagbabago utang namin ang mga ito, at pagkatapos ay ang aming trabaho ay upang makalkula ang minimum na bilang ng mga barya na maaari naming gamitin upang gumawa ng na halaga ng mga pagbabago. 

Magsimula tayo sa isang halimbawa. Sabihing ang user ay nangangailangan ng $ 0.32 sa likod. Maaari naming gawin ito sa pamamagitan ng pagbibigay ang mga ito 32 pennies, isang sentimo bawat isa. O maaari ko rin gamitin ang limang coins-- pamamagitan nagbibigay sa kanila ng tatlong dimes, $ 0.10 sa bawat isa, at dalawang pennies, $ 0.02 sa bawat isa. Ngunit maaari naming gamitin kahit mas kaunting mga barya upang gumawa ng na? 

Ang buong taktika sa greedy-- na maging isang matakaw cashier-- ay upang gamitin ang pinakamalaking coin maaari. Kaya kapag kami ay may quarters gagamitin namin ang mga ito. At pagkatapos ay sa sandaling ang mga maubusan, gagamitin namin dimes, $ 0.10 sa bawat isa. Pagkatapos nickels, 5 cents bawat isa, at pagkatapos ay down sa pennies, isang sentimo bawat isa. Sa pamamagitan ng paggamit sa pinakamalaking coin posibleng tuwing aming makakaya, tinitiyak namin na ginagamit namin ang fewest bilang ng mga barya posible na gumawa ng pagbabago. 

Kaya sabihin maglakad ito sa pamamagitan ng. gumagamit ang mga pangangailangan $ 0.32. Kaya tanungin ang ating sarili, maaari naming gamitin ang isang-kapat? Well, yes aming makakaya. Kaya ngayon lang namin malaman ang mga ito $ 0.07, at ginamit namin ang isa barya. 

Puwede ba kaming gumamit ng ibang quarter? Hindi. $ 0.07 ay mas mababa sa $ 0.25, kaya naming magpatuloy sa susunod na pinakamalaking coin magagamit. Dimes ay $ 0.10, at muli, hindi namin maaaring gamitin dimes. Dahil dimes ay nagkakahalaga ng $ 0.10, na kung saan ay higit pa sa halaga ng pagbabago inutang. 

Pumunta kami sa nickels. At, oo nga, $ 0.05 ay mas mababa sa $ 0.10-- upang maaari naming gamitin ang isang nikel. Kaya ngayon lang namin may utang na loob ang user $ 0.02, at sa ngayon kami ay naka-iinom ng dalawang barya. Hindi namin maaaring gamitin ang isa pang nikel. Kaya pagkatapos namin tumuloy sa huling barya sa aming pagtatapon, na siyang pennies. 

At maaari naming gamitin matipid sa pera? Well, yes-- at huling up namin ang paggamit ng dalawang pennies para sa isang total ng apat na mga barya. 

Kapag ikaw ay tapos na, ang program ay ganito ang hitsura. Kapag ang gumagamit ay nagpapatakbo ng matakaw programa, makikita nila prompt kang magbigay ng halaga ng pagbabago sa dolyar na sila ay inutang. At pagkatapos ay ang iyong programa kalooban output ang minimum na halaga ng mga barya na ang matakaw cashier na gustong gamitin na gumawa na halaga ng mga pagbabago. 

Kaya ngayon sabihin break na ito down sa aming mga subtask. Una kami ay pagpunta upang i-prompt ang aming user para sa isang halaga ng pagbabago. At, tulad ng may anumang input ng user, nais naming siguraduhin na patunayan natin na input at matiyak na maaari naming gamitin na input para sa natitirang bahagi ng aming programa. Pagkatapos kami ay pagpunta sa palaging gamitin ang pinakamalaking point posible at subaybayan ang mga barya na ginamit. At sa wakas, i-print ang huling bilang ng mga barya na ginamit namin. 

Kaya sabihin makipag-usap tungkol pagdikta. Ang halaga ay dapat gumawa cents, at ito ay sa dollars. At kaya para sa dolyar, kami ay pagpunta na gamitin ang uri float variable. Ngayon kapag humingi ka ng isang user para sa input, gusto mong siguraduhin na ito ay may-bisa. At kaya dito gusto naming samantalahin ng do-habang loop makagawa ng. 

A do-habang loop ay execute ang katawan ng loop ng hindi bababa sa isang beses. Kaya ito ay dumating sa magaling. Alam namin na kailangan namin upang i-prompt ang user kahit isang beses para sa isang float. Ngayon kung na float ay may-bisa. Mabuti iyan. Ilipat namin sa. Ngunit kung hindi, ang mga loop ay masiguro na makakakuha tayo ng isang maayos na float sa pamamagitan ng paulit-ulit na patuloy na hanggang ang user ay nagbibigay sa amin ng isang wastong halaga. 

Ngayon para sa do-habang loop kondisyon, kailangan namin upang isaalang-alang kung ano ang ibig sabihin nito mayroon itong maling float. Kaya para sa konteksto ng ang problemang ito, marahil ito ang akma lamang na tanggapin positibong halaga. 

Kaya gumagalaw on-- namin nakuha ng isang halaga sa dolyar mula sa user. Ngunit kami ay pagharap sa mga barya, na kung saan ay ganap na sa cents. $ 1 ay katumbas ng 100 cents. Kaya ang isang magandang bagay na gawin ay upang convert ang mga halaga sa sentimo. 

Ngayon kapag nagko-convert mula sa isang float sa isang integer, kaya dollars sa cents, gusto naming siguraduhin na kami ay mag-ingat tungkol sa mga lumulutang-point imprecision. Kaya nangangahulugan na sabihin na- aking dollar value-- aking float value-- ay isang kahit na $ 2, doon pa rin maaaring may ilang mga kalat-kalat na mga numero sa doon. Kaya gusto namin upang matiyak na hindi lamang namin magparami sa pamamagitan ng 100 upang makuha ang cents, ngunit din namin na isalin ito off. 

Kaya ngayon ay mayroon namin ang dami ng pagbabago inutang sa user. Kami ay orihinal na nakuha ito sa dolyar, at ngayon na-convert namin ito sa cents. Kaya ngayon maaari naming magpatuloy sa gitna ng ang matakaw algorithm, na kung saan ay palaging gamit ang pinakamalaking coin maaari. Habang kami ay gumagawa ng ito, ito ay napakahalaga na din namin subaybayan kung gaano karaming mga barya ay pagpunta sa ibabalik sa user pati na rin ang mga natitirang baguhin inutang sa user. 

Ang programa ay magiging hitsura isang bagay na tulad nito. Pagkatapos mong makuha ang halaga ng dolyares at convert na sa cents, pagkatapos ay makikita mo magpasok ng isang loop. Habang quarters ay maaaring maging used-- iyon ay upang sabihin habang ang halaga ng mga pagbabago na dapat bayaran sa user ay mas malaki kaysa sa o katumbas ng $ 0.25, makikita mong gamitin ang isang quarter. 

Ngayon kung ano ang ginagawa gamit sa apat na bahagi nilalagay? Well, one-- makikita mo dagdagan ang barya bilangin na ibabalik sa user. At pangalawa makikita mo bawasan ang kasalukuyang halaga ng mga pagbabago inutang pabalik sa user sa pamamagitan ng $ 0.25. 

Pagkatapos ng paulit-ulit na hanggang quarters ay maaaring hindi na gamitin, magpatuloy sa susunod na pinakamalaking coin-- sa kasong ito dimes, $ 0.10. Kaya makikita mo ipasok na loop hanggang maaari mong hindi na gamitin dimes. Pagkatapos ay magpatuloy sa susunod na pinakamalaking coin, nickels. Pagkatapos nickels ay maaaring hindi na gamitin, gamitin ang natitirang halaga sa pennies. At sa wakas, i-print ang bilang ng mga barya na ginamit. 

Ang isa pang paraan na maaari mong diskarte ang matakaw problema ay upang gamitin ang modulo diskarte. Modulo ay isang operator na bumalik ang natitira ng dibisyon sa pagitan ng dalawang numero. Sinasabi ko ay 50 mod 5. Well, 5 ay isang kadahilanan ng 50, kaya ang natira ay 0. 50 mod 10-- well, 10 ay isa ring kadahilanan na 50, kaya ang mga natitira ay din 0. 50 mod 50-- rin, ang anumang bilang mod mismo ay hindi pagpunta sa magkaroon ng anumang natitira. 

Paano ang tungkol sa 50 mod 49? Well, 49 lamang ang napupunta sa 50 sabay-sabay. Kaya ang mga natitira ay magiging 1. 53 mod 50 ay pagpunta sa magbibigay sa iyo ng mga naiwan ng 3. 

Kaya kung paano namin maaaring gamitin modulo at marahil ilang division upang ipatupad ang aming matakaw algorithm? Well, kami pa rin nais upang manatili true sa puso ng mga matakaw algorithm-- na ay gamit ang pinakamalaking coin maaari. 

Kaya magtanong ang ating sarili kung maaari naming gamitin ang anumang quarters upang bumalik $ 0.32 para sa gumagamit. Well, 32 mod 25 ay nagbibigay sa sa amin ng isang natitira sa $ 0.07. Kaya na ay nagsasabi sa amin na maaari naming tiyak gamitin ang isa-kapat na may $ 0.07 na lang. 

Maaari naming pagkatapos ay gamitin ang anumang dimes? Well, no-- dahil $ 0.07 mod $ 0.10 ay nagbibigay sa amin ng isang natitira sa 7. 10 ay hindi pumunta sa 7 sa lahat. 

Pagkatapos ay maaari naming gamitin nickels? Well $ 0.07 mod 5 cents ay nagbibigay sa amin ng dalawang natitira. At sa wakas, maaari naming gamitin ang anumang pennies? 2 mod 1 ay nagbibigay sa amin 0, na kung saan ay sa huli kung ano gusto naming dahil pagkatapos na ay nangangahulugan na na bumalik kami sa user ang lahat ng mga pagbabago inutang. 

Kaya ngayon ikaw ay may dalawang posibleng paraan ng pagpapatupad ng matakaw algorithm-- isa na may mga loop at ang isa ay may kumbinasyon ng modulo at dibisyon. Kaya sa wakas, kami lamang ang kailangan upang i-print ang huling bilang ng mga barya. 

Kung Nais kong sabihin sa iyo na ako ay 3 mga alagang hayop at ang halaga na ito ay hardcoded, pagkatapos ay maaari ko lamang gumamit ng isang simple print test statement. Ngunit ang aming mga halaga ay talagang naka-imbak sa isang variable. Kaya paano mo i-print ang mga halaga na naka-imbak sa mga variable? 

Para sa mga ito lubos naming bentahe ng mga placeholder. Say Na ako ay ipinahayag isang initialize integer n. Pagkatapos ay mamaya sa kung nais kong i-print na halaga, at pagkatapos Gusto ko isulat ang string. At sa halip na ang halagang iyon Gusto ko bang gamitin isang placeholder para sa na integer--% i. Pagkatapos matapos ang string, mayroon akong isang comma, na sinusundan ng variable na gusto kong i-print. At sa susunod, kapag ito prints, makikita ito i-print ang halaga ng n. 

kaya kong ring gumamit ng isang placeholder para sa isang float, halimbawa. Kung Nais kong sabihin sa iyo kung paano magkano ang cash mayroon akong sa aking bulsa, pagkatapos ay maaari kong sabihin ako ng% f dollars. At sa susunod kapag ito prints, pagkatapos n habilin gawin ang mga lugar ng na may-hawak ng lugar. Hindi ko rin, halimbawa, gamitin ang ilang mga placeholder para sa ilang mga variable. Kaya't hangga't listahan ko ang mga ito sa pagkakasunud-sunod, at pagkatapos ay ako maaaring sabihin sa iyo kung gaano karaming mga aso at pusa ng aking tinatangkilik. 

Ngayon alam namin kung paano upang i-prompt ang user para sa isang halaga ng pagbabago, matiyak na ang input na ay may-bisa, at pagkatapos namin may dalawang posibleng paraan ng pagpapatupad ang matakaw algorithm ng laging gamit ang pinakamalaking coin maaari. Dahil kami iningatan na track ng gaano karaming mga barya na aming ginagamit, pagkatapos ay maaari naming i-print na halaga sa dulo, na nagsasabi sa user gaano karaming mga barya na ang mga ito pagbalik. 

Ang pangalan ko ay ang Amayla, at ito ay CS50. 