1
00:00:00,000 --> 00:00:00,710

2
00:00:00,710 --> 00:00:02,900
>> Sabihin makakuha ng matakaw.

3
00:00:02,900 --> 00:00:06,810
Sa matakaw, ang aming trabaho ay upang i-play
ang papel ng isang matakaw cashier.

4
00:00:06,810 --> 00:00:09,750
Ang user ay sabihin sa amin kung paano
gaanong pagbabago utang namin ang mga ito,

5
00:00:09,750 --> 00:00:13,520
at pagkatapos ay ang aming trabaho ay upang makalkula
ang minimum na bilang ng mga barya

6
00:00:13,520 --> 00:00:17,240
na maaari naming gamitin upang gumawa ng
na halaga ng mga pagbabago.

7
00:00:17,240 --> 00:00:19,560
>> Magsimula tayo sa isang halimbawa.

8
00:00:19,560 --> 00:00:23,170
Sabihing ang user ay nangangailangan ng $ 0.32 sa likod.

9
00:00:23,170 --> 00:00:28,960
Maaari naming gawin ito sa pamamagitan ng pagbibigay
ang mga ito 32 pennies, isang sentimo bawat isa.

10
00:00:28,960 --> 00:00:35,180
O maaari ko rin gamitin ang limang coins-- pamamagitan
nagbibigay sa kanila ng tatlong dimes, $ 0.10 sa bawat isa,

11
00:00:35,180 --> 00:00:38,060
at dalawang pennies, $ 0.02 sa bawat isa.

12
00:00:38,060 --> 00:00:42,580
Ngunit maaari naming gamitin kahit
mas kaunting mga barya upang gumawa ng na?

13
00:00:42,580 --> 00:00:45,100
>> Ang buong taktika sa greedy--
na maging isang matakaw cashier--

14
00:00:45,100 --> 00:00:47,600
ay upang gamitin ang pinakamalaking coin maaari.

15
00:00:47,600 --> 00:00:50,670
Kaya kapag kami ay may
quarters gagamitin namin ang mga ito.

16
00:00:50,670 --> 00:00:54,100
At pagkatapos ay sa sandaling ang mga maubusan,
gagamitin namin dimes, $ 0.10 sa bawat isa.

17
00:00:54,100 --> 00:00:58,840
Pagkatapos nickels, 5 cents bawat isa, at
pagkatapos ay down sa pennies, isang sentimo bawat isa.

18
00:00:58,840 --> 00:01:01,792
Sa pamamagitan ng paggamit sa pinakamalaking coin
posibleng tuwing aming makakaya,

19
00:01:01,792 --> 00:01:07,350
tinitiyak namin na ginagamit namin ang fewest bilang
ng mga barya posible na gumawa ng pagbabago.

20
00:01:07,350 --> 00:01:09,180
>> Kaya sabihin maglakad ito sa pamamagitan ng.

21
00:01:09,180 --> 00:01:11,660
gumagamit ang mga pangangailangan $ 0.32.

22
00:01:11,660 --> 00:01:14,200
Kaya tanungin ang ating sarili,
maaari naming gamitin ang isang-kapat?

23
00:01:14,200 --> 00:01:15,560
Well, yes aming makakaya.

24
00:01:15,560 --> 00:01:19,720
Kaya ngayon lang namin malaman ang mga ito
$ 0.07, at ginamit namin ang isa barya.

25
00:01:19,720 --> 00:01:20,970
>> Puwede ba kaming gumamit ng ibang quarter?

26
00:01:20,970 --> 00:01:21,890
Hindi.

27
00:01:21,890 --> 00:01:27,570
$ 0.07 ay mas mababa sa $ 0.25, kaya naming magpatuloy
sa susunod na pinakamalaking coin magagamit.

28
00:01:27,570 --> 00:01:30,690
Dimes ay $ 0.10, at
muli, hindi namin maaaring gamitin dimes.

29
00:01:30,690 --> 00:01:35,480
Dahil dimes ay nagkakahalaga ng $ 0.10, na kung saan
ay higit pa sa halaga ng pagbabago inutang.

30
00:01:35,480 --> 00:01:36,790
>> Pumunta kami sa nickels.

31
00:01:36,790 --> 00:01:40,890
At, oo nga, $ 0.05 ay mas mababa sa
$ 0.10-- upang maaari naming gamitin ang isang nikel.

32
00:01:40,890 --> 00:01:46,104
Kaya ngayon lang namin may utang na loob ang user $ 0.02,
at sa ngayon kami ay naka-iinom ng dalawang barya.

33
00:01:46,104 --> 00:01:47,270
Hindi namin maaaring gamitin ang isa pang nikel.

34
00:01:47,270 --> 00:01:51,140
Kaya pagkatapos namin tumuloy sa huling barya sa
aming pagtatapon, na siyang pennies.

35
00:01:51,140 --> 00:01:52,270
>> At maaari naming gamitin matipid sa pera?

36
00:01:52,270 --> 00:01:59,060
Well, yes-- at huling up namin ang paggamit ng dalawang
pennies para sa isang total ng apat na mga barya.

37
00:01:59,060 --> 00:02:01,430
>> Kapag ikaw ay tapos na, ang
program ay ganito ang hitsura.

38
00:02:01,430 --> 00:02:03,710
Kapag ang gumagamit ay nagpapatakbo ng
matakaw programa, makikita nila

39
00:02:03,710 --> 00:02:07,270
prompt kang magbigay ng halaga ng
pagbabago sa dolyar na sila ay inutang.

40
00:02:07,270 --> 00:02:11,140
At pagkatapos ay ang iyong programa kalooban output
ang minimum na halaga ng mga barya

41
00:02:11,140 --> 00:02:14,740
na ang matakaw cashier na gustong gamitin
na gumawa na halaga ng mga pagbabago.

42
00:02:14,740 --> 00:02:18,160
>> Kaya ngayon sabihin break na ito
down sa aming mga subtask.

43
00:02:18,160 --> 00:02:21,410
Una kami ay pagpunta upang i-prompt ang aming
user para sa isang halaga ng pagbabago.

44
00:02:21,410 --> 00:02:25,630
At, tulad ng may anumang input ng user, nais naming
siguraduhin na patunayan natin na input

45
00:02:25,630 --> 00:02:29,360
at matiyak na maaari naming gamitin na
input para sa natitirang bahagi ng aming programa.

46
00:02:29,360 --> 00:02:32,480
Pagkatapos kami ay pagpunta sa palaging
gamitin ang pinakamalaking point posible

47
00:02:32,480 --> 00:02:35,240
at subaybayan ang mga barya na ginamit.

48
00:02:35,240 --> 00:02:39,080
At sa wakas, i-print ang huling
bilang ng mga barya na ginamit namin.

49
00:02:39,080 --> 00:02:40,970
>> Kaya sabihin makipag-usap tungkol pagdikta.

50
00:02:40,970 --> 00:02:43,550
Ang halaga ay dapat gumawa cents,
at ito ay sa dollars.

51
00:02:43,550 --> 00:02:48,440
At kaya para sa dolyar, kami ay pagpunta
na gamitin ang uri float variable.

52
00:02:48,440 --> 00:02:52,390
Ngayon kapag humingi ka ng isang user para sa input,
gusto mong siguraduhin na ito ay may-bisa.

53
00:02:52,390 --> 00:02:56,640
At kaya dito gusto naming samantalahin
ng do-habang loop makagawa ng.

54
00:02:56,640 --> 00:03:00,320
>> A do-habang loop ay execute ang
katawan ng loop ng hindi bababa sa isang beses.

55
00:03:00,320 --> 00:03:01,650
Kaya ito ay dumating sa magaling.

56
00:03:01,650 --> 00:03:05,510
Alam namin na kailangan namin upang i-prompt ang
user kahit isang beses para sa isang float.

57
00:03:05,510 --> 00:03:07,100
Ngayon kung na float ay may-bisa.

58
00:03:07,100 --> 00:03:07,710
Mabuti iyan.

59
00:03:07,710 --> 00:03:08,460
Ilipat namin sa.

60
00:03:08,460 --> 00:03:11,910
Ngunit kung hindi, ang mga loop ay masiguro
na makakakuha tayo ng isang maayos na float

61
00:03:11,910 --> 00:03:16,810
sa pamamagitan ng paulit-ulit na patuloy na hanggang
ang user ay nagbibigay sa amin ng isang wastong halaga.

62
00:03:16,810 --> 00:03:18,760
>> Ngayon para sa do-habang
loop kondisyon, kailangan namin

63
00:03:18,760 --> 00:03:22,000
upang isaalang-alang kung ano ang ibig sabihin nito
mayroon itong maling float.

64
00:03:22,000 --> 00:03:24,220
Kaya para sa konteksto ng
ang problemang ito, marahil

65
00:03:24,220 --> 00:03:27,450
ito ang akma lamang na
tanggapin positibong halaga.

66
00:03:27,450 --> 00:03:32,010
>> Kaya gumagalaw on-- namin nakuha ng isang
halaga sa dolyar mula sa user.

67
00:03:32,010 --> 00:03:35,380
Ngunit kami ay pagharap sa mga barya,
na kung saan ay ganap na sa cents.

68
00:03:35,380 --> 00:03:38,660
$ 1 ay katumbas ng 100 cents.

69
00:03:38,660 --> 00:03:43,670
Kaya ang isang magandang bagay na gawin ay upang
convert ang mga halaga sa sentimo.

70
00:03:43,670 --> 00:03:48,380
>> Ngayon kapag nagko-convert mula sa isang float
sa isang integer, kaya dollars sa cents,

71
00:03:48,380 --> 00:03:52,230
gusto naming siguraduhin na kami ay mag-ingat
tungkol sa mga lumulutang-point imprecision.

72
00:03:52,230 --> 00:03:55,260
Kaya nangangahulugan na sabihin na-
aking dollar value-- aking float

73
00:03:55,260 --> 00:04:00,260
value-- ay isang kahit na $ 2, doon pa rin
maaaring may ilang mga kalat-kalat na mga numero sa doon.

74
00:04:00,260 --> 00:04:04,590
Kaya gusto namin upang matiyak na hindi lamang
namin magparami sa pamamagitan ng 100 upang makuha ang cents,

75
00:04:04,590 --> 00:04:06,480
ngunit din namin na isalin ito off.

76
00:04:06,480 --> 00:04:09,210
>> Kaya ngayon ay mayroon namin ang dami
ng pagbabago inutang sa user.

77
00:04:09,210 --> 00:04:13,430
Kami ay orihinal na nakuha ito sa dolyar,
at ngayon na-convert namin ito sa cents.

78
00:04:13,430 --> 00:04:17,029
Kaya ngayon maaari naming magpatuloy sa gitna ng
ang matakaw algorithm, na kung saan ay palaging

79
00:04:17,029 --> 00:04:19,220
gamit ang pinakamalaking coin maaari.

80
00:04:19,220 --> 00:04:21,930
Habang kami ay gumagawa ng ito,
ito ay napakahalaga na din namin

81
00:04:21,930 --> 00:04:25,360
subaybayan kung gaano karaming mga barya ay
pagpunta sa ibabalik sa user

82
00:04:25,360 --> 00:04:28,630
pati na rin ang mga natitirang
baguhin inutang sa user.

83
00:04:28,630 --> 00:04:31,130
>> Ang programa ay magiging hitsura
isang bagay na tulad nito.

84
00:04:31,130 --> 00:04:34,190
Pagkatapos mong makuha ang halaga ng
dolyares at convert na sa cents,

85
00:04:34,190 --> 00:04:35,790
pagkatapos ay makikita mo magpasok ng isang loop.

86
00:04:35,790 --> 00:04:38,400
Habang quarters ay maaaring maging
used-- iyon ay upang sabihin

87
00:04:38,400 --> 00:04:43,660
habang ang halaga ng mga pagbabago na dapat bayaran sa
user ay mas malaki kaysa sa o katumbas ng $ 0.25,

88
00:04:43,660 --> 00:04:45,040
makikita mong gamitin ang isang quarter.

89
00:04:45,040 --> 00:04:47,000
>> Ngayon kung ano ang ginagawa gamit sa apat na bahagi nilalagay?

90
00:04:47,000 --> 00:04:51,280
Well, one-- makikita mo dagdagan ang barya
bilangin na ibabalik sa user.

91
00:04:51,280 --> 00:04:55,890
At pangalawa makikita mo bawasan ang kasalukuyang
halaga ng mga pagbabago inutang pabalik sa user

92
00:04:55,890 --> 00:04:57,520
sa pamamagitan ng $ 0.25.

93
00:04:57,520 --> 00:05:00,680
>> Pagkatapos ng paulit-ulit na hanggang
quarters ay maaaring hindi na gamitin,

94
00:05:00,680 --> 00:05:04,630
magpatuloy sa susunod na pinakamalaking
coin-- sa kasong ito dimes, $ 0.10.

95
00:05:04,630 --> 00:05:07,750
Kaya makikita mo ipasok na loop hanggang
maaari mong hindi na gamitin dimes.

96
00:05:07,750 --> 00:05:10,720
Pagkatapos ay magpatuloy sa susunod na
pinakamalaking coin, nickels.

97
00:05:10,720 --> 00:05:14,810
Pagkatapos nickels ay maaaring hindi na gamitin,
gamitin ang natitirang halaga sa pennies.

98
00:05:14,810 --> 00:05:17,800
At sa wakas, i-print ang
bilang ng mga barya na ginamit.

99
00:05:17,800 --> 00:05:20,350
>> Ang isa pang paraan na maaari mong
diskarte ang matakaw problema

100
00:05:20,350 --> 00:05:22,950
ay upang gamitin ang modulo diskarte.

101
00:05:22,950 --> 00:05:25,690
Modulo ay isang operator
na bumalik ang natitira

102
00:05:25,690 --> 00:05:27,680
ng dibisyon sa pagitan ng dalawang numero.

103
00:05:27,680 --> 00:05:30,270
Sinasabi ko ay 50 mod 5.

104
00:05:30,270 --> 00:05:34,070
Well, 5 ay isang kadahilanan ng 50,
kaya ang natira ay 0.

105
00:05:34,070 --> 00:05:39,230
50 mod 10-- well, 10 ay isa ring kadahilanan
na 50, kaya ang mga natitira ay din 0.

106
00:05:39,230 --> 00:05:43,660
50 mod 50-- rin, ang anumang bilang mod mismo
ay hindi pagpunta sa magkaroon ng anumang natitira.

107
00:05:43,660 --> 00:05:45,510
>> Paano ang tungkol sa 50 mod 49?

108
00:05:45,510 --> 00:05:47,910
Well, 49 lamang ang napupunta sa 50 sabay-sabay.

109
00:05:47,910 --> 00:05:50,290
Kaya ang mga natitira ay magiging 1.

110
00:05:50,290 --> 00:05:55,180
53 mod 50 ay pagpunta sa
magbibigay sa iyo ng mga naiwan ng 3.

111
00:05:55,180 --> 00:05:59,120
>> Kaya kung paano namin maaaring gamitin modulo
at marahil ilang division

112
00:05:59,120 --> 00:06:01,690
upang ipatupad ang aming matakaw algorithm?

113
00:06:01,690 --> 00:06:05,550
Well, kami pa rin nais upang manatili true sa
puso ng mga matakaw algorithm-- na

114
00:06:05,550 --> 00:06:07,910
ay gamit ang pinakamalaking coin maaari.

115
00:06:07,910 --> 00:06:14,570
>> Kaya magtanong ang ating sarili kung maaari naming gamitin ang anumang
quarters upang bumalik $ 0.32 para sa gumagamit.

116
00:06:14,570 --> 00:06:20,070
Well, 32 mod 25 ay nagbibigay sa
sa amin ng isang natitira sa $ 0.07.

117
00:06:20,070 --> 00:06:24,500
Kaya na ay nagsasabi sa amin na maaari naming tiyak
gamitin ang isa-kapat na may $ 0.07 na lang.

118
00:06:24,500 --> 00:06:26,180
>> Maaari naming pagkatapos ay gamitin ang anumang dimes?

119
00:06:26,180 --> 00:06:32,740
Well, no-- dahil $ 0.07 mod
$ 0.10 ay nagbibigay sa amin ng isang natitira sa 7.

120
00:06:32,740 --> 00:06:34,960
10 ay hindi pumunta sa 7 sa lahat.

121
00:06:34,960 --> 00:06:36,390
>> Pagkatapos ay maaari naming gamitin nickels?

122
00:06:36,390 --> 00:06:40,490
Well $ 0.07 mod 5 cents
ay nagbibigay sa amin ng dalawang natitira.

123
00:06:40,490 --> 00:06:42,930
At sa wakas, maaari naming gamitin ang anumang pennies?

124
00:06:42,930 --> 00:06:45,930
2 mod 1 ay nagbibigay sa amin 0,
na kung saan ay sa huli kung ano

125
00:06:45,930 --> 00:06:48,160
gusto naming dahil pagkatapos na
ay nangangahulugan na na bumalik kami

126
00:06:48,160 --> 00:06:50,160
sa user ang lahat ng mga pagbabago inutang.

127
00:06:50,160 --> 00:06:54,320
>> Kaya ngayon ikaw ay may dalawang posibleng paraan ng
pagpapatupad ng matakaw algorithm--

128
00:06:54,320 --> 00:06:59,230
isa na may mga loop at ang isa ay may
kumbinasyon ng modulo at dibisyon.

129
00:06:59,230 --> 00:07:03,010
Kaya sa wakas, kami lamang ang kailangan upang
i-print ang huling bilang ng mga barya.

130
00:07:03,010 --> 00:07:06,520
>> Kung Nais kong sabihin sa iyo na ako ay
3 mga alagang hayop at ang halaga na ito ay hardcoded,

131
00:07:06,520 --> 00:07:09,240
pagkatapos ay maaari ko lamang gumamit ng isang
simple print test statement.

132
00:07:09,240 --> 00:07:12,320
Ngunit ang aming mga halaga ay talagang
naka-imbak sa isang variable.

133
00:07:12,320 --> 00:07:15,260
Kaya paano mo i-print ang
mga halaga na naka-imbak sa mga variable?

134
00:07:15,260 --> 00:07:17,880
>> Para sa mga ito lubos naming
bentahe ng mga placeholder.

135
00:07:17,880 --> 00:07:21,540
Say Na ako ay ipinahayag
isang initialize integer n.

136
00:07:21,540 --> 00:07:25,170
Pagkatapos ay mamaya sa kung nais kong i-print na
halaga, at pagkatapos Gusto ko isulat ang string.

137
00:07:25,170 --> 00:07:30,500
At sa halip na ang halagang iyon Gusto ko bang gamitin
isang placeholder para sa na integer--% i.

138
00:07:30,500 --> 00:07:33,800
Pagkatapos matapos ang string, mayroon akong isang
comma, na sinusundan ng variable

139
00:07:33,800 --> 00:07:34,950
na gusto kong i-print.

140
00:07:34,950 --> 00:07:38,550
At sa susunod, kapag ito prints,
makikita ito i-print ang halaga ng n.

141
00:07:38,550 --> 00:07:41,570
>> kaya kong ring gumamit ng isang placeholder
para sa isang float, halimbawa.

142
00:07:41,570 --> 00:07:44,000
Kung Nais kong sabihin sa iyo kung paano
magkano ang cash mayroon akong sa aking bulsa,

143
00:07:44,000 --> 00:07:46,820
pagkatapos ay maaari kong sabihin ako ng% f dollars.

144
00:07:46,820 --> 00:07:51,330
At sa susunod kapag ito prints, pagkatapos n habilin
gawin ang mga lugar ng na may-hawak ng lugar.

145
00:07:51,330 --> 00:07:55,530
Hindi ko rin, halimbawa, gamitin ang ilang mga
placeholder para sa ilang mga variable.

146
00:07:55,530 --> 00:07:57,590
Kaya't hangga't listahan ko
ang mga ito sa pagkakasunud-sunod, at pagkatapos ay ako

147
00:07:57,590 --> 00:08:00,390
maaaring sabihin sa iyo kung gaano karaming mga
aso at pusa ng aking tinatangkilik.

148
00:08:00,390 --> 00:08:03,710
>> Ngayon alam namin kung paano upang i-prompt ang
user para sa isang halaga ng pagbabago,

149
00:08:03,710 --> 00:08:06,130
matiyak na ang input na
ay may-bisa, at pagkatapos namin

150
00:08:06,130 --> 00:08:10,370
may dalawang posibleng paraan ng pagpapatupad
ang matakaw algorithm ng laging gamit

151
00:08:10,370 --> 00:08:12,090
ang pinakamalaking coin maaari.

152
00:08:12,090 --> 00:08:15,050
Dahil kami iningatan na track ng
gaano karaming mga barya na aming ginagamit,

153
00:08:15,050 --> 00:08:19,210
pagkatapos ay maaari naming i-print na halaga sa dulo,
na nagsasabi sa user gaano karaming mga barya na ang mga ito

154
00:08:19,210 --> 00:08:20,240
pagbalik.

155
00:08:20,240 --> 00:08:24,240
>> Ang pangalan ko ay ang Amayla, at ito ay CS50.

156
00:08:24,240 --> 00:08:25,915

