Gadewch i ni gael farus. Yn barus, ein gwaith ni yw i chwarae rôl ariannwr farus. Bydd y defnyddiwr yn dweud wrthym sut llawer o newid arnon ni iddyn nhw, ac yna mae ein gwaith ni yw i gyfrifo y nifer lleiaf o ddarnau arian y gallwn eu defnyddio i wneud y swm hwnnw o newid. 

Gadewch i ni ddechrau gydag enghraifft. Dywedwch y defnyddiwr yn gofyn am $ 0.32 yn ôl. Gallem wneud hyn drwy roi nhw 32 ceiniogau, un cant yr un. Neu gallwn i hefyd yn defnyddio pum coins-- gan gan roi tri dimes iddynt, $ 0.10 yr un, a dwy ceiniogau, $ 0.02 yr un. Ond gallem ddefnyddio hyd yn oed llai o ddarnau arian i wneud hynny? 

Mae'r dacteg cyfan mewn greedy-- i fod yn cashier-- farus yw defnyddio y darn arian mwyaf posibl. Felly, pryd bynnag rydym wedi chwarter byddwn yn eu defnyddio. Ac yna unwaith y rhai yn rhedeg allan, byddwn yn defnyddio dimes, $ 0.10 yr un. Yna Nickels, 5 cents yr un, ac yna i lawr i geiniogau, un cant yr un. Drwy ddefnyddio'r darn arian mwyaf bosib pryd bynnag y gallwn, rydym yn sicrhau ein bod yn defnyddio'r nifer lleiaf o ddarnau arian posibl i wneud y newid. 

Felly gadewch i ni gerdded hon drwy. Mae angen i'r defnyddiwr $ 0.32. Felly, rydym yn gofyn i ni'n hunain, gallwn ddefnyddio chwarter? Wel, ie gallwn. Felly, nawr rydym yn unig yn eu hadnabod $ 0.07, ac rydym yn defnyddio un darn arian. 

A allwn ddefnyddio chwarter arall? Wel, dim. $ 0.07 yn llai na $ 0.25, felly awn ymlaen at y darn arian mwyaf nesaf sydd ar gael. Dimes yn $ 0.10, a eto, ni allwn ddefnyddio dimes. Oherwydd bod dimes yn werth $ 0.10, a oedd yn yn fwy na maint y newid sy'n ddyledus. 

Rydym yn mynd i Nickels. Ac, ie yn wir, $ 0.05 yn llai na $ 0.10-- fel y gallwn ddefnyddio nicel. Felly, nawr rydym yn unig yn ddyledus y defnyddiwr $ 0.02, ac rydym wedi defnyddio hyd yn hyn dau ddarn. Ni allwn ddefnyddio nicel arall. Felly, yna byddwn yn symud ymlaen at y darn arian ddiwethaf am gael i ni, sef y ceiniogau. 

A gallwn ddefnyddio ceiniog? Wel, yes-- ac rydym yn y pen draw gan ddefnyddio dwy ceiniogau am gyfanswm o bedwar ddarnau arian. 

Ar ôl i chi orffen, mae'r Bydd y rhaglen yn edrych fel hyn. Unwaith y bydd y defnyddiwr yn rhedeg y rhaglen barus, maent annhymerus ' gofynnir i roi'r swm o newid mewn doleri eu bod yn ddyledus. Ac yna eich rhaglen ewyllys allbwn y swm lleiaf o ddarnau arian y byddai'r ariannwr barus defnyddio i wneud y swm hwnnw o newid. 

Felly nawr gadewch i dorri hyn i lawr i mewn i'n is-dasgau. Yn gyntaf rydym yn mynd i annog ein defnyddiwr i gael swm o newid. Ac, fel gydag unrhyw mewnbwn defnyddwyr, rydym am sicrhau ein bod yn dilysu mewnbwn hwnnw a sicrhau y gallwn ddefnyddio hynny mewnbwn ar gyfer gweddill ein rhaglen. Yna rydym yn mynd i bob amser defnyddiwch y pwynt mwyaf posibl a chadw golwg ar y darnau arian a ddefnyddiwyd. Ac yn olaf, argraffwch y rownd derfynol nifer o ddarnau arian a ddefnyddiwyd gennym. 

Felly gadewch i ni siarad am anogaeth. Mae'n rhaid i'r swm wneud cents, ac mae hyn yn mewn doleri. Ac felly am ddoleri, rydym yn mynd i ddefnyddio'r math newidyn arnofio. Nawr pryd bynnag y byddwch yn gofyn i defnyddiwr ar gyfer mewnbwn, ydych am wneud yn siŵr ei fod yn ddilys. Ac felly dyma ni yn hoffi i gymryd mantais y lluniad ddolen do-tra. 

Bydd dolen do-tra gweithredu'r corff y ddolen o leiaf unwaith. Felly, mae hyn yn dod i mewn 'n hylaw. Rydym yn gwybod bod angen i ni annog y defnyddiwr o leiaf unwaith ar gyfer fflôt. Nawr, os mai fflôt yn ddilys. Mae hynny'n wych. Rydym yn symud ymlaen. Ond os na, bydd y ddolen yn sicrhau ein bod yn cael fflôt priodol drwy ailadrodd yn barhaus nes y defnyddiwr yn rhoi gwerth dilys inni. 

Yn awr ar gyfer y do-tra cyflwr dolen, mae angen i ystyried yr hyn y mae'n ei olygu i gael fflôt annilys. Felly, ar gyfer y cyd-destun y broblem hon, yn ôl pob tebyg mae'n gwneud synnwyr dim ond i derbyn gwerthoedd cadarnhaol. 

Felly symud on-- rydym wedi cael gwerth yn ddoleri gan y defnyddiwr. Ond rydym yn delio â darnau arian, sydd yn gyfan gwbl yn cents. $ 1 yw'r gyfwerth â 100 o cents. Felly beth da i'w wneud yw trosi gwerthoedd hynny yn cents. 

Nawr, pan drosi o fflôt i cyfanrif, felly ddoleri i cents, rydym am wneud yn siŵr ein bod ni'n ofalus am imprecision fel y bo'r angen-pwynt. Felly mae hynny'n golygu that-- dweud fy doler value-- fy arnofio value-- oedd hyd yn oed $ 2, mae o hyd gallai fod rhai rhifau crwydr mewn 'na. Felly rydym am wneud yn siŵr bod nid yn unig yn rydym yn lluosi â 100 i gael y cents, ond rydym hefyd yn talgrynnu 'i off. 

Felly, yn awr mae gennym y swm o newid sy'n ddyledus i'r defnyddiwr. Rydym yn cael yn wreiddiol iddo mewn doleri, ac yn awr rydym wedi trosi i cents. Felly nawr, gallwn fwrw ymlaen â'r galon yr algorithm barus, sydd bob amser gan ddefnyddio'r darn arian mwyaf posibl. Er ein bod yn gwneud hyn, mae'n hanfodol ein bod yn hefyd cadw golwg ar faint o ddarnau arian yn mynd i gael ei ddychwelyd i'r defnyddiwr yn ogystal â'r gweddill newid sy'n ddyledus i'r defnyddiwr. 

Bydd y rhaglen yn edrych rhywbeth fel hyn. Ar ôl i chi gael y swm o doleri a drosi hynny i cents, yna byddwch yn mynd i mewn i ddolen. Er y gall fod yn chwarteri used-- hynny yw tra bod y maint y newid sy'n ddyledus i'r defnyddiwr yn fwy na neu'n hafal i $ 0.25, byddwch yn defnyddio chwarter. 

Nawr beth mae defnyddio chwarter ei olygu? Wel, one-- byddwch yn cynyddu y darn arian cyfrif i gael ei ddychwelyd i'r defnyddiwr. Ac yn ail, byddwch yn gostwng y cerrynt maint y newid sy'n ddyledus yn ôl i'r defnyddiwr gan $ 0.25. 

Ar ôl ailadrodd hynny nes Gellir chwarteri yn cael eu defnyddio mwyach, symud ymlaen i'r nesaf mwyaf coin-- yn yr achos hwn dimes, $ 0.10. Felly, byddwch yn mynd i mewn y ddolen nes gallwch ddefnyddio dimes mwyach. Yna ymlaen i'r nesaf darn arian mwyaf, Nickels. Ar ôl y gall Nickels yn cael eu defnyddio mwyach, defnyddiwch y swm sy'n weddill mewn ceiniogau. Ac yn olaf, argraffwch y nifer o ddarnau arian a ddefnyddiwyd. 

Ffordd arall eich bod yn gallu fynd at y broblem barus yw defnyddio'r dull modwlo. Modwlo yn weithredydd sy'n dychwelyd y gweddill y rhaniad rhwng dau rif. Dweud Roedd gen 50 mod 5. Wel, 5 yn ffactor o 50, felly bydd y gweddill yn 0. 50 mod 10-- yn dda, 10 hefyd yn ffactor o 50, felly mae'r gweddill yn hefyd 0. 50 mod 50-- yn dda, unrhyw rif mod hun Nid yn mynd i gael unrhyw weddill. 

Beth am 50 mod 49? Wel, 49 yn unig yn mynd i mewn 50 unwaith. Felly mae'r gweddill yn mynd i fod 1. 53 mod 50 yn mynd i rhoi gweddill o 3 i chi. 

Felly sut y gallwn ddefnyddio modwlo ac efallai rhywfaint o is-adran i weithredu ein algorithm barus? Wel, rydym yn dal yn awyddus i aros yn driw i galon y barus algorithm-- hynny yn defnyddio'r darn arian mwyaf posibl. 

Felly gadewch i ni ofyn i ni'n hunain os gallwn ddefnyddio unrhyw chwarter i ddychwelyd $ 0.32 i'r defnyddiwr. Wel, 32 mod 25 yn rhoi ni gweddill o $ 0.07. Felly mae hynny'n dweud wrthym y gallwn yn bendant defnyddiwch chwarter gyda 0.07 $ weddill. 

Gallwn wedyn defnyddio unrhyw dimes? Wel, no-- oherwydd 0.07 $ mod $ 0.10 yn rhoi gweddill 7 ni. Nid yw 10 yn mynd i mewn i 7 o gwbl. 

Yna, gallwn ddefnyddio Nickels? Wel 0.07 $ 5 cents mod yn rhoi i ni dau yn weddill. Ac yn olaf, gallwn ddefnyddio unrhyw ceiniogau? 2 mod 1 yn rhoi i ni 0, sydd yn y pen draw beth yr ydym am fod yna fod yn golygu ein bod wedi dychwelyd i'r defnyddiwr i gyd o'r newid sy'n ddyledus. 

Felly, yn awr mae gennych ddau ffyrdd posibl o gweithredu'r algorithm-- barus un gyda dolenni a un gyda cyfuniad o modwlo a rhannu. Felly yn olaf, ond mae angen i ni argraffwch y nifer terfynol o ddarnau arian. 

Os wyf yn awyddus i ddweud wrthych fy mod wedi cael 3 anifeiliaid anwes a gwerth hwn yn cael ei hardcoded, yna gallai Fi jyst ddefnyddio Datganiad prawf print syml. Ond mae ein gwerth mewn gwirionedd storio mewn newidyn. Felly, sut ydych chi'n argraffu'r gwerthoedd a storio mewn newidynnau? 

Ar gyfer hyn rydym yn cymryd mantais o bachau. Dywedwch Rwyf eisoes wedi datgan mae n cyfanrif ymgychwyn. Yna, yn nes ymlaen os oeddwn i eisiau print that gwerth, yna byddwn yn ysgrifennu y llinyn. Ac yn lle y gwerth byddwn yn ei ddefnyddio yn cadw'r bod% ​​integer-- i. Yna ar ôl y llinyn, mae gen i coma, wedi'i ddilyn gan y newidyn fy mod eisiau argraffu. Ac yn nes ymlaen, pan fydd yn printiau, bydd yn argraffu werth n. 

Gallwn hefyd ddefnyddio placeholder am fflôt, er enghraifft. Os wyf yn awyddus i ddweud wrthych sut llawer o arian gen i yn fy mhoced, yna gallwn ddweud gennyf% f ddoleri. Ac yn nes ymlaen pan mae'n printiau, yna n bydd cymryd lle y deiliad lle. Gallwn hefyd, er enghraifft, defnyddiwch sawl dalfannau ar gyfer nifer o newidynnau. Felly cyn belled gan fy mod yn rhestru nhw mewn trefn, yna mi gallu dweud wrthych faint o cŵn a chathod sydd gen i. 

Nawr rydym yn gwybod sut i annog y defnyddiwr i gael swm o newid, sicrhau bod y mewnbwn yn ddilys, ac yna rydym yn wedi dwy ffordd bosibl o weithredu yr algorithm barus o bob amser gan ddefnyddio y darn arian mwyaf posibl. Oherwydd ein bod wedi cadw golwg ar faint o ddarnau arian yr ydym yn ei ddefnyddio, yna gallwn print that gwerth ar y diwedd, dweud wrth y defnyddiwr faint o ddarnau arian maen nhw'n mynd yn ôl. 

Fy enw i yw Amayla, ac mae hyn yn CS50. 