এর লোভী হওয়া যাক. লোভী, আমাদের কাজ খেলা একটি অর্থগৃধ্নু কোষাধ্যক্ষ ভূমিকা. ব্যবহারকারী আমাদের বলুন কিভাবে হবে অনেক পরিবর্তন আমরা তাদের পাওনা, এবং তারপর আমাদের কাজ নিরূপণ করা হয় কয়েন সর্বনিম্ন সংখ্যা আমরা করতে ব্যবহার করতে পারেন যে পরিবর্তনের যে পরিমাণ. 

এর একটি উদাহরণ দিয়ে শুরু করা যাক. ব্যবহারকারী $ 0.32 ফিরে প্রয়োজন বলুন. আমরা দান দ্বারা এই কাজ করতে পারে তাদের 32 পেনিসমূহ, এক শতাংশ প্রতিটি. অথবা আমি আরো পাঁচটি coins-- ব্যবহার করতে পারে তাদের তিন dimes দান, $ 0.10 প্রতিটি, এবং দুই পেনিসমূহ, $ 0.02 প্রতিটি. কিন্তু আমরা এমনকি ব্যবহার করতে পারে কম যে কয়েন করতে? 

greedy-- পুরো যুদ্ধকৌশল একটি অর্থগৃধ্নু cashier-- করা বৃহত্তম মুদ্রা সম্ভব ব্যবহার করা হয়. তাই যখনই আমরা আছে চতুর্থাংশ আমরা তাদের ব্যবহার করব. অতঃপর তাদের অন্তর্ভুক্ত হওয়া রান আউট একবার, আমরা যদিও dimes, $ 0.10 প্রতিটি ব্যবহার করব. তারপর দ্বারা nickels, 5 সেন্ট প্রতিটি, এবং তারপর পেনিসমূহ নেমে, এক শতাংশ প্রতিটি. বৃহত্তম মুদ্রা ব্যবহারের সম্ভব যখনই আমরা করতে পারেন, আমরা নিশ্চিত যে আমরা fewest নম্বর ব্যবহার সম্ভব কয়েন পরিবর্তন করতে. 

তাই আসুন এই ভিতর দিয়ে হেটে যাক. ব্যবহারকারী $ 0.32 দরকার. তাই আমরা নিজেদেরকে জিজ্ঞাসা, আমরা এক চতুর্থাংশ ব্যবহার করতে পারেন? আচ্ছা, হ্যাঁ আমরা পারি. তাই এখন আমরা শুধুমাত্র তাদের জানি $ 0.07, এবং আমরা এক মুদ্রা ব্যবহার. 

আমরা অন্য চতুর্থাংশ ব্যবহার করতে পারি? কোন, আচ্ছা. $ 0.07 $ 0.25 কম, তাই আমরা এগিয়ে পরবর্তী বৃহত্তম মুদ্রা উপলব্ধ. Dimes $ 0.10 হয়, এবং আবার, আমরা dimes ব্যবহার করতে পারবেন না. কারণ dimes $ 0.10, মূল্যহীন যা পরিবর্তনের পরিমাণ অপরিশোধিত ছাড়া আর কিছুই নয়. 

আমরা nickels যাও যান. আর, হঁ্যা, $ 0.05 তুলনায় কম $ 0.10-- তাই আমরা একটি নিকেল ব্যবহার করতে পারেন. তাই এখন আমরা শুধুমাত্র $ 0.02 ব্যবহারকারী পাওনা এবং আমরা এখন পর্যন্ত দুই কয়েন ব্যবহার করেছি. আমরা অন্য নিকেল ব্যবহার করতে পারবেন না. তখন আমরা এ গত মুদ্রা এগিয়ে যান আমাদের নিষ্পত্তি, যা পেনিসমূহ হয়. 

আর আমরা টাকা ব্যবহার করতে পারেন? আচ্ছা, yes-- এবং আমরা দুটি ব্যবহার শেষ চার কয়েন মোট জন্য পেনিসমূহ. 

একবার আপনি সমাপ্ত করছি, প্রোগ্রাম ভালো দেখবে. একবার ব্যবহারকারী সঞ্চালিত হয় লোভী প্রোগ্রাম, তারা হবে এর পরিমাণ দিতে অনুরোধ করা ডলারে পরিবর্তন যে তারা অপরিশোধিত করছি. এবং তারপর আপনার প্রোগ্রামে সম্ভবত কিছু ইচ্ছার আউটপুট কয়েন সর্বনিম্ন পরিমাণ যে লোভী কোষাধ্যক্ষ ব্যবহার করবে পরিবর্তনের যে পরিমাণ করা. 

তাই এখন এই বিরতি দেওয়া আমাদের subtasks মধ্যে নিচে. প্রথমে আমরা অনুরোধ জানানো চলুন আমাদের পরিবর্তনের একটি পরিমাণ জন্য ব্যবহারকারী. আর, কোন ব্যবহারকারীর ইনপুট সঙ্গে যেমন, আমরা চাই নিশ্চিত যে আমরা যে ইনপুট বৈধতা যাচাই করা এবং নিশ্চিত আমরা যে ব্যবহার করতে পারেন যে আমাদের প্রোগ্রাম বাকি জন্য ইনপুট. তারপর আমরা সবসময় চলুন বৃহত্তম বিন্দু সম্ভব ব্যবহার এবং ব্যবহৃত কয়েন ট্র্যাক রাখতে. এবং পরিশেষে, চূড়ান্ত প্রিন্ট কয়েন যে আমরা ব্যবহৃত সংখ্যা. 

সুতরাং এর প্ররোচনা সম্পর্কে কথা বলা যাক. পরিমাণ, সেন্ট করতে হবে এবং এই ডলার হয়. তাই ডলারের জন্য, আমরা যাচ্ছি ভাসা পরিবর্তনশীল টাইপ করার. এখন যখনই আপনি ইনপুট জন্য ব্যবহারকারীকে জিজ্ঞাসা, আপনি কি নিশ্চিত যে এটা বৈধ করতে চাই. তাই এখানে আমরা সুবিধা গ্রহণ করতে চাই কি সময় লুপ নির্মানের. 

একটি সময় লুপ চালানো হবে লুপ শরীরের অন্তত একবার. তাই এই উপকারে আসে. আমরা জানি যে আমরা অনুরোধ জানানো প্রয়োজন ব্যবহারকারী একটি float জন্য অন্তত একবার. এখন যদি যে ভাসা বৈধ. দারুণ. আমরা চলে যাবো. কিন্তু যদি না, লুপ নিশ্চিত করবে আমরা একটি সঠিক ভাসা পেতে যে যতক্ষণ না ক্রমাগত পুনরাবৃত্তি দ্বারা ব্যবহারকারী আমাদের একটি বৈধ মান দেয়. 

এখন কি সময় জন্য লুপ শর্ত, আমরা প্রয়োজন বিবেচনা এটা মানে কি একটি অবৈধ ভাসা আছে. প্রেক্ষাপটে জন্য তাই এই সমস্যা, সম্ভবত এটা শুধু ইন্দ্রিয় তোলে ইতিবাচক মান গ্রহণ. 

সুতরাং on-- চলন্ত আমরা প্রাপ্ত করেছি ব্যবহারকারী থেকে ডলার মূল্য. কিন্তু আমরা কয়েন সঙ্গে লেনদেন করছেন, যা সেন্ট সম্পূর্ণভাবে হয়. $ 1 100 সেন্ট সমতূল্য. সুতরাং যা করার জন্য একটি ভাল জিনিস হয় সেন্ট মধ্যে ঐ মান রূপান্তর. 

এখন যখন একটি float থেকে রূপান্তর একটি পূর্ণসংখ্যা, সেন্ট ডলার তাই, আমরা নিশ্চিত যে আমরা সতর্কতা অবলম্বন করতে চাই ফ্লোটিং পয়েন্ট অনির্দিষ্টতা সম্পর্কে. সুতরাং যে that-- বলে মানে আমার ডলার আমার ভাসা মান মান একটি এমনকি $ 2, এখনও সেখানে ছিল সেখানে কিছু বিপথগামী সংখ্যা হতে পারে. সুতরাং আমরা যে নিশ্চিত করতে চাই না শুধুমাত্র আমরা 100 দ্বারা গুন সেন্ট পেতে পারি, কিন্তু আমরা এটা বন্ধ ধরপাকড়. 

তাই এখন আমরা পরিমাণ আছে পরিবর্তনের ব্যবহারকারী অপরিশোধিত. আমরা মূলত ডলারে এটি প্রাপ্ত, এবং এখন আমরা সেন্ট এটি রূপান্তরিত করেছি. এখন তাই আমরা হৃদয় দিয়ে এগিয়ে যেতে পারেন লোভী অ্যালগোরিদম, যা সবসময় হয় বৃহত্তম মুদ্রা সম্ভব ব্যবহার. যদিও আমরা এই কাজ করছি, এটা যে আমরা অপরিহার্য কতগুলি কয়েন হয় ট্র্যাক রাখতে ব্যবহারকারী ফেরত পাঠানো যাচ্ছে সেইসাথে অবশিষ্ট ব্যবহারকারী অপরিশোধিত পরিবর্তন. 

প্রোগ্রাম দেখবে এটার মতো কিছু. আপনি পরে পরিমাণ পেতে ডলার এবং সেন্ট যে রূপান্তর, তারপর আপনি একটি লুপ প্রবেশ করব. আবাস হতে পারে যদিও used-- অর্থাৎ যখন পরিবর্তনের পরিমাণ অপরিশোধিত ব্যবহারকারী এর চেয়ে বড় বা $ 0.25 এর সমান, আপনি এক চতুর্থাংশ ব্যবহার করব. 

এখন কি একটি সিকি ফলস্বরূপ ঘটা ব্যবহার করে নিতে? আচ্ছা, one-- আপনি মুদ্রা বৃদ্ধি করব ব্যবহারকারী আবার ফিরে যেতে চান গণনা. আর দ্বিতীয় আপনি বর্তমান হ্রাস করব পরিবর্তন পরিমাণ ব্যবহারকারী ফিরে অপরিশোধিত $ 0.25 দ্বারা. 

পুনরাবৃত্তি যে পর্যন্ত পর ত্রৈমাসিক আর ব্যবহার করা যেতে পারে, পরবর্তী বৃহত্তম এগিয়ে যান $ 0.10 এই ক্ষেত্রে dimes মধ্যে coin--. সুতরাং আপনি পর্যন্ত যে লুপ লিখবেন আপনি আর dimes ব্যবহার করতে পারেন. তারপর পরবর্তী এগিয়ে যান বৃহত্তম মুদ্রা, nickels. দ্বারা nickels আর ব্যবহার করা যাবে পরে, পেনিসমূহ মধ্যে অবশিষ্ট পরিমাণ ব্যবহার করা. এবং পরিশেষে, প্রিন্ট কয়েন সংখ্যা ব্যবহৃত. 

আরেকটি উপায় হল যে আপনি যা করতে পারেন লোভী সমস্যা কাছে মডুলো পদ্ধতির ব্যবহার করা হয়. মডিউলো একটি অপারেটর যে বাকি ফেরৎ দুটি সংখ্যার মধ্যে বিভাজন এর. আমি 50 মুড 5 ছিল বলুন. আচ্ছা, 5 50 একটি ফ্যাক্টর, তাই বাকি 0 হতে হবে. 50 মুড 10-- ভাল, 10 এছাড়াও একটি ফ্যাক্টর 50 এর, তাই বাকি এছাড়াও 0. 50 মুড 50-- ভাল, কোন সংখ্যা নিজেই mod কোন বাকি আছে যাচ্ছে না. 

কি 50 মুড 49 সম্পর্কে? আচ্ছা, 49 শুধুমাত্র একবার 50 মধ্যে যায়. তাই বাকি 1 হতে যাচ্ছে. 53 মুড 50 যাচ্ছে আপনি 3 বাকি দিতে. 

সুতরাং আমরা মডুলো কিভাবে ব্যবহার করতে পারেন এবং সম্ভবত কিছু বিভাজন আমাদের লোভী অ্যালগোরিদম বাস্তবায়ন? আচ্ছা, আমরা এখনও করতে সত্য থাকতে চাই যে অর্থগৃধ্নু এলগরিদম হৃদয় বৃহত্তম মুদ্রা সম্ভব ব্যবহার করে. 

তাই আপনি যদি আমরা কোনো ব্যবহার করতে পারেন এর নিজেদেরকে জিজ্ঞাসা করা যাক ত্রৈমাসিক ব্যবহারকারীকে $ 0.32 প্রত্যাবর্তন. আচ্ছা, 32 মুড 25 দেয় আমাদের $ 0.07 একটি বাকি. সুতরাং যে আমাদেরকে বলে যে, আমরা স্পষ্টভাবে পারেন $ 0.07 অবশিষ্ট সঙ্গে এক চতুর্থাংশ ব্যবহার. 

আমরা তখন কোন dimes ব্যবহার করতে পারি? আচ্ছা, no-- কারণ $ 0.07 মুডে $ 0.10 আমাদের 7 বাকি দেয়. 10 7 মধ্যে এ সব যান না. 

তারপর আমরা দ্বারা nickels ব্যবহার করতে পারেন? আচ্ছা $ 0.07 মুডে 5 সেন্ট আমাদের দুই অবশিষ্ট দেয়. এবং সর্বশেষে, আমরা কোনো পেনিসমূহ ব্যবহার করতে পারেন? 2 মুডে 1 আমাদের 0 দেয়, যা পরিণামে কি আমরা তখন যে কারণ চান এর মানে হল যে আমরা ফিরে করেছি ব্যবহারকারী যাও পরিবর্তনের সব অপরিশোধিত. 

তাই এখন আপনি দুটি সম্ভাব্য উপায় আছে অর্থগৃধ্নু এলগরিদম বাস্তবায়ন loops সঙ্গে এক এবং একটি সঙ্গে এক মডুলো এবং বিভাগের সমন্বয়. সুতরাং পরিশেষে, আমরা শুধু প্রয়োজন কয়েন চূড়ান্ত সংখ্যা প্রিন্ট করা হবে. 

যদি আমি তোমাকে যে আমি ছিল বলতে চেয়েছিলেন 3 গৃহপালিত এবং এই মান হার্ডকোডেড ছিল, তারপর আমি একটি ব্যবহার করতে পারে সহজ মুদ্রণ পরীক্ষা বিবৃতি. কিন্তু আমাদের মান আসলে একটি পরিবর্তনশীল সঞ্চিত. সুতরাং কিভাবে আপনি প্রিন্ট কর মান ভেরিয়েবলের মধ্যে সংরক্ষণ? 

এই জন্য আমরা নিতে স্থানধারক সুবিধা. আমি ইতিমধ্যে ঘোষণা করে বলুন একটি সক্রিয়া পূর্ণসংখ্যা এন. এরপর যদি আমি প্রিন্ট করতে চেয়েছিলেন মান, তারপর আমি স্ট্রিং লিখতে হবে. এবং যে মানের পরিবর্তে আমি ব্যবহার করতে হবে যে integer--% আমি জন্য একটি স্থানধারক. একটি তারপর স্ট্রিং পরে, আমি আছে কমা, পরিবর্তনশীল দ্বারা অনুসৃত আমি প্রিন্ট করতে চান যে. এবং পরে, যখন তা ছাপে, এটা n এর মান প্রিন্ট করব. 

আমিও একটি স্থানধারক ব্যবহার করতে পারে একটি float, উদাহরণস্বরূপ জন্য. আমি যদি বলি কিভাবে চেয়েছিলেন অনেক নগদ আমি আমার পকেটে আছে, তারপর আমি বলতে পারি আমি চ% ডলার আছে. এবং পরে যখন তা ছাপে উপর, তারপর n হবে যে জায়গা ধারক সঞ্চালিত. আমিও উদাহরণস্বরূপ, বিভিন্ন ব্যবহার করতে পারে বিভিন্ন ভেরিয়েবল জন্য স্থানধারক. তাই যতদিন আমি তালিকা যাতে তাদের, তারপর আমি আপনি বলুন কত পারেন কুকুর এবং বিড়াল আমি আছে. 

এখন আমরা জানি অনুরোধকারী কিভাবে পরিবর্তনের একটি পরিমাণ জন্য ব্যবহারকারী, নিশ্চিত যে ইনপুট বৈধ, এবং তারপর আমরা বাস্তবায়নে দুটি সম্ভাব্য উপায় আছে সবসময় ব্যবহারের লোভী অ্যালগোরিদম বৃহত্তম মুদ্রা সম্ভব. কারণ আমরা ট্র্যাক রাখা করেছি কতগুলি কয়েন আমরা ব্যবহার করছি, আমরা তারপর শেষে যে মান প্রিন্ট করতে পারেন, ব্যবহারকারী কতগুলি কয়েন তারা কহন ফিরে. 

আমার নাম Amayla হয়, এবং এই CS50. 