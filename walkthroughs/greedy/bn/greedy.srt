1
00:00:00,000 --> 00:00:00,710

2
00:00:00,710 --> 00:00:02,900
>> এর লোভী হওয়া যাক.

3
00:00:02,900 --> 00:00:06,810
লোভী, আমাদের কাজ খেলা
একটি অর্থগৃধ্নু কোষাধ্যক্ষ ভূমিকা.

4
00:00:06,810 --> 00:00:09,750
ব্যবহারকারী আমাদের বলুন কিভাবে হবে
অনেক পরিবর্তন আমরা তাদের পাওনা,

5
00:00:09,750 --> 00:00:13,520
এবং তারপর আমাদের কাজ নিরূপণ করা হয়
কয়েন সর্বনিম্ন সংখ্যা

6
00:00:13,520 --> 00:00:17,240
আমরা করতে ব্যবহার করতে পারেন যে
পরিবর্তনের যে পরিমাণ.

7
00:00:17,240 --> 00:00:19,560
>> এর একটি উদাহরণ দিয়ে শুরু করা যাক.

8
00:00:19,560 --> 00:00:23,170
ব্যবহারকারী $ 0.32 ফিরে প্রয়োজন বলুন.

9
00:00:23,170 --> 00:00:28,960
আমরা দান দ্বারা এই কাজ করতে পারে
তাদের 32 পেনিসমূহ, এক শতাংশ প্রতিটি.

10
00:00:28,960 --> 00:00:35,180
অথবা আমি আরো পাঁচটি coins-- ব্যবহার করতে পারে
তাদের তিন dimes দান, $ 0.10 প্রতিটি,

11
00:00:35,180 --> 00:00:38,060
এবং দুই পেনিসমূহ, $ 0.02 প্রতিটি.

12
00:00:38,060 --> 00:00:42,580
কিন্তু আমরা এমনকি ব্যবহার করতে পারে
কম যে কয়েন করতে?

13
00:00:42,580 --> 00:00:45,100
>> greedy-- পুরো যুদ্ধকৌশল
একটি অর্থগৃধ্নু cashier-- করা

14
00:00:45,100 --> 00:00:47,600
বৃহত্তম মুদ্রা সম্ভব ব্যবহার করা হয়.

15
00:00:47,600 --> 00:00:50,670
তাই যখনই আমরা আছে
চতুর্থাংশ আমরা তাদের ব্যবহার করব.

16
00:00:50,670 --> 00:00:54,100
অতঃপর তাদের অন্তর্ভুক্ত হওয়া রান আউট একবার,
আমরা যদিও dimes, $ 0.10 প্রতিটি ব্যবহার করব.

17
00:00:54,100 --> 00:00:58,840
তারপর দ্বারা nickels, 5 সেন্ট প্রতিটি, এবং
তারপর পেনিসমূহ নেমে, এক শতাংশ প্রতিটি.

18
00:00:58,840 --> 00:01:01,792
বৃহত্তম মুদ্রা ব্যবহারের
সম্ভব যখনই আমরা করতে পারেন,

19
00:01:01,792 --> 00:01:07,350
আমরা নিশ্চিত যে আমরা fewest নম্বর ব্যবহার
সম্ভব কয়েন পরিবর্তন করতে.

20
00:01:07,350 --> 00:01:09,180
>> তাই আসুন এই ভিতর দিয়ে হেটে যাক.

21
00:01:09,180 --> 00:01:11,660
ব্যবহারকারী $ 0.32 দরকার.

22
00:01:11,660 --> 00:01:14,200
তাই আমরা নিজেদেরকে জিজ্ঞাসা,
আমরা এক চতুর্থাংশ ব্যবহার করতে পারেন?

23
00:01:14,200 --> 00:01:15,560
আচ্ছা, হ্যাঁ আমরা পারি.

24
00:01:15,560 --> 00:01:19,720
তাই এখন আমরা শুধুমাত্র তাদের জানি
$ 0.07, এবং আমরা এক মুদ্রা ব্যবহার.

25
00:01:19,720 --> 00:01:20,970
>> আমরা অন্য চতুর্থাংশ ব্যবহার করতে পারি?

26
00:01:20,970 --> 00:01:21,890
কোন, আচ্ছা.

27
00:01:21,890 --> 00:01:27,570
$ 0.07 $ 0.25 কম, তাই আমরা এগিয়ে
পরবর্তী বৃহত্তম মুদ্রা উপলব্ধ.

28
00:01:27,570 --> 00:01:30,690
Dimes $ 0.10 হয়, এবং
আবার, আমরা dimes ব্যবহার করতে পারবেন না.

29
00:01:30,690 --> 00:01:35,480
কারণ dimes $ 0.10, মূল্যহীন যা
পরিবর্তনের পরিমাণ অপরিশোধিত ছাড়া আর কিছুই নয়.

30
00:01:35,480 --> 00:01:36,790
>> আমরা nickels যাও যান.

31
00:01:36,790 --> 00:01:40,890
আর, হঁ্যা, $ 0.05 তুলনায় কম
$ 0.10-- তাই আমরা একটি নিকেল ব্যবহার করতে পারেন.

32
00:01:40,890 --> 00:01:46,104
তাই এখন আমরা শুধুমাত্র $ 0.02 ব্যবহারকারী পাওনা
এবং আমরা এখন পর্যন্ত দুই কয়েন ব্যবহার করেছি.

33
00:01:46,104 --> 00:01:47,270
আমরা অন্য নিকেল ব্যবহার করতে পারবেন না.

34
00:01:47,270 --> 00:01:51,140
তখন আমরা এ গত মুদ্রা এগিয়ে যান
আমাদের নিষ্পত্তি, যা পেনিসমূহ হয়.

35
00:01:51,140 --> 00:01:52,270
>> আর আমরা টাকা ব্যবহার করতে পারেন?

36
00:01:52,270 --> 00:01:59,060
আচ্ছা, yes-- এবং আমরা দুটি ব্যবহার শেষ
চার কয়েন মোট জন্য পেনিসমূহ.

37
00:01:59,060 --> 00:02:01,430
>> একবার আপনি সমাপ্ত করছি,
প্রোগ্রাম ভালো দেখবে.

38
00:02:01,430 --> 00:02:03,710
একবার ব্যবহারকারী সঞ্চালিত হয়
লোভী প্রোগ্রাম, তারা হবে

39
00:02:03,710 --> 00:02:07,270
এর পরিমাণ দিতে অনুরোধ করা
ডলারে পরিবর্তন যে তারা অপরিশোধিত করছি.

40
00:02:07,270 --> 00:02:11,140
এবং তারপর আপনার প্রোগ্রামে সম্ভবত কিছু ইচ্ছার আউটপুট
কয়েন সর্বনিম্ন পরিমাণ

41
00:02:11,140 --> 00:02:14,740
যে লোভী কোষাধ্যক্ষ ব্যবহার করবে
পরিবর্তনের যে পরিমাণ করা.

42
00:02:14,740 --> 00:02:18,160
>> তাই এখন এই বিরতি দেওয়া
আমাদের subtasks মধ্যে নিচে.

43
00:02:18,160 --> 00:02:21,410
প্রথমে আমরা অনুরোধ জানানো চলুন আমাদের
পরিবর্তনের একটি পরিমাণ জন্য ব্যবহারকারী.

44
00:02:21,410 --> 00:02:25,630
আর, কোন ব্যবহারকারীর ইনপুট সঙ্গে যেমন, আমরা চাই
নিশ্চিত যে আমরা যে ইনপুট বৈধতা যাচাই করা

45
00:02:25,630 --> 00:02:29,360
এবং নিশ্চিত আমরা যে ব্যবহার করতে পারেন যে
আমাদের প্রোগ্রাম বাকি জন্য ইনপুট.

46
00:02:29,360 --> 00:02:32,480
তারপর আমরা সবসময় চলুন
বৃহত্তম বিন্দু সম্ভব ব্যবহার

47
00:02:32,480 --> 00:02:35,240
এবং ব্যবহৃত কয়েন ট্র্যাক রাখতে.

48
00:02:35,240 --> 00:02:39,080
এবং পরিশেষে, চূড়ান্ত প্রিন্ট
কয়েন যে আমরা ব্যবহৃত সংখ্যা.

49
00:02:39,080 --> 00:02:40,970
>> সুতরাং এর প্ররোচনা সম্পর্কে কথা বলা যাক.

50
00:02:40,970 --> 00:02:43,550
পরিমাণ, সেন্ট করতে হবে
এবং এই ডলার হয়.

51
00:02:43,550 --> 00:02:48,440
তাই ডলারের জন্য, আমরা যাচ্ছি
ভাসা পরিবর্তনশীল টাইপ করার.

52
00:02:48,440 --> 00:02:52,390
এখন যখনই আপনি ইনপুট জন্য ব্যবহারকারীকে জিজ্ঞাসা,
আপনি কি নিশ্চিত যে এটা বৈধ করতে চাই.

53
00:02:52,390 --> 00:02:56,640
তাই এখানে আমরা সুবিধা গ্রহণ করতে চাই
কি সময় লুপ নির্মানের.

54
00:02:56,640 --> 00:03:00,320
>> একটি সময় লুপ চালানো হবে
লুপ শরীরের অন্তত একবার.

55
00:03:00,320 --> 00:03:01,650
তাই এই উপকারে আসে.

56
00:03:01,650 --> 00:03:05,510
আমরা জানি যে আমরা অনুরোধ জানানো প্রয়োজন
ব্যবহারকারী একটি float জন্য অন্তত একবার.

57
00:03:05,510 --> 00:03:07,100
এখন যদি যে ভাসা বৈধ.

58
00:03:07,100 --> 00:03:07,710
দারুণ.

59
00:03:07,710 --> 00:03:08,460
আমরা চলে যাবো.

60
00:03:08,460 --> 00:03:11,910
কিন্তু যদি না, লুপ নিশ্চিত করবে
আমরা একটি সঠিক ভাসা পেতে যে

61
00:03:11,910 --> 00:03:16,810
যতক্ষণ না ক্রমাগত পুনরাবৃত্তি দ্বারা
ব্যবহারকারী আমাদের একটি বৈধ মান দেয়.

62
00:03:16,810 --> 00:03:18,760
>> এখন কি সময় জন্য
লুপ শর্ত, আমরা প্রয়োজন

63
00:03:18,760 --> 00:03:22,000
বিবেচনা এটা মানে কি
একটি অবৈধ ভাসা আছে.

64
00:03:22,000 --> 00:03:24,220
প্রেক্ষাপটে জন্য তাই
এই সমস্যা, সম্ভবত

65
00:03:24,220 --> 00:03:27,450
এটা শুধু ইন্দ্রিয় তোলে
ইতিবাচক মান গ্রহণ.

66
00:03:27,450 --> 00:03:32,010
>> সুতরাং on-- চলন্ত আমরা প্রাপ্ত করেছি
ব্যবহারকারী থেকে ডলার মূল্য.

67
00:03:32,010 --> 00:03:35,380
কিন্তু আমরা কয়েন সঙ্গে লেনদেন করছেন,
যা সেন্ট সম্পূর্ণভাবে হয়.

68
00:03:35,380 --> 00:03:38,660
$ 1 100 সেন্ট সমতূল্য.

69
00:03:38,660 --> 00:03:43,670
সুতরাং যা করার জন্য একটি ভাল জিনিস হয়
সেন্ট মধ্যে ঐ মান রূপান্তর.

70
00:03:43,670 --> 00:03:48,380
>> এখন যখন একটি float থেকে রূপান্তর
একটি পূর্ণসংখ্যা, সেন্ট ডলার তাই,

71
00:03:48,380 --> 00:03:52,230
আমরা নিশ্চিত যে আমরা সতর্কতা অবলম্বন করতে চাই
ফ্লোটিং পয়েন্ট অনির্দিষ্টতা সম্পর্কে.

72
00:03:52,230 --> 00:03:55,260
সুতরাং যে that-- বলে মানে
আমার ডলার আমার ভাসা মান

73
00:03:55,260 --> 00:04:00,260
মান একটি এমনকি $ 2, এখনও সেখানে ছিল
সেখানে কিছু বিপথগামী সংখ্যা হতে পারে.

74
00:04:00,260 --> 00:04:04,590
সুতরাং আমরা যে নিশ্চিত করতে চাই না শুধুমাত্র
আমরা 100 দ্বারা গুন সেন্ট পেতে পারি,

75
00:04:04,590 --> 00:04:06,480
কিন্তু আমরা এটা বন্ধ ধরপাকড়.

76
00:04:06,480 --> 00:04:09,210
>> তাই এখন আমরা পরিমাণ আছে
পরিবর্তনের ব্যবহারকারী অপরিশোধিত.

77
00:04:09,210 --> 00:04:13,430
আমরা মূলত ডলারে এটি প্রাপ্ত,
এবং এখন আমরা সেন্ট এটি রূপান্তরিত করেছি.

78
00:04:13,430 --> 00:04:17,029
এখন তাই আমরা হৃদয় দিয়ে এগিয়ে যেতে পারেন
লোভী অ্যালগোরিদম, যা সবসময় হয়

79
00:04:17,029 --> 00:04:19,220
বৃহত্তম মুদ্রা সম্ভব ব্যবহার.

80
00:04:19,220 --> 00:04:21,930
যদিও আমরা এই কাজ করছি,
এটা যে আমরা অপরিহার্য

81
00:04:21,930 --> 00:04:25,360
কতগুলি কয়েন হয় ট্র্যাক রাখতে
ব্যবহারকারী ফেরত পাঠানো যাচ্ছে

82
00:04:25,360 --> 00:04:28,630
সেইসাথে অবশিষ্ট
ব্যবহারকারী অপরিশোধিত পরিবর্তন.

83
00:04:28,630 --> 00:04:31,130
>> প্রোগ্রাম দেখবে
এটার মতো কিছু.

84
00:04:31,130 --> 00:04:34,190
আপনি পরে পরিমাণ পেতে
ডলার এবং সেন্ট যে রূপান্তর,

85
00:04:34,190 --> 00:04:35,790
তারপর আপনি একটি লুপ প্রবেশ করব.

86
00:04:35,790 --> 00:04:38,400
আবাস হতে পারে যদিও
used-- অর্থাৎ

87
00:04:38,400 --> 00:04:43,660
যখন পরিবর্তনের পরিমাণ অপরিশোধিত
ব্যবহারকারী এর চেয়ে বড় বা $ 0.25 এর সমান,

88
00:04:43,660 --> 00:04:45,040
আপনি এক চতুর্থাংশ ব্যবহার করব.

89
00:04:45,040 --> 00:04:47,000
>> এখন কি একটি সিকি ফলস্বরূপ ঘটা ব্যবহার করে নিতে?

90
00:04:47,000 --> 00:04:51,280
আচ্ছা, one-- আপনি মুদ্রা বৃদ্ধি করব
ব্যবহারকারী আবার ফিরে যেতে চান গণনা.

91
00:04:51,280 --> 00:04:55,890
আর দ্বিতীয় আপনি বর্তমান হ্রাস করব
পরিবর্তন পরিমাণ ব্যবহারকারী ফিরে অপরিশোধিত

92
00:04:55,890 --> 00:04:57,520
$ 0.25 দ্বারা.

93
00:04:57,520 --> 00:05:00,680
>> পুনরাবৃত্তি যে পর্যন্ত পর
ত্রৈমাসিক আর ব্যবহার করা যেতে পারে,

94
00:05:00,680 --> 00:05:04,630
পরবর্তী বৃহত্তম এগিয়ে যান
$ 0.10 এই ক্ষেত্রে dimes মধ্যে coin--.

95
00:05:04,630 --> 00:05:07,750
সুতরাং আপনি পর্যন্ত যে লুপ লিখবেন
আপনি আর dimes ব্যবহার করতে পারেন.

96
00:05:07,750 --> 00:05:10,720
তারপর পরবর্তী এগিয়ে যান
বৃহত্তম মুদ্রা, nickels.

97
00:05:10,720 --> 00:05:14,810
দ্বারা nickels আর ব্যবহার করা যাবে পরে,
পেনিসমূহ মধ্যে অবশিষ্ট পরিমাণ ব্যবহার করা.

98
00:05:14,810 --> 00:05:17,800
এবং পরিশেষে, প্রিন্ট
কয়েন সংখ্যা ব্যবহৃত.

99
00:05:17,800 --> 00:05:20,350
>> আরেকটি উপায় হল যে আপনি যা করতে পারেন
লোভী সমস্যা কাছে

100
00:05:20,350 --> 00:05:22,950
মডুলো পদ্ধতির ব্যবহার করা হয়.

101
00:05:22,950 --> 00:05:25,690
মডিউলো একটি অপারেটর
যে বাকি ফেরৎ

102
00:05:25,690 --> 00:05:27,680
দুটি সংখ্যার মধ্যে বিভাজন এর.

103
00:05:27,680 --> 00:05:30,270
আমি 50 মুড 5 ছিল বলুন.

104
00:05:30,270 --> 00:05:34,070
আচ্ছা, 5 50 একটি ফ্যাক্টর,
তাই বাকি 0 হতে হবে.

105
00:05:34,070 --> 00:05:39,230
50 মুড 10-- ভাল, 10 এছাড়াও একটি ফ্যাক্টর
50 এর, তাই বাকি এছাড়াও 0.

106
00:05:39,230 --> 00:05:43,660
50 মুড 50-- ভাল, কোন সংখ্যা নিজেই mod
কোন বাকি আছে যাচ্ছে না.

107
00:05:43,660 --> 00:05:45,510
>> কি 50 মুড 49 সম্পর্কে?

108
00:05:45,510 --> 00:05:47,910
আচ্ছা, 49 শুধুমাত্র একবার 50 মধ্যে যায়.

109
00:05:47,910 --> 00:05:50,290
তাই বাকি 1 হতে যাচ্ছে.

110
00:05:50,290 --> 00:05:55,180
53 মুড 50 যাচ্ছে
আপনি 3 বাকি দিতে.

111
00:05:55,180 --> 00:05:59,120
>> সুতরাং আমরা মডুলো কিভাবে ব্যবহার করতে পারেন
এবং সম্ভবত কিছু বিভাজন

112
00:05:59,120 --> 00:06:01,690
আমাদের লোভী অ্যালগোরিদম বাস্তবায়ন?

113
00:06:01,690 --> 00:06:05,550
আচ্ছা, আমরা এখনও করতে সত্য থাকতে চাই
যে অর্থগৃধ্নু এলগরিদম হৃদয়

114
00:06:05,550 --> 00:06:07,910
বৃহত্তম মুদ্রা সম্ভব ব্যবহার করে.

115
00:06:07,910 --> 00:06:14,570
>> তাই আপনি যদি আমরা কোনো ব্যবহার করতে পারেন এর নিজেদেরকে জিজ্ঞাসা করা যাক
ত্রৈমাসিক ব্যবহারকারীকে $ 0.32 প্রত্যাবর্তন.

116
00:06:14,570 --> 00:06:20,070
আচ্ছা, 32 মুড 25 দেয়
আমাদের $ 0.07 একটি বাকি.

117
00:06:20,070 --> 00:06:24,500
সুতরাং যে আমাদেরকে বলে যে, আমরা স্পষ্টভাবে পারেন
$ 0.07 অবশিষ্ট সঙ্গে এক চতুর্থাংশ ব্যবহার.

118
00:06:24,500 --> 00:06:26,180
>> আমরা তখন কোন dimes ব্যবহার করতে পারি?

119
00:06:26,180 --> 00:06:32,740
আচ্ছা, no-- কারণ $ 0.07 মুডে
$ 0.10 আমাদের 7 বাকি দেয়.

120
00:06:32,740 --> 00:06:34,960
10 7 মধ্যে এ সব যান না.

121
00:06:34,960 --> 00:06:36,390
>> তারপর আমরা দ্বারা nickels ব্যবহার করতে পারেন?

122
00:06:36,390 --> 00:06:40,490
আচ্ছা $ 0.07 মুডে 5 সেন্ট
আমাদের দুই অবশিষ্ট দেয়.

123
00:06:40,490 --> 00:06:42,930
এবং সর্বশেষে, আমরা কোনো পেনিসমূহ ব্যবহার করতে পারেন?

124
00:06:42,930 --> 00:06:45,930
2 মুডে 1 আমাদের 0 দেয়,
যা পরিণামে কি

125
00:06:45,930 --> 00:06:48,160
আমরা তখন যে কারণ চান
এর মানে হল যে আমরা ফিরে করেছি

126
00:06:48,160 --> 00:06:50,160
ব্যবহারকারী যাও পরিবর্তনের সব অপরিশোধিত.

127
00:06:50,160 --> 00:06:54,320
>> তাই এখন আপনি দুটি সম্ভাব্য উপায় আছে
অর্থগৃধ্নু এলগরিদম বাস্তবায়ন

128
00:06:54,320 --> 00:06:59,230
loops সঙ্গে এক এবং একটি সঙ্গে এক
মডুলো এবং বিভাগের সমন্বয়.

129
00:06:59,230 --> 00:07:03,010
সুতরাং পরিশেষে, আমরা শুধু প্রয়োজন
কয়েন চূড়ান্ত সংখ্যা প্রিন্ট করা হবে.

130
00:07:03,010 --> 00:07:06,520
>> যদি আমি তোমাকে যে আমি ছিল বলতে চেয়েছিলেন
3 গৃহপালিত এবং এই মান হার্ডকোডেড ছিল,

131
00:07:06,520 --> 00:07:09,240
তারপর আমি একটি ব্যবহার করতে পারে
সহজ মুদ্রণ পরীক্ষা বিবৃতি.

132
00:07:09,240 --> 00:07:12,320
কিন্তু আমাদের মান আসলে
একটি পরিবর্তনশীল সঞ্চিত.

133
00:07:12,320 --> 00:07:15,260
সুতরাং কিভাবে আপনি প্রিন্ট কর
মান ভেরিয়েবলের মধ্যে সংরক্ষণ?

134
00:07:15,260 --> 00:07:17,880
>> এই জন্য আমরা নিতে
স্থানধারক সুবিধা.

135
00:07:17,880 --> 00:07:21,540
আমি ইতিমধ্যে ঘোষণা করে বলুন
একটি সক্রিয়া পূর্ণসংখ্যা এন.

136
00:07:21,540 --> 00:07:25,170
এরপর যদি আমি প্রিন্ট করতে চেয়েছিলেন
মান, তারপর আমি স্ট্রিং লিখতে হবে.

137
00:07:25,170 --> 00:07:30,500
এবং যে মানের পরিবর্তে আমি ব্যবহার করতে হবে
যে integer--% আমি জন্য একটি স্থানধারক.

138
00:07:30,500 --> 00:07:33,800
একটি তারপর স্ট্রিং পরে, আমি আছে
কমা, পরিবর্তনশীল দ্বারা অনুসৃত

139
00:07:33,800 --> 00:07:34,950
আমি প্রিন্ট করতে চান যে.

140
00:07:34,950 --> 00:07:38,550
এবং পরে, যখন তা ছাপে,
এটা n এর মান প্রিন্ট করব.

141
00:07:38,550 --> 00:07:41,570
>> আমিও একটি স্থানধারক ব্যবহার করতে পারে
একটি float, উদাহরণস্বরূপ জন্য.

142
00:07:41,570 --> 00:07:44,000
আমি যদি বলি কিভাবে চেয়েছিলেন
অনেক নগদ আমি আমার পকেটে আছে,

143
00:07:44,000 --> 00:07:46,820
তারপর আমি বলতে পারি আমি চ% ডলার আছে.

144
00:07:46,820 --> 00:07:51,330
এবং পরে যখন তা ছাপে উপর, তারপর n হবে
যে জায়গা ধারক সঞ্চালিত.

145
00:07:51,330 --> 00:07:55,530
আমিও উদাহরণস্বরূপ, বিভিন্ন ব্যবহার করতে পারে
বিভিন্ন ভেরিয়েবল জন্য স্থানধারক.

146
00:07:55,530 --> 00:07:57,590
তাই যতদিন আমি তালিকা
যাতে তাদের, তারপর আমি

147
00:07:57,590 --> 00:08:00,390
আপনি বলুন কত পারেন
কুকুর এবং বিড়াল আমি আছে.

148
00:08:00,390 --> 00:08:03,710
>> এখন আমরা জানি অনুরোধকারী কিভাবে
পরিবর্তনের একটি পরিমাণ জন্য ব্যবহারকারী,

149
00:08:03,710 --> 00:08:06,130
নিশ্চিত যে ইনপুট
বৈধ, এবং তারপর আমরা

150
00:08:06,130 --> 00:08:10,370
বাস্তবায়নে দুটি সম্ভাব্য উপায় আছে
সবসময় ব্যবহারের লোভী অ্যালগোরিদম

151
00:08:10,370 --> 00:08:12,090
বৃহত্তম মুদ্রা সম্ভব.

152
00:08:12,090 --> 00:08:15,050
কারণ আমরা ট্র্যাক রাখা করেছি
কতগুলি কয়েন আমরা ব্যবহার করছি,

153
00:08:15,050 --> 00:08:19,210
আমরা তারপর শেষে যে মান প্রিন্ট করতে পারেন,
ব্যবহারকারী কতগুলি কয়েন তারা কহন

154
00:08:19,210 --> 00:08:20,240
ফিরে.

155
00:08:20,240 --> 00:08:24,240
>> আমার নাম Amayla হয়, এবং এই CS50.

156
00:08:24,240 --> 00:08:25,915

