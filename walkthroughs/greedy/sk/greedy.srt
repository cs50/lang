1
00:00:00,000 --> 00:00:00,710

2
00:00:00,710 --> 00:00:02,900
>> Poďme chamtivý.

3
00:00:02,900 --> 00:00:06,810
V chamtivý, našou úlohou je hrať
Úloha chamtivý pokladničné.

4
00:00:06,810 --> 00:00:09,750
Užívateľ nám povie, ako
mnoho zmien Dlhujeme im,

5
00:00:09,750 --> 00:00:13,520
a potom našou úlohou je vypočítať
minimálny počet mincí

6
00:00:13,520 --> 00:00:17,240
že môžeme použiť, aby sa
že množstvo zmien.

7
00:00:17,240 --> 00:00:19,560
>> Začnime s príkladom.

8
00:00:19,560 --> 00:00:23,170
Povedzme, že používateľ potrebuje $, 32 späť.

9
00:00:23,170 --> 00:00:28,960
Mohli by sme to urobiť tým, že
je 32 haliere, jeden cent každý.

10
00:00:28,960 --> 00:00:35,180
Alebo môžem použiť tiež päť coins-- podľa
čo im tri desaťhalierniky, $ 0,10 každý,

11
00:00:35,180 --> 00:00:38,060
a dva haliere, $, 02 každý.

12
00:00:38,060 --> 00:00:42,580
Ale môžeme použiť aj
menej mincí, aby to?

13
00:00:42,580 --> 00:00:45,100
>> Celá taktika v greedy--
byť chamtivý cashier--

14
00:00:45,100 --> 00:00:47,600
je použiť čo možno najväčšiu mince.

15
00:00:47,600 --> 00:00:50,670
Takže vždy, keď máme
štvrtiny my ich použijeme.

16
00:00:50,670 --> 00:00:54,100
A potom ešte raz tie dôjdu,
budeme používať desaťhalierniky, 0,10 $ každý.

17
00:00:54,100 --> 00:00:58,840
Potom Nickels, 5 centov za kus, a
potom dole na haliere, jeden cent každý.

18
00:00:58,840 --> 00:01:01,792
Pomocou najväčší mince
možné kedykoľvek môžeme,

19
00:01:01,792 --> 00:01:07,350
aby sme zaistili, že budeme používať najmenší počet
možných mincí, aby sa zmena.

20
00:01:07,350 --> 00:01:09,180
>> Takže poďme prejsť cez to.

21
00:01:09,180 --> 00:01:11,660
Užívateľ potrebuje 0,32 $.

22
00:01:11,660 --> 00:01:14,200
Tak sme sa sami seba pýtať,
môžeme použiť štvrtinu?

23
00:01:14,200 --> 00:01:15,560
No, áno, môžeme.

24
00:01:15,560 --> 00:01:19,720
Takže teraz vieme len im
$ 0,07, a sme použili jednu mincu.

25
00:01:19,720 --> 00:01:20,970
>> Môžeme použiť iný štvrtinu?

26
00:01:20,970 --> 00:01:21,890
No, no.

27
00:01:21,890 --> 00:01:27,570
$ 0,07 je menej ako $ 0,25, takže budeme pokračovať
na budúci najväčší mince k dispozícii.

28
00:01:27,570 --> 00:01:30,690
Desaťhalierniky sú $ 0,10 a
Znova, nemôžeme použiť desaťhalierniky.

29
00:01:30,690 --> 00:01:35,480
Vzhľadom k tomu, desaťhalierniky sú v hodnote $ 0,10, ktorá
je väčšie ako množstvo zmien dlžnej.

30
00:01:35,480 --> 00:01:36,790
>> Ideme do Nickels.

31
00:01:36,790 --> 00:01:40,890
A áno naozaj, $ 0,05 je menšia než
$ 0.10-- takže môžeme použiť nikel.

32
00:01:40,890 --> 00:01:46,104
Takže teraz máme len dlhuje užívateľovi $ 0,02,
a my sme doteraz používajú dve mince.

33
00:01:46,104 --> 00:01:47,270
Nemôžeme použiť iný nikel.

34
00:01:47,270 --> 00:01:51,140
Takže budeme pokračovať do poslednej mince v
máme k dispozícii, čo sú haliere.

35
00:01:51,140 --> 00:01:52,270
>> A môžeme použiť penny?

36
00:01:52,270 --> 00:01:59,060
No, yes-- a my skončiť s použitím dvoch
haliere na celkom štyri mincí.

37
00:01:59,060 --> 00:02:01,430
>> Akonáhle budete hotoví sa
Program bude vyzerať takto.

38
00:02:01,430 --> 00:02:03,710
Akonáhle užívateľ spustí
chamtivý programu, oni budú

39
00:02:03,710 --> 00:02:07,270
vyzvaní k uveďte sumu
Zmena v dolároch, že oni dlhuje.

40
00:02:07,270 --> 00:02:11,140
A potom váš program vypíše
minimálne množstvo mincí

41
00:02:11,140 --> 00:02:14,740
že chamtiví pokladničné by používala
aby sa také množstvo zmien.

42
00:02:14,740 --> 00:02:18,160
>> Takže teraz poďme zlomiť toto
dole do našich čiastkové úlohy.

43
00:02:18,160 --> 00:02:21,410
Najprv budeme výzvu nášho
Užívateľ vo výške zmien.

44
00:02:21,410 --> 00:02:25,630
A rovnako ako u akéhokoľvek užívateľského vstupu, chceme
zaistili, že budeme overovať, že vstup

45
00:02:25,630 --> 00:02:29,360
a zabezpečiť, že môžeme použiť, že
Vstup pre zvyšok nášho programu.

46
00:02:29,360 --> 00:02:32,480
Potom budeme vždy
použiť čo možno najväčšiu časť

47
00:02:32,480 --> 00:02:35,240
a udržanie prehľadu o používaných mincí.

48
00:02:35,240 --> 00:02:39,080
A konečne, tlačiť finálna
počet mincí, ktoré sme používali.

49
00:02:39,080 --> 00:02:40,970
>> Takže poďme hovoriť o dopytovania.

50
00:02:40,970 --> 00:02:43,550
Suma musí centov,
a to je v dolároch.

51
00:02:43,550 --> 00:02:48,440
A tak za doláre, ideme
použiť typ float premenné.

52
00:02:48,440 --> 00:02:52,390
Teraz, keď sa spýtate užívateľa pre vstup,
Chcete, aby sa ubezpečil, že je platný.

53
00:02:52,390 --> 00:02:56,640
A tak tu sme chceli využiť
slučkové konštruktu do-while.

54
00:02:56,640 --> 00:03:00,320
>> A do-while potom vykoná
telo slučky aspoň raz.

55
00:03:00,320 --> 00:03:01,650
Takže to príde vhod.

56
00:03:01,650 --> 00:03:05,510
Vieme, že musíme prinúti
Užívateľ aspoň raz za hotovosť.

57
00:03:05,510 --> 00:03:07,100
Teraz, ak, že plavák je platný.

58
00:03:07,100 --> 00:03:07,710
To je skvelé.

59
00:03:07,710 --> 00:03:08,460
Ideme ďalej.

60
00:03:08,460 --> 00:03:11,910
Ale aj keby nie, slučky zaistí
že dostaneme správne plavák

61
00:03:11,910 --> 00:03:16,810
neustálym opakovaním, pokým
Užívateľ nám dáva platnú hodnotu.

62
00:03:16,810 --> 00:03:18,760
>> Teraz pre do-while
podmienka slučky, musíme

63
00:03:18,760 --> 00:03:22,000
zvážiť, čo to znamená
mať neplatný plavák.

64
00:03:22,000 --> 00:03:24,220
Tak pre kontext
Tento problém pravdepodobne

65
00:03:24,220 --> 00:03:27,450
to dáva zmysel len preto, aby
akceptovať kladné hodnoty.

66
00:03:27,450 --> 00:03:32,010
>> Tak dojemné on-- sme získaný
hodnota v dolároch od užívateľa.

67
00:03:32,010 --> 00:03:35,380
Ale máme čo do činenia s mincami,
ktoré sú úplne v centoch.

68
00:03:35,380 --> 00:03:38,660
$ 1 ekvivalent 100 centov.

69
00:03:38,660 --> 00:03:43,670
Takže dobrá vec urobiť, je
previesť tieto hodnoty do centov.

70
00:03:43,670 --> 00:03:48,380
>> Teraz pri prevode z plaváka
na celé číslo, takže dolárov do centov,

71
00:03:48,380 --> 00:03:52,230
Chceme sa uistiť, že budeme opatrní
o plávajúcou desatinnou čiarkou nepresnosti.

72
00:03:52,230 --> 00:03:55,260
Takže to znamená, to-- hovoria
môj dolár value-- môj plavák

73
00:03:55,260 --> 00:04:00,260
value-- tam bol ešte 2 $, stále
môžu byť niektoré zblúdilých čísel tam.

74
00:04:00,260 --> 00:04:04,590
Takže chceme, aby sa ubezpečil, že nielen
my vynásobíme 100 pre získanie centov,

75
00:04:04,590 --> 00:04:06,480
ale tiež kole ho.

76
00:04:06,480 --> 00:04:09,210
>> Takže teraz máme sumu
zmeny voči užívateľovi.

77
00:04:09,210 --> 00:04:13,430
Pôvodne sme došli toho v dolároch,
a teraz sme prevedie ju na centy.

78
00:04:13,430 --> 00:04:17,029
Takže teraz môžeme pristúpiť k srdcu
chamtivý algoritmus, ktorý je vždy

79
00:04:17,029 --> 00:04:19,220
s čo najväčšou možné mince.

80
00:04:19,220 --> 00:04:21,930
Aj keď to robíme,
to je dôležité, že sme tiež

81
00:04:21,930 --> 00:04:25,360
sledovať, koľko mincí sú
bude sa vrátil k užívateľovi

82
00:04:25,360 --> 00:04:28,630
rovnako ako zvyšné
Zmena voči užívateľovi.

83
00:04:28,630 --> 00:04:31,130
>> Program bude vyzerať
niečo také.

84
00:04:31,130 --> 00:04:34,190
Po získaní sumy
dolárov a previesť, že k centov,

85
00:04:34,190 --> 00:04:35,790
potom budete zadať slučku.

86
00:04:35,790 --> 00:04:38,400
Kým štvrtiny môže byť
used-- to znamená

87
00:04:38,400 --> 00:04:43,660
zatiaľ čo množstvo zmien dlhuje
Užívateľ je väčší alebo rovné $ 0,25,

88
00:04:43,660 --> 00:04:45,040
budete používať štvrtinu.

89
00:04:45,040 --> 00:04:47,000
>> Čo teraz robí pomocou štvrtiny obnáša?

90
00:04:47,000 --> 00:04:51,280
No, one-- budete zvýšiť mincu
počítať sa vrátil k užívateľovi.

91
00:04:51,280 --> 00:04:55,890
A za druhé budete znižovať prúd
Množstvo zmien dlhuje späť k užívateľovi

92
00:04:55,890 --> 00:04:57,520
o $ 0,25.

93
00:04:57,520 --> 00:05:00,680
>> Potom opakuje, že kým
štvrtiny už nemožno použiť,

94
00:05:00,680 --> 00:05:04,630
pristúpiť k ďalšej najväčšej
coin-- v tomto prípade desaťhalierniky, $ 0,10.

95
00:05:04,630 --> 00:05:07,750
Takže budete vstúpiť do tejto slučky, kým
môžete naďalej používať desaťhalierniky.

96
00:05:07,750 --> 00:05:10,720
Potom pristúpiť k ďalšej
Najväčšie mince, Nickels.

97
00:05:10,720 --> 00:05:14,810
Potom, čo už nemôže byť použitý Nickels,
využiť zostávajúcu čiastku haliere.

98
00:05:14,810 --> 00:05:17,800
A konečne, vytlačiť
počet mincí použiť.

99
00:05:17,800 --> 00:05:20,350
>> Ďalším spôsobom, že môžete
pristupovať k problému chamtivé

100
00:05:20,350 --> 00:05:22,950
je použiť postup modulo.

101
00:05:22,950 --> 00:05:25,690
Modulo je operátor
ktorá vracia zvyšok

102
00:05:25,690 --> 00:05:27,680
divízie medzi dvoma číslami.

103
00:05:27,680 --> 00:05:30,270
Povedzme, že som mal 50 mod 5.

104
00:05:30,270 --> 00:05:34,070
No, 5 je faktor 50,
takže zvyšok bude 0.

105
00:05:34,070 --> 00:05:39,230
50 mod 10-- dobre, 10 je tiež faktor
50, takže zvyšok je tiež 0.

106
00:05:39,230 --> 00:05:43,660
50 mod 50-- dobre ľubovoľný počet mod sám
nebude mať žiadny zvyšok.

107
00:05:43,660 --> 00:05:45,510
>> Čo asi 50 mod 49?

108
00:05:45,510 --> 00:05:47,910
No, 49 jede len do 50 ° C raz.

109
00:05:47,910 --> 00:05:50,290
Takže zvyšok bude 1.

110
00:05:50,290 --> 00:05:55,180
53 mod 50 sa chystá
vám zostávajúcu časť 3.

111
00:05:55,180 --> 00:05:59,120
>> Tak ako môžeme použiť modulo
a možno aj niektoré divízie

112
00:05:59,120 --> 00:06:01,690
implementovať našu chamtivý algoritmus?

113
00:06:01,690 --> 00:06:05,550
No, napriek tomu chceme zostať verný k
Srdcom chamtivý algorithm--, že

114
00:06:05,550 --> 00:06:07,910
je pomocou najväčšou mince je to možné.

115
00:06:07,910 --> 00:06:14,570
>> Takže poďme sa pýtať sami seba, či môžeme použiť niektorý
štvrtiny vrátiť $ 0,32 pre užívateľov.

116
00:06:14,570 --> 00:06:20,070
No, 32 mod 25 poskytuje
us pozostatkom $ hodnotou 0.07.

117
00:06:20,070 --> 00:06:24,500
Takže nám hovorí, že môžeme definitívne
používať jednu štvrtinu s $, 07 zostávajúce.

118
00:06:24,500 --> 00:06:26,180
>> Potom môžeme použiť ľubovoľné desaťhalierniky?

119
00:06:26,180 --> 00:06:32,740
No, pretože no-- 0,07 $ mod
$, 10 Nám dáva zvyšok 7.

120
00:06:32,740 --> 00:06:34,960
10 nezachádza do 7. vôbec.

121
00:06:34,960 --> 00:06:36,390
>> Potom môžeme použiť pětníku?

122
00:06:36,390 --> 00:06:40,490
No $ 0.07 mod 5 centov
nám dáva dve zostávajúce.

123
00:06:40,490 --> 00:06:42,930
A konečne, môžeme použiť nejaké peniažky?

124
00:06:42,930 --> 00:06:45,930
2 mod 1 nám dáva 0,
čo je presne to

125
00:06:45,930 --> 00:06:48,160
chceme, pretože potom to
Znamená to, že sme sa vrátili

126
00:06:48,160 --> 00:06:50,160
pre užívateľa všetky zmeny dlhuje.

127
00:06:50,160 --> 00:06:54,320
>> Takže teraz máte dve možnosti, ako
vykonávanie chamtivý algorithm--

128
00:06:54,320 --> 00:06:59,230
jeden s okami a jeden s
Kombinácia modulo a delenie.

129
00:06:59,230 --> 00:07:03,010
Takže nakoniec, len je potrebné
vytlačiť konečný počet mincí.

130
00:07:03,010 --> 00:07:06,520
>> Keby som chcel, že som mal povedať,
3 domáce zvieratá a táto hodnota bola napevno,

131
00:07:06,520 --> 00:07:09,240
Potom som mohol len použiť
Jednoduchý tlač skúšobnej vyhlásení.

132
00:07:09,240 --> 00:07:12,320
Ale naša hodnota je v skutočnosti
uložený v premennej.

133
00:07:12,320 --> 00:07:15,260
Tak ako sa vám vytlačiť
Hodnoty uložené v premenných?

134
00:07:15,260 --> 00:07:17,880
>> Za týmto účelom berieme
Výhodou zástupnými znaky.

135
00:07:17,880 --> 00:07:21,540
Povedzme, že už som deklaroval
konkretizované celé číslo n.

136
00:07:21,540 --> 00:07:25,170
Potom o niečo neskôr, či chcem vytlačiť že
hodnoty, potom by som písať reťazec.

137
00:07:25,170 --> 00:07:30,500
A namiesto tejto hodnoty by som použil
zástupným symbolom pre tento integer -% i.

138
00:07:30,500 --> 00:07:33,800
Potom po reťazci, mám
čiarka, nasledovaný premennú

139
00:07:33,800 --> 00:07:34,950
že chcem vytlačiť.

140
00:07:34,950 --> 00:07:38,550
A neskôr, keď sa tlačí,
to bude tlačiť hodnotu n.

141
00:07:38,550 --> 00:07:41,570
>> Mohol by som použiť tiež zástupný znak
pre float, napríklad.

142
00:07:41,570 --> 00:07:44,000
Keby som vám chcel povedať, ako
Koľko peňazí mám vo vrecku,

143
00:07:44,000 --> 00:07:46,820
potom by som mohol povedať, že mám% F dolárov.

144
00:07:46,820 --> 00:07:51,330
A neskôr, keď tlačí, potom n bude
nahradiť týmto držiteľom mieste.

145
00:07:51,330 --> 00:07:55,530
Mohol by som tiež napríklad, používať niekoľko
zástupné symboly pre niekoľko premenných.

146
00:07:55,530 --> 00:07:57,590
Tak dlho, ako som zoznamu
je v poriadku, potom som

147
00:07:57,590 --> 00:08:00,390
vám povedať, koľko
psy a mačky mám.

148
00:08:00,390 --> 00:08:03,710
>> Teraz vieme, ako prinúti
Užívateľ vo výške zmien,

149
00:08:03,710 --> 00:08:06,130
zabezpečilo, že tento vstup
je platný, a potom sme

150
00:08:06,130 --> 00:08:10,370
majú dva možné spôsoby realizácie
chamtivý algoritmus vždy používať

151
00:08:10,370 --> 00:08:12,090
čo najväčší mince.

152
00:08:12,090 --> 00:08:15,050
Pretože sme sledovali
koľko mincí budeme používať,

153
00:08:15,050 --> 00:08:19,210
potom môžeme vytlačiť túto hodnotu na konci,
musí užívateľovi oznámiť, koľko mincí, ktorú sú

154
00:08:19,210 --> 00:08:20,240
dostať sa späť.

155
00:08:20,240 --> 00:08:24,240
>> Moje meno je Amayla, a to je CS50.

156
00:08:24,240 --> 00:08:25,915

