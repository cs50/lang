के लालची मिलता है। लालची, हमारे काम खेलने के लिए है एक लालची खजांची की भूमिका। उपयोगकर्ता हमें बताओ कैसे होगा ज्यादा बदलाव हम उन्हें देने हैं, और फिर हमारे काम की गणना करने के लिए है सिक्कों की न्यूनतम संख्या हम बनाने के लिए उपयोग कर सकते हैं कि परिवर्तन की है कि राशि। 

चलो एक उदाहरण के साथ शुरू करते हैं। उपयोगकर्ता $ 0.32 वापस आवश्यकता कहो। हम देकर यह कर सकता है उन्हें 32 पैसे, एक प्रतिशत प्रत्येक। या मैं भी द्वारा पांच coins-- इस्तेमाल कर सकते हैं उन्हें तीन ऑफ डाइम्स दे रही है, $ 0.10 प्रत्येक, और दो पैसे, $ 0.02 प्रत्येक। लेकिन हम भी इस्तेमाल कर सकते हैं कम सिक्कों कि बनाने के लिए? 

greedy-- में पूरी रणनीति एक लालची cashier-- होना करने के लिए सबसे बड़ा सिक्का संभव का उपयोग करने के लिए है। तो जब भी हमारे पास है क्वार्टर हम उन्हें इस्तेमाल करेंगे। और फिर उन बाहर चला एक बार, हम डाइम्स, $ 0.10 प्रत्येक इस्तेमाल करेंगे। तब nickels, 5 सेंट प्रत्येक, और तो पैसे के लिए नीचे, एक प्रतिशत प्रत्येक। सबसे बड़ा सिक्का का उपयोग करके संभव है जब भी हम कर सकते हैं, हम यह सुनिश्चित करना है कि हम सबसे कम संख्या का उपयोग संभव सिक्कों की परिवर्तन करने के लिए। 

तो चलो इस के माध्यम से चलते हैं। उपयोगकर्ता $ 0.32 की जरूरत है। इसलिए हम अपने आप से पूछना, हम एक चौथाई उपयोग कर सकते हैं? खैर, हाँ हम कर सकते हैं। तो अब हम केवल उन्हें पता है $ 0.07 है, और हम एक सिक्का इस्तेमाल किया। 

हम एक और तिमाही का उपयोग कर सकते हैं? नहीं। $ 0.07 $ 0.25 की तुलना में कम है, इसलिए हम आगे बढ़ना अगले सबसे बड़ा सिक्का उपलब्ध है। ऑफ डाइम्स $ 0.10 रहे हैं, और फिर, हम डाइम्स का उपयोग नहीं कर सकते हैं। क्योंकि ऑफ डाइम्स $ 0.10, लायक हैं जो परिवर्तन की बकाया राशि की तुलना में अधिक है। 

हम nickels के पास जाओ। और, हाँ, वास्तव में, $ 0.05 की तुलना में कम है $ 0.10-- तो हम एक निकल उपयोग कर सकते हैं। तो अब हम केवल $ 0.02 उपयोगकर्ता कर्ज़दार और हम अब तक दो सिक्के का उपयोग किया है। हम एक और निकल का उपयोग नहीं कर सकते हैं। तो फिर हम पर पिछले सिक्का के लिए आगे बढ़ना हमारे निपटान, जो पैसे हैं। 

और हम पैसा का उपयोग कर सकते हैं? खैर, yes-- और हम दो का उपयोग कर खत्म चार सिक्के की कुल के लिए पैसे। 

एक बार जब आप समाप्त कर रहे हैं, कार्यक्रम इस तरह दिखेगा। एक बार जब उपयोगकर्ता चलाता लालची कार्यक्रम, वे की राशि देने के लिए प्रेरित किया डॉलर में परिवर्तन है कि वे बकाया कर रहे हैं। और फिर अपने कार्यक्रम होगा उत्पादन सिक्कों की न्यूनतम राशि कि लालची खजांची का प्रयोग करेंगे परिवर्तन की है कि राशि बनाने के लिए। 

तो अब इस तोड़ देना हमारे subtasks में नीचे। सबसे पहले हम शीघ्र करने जा रहे हैं हमारे परिवर्तन की राशि के लिए उपयोगकर्ता। और, किसी भी उपयोगकर्ता इनपुट के साथ के रूप में, हम चाहते हैं यकीन है कि हम उस इनपुट को मान्य करना और यह सुनिश्चित करना है कि हम उस का उपयोग कर सकते हैं कि हमारे कार्यक्रम के आराम के लिए इनपुट। तो फिर हम हमेशा के लिए जा रहे हैं सबसे बड़ा मुद्दा यह संभव का उपयोग और इस्तेमाल के सिक्कों का ट्रैक रखने के लिए। और अंत में, अंतिम प्रिंट सिक्कों कि हम इस्तेमाल की संख्या। 

तो चलो उत्साह के बारे में बात करते हैं। राशि, सेंट करना चाहिए और यह डॉलर में है। और तो डॉलर के लिए, हम जा रहे हैं नाव चर प्रकार का उपयोग करने के लिए। अब जब भी आप निवेश के लिए एक उपयोगकर्ता से पूछते हैं, आपको लगता है कि यह वैध है बनाना चाहते हैं। और यहाँ तो हम लाभ लेना चाहते मत करो हालांकि पाश निर्माण के। 

एक है, जबकि पाश अमल करेंगे लूप के शरीर पर कम से कम एक बार। इसलिए इस काम में आता है। हम जानते हैं कि हम शीघ्र करने की जरूरत है उपयोगकर्ता एक नाव के लिए कम से कम एक बार। अब अगर है कि नाव वैध है। एक दम बढ़िया। हम आगे बढ़ते हैं। लेकिन अगर नहीं, पाश यह सुनिश्चित करेंगे हम एक उचित नाव मिलता है कि जब तक लगातार दोहरा द्वारा उपयोगकर्ता हमें एक मान्य मान देता है। 

अब क्या-थोड़ी देर के लिए पाश की स्थिति, हम की जरूरत है विचार करने के लिए इसका क्या मतलब गलत नाव है। के संदर्भ के लिए तो इस समस्या है, शायद यह सिर्फ समझ में आता है सकारात्मक मूल्यों को स्वीकार करते हैं। 

तो on-- चलती हम प्राप्त की है एक उपयोगकर्ता से डॉलर में मूल्य। लेकिन हम सिक्कों के साथ काम कर रहे हैं, जो सेंट में पूरी तरह से कर रहे हैं। $ 1 100 सेंट के बराबर है। ऐसा करने के लिए एक अच्छी बात है सेंट में उन मूल्यों को बदलने का। 

अब जब एक नाव से परिवर्तित एक पूर्णांक के लिए, सेंट करने के लिए डॉलर हां, हमें यकीन है कि हम सावधान कर रहे हैं बनाना चाहते चल बिन्दु अस्पष्टता के बारे में। तो यह है कि that-- का कहना है कि इसका मतलब है मेरे डॉलर मेरी नाव value-- value-- एक भी $ 2, वहाँ अभी भी था वहाँ में कुछ आवारा संख्या हो सकती है। इसलिए हम चाहते हैं कि यह सुनिश्चित करना चाहते न केवल हम 100 से गुणा सेंट पाने के लिए करते हैं, लेकिन हम भी इसे बंद दौर। 

तो अब हम मात्रा में है परिवर्तन के उपयोगकर्ता के लिए होता था। हम मूल रूप से डॉलर में इसे प्राप्त की, और अब हम सेंट करने के लिए इसे बदल दिया है। अब तो हम के दिल के साथ आगे बढ़ सकते हैं लालची एल्गोरिथ्म, जो हमेशा होता है सबसे बड़ा सिक्का संभव का उपयोग कर। जब तक हम यह कर रहे हैं, ऐसा नहीं है कि हम भी जरूरी है कितने सिक्के हैं का ट्रैक रखने उपयोगकर्ता को लौट होने जा रहा के साथ-साथ शेष उपयोगकर्ता को बकाया बदल जाते हैं। 

कार्यक्रम दिखेगा कुछ इस तरह। आप के बाद की राशि प्राप्त डॉलर और सेंट करने के लिए कि परिवर्तित, तो आप एक पाश में प्रवेश करेंगे। तिमाहियों हो सकता है used-- कि कहने के लिए है जबकि परिवर्तन की राशि को बकाया उपयोगकर्ता से अधिक या $ 0.25 के बराबर है, आप एक चौथाई इस्तेमाल करेंगे। 

अब क्या एक चौथाई आवश्यक का उपयोग करता है? खैर, आप one-- सिक्का में वृद्धि होगी उपयोगकर्ता को लौट जा गिनती। और दूसरा आप वर्तमान में कमी करेंगे परिवर्तन की राशि उपयोगकर्ता को वापस बकाया $ 0.25। 

दोहरा कि बाद जब तक तिमाहियों अब नहीं किया जा सकता है, अगले सबसे बड़ा करने के लिए आगे बढ़ें $ 0.10 इस मामले ऑफ डाइम्स में coin--। तो आप जब तक कि पाश में प्रवेश करेंगे आप नहीं रह ऑफ डाइम्स उपयोग कर सकते हैं। फिर अगले करने के लिए आगे बढ़ें सबसे बड़ा सिक्का, nickels। nickels अब नहीं किया जा सकता है के बाद, पैसे में शेष राशि का उपयोग करें। और अंत में, मुद्रित सिक्कों की संख्या का इस्तेमाल किया। 

एक और तरीका है कि आप कर सकते हैं लालची समस्या दृष्टिकोण सापेक्ष दृष्टिकोण का उपयोग करने के लिए है। Modulo एक ऑपरेटर है कि शेष रिटर्न दो संख्याओं के बीच विभाजन की। मैं 50 आधुनिक 5 था कहो। खैर, 5 से 50 का एक पहलू है, इसलिए शेष 0 होगा। 50 आधुनिक 10-- अच्छी तरह से, 10 में भी एक कारक है 50 साल की है, तो शेष भी 0 है। 50 आधुनिक 50-- खैर, किसी भी संख्या ही आधुनिक किसी भी शेष राशि के लिए नहीं जा रहा है। 

क्या 50 आधुनिक 49 के बारे में? खैर, 49 केवल एक बार 50 में चला जाता है। तो शेष 1 होने जा रहा है। 53 आधुनिक 50 करने जा रहा है आप 3 की शेष दे। 

इसलिए हम सापेक्ष कैसे उपयोग कर सकते हैं और शायद कुछ विभाजन हमारे लालची कलन विधि को लागू करने के लिए? ठीक है, हम अभी भी करने के सच्चे रहना चाहते हैं कि algorithm-- लालची का दिल सबसे बड़ा सिक्का संभव का उपयोग कर रहा है। 

तो अगर हम किसी भी उपयोग कर सकते हैं की अपने आप से पूछना क्वार्टर उपयोगकर्ता के लिए $ 0.32 लौटने के लिए। खैर, 32 आधुनिक 25 देता है अमेरिका $ 0.07 शेष। तो यह है कि हमें बताता है कि हम निश्चित रूप से कर सकते हैं $ 0.07 शेष के साथ एक चौथाई का उपयोग करें। 

हम तो किसी भी ऑफ डाइम्स का उपयोग कर सकते हैं? खैर, no-- क्योंकि $ 0.07 आधुनिक $ 0.10 हमें 7 का शेष देता है। 10 7 में बिल्कुल नहीं जाना है। 

तो फिर हम nickels उपयोग कर सकते हैं? अच्छी तरह से $ 0.07 आधुनिक 5 सेंट हमें दो शेष देता है। और अंत में, हम किसी भी पैसे का उपयोग कर सकते हैं? 2 आधुनिक 1 हमें 0 देता है, जो अंततः क्या है हम तो यह है कि क्योंकि चाहते हैं इसका मतलब है कि हम लौटा दिया है उपयोगकर्ता के लिए परिवर्तन के सभी बकाया है। 

तो अब आप के दो संभव तरीके हैं लालची algorithm-- को लागू छोरों के साथ एक और एक के साथ एक सापेक्ष और विभाजन का संयोजन। तो अंत में, हम सिर्फ करने की जरूरत है सिक्कों की अंतिम संख्या मुद्रित। 

अगर मैं तुम्हें कि मैं था बताना चाहता था 3 पालतू जानवर और इस मूल्य हार्डकोडेड किया गया था, फिर मैं तो बस एक इस्तेमाल कर सकते हैं सरल प्रिंट परीक्षण बयान। लेकिन हमारे मूल्य वास्तव में है एक चर में संग्रहीत। तो कैसे आप प्रिंट करना मूल्यों चर में संग्रहीत? 

इसके लिए हम लेते हैं प्लेसहोल्डर्स का लाभ। मैं पहले से ही घोषित कर दिया था कहो एक initialized पूर्णांक। फिर बाद में अगर मैं चाहता था कि मुद्रित करने के लिए मूल्य, तो मैं स्ट्रिंग लिखना होगा। और कहा कि मूल्य के बजाय मैं प्रयोग करेंगे कि integer--% i के लिए एक प्लेसहोल्डर। एक तो स्ट्रिंग के बाद, मेरे पास है अल्पविराम, चर के द्वारा पीछा मैं मुद्रित करने के लिए चाहते हैं। और बाद में, जब यह प्रिंट, यह n के मूल्य प्रिंट हूँ। 

मैं भी एक प्लेसहोल्डर इस्तेमाल कर सकते हैं एक नाव, उदाहरण के लिए के लिए। अगर मैं आपको बता कैसे करना चाहता था ज्यादा नकदी मैं अपनी जेब में है, तो मैं कह सकता मैं% च डॉलर है। और बाद में जब यह प्रिंट पर, तो n होगा उस जगह धारक की जगह ले। मैं भी, उदाहरण के लिए, कई इस्तेमाल कर सकते हैं कई चर के लिए प्लेसहोल्डर्स। तो जब तक मैं सूची उन्हें क्रम में, तो मैं आपको बता सकते हैं कि कितने कुत्तों और बिल्लियों मेरे पास है। 

अब हम जानते हैं कि संकेत करने के लिए कैसे परिवर्तन की राशि के लिए उपयोगकर्ता, यह सुनिश्चित करें कि कि इनपुट वैध है, और फिर हम लागू करने के दो तरीके हैं संभव हमेशा का उपयोग करने का लालची एल्गोरिथ्म सबसे बड़ा सिक्का संभव। क्योंकि हम का ट्रैक रखा है कितने सिक्के हम प्रयोग कर रहे हैं, हम तो अंत में है कि मूल्य मुद्रित कर सकते हैं, उपयोगकर्ता कितने सिक्के वे कर रहे हैं कह रही वापस हो रही है। 

मेरा नाम Amayla है, और इस CS50 है। 