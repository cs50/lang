1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:02,500
ZAMYLA Chan: Je to ja, Zamyla.

3
00:00:02,500 --> 00:00:06,910
Dnes v Mario, budeme mať
kreslenie polovicu pyramídy pre Mario

4
00:00:06,910 --> 00:00:08,290
vyšplhať nahor.

5
00:00:08,290 --> 00:00:11,570
>> Takže poďme hovoriť o našich
úloh pre tento problém.

6
00:00:11,570 --> 00:00:13,610
budeme chcieť
výzvu a overovať

7
00:00:13,610 --> 00:00:18,290
Užívateľ pre platný vstup, ako
high chcú Mario pyramída byť.

8
00:00:18,290 --> 00:00:20,090
A potom, budeme ju čerpať.

9
00:00:20,090 --> 00:00:24,870
Takže poďme začať s výzvou a
overenie užívateľa pre ich vstup.

10
00:00:24,870 --> 00:00:27,640
>> Môžeme využiť služby
Funkcia CS50 Knižnica

11
00:00:27,640 --> 00:00:31,160
dostať int, ktorá zabezpečí, že
užívateľ zadá celé číslo.

12
00:00:31,160 --> 00:00:35,730
Prípadné pozitívne celé čísla, záporná
celé čísla, čísla 0 sú poctivá hra.

13
00:00:35,730 --> 00:00:41,670
V opačnom prípade bude užívateľ vyzvaný k
opakovať, kým sa vstupom platné celé číslo.

14
00:00:41,670 --> 00:00:44,210
Teraz síce get int robí
veľa práce pre nás

15
00:00:44,210 --> 00:00:46,730
na zaistenie
Užívateľ nám dáva celé číslo,

16
00:00:46,730 --> 00:00:50,760
stále potrebujeme použiť niektoré
ďalšie obmedzenia na to.

17
00:00:50,760 --> 00:00:56,420
Koniec koncov, nemôžeme mať Mario lezenie
polovica pyramída výšky negatívneho 12.

18
00:00:56,420 --> 00:00:59,040
>> Okrem toho, že je
špecifikácia problému

19
00:00:59,040 --> 00:01:02,490
hovorí, že môžeme len
dovoliť Mario šplhať

20
00:01:02,490 --> 00:01:06,940
pyramída z výšok medzi 0 a 23 ° C.

21
00:01:06,940 --> 00:01:11,120
OK, tak to znamená, že je potrebné
priebežne vyzve užívateľa

22
00:01:11,120 --> 00:01:14,320
aby nám platný
Počet a len pokračovať

23
00:01:14,320 --> 00:01:17,120
keď si dal nám platnú výšku.

24
00:01:17,120 --> 00:01:18,720
Ako to urobíme?

25
00:01:18,720 --> 00:01:23,760
>> No, kontinuálne procesy nám dá
Myšlienka loops-- niečo robiť

26
00:01:23,760 --> 00:01:24,720
opakovane.

27
00:01:24,720 --> 00:01:28,220
Jedna slučka v C za chvíľu
slučka, ktorá bude priebežne

28
00:01:28,220 --> 00:01:33,480
vykonať telo slučky tak dlho, kým
daná podmienka vyhodnotená ako pravdivá.

29
00:01:33,480 --> 00:01:36,200
Akonáhle je táto podmienka
vyhodnocuje ako nepravdivý,

30
00:01:36,200 --> 00:01:39,770
Program bude pokračovať
čo príde po tom.

31
00:01:39,770 --> 00:01:43,180
Takže zatiaľ čo slučky sú jedným zo spôsobov
zabezpečiť, aby Neustále

32
00:01:43,180 --> 00:01:45,320
vyzve užívateľa na zadanie platný vstup.

33
00:01:45,320 --> 00:01:50,070
A potom, čo nám platný vstup,
budeme pokračovať, čo príde nabudúce.

34
00:01:50,070 --> 00:01:54,380
Vieme, že budeme klásť
užívateľ pre vstup aspoň raz.

35
00:01:54,380 --> 00:01:59,200
Takže teraz sa dostávame k sestra
while, ktorý je robiť, zatiaľ čo slučka.

36
00:01:59,200 --> 00:02:02,650
>> Robiť, kým slučky sa vykoná
telo slučky aspoň raz.

37
00:02:02,650 --> 00:02:06,150
Takže bez kontroly stavu,
že sa vykoná tela slučky.

38
00:02:06,150 --> 00:02:09,750
A potom skontrolovať stav vidieť
či je potrebné opakovať.

39
00:02:09,750 --> 00:02:13,080
To príde vhod, keď
my overenie užívateľského vstupu.

40
00:02:13,080 --> 00:02:15,830
Vieme, že ideme
aby im aspoň raz opýtať.

41
00:02:15,830 --> 00:02:18,780
Takže robiť, zatiaľ čo slučka by mohla
vyzerať nejako takto.

42
00:02:18,780 --> 00:02:20,090
Máme celé číslo n.

43
00:02:20,090 --> 00:02:22,760
A vnútri úloh
while, okamžite

44
00:02:22,760 --> 00:02:24,750
vyzve užívateľa k celé číslo.

45
00:02:24,750 --> 00:02:29,740
Ak n je neplatné, potom budeme je výzva
znovu a znovu a znovu, kým nebudú

46
00:02:29,740 --> 00:02:31,820
daj nám, že platné celé číslo.

47
00:02:31,820 --> 00:02:37,440
Konečne, akonáhle n je platný vstup, zmienime
pokračovať do zvyšku nášho programu.

48
00:02:37,440 --> 00:02:41,830
>> Takže sa vráťme k spec a kontrola
aké sú podmienky pre platný vstup

49
00:02:41,830 --> 00:02:43,670
Bude.

50
00:02:43,670 --> 00:02:48,090
Platné výšky budú
byť v rozmedzí 0 až 23 vrátane.

51
00:02:48,090 --> 00:02:53,350
Takže neplatné výšky idú do
byť menšia ako 0 alebo väčšia ako 23 ° C.

52
00:02:53,350 --> 00:02:56,420
Takže nezabudnite navrhnúť
Váš zdravotný stav starostlivo,

53
00:02:56,420 --> 00:02:58,660
s vedomím, že podmienkou
Pre robiť, zatiaľ čo slučky

54
00:02:58,660 --> 00:03:01,470
by mal byť pri n je neplatný.

55
00:03:01,470 --> 00:03:05,080
Teraz to nie je Bude to
jednoduchý jediný logický výraz.

56
00:03:05,080 --> 00:03:07,630
Budeme musieť spojiť
dva rôzne výrazy

57
00:03:07,630 --> 00:03:09,900
aby sa celý náš stav.

58
00:03:09,900 --> 00:03:13,290
>> Takže poďme stačí sa pozrieť na pravdivostnú tabuľky som
Už vám dal náznak, že sme

59
00:03:13,290 --> 00:03:15,200
bude zaoberať dvoma Boolean.

60
00:03:15,200 --> 00:03:19,620
Takže tu je pravdivostná tabuľka, kde som
majú dve Booleans-- boolovskou 1 a 2.

61
00:03:19,620 --> 00:03:27,050
Takže máme možnosť vyhodnotiť
bool1 a bool2 alebo bool1 alebo bool2.

62
00:03:27,050 --> 00:03:31,980
A bude len pravdivé ak obidva
Booleans vyhodnotiť na hodnotu true, zatiaľ čo všetci

63
00:03:31,980 --> 00:03:37,280
alebo bude platiť tak dlho, kým jeden z
dva Booleans vyhodnotený ako true.

64
00:03:37,280 --> 00:03:41,450
OK, takže chvíľku, pozastaviť toto
video a stráviť túto pravdu tabuľky.

65
00:03:41,450 --> 00:03:42,930
Budem tu čakať.

66
00:03:42,930 --> 00:03:45,760
Keď sa vrátiš, pozri
ak môžete dať dohromady

67
00:03:45,760 --> 00:03:51,910
Boolovský výraz pre vaše
Stav N je neplatný vstup.

68
00:03:51,910 --> 00:03:54,420
>> Takže teraz, že máme
platný vstup od užívateľa, poďme

69
00:03:54,420 --> 00:03:58,710
choďte do toho a hovoriť o tom, ako
mohol čerpať polovicu pyramídy.

70
00:03:58,710 --> 00:04:03,410
Tu v tomto jednoduchom textovom editore,
Ja som nakreslil ľavej vyrovnané pyramídy.

71
00:04:03,410 --> 00:04:07,050
Ale my vieme, že musíme naše
pyramída je potrebné so zarovnaním vpravo.

72
00:04:07,050 --> 00:04:08,650
Tak, ako by to urobiť?

73
00:04:08,650 --> 00:04:11,440
No, ja by som mohol skúsiť, aby sa zasadila
všetko na stranu

74
00:04:11,440 --> 00:04:14,880
len špecifikovaním málo
znak medzi nimi.

75
00:04:14,880 --> 00:04:16,779
A potom, pre budúci
linka, idem dať

76
00:04:16,779 --> 00:04:20,970
Niektoré viac znakov, aby sa zasadila ju so sebou,
a further-- tak ďalej a tak forth--

77
00:04:20,970 --> 00:04:23,360
kým nebudem mať tú správnu vyrovnané pyramídy.

78
00:04:23,360 --> 00:04:27,780
Takže máme pravý align pyramídy, ale
to nevyzerá tak skvele s bodkami.

79
00:04:27,780 --> 00:04:30,680
Ale napriek tomu chceme
tvrdia, že pekné medzery.

80
00:04:30,680 --> 00:04:35,260
Takže idem doslovne
vložiť nejaké medzery.

81
00:04:35,260 --> 00:04:39,420
>> Namiesto troch bodiek, budem
dať jeden, dva, tri medzery.

82
00:04:39,420 --> 00:04:40,370
Na druhom riadku.

83
00:04:40,370 --> 00:04:42,640
Dám jeden, dva priestory.

84
00:04:42,640 --> 00:04:45,370
A na predposlednej
linka, len jeden priestor.

85
00:04:45,370 --> 00:04:48,290
A tu mám právo vyrovnané pyramídy.

86
00:04:48,290 --> 00:04:52,170
V tom príklad v texte
editor, máme predstavu o štruktúre

87
00:04:52,170 --> 00:04:54,590
že budeme používať na to polovicu pyramídy.

88
00:04:54,590 --> 00:04:58,080
Pre každý riadok, čo sme urobili
Je napíšeme nejaké medzery,

89
00:04:58,080 --> 00:05:00,170
a potom napísal niektoré
hashe, a potom zadali

90
00:05:00,170 --> 00:05:03,020
klávesa Enter, ktorá
vytvára novú linku.

91
00:05:03,020 --> 00:05:07,770
Takže teraz, že máme to, poďme
o krok ďalej a nájsť vzor.

92
00:05:07,770 --> 00:05:10,170
>> Tak som chcel povedať, pretože
Záujem o tento príklad,

93
00:05:10,170 --> 00:05:12,480
máme čo do činenia s výškou 8.

94
00:05:12,480 --> 00:05:17,100
Prvý riadok bude mať dva
hash, ktorý nasleduje sedem medzery.

95
00:05:17,100 --> 00:05:20,020
Tieto second-- Tri hashe, šesť priestory.

96
00:05:20,020 --> 00:05:24,260
Tretia row-- štyri, päť hash
spaces-- tak ďalej a tak ďalej

97
00:05:24,260 --> 00:05:26,350
až sa dostaneme do n-tého riadku.

98
00:05:26,350 --> 00:05:31,540
Tak som vás požiadať o n-tého riadku
koľko hashes budeme mať

99
00:05:31,540 --> 00:05:33,120
a koľko miest?

100
00:05:33,120 --> 00:05:37,000
Takže je to len na vás prísť na to,
Vzorec pre reprezentáciu, koľko hashe

101
00:05:37,000 --> 00:05:42,020
a koľko priestory sú potrebné pre
n-tej riadky, ak máte nejakú výšku.

102
00:05:42,020 --> 00:05:46,060
>> Teraz, keď ste prísť na to,
dávať pozor, ako ste indexovanie.

103
00:05:46,060 --> 00:05:49,170
Čo tým chcem povedať je to, že
v každodennom živote nás všetkých

104
00:05:49,170 --> 00:05:51,540
začať počítať, zvyčajne o 1.

105
00:05:51,540 --> 00:05:55,950
Ale v CS50 a vo vede o počítačoch
Všeobecne platí, že sú indexované 0.

106
00:05:55,950 --> 00:06:00,620
Takže prvý riadok bude
n 0, na rozdiel od 1.

107
00:06:00,620 --> 00:06:04,550
Dávajte pozor na to, keď ste
sa snažia zistiť svoju masku.

108
00:06:04,550 --> 00:06:07,570
Takže teraz sa vráťme k tomu, ako
budeme kresliť našej pyramídy.

109
00:06:07,570 --> 00:06:12,300
Pre každý riadok, budeme chcieť
vytlačiť medzery, vytlačte hodnoty hash,

110
00:06:12,300 --> 00:06:14,050
a vytlačiť nový riadok.

111
00:06:14,050 --> 00:06:19,160
Náznak je tu
Slovo "pre" každý riadok.

112
00:06:19,160 --> 00:06:21,470
V C, máme konštrukt
volal pre sláčiky,

113
00:06:21,470 --> 00:06:25,250
ktorý sa skladá z
inicializácia, podmienka, aktualizácie,

114
00:06:25,250 --> 00:06:26,790
a telo slučky.

115
00:06:26,790 --> 00:06:31,360
>> Povedzme, že som chcel povedať, ahoj
world, 50 krát, môj pre sláčiky

116
00:06:31,360 --> 00:06:32,880
bude vyzerať nejako takto.

117
00:06:32,880 --> 00:06:35,480
Aj inicializovať moje číslo do 0 ° C.

118
00:06:35,480 --> 00:06:38,230
Podmienkou je, že je menšia ako 50 ° C.

119
00:06:38,230 --> 00:06:42,350
A potom moja aktualizácia je jednoducho
zvyšovanie Aj po druhom zakaždým.

120
00:06:42,350 --> 00:06:45,140
Môžeme tiež použiť pre slučiek
iterovat nad vecou.

121
00:06:45,140 --> 00:06:47,820
Všimnite si, ako my nie
pevný kódované číslo,

122
00:06:47,820 --> 00:06:51,820
ale umiestnil premennú
Výška miesto do stavu.

123
00:06:51,820 --> 00:06:56,420
Takže to, čo tu robím je, že som iterácie
cez každý rad pyramídy.

124
00:06:56,420 --> 00:07:00,160
Môžem urobiť niečo pre každého
riadok vnútri tela môjho slučky.

125
00:07:00,160 --> 00:07:02,350
>> Čo budeme robiť dovnútra
telo slučky?

126
00:07:02,350 --> 00:07:07,120
No, ako sme už uviedli, sme tlač
priestory a my sme tlače hashe

127
00:07:07,120 --> 00:07:09,480
a my sme tlače nový riadok.

128
00:07:09,480 --> 00:07:11,950
Takže moje vonkajšie pre sláčiky
bude vyzerať takto.

129
00:07:11,950 --> 00:07:15,070
Aj iteráciu cez každý riadok
pyramídy, použitím

130
00:07:15,070 --> 00:07:18,890
v tomto prípade, ako je premenná výška
ktorý ukladá výšku pyramídy.

131
00:07:18,890 --> 00:07:22,870
Vnútri tela tej slučky, som
bude opakovane tlačiť medzery, tlač

132
00:07:22,870 --> 00:07:26,730
hodnoty hash opakovane,
a vytlačiť nový riadok.

133
00:07:26,730 --> 00:07:31,010
>> Takže teraz, s použitím všetkých pojmov, ktoré
Hovoril som o tejto priechodných,

134
00:07:31,010 --> 00:07:35,210
by ste mali byť schopní prinúti
Používateľ pre vstup, potvrdiť, že vstup,

135
00:07:35,210 --> 00:07:37,370
a potom nakresliť polovicu pyramídy.

136
00:07:37,370 --> 00:07:41,510
>> Volám sa Zamyla, a to je CS50.

137
00:07:41,510 --> 00:07:43,167

