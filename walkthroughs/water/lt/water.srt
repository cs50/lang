1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
GARSIAKALBIS 1: Pakalbėkime apie vandens.

3
00:00:01,960 --> 00:00:07,280
Be šią problemą, prašome, kad vartotojas galėtų pasakyti
mums, kaip ilgai minutėmis jų dušas buvo

4
00:00:07,280 --> 00:00:11,040
ir tada mes Apskaičiuojant lygiavertį
skaičius butelių vandens

5
00:00:11,040 --> 00:00:12,970
kad naudojami jų dušas.

6
00:00:12,970 --> 00:00:16,379
>> Taigi, kas yra mūsų iki Darbas
šią problemą?

7
00:00:16,379 --> 00:00:20,050
Pirma, mes ketiname norite
kad tai paskatins ir tada patvirtinti

8
00:00:20,050 --> 00:00:22,100
įėjimo, kad vartotojas suteikia mums.

9
00:00:22,100 --> 00:00:24,790
Kai mes užtikriname, kad mes
turi galiojantį naudotojo įvesties,

10
00:00:24,790 --> 00:00:28,230
mes ketiname apskaičiuoti
lygiavertis numeris butelių vandens

11
00:00:28,230 --> 00:00:30,770
, kad vartotojo turėjo per
jų dušas, ir tada mes

12
00:00:30,770 --> 00:00:33,720
ketina pasakyti jiems
spausdinti šį skaičių.

13
00:00:33,720 --> 00:00:37,230
>> Taigi leiskite spręsti pirmasis mūsų
užduotis, paskatino ir patvirtinti

14
00:00:37,230 --> 00:00:38,550
, naudotojo įvestis.

15
00:00:38,550 --> 00:00:40,910
Dėl to mes parašiau
funkcija skambinote

16
00:00:40,910 --> 00:00:43,950
get_int įsikūręs CS50 bibliotekoje.

17
00:00:43,950 --> 00:00:48,710
get_int užtikrina, kad vartotojas įėjimai
sveikasis skaičius, todėl jokių teigiamų skaičių,

18
00:00:48,710 --> 00:00:51,700
neigiami skaičiai, arba
nulis yra patenkinti visi.

19
00:00:51,700 --> 00:00:55,900
Tačiau jei vartotojas įveda nieko kita,
taip bet raidžių arba skaičių kombinacija

20
00:00:55,900 --> 00:00:59,710
arba dešimtainiais numeriai, tada
vartotojas bus raginami bandykite dar kartą

21
00:00:59,710 --> 00:01:04,319
ir funkcija nebus priimti nieko
tol, kol vartotojas suteikia jiems sveikasis skaičius.

22
00:01:04,319 --> 00:01:06,410
>> Taigi, kaip mes naudojame get_int?

23
00:01:06,410 --> 00:01:10,830
Jei atidarote savo darbo sritį ir
sukurti failą pavadinimu integer.c tegul

24
00:01:10,830 --> 00:01:12,110
įrašykite šiuos.

25
00:01:12,110 --> 00:01:14,760
Grotelėmis yra cs50.h.

26
00:01:14,760 --> 00:01:18,480
Tai būtina, nes get_int
yra CS50 biblioteka funkcija,

27
00:01:18,480 --> 00:01:21,890
todėl mes turime grotelėmis yra
jo deklaracija, kad

28
00:01:21,890 --> 00:01:23,370
naudoti funkciją.

29
00:01:23,370 --> 00:01:26,570
Ir tada mano pagrindinis
veikti aš tiesiog vyksta

30
00:01:26,570 --> 00:01:29,560
tiesiog paskambinkite funkcija get_int.

31
00:01:29,560 --> 00:01:31,750
>> Taigi leiskite veikti tai ir pamatyti, kaip ji veikia.

32
00:01:31,750 --> 00:01:35,092
Aš jau parengė ją, tad
tiesiog eiti į priekį ir paleisti šią programą,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Čia aš turiu greitai ir
čia, kur aš įvesties vertė.

35
00:01:39,880 --> 00:01:44,880
Pasakyti, kad aš įdėti tik kai sveikasis skaičius
50, programa excepts ir atsiteisti

36
00:01:44,880 --> 00:01:45,960
ir tai, kad.

37
00:01:45,960 --> 00:01:49,350
>> Bet pasakyti, kad aš paleisti jį dar kartą ir
Aš įvesties kažkas.

38
00:01:49,350 --> 00:01:51,350
Galbūt, Hello world.

39
00:01:51,350 --> 00:01:55,660
Tai ne sveikasis skaičius, todėl
Programa bus greitai man bandykite dar kartą.

40
00:01:55,660 --> 00:01:59,160
Pabandykime vėl su
gal dešimtainis šį kartą.

41
00:01:59,160 --> 00:02:03,450
0,5, dar kartą, o ne sveikas skaičius taip
Programa nebus priimti jį

42
00:02:03,450 --> 00:02:05,290
ir ji jums pasakys man, kad bandykite dar kartą.

43
00:02:05,290 --> 00:02:07,070
Taigi leiskite suteikti jai kitą numerį.

44
00:02:07,070 --> 00:02:09,830
Programa priima jį,
meta, ir mes padaryti.

45
00:02:09,830 --> 00:02:13,520
>> Taigi dabar mes turime funkciją
kad leidžia mums ir užtikrina,

46
00:02:13,520 --> 00:02:16,790
, kad vartotojo įėjimai
sveikas, bet kaip mes galime

47
00:02:16,790 --> 00:02:20,330
realiai sekti
sveikas įvestas vartotojas?

48
00:02:20,330 --> 00:02:25,260
Na, visi mes padaryti, tai parduotuvė
ši vertė į kintamąjį, sako n.

49
00:02:25,260 --> 00:02:30,580
Taigi, jei aš paskelbti sveikasis skaičius n,
ir nustatyti, kad vertę get_int,

50
00:02:30,580 --> 00:02:34,700
tai n bus tada laikyti kokia
Vertiname vartotojas įvedęs.

51
00:02:34,700 --> 00:02:38,620
>> Gerai, kad dabar mes užtikrinti, kad
vartotojas duos mums sveikasis skaičius

52
00:02:38,620 --> 00:02:42,550
ir mes žinome, kaip sekti
iš sveikojo skaičiaus, tačiau nepamirškite,

53
00:02:42,550 --> 00:02:45,610
sveikieji skaičiai yra teigiamą ir neigiamą.

54
00:02:45,610 --> 00:02:49,110
Taigi nėra prasmės
šio problemos kontekste

55
00:02:49,110 --> 00:02:53,570
kad vartotojas priima dušas
nuo pasakyti neigiamą 12 minučių.

56
00:02:53,570 --> 00:02:59,310
Taigi, mes turime įsitikinti, kad vartotojas
iš tikrųjų mums suteikia teigiamas sveikasis skaičius.

57
00:02:59,310 --> 00:03:02,130
Dabar mes neturime tik
vieno funkcija, kad

58
00:03:02,130 --> 00:03:04,620
todėl mes ketiname turėti
sukurti, kad sau.

59
00:03:04,620 --> 00:03:07,190
>> Taigi norime nuolat
paskatinti vartotoją

60
00:03:07,190 --> 00:03:09,730
kol jie suteikia mums teigiamas sveikasis skaičius.

61
00:03:09,730 --> 00:03:14,300
Jei darau kažką nuolat tada
tai panašu į kilpą, pakartojimas.

62
00:03:14,300 --> 00:03:19,130
Taip, kad vienas iš konstruoja, kad mes naudoti
C įgyvendinti pasikartojimo kilpos

63
00:03:19,130 --> 00:03:20,410
yra while cikle.

64
00:03:20,410 --> 00:03:23,020
Taigi, o kilpa, kaip
Čia parodyta, atliks

65
00:03:23,020 --> 00:03:27,030
nepriklausomai yra kilpos kūno kaip
tol, kol atsižvelgiant būklės įvertina

66
00:03:27,030 --> 00:03:27,900
true.

67
00:03:27,900 --> 00:03:30,640
Kaip tik ši sąlyga
įvertina false, tada

68
00:03:30,640 --> 00:03:34,830
Programa vyks kokia
ateina po to, kai į kilpą kūno.

69
00:03:34,830 --> 00:03:39,400
>> Taigi, nors kilpos ketinate
tikrai naudinga CS50.

70
00:03:39,400 --> 00:03:42,590
Bet šiuo konkrečiu
atveju, mes žinome, kad mes

71
00:03:42,590 --> 00:03:48,140
ketina bent paskatinti vartotoją
vieną kartą ir tada tik kilpa, jei reikia.

72
00:03:48,140 --> 00:03:51,080
Taigi čia mes ateiti į
ypatingą konstruktas ir tai

73
00:03:51,080 --> 00:03:55,020
labai panašus į laiką
kilpa vadinama do-while cikle.

74
00:03:55,020 --> 00:03:58,840
>> Taigi do-while cikle vykdo
organas linijos ne mažiau kaip vieną kartą

75
00:03:58,840 --> 00:04:01,750
ir tada ji patikrina,
ar jis turėtų vykdyti,

76
00:04:01,750 --> 00:04:05,310
o ne į while cikle,
kuri bus patikrinti būklę

77
00:04:05,310 --> 00:04:07,200
ir atlikite kūną.

78
00:04:07,200 --> 00:04:11,880
Taigi do-while cikle, ką mes galime
padaryti, tai raginimas vartotojui už sveikąjį skaičių

79
00:04:11,880 --> 00:04:14,450
ir tada patikrinkite, ar tai negalioja, ar ne.

80
00:04:14,450 --> 00:04:18,130
Jei tai negalioja, tada mes
pakartokite šį procesą prašydamas vartotoją

81
00:04:18,130 --> 00:04:22,290
mums dar vieną sveikąjį skaičių, o tada
tik tada, kai, kad sveikas, yra galiojanti,

82
00:04:22,290 --> 00:04:25,060
mes ir toliau
kokia ateina vėliau.

83
00:04:25,060 --> 00:04:28,030
>> Dabar jūs pastebėsite, kad
deklaracija sveikasis skaičius n

84
00:04:28,030 --> 00:04:31,670
yra šiek tiek kitoks, ką mes
padarė prieš ankstesniame pavyzdyje

85
00:04:31,670 --> 00:04:33,640
ir tai yra dėl to taikymo sritį.

86
00:04:33,640 --> 00:04:37,920
Jei būtume paskelbė sveikasis skaičius n viduje
apie do-while cikle kūno,

87
00:04:37,920 --> 00:04:42,640
tada mes negalėtų prieiti prie
kad n vertė ne iš tų Curly

88
00:04:42,640 --> 00:04:45,050
petnešos nurodant kilpą kūną.

89
00:04:45,050 --> 00:04:51,080
Bet mes iš tiesų norime prieiti prie
vertė n vėliau mūsų programoje.

90
00:04:51,080 --> 00:04:55,730
>> Gerai, kad dabar pakalbėkime apie
ką ši sąlyga turėtų būti.

91
00:04:55,730 --> 00:05:00,400
Mes norime, kad tik reprompt
vartotojas tol, kol n yra negaliojantis.

92
00:05:00,400 --> 00:05:04,640
Taigi galvoti, ką invalidu
sveikas vertė atrodys

93
00:05:04,640 --> 00:05:08,060
ir tada sukurti Būlio
išraiška išreikšti tai.

94
00:05:08,060 --> 00:05:13,070
>> Mes beveik baigtas mūsų subtask
skatinus ir patvirtinti vartotojo įvestį.

95
00:05:13,070 --> 00:05:16,010
Taigi padarykime tai šiek tiek
tiek daugiau patogi

96
00:05:16,010 --> 00:05:18,390
ir suteikti vartotojui šiek tiek
šiek tiek daugiau informacijos

97
00:05:18,390 --> 00:05:20,510
ką mes paskatino juos.

98
00:05:20,510 --> 00:05:24,500
Taigi leiskite raginimas vartotojui, vienam
spec, su styginių minučių.

99
00:05:24,500 --> 00:05:28,935
Taigi, naudojant savo printf pareiškimus, padaryti
Įsitikinkite, kad jūs rungtynės tai tiksliai.

100
00:05:28,935 --> 00:05:30,230
>> Gerai.

101
00:05:30,230 --> 00:05:33,840
Taigi dabar mes turime galiojančią vartotoją
įėjimas, teigiamas sveikasis skaičius

102
00:05:33,840 --> 00:05:37,400
Vertė kiek minučių
jie praleido po dušu.

103
00:05:37,400 --> 00:05:41,300
Taigi, kas toliau yra apskaičiuoti
ekvivalentinis skaičius butelius.

104
00:05:41,300 --> 00:05:45,250
Ką mes ketiname padaryti čia gali
būti labai akivaizdu jums ne pirmas,

105
00:05:45,250 --> 00:05:46,640
ir kad viskas OK.

106
00:05:46,640 --> 00:05:49,320
Ką mes norime padaryti, tai mes
norite pradėti praktikuojančių

107
00:05:49,320 --> 00:05:53,810
iš aptikti modelius idėja ir
kurti formules problemos.

108
00:05:53,810 --> 00:05:57,200
>> Taigi mes papasakojo vienam spec
kad viena minutė duše

109
00:05:57,200 --> 00:05:59,960
yra lygi apie
12 butelių vandens.

110
00:05:59,960 --> 00:06:03,020
Taigi dvi minutes būtų
lygiavertė 24

111
00:06:03,020 --> 00:06:05,850
ir penkias minutes būtų
būti lygi 60.

112
00:06:05,850 --> 00:06:08,390
Taigi dabar, jei jūs manote
jūs turite jį, tada tegul

113
00:06:08,390 --> 00:06:10,390
pamatyti, jei jūs galite sugalvoti
su modelio ar formulę

114
00:06:10,390 --> 00:06:14,990
išreikšti, jei mes pasakyti, n
minučių Kiek butelių vandens

115
00:06:14,990 --> 00:06:17,930
būtų, kad būtų išreikštas n?

116
00:06:17,930 --> 00:06:20,680
>> Vėl, nors tai
gali būti paprasta per pirmąjį,

117
00:06:20,680 --> 00:06:23,240
vėliau, kai mes gauname
daugiau sudėtingų problemų

118
00:06:23,240 --> 00:06:26,360
mes ketiname norite patekti į
, nustatymo praktika

119
00:06:26,360 --> 00:06:30,120
modeliai ir besivystančios formulės
išsiaiškinti šiuos dalykus.

120
00:06:30,120 --> 00:06:33,450
>> C turite prieigą prie
standartiniai aritmetinės operacijos,

121
00:06:33,450 --> 00:06:36,520
Be to, atimtis,
daugyba ir dalyba.

122
00:06:36,520 --> 00:06:38,420
Taigi, aš paliksiu jį
dabar išsiaiškinti

123
00:06:38,420 --> 00:06:41,300
kaip išreikšti
lygiavertis numeris butelių

124
00:06:41,300 --> 00:06:43,990
kad vartotojo sunaudotos
per jų dušas.

125
00:06:43,990 --> 00:06:45,700
>> Gerai, mes beveik jau padaryta.

126
00:06:45,700 --> 00:06:50,650
Mes paskatino už jų indėlį vartotoją,
mes užtikrinti, kad tai galioja įėjimas,

127
00:06:50,650 --> 00:06:53,330
ir tada mes suprato, kaip
Apskaičiuojant lygiavertį

128
00:06:53,330 --> 00:06:55,480
skaičius butelius, kad jie suvartotų.

129
00:06:55,480 --> 00:06:59,430
Taigi paskutinis dalykas, reikia padaryti, tai produkcija
ekvivalentinis skaičius butelius

130
00:06:59,430 --> 00:07:02,410
ir tikiuosi, paskatins
juos išsaugoti šiek tiek vandens.

131
00:07:02,410 --> 00:07:06,270
>> vertę Outputting bus
būti printf.

132
00:07:06,270 --> 00:07:09,720
Jei aš norėjau pasakyti, kad aš
turi tris leidžiama, pavyzdžiui,

133
00:07:09,720 --> 00:07:13,090
Galiu naudoti printf
kad atrodo kažkas panašaus į tai.

134
00:07:13,090 --> 00:07:15,880
Turiu tris augintiniai ir nauja
linija gražus formatavimą.

135
00:07:15,880 --> 00:07:17,880
>> Dabar mes nenorime
tiesiog sunku kodas dalykai.

136
00:07:17,880 --> 00:07:20,740
Pasakykite skaičių mano
augintiniai laikui bėgant kinta.

137
00:07:20,740 --> 00:07:25,080
Tada aš ruošiuosi pasinaudoti
pamainymai mano printf.

138
00:07:25,080 --> 00:07:27,350
Taigi čia mano numeris yra sveikasis skaičius.

139
00:07:27,350 --> 00:07:31,480
Taigi, aš ruošiuosi padaryti vietos rezervavimo ženklą
už sveikasis skaičius, naudojant% i.

140
00:07:31,480 --> 00:07:33,930
Aš ruošiuosi parašyti eilutę,
ir tada po to, kai eilutę

141
00:07:33,930 --> 00:07:38,000
Rašau kablelį ir tada
kintamasis, noriu spausdinti.

142
00:07:38,000 --> 00:07:42,730
Taigi ši vertė bus spausdinamas
vietoj to imituojančiu,% i.

143
00:07:42,730 --> 00:07:47,630
>> Jūs galite naudoti pamainymų, kaip
Na, plūdės, kurių% f.

144
00:07:47,630 --> 00:07:50,420
Jūs taip pat gali turėti keletą
rezervuotos vietos eilutę.

145
00:07:50,420 --> 00:07:53,950
Pavyzdžiui, jei turiu tam tikrą skaičių
šunis ir kai kurių kačių skaičių,

146
00:07:53,950 --> 00:07:59,210
Aš įdėti du pamainymų čia ir tada
mano du kintamieji atitinkamos tvarka.

147
00:07:59,210 --> 00:08:03,130
>> Taigi dabar, kad mes žinome, kaip spausdinti
saugomi kintamųjų vertes,

148
00:08:03,130 --> 00:08:06,030
labai paskutinis dalykas
padaryti, tai užtikrinti, kad mes

149
00:08:06,030 --> 00:08:10,920
spausdinti vertę tikslią formatu
nurodyta specifikacijoje.

150
00:08:10,920 --> 00:08:14,990
Su tuo, mes paskatino
vartotojas ir patvirtinti jų indėlį.

151
00:08:14,990 --> 00:08:17,920
Mes tada apskaičiuojamas ekvivalentas
skaičius butelių vandens

152
00:08:17,920 --> 00:08:22,100
kad jie suvartoja per savo dušu,
ir mes išvesti šią vertę į juos.

153
00:08:22,100 --> 00:08:24,440
Ir taip, mes baigė vandens.

154
00:08:24,440 --> 00:08:28,730
>> Mano vardas yra [? Zamila,?]
ir tai yra CS50.

155
00:08:28,730 --> 00:08:29,909

