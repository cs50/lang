1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
GLAS 1: Razgovarajmo o vodi.

3
00:00:01,960 --> 00:00:07,280
U ovom problemu, možemo tražiti od korisnika da kažem
nas koliko u nekoliko minuta njihova tuš bio

4
00:00:07,280 --> 00:00:11,040
a onda smo izračunati ekvivalent
Broj boca vode

5
00:00:11,040 --> 00:00:12,970
da se koristi njihov tuš.

6
00:00:12,970 --> 00:00:16,379
>> Zato što su naši do-do-a
za ovaj problem?

7
00:00:16,379 --> 00:00:20,050
Prvo, mi smo idući u ištanje
potaknuti, a zatim provjeriti

8
00:00:20,050 --> 00:00:22,100
ulazni koje korisnik nam daje.

9
00:00:22,100 --> 00:00:24,790
Nakon što smo osigurali da
posjedovati valjane korisničkog unosa,

10
00:00:24,790 --> 00:00:28,230
idemo izračunati
ekvivalent broj boca vode

11
00:00:28,230 --> 00:00:30,770
da je korisnik imao za vrijeme
njihov tuš, a onda smo

12
00:00:30,770 --> 00:00:33,720
im reći koju
ispis taj broj.

13
00:00:33,720 --> 00:00:37,230
>> Tako ćemo se borila naša prva
zadatak, što je izazvalo i vrednovanje

14
00:00:37,230 --> 00:00:38,550
korisnik ulaz.

15
00:00:38,550 --> 00:00:40,910
Za to smo napisan
Funkcija za vas zove

16
00:00:40,910 --> 00:00:43,950
get_int nalazi u CS50 knjižnici.

17
00:00:43,950 --> 00:00:48,710
get_int osigurava da korisnik ulaza
cijeli broj, tako da bilo koje pozitivne brojeve,

18
00:00:48,710 --> 00:00:51,700
negativni brojevi, ili
nula su svi prihvatili.

19
00:00:51,700 --> 00:00:55,900
No, ako korisnik unese ništa drugo,
tako da bilo koja kombinacija slova i brojeva

20
00:00:55,900 --> 00:00:59,710
ili decimalni brojevi, tada je
Korisnik će biti zatraženo da ponovno pokušamo

21
00:00:59,710 --> 00:01:04,319
a funkcija neće prihvatiti ništa
sve dok korisnik ne daje im prirodan broj.

22
00:01:04,319 --> 00:01:06,410
>> Dakle, kako ćemo koristiti get_int?

23
00:01:06,410 --> 00:01:10,830
Ako otvorite svoj radni prostor i
stvoriti datoteku pod nazivom integer.c neka je

24
00:01:10,830 --> 00:01:12,110
upišite sljedeće.

25
00:01:12,110 --> 00:01:14,760
Hashtag uključuju cs50.h.

26
00:01:14,760 --> 00:01:18,480
To je potrebno jer get_int
je cs50 biblioteka funkcija,

27
00:01:18,480 --> 00:01:21,890
tako da moramo hashtag uključiti
njegova izjava kako

28
00:01:21,890 --> 00:01:23,370
upotrijebite funkciju.

29
00:01:23,370 --> 00:01:26,570
A onda je u moj glavni
funkcionirati Samo ću

30
00:01:26,570 --> 00:01:29,560
jednostavno pozovite funkciju get_int.

31
00:01:29,560 --> 00:01:31,750
>> Tako ćemo pokrenuti to i vidjeti kako se to radi.

32
00:01:31,750 --> 00:01:35,092
Već sam ga sastavio, pa neka je
samo ići naprijed i pokrenuti ovaj program,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Ovdje imam brz i
evo gdje ulazni sam vrijednost.

35
00:01:39,880 --> 00:01:44,880
Recimo ja stavio u samo nekim cijeli broj,
50, program izuzev i pročistiti račune

36
00:01:44,880 --> 00:01:45,960
i to je to.

37
00:01:45,960 --> 00:01:49,350
>> Ali reći da sam ga ponovo pokrenuti i
Unio sam nešto drugo.

38
00:01:49,350 --> 00:01:51,350
Možda, Hello World.

39
00:01:51,350 --> 00:01:55,660
To nije cijeli broj tako da je
Program će me potaknuti da ponovno pokušamo.

40
00:01:55,660 --> 00:01:59,160
Pokušajmo ponovno
možda decimale ovaj put.

41
00:01:59,160 --> 00:02:03,450
0.5, opet, nije cijeli broj, tako
program neće prihvatiti

42
00:02:03,450 --> 00:02:05,290
i to će mi reći za ponovni pokušaj.

43
00:02:05,290 --> 00:02:07,070
Tako ćemo mu dati drugi broj.

44
00:02:07,070 --> 00:02:09,830
Program to prihvati,
zatvara, a mi smo učinili.

45
00:02:09,830 --> 00:02:13,520
>> Tako sada imamo funkciju
da nas i osigurava omogućuje

46
00:02:13,520 --> 00:02:16,790
da korisnik unese
broj, ali kako možemo

47
00:02:16,790 --> 00:02:20,330
zapravo pratiti
broj unesene od strane korisnika?

48
00:02:20,330 --> 00:02:25,260
Pa, sve ćemo učiniti je dućan
ova vrijednost u varijabli, recimo n.

49
00:02:25,260 --> 00:02:30,580
Dakle, ako sam proglasiti prirodni broj N,
i ja postaviti tu vrijednost na get_int,

50
00:02:30,580 --> 00:02:34,700
onda je n tada će pohraniti sve što
vrijednost korisniku unesenu.

51
00:02:34,700 --> 00:02:38,620
>> U redu, tako da sada smo se pobrinuli da
korisnik će nam dati prirodni broj

52
00:02:38,620 --> 00:02:42,550
a znamo kako pratiti
od cijelog broja, ali zapamtite,

53
00:02:42,550 --> 00:02:45,610
cijeli brojevi su i pozitivne i negativne.

54
00:02:45,610 --> 00:02:49,110
Tako da nema stvarno smisla
u kontekstu ovog problema

55
00:02:49,110 --> 00:02:53,570
da korisnik ima tuš
od reci negativnih 12 minuta.

56
00:02:53,570 --> 00:02:59,310
Dakle, moramo biti sigurni da je korisnik
zapravo nam daje pozitivni cijeli broj.

57
00:02:59,310 --> 00:03:02,130
Sad nemamo samo
jedna funkcija za to,

58
00:03:02,130 --> 00:03:04,620
tako da ćemo imati
napraviti da nama samima.

59
00:03:04,620 --> 00:03:07,190
>> Na taj način želimo stalno
dojaviti korisniku

60
00:03:07,190 --> 00:03:09,730
dok su nam dati pozitivan cijeli broj.

61
00:03:09,730 --> 00:03:14,300
Ako radim nešto stalno onda
to je srodan s petljom, ponavljanja.

62
00:03:14,300 --> 00:03:19,130
Dakle, jedan od konstrukata koje koristimo
uc provoditi ponavljanje i petlje

63
00:03:19,130 --> 00:03:20,410
je while petlja.

64
00:03:20,410 --> 00:03:23,020
Dakle, dok se petlja, kao
što je ovdje prikazano, izvršiti će se

65
00:03:23,020 --> 00:03:27,030
ono što je u tijelu petlju
sve dok se određeno stanje ocjenjuje

66
00:03:27,030 --> 00:03:27,900
da istina.

67
00:03:27,900 --> 00:03:30,640
Čim taj uvjet
vrijednost false, a zatim

68
00:03:30,640 --> 00:03:34,830
Program će se nastaviti na ono
dolazi nakon tijelu petlje.

69
00:03:34,830 --> 00:03:39,400
>> Dakle, dok su petlje ide
biti jako korisno u CS50.

70
00:03:39,400 --> 00:03:42,590
No, u ovaj
slučaj, znamo da smo

71
00:03:42,590 --> 00:03:48,140
će zatražiti od korisnika najmanje
jednom i onda samo petlje ako je to potrebno.

72
00:03:48,140 --> 00:03:51,080
Dakle, ovdje smo došli do
Posebna konstrukcija i to je

73
00:03:51,080 --> 00:03:55,020
Vrlo slično, dok
Petlja se zove do-while petlja.

74
00:03:55,020 --> 00:03:58,840
>> Dakle, do-while petlja izvršava
Tijelo petlje barem jednom

75
00:03:58,840 --> 00:04:01,750
a onda provjerava
da li treba izvršiti,

76
00:04:01,750 --> 00:04:05,310
za razliku od while petlji
koji će provjeriti stanje

77
00:04:05,310 --> 00:04:07,200
a zatim izvršiti tijelo.

78
00:04:07,200 --> 00:04:11,880
Tako je u do-while petlje što bismo mogli
učiniti je tražiti od korisnika cijeli broj,

79
00:04:11,880 --> 00:04:14,450
a zatim provjerite je li valjan ili ne.

80
00:04:14,450 --> 00:04:18,130
Ako je važeća, mi ćemo
ponoviti postupak tražeći od korisnika

81
00:04:18,130 --> 00:04:22,290
da nam da još cijeli broj, a zatim
samo kada je to broj vrijedi,

82
00:04:22,290 --> 00:04:25,060
mi ćemo i dalje
ono što dolazi poslije.

83
00:04:25,060 --> 00:04:28,030
>> Sada ćete primijetiti da je
izjava prirodnog broja n

84
00:04:28,030 --> 00:04:31,670
je malo razlikuje od onoga što smo
radio prije u prethodnom primjeru

85
00:04:31,670 --> 00:04:33,640
a to je zbog opsega.

86
00:04:33,640 --> 00:04:37,920
Da smo proglasili broj N iznutra
od tijela do-while petlje,

87
00:04:37,920 --> 00:04:42,640
onda ne bismo bili u mogućnosti pristupiti
da vrijednost n izvan tih kovrčava

88
00:04:42,640 --> 00:04:45,050
aparatić ukazuje tijelo petlje.

89
00:04:45,050 --> 00:04:51,080
No, mi u stvari žele pristupiti
vrijednost n kasnije u našem programu.

90
00:04:51,080 --> 00:04:55,730
>> U redu, tako da sada pričajmo o
što je ovaj uvjet bi trebao biti.

91
00:04:55,730 --> 00:05:00,400
Želimo samo reprompt
Korisnik tako dugo dok n nije valjan.

92
00:05:00,400 --> 00:05:04,640
Dakle, mislite u sebi ono što je invalid
cjelobrojna vrijednost će izgledati

93
00:05:04,640 --> 00:05:08,060
a zatim izraditi logičku
Izraz izraziti to.

94
00:05:08,060 --> 00:05:13,070
>> Skoro smo gotovi s našim zadatka
od navelo i potvrđivanja korisničkog unosa.

95
00:05:13,070 --> 00:05:16,010
Tako ćemo to malo napraviti
malo više user friendly

96
00:05:16,010 --> 00:05:18,390
i dati upute za malo
malo više informacija

97
00:05:18,390 --> 00:05:20,510
onoga što smo ih pitajući za.

98
00:05:20,510 --> 00:05:24,500
Tako ćemo zatražiti od korisnika, po
spec, s gudačkim minuta.

99
00:05:24,500 --> 00:05:28,935
Dakle, pomoću printf izjave, napraviti
provjerite da li odgovaraju upravo to.

100
00:05:28,935 --> 00:05:30,230
>> U redu.

101
00:05:30,230 --> 00:05:33,840
Tako sada imamo važeći korisnički
ulaz, pozitivni cijeli broj

102
00:05:33,840 --> 00:05:37,400
Vrijednost za koliko minuta
su proveli u tuš.

103
00:05:37,400 --> 00:05:41,300
Što je sljedeće je izračunati
ekvivalent broj boca.

104
00:05:41,300 --> 00:05:45,250
Ono što ćemo učiniti ovdje moglo
biti vrlo očito da vas na početku,

105
00:05:45,250 --> 00:05:46,640
i to je u redu.

106
00:05:46,640 --> 00:05:49,320
Ono što želimo učiniti je da
želite početi prakticirati

107
00:05:49,320 --> 00:05:53,810
ideja o otkrivanju uzoraka i
razvija formule za taj problem.

108
00:05:53,810 --> 00:05:57,200
>> Dakle, mi smo rekli po spec
da je u jednom trenutku u tuš

109
00:05:57,200 --> 00:05:59,960
je otprilike
12 boce vode.

110
00:05:59,960 --> 00:06:03,020
Pa onda dvije minute bi
biti jednaka 24,

111
00:06:03,020 --> 00:06:05,850
i pet minuta bi
biti jednaka 60.

112
00:06:05,850 --> 00:06:08,390
Pa sad, ako misliš
ste je dobio, a zatim-a neka

113
00:06:08,390 --> 00:06:10,390
vidjeti ako možete doći do
s uzorkom ili formuli

114
00:06:10,390 --> 00:06:14,990
izraziti, ako smo reći, n
minuta, koliko boce vode

115
00:06:14,990 --> 00:06:17,930
bi da se izražava u smislu n?

116
00:06:17,930 --> 00:06:20,680
>> Opet, iako je to
može biti jednostavno na prvi pogled,

117
00:06:20,680 --> 00:06:23,240
kasnije, kada dođemo u
složeniji problemi

118
00:06:23,240 --> 00:06:26,360
ćemo žele ući
praksa identifikacije

119
00:06:26,360 --> 00:06:30,120
uzoraka i razvoju formule
shvatiti ove stvari.

120
00:06:30,120 --> 00:06:33,450
>> U st imate pristup
standardne aritmetičke operacije,

121
00:06:33,450 --> 00:06:36,520
zbrajanje, oduzimanje,
množenje i dijeljenje.

122
00:06:36,520 --> 00:06:38,420
Dakle, ja ću to prepustiti
sada shvatiti

123
00:06:38,420 --> 00:06:41,300
Kako izraziti
ekvivalent broj boca

124
00:06:41,300 --> 00:06:43,990
da korisnik potroši
tijekom tušem.

125
00:06:43,990 --> 00:06:45,700
>> U redu, skoro smo gotovi.

126
00:06:45,700 --> 00:06:50,650
Mi smo to zatraži korisniku za ulaz,
osigurali smo da je valjana ulaz,

127
00:06:50,650 --> 00:06:53,330
a onda smo shvatili kako
izračunati ekvivalent

128
00:06:53,330 --> 00:06:55,480
broj boca koje su konzumirali.

129
00:06:55,480 --> 00:06:59,430
Dakle, posljednja stvar za učiniti je da izlaz
ekvivalent broj boca

130
00:06:59,430 --> 00:07:02,410
i nadamo se potaknuti
ih sačuvati vodu.

131
00:07:02,410 --> 00:07:06,270
>> Outputting vrijednost će
biti printf priopćenju.

132
00:07:06,270 --> 00:07:09,720
Ako sam vam htio reći da sam
tri ljubimci, na primjer,

133
00:07:09,720 --> 00:07:13,090
Možda ću koristiti printf izjavu
koji izgleda ovako.

134
00:07:13,090 --> 00:07:15,880
Imam tri kućne ljubimce, a novi
linija za lijepo oblikovanje.

135
00:07:15,880 --> 00:07:17,880
>> Sada mi ne želimo da se
jednostavno teško kod stvari.

136
00:07:17,880 --> 00:07:20,740
Recimo broj mog
kućni ljubimci mijenja tijekom vremena.

137
00:07:20,740 --> 00:07:25,080
Onda ću iskoristiti
rezervirana mjesta u mom printf gubitka.

138
00:07:25,080 --> 00:07:27,350
Dakle, ovdje je moj broj je cijeli broj.

139
00:07:27,350 --> 00:07:31,480
Tako ću napraviti rezervirano mjesto
za cijeli broj pomoću% i.

140
00:07:31,480 --> 00:07:33,930
Idem napisati niz,
i onda nakon niza

141
00:07:33,930 --> 00:07:38,000
Pišem zarez, pa tek onda
varijabla koja želim ispisati.

142
00:07:38,000 --> 00:07:42,730
Tako da će se vrijednost otisnuta
umjesto toga rezerviranog mjesta,% i.

143
00:07:42,730 --> 00:07:47,630
>> Možete koristiti rezervirana mjesta, kao što je
Pa, za kola sa f%.

144
00:07:47,630 --> 00:07:50,420
Također možete imati višestruke
rezervirana mjesta u nizu.

145
00:07:50,420 --> 00:07:53,950
Na primjer, ako imam neki broj
pasa i nekim brojem mačaka,

146
00:07:53,950 --> 00:07:59,210
stavio sam dva rezervirana mjesta ovdje, a zatim
moje dvije varijable u odgovarajućem redoslijedu.

147
00:07:59,210 --> 00:08:03,130
>> Sada kada znamo kako ispisati
vrijednosti spremljene u varijablama,

148
00:08:03,130 --> 00:08:06,030
zadnja stvar na
to je da se osigura da smo

149
00:08:06,030 --> 00:08:10,920
ispisati vrijednost u točnom formatu
navedeno u specifikaciji.

150
00:08:10,920 --> 00:08:14,990
Uz to, mi smo potaknuli su
korisnik i ovjeren njihov doprinos.

151
00:08:14,990 --> 00:08:17,920
Mi smo tada izračunati ekvivalent
Broj boca vode

152
00:08:17,920 --> 00:08:22,100
da oni troše tijekom tuširanja,
a mi smo na izlazu tu vrijednost na njih.

153
00:08:22,100 --> 00:08:24,440
I tako smo završili vodu.

154
00:08:24,440 --> 00:08:28,730
>> Moje ime je [? Zamila,?]
i to je CS50.

155
00:08:28,730 --> 00:08:29,909

