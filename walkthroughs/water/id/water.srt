1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
SPEAKER 1: Mari kita bicara tentang air.

3
00:00:01,960 --> 00:00:07,280
Dalam masalah ini, kami meminta pengguna untuk memberitahu
kami berapa lama di menit mandi mereka adalah

4
00:00:07,280 --> 00:00:11,040
dan kemudian kita menghitung setara
jumlah botol air

5
00:00:11,040 --> 00:00:12,970
bahwa mandi mereka digunakan.

6
00:00:12,970 --> 00:00:16,379
>> Jadi apa yang kami to-do
untuk masalah ini?

7
00:00:16,379 --> 00:00:20,050
Pertama, kita akan ingin
untuk mendorong dan kemudian memvalidasi

8
00:00:20,050 --> 00:00:22,100
input bahwa pengguna memberi kita.

9
00:00:22,100 --> 00:00:24,790
Setelah kami memastikan kami bahwa
memiliki input pengguna yang valid,

10
00:00:24,790 --> 00:00:28,230
kita akan menghitung
jumlah setara botol air

11
00:00:28,230 --> 00:00:30,770
bahwa pengguna memiliki selama
mandi mereka, dan kemudian kami

12
00:00:30,770 --> 00:00:33,720
akan memberitahu mereka dengan
mencetak angka itu.

13
00:00:33,720 --> 00:00:37,230
>> Jadi mari kita menangani pertama kami
tugas, mendorong dan memvalidasi

14
00:00:37,230 --> 00:00:38,550
input pengguna.

15
00:00:38,550 --> 00:00:40,910
Untuk ini kami telah menulis
Fungsi untuk Anda disebut

16
00:00:40,910 --> 00:00:43,950
get_int terletak di Perpustakaan CS50.

17
00:00:43,950 --> 00:00:48,710
get_int memastikan bahwa input pengguna
integer, sehingga setiap angka positif,

18
00:00:48,710 --> 00:00:51,700
angka negatif, atau
nol semua diterima.

19
00:00:51,700 --> 00:00:55,900
Tetapi jika pengguna masukan apa pun,
sehingga setiap kombinasi huruf atau angka

20
00:00:55,900 --> 00:00:59,710
atau angka desimal, maka
pengguna akan diminta untuk mencoba lagi

21
00:00:59,710 --> 00:01:04,319
dan fungsi tidak akan menerima apa-apa
sampai pengguna memberikan mereka integer.

22
00:01:04,319 --> 00:01:06,410
>> Jadi bagaimana kita menggunakan get_int?

23
00:01:06,410 --> 00:01:10,830
Jika Anda membuka ruang kerja Anda dan
membuat file bernama integer.c mari

24
00:01:10,830 --> 00:01:12,110
ketik berikut ini.

25
00:01:12,110 --> 00:01:14,760
Hashtag termasuk cs50.h.

26
00:01:14,760 --> 00:01:18,480
Hal ini diperlukan karena get_int
adalah fungsi CS50 perpustakaan,

27
00:01:18,480 --> 00:01:21,890
jadi kita harus hashtag mencakup
deklarasi dalam rangka

28
00:01:21,890 --> 00:01:23,370
untuk menggunakan fungsi.

29
00:01:23,370 --> 00:01:26,570
Dan kemudian di utama saya
berfungsi aku hanya akan

30
00:01:26,570 --> 00:01:29,560
untuk hanya memanggil fungsi get_int.

31
00:01:29,560 --> 00:01:31,750
>> Jadi mari kita jalankan ini dan melihat cara kerjanya.

32
00:01:31,750 --> 00:01:35,092
Aku sudah dikompilasi, jadi mari kita
hanya pergi ke depan dan menjalankan program ini,

33
00:01:35,092 --> 00:01:36,480
./bilangan bulat.

34
00:01:36,480 --> 00:01:39,880
Di sini saya memiliki cepat dan
di sinilah saya masukan nilai.

35
00:01:39,880 --> 00:01:44,880
Katakanlah saya dimasukkan ke dalam hanya beberapa integer,
50, excepts Program dan berhenti

36
00:01:44,880 --> 00:01:45,960
dan itulah yang.

37
00:01:45,960 --> 00:01:49,350
>> Tapi mengatakan saya jalankan lagi dan
Saya masukan sesuatu yang lain.

38
00:01:49,350 --> 00:01:51,350
Mungkin, halo dunia.

39
00:01:51,350 --> 00:01:55,660
Itu bukan integer sehingga
Program akan meminta saya untuk mencoba lagi.

40
00:01:55,660 --> 00:01:59,160
Mari kita coba lagi dengan
mungkin desimal kali ini.

41
00:01:59,160 --> 00:02:03,450
0,5, sekali lagi, bukan integer sehingga
program tidak akan menerimanya

42
00:02:03,450 --> 00:02:05,290
dan itu akan memberitahu saya untuk mencoba lagi.

43
00:02:05,290 --> 00:02:07,070
Jadi mari kita nomor lain.

44
00:02:07,070 --> 00:02:09,830
Program ini menerimanya,
berhenti, dan kita sudah selesai.

45
00:02:09,830 --> 00:02:13,520
>> Jadi sekarang kita memiliki fungsi
yang memungkinkan kita dan memastikan

46
00:02:13,520 --> 00:02:16,790
bahwa pengguna input sebuah
integer, tapi bagaimana kita bisa

47
00:02:16,790 --> 00:02:20,330
sebenarnya melacak
bilangan bulat diinput oleh user?

48
00:02:20,330 --> 00:02:25,260
Yah, semua akan kita lakukan adalah toko
nilai ini dalam variabel, mengatakan n.

49
00:02:25,260 --> 00:02:30,580
Jadi jika saya menyatakan integer n,
dan saya menetapkan nilai yang ke get_int,

50
00:02:30,580 --> 00:02:34,700
maka n kemudian akan menyimpan apa pun
menghargai pengguna diinput.

51
00:02:34,700 --> 00:02:38,620
>> Baiklah, jadi sekarang kita sudah memastikan bahwa
pengguna akan memberi kita integer

52
00:02:38,620 --> 00:02:42,550
dan kita tahu bagaimana untuk melacak
integer, tapi ingat,

53
00:02:42,550 --> 00:02:45,610
bilangan bulat positif dan negatif.

54
00:02:45,610 --> 00:02:49,110
Sehingga tidak benar-benar masuk akal
dalam konteks masalah ini

55
00:02:49,110 --> 00:02:53,570
bahwa pengguna mengambil mandi
dari mengatakan negatif 12 menit.

56
00:02:53,570 --> 00:02:59,310
Jadi kita perlu memastikan bahwa pengguna
benar-benar memberi kita bilangan bulat positif.

57
00:02:59,310 --> 00:03:02,130
Sekarang kita tidak hanya memiliki
fungsi tunggal untuk itu,

58
00:03:02,130 --> 00:03:04,620
sehingga kita akan memiliki
untuk menciptakan diri kita sendiri.

59
00:03:04,620 --> 00:03:07,190
>> Jadi kami ingin terus
meminta pengguna

60
00:03:07,190 --> 00:03:09,730
sampai mereka memberi kita bilangan bulat positif.

61
00:03:09,730 --> 00:03:14,300
Jika saya melakukan sesuatu yang terus menerus maka
yang mirip dengan loop, pengulangan.

62
00:03:14,300 --> 00:03:19,130
Jadi salah satu konstruksi yang kita gunakan
di c untuk melaksanakan pengulangan dan loop

63
00:03:19,130 --> 00:03:20,410
adalah loop sementara.

64
00:03:20,410 --> 00:03:23,020
Jadi loop sementara, sebagai
ditampilkan disini, akan mengeksekusi

65
00:03:23,020 --> 00:03:27,030
apa yang ada di tubuh loop sebagai
Selama mengevaluasi kondisi tertentu

66
00:03:27,030 --> 00:03:27,900
true.

67
00:03:27,900 --> 00:03:30,640
Segera setelah kondisi yang
mengevaluasi ke false, maka

68
00:03:30,640 --> 00:03:34,830
program akan melanjutkan ke apapun
datang setelah tubuh loop.

69
00:03:34,830 --> 00:03:39,400
>> Jadi sementara loop akan
benar-benar berguna dalam CS50.

70
00:03:39,400 --> 00:03:42,590
Namun dalam khusus ini
kasus, kita tahu bahwa kita

71
00:03:42,590 --> 00:03:48,140
akan meminta pengguna setidaknya
sekali dan kemudian hanya lingkaran jika diperlukan.

72
00:03:48,140 --> 00:03:51,080
Jadi di sini kita datang ke
konstruk khusus dan itu

73
00:03:51,080 --> 00:03:55,020
sangat mirip dengan sementara
lingkaran disebut loop do-while.

74
00:03:55,020 --> 00:03:58,840
>> Jadi loop do-while mengeksekusi
tubuh loop setidaknya sekali

75
00:03:58,840 --> 00:04:01,750
dan kemudian memeriksa untuk melihat
apakah harus melaksanakan,

76
00:04:01,750 --> 00:04:05,310
sebagai lawan loop sementara,
yang akan memeriksa kondisi

77
00:04:05,310 --> 00:04:07,200
dan kemudian jalankan tubuh.

78
00:04:07,200 --> 00:04:11,880
Jadi dalam satu lingkaran do-while apa yang kita mungkin
lakukan adalah meminta pengguna untuk integer,

79
00:04:11,880 --> 00:04:14,450
dan kemudian memeriksa apakah itu sah atau tidak.

80
00:04:14,450 --> 00:04:18,130
Jika itu tidak valid, maka kita akan
ulangi proses meminta user

81
00:04:18,130 --> 00:04:22,290
untuk memberikan bilangan bulat lain, dan kemudian
hanya ketika bahwa bilangan bulat berlaku,

82
00:04:22,290 --> 00:04:25,060
kami akan terus
apa pun yang datang sesudahnya.

83
00:04:25,060 --> 00:04:28,030
>> Sekarang Anda akan melihat bahwa
deklarasi integer n

84
00:04:28,030 --> 00:04:31,670
sedikit berbeda dengan apa yang kita
lakukan sebelumnya pada contoh sebelumnya

85
00:04:31,670 --> 00:04:33,640
dan ini adalah karena ruang lingkup.

86
00:04:33,640 --> 00:04:37,920
Jika kita telah menyatakan bilangan bulat n dalam
dari tubuh loop do-while,

87
00:04:37,920 --> 00:04:42,640
maka kita tidak akan dapat mengakses
bahwa nilai n luar keriting mereka

88
00:04:42,640 --> 00:04:45,050
kawat gigi menunjukkan tubuh loop.

89
00:04:45,050 --> 00:04:51,080
Tapi kita sebenarnya ingin mengakses
nilai n nanti di program kami.

90
00:04:51,080 --> 00:04:55,730
>> OK, jadi sekarang mari kita bicara tentang
apa kondisi ini harus.

91
00:04:55,730 --> 00:05:00,400
Kami ingin hanya reprompt yang
pengguna selama n tidak valid.

92
00:05:00,400 --> 00:05:04,640
Jadi berpikir untuk diri sendiri apa yang tidak valid
nilai integer akan terlihat seperti

93
00:05:04,640 --> 00:05:08,060
dan kemudian membuat Boolean sebuah
ekspresi untuk mengungkapkan itu.

94
00:05:08,060 --> 00:05:13,070
>> Kami hampir selesai dengan subtask kami
dari mendorong dan memvalidasi input pengguna.

95
00:05:13,070 --> 00:05:16,010
Jadi mari kita membuat ini sedikit
Sedikit lebih user friendly

96
00:05:16,010 --> 00:05:18,390
dan memberikan pengguna sedikit
bit informasi lebih lanjut

97
00:05:18,390 --> 00:05:20,510
dari apa yang kita mendorong mereka untuk.

98
00:05:20,510 --> 00:05:24,500
Jadi mari kita meminta pengguna, per
spec, dengan menit tali.

99
00:05:24,500 --> 00:05:28,935
Jadi menggunakan pernyataan printf Anda, membuat
Pastikan bahwa Anda cocok dengan ini persis.

100
00:05:28,935 --> 00:05:30,230
>> Baiklah.

101
00:05:30,230 --> 00:05:33,840
Jadi sekarang kita memiliki pengguna yang valid
input, bilangan bulat positif

102
00:05:33,840 --> 00:05:37,400
nilai berapa menit
mereka menghabiskan di kamar mandi.

103
00:05:37,400 --> 00:05:41,300
Jadi apa yang berikutnya adalah menghitung
setara dengan jumlah botol.

104
00:05:41,300 --> 00:05:45,250
Apa yang akan kita lakukan di sini mungkin
sangat jelas bagi Anda pada awalnya,

105
00:05:45,250 --> 00:05:46,640
dan itu OK.

106
00:05:46,640 --> 00:05:49,320
Apa yang ingin kita lakukan adalah kita
ingin mulai berlatih

107
00:05:49,320 --> 00:05:53,810
ide mendeteksi pola dan
mengembangkan formula untuk masalah tersebut.

108
00:05:53,810 --> 00:05:57,200
>> Jadi kami diberitahu per spec
yang satu menit di kamar mandi

109
00:05:57,200 --> 00:05:59,960
adalah setara dengan sekitar
12 botol air.

110
00:05:59,960 --> 00:06:03,020
Jadi dua menit akan
setara dengan 24,

111
00:06:03,020 --> 00:06:05,850
dan lima menit akan
setara dengan 60.

112
00:06:05,850 --> 00:06:08,390
Jadi jika Anda berpikir
Anda punya itu, maka mari kita

113
00:06:08,390 --> 00:06:10,390
lihat apakah Anda dapat datang
dengan pola atau rumus

114
00:06:10,390 --> 00:06:14,990
mengungkapkan jika kita telah mengatakan, n
menit, berapa banyak botol air

115
00:06:14,990 --> 00:06:17,930
akan yang dinyatakan dalam hal n?

116
00:06:17,930 --> 00:06:20,680
>> Sekali lagi, meskipun ini
mungkin sederhana pada awalnya,

117
00:06:20,680 --> 00:06:23,240
nanti pada saat kita sampai
masalah yang lebih rumit

118
00:06:23,240 --> 00:06:26,360
kita akan ingin masuk ke
praktek mengidentifikasi

119
00:06:26,360 --> 00:06:30,120
pola dan mengembangkan formula
untuk mencari hal-hal ini.

120
00:06:30,120 --> 00:06:33,450
>> Dalam c Anda memiliki akses ke
operasi aritmatika standar,

121
00:06:33,450 --> 00:06:36,520
Selain itu, pengurangan,
perkalian, dan pembagian.

122
00:06:36,520 --> 00:06:38,420
Jadi saya akan meninggalkannya untuk
Anda sekarang untuk mencari tahu

123
00:06:38,420 --> 00:06:41,300
bagaimana mengekspresikan
jumlah setara dengan botol

124
00:06:41,300 --> 00:06:43,990
bahwa pengguna dikonsumsi
selama mandi mereka.

125
00:06:43,990 --> 00:06:45,700
>> Baiklah, kita hampir selesai.

126
00:06:45,700 --> 00:06:50,650
Kami telah diminta pengguna untuk masukan mereka,
kami telah memastikan bahwa itu masukan yang valid,

127
00:06:50,650 --> 00:06:53,330
dan kemudian kita sudah tahu bagaimana
untuk menghitung setara

128
00:06:53,330 --> 00:06:55,480
jumlah botol yang mereka konsumsi.

129
00:06:55,480 --> 00:06:59,430
Jadi hal terakhir yang harus dilakukan adalah keluaran
setara dengan jumlah botol

130
00:06:59,430 --> 00:07:02,410
dan mudah-mudahan mendorong
mereka untuk menghemat air.

131
00:07:02,410 --> 00:07:06,270
>> Keluaran nilai akan
menjadi pernyataan printf.

132
00:07:06,270 --> 00:07:09,720
Jika saya ingin memberitahu Anda bahwa saya
memiliki tiga hewan peliharaan, misalnya,

133
00:07:09,720 --> 00:07:13,090
Saya mungkin menggunakan pernyataan printf
yang terlihat seperti ini.

134
00:07:13,090 --> 00:07:15,880
Saya memiliki tiga hewan peliharaan, dan baru
line untuk format yang bagus.

135
00:07:15,880 --> 00:07:17,880
>> Sekarang kita tidak ingin
hanya hal kode keras.

136
00:07:17,880 --> 00:07:20,740
Mengatakan jumlah saya
hewan peliharaan berubah dari waktu ke waktu.

137
00:07:20,740 --> 00:07:25,080
Lalu aku akan memanfaatkan
placeholder dalam pernyataan printf saya.

138
00:07:25,080 --> 00:07:27,350
Jadi di sini nomor saya adalah bilangan bulat.

139
00:07:27,350 --> 00:07:31,480
Jadi saya akan membuat placeholder
untuk integer menggunakan% i.

140
00:07:31,480 --> 00:07:33,930
Aku akan menulis string,
dan kemudian setelah string

141
00:07:33,930 --> 00:07:38,000
Saya menulis koma dan kemudian
variabel yang ingin saya cetak.

142
00:07:38,000 --> 00:07:42,730
Jadi nilai yang akan dicetak
sebagai pengganti yang placeholder,% i.

143
00:07:42,730 --> 00:07:47,630
>> Anda dapat menggunakan placeholder, sebagai
baik, untuk mengapung dengan% f.

144
00:07:47,630 --> 00:07:50,420
Anda juga dapat memiliki beberapa
placeholder dalam sebuah string.

145
00:07:50,420 --> 00:07:53,950
Misalnya, jika saya memiliki beberapa nomor
anjing dan beberapa jumlah kucing,

146
00:07:53,950 --> 00:07:59,210
Saya menempatkan dua penampung di sini dan kemudian
saya dua variabel dalam rangka masing.

147
00:07:59,210 --> 00:08:03,130
>> Jadi sekarang kita tahu cara mencetak
nilai-nilai yang disimpan dalam variabel,

148
00:08:03,130 --> 00:08:06,030
hal terakhir untuk
lakukan adalah untuk memastikan kami bahwa

149
00:08:06,030 --> 00:08:10,920
mencetak nilai dalam format yang tepat
ditunjukkan dalam spesifikasi.

150
00:08:10,920 --> 00:08:14,990
Dengan itu, kami telah mendorong
pengguna dan divalidasi masukan mereka.

151
00:08:14,990 --> 00:08:17,920
Kami telah kemudian dihitung setara
jumlah botol air

152
00:08:17,920 --> 00:08:22,100
bahwa mereka mengkonsumsi selama mandi mereka,
dan kami telah dikeluarkan bahwa nilai kepada mereka.

153
00:08:22,100 --> 00:08:24,440
Dan, kami telah menyelesaikan air.

154
00:08:24,440 --> 00:08:28,730
>> Nama saya adalah [? Zamila,?]
dan ini CS50.

155
00:08:28,730 --> 00:08:29,909

