1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
HLAS 1: Hovorme o vode.

3
00:00:01,960 --> 00:00:07,280
V tomto probléme, žiadame užívateľov, aby oznámiť
nám, ako dlho v niekoľkých minútach ich sprchy boli

4
00:00:07,280 --> 00:00:11,040
a potom počítame ekvivalent
počet fliaš vody

5
00:00:11,040 --> 00:00:12,970
že ich sprcha použiť.

6
00:00:12,970 --> 00:00:16,379
>> Takže aké sú naše na-do je
Pre tento problém?

7
00:00:16,379 --> 00:00:20,050
Po prvé, budeme chcieť
výzvu a potvrďte

8
00:00:20,050 --> 00:00:22,100
vstup, ktorý nám dáva užívateľovi.

9
00:00:22,100 --> 00:00:24,790
Potom, čo sme zistili, že sme
majú platné vstup užívateľa,

10
00:00:24,790 --> 00:00:28,230
ideme pre výpočet
prepočítaný počet fliaš vody

11
00:00:28,230 --> 00:00:30,770
že používateľ mal v priebehu
Ich sprcha, a potom sme

12
00:00:30,770 --> 00:00:33,720
bude im to podľa
vytlačiť toto číslo.

13
00:00:33,720 --> 00:00:37,230
>> Takže poďme riešiť naše prvé
úloha, pobádať a overovanie

14
00:00:37,230 --> 00:00:38,550
vstup užívateľa.

15
00:00:38,550 --> 00:00:40,910
Za týmto účelom sme napísala
Funkcie pre vás zavolal

16
00:00:40,910 --> 00:00:43,950
get_int nachádza v CS50 knižnice.

17
00:00:43,950 --> 00:00:48,710
get_int zaisťuje, že používateľ vstupy
celé číslo, takže akékoľvek kladných čísiel

18
00:00:48,710 --> 00:00:51,700
záporné čísla, alebo
nula sú prijímané.

19
00:00:51,700 --> 00:00:55,900
Ale v prípade, že používateľ zadá niečo iné,
takže ľubovoľná kombinácia písmen alebo číslic

20
00:00:55,900 --> 00:00:59,710
alebo desatinné čísla, potom sa
Používateľ bude vyzvaný, aby znovu

21
00:00:59,710 --> 00:01:04,319
a funkcia nebude nič akceptovať
kým im užívateľ dáva celé číslo.

22
00:01:04,319 --> 00:01:06,410
>> Tak ako používame get_int?

23
00:01:06,410 --> 00:01:10,830
Ak otvoríte svoj pracovný priestor a
vytvoriť súbor s názvom integer.c poďme

24
00:01:10,830 --> 00:01:12,110
zadajte nasledovné.

25
00:01:12,110 --> 00:01:14,760
Hashtag patrí cs50.h.

26
00:01:14,760 --> 00:01:18,480
To je nutné, pretože get_int
je funkcia CS50 knižnica,

27
00:01:18,480 --> 00:01:21,890
takže musíme hashtag zahŕňať
jeho vyhlásenie za účelom

28
00:01:21,890 --> 00:01:23,370
používať funkciu.

29
00:01:23,370 --> 00:01:26,570
A potom v mojom hlavnom
fungovali Práve idem

30
00:01:26,570 --> 00:01:29,560
jednoducho volanie funkcie get_int.

31
00:01:29,560 --> 00:01:31,750
>> Takže poďme bežať to a uvidíte, ako to funguje.

32
00:01:31,750 --> 00:01:35,092
Už som zostavil to, tak poďme
jednoducho ísť dopredu a spustiť tento program,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Tu mám výzva a
Tu je miesto, kde som vstupná hodnota.

35
00:01:39,880 --> 00:01:44,880
Povedzme, že som dal len niektoré integer,
50, program excepts a ukončí

36
00:01:44,880 --> 00:01:45,960
a to je to.

37
00:01:45,960 --> 00:01:49,350
>> Ale povedať, že som ho spustiť znova a
Aj vstup niečo iné.

38
00:01:49,350 --> 00:01:51,350
Možno, hello world.

39
00:01:51,350 --> 00:01:55,660
To nie je celé číslo, takže
Program ma vyzve na opakovanie.

40
00:01:55,660 --> 00:01:59,160
Skúsime to znova s
snáď desiatkovej tentoraz.

41
00:01:59,160 --> 00:02:03,450
0,5, opäť, nie je celé číslo, takže
program nebude prijímam ho

42
00:02:03,450 --> 00:02:05,290
a to mi povie k opakovaniu.

43
00:02:05,290 --> 00:02:07,070
Takže dajme tomu iné číslo.

44
00:02:07,070 --> 00:02:09,830
Program akceptuje to,
ukončí, a my sme urobili.

45
00:02:09,830 --> 00:02:13,520
>> Takže teraz máme funkciu
že nám umožňuje a zaisťuje

46
00:02:13,520 --> 00:02:16,790
že používateľ zadá
integer, ale ako môžeme

47
00:02:16,790 --> 00:02:20,330
v skutočnosti sledovať z
celé číslo zadaných užívateľom?

48
00:02:20,330 --> 00:02:25,260
No, to všetko budeme robiť, je obchod
táto hodnota v premennej, povedzme n.

49
00:02:25,260 --> 00:02:30,580
Takže ak Prehlasujem celé číslo n,
I a nastaviť túto hodnotu na get_int,

50
00:02:30,580 --> 00:02:34,700
potom n potom uložiť čokoľvek
cení užívateľa privedený.

51
00:02:34,700 --> 00:02:38,620
>> Dobre, takže teraz máme zabezpečené, že
Užívateľ nám dá celé číslo

52
00:02:38,620 --> 00:02:42,550
a vieme, ako sledovať
o celé číslo, ale pamätajte,

53
00:02:42,550 --> 00:02:45,610
čísla sú pozitívne aj negatívne.

54
00:02:45,610 --> 00:02:49,110
Takže to nie je naozaj zmysel
V súvislosti s týmto problémom

55
00:02:49,110 --> 00:02:53,570
že používateľ má sprchu
povedzme negatívne 12 minút.

56
00:02:53,570 --> 00:02:59,310
Takže potrebujeme, aby sa ubezpečil, že používateľ
v skutočnosti nám dáva kladné celé číslo.

57
00:02:59,310 --> 00:03:02,130
Teraz nemáme len
single funkcie za to,

58
00:03:02,130 --> 00:03:04,620
takže budeme mať
k vytvoreniu že sami.

59
00:03:04,620 --> 00:03:07,190
>> Takže chceme neustále
vyzve užívateľa

60
00:03:07,190 --> 00:03:09,730
kým sa nám kladné celé číslo.

61
00:03:09,730 --> 00:03:14,300
V prípade, že robím niečo nepretržite po tom
to je podobný slučky, opakovanie.

62
00:03:14,300 --> 00:03:19,130
Takže jedným z konštruktov, ktoré používame
vc realizovať opakovanie a slučky

63
00:03:19,130 --> 00:03:20,410
Je while.

64
00:03:20,410 --> 00:03:23,020
Takže while, as
Tu je ukázané, vykoná

65
00:03:23,020 --> 00:03:27,030
čo je v tele slučky ako
Kým daných podmienka vyhodnotená

66
00:03:27,030 --> 00:03:27,900
true.

67
00:03:27,900 --> 00:03:30,640
Akonáhle je táto podmienka
vyhodnocuje ako nepravdivý, potom

68
00:03:30,640 --> 00:03:34,830
Program bude pokračovať na čokoľvek
prichádza po tela slučky.

69
00:03:34,830 --> 00:03:39,400
>> Takže zatiaľ čo slučky budú
bolo naozaj užitočné v CS50.

70
00:03:39,400 --> 00:03:42,590
Ale v tomto konkrétnom
Prípad, vieme, že sme

71
00:03:42,590 --> 00:03:48,140
chystá vyzvať užívateľa prinajmenšom
raz a to iba slučky v prípade potreby.

72
00:03:48,140 --> 00:03:51,080
Tak tu sa dostávame k
Špeciálna konštrukcia a to je

73
00:03:51,080 --> 00:03:55,020
veľmi podobný chvíľu
slučka volal do-while slučku.

74
00:03:55,020 --> 00:03:58,840
>> Takže do-while vykonáva
telo slučky aspoň raz

75
00:03:58,840 --> 00:04:01,750
a potom skontroluje
či by mal vykonať,

76
00:04:01,750 --> 00:04:05,310
na rozdiel od while,
ktorý bude kontrolovať stav

77
00:04:05,310 --> 00:04:07,200
a potom spustiť telo.

78
00:04:07,200 --> 00:04:11,880
Takže v do-while, čo by sme mohli
urobiť, je vyzve užívateľa k celé číslo,

79
00:04:11,880 --> 00:04:14,450
a potom skontrolovať, či je to neplatný alebo nie je.

80
00:04:14,450 --> 00:04:18,130
Ak je to neplatné, potom budeme
opakujte postup s dotazom užívateľa

81
00:04:18,130 --> 00:04:22,290
aby nám dal ďalšie číslo, a potom
iba v prípade, že číslo je platný,

82
00:04:22,290 --> 00:04:25,060
budeme aj naďalej
čo nastane neskôr.

83
00:04:25,060 --> 00:04:28,030
>> Teraz si všimnite si, že
Vyhlásenie o celé číslo n

84
00:04:28,030 --> 00:04:31,670
sa mierne líši od toho, čo sme
predtým v predchádzajúcom príklade

85
00:04:31,670 --> 00:04:33,640
a to preto, že rozsah.

86
00:04:33,640 --> 00:04:37,920
Keby sme vyhlásená Číslo n vnútri
z tela do-while slučky,

87
00:04:37,920 --> 00:04:42,640
potom by sme neboli schopní získať prístup
že hodnota n mimo tých Kučeravým

88
00:04:42,640 --> 00:04:45,050
traky uvedením tela slučky.

89
00:04:45,050 --> 00:04:51,080
Ale my v skutočnosti chcú prístup k
Hodnota n neskôr v našom programe.

90
00:04:51,080 --> 00:04:55,730
>> OK, takže teraz poďme hovoriť o
čo táto podmienka mala byť.

91
00:04:55,730 --> 00:05:00,400
Chceme reprompt len
Užívateľ tak dlho, kým n je neplatný.

92
00:05:00,400 --> 00:05:04,640
Takže myslíte, že na seba, čo je neplatný
celočíselná hodnota bude vyzerať

93
00:05:04,640 --> 00:05:08,060
a potom vytvoriť logickú
Výraz, ktorý má vyjadriť, že.

94
00:05:08,060 --> 00:05:13,070
>> Sme takmer na konci s našou Podúlohy
podnecovať a overovanie užívateľského vstupu.

95
00:05:13,070 --> 00:05:16,010
Takže poďme urobiť to trochu
trochu viac užívateľsky prívetivé

96
00:05:16,010 --> 00:05:18,390
a dať užívateľovi trochu
bit viac informácií

97
00:05:18,390 --> 00:05:20,510
z toho, čo sme im výzvy na.

98
00:05:20,510 --> 00:05:24,500
Takže poďme vyzve užívateľa, podľa
spec, s reťazcom minút.

99
00:05:24,500 --> 00:05:28,935
Takže pomocou svojej printf vyhlásenie, aby
Uistite sa, že zápas to presne.

100
00:05:28,935 --> 00:05:30,230
>> Dobre.

101
00:05:30,230 --> 00:05:33,840
Takže teraz máme platného užívateľa
vstup, kladné celé číslo

102
00:05:33,840 --> 00:05:37,400
Hodnota za koľko minút
strávili v sprche.

103
00:05:37,400 --> 00:05:41,300
Takže čo ďalej je vypočítať
ekvivalentný počet fliaš.

104
00:05:41,300 --> 00:05:45,250
Čo budeme robiť tu mohol
bude pre vás úplne zrejmá na prvý pohľad,

105
00:05:45,250 --> 00:05:46,640
a to je v poriadku.

106
00:05:46,640 --> 00:05:49,320
To, čo chceme urobiť, je, že sme
chcú začať cvičiť

107
00:05:49,320 --> 00:05:53,810
Myšlienka odhaľovať a
rozvíjanie vzorca pre výpočet tohto problému.

108
00:05:53,810 --> 00:05:57,200
>> Takže nám bolo povedané na spec
že jedna minúta v sprche

109
00:05:57,200 --> 00:05:59,960
zodpovedá približne
12 fliaš s vodou.

110
00:05:59,960 --> 00:06:03,020
Tak dve minúty by
sa rovná 24,

111
00:06:03,020 --> 00:06:05,850
a päť minút by
sa rovná 60.

112
00:06:05,850 --> 00:06:08,390
Takže teraz, ak si myslíte,
máte to a potom Nechal

113
00:06:08,390 --> 00:06:10,390
uvidíme, či môžete prísť
sa vzorom alebo všeobecného vzorca

114
00:06:10,390 --> 00:06:14,990
vyjadriť, či sme povedať, n
minút, koľko fľaše s vodou

115
00:06:14,990 --> 00:06:17,930
by to byť vyjadrená z hľadiska n?

116
00:06:17,930 --> 00:06:20,680
>> Opäť platí, že aj keď táto
môže byť jednoduchý na prvý,

117
00:06:20,680 --> 00:06:23,240
neskôr, keď sa dostaneme do
zložitejšie problémy

118
00:06:23,240 --> 00:06:26,360
budeme chcieť dostať do
praxe identifikácia

119
00:06:26,360 --> 00:06:30,120
vzory a rozvojových formula
vyriešiť tieto veci von.

120
00:06:30,120 --> 00:06:33,450
>> Vc máte prístup k
štandardné aritmetické operácie,

121
00:06:33,450 --> 00:06:36,520
sčítanie, odčítanie,
násobenie a delenie.

122
00:06:36,520 --> 00:06:38,420
Takže nechám to na
Teraz sa prísť na to,

123
00:06:38,420 --> 00:06:41,300
ako vyjadriť
prepočítaný počet fliaš

124
00:06:41,300 --> 00:06:43,990
že užívateľ spotrebuje
počas ich sprchou.

125
00:06:43,990 --> 00:06:45,700
>> Dobre, my sme skoro hotoví.

126
00:06:45,700 --> 00:06:50,650
Máme výzva užívateľovi pre ich vstup,
máme zabezpečené, že je to platný vstup,

127
00:06:50,650 --> 00:06:53,330
a potom sme zistili, ako
pre výpočet ekvivalentu

128
00:06:53,330 --> 00:06:55,480
počet fliaš, ktoré konzumovali.

129
00:06:55,480 --> 00:06:59,430
Takže posledná vec, ktorú musíte urobiť, je výstup
ekvivalentný počet získaných fliaš

130
00:06:59,430 --> 00:07:02,410
a snáď podnieti
aby šetriť vodu.

131
00:07:02,410 --> 00:07:06,270
>> Výstup hodnoty budú
byť vyhlásenie printf.

132
00:07:06,270 --> 00:07:09,720
Ak by som vám chcel povedať, že som
tri zvieratá, napríklad,

133
00:07:09,720 --> 00:07:13,090
Mohol by som použiť príkaz printf
ktorá vyzerá nejako takto.

134
00:07:13,090 --> 00:07:15,880
Mám tri zvieratá, a nová
linka pre pekné formátovanie.

135
00:07:15,880 --> 00:07:17,880
>> Teraz nechceme, aby
jednoducho pevný kód veci.

136
00:07:17,880 --> 00:07:20,740
Povedzme, že počet my
domáce zvieratá sa mení v priebehu času.

137
00:07:20,740 --> 00:07:25,080
Potom budem využívať
zástupné symboly v mojom vyhlásení printf.

138
00:07:25,080 --> 00:07:27,350
Tak tu moje číslo je celé číslo.

139
00:07:27,350 --> 00:07:31,480
Takže idem robiť zástupný symbol
predstavuje celé číslo s použitím% i.

140
00:07:31,480 --> 00:07:33,930
Idem písať reťazec,
a potom po reťazec

141
00:07:33,930 --> 00:07:38,000
Píšem čiarku a potom sa
premenná, ktorá Chcem vytlačiť.

142
00:07:38,000 --> 00:07:42,730
Takže hodnota bude vytlačený
namiesto toho zástupný,% i.

143
00:07:42,730 --> 00:07:47,630
>> Môžete použiť zástupné symboly, as
No, plaváky s% F.

144
00:07:47,630 --> 00:07:50,420
Môžete mať tiež viacnásobné
zástupné symboly v reťazci.

145
00:07:50,420 --> 00:07:53,950
Napríklad, keď mám určitý počet
psov a mačiek určitý počet,

146
00:07:53,950 --> 00:07:59,210
Dal som dva zástupné symboly sem a potom
moje dve premenné v danom poradí.

147
00:07:59,210 --> 00:08:03,130
>> Takže teraz, keď vieme, ako vytlačiť
hodnoty uložené v premenných,

148
00:08:03,130 --> 00:08:06,030
tá posledná vec,
urobiť, je zabezpečiť, aby sme

149
00:08:06,030 --> 00:08:10,920
vytlačiť hodnotu v presnom formáte
je uvedené v špecifikácii.

150
00:08:10,920 --> 00:08:14,990
S tým sme prinútili
Užívateľ a overený ich vstup.

151
00:08:14,990 --> 00:08:17,920
My sme potom vypočíta ekvivalent
počet fliaš vody

152
00:08:17,920 --> 00:08:22,100
že spotrebujú počas ich sprchovacím kútom,
a my sme túto hodnotu na výstupe k nim.

153
00:08:22,100 --> 00:08:24,440
A tak sme dokončili vodu.

154
00:08:24,440 --> 00:08:28,730
>> Moje meno je [? Zamil ,?]
a to je CS50.

155
00:08:28,730 --> 00:08:29,909

