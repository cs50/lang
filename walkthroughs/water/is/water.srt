1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
Ræðumaður 1: Við skulum tala um vatn.

3
00:00:01,960 --> 00:00:07,280
Í þessu vandamáli, biðjum við notandann til að segja
okkur hversu lengi í mínútum Veitingahús þeirra var

4
00:00:07,280 --> 00:00:11,040
og þá erum við að reikna ígildi
Fjöldi flöskur af vatni

5
00:00:11,040 --> 00:00:12,970
að sturtu þeirra nota.

6
00:00:12,970 --> 00:00:16,379
>> Svo það eru okkar að-do er
fyrir þetta vandamál?

7
00:00:16,379 --> 00:00:20,050
Í fyrsta lagi erum við að fara að vilja
að hvetja og þá staðfesta

8
00:00:20,050 --> 00:00:22,100
inntak sem notandinn gefur okkur.

9
00:00:22,100 --> 00:00:24,790
Þegar við tryggt að við
hafa gilt notandi inntak,

10
00:00:24,790 --> 00:00:28,230
við erum að fara að reikna
jafngildir fjölda flöskur af vatni

11
00:00:28,230 --> 00:00:30,770
sem notandinn var á tímum
sturta þeirra, og þá erum við

12
00:00:30,770 --> 00:00:33,720
fara að segja þeim frá
prenta út að tala.

13
00:00:33,720 --> 00:00:37,230
>> Svo skulum takast fyrst okkar
verkefni, vekur og staðfesta

14
00:00:37,230 --> 00:00:38,550
notandi inntak.

15
00:00:38,550 --> 00:00:40,910
Fyrir þetta höfum við skrifað
virka því að þú kallaðir

16
00:00:40,910 --> 00:00:43,950
get_int staðsett í CS50 bókasafninu.

17
00:00:43,950 --> 00:00:48,710
get_int tryggir að notandinn inntak
heiltala, svo jákvæðum tölum,

18
00:00:48,710 --> 00:00:51,700
neikvæðar tölur, eða
núll eru öll samþykkt.

19
00:00:51,700 --> 00:00:55,900
En ef notandi inntak neitt annað,
svo eitthvert sambland af bókstöfum eða tölum

20
00:00:55,900 --> 00:00:59,710
eða aukastaf númer, þá
Notandinn verður beðinn um að reyna aftur

21
00:00:59,710 --> 00:01:04,319
og virka mun ekki taka neitt
þar sem notandinn gefur þeim heiltölu.

22
00:01:04,319 --> 00:01:06,410
>> Svo hvernig gera við notum get_int?

23
00:01:06,410 --> 00:01:10,830
Ef þú opnar vinnusvæði og
búa til skrá sem heitir integer.c skulum

24
00:01:10,830 --> 00:01:12,110
tegund the hópur stuðningsmanna.

25
00:01:12,110 --> 00:01:14,760
Hashtag eru cs50.h.

26
00:01:14,760 --> 00:01:18,480
Þetta er nauðsynlegt vegna þess að get_int
er CS50 bókasafn virka,

27
00:01:18,480 --> 00:01:21,890
þannig að við verðum myllumerki eru
Yfirlýsing hennar í röð

28
00:01:21,890 --> 00:01:23,370
að nota aðgerðina.

29
00:01:23,370 --> 00:01:26,570
Og þá í Main mínum
virka ég ætla bara að fara

30
00:01:26,570 --> 00:01:29,560
að einfaldlega hringja í virka get_int.

31
00:01:29,560 --> 00:01:31,750
>> Svo skulum hlaupa þetta og sjá hvernig það virkar.

32
00:01:31,750 --> 00:01:35,092
Ég hef þegar tekið saman það, þannig að við skulum
bara fara á undan og keyra þetta forrit,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Hér hef ég hvetja og
hér er þar sem ég inntak gildi.

35
00:01:39,880 --> 00:01:44,880
Segja að ég setti í bara einhverja heiltölu,
50, the program excepts og kvittir

36
00:01:44,880 --> 00:01:45,960
og það er það.

37
00:01:45,960 --> 00:01:49,350
>> En ég segi að keyra hana aftur og
Ég inntak eitthvað annað.

38
00:01:49,350 --> 00:01:51,350
Kannski, halló heimur.

39
00:01:51,350 --> 00:01:55,660
Það er ekki heil tala svo
Forritið mun hvetja mig til að reyna aftur.

40
00:01:55,660 --> 00:01:59,160
Við skulum reyna aftur með
kannski aukastaf þetta sinn.

41
00:01:59,160 --> 00:02:03,450
0,5, aftur, ekki heil tala svo
the program vilja ekki samþykkja það

42
00:02:03,450 --> 00:02:05,290
og það mun segja mér að reyna aftur.

43
00:02:05,290 --> 00:02:07,070
Svo skulum gefa það annað númer.

44
00:02:07,070 --> 00:02:09,830
The program samþykkir það,
kvittir, og við erum að gera.

45
00:02:09,830 --> 00:02:13,520
>> Svo nú höfum við fall
sem gerir okkur og tryggir

46
00:02:13,520 --> 00:02:16,790
að notandi inntak
heiltala, en hvernig getum við

47
00:02:16,790 --> 00:02:20,330
reyndar halda utan um
heiltölu inputted af notanda?

48
00:02:20,330 --> 00:02:25,260
Jæja, allt sem við munum gera er verslun
þetta gildi í breytu, segja n.

49
00:02:25,260 --> 00:02:30,580
Þannig að ef ég lýsa heiltölu n,
og ég setti þetta gildi til get_int,

50
00:02:30,580 --> 00:02:34,700
þá n mun þá geyma hvað
gildi notanda slegin.

51
00:02:34,700 --> 00:02:38,620
>> Allt í lagi, svo nú höfum við tryggt að
notandinn mun gefa okkur heiltölu

52
00:02:38,620 --> 00:02:42,550
og við vitum hvernig á að halda utan
af heiltölu, en muna,

53
00:02:42,550 --> 00:02:45,610
heiltölur eru bæði jákvæð og neikvæð.

54
00:02:45,610 --> 00:02:49,110
Þannig að það skiptir í raun ekki skynsamleg
í tengslum við þetta vandamál

55
00:02:49,110 --> 00:02:53,570
að notandinn tekur í sturtu
á að segja neikvæð 12 mínútur.

56
00:02:53,570 --> 00:02:59,310
Þannig að við þurfum að ganga úr skugga um að notandi
reyndar gefur okkur jákvæða heiltölu.

57
00:02:59,310 --> 00:03:02,130
Nú höfum við ekki bara
einn valkost fyrir það,

58
00:03:02,130 --> 00:03:04,620
þannig að við erum að fara að hafa
að búa til þessi sjálf.

59
00:03:04,620 --> 00:03:07,190
>> Þannig að við viljum stöðugt
hvetja notandann

60
00:03:07,190 --> 00:03:09,730
þangað til þeir gefa okkur jákvæða heiltölu.

61
00:03:09,730 --> 00:03:14,300
Ef ég er að gera eitthvað stöðugt síðan
það er svipað og að lykkju, endurtekningu.

62
00:03:14,300 --> 00:03:19,130
Svo einu býr sem við notum
í c að innleiða endurtekningu og lykkjur

63
00:03:19,130 --> 00:03:20,410
er á meðan lykkja.

64
00:03:20,410 --> 00:03:23,020
Svo á meðan lykkja, sem
sýnt hér, mun framkvæma

65
00:03:23,020 --> 00:03:27,030
hvað er í líkama lykkju sem
lengi sem gefnar ástand metur

66
00:03:27,030 --> 00:03:27,900
að sanna.

67
00:03:27,900 --> 00:03:30,640
Um leið og því ástandi
metur að rangar, þá

68
00:03:30,640 --> 00:03:34,830
forritið mun halda áfram að hvað
kemur eftir meginmál lykkju.

69
00:03:34,830 --> 00:03:39,400
>> Svo á meðan lykkjur eru að fara að
verið mjög gagnlegt í CS50.

70
00:03:39,400 --> 00:03:42,590
En í þessu tiltekna
ræða, vitum við að við erum

71
00:03:42,590 --> 00:03:48,140
að fara að hvetja notandann að minnsta kosti
einu sinni og þá aðeins lykkja ef þörf krefur.

72
00:03:48,140 --> 00:03:51,080
Svo hér komum við að
sérstakt reisa og það er

73
00:03:51,080 --> 00:03:55,020
mjög svipað stund
lykkja kallast do-while lykkju.

74
00:03:55,020 --> 00:03:58,840
>> Svo keyrir a do-while lykkju á
Lík lykkju minnsta kosti einu sinni

75
00:03:58,840 --> 00:04:01,750
og þá athugar hún
hvort það ætti að framkvæma,

76
00:04:01,750 --> 00:04:05,310
öfugt við while lykkju,
sem mun athuga ástand

77
00:04:05,310 --> 00:04:07,200
og þá framkvæma líkamann.

78
00:04:07,200 --> 00:04:11,880
Svo í do-while lykkju hvað við gætum
gera er að hvetja notandann til heiltala,

79
00:04:11,880 --> 00:04:14,450
og þá athuga hvort það er ógilt eða ekki.

80
00:04:14,450 --> 00:04:18,130
Ef það er ógilt, þá munum við
endurtaka ferlið spyrja notandann

81
00:04:18,130 --> 00:04:22,290
að gefa okkur annað heiltölu, og þá
aðeins þegar það heiltala er í gildi,

82
00:04:22,290 --> 00:04:25,060
Við munum halda áfram að
hvað kemur á eftir.

83
00:04:25,060 --> 00:04:28,030
>> Nú þú munt taka eftir því að
Yfirlýsing um heiltölu n

84
00:04:28,030 --> 00:04:31,670
er aðeins öðruvísi við það sem við
gerði áður í fyrra dæmi

85
00:04:31,670 --> 00:04:33,640
og þetta er vegna þess að umfangi.

86
00:04:33,640 --> 00:04:37,920
Ef við hefðum lýsti heiltölu n inni
af líkama do-while lykkju,

87
00:04:37,920 --> 00:04:42,640
þá myndum við ekki vera fær til aðgangur
sem gildi n utan þessara hrokkið

88
00:04:42,640 --> 00:04:45,050
axlabönd bendir líkama lykkju.

89
00:04:45,050 --> 00:04:51,080
En við í raun vilja til að fá aðgang að
gildi n síðar í dagskrá okkar.

90
00:04:51,080 --> 00:04:55,730
>> OK, svo nú skulum við tala um
hvað þetta ástand ætti að vera.

91
00:04:55,730 --> 00:05:00,400
Við viljum aðeins reprompt á
Notandinn svo lengi sem n er ógilt.

92
00:05:00,400 --> 00:05:04,640
Svo hugsa til sjálfur hvað ógild
heiltölu gildi myndi líta út eins og

93
00:05:04,640 --> 00:05:08,060
og þá að búa til Boolean
tjáning til að tjá það.

94
00:05:08,060 --> 00:05:13,070
>> Við erum næstum búin með subtask okkar
af innblæstri staðfesta notandi inntak.

95
00:05:13,070 --> 00:05:16,010
Svo skulum gera þetta svolítið
aðeins meira notendavænt

96
00:05:16,010 --> 00:05:18,390
og gefa notandanum a lítill
aðeins meira um

97
00:05:18,390 --> 00:05:20,510
af því sem við erum að vekur þá til.

98
00:05:20,510 --> 00:05:24,500
Svo skulum hvetja notandann, fyrir að
sérstakur, með band mínútur.

99
00:05:24,500 --> 00:05:28,935
Svo nota printf fullyrðingar þínar, gera
viss um að þú passa þetta einmitt.

100
00:05:28,935 --> 00:05:30,230
>> Allt í lagi.

101
00:05:30,230 --> 00:05:33,840
Svo nú höfum gilt notanda
inntak, jákvæða heiltölu

102
00:05:33,840 --> 00:05:37,400
gildi fyrir hversu margar mínútur
þeir eyddu í sturtu.

103
00:05:37,400 --> 00:05:41,300
Svo er það næsta er að reikna
sem nemur fjölda flaskna.

104
00:05:41,300 --> 00:05:45,250
Það sem við erum að fara að gera hér gæti
vera mjög augljóst að þér í fyrstu,

105
00:05:45,250 --> 00:05:46,640
og það er allt í lagi.

106
00:05:46,640 --> 00:05:49,320
Það sem við viljum gera er að við
langar að byrja að æfa

107
00:05:49,320 --> 00:05:53,810
hugmyndin um að greina mynstur og
þróa formúlur fyrir vandamálinu.

108
00:05:53,810 --> 00:05:57,200
>> Þannig að við erum sagði á sérstakur
sem eina mínútu í sturtu

109
00:05:57,200 --> 00:05:59,960
jafngildir um það bil
12 flöskur af vatni.

110
00:05:59,960 --> 00:06:03,020
Svo þá tvær mínútur myndi
jafngilda 24,

111
00:06:03,020 --> 00:06:05,850
og fimm mínútur vildi
jafngilda 60.

112
00:06:05,850 --> 00:06:08,390
Svo nú ef þú heldur
þú hefur fengið það, þá skulum

113
00:06:08,390 --> 00:06:10,390
sjá hvort þú getur komið upp
með mynstri eða formúlu

114
00:06:10,390 --> 00:06:14,990
til að tjá hvort við höfum sagt, n
mínútur, hversu margar flöskur af vatni

115
00:06:14,990 --> 00:06:17,930
væri að setja fram með tilliti til n?

116
00:06:17,930 --> 00:06:20,680
>> Aftur, jafnvel þótt það
gæti verið einfalt í fyrstu,

117
00:06:20,680 --> 00:06:23,240
seinna þegar við komum til
flóknari vandamál

118
00:06:23,240 --> 00:06:26,360
við erum að fara til að vilja komast í
iðkun skilgreina

119
00:06:26,360 --> 00:06:30,120
mynstur og þróa formúlur
að reikna þetta út.

120
00:06:30,120 --> 00:06:33,450
>> Í c þú hefur aðgang að
staðall reikniaðgerðum,

121
00:06:33,450 --> 00:06:36,520
viðbót, frádráttur,
margföldun og deilingu.

122
00:06:36,520 --> 00:06:38,420
Svo ég ætla að láta hana í
þú nú að reikna út

123
00:06:38,420 --> 00:06:41,300
hvernig á að tjá
jafngildir fjölda flaskna

124
00:06:41,300 --> 00:06:43,990
sem notandi neytt
meðan sturtu þeirra.

125
00:06:43,990 --> 00:06:45,700
>> Allt í lagi, við erum næstum búin.

126
00:06:45,700 --> 00:06:50,650
Við höfum beðið notandann um inntak þeirra,
við höfum tryggt að það er gild inntak,

127
00:06:50,650 --> 00:06:53,330
og þá höfum við mynstrağur út hvernig
að reikna út hvað

128
00:06:53,330 --> 00:06:55,480
fjölda flaskna sem þeir neytt.

129
00:06:55,480 --> 00:06:59,430
Svo síðastur hlutur að gera er að framleiðsla
sem nemur fjölda flaskna

130
00:06:59,430 --> 00:07:02,410
og vonandi hvetja
þá til að vernda smá vatn.

131
00:07:02,410 --> 00:07:06,270
>> Outputting gildi verður
vera printf yfirlýsingu.

132
00:07:06,270 --> 00:07:09,720
Ef ég vildi segja þér að ég
hafa þrjú gæludýr, til dæmis,

133
00:07:09,720 --> 00:07:13,090
Ég gæti notað printf yfirlýsingu
sem lítur eitthvað eins og this.

134
00:07:13,090 --> 00:07:15,880
Ég hef þrjár gæludýr, og ný
lína fyrir gott formatting.

135
00:07:15,880 --> 00:07:17,880
>> Nú erum við viljum ekki að
einfaldlega erfitt kóða hluti.

136
00:07:17,880 --> 00:07:20,740
Segja fjölda minn
gæludýr breytist með tímanum.

137
00:07:20,740 --> 00:07:25,080
Þá ætla ég að nýta
Staðgenglar í yfirlýsingu printf mínum.

138
00:07:25,080 --> 00:07:27,350
Svo hér númerið mitt er heiltala.

139
00:07:27,350 --> 00:07:31,480
Þannig að ég ætla að gera tákn
til heiltala með% i.

140
00:07:31,480 --> 00:07:33,930
Ég ætla að skrifa band,
og þá eftir strengnum

141
00:07:33,930 --> 00:07:38,000
Ég skrifa kommu og síðan
breyta sem ég vil prenta.

142
00:07:38,000 --> 00:07:42,730
Svo sem gildi verður prentað
í stað þess tákn,% i.

143
00:07:42,730 --> 00:07:47,630
>> Þú getur notað staðgengla, sem
vel, að fljóta með% f.

144
00:07:47,630 --> 00:07:50,420
Þú getur einnig hafa margar
Staðgenglar í streng.

145
00:07:50,420 --> 00:07:53,950
Til dæmis, ef ég hef einhvern fjölda
hundum og sumir tala af ketti,

146
00:07:53,950 --> 00:07:59,210
Ég setti tvær staðgengla hér og þá
tvær breytur mínir í viðkomandi röð.

147
00:07:59,210 --> 00:08:03,130
>> Svo nú er að við vitum hvernig á að prenta
gildin eru geymdar í breytum,

148
00:08:03,130 --> 00:08:06,030
mjög síðasta sem að
gera er að tryggja að við

149
00:08:06,030 --> 00:08:10,920
prenta gildi í nákvæmlega sniði
fram í útboðsskilmálum.

150
00:08:10,920 --> 00:08:14,990
Með þessi, höfum við beðið um
notandi og fullgilt inntak þeirra.

151
00:08:14,990 --> 00:08:17,920
Við höfum síðan reiknaður jafnvirði
Fjöldi flöskur af vatni

152
00:08:17,920 --> 00:08:22,100
að þeir neyta á meðan sturtu þeirra,
og við höfum outputted þessi gildi til þeirra.

153
00:08:22,100 --> 00:08:24,440
Og svo höfum við lokið vatni.

154
00:08:24,440 --> 00:08:28,730
>> Ég heiti [? Zamila,?]
og þetta er CS50.

155
00:08:28,730 --> 00:08:29,909

