1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
SPEAKER 1: Räägime vett.

3
00:00:01,960 --> 00:00:07,280
Selle probleemi palume kasutajal öelda
meil kaua minutit oma dušš oli

4
00:00:07,280 --> 00:00:11,040
ja siis me arvutada samaväärne
arvu pudelit vett

5
00:00:11,040 --> 00:00:12,970
et nende dušš kasutada.

6
00:00:12,970 --> 00:00:16,379
>> Millised on meie Ülesanded
Selle probleemi?

7
00:00:16,379 --> 00:00:20,050
Esiteks, me ei kavatse taha
kiire ja siis kinnitada

8
00:00:20,050 --> 00:00:22,100
sisend, et kasutaja annab meile.

9
00:00:22,100 --> 00:00:24,790
Kui me tagada, et me
on kehtiv kasutaja sisend,

10
00:00:24,790 --> 00:00:28,230
läheme arvutada
vastav arv pudelit vett

11
00:00:28,230 --> 00:00:30,770
et kasutaja jooksul olnud
oma dušš ja siis me oleme

12
00:00:30,770 --> 00:00:33,720
ütlen neile
väljatrükk, et number.

13
00:00:33,720 --> 00:00:37,230
>> Nii saab lahendada meie esimene
ülesanne, mis sunnib ja heakskiitmine

14
00:00:37,230 --> 00:00:38,550
kasutaja sisend.

15
00:00:38,550 --> 00:00:40,910
Sel oleme kirjutanud
funktsioon te helistasite

16
00:00:40,910 --> 00:00:43,950
get_int asub CS50 raamatukogu.

17
00:00:43,950 --> 00:00:48,710
get_int tagab, et kasutaja sisendite
täisarv, nii et kõik positiivsed arvud,

18
00:00:48,710 --> 00:00:51,700
negatiivsete numbrite või
null on kõik heaks.

19
00:00:51,700 --> 00:00:55,900
Aga kui kasutaja sisestab midagi muud,
nii et kõik tähtedest või numbritest

20
00:00:55,900 --> 00:00:59,710
või koma numbrid, siis
kasutaja palutakse uuesti

21
00:00:59,710 --> 00:01:04,319
ja funktsiooni ei võta midagi
kuni kasutaja annab neile täisarv.

22
00:01:04,319 --> 00:01:06,410
>> Niisiis, kuidas me kasutame get_int?

23
00:01:06,410 --> 00:01:10,830
Kui avad oma tööruumi ja
luua faili nimega integer.c olgem

24
00:01:10,830 --> 00:01:12,110
kirjuta järgmine.

25
00:01:12,110 --> 00:01:14,760
Teemav hulka cs50.h.

26
00:01:14,760 --> 00:01:18,480
See on vajalik, sest get_int
on CS50 raamatukogu funktsiooni,

27
00:01:18,480 --> 00:01:21,890
nii et me peame räsimärgi hulka
deklaratsioonis, et

28
00:01:21,890 --> 00:01:23,370
kasutada funktsiooni.

29
00:01:23,370 --> 00:01:26,570
Ja siis minu peamine
toimida Ma lihtsalt

30
00:01:26,570 --> 00:01:29,560
lihtsalt helistada funktsioon get_int.

31
00:01:29,560 --> 00:01:31,750
>> Nii saab käivitada ja vaata, kuidas see toimib.

32
00:01:31,750 --> 00:01:35,092
Olen juba koostatud, nii olgem
lihtsalt minna ja käivitada see programm,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Siin on mul kiire ja
siin, kus ma sisend väärtus.

35
00:01:39,880 --> 00:01:44,880
Ütle panin lihtsalt mingi täisarvu,
50, programm välja arvatud järgmised ja sulgub

36
00:01:44,880 --> 00:01:45,960
ja ongi nii.

37
00:01:45,960 --> 00:01:49,350
>> Aga öelda, et ma joosta see uuesti ja
Ma sisend midagi muud.

38
00:01:49,350 --> 00:01:51,350
Võib-olla, tere.

39
00:01:51,350 --> 00:01:55,660
See ei ole täisarv nii
Programm küsib mind uuesti proovida.

40
00:01:55,660 --> 00:01:59,160
Proovime uuesti
võibolla kohaga seekord.

41
00:01:59,160 --> 00:02:03,450
0,5, jällegi mitte täisarv nii
programm ei aktsepteeri seda

42
00:02:03,450 --> 00:02:05,290
ja siis see mulle uuesti proovida.

43
00:02:05,290 --> 00:02:07,070
Nii saab anda sellele teisele numbrile.

44
00:02:07,070 --> 00:02:09,830
Programm aktsepteerib seda,
sulgub ja ongi kõik.

45
00:02:09,830 --> 00:02:13,520
>> Nüüd on meil funktsioon
mis võimaldab meil ning tagab

46
00:02:13,520 --> 00:02:16,790
et sisendab kasutaja
täisarv, kuid kuidas me saame

47
00:02:16,790 --> 00:02:20,330
tegelikult jälgida
täisarv sisestatud kasutaja poolt?

48
00:02:20,330 --> 00:02:25,260
Noh, kõik me teeme on poest
See väärtus muutuja, ütlevad n.

49
00:02:25,260 --> 00:02:30,580
Nii et kui ma kuulutada täisarv n,
ja seadsin, et väärtus get_int,

50
00:02:30,580 --> 00:02:34,700
siis n siis salvestada mida iganes
Väärtustame kasutaja sisestatud.

51
00:02:34,700 --> 00:02:38,620
>> Olgu, nii et nüüd oleme taganud
kasutaja annab meile täisarv

52
00:02:38,620 --> 00:02:42,550
ja me teame, kuidas jälgida
täisarv, kuid pea meeles,

53
00:02:42,550 --> 00:02:45,610
täisarvud on nii positiivseid kui ka negatiivseid.

54
00:02:45,610 --> 00:02:49,110
Nii et see ei ole tegelikult mõtet
kontekstis seda probleemi

55
00:02:49,110 --> 00:02:53,570
et kasutaja võtab dušš
kohta öelda negatiivsed 12 minutit.

56
00:02:53,570 --> 00:02:59,310
Seega on meil vaja veenduda, et kasutaja
tegelikult annab meile positiivne täisarv.

57
00:02:59,310 --> 00:03:02,130
Nüüd ei ole meil lihtsalt
ühe funktsiooni jaoks, et

58
00:03:02,130 --> 00:03:04,620
nii et me lähed on
luua, et end.

59
00:03:04,620 --> 00:03:07,190
>> Nii et me tahame pidevalt
palub kasutajal

60
00:03:07,190 --> 00:03:09,730
kuni nad annavad meile positiivne täisarv.

61
00:03:09,730 --> 00:03:14,300
Kui ma teen midagi pidevalt siis
see on sarnane loop, kordus.

62
00:03:14,300 --> 00:03:19,130
Nii üks konstruktsioone, mida me kasutame
C rakendada kordamine ja silmad

63
00:03:19,130 --> 00:03:20,410
on samas silmus.

64
00:03:20,410 --> 00:03:23,020
Nii samas silmus, nagu
Siin näidatakse, siis täidab

65
00:03:23,020 --> 00:03:27,030
kõik, mis on keha loop
Niikaua kui antud seisundi hindab

66
00:03:27,030 --> 00:03:27,900
tõeseks.

67
00:03:27,900 --> 00:03:30,640
Niipea, kui see tingimus
hindab vale, siis

68
00:03:30,640 --> 00:03:34,830
programm jätkab iganes
tuleb pärast keha silmus.

69
00:03:34,830 --> 00:03:39,400
>> Niisiis, kui silmad hakkavad
tõesti kasulik CS50.

70
00:03:39,400 --> 00:03:42,590
Aga selles konkreetses
Juhul, me teame, et me oleme

71
00:03:42,590 --> 00:03:48,140
läheb palub kasutajal vähemalt
üks kord ja siis alles loop kui vaja.

72
00:03:48,140 --> 00:03:51,080
Nii et siin jõuame
erilist konstruktsiooni ja see on

73
00:03:51,080 --> 00:03:55,020
väga sarnane samas
loop nimetatakse do-samas silmus.

74
00:03:55,020 --> 00:03:58,840
>> Nii do-samas silmus täidab
keha silmus vähemalt kord

75
00:03:58,840 --> 00:04:01,750
ja siis kontrollib,
kas see peaks rahuldama,

76
00:04:01,750 --> 00:04:05,310
vastandina samas silmus,
mis seisundi kontrollimiseks

77
00:04:05,310 --> 00:04:07,200
ja seejärel käivitada keha.

78
00:04:07,200 --> 00:04:11,880
Nii do-samas silmus, mida me võiksime
teha on kiire kasutaja jaoks täisarv,

79
00:04:11,880 --> 00:04:14,450
ja siis vaadata, kas see on vale või mitte.

80
00:04:14,450 --> 00:04:18,130
Kui see on vale, siis me
korrake protsessi küsib kasutaja

81
00:04:18,130 --> 00:04:22,290
annab meile teise täisarv, ja seejärel
ainult siis, kui täisarv on kehtiv,

82
00:04:22,290 --> 00:04:25,060
jätkame
iganes on hiljem.

83
00:04:25,060 --> 00:04:28,030
>> Nüüd näed, et
deklaratsiooni täisarv n

84
00:04:28,030 --> 00:04:31,670
on veidi teistsugune, mida me
tegid enne eelmises näites

85
00:04:31,670 --> 00:04:33,640
ja see on, sest ulatus.

86
00:04:33,640 --> 00:04:37,920
Kui olime kuulutas täisarv n sees
kere do-samas silmus,

87
00:04:37,920 --> 00:04:42,640
siis me ei pääse
et n väärtus väljaspool neid lokkis

88
00:04:42,640 --> 00:04:45,050
traksid näitab keha silmus.

89
00:04:45,050 --> 00:04:51,080
Aga me tegelikult tahame, et pääseda
n väärtus hiljem ka meie programmi.

90
00:04:51,080 --> 00:04:55,730
>> OK, nii et nüüd räägime
mida see tingimus peaks olema.

91
00:04:55,730 --> 00:05:00,400
Me tahame ainult reprompt
kasutaja niikaua n on kehtetu.

92
00:05:00,400 --> 00:05:04,640
Nii et mõtle ise, mida kehtetu
täisarvuni näeks

93
00:05:04,640 --> 00:05:08,060
ja seejärel luua loogilisi
Väljend väljendada seda.

94
00:05:08,060 --> 00:05:13,070
>> Me peaaegu valmis meie Alamülesande
ergutada ja valideerida kasutaja sisend.

95
00:05:13,070 --> 00:05:16,010
Nii saab teha seda veidi
natuke kasutajasõbralikumaks

96
00:05:16,010 --> 00:05:18,390
ja annab kasutajale vähe
natuke rohkem infot

97
00:05:18,390 --> 00:05:20,510
mida me sundides neid.

98
00:05:20,510 --> 00:05:24,500
Nii saab kiire kasutaja, ühe
spec, string minutit.

99
00:05:24,500 --> 00:05:28,935
Nii kasutades oma printf avaldusi teha
kindel, et sa mängu see täpselt.

100
00:05:28,935 --> 00:05:30,230
>> Hästi.

101
00:05:30,230 --> 00:05:33,840
Nüüd on meil kehtiv kasutaja
sisend, positiivne täisarv

102
00:05:33,840 --> 00:05:37,400
hinna ja mitu minutit
Nad veetsid duši all.

103
00:05:37,400 --> 00:05:41,300
Mis siis järgmiseks on arvutada
samaväärne pudelite arv.

104
00:05:41,300 --> 00:05:45,250
Mis me teeme siin võiks
väga selge teile alguses,

105
00:05:45,250 --> 00:05:46,640
ja see on OK.

106
00:05:46,640 --> 00:05:49,320
Mida me tahame teha, on meil
taha harjutama

107
00:05:49,320 --> 00:05:53,810
idee eristusmustrit ja
arendada valemid probleem.

108
00:05:53,810 --> 00:05:57,200
>> Nii et me rääkinud ühe spec
et üks minut duši all

109
00:05:57,200 --> 00:05:59,960
vastab umbes
12 pudelit vett.

110
00:05:59,960 --> 00:06:03,020
Nii siis kaks minutit oleks
võrduma 24,

111
00:06:03,020 --> 00:06:05,850
ja viie minuti oleks
võrduma 60.

112
00:06:05,850 --> 00:06:08,390
Nüüd, kui te arvate
sul seda, siis olgem

113
00:06:08,390 --> 00:06:10,390
vaadake, kas saate tulla
muster või valem

114
00:06:10,390 --> 00:06:14,990
väljendada, kui me oleme öelda, n
minutit, kui palju pudelit vett

115
00:06:14,990 --> 00:06:17,930
oleks, et väljendada n?

116
00:06:17,930 --> 00:06:20,680
>> Jällegi, kuigi see
võib olla lihtne esimesel,

117
00:06:20,680 --> 00:06:23,240
hiljem, kui saame
keerulisem probleeme

118
00:06:23,240 --> 00:06:26,360
me ei kavatse taha sattuda
tava kindlakstegemise

119
00:06:26,360 --> 00:06:30,120
mustrid ja arendada valemid
et need ise välja selgitama.

120
00:06:30,120 --> 00:06:33,450
>> C teil on juurdepääs
standard tehteid,

121
00:06:33,450 --> 00:06:36,520
liitmine, lahutamine,
korrutamine ja jagamine.

122
00:06:36,520 --> 00:06:38,420
Nii et ma jätan
sa nüüd aru saada,

123
00:06:38,420 --> 00:06:41,300
kuidas väljendada
samaväärne pudelite arv

124
00:06:41,300 --> 00:06:43,990
et kasutaja tarbitakse
ajal dušš.

125
00:06:43,990 --> 00:06:45,700
>> Olgu, me peaaegu valmis.

126
00:06:45,700 --> 00:06:50,650
Meil küsitakse kasutaja nende panuse eest,
oleme taganud, et see kehtib sisend,

127
00:06:50,650 --> 00:06:53,330
ja siis me oleme aru saanud, kuidas
ekvivalendi arvestamiseks

128
00:06:53,330 --> 00:06:55,480
pudelite arv, et nad tarbida.

129
00:06:55,480 --> 00:06:59,430
Nii et viimane asi, mida teha on väljund
samaväärne pudelite arv

130
00:06:59,430 --> 00:07:02,410
ja loodetavasti
neid säilitada vett.

131
00:07:02,410 --> 00:07:06,270
>> Väljundis väärtus
olla printf avalduse.

132
00:07:06,270 --> 00:07:09,720
Kui ma tahtsin öelda, et ma
kolm lemmikloomad, näiteks

133
00:07:09,720 --> 00:07:13,090
Ma võiks kasutada printf avalduse
mis näeb välja midagi sellist.

134
00:07:13,090 --> 00:07:15,880
Mul on kolm lemmikloomad ja uus
rida kena formaati.

135
00:07:15,880 --> 00:07:17,880
>> Nüüd me ei taha
lihtsalt kõva kood asju.

136
00:07:17,880 --> 00:07:20,740
Ütle arv minu
pets ajas muutuv.

137
00:07:20,740 --> 00:07:25,080
Siis ma lähen ära kasutama
kohatäitjaid minu printf avalduse.

138
00:07:25,080 --> 00:07:27,350
Nii et siin minu number on täisarv.

139
00:07:27,350 --> 00:07:31,480
Nii et ma lähen tegema kohatäide
täisarvu kasutades% i.

140
00:07:31,480 --> 00:07:33,930
Ma lähen kirjutada string,
ja siis pärast string

141
00:07:33,930 --> 00:07:38,000
Ma kirjutan koma ja siis
muutuja, mis ma tahan printida.

142
00:07:38,000 --> 00:07:42,730
Nii, et väärtus trükitakse
asemel, et kohatäide,% i.

143
00:07:42,730 --> 00:07:47,630
>> Te võite kasutada kohatäitjaid, kui
noh, ujukid koos% f.

144
00:07:47,630 --> 00:07:50,420
Võite olla mitu
kohahoidjate string.

145
00:07:50,420 --> 00:07:53,950
Näiteks, kui mul on mõned number
koerte ja mõned kasside arv,

146
00:07:53,950 --> 00:07:59,210
Panin kaks kohatäitjaid siin ja siis
minu kaks muutujad vastavas järjekorras.

147
00:07:59,210 --> 00:08:03,130
>> Nüüd, kui me teame, kuidas printida
salvestatud väärtused muutujate

148
00:08:03,130 --> 00:08:06,030
kõige viimane asi, mida
teha, on tagada, et me

149
00:08:06,030 --> 00:08:10,920
print väärtus täpselt formaadis
tehnilises kirjelduses märgitud.

150
00:08:10,920 --> 00:08:14,990
Seda oleme ajendas
kasutaja ja valideeritud oma panuse.

151
00:08:14,990 --> 00:08:17,920
Me oleme siis arvutatakse ekvivalentne
arvu pudelit vett

152
00:08:17,920 --> 00:08:22,100
et nad tarbivad ajal dušš,
ja me oleme väljastada et väärtus neile.

153
00:08:22,100 --> 00:08:24,440
Ja nii oleme valmis vett.

154
00:08:24,440 --> 00:08:28,730
>> Minu nimi on [? Zamila,?]
ja see on CS50.

155
00:08:28,730 --> 00:08:29,909

