1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
COLUMNA 1: Imos falar sobre a auga.

3
00:00:01,960 --> 00:00:07,280
Neste problema, pedimos ao usuario informar
-Nos canto tempo en minutos o ducha era

4
00:00:07,280 --> 00:00:11,040
e entón nós o cálculo do equivalente
número de botellas de auga

5
00:00:11,040 --> 00:00:12,970
que o seu ducha usado.

6
00:00:12,970 --> 00:00:16,379
>> Entón, cales son os nosos quefaceres
a este problema?

7
00:00:16,379 --> 00:00:20,050
En primeiro lugar, imos querer
para solicitar e logo, validar

8
00:00:20,050 --> 00:00:22,100
a entrada ao usuario dános.

9
00:00:22,100 --> 00:00:24,790
Unha vez que temos o coidado de
ter a entrada de usuario válido,

10
00:00:24,790 --> 00:00:28,230
imos calcular o
número equivalente de botellas de auga

11
00:00:28,230 --> 00:00:30,770
que o usuario tivo durante
seu ducha, e entón nós estamos

12
00:00:30,770 --> 00:00:33,720
vai dicir a eles por
imprimindo a ese número.

13
00:00:33,720 --> 00:00:37,230
>> Entón, imos afrontar o noso primeiro
tarefa, o que levou e validando

14
00:00:37,230 --> 00:00:38,550
a entrada do usuario.

15
00:00:38,550 --> 00:00:40,910
Para iso, ten escribiu un
función para ti chamado

16
00:00:40,910 --> 00:00:43,950
get_int situado na Biblioteca CS50.

17
00:00:43,950 --> 00:00:48,710
get_int asegura que as entradas de usuarios
un enteiro, entón todos os números positivos,

18
00:00:48,710 --> 00:00:51,700
números negativos, ou
cero son todos aceptados.

19
00:00:51,700 --> 00:00:55,900
Pero se o usuario inserir calquera outra cousa,
polo tanto, calquera combinación de letras ou números

20
00:00:55,900 --> 00:00:59,710
ou números decimais, a continuación, o
usuario será solicitada para repetir

21
00:00:59,710 --> 00:01:04,319
ea función non aceptar calquera cousa
ata que o usuario dálles un número enteiro.

22
00:01:04,319 --> 00:01:06,410
>> Entón, como imos usar get_int?

23
00:01:06,410 --> 00:01:10,830
Se abre o seu espazo de traballo e
crear un arquivo chamado integer.c imos

24
00:01:10,830 --> 00:01:12,110
escriba o seguinte.

25
00:01:12,110 --> 00:01:14,760
Hashtag inclúen cs50.h.

26
00:01:14,760 --> 00:01:18,480
Isto é preciso porque get_int
é unha función de biblioteca CS50,

27
00:01:18,480 --> 00:01:21,890
por iso debemos hashtag inclúen
súa declaración, a fin

28
00:01:21,890 --> 00:01:23,370
usar a función.

29
00:01:23,370 --> 00:01:26,570
E entón, na miña principal
funcionar Eu só vou

30
00:01:26,570 --> 00:01:29,560
simplemente chamar a función get_int.

31
00:01:29,560 --> 00:01:31,750
>> Entón, imos rodar e ver como funciona.

32
00:01:31,750 --> 00:01:35,092
Eu xa compilado-lo, entón imos
dalle realizar este programa,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Aquí eu teño un prompt e
aquí é onde eu introducir o valor.

35
00:01:39,880 --> 00:01:44,880
Digamos que eu coloque en só un enteiro,
50, a excepts programa e sae

36
00:01:44,880 --> 00:01:45,960
e que é iso.

37
00:01:45,960 --> 00:01:49,350
>> Pero digamos que eu executa-lo novo e
I entrada de outra cousa.

38
00:01:49,350 --> 00:01:51,350
Quizais, Ola mundo.

39
00:01:51,350 --> 00:01:55,660
Isto non é un número enteiro de xeito que o
programa pode pedir-me para tentar de novo.

40
00:01:55,660 --> 00:01:59,160
Imos tentar de novo con
quizais un decimal este tempo.

41
00:01:59,160 --> 00:02:03,450
0,5, de novo, un número enteiro non tan
o programa non pode acepta-la

42
00:02:03,450 --> 00:02:05,290
e que vai dicir-me para tentar de novo.

43
00:02:05,290 --> 00:02:07,070
Entón, imos darlle outro número.

44
00:02:07,070 --> 00:02:09,830
O programa acepta,
sae, e estamos a facer.

45
00:02:09,830 --> 00:02:13,520
>> Polo tanto, agora temos unha función
que nos permite e garante

46
00:02:13,520 --> 00:02:16,790
que o usuario introduce un
enteiro, pero como podemos

47
00:02:16,790 --> 00:02:20,330
realmente manter o control do
integer introducidos polo usuario?

48
00:02:20,330 --> 00:02:25,260
Ben, todos nós imos facer é tenda
este valor nunha variable, digamos, n.

49
00:02:25,260 --> 00:02:30,580
Entón, se eu declarar un enteiro n,
e eu definir ese valor para get_int,

50
00:02:30,580 --> 00:02:34,700
entón n, entón, almacenar calquera
valor que o usuario inserido.

51
00:02:34,700 --> 00:02:38,620
>> Todo ben, entón agora temos asegurado que
o usuario vai dar un enteiro

52
00:02:38,620 --> 00:02:42,550
e sabemos como manter o control
do enteiro, pero lembre,

53
00:02:42,550 --> 00:02:45,610
enteiros son tanto positivas como negativas.

54
00:02:45,610 --> 00:02:49,110
Polo tanto, non ten moito sentido
no contexto deste problema

55
00:02:49,110 --> 00:02:53,570
que o usuario toma un baño
de dicir negativo de 12 minutos.

56
00:02:53,570 --> 00:02:59,310
Por iso, cómpre asegurarse de que o usuario
realmente nos dá un enteiro positivo.

57
00:02:59,310 --> 00:03:02,130
Agora non temos só un
función única para iso,

58
00:03:02,130 --> 00:03:04,620
polo que teremos
para crear ese nós mesmos.

59
00:03:04,620 --> 00:03:07,190
>> Por iso, queremos continuamente
solicitar ao usuario

60
00:03:07,190 --> 00:03:09,730
ata que nos dan un enteiro positivo.

61
00:03:09,730 --> 00:03:14,300
Se eu estou facendo algo de forma continua, logo
que é semellante a un loop, unha repetición.

62
00:03:14,300 --> 00:03:19,130
Polo tanto, unha das construcións que usan
no c para aplicar repetición e voltas

63
00:03:19,130 --> 00:03:20,410
é un loop while.

64
00:03:20,410 --> 00:03:23,020
Así, un loop while, como
mostra aquí, executará

65
00:03:23,020 --> 00:03:27,030
o que está no corpo do lazo como
sempre que os datos avalía a condición

66
00:03:27,030 --> 00:03:27,900
para true.

67
00:03:27,900 --> 00:03:30,640
Así que esta condición
avalía a falsa, entón

68
00:03:30,640 --> 00:03:34,830
o programa continuar o que quere que
vén despois do corpo do ciclo.

69
00:03:34,830 --> 00:03:39,400
>> Así, mentres lazos van
ser realmente útil en CS50.

70
00:03:39,400 --> 00:03:42,590
Pero, neste particular,
caso, sabemos que estamos

71
00:03:42,590 --> 00:03:48,140
indo para solicitar ao usuario, polo menos,
xa e só entón circuíto, se é necesario.

72
00:03:48,140 --> 00:03:51,080
Entón, aquí chegamos a un
construción especial e iso é

73
00:03:51,080 --> 00:03:55,020
moi semellante ao mentres
circuíto chamado bucle do-while.

74
00:03:55,020 --> 00:03:58,840
>> Entón bucle do-while executa o
corpo do lazo, polo menos, unha vez

75
00:03:58,840 --> 00:04:01,750
e, a continuación, el verifica a ver
se debe realizar,

76
00:04:01,750 --> 00:04:05,310
en oposición a unha ansa de tempo,
que pode comprobar a condición

77
00:04:05,310 --> 00:04:07,200
e, a continuación, realizar o corpo.

78
00:04:07,200 --> 00:04:11,880
Así, nun bucle do-while que poderiamos
facer é pedir ao usuario a un número enteiro,

79
00:04:11,880 --> 00:04:14,450
e despois comprobar que é válido ou non.

80
00:04:14,450 --> 00:04:18,130
De ser válido, entón nós imos
Repita o proceso pedindo ao usuario

81
00:04:18,130 --> 00:04:22,290
para dar outro enteiro, e logo
só cando este completo é válido,

82
00:04:22,290 --> 00:04:25,060
seguiremos
o que vén despois.

83
00:04:25,060 --> 00:04:28,030
>> Agora notará que a
declaración do enteiro n

84
00:04:28,030 --> 00:04:31,670
é lixeiramente diferente do que
fixo antes no exemplo anterior

85
00:04:31,670 --> 00:04:33,640
e iso é debido ao alcance.

86
00:04:33,640 --> 00:04:37,920
Se tivésemos declarado o enteiro n dentro
do corpo do lazo do-tempo,

87
00:04:37,920 --> 00:04:42,640
non sería capaz de acceder
que o valor de n do lado de fóra dos rizado

88
00:04:42,640 --> 00:04:45,050
cintas que indica o corpo do lazo.

89
00:04:45,050 --> 00:04:51,080
Pero de feito quere acceder ao
valor de n, máis tarde, o noso programa.

90
00:04:51,080 --> 00:04:55,730
>> OK, entón agora imos falar sobre
o que esta condición debe ser.

91
00:04:55,730 --> 00:05:00,400
Queremos Reprompt só o
usuario, sempre que n é válido.

92
00:05:00,400 --> 00:05:04,640
Entón, pensar a si mesmo que un inválido
valor enteiro sería semellante

93
00:05:04,640 --> 00:05:08,060
e despois crear un booleano
expresión para expresalo.

94
00:05:08,060 --> 00:05:13,070
>> Estamos case a acabar coa nosa subtask
de solicitar e validar a entrada do usuario.

95
00:05:13,070 --> 00:05:16,010
Entón, imos facelo un pouco
pouco máis agradable

96
00:05:16,010 --> 00:05:18,390
e dar ao usuario un pouco
pouco máis de información

97
00:05:18,390 --> 00:05:20,510
do que estamos levando-os para.

98
00:05:20,510 --> 00:05:24,500
Polo tanto, imos pedir ao usuario, polo
spec, cos minutos de cordas.

99
00:05:24,500 --> 00:05:28,935
Entón, usando as súas declaracións printf, facer
Asegúrese de que combinar iso exactamente.

100
00:05:28,935 --> 00:05:30,230
>> Todo ben.

101
00:05:30,230 --> 00:05:33,840
Polo tanto, agora temos un usuario válido
de entrada, un número enteiro positivo

102
00:05:33,840 --> 00:05:37,400
valor para cantos minutos
pasaron na ducha.

103
00:05:37,400 --> 00:05:41,300
Entón, o que vén a continuación é calcular
o número equivalente de botellas.

104
00:05:41,300 --> 00:05:45,250
O que imos facer aquí pode
ser moi evidente para ti en primeiro lugar,

105
00:05:45,250 --> 00:05:46,640
e iso é OK.

106
00:05:46,640 --> 00:05:49,320
O que queremos facer é que
Quere comezar a practicar

107
00:05:49,320 --> 00:05:53,810
a idea de detección de patróns e
desenvolvemento de fórmulas para o problema.

108
00:05:53,810 --> 00:05:57,200
>> Entón, nós estamos dixo por especificación
que un minuto no baño

109
00:05:57,200 --> 00:05:59,960
equivale a uns
12 botellas de auga.

110
00:05:59,960 --> 00:06:03,020
Entón, a continuación, dous minutos faría
ser equivalente a 24,

111
00:06:03,020 --> 00:06:05,850
e cinco minutos sería
ser equivalente a 60.

112
00:06:05,850 --> 00:06:08,390
Polo tanto, agora se pensa
ten iso, entón imos

113
00:06:08,390 --> 00:06:10,390
vexa se pode vir cara arriba
con un nivel ou fórmula

114
00:06:10,390 --> 00:06:14,990
para expresar se temos que dicir, n
minutos, cantas botellas de auga

115
00:06:14,990 --> 00:06:17,930
tería que ser expresada en termos de n?

116
00:06:17,930 --> 00:06:20,680
>> Unha vez máis, aínda que esta
Pode ser simple na primeira,

117
00:06:20,680 --> 00:06:23,240
máis tarde, cando comezamos a
problemas máis complicados

118
00:06:23,240 --> 00:06:26,360
imos querer entrar
a práctica de identificar

119
00:06:26,360 --> 00:06:30,120
patróns e fórmulas desenvolvemento
para descubrir iso.

120
00:06:30,120 --> 00:06:33,450
>> En c ten acceso a
operacións aritméticas estándar,

121
00:06:33,450 --> 00:06:36,520
suma, resta,
multiplicación e división.

122
00:06:36,520 --> 00:06:38,420
Entón eu vou deixar
agora descubrir

123
00:06:38,420 --> 00:06:41,300
como expresar o
número equivalente de botellas

124
00:06:41,300 --> 00:06:43,990
que o usuario consumiu
durante o seu ducha.

125
00:06:43,990 --> 00:06:45,700
>> Todo ben, estamos case rematando.

126
00:06:45,700 --> 00:06:50,650
Temos solicitado ao usuario para a súa entrada,
temos asegurado que é unha entrada válida,

127
00:06:50,650 --> 00:06:53,330
e, despois, descubrín como
para calcular o equivalente

128
00:06:53,330 --> 00:06:55,480
número de botellas que consumidos.

129
00:06:55,480 --> 00:06:59,430
Así, a última cousa que facer é para a saída
o número equivalente de botellas

130
00:06:59,430 --> 00:07:02,410
e esperamos fomentar
Los para conservar un pouco de auga.

131
00:07:02,410 --> 00:07:06,270
>> Producir o valor será
ser unha instrución printf.

132
00:07:06,270 --> 00:07:09,720
Se eu quería che dicir que eu
ter tres animais, por exemplo,

133
00:07:09,720 --> 00:07:13,090
Eu podería usar unha instrución printf
que é algo así.

134
00:07:13,090 --> 00:07:15,880
Teño tres animais, e unha nova
liña para formatar agradable.

135
00:07:15,880 --> 00:07:17,880
>> Agora nós non queremos
simplemente cousas de código ríxido.

136
00:07:17,880 --> 00:07:20,740
Din que o número do meu
animais cambia co tempo.

137
00:07:20,740 --> 00:07:25,080
Entón eu vou facer uso
espazos reservados na miña declaración printf.

138
00:07:25,080 --> 00:07:27,350
Entón aquí o meu número é un enteiro.

139
00:07:27,350 --> 00:07:31,480
Entón, eu vou facer un espazo reservado
para un enteiro usando% i.

140
00:07:31,480 --> 00:07:33,930
Eu estou indo a escribir a secuencia,
e logo, tras a cadea

141
00:07:33,930 --> 00:07:38,000
Eu escriba unha coma e, a continuación, o
variable que desexa imprimir.

142
00:07:38,000 --> 00:07:42,730
Así que o valor será impreso
en vez dese espazo reservado,% i.

143
00:07:42,730 --> 00:07:47,630
>> Podes usar espazos reservados, como
Ben, para flotadores cun% f.

144
00:07:47,630 --> 00:07:50,420
Tamén pode ter múltiples
espazos reservados nunha cadea.

145
00:07:50,420 --> 00:07:53,950
Por exemplo, se eu tivera algún número
de cans e un certo número de gatos,

146
00:07:53,950 --> 00:07:59,210
Coloque dous espazos reservados aquí e, a continuación,
miñas dúas variables na respectiva orde.

147
00:07:59,210 --> 00:08:03,130
>> Polo tanto, agora que sabemos como imprimir
os valores almacenados variables,

148
00:08:03,130 --> 00:08:06,030
o último a
facer é garantir que

149
00:08:06,030 --> 00:08:10,920
imprimir o valor en formato exacto
indicado na especificación.

150
00:08:10,920 --> 00:08:14,990
Con iso, temos levou o
usuario e validada a súa entrada.

151
00:08:14,990 --> 00:08:17,920
Temos entón calcular o equivalente
número de botellas de auga

152
00:08:17,920 --> 00:08:22,100
que consomen durante o seu ducha,
e temos emitido ese valor para eles.

153
00:08:22,100 --> 00:08:24,440
E así, nós completados auga.

154
00:08:24,440 --> 00:08:28,730
>> O meu nome é [? Zamila ,?]
e este é o CS50.

155
00:08:28,730 --> 00:08:29,909

