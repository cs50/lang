1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
Parolanto 1: Ni parolu pri akvo.

3
00:00:01,960 --> 00:00:07,280
En ĉi tiu problemo, ni petas la uzanto diri
ni kiom longe minutoj ilian duŝo estis

4
00:00:07,280 --> 00:00:11,040
kaj poste ni kalkulas la ekvivalenta
nombro de boteloj de akvo

5
00:00:11,040 --> 00:00:12,970
ke ilia duŝo uzata.

6
00:00:12,970 --> 00:00:16,379
>> Do kio estas niaj por-do la
por tiu problemo?

7
00:00:16,379 --> 00:00:20,050
Unue, ni tuj volas
suflori kaj validigi

8
00:00:20,050 --> 00:00:22,100
la enigo ke la uzanto donas al ni.

9
00:00:22,100 --> 00:00:24,790
Iam ni certigi ke ni
havas validan uzanto enigo,

10
00:00:24,790 --> 00:00:28,230
ni tuj kalkuli la
ekvivalenta nombro de boteloj de akvo

11
00:00:28,230 --> 00:00:30,770
ke la uzanto devis dum
ilia duŝo, kaj tiam ni

12
00:00:30,770 --> 00:00:33,720
tuj rakontos ilin per
presi el tiu nombro.

13
00:00:33,720 --> 00:00:37,230
>> Do ni pritraktas niajn unuajn
tasko, instigante kaj validigi

14
00:00:37,230 --> 00:00:38,550
la uzanto enigo.

15
00:00:38,550 --> 00:00:40,910
Por tio ni jam skribis
funkcio por vi nomas

16
00:00:40,910 --> 00:00:43,950
get_int lokita en la CS50 biblioteko.

17
00:00:43,950 --> 00:00:48,710
get_int certigas ke la uzanto enigas
entjero, tial ajna pozitiva nombro,

18
00:00:48,710 --> 00:00:51,700
negativaj nombroj, aŭ
nulo estas ĉiuj akceptis.

19
00:00:51,700 --> 00:00:55,900
Sed se la uzanto enigas io alia,
tiel ajna kombino de literoj aŭ numeroj

20
00:00:55,900 --> 00:00:59,710
aŭ decimalaj numeroj, tiam la
uzanto estos instigis al reprovi

21
00:00:59,710 --> 00:01:04,319
kaj la funkcio ne akceptos ion
ĝis la uzanto donas ilin entjero.

22
00:01:04,319 --> 00:01:06,410
>> Nu do kiel ni uzas get_int?

23
00:01:06,410 --> 00:01:10,830
Se vi malfermas vian laborspaca kaj
krei dosieron nomita integer.c ni

24
00:01:10,830 --> 00:01:12,110
tajpi la sekvan.

25
00:01:12,110 --> 00:01:14,760
Hashtag inkluzivas cs50.h.

26
00:01:14,760 --> 00:01:18,480
Tio estas necesa ĉar get_int
estas CS50 biblioteko funkcio,

27
00:01:18,480 --> 00:01:21,890
do ni devos hashtag inkluzivi
lia deklaro por

28
00:01:21,890 --> 00:01:23,370
uzi la funkcion.

29
00:01:23,370 --> 00:01:26,570
Kaj tiam en mia ĉefa
funkcii mi simple tuj

30
00:01:26,570 --> 00:01:29,560
simple nomas la funkcio get_int.

31
00:01:29,560 --> 00:01:31,750
>> Tiel ni kuras ĉi, kaj vidu kiel ĝi funkcias.

32
00:01:31,750 --> 00:01:35,092
Mi jam kompilis ĝin, do ni
simple iru antaŭen kaj kuri ĉi programo,

33
00:01:35,092 --> 00:01:36,480
./integer.

34
00:01:36,480 --> 00:01:39,880
Tie mi havas prompto kaj
jen kien mi enigo la valoro.

35
00:01:39,880 --> 00:01:44,880
Diru mi metis en nur iu entjero,
50, la programo excepts kaj malekas

36
00:01:44,880 --> 00:01:45,960
kaj tio estas ke.

37
00:01:45,960 --> 00:01:49,350
>> Sed diru min ruli ĝin denove kaj
Mi enigo io alia.

38
00:01:49,350 --> 00:01:51,350
Eble, saluton mondo.

39
00:01:51,350 --> 00:01:55,660
Tio ne entjero do la
programo estos instigas min reprovi.

40
00:01:55,660 --> 00:01:59,160
Ni provu denove kun
eble dekuma tiu tempo.

41
00:01:59,160 --> 00:02:03,450
0.5, denove, ne estas entjero tia
la programo ne akceptas ĝin

42
00:02:03,450 --> 00:02:05,290
kaj gxi diros min reprovi.

43
00:02:05,290 --> 00:02:07,070
Do ni donu alian numeron.

44
00:02:07,070 --> 00:02:09,830
La programo akceptas ĝin,
malekas, kaj ni faris.

45
00:02:09,830 --> 00:02:13,520
>> Do nun ni havas funkcion
kiu permesas kaj certigas

46
00:02:13,520 --> 00:02:16,790
ke la uzanto enigas
entjero, sed kiel povas ni

47
00:02:16,790 --> 00:02:20,330
fakte sekvigi la
entjera inputted de la uzanto?

48
00:02:20,330 --> 00:02:25,260
Nu, ĉiuj ni faros estas vendejo
tiun valoron en variablo, diru n.

49
00:02:25,260 --> 00:02:30,580
Do se mi deklaras entjero n,
kaj Mi permesis ke valoro al get_int,

50
00:02:30,580 --> 00:02:34,700
tiam n estos tiam stoki ajn
taksas la uzanto inputted.

51
00:02:34,700 --> 00:02:38,620
>> Bone, do nun ni certigis ke
la uzanto al ni entjero

52
00:02:38,620 --> 00:02:42,550
kaj ni scias kiel konservi trakon
de la entjero, sed memoru,

53
00:02:42,550 --> 00:02:45,610
entjeroj estas ambaŭ pozitivaj kaj negativaj.

54
00:02:45,610 --> 00:02:49,110
Do ne vere havas sencon
en la kunteksto de tiu problemo

55
00:02:49,110 --> 00:02:53,570
ke la uzanto duŝas
de diri negativajn 12 minutoj.

56
00:02:53,570 --> 00:02:59,310
Do ni bezonas por certigi ke la uzanto
fakte donas al ni pozitiva entjero.

57
00:02:59,310 --> 00:03:02,130
Nun ni ne havas nur
sola funkcio por tio,

58
00:03:02,130 --> 00:03:04,620
Do ni tuj devas
krei ke ni mem.

59
00:03:04,620 --> 00:03:07,190
>> Do ni volas kontinue
instigas la uzanton

60
00:03:07,190 --> 00:03:09,730
ĝis ili al ni pozitiva entjero.

61
00:03:09,730 --> 00:03:14,300
Se mi faras ion ade tiam
jen simila al banto, ripeto.

62
00:03:14,300 --> 00:03:19,130
Do unu el la konstruoj kiujn ni uzas
en c implementar ripeto kaj maŝojn

63
00:03:19,130 --> 00:03:20,410
Estas dum ciklo.

64
00:03:20,410 --> 00:03:23,020
Do dum buklo, kiel
montris tie, ekzekutos

65
00:03:23,020 --> 00:03:27,030
kiom estas en la korpo de la banto kiel
dum la donita kondiĉo taksas

66
00:03:27,030 --> 00:03:27,900
al vera.

67
00:03:27,900 --> 00:03:30,640
Kiam tiu kondiĉo
taksas al falsa, tiam

68
00:03:30,640 --> 00:03:34,830
la programo plue ajn
venas post la korpo de la ciklo.

69
00:03:34,830 --> 00:03:39,400
>> Do dum maŝojn estas irantaj
esti vere utila en CS50.

70
00:03:39,400 --> 00:03:42,590
Sed en ĉi tiu aparta
kazo, ni scias, ke ni estas

71
00:03:42,590 --> 00:03:48,140
tuj instigas la uzanton almenaŭ
iam kaj tiam nur buklo se necese.

72
00:03:48,140 --> 00:03:51,080
Do jen ni venas al
speciala konstrukcio kaj tio

73
00:03:51,080 --> 00:03:55,020
tre simila al la dum
buklo nomita do-dum ciklo.

74
00:03:55,020 --> 00:03:58,840
>> Tial do-dum buklo ekzekutas la
korpo de la ciklo almenaŭ unufoje

75
00:03:58,840 --> 00:04:01,750
kaj tiam kontrolas vidi
ĉu ĝi devus ekzekuti,

76
00:04:01,750 --> 00:04:05,310
kontraste al tempo buklo,
kiu kontrolos la kondiĉo

77
00:04:05,310 --> 00:04:07,200
kaj tiam ekzekuti la korpon.

78
00:04:07,200 --> 00:04:11,880
Tiel en do-dum buklo, kion ni povus
fari estas instigas la uzanton por entjero,

79
00:04:11,880 --> 00:04:14,450
kaj tiam kontroli ĉu ĝi estas nevalida aŭ ne.

80
00:04:14,450 --> 00:04:18,130
Se ĝi estas malvalida, tiam ni
ripeti la procezon demandante la uzanton

81
00:04:18,130 --> 00:04:22,290
doni al ni alian entjero, kaj tiam
nur kiam tiu entjero estas valida,

82
00:04:22,290 --> 00:04:25,060
ni daŭre
ajn venas poste.

83
00:04:25,060 --> 00:04:28,030
>> Nun vi rimarkos ke la
deklaro de la entjero n

84
00:04:28,030 --> 00:04:31,670
estas iomete malsama al kion ni
faris antaŭe en la antaŭa ekzemplo

85
00:04:31,670 --> 00:04:33,640
kaj tio estas pro atingo.

86
00:04:33,640 --> 00:04:37,920
Se ni deklaras la entjero n interne
de la korpo de la do-dum buklo,

87
00:04:37,920 --> 00:04:42,640
tiam ni ne povos aliri
ke valoro de n eksteren de tiuj buklaj

88
00:04:42,640 --> 00:04:45,050
krampoj indikas la korpo de la ciklo.

89
00:04:45,050 --> 00:04:51,080
Sed ni fakte volas aliri la
valoro de n poste en nia programo.

90
00:04:51,080 --> 00:04:55,730
>> Bone, do nun ni parolu pri
kion tiu kondiĉo devus esti.

91
00:04:55,730 --> 00:05:00,400
Ni volas nur reprompt la
uzanto dum n estas nevalida.

92
00:05:00,400 --> 00:05:04,640
Tiel pensas al vi mem kio nevalidan
entjera valoro aspektus

93
00:05:04,640 --> 00:05:08,060
kaj tiam krei Bulea
esprimo por esprimi tion.

94
00:05:08,060 --> 00:05:13,070
>> Ni preskaŭ finis kun nia subtask
de instigante kaj validigi uzanto enigo.

95
00:05:13,070 --> 00:05:16,010
Do ni faru ĉi iom
iom pli uzanto amika

96
00:05:16,010 --> 00:05:18,390
kaj donu la uzanto iom
iom pli informo

97
00:05:18,390 --> 00:05:20,510
kion ni instigante ilin por.

98
00:05:20,510 --> 00:05:24,500
Do ni instigas la uzanton, po la
specifo, kun la ŝnuro minutoj.

99
00:05:24,500 --> 00:05:28,935
Do uzante vian printf deklaroj, fari
certa ke vi kongruas ĉi akurate.

100
00:05:28,935 --> 00:05:30,230
>> Bone.

101
00:05:30,230 --> 00:05:33,840
Do nun ni havas validan uzanto
enigo, pozitiva entjero

102
00:05:33,840 --> 00:05:37,400
valoro por kiom da minutoj
ili pasigis en la duŝo.

103
00:05:37,400 --> 00:05:41,300
Do kio estas proksima estas kalkuli
la ekvivalenta nombro de boteloj.

104
00:05:41,300 --> 00:05:45,250
Kion ni tuj faros ĉi tie povus
esti tre evidenta al vi, unue,

105
00:05:45,250 --> 00:05:46,640
kaj tio estas okej.

106
00:05:46,640 --> 00:05:49,320
Kion ni volas fari estas ni
volas komenci praktikadanta

107
00:05:49,320 --> 00:05:53,810
la ideo de detekti mastrojn kaj
evoluantaj formuloj por la problemo.

108
00:05:53,810 --> 00:05:57,200
>> Do ni diris por la spec
ke unu minuto en la duŝo

109
00:05:57,200 --> 00:05:59,960
estas ekvivalenta al ĉirkaŭ
12 boteloj de akvo.

110
00:05:59,960 --> 00:06:03,020
Tial du minutoj farus
esti ekvivalenta al 24,

111
00:06:03,020 --> 00:06:05,850
kaj kvin minutojn farus
esti ekvivalenta al 60.

112
00:06:05,850 --> 00:06:08,390
Tial nun, se vi opinias
vi havas ĝin, do ni

113
00:06:08,390 --> 00:06:10,390
ĉu vi povas veni supren
kun mastro aŭ formulo

114
00:06:10,390 --> 00:06:14,990
esprimi se ni diru, n
minutoj, kiom da boteloj de akvo

115
00:06:14,990 --> 00:06:17,930
estus ke esti esprimita en terminoj de n?

116
00:06:17,930 --> 00:06:20,680
>> Krome, eĉ se tiu
povus esti simpla komence,

117
00:06:20,680 --> 00:06:23,240
poste kiam ni atingos
pli komplikaj problemoj

118
00:06:23,240 --> 00:06:26,360
Ni tuj volas eniri
la praktiko de identigado

119
00:06:26,360 --> 00:06:30,120
ŝablonoj kaj evoluiganta formuloj
ekkompreni tion eksteren.

120
00:06:30,120 --> 00:06:33,450
>> En c vi havas aliron al
norma aritmetiko operacioj,

121
00:06:33,450 --> 00:06:36,520
Krome, subtraho,
multipliko kaj divido.

122
00:06:36,520 --> 00:06:38,420
Do mi lasos ĝin al
Vi nun elkompreni

123
00:06:38,420 --> 00:06:41,300
kiel esprimi la
ekvivalenta nombro de boteloj

124
00:06:41,300 --> 00:06:43,990
ke la uzanto konsumis
dum sia duŝo.

125
00:06:43,990 --> 00:06:45,700
>> Bone, ni preskaŭ farita.

126
00:06:45,700 --> 00:06:50,650
Ni instigis la uzanto por ilia enigo,
ni certigis ke ĝi estas valida enigo,

127
00:06:50,650 --> 00:06:53,330
kaj tiam ni eltrovis kiel
kalkuli la ekvivalentan

128
00:06:53,330 --> 00:06:55,480
nombro de boteloj ke ili malaperas.

129
00:06:55,480 --> 00:06:59,430
Do la lasta afero por fari estas eligo
la ekvivalenta nombro da boteloj

130
00:06:59,430 --> 00:07:02,410
kaj espereble kuraĝigi
ilin konservi akvon.

131
00:07:02,410 --> 00:07:06,270
>> Elirigi taksado
esti printf komunikaĵo.

132
00:07:06,270 --> 00:07:09,720
Se mi volis diri al vi, ke mi
havas tri dorlotbestoj, ekzemple,

133
00:07:09,720 --> 00:07:13,090
Mi povus uzi printf komunikaĵo
similan al tiu.

134
00:07:13,090 --> 00:07:15,880
Mi havas tri dorlotbestoj, kaj nova
linio por agrabla strukturado.

135
00:07:15,880 --> 00:07:17,880
>> Nun ni ne volas
simple malfacile kodo aferojn.

136
00:07:17,880 --> 00:07:20,740
Diri la numeron de mia
dorlotbestoj ŝanĝas super tempo.

137
00:07:20,740 --> 00:07:25,080
Tiam mi tuj uzos
anstataŭaĵojn en mia printf komunikaĵo.

138
00:07:25,080 --> 00:07:27,350
Do jen mia nombro estas entjero.

139
00:07:27,350 --> 00:07:31,480
Do mi tuj faru lokokupilo
por entjero uzanta% i.

140
00:07:31,480 --> 00:07:33,930
Mi tuj skribos la kordo,
kaj tiam post la kordo

141
00:07:33,930 --> 00:07:38,000
Mi skribas komo kaj tiam la
ŝanĝiĝemaj ke mi volas presi.

142
00:07:38,000 --> 00:07:42,730
Por ke valoro estos presita
anstataŭ ke lokokupilo,% i.

143
00:07:42,730 --> 00:07:47,630
>> Vi povas uzi anstataŭaĵojn, kiel
bone, por flosoj kun% f.

144
00:07:47,630 --> 00:07:50,420
Vi povas ankaŭ havi multoblajn
anstataŭaĵojn en ĉeno.

145
00:07:50,420 --> 00:07:53,950
Ekzemple, se mi havas iun numeron
de hundoj kaj iuj nombro de katoj,

146
00:07:53,950 --> 00:07:59,210
Mi metis du anstataŭaĵojn tie kaj tiam
miaj du variabloj en sinsekvon.

147
00:07:59,210 --> 00:08:03,130
>> Do nun ke ni scias kiel presi
la valoroj stokitaj en variabloj,

148
00:08:03,130 --> 00:08:06,030
la lasta afero
fari estas certigi ke ni

149
00:08:06,030 --> 00:08:10,920
presi la valoro en la ĝusta formato
indikita en la specifo.

150
00:08:10,920 --> 00:08:14,990
Kun tiu, ni instigis la
uzanto kaj validigita ilia enigo.

151
00:08:14,990 --> 00:08:17,920
Ni tiam kalkulis la ekvivalenta
nombro de boteloj de akvo

152
00:08:17,920 --> 00:08:22,100
ke ili konsumas dum sia duŝo,
kaj ni outputted tiu valoro por ili.

153
00:08:22,100 --> 00:08:24,440
Kaj tiel, ni kompletigis akvo.

154
00:08:24,440 --> 00:08:28,730
>> Mia nomo estas [? Zamila,?]
kaj ĉi tiu estas CS50.

155
00:08:28,730 --> 00:08:29,909

