1
00:00:00,000 --> 00:00:00,500

2
00:00:00,500 --> 00:00:01,960
דובר 1: בואו נדבר על מים.

3
00:00:01,960 --> 00:00:07,280
בבעיה זו, אנו מבקשים מהמשתמש לספר
לנו כמה זמן בדקות המקלחת שלהם הייתה

4
00:00:07,280 --> 00:00:11,040
ואז אנו מחשבים המקבילה
מספר בקבוקי מים

5
00:00:11,040 --> 00:00:12,970
כי המקלחת שלהם בשימוש.

6
00:00:12,970 --> 00:00:16,379
>> אז מה הם המטלות של שלנו
לבעיה זו?

7
00:00:16,379 --> 00:00:20,050
ראשית, אנחנו הולכים רוצים
כדי להנחות ולאחר מכן אמת

8
00:00:20,050 --> 00:00:22,100
הקלט שהמשתמש נותן לנו.

9
00:00:22,100 --> 00:00:24,790
ברגע שאנו להבטיח שאנחנו
יש קלט משתמש חוקי,

10
00:00:24,790 --> 00:00:28,230
אנחנו הולכים על מנת לחשב את
מספר שווה של בקבוקי מים

11
00:00:28,230 --> 00:00:30,770
שהמשתמש היה במהלך
המקלחת שלהם, ולאחר מכן אנחנו

12
00:00:30,770 --> 00:00:33,720
הולך לספר להם על ידי
הדפסת המספר הזה.

13
00:00:33,720 --> 00:00:37,230
>> אז בואו להתמודד הראשון שלנו
משימה, מה שגרם ואימות

14
00:00:37,230 --> 00:00:38,550
קלט המשתמש.

15
00:00:38,550 --> 00:00:40,910
בשביל זה אנחנו כבר כתבנו
פונקציה בשבילך בשם

16
00:00:40,910 --> 00:00:43,950
get_int הממוקם בספריית CS50.

17
00:00:43,950 --> 00:00:48,710
get_int מבטיח כי תשומות המשתמשים
מספר שלם, ולכן כל מספרים חיוביים,

18
00:00:48,710 --> 00:00:51,700
מספרים שליליים, או
אפס כולם קיבלו.

19
00:00:51,700 --> 00:00:55,900
אבל אם המשתמש תשומות דבר אחר,
כך כל שילוב של אותיות או מספרים

20
00:00:55,900 --> 00:00:59,710
או מספרים עשרוניים, אזי
המשתמש יתבקש לנסות שוב

21
00:00:59,710 --> 00:01:04,319
והפונקציה לא תקבל כלום
עד שהמשתמש נותן להם מספר שלם.

22
00:01:04,319 --> 00:01:06,410
>> אז איך אנו משתמשים get_int?

23
00:01:06,410 --> 00:01:10,830
אם אתה פותח את סביבת העבודה שלך ואת
ליצור קובץ בשם integer.c בואו

24
00:01:10,830 --> 00:01:12,110
הקלד את השורה הבאה.

25
00:01:12,110 --> 00:01:14,760
סולמית כוללת cs50.h.

26
00:01:14,760 --> 00:01:18,480
דבר זה הכרחי מכיוון get_int
היא פונקצית ספריית cs50,

27
00:01:18,480 --> 00:01:21,890
ולכן עלינו ב- Hashtag כולל
הצהרתה כדי

28
00:01:21,890 --> 00:01:23,370
כדי להשתמש בפונקציה.

29
00:01:23,370 --> 00:01:26,570
ואז הראשי שלי
לתפקד אני רק הולך

30
00:01:26,570 --> 00:01:29,560
להתקשר get_int פונקציה פשוט.

31
00:01:29,560 --> 00:01:31,750
>> אז בואו להפעיל את זה ולראות איך זה עובד.

32
00:01:31,750 --> 00:01:35,092
אני כבר מלוקט זה, אז בוא
פשוט להמשיך להפעיל את התוכנית,

33
00:01:35,092 --> 00:01:36,480
./מספר שלם.

34
00:01:36,480 --> 00:01:39,880
כאן יש לי בקשה
וכאן אני מקיש את הערך.

35
00:01:39,880 --> 00:01:44,880
תגיד שמתי רק שלם מסוימים,
50, excepts ו פורש תוכנית

36
00:01:44,880 --> 00:01:45,960
וזהו.

37
00:01:45,960 --> 00:01:49,350
>> אבל לומר אני מפעיל את זה שוב
אני קלטתי משהו אחר.

38
00:01:49,350 --> 00:01:51,350
אולי, hello world.

39
00:01:51,350 --> 00:01:55,660
זהו אינו מספר שלם כך
התוכנית תנחה אותי לנסות שוב.

40
00:01:55,660 --> 00:01:59,160
בואו ננסה שוב עם
אולי עשרוני הפעם.

41
00:01:59,160 --> 00:02:03,450
0.5, שוב, לא שלם כך
התכנית לא וקבלה

42
00:02:03,450 --> 00:02:05,290
וזה יגיד לי לנסות שוב.

43
00:02:05,290 --> 00:02:07,070
אז בואו לתת אותו למספר אחר.

44
00:02:07,070 --> 00:02:09,830
התוכנית מקבלת את זה,
ייסגר ולאחר שנסיים.

45
00:02:09,830 --> 00:02:13,520
>> אז עכשיו יש לנו פונקציה
המאפשר לנו ומבטיחים

46
00:02:13,520 --> 00:02:16,790
כי המשתמש תשומות
שלם, אבל איך אנחנו יכולים

47
00:02:16,790 --> 00:02:20,330
למעשה לעקוב אחר
שלם שהוזן על ידי המשתמש?

48
00:02:20,330 --> 00:02:25,260
ובכן, כל שנעשינו הוא חנות
ערך זה משתנה, אומר n.

49
00:02:25,260 --> 00:02:30,580
אז אם אני להכריז על n מספר שלם,
ואני להגדיר שערך get_int,

50
00:02:30,580 --> 00:02:34,700
אז n אז תשמור מה
מעריכי המשתמש שהוזן.

51
00:02:34,700 --> 00:02:38,620
>> בסדר, אז עכשיו אנחנו שווידאת
המשתמש ייתן לנו מספר שלם

52
00:02:38,620 --> 00:02:42,550
ואנחנו יודעים איך לעקוב אחר
של המספר השלם, אך יש לזכור,

53
00:02:42,550 --> 00:02:45,610
מספרים שלמים הם חיוביים ושליליים כאחד.

54
00:02:45,610 --> 00:02:49,110
אז זה לא ממש הגיוני
בהקשר של בעיה זו

55
00:02:49,110 --> 00:02:53,570
שהמשתמש מתקלח
של אומרים 12 דקות שליליות.

56
00:02:53,570 --> 00:02:59,310
אז אנחנו צריכים לוודא שהמשתמש
למעשה נותן לנו מספר חיובי.

57
00:02:59,310 --> 00:03:02,130
עכשיו אין לנו רק
פונקציה אחת בשביל זה,

58
00:03:02,130 --> 00:03:04,620
אז אנחנו הולכים לעשות
כדי ליצור את עצמנו.

59
00:03:04,620 --> 00:03:07,190
>> אז אנחנו רוצים הרף
מהמשתמש

60
00:03:07,190 --> 00:03:09,730
עד שהם נותנים לנו מספר חיובי.

61
00:03:09,730 --> 00:03:14,300
אם אני עושה משהו ברציפות אז
זה דומה לולאה, חזרה.

62
00:03:14,300 --> 00:03:19,130
אז אחד המבנים שאנו משתמשים
ב ג ליישם החזרה ולולאות

63
00:03:19,130 --> 00:03:20,410
הוא לולאה בזמן.

64
00:03:20,410 --> 00:03:23,020
אז לולאת while, כפי
המוצג כאן, יריץ

65
00:03:23,020 --> 00:03:27,030
מה נמצא בתוך הגוף של הלולאה כמו
עוד מעריכה מצב נתון

66
00:03:27,030 --> 00:03:27,900
כאמת.

67
00:03:27,900 --> 00:03:30,640
ברגע שהתנאים
מעריכת כ- false,

68
00:03:30,640 --> 00:03:34,830
התכנית תמשיך מה
מגיע לאחר הגוף של הלולאה.

69
00:03:34,830 --> 00:03:39,400
>> אז בעוד לולאות הולכות
להיות באמת שימושי CS50.

70
00:03:39,400 --> 00:03:42,590
אבל בפרט זה
במקרה, אנחנו יודעים שאנחנו

71
00:03:42,590 --> 00:03:48,140
הולך להציג למשתמש לפחות
פעם אחת ולאחר מכן לולאה רק במידת הצורך.

72
00:03:48,140 --> 00:03:51,080
אז הנה אנחנו מגיעים
מבנה מיוחד זה

73
00:03:51,080 --> 00:03:55,020
דומה מאוד בזמן
לולאה נקראת לולאה עשה מה.

74
00:03:55,020 --> 00:03:58,840
>> אז לולאה עשה תוך מבצעת את
הגוף של הלולאה לפחות פעם

75
00:03:58,840 --> 00:04:01,750
ואז זה בודק
אם זה צריך לבצע,

76
00:04:01,750 --> 00:04:05,310
בניגוד לולאת while,
אשר יבדוק את המצב

77
00:04:05,310 --> 00:04:07,200
ולאחר מכן להפעיל את הגוף.

78
00:04:07,200 --> 00:04:11,880
אז בלולאה עשה תוך מה שאפשר
לעשות זה מהמשתמש מספר שלם,

79
00:04:11,880 --> 00:04:14,450
ואז לבדוק אם זה חוקי או לא.

80
00:04:14,450 --> 00:04:18,130
אם זה חוקי, אנחנו נעלה
לחזור על התהליך לשאול את המשתמש

81
00:04:18,130 --> 00:04:22,290
לתת לנו עוד מספר שלם, ולאחר מכן
רק כאשר מספר שלם כי הוא תקף,

82
00:04:22,290 --> 00:04:25,060
נמשיך
מה שבא אחר כך.

83
00:04:25,060 --> 00:04:28,030
>> עכשיו תוכל להבחין כי
הכרזה על n השלם

84
00:04:28,030 --> 00:04:31,670
שונה במקצת למה שאנחנו
עשה לפני בדוגמה הקודמת

85
00:04:31,670 --> 00:04:33,640
וזה בגלל היקף.

86
00:04:33,640 --> 00:04:37,920
אם הייתי הכרזתי n השלם בתוך
של הגוף של הלולאה עשה בזמן,

87
00:04:37,920 --> 00:04:42,640
אז אנחנו לא יוכל לגשת
הערך של n מחוץ אלה מתולתל

88
00:04:42,640 --> 00:04:45,050
כתפיות המציין את הגוף של הלולאה.

89
00:04:45,050 --> 00:04:51,080
אבל אנחנו למעשה רוצים לגשת
ערך של n בהמשך התוכנית שלנו.

90
00:04:51,080 --> 00:04:55,730
>> אוקיי, אז עכשיו בואו נדבר על
מה מצב זה צריך להיות.

91
00:04:55,730 --> 00:05:00,400
אנחנו רוצים רק reprompt
משתמש כל עוד n אינה חוקית.

92
00:05:00,400 --> 00:05:04,640
אז תחשוב לעצמך מה לנכה
ערך שלם ייראה

93
00:05:04,640 --> 00:05:08,060
ולאחר מכן ליצור בוליאני
ביטוי לבטא.

94
00:05:08,060 --> 00:05:13,070
>> אנחנו כמעט סיימנו עם פעילות המשנה שלנו
לכון ואימות קלט משתמש.

95
00:05:13,070 --> 00:05:16,010
אז בואו נעשה את זה קצת
קצת יותר ידידותי למשתמש

96
00:05:16,010 --> 00:05:18,390
ולתת למשתמש קצת
מידע קצת יותר

97
00:05:18,390 --> 00:05:20,510
של מה שאנחנו שגרמנו אותם.

98
00:05:20,510 --> 00:05:24,500
אז בואו להציג למשתמש, בהתאם
מפרט, עם דקות המחרוזת.

99
00:05:24,500 --> 00:05:28,935
זאת באמצעות דוחות printf שלך, להפיק
בטוח שאתה להתאים בדיוק זה.

100
00:05:28,935 --> 00:05:30,230
>> בסדר.

101
00:05:30,230 --> 00:05:33,840
אז עכשיו יש לנו משתמש חוקי
קלט, מספר חיובי

102
00:05:33,840 --> 00:05:37,400
ערך עבור כמה דקות ארוכות
הם בילו במקלחת.

103
00:05:37,400 --> 00:05:41,300
אז מה הלאה הוא לחשב
מספר שווה של בקבוקים.

104
00:05:41,300 --> 00:05:45,250
מה אנחנו הולכים לעשות כאן אולי
להיות מאוד ברור לך בהתחלה,

105
00:05:45,250 --> 00:05:46,640
וזה בסדר.

106
00:05:46,640 --> 00:05:49,320
מה שאנחנו רוצים לעשות הוא אנחנו
רוצה להתחיל לתרגל

107
00:05:49,320 --> 00:05:53,810
הרעיון של גילוי דפוסים
פיתוח פורמולות לבעיה.

108
00:05:53,810 --> 00:05:57,200
>> אז אנחנו אומרים לפי המפרט
שדקה במקלחת

109
00:05:57,200 --> 00:05:59,960
שווה ערך לכ
12 בקבוקים של מים.

110
00:05:59,960 --> 00:06:03,020
אז שתי דקות היו
להיות שווה ערך ל 24,

111
00:06:03,020 --> 00:06:05,850
וחמש דקות היו
להיות שווה ערך ל 60.

112
00:06:05,850 --> 00:06:08,390
אז עכשיו אם אתה חושב
יש לך את זה, אז בואו

113
00:06:08,390 --> 00:06:10,390
לראות אם אתה יכול לבוא
עם דפוס או נוסחה

114
00:06:10,390 --> 00:06:14,990
להביע אם יש לנו לומר, n
דקות, כמה בקבוקי מים

115
00:06:14,990 --> 00:06:17,930
שתתבטא שמבחינת n?

116
00:06:17,930 --> 00:06:20,680
>> שוב, גם אם זה
יכול להיות פשוט בהתחלה,

117
00:06:20,680 --> 00:06:23,240
בהמשך כשנגיע
יותר בעיות מסובכות

118
00:06:23,240 --> 00:06:26,360
אנחנו הולכים רוצים להיכנס
הפרקטיקה של זיהוי

119
00:06:26,360 --> 00:06:30,120
התבניות והנוסחאות פיתוח
כדי להבין את הדברים האלה.

120
00:06:30,120 --> 00:06:33,450
>> ב- C יש לך גישה
פעולות אריתמטיות סטנדרטיות,

121
00:06:33,450 --> 00:06:36,520
חיבור, חיסור,
כפל וחילוק.

122
00:06:36,520 --> 00:06:38,420
אז אני אשאיר אותו
אתה עכשיו להבין

123
00:06:38,420 --> 00:06:41,300
איך מבטאים את
מספר שווה של בקבוקים

124
00:06:41,300 --> 00:06:43,990
שהמשתמש נצרך
במהלך המקלחת שלהם.

125
00:06:43,990 --> 00:06:45,700
>> בסדר, אנחנו כמעט סיימנו.

126
00:06:45,700 --> 00:06:50,650
שמנו מתבקש המשתמש עבור הקלט שלהם,
וידאנו שזה קלט חוקי,

127
00:06:50,650 --> 00:06:53,330
ואז הבנו איך
כדי לחשב את המקבילה

128
00:06:53,330 --> 00:06:55,480
מספר הבקבוקים שהם צרכו.

129
00:06:55,480 --> 00:06:59,430
אז הדבר האחרון לעשות הוא פלט
מספר שווה של בקבוקים

130
00:06:59,430 --> 00:07:02,410
ואנו מקווים לעודד
אותם כדי לחסוך קצת מים.

131
00:07:02,410 --> 00:07:06,270
>> פלט הערך יהיה
להיות הצהרת printf.

132
00:07:06,270 --> 00:07:09,720
אם רציתי להגיד לך שאני
יש שלוש חיות מחמד, למשל,

133
00:07:09,720 --> 00:07:13,090
אני יכול להשתמש הצהרת printf
זה נראה משהו כזה.

134
00:07:13,090 --> 00:07:15,880
יש לי שלוש חיות מחמד, חדש
בתור עיצוב נחמד.

135
00:07:15,880 --> 00:07:17,880
>> עכשיו אנחנו לא רוצים
דברי קוד קשה פשוט.

136
00:07:17,880 --> 00:07:20,740
אומר את המספר שלי
חיות מחמד משתנה במשך הזמן.

137
00:07:20,740 --> 00:07:25,080
אז אני הולך לעשות שימוש
מצייני מיקום משפט printf שלי.

138
00:07:25,080 --> 00:07:27,350
אז הנה המספר שלי הוא מספר שלם.

139
00:07:27,350 --> 00:07:31,480
אז אני הולך לעשות מציין מיקום
עבור מספר שלם באמצעות i%.

140
00:07:31,480 --> 00:07:33,930
אני הולך לכתוב את המחרוזת,
ואז לאחר המחרוזת

141
00:07:33,930 --> 00:07:38,000
אני כותב פסיק ואז
משתנה כי אני רוצה להדפיס.

142
00:07:38,000 --> 00:07:42,730
אז הערך שיודפס
במקום שאני מציין מיקום,%.

143
00:07:42,730 --> 00:07:47,630
>> אתה יכול להשתמש מצייני מיקום, כמו
גם עבור צף עם f%.

144
00:07:47,630 --> 00:07:50,420
ניתן גם יש מספר רב של
מצייני מיקום במחרוזת.

145
00:07:50,420 --> 00:07:53,950
למשל, אם יש לי מספר כמה
כלבים וכמה מספר החתולים,

146
00:07:53,950 --> 00:07:59,210
הכנסתי שתי placeholders כאן ולאחר מכן
שני המשתנים שלי כדי בהתאמה.

147
00:07:59,210 --> 00:08:03,130
>> אז עכשיו אנחנו יודעים כיצד להדפיס
את הערכים המאוחסנים משתנים,

148
00:08:03,130 --> 00:08:06,030
הדבר האחרון מאוד
לעשות הוא להבטיח כי אנו

149
00:08:06,030 --> 00:08:10,920
להדפיס את הערך בפורמט המדויק
מצוין במפרט.

150
00:08:10,920 --> 00:08:14,990
עם זאת, אנו פועלים מתבקשים
משתמשים ומאומתים הקלט שלהם.

151
00:08:14,990 --> 00:08:17,920
אז שמנו מחושב המקבילה
מספר בקבוקי מים

152
00:08:17,920 --> 00:08:22,100
כי הם צורכים במהלך המקלחת שלהם,
ואנחנו כבר outputted ערך להם.

153
00:08:22,100 --> 00:08:24,440
וכך, שנשלים מים.

154
00:08:24,440 --> 00:08:28,730
>> שמי [? Zamila,?]
וזה CS50.

155
00:08:28,730 --> 00:08:29,909

