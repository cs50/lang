Zamyla Chan: Olgem lisame mängu vigenere salakiri. Vigenere salakiri on väga sarnane Caesar, välja arvatud Caesar me möödunud aastal üks täisarv meie võti. In vigenere me läheme läbida märksõna. Niisiis, kui ma tahtsin nihutada krüptotekstiga see on CS 50 poolt ohai, siis see tähendab, et iga täht ohai läheb olla võti, ja ma lähen tsükli märksõna minu vahetuses muutes ciphertext palju raskem dekodeerida. 

Mis see tähendab, et vahetustega poolt märksõna? Noh, märksõna on string kus iga täht vastab et mingi täisarvu vahetuses. Niisiis, o vastab võti 14, h võtme ja 7 alusel on võti 0, nii et ei muudaks midagi, ja siis ma on oluline 8. 

Ütle Jooksin vigenere A, välja lihtteksti see on CS50 hästi, et oleks lihtsalt anda mulle muutmata string. Pange tähele, et see on samaväärne töötab Caesar võtmega null. Tegelikult töötab vigenere mis tahes ühe märgi võrduks töötab Caesar sama täisarv. 

Olgu, nii, sest nad on nii sarnased, et ma tegelikult soovitan, et kui sa soovid, võid lihtsalt kopeerida Caesar kood oma vigenere koodi. Asjad muutuvad, aga vähemalt on teil mõned selgroog, et saate töötada. Kuna kõike on samad me tahame saada võti, saada lihttekstina šifreerimine et lihttekstina ja seejärel printida selle välja. 

Just nagu Caesari võti läheb edasi nii teise käsurea argument sisalduvad argv indeks 1, aga see on erinev seekord sest see peab olema tähestikulises. Niisiis, me peame Käi iga ühe märgi, et võti et kasutaja sooritanud, ning tagada et iga täht on alfabeetiline et jätkata. 

Kui oleme teinud, siis me saan string kasutaja, nagu me varem. Ja nüüd jõuame südames probleemi jaoks vigenere, mis on nagu Caesar, kuidas nuputada enciphering muster ja võrrand ja šifreerimine Kogu polegi. 

Niisiis, märkad, et võrrand vigenere nihe on väga sarnane Caesar üks. Ainus erinevus on see, et selle asemel, et ühe muutuja k Enne, nüüd k on indeks, näitab nda tähe all. 

Vaatame näiteks. Ütle, et tahtis edasi saladus sõnum peale oma purustada, sa meeldid mulle. Noh, teie klahvi valida midagi, mis oma tean purustada teab, mis sulle meeldib, pandas. Olgu, siis kuidas me nihutada seda? 

Noh, on meil polegi indeks. See on esimene täht ja nii on indeks meie peamiste mis on p, esimene kirjas meie panda sõna. Nii, minnes ma p annab meile x, siis me eelnevalt polegi indeks. See paneb meid ruumi. Nüüd tühikuga on mittetähestikuliste, et tähendab, et see lihtsalt ülekandeid õigus üle ciphertext, paneme ruumi seal, ja me ei tee edasi indeks meie võti. Niisiis, me oleme ikka veel p sel hetkel. 

Me edasipääsu järgmisse indeks meie polegi. Ja nüüd, sest see on kirja, väiketähti l, me minema, et mida Järgmine indeks meie võti. Milline on, mis on null vahetuses nii, et lihtsalt muutub L meie ciphertext. Siis me edasi nii polegi, ja võti indeks, sest see on tähestikuline. Nii siis me jätkuvalt, et kuni me saada e in jms. 

Olgu, nii et märkad selles meelde, et nii meie peamine indeks, oleme jõudnud Panda sõna, nii et mida juhtub siis, kui me saame järgmise alfabeetilise kirja polegi? Noh, kõik, mis juhtub, on meil ümbritsev alguses, esimese indeksi meie võti. Nii, siis me minema, et y p meile n. Ja siis jätkame viimistlus kodeering Meie polegi saada x lvne noh. 

Siit Näiteks mina näitas, et meil on ainult eelnevalt Järgmise kirja märksõna kui märk lihttekstina on kirjas nii isalpha funktsiooni tulevad mugav siin. Ja just nagu Caesar, me tahame säilitada juhul, isupper ja islower. Niisiis, lisada see natuke aastal oma pseudokoodi. 

Niisiis, kuidas me aru saada võti vahetuses? Noh, kui te mäletate meie arutelu tähestikulises järjekorras indeksid Caesar probleem, see on väga sarnased. 

Kui vastab ASCII väärtus 65 kuid nihet 0, ja siis viimane täht tähestiku, Z, vastab nihe 25. Märkad, et üleminek on identne või mitte täht on suurtäht või väiketähti. 

OK, nii et nüüd, et sa tea, kuidas aru saada, numbriline nihe, mis vastab ühe märgi lähme tagasi meie võrrand. Kuna meil on kaks erinevat indeksid siin, i ja j, see on vihje, et me tahame, et jälgida Nii meie positsiooni polegi samuti oma positsiooni märksõna, Nii et need on kaks eraldi muutujad et me tahame hoida kätte. 

Nüüd positsiooni meie polegi läheb suureneb iga kord, nii, et see saab olema natuke rohkem otse edasi mitte positsiooni märksõna, mida me teame on ümbritsev, ja mõnikord juurdekasvu, Mõnikord jääb samaks. Niisiis, kuidas me ellu funktsionaalsust ümbritsev indeks märksõna? 

Ma lähen kasutada loota välja näiteks. Arvestan off on populaarne viis jagada inimesi gruppidesse. Ütle mul oli 5 inimest ja ma tahtsin need tükeldada kolme rühma, hästi, siis ma hakkaks lugedes välja. Esimene inimene öelda, et ma olen meeskonna number üks, Järgmise inimene oleks meeskonna number kaks, kolmas isik meeskonna number kolm. Nüüd ma tahan ainult kolme rühma nii Neljanda inimene tegelikult alustada algusest ja öelda, noh, ma olen meeskonna number üks hästi, ja järgmine isik oleks meeskonna number kaks. Ja sealt nad saavad siis eraldada nende rühmad. 

Niisiis, kuidas võiks ma kasutada moodul mind aidata ellu See loota välja ümbritsev funktsioon? Noh, esimene inimene number 1, mod 3 annab meile 1. 2 mod 3 annab meile 2, ja 3 mod 3 annab meile 0. 

Neljas inimene, number 4, mod 3 annab meile 1 ja seejärel 5 mod 3 annab meile 2. Niisiis, märkad, et kuigi inimeste arv, et mul on suurendab ja on eespool 3, sest ma modereerimine 3 Ma alati numbrid 0, 1 ja 2. Ma ei saa kunagi suurem kui 3. Niisiis, isegi kui mul oli 10 inimesed, siis on kõik need inimesed, ikkagi rühmades 1, 2 või 0. 

Nii, nüüd me teame, et kui meil on grupp 5. ja me mod Kõigil neil 3, siis me ei saa kunagi ületa rühmade 0, 1 või 2. Niisiis, me ei hakka rühm arv, mis on võrdne 3 või rohkem. Seega, isegi kui ma lisan veel viis inimesed, siis neid kõiki ikkagi gruppidesse 0, 1 või 2 sest ma modereerimine 3. Ma ei saa kunagi ületada, et kork. 

OK, nii et vaatame, kas me saame rakendada Selle kontseptsiooni kasutades moodul ümbritsev rühmanumbritest ja kohaldada see vigenere, kus me tahame kasutada mooduli ümbritsev indeks märksõna. Kuigi me incrementing Indeksi me alati soovite veenduda, et me alati käib üle algusest ei ületa kunagi stringi pikkusena. 

OK, nii et ma tean, et see võiks olla natuke suur. Seal on palju rohkem teha selles p komplekti. Seega veenduge, et te kirjutada hea pseudokoodi ise et saate aru ja et saab tööd teha. Proovige ja lahendada iga üherealine iseseisvalt figuring kõik vähe väike tükid puzzle enne laskmise seda koos. 

Veendu, et saad võti käsurealt ja tagada, et see on tähestikuline, saada lihttekstina kasutaja, ja siis enciphering, veendumaks, et tea, kuidas šifreerimine ühe kirja, ja siis edu kogu string koos kõigi ümbritsev funktsioone. Lõpuks saab printida ciphertext. 

Minu nimi on Zamyla, ja see oli vigenere. 