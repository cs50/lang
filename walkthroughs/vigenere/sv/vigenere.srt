1
00:00:00,000 --> 00:00:00,930

2
00:00:00,930 --> 00:00:04,030
>> Zamyla Chan: Låt oss öka vår
spel med Vigenère chiffer.

3
00:00:04,030 --> 00:00:06,710
Den Vigenère chiffer är
mycket lik Caesar,

4
00:00:06,710 --> 00:00:11,060
utom i Caesar vi passerade
en enda heltal som vår nyckel.

5
00:00:11,060 --> 00:00:14,100
I Vigenère ska vi
att passera i ett sökord.

6
00:00:14,100 --> 00:00:19,400
Så om jag ville flytta
chiffertext detta är CS 50 genom ohai,

7
00:00:19,400 --> 00:00:23,260
då det innebär att varje bokstav i
ohai kommer att tjäna som den viktigaste,

8
00:00:23,260 --> 00:00:27,160
och jag ska cykla över
det sökordet för mitt skift

9
00:00:27,160 --> 00:00:31,930
göra chiffertexten
mycket svårare att avkoda.

10
00:00:31,930 --> 00:00:34,540
>> Vad betyder det att
skifta av sökord?

11
00:00:34,540 --> 00:00:38,610
Tja, är nyckelordet en sträng
där varje bokstav motsvarar

12
00:00:38,610 --> 00:00:41,080
till något heltal skift.

13
00:00:41,080 --> 00:00:49,310
Så motsvarar o en nyckel 14,
h till en nyckel av 7, a har en nyckel av 0,

14
00:00:49,310 --> 00:00:54,670
så det skulle inte ändra någonting,
och då jag har en nyckel 8.

15
00:00:54,670 --> 00:01:00,000
>> Säger jag sprang Vigenère A med
klartext detta är CS50 bra,

16
00:01:00,000 --> 00:01:02,800
som helt enkelt skulle ge
mig en oförändrad sträng.

17
00:01:02,800 --> 00:01:08,170
Lägg märke till att detta är ekvivalent med
kör Caesar med en nyckel på noll.

18
00:01:08,170 --> 00:01:12,070
I själva verket, löpning Vigenère
med någon enstaka tecken

19
00:01:12,070 --> 00:01:17,070
skulle motsvara löpning
Caesar med samma heltal.

20
00:01:17,070 --> 00:01:20,400
>> Okej, så, eftersom
de är så lika jag skulle

21
00:01:20,400 --> 00:01:24,300
faktiskt rekommendera att om du
vill du bara kopiera din Caesar

22
00:01:24,300 --> 00:01:26,932
kod i din Vigenère kod.

23
00:01:26,932 --> 00:01:28,640
Saker kommer att förändras,
men åtminstone har du

24
00:01:28,640 --> 00:01:31,110
någon ryggrad att du kan arbeta med.

25
00:01:31,110 --> 00:01:36,410
Eftersom de todos är desamma vi vill
att få nyckeln, få vanlig text,

26
00:01:36,410 --> 00:01:40,690
chiffrera att vanlig text,
och sedan skriva ut det.

27
00:01:40,690 --> 00:01:44,980
>> Precis som Caesar nyckeln kommer att
föras in som andra kommandoraden

28
00:01:44,980 --> 00:01:50,540
argumentet i argv index
1, men det är annorlunda den här gången

29
00:01:50,540 --> 00:01:52,560
eftersom det måste vara alfabetisk.

30
00:01:52,560 --> 00:01:56,390
Så måste vi att iterera över varje
enstaka tecken i den tangenten

31
00:01:56,390 --> 00:02:00,800
att användaren gått in, och se till att
att varje tecken är alfabetisk

32
00:02:00,800 --> 00:02:02,800
för att kunna fortsätta.

33
00:02:02,800 --> 00:02:05,560
>> När vi har gjort det, då vi
kan få strängen från användaren,

34
00:02:05,560 --> 00:02:07,560
precis som vi gjorde innan.

35
00:02:07,560 --> 00:02:10,520
Och nu kommer vi till hjärtat
av problemet för Vigenère,

36
00:02:10,520 --> 00:02:14,665
vilket är precis som Caesar, hur man
räkna ut chiffremönstret

37
00:02:14,665 --> 00:02:19,760
och ekvation, och encipher
hela klartexten.

38
00:02:19,760 --> 00:02:23,280
>> Så kommer du att märka att den
ekvation för Vigenère skift

39
00:02:23,280 --> 00:02:25,610
är mycket lik den Caesar en.

40
00:02:25,610 --> 00:02:29,780
Den enda skillnaden är att
i stället för en enda variabel k

41
00:02:29,780 --> 00:02:37,270
tidigare har nu k en nedsänkt
indikerar den j: e bokstaven i nyckeln.

42
00:02:37,270 --> 00:02:39,560
>> Låt oss gå igenom ett exempel.

43
00:02:39,560 --> 00:02:43,830
Säg att du ville förmedla en hemlighet
meddelande på din krossa, jag gillar dig.

44
00:02:43,830 --> 00:02:46,325
Tja, för din nyckel som du
välja något som din

45
00:02:46,325 --> 00:02:49,790
vet krossa vet att du gillar, pandor.

46
00:02:49,790 --> 00:02:52,290
Okej, så hur ska vi flytta denna?

47
00:02:52,290 --> 00:02:55,500
>> Tja, har vi vår klartext index.

48
00:02:55,500 --> 00:02:59,160
Det är vid den första bokstaven och
så är indexet för vår nyckel

49
00:02:59,160 --> 00:03:02,830
vilket är vid p, varvid den första
brev i vår panda ord.

50
00:03:02,830 --> 00:03:08,590
Så skiftande jag med p ger oss x,
sedan avancera vi klartext index.

51
00:03:08,590 --> 00:03:10,460
Detta får oss till ett utrymme.

52
00:03:10,460 --> 00:03:13,540
Nu mellanslag
är icke alfabetisk,

53
00:03:13,540 --> 00:03:16,930
så det betyder att det bara
överföringar rätt över till chiffertexten,

54
00:03:16,930 --> 00:03:23,430
vi sätter ett utrymme där, och vi inte
avancera indexet för vår nyckel.

55
00:03:23,430 --> 00:03:25,820
Så vi är fortfarande på p vid denna tidpunkt.

56
00:03:25,820 --> 00:03:30,130
>> Vi går vidare till nästa
index i vår klartext.

57
00:03:30,130 --> 00:03:34,030
Och nu, eftersom det är
ett brev, den gemena l,

58
00:03:34,030 --> 00:03:37,920
vi flytta det vid
nästa index i vår nyckel.

59
00:03:37,920 --> 00:03:42,360
Som är en, som är en nolla
skift så att bara blir

60
00:03:42,360 --> 00:03:44,370
en li vår chiffer.

61
00:03:44,370 --> 00:03:51,120
Sedan vi avancera både klartext, och
nyckelindex eftersom det är alfabetisk.

62
00:03:51,120 --> 00:03:56,210
Så då fortsätter vi att
tills vi kommer till e i liknande.

63
00:03:56,210 --> 00:04:01,090
>> Okej, så du kommer att märka på detta
påpeka detta, när det gäller vår nyckelindex,

64
00:04:01,090 --> 00:04:03,940
Vi har kommit till slutet av
panda ord, så vad

65
00:04:03,940 --> 00:04:08,750
händer när vi kommer till nästa
alfabetisk bokstav i klartext?

66
00:04:08,750 --> 00:04:12,180
Tja, är allt som händer vi
linda runt till början,

67
00:04:12,180 --> 00:04:14,710
till det första indexet i vår nyckel.

68
00:04:14,710 --> 00:04:19,570
Så, sedan flytta vi att
y med p att ge oss n.

69
00:04:19,570 --> 00:04:26,860
Och sedan fortsätter vi avslutar kodning
vår klartext att få x lvne noh.

70
00:04:26,860 --> 00:04:29,300
>> Från detta exempel jag
visade att vi bara framåt

71
00:04:29,300 --> 00:04:33,140
till nästa bokstav i sökordet
om tecknet i klartext

72
00:04:33,140 --> 00:04:37,480
är ett brev så isalpha
Funktionen kommer att ha nytta här.

73
00:04:37,480 --> 00:04:43,030
Och precis som i Caesar, vill vi
bevara fallet isupper och islower.

74
00:04:43,030 --> 00:04:46,100
Så, lägg till lite
in i din pseudokod.

75
00:04:46,100 --> 00:04:48,510
>> Så hur ska vi räkna ut de viktigaste förändringar?

76
00:04:48,510 --> 00:04:53,030
Tja, om du minns vår diskussion
på alfabetiska index i Caesar

77
00:04:53,030 --> 00:04:55,370
problem, det är mycket lika.

78
00:04:55,370 --> 00:05:01,130
>> Där A motsvarar en ASCII
värde på 65 men en förskjutning av 0,

79
00:05:01,130 --> 00:05:03,550
och sedan den sista bokstaven
i alfabetet, Z,

80
00:05:03,550 --> 00:05:06,940
motsvarar en förskjutning av 25.

81
00:05:06,940 --> 00:05:10,320
Du kommer att märka att förskjutningen
är identisk med eller utan

82
00:05:10,320 --> 00:05:14,880
brevet är versaler eller gemener.

83
00:05:14,880 --> 00:05:17,700
>> OK, så nu när du
vet hur man kan räkna ut

84
00:05:17,700 --> 00:05:21,470
den numeriska skifte som
motsvarar ett enda tecken

85
00:05:21,470 --> 00:05:24,050
Låt oss gå tillbaka till vår ekvation.

86
00:05:24,050 --> 00:05:28,180
Eftersom vi har två olika
nedsänkta här, i och j,

87
00:05:28,180 --> 00:05:32,130
det är en vink om att vi vill hålla koll
både vår position i klartext

88
00:05:32,130 --> 00:05:36,600
liksom vår position på sökordet,
så de är två separata variabler

89
00:05:36,600 --> 00:05:39,010
att vi vill hålla tag i.

90
00:05:39,010 --> 00:05:42,580
>> Nu ställning i vår klartext
kommer att öka varje gång,

91
00:05:42,580 --> 00:05:45,530
så det kommer att vara en
lite mer rakt fram

92
00:05:45,530 --> 00:05:49,750
i motsats till den position sökordet,
som vi vet har att linda runt,

93
00:05:49,750 --> 00:05:52,910
och ibland öka,
ibland förbli densamma.

94
00:05:52,910 --> 00:05:55,430
Så, hur vi genomför
funktionaliteten

95
00:05:55,430 --> 00:05:59,820
att omsluta
Indexet för sökordet?

96
00:05:59,820 --> 00:06:01,640
>> Jag kommer att använda räkna av exempel.

97
00:06:01,640 --> 00:06:06,100
Räkna ut är ett populärt sätt
att dela upp människor i grupper.

98
00:06:06,100 --> 00:06:10,660
Säga att jag hade 5 personer och jag ville
dela upp dem i tre grupper,

99
00:06:10,660 --> 00:06:13,640
ja då skulle jag börja med att räkna ut.

100
00:06:13,640 --> 00:06:16,980
Den första personen skulle
säga att jag är laget nummer ett,

101
00:06:16,980 --> 00:06:21,030
nästa person skulle vara lagnummer
två, den tredje personen lagnummer

102
00:06:21,030 --> 00:06:21,910
tre.

103
00:06:21,910 --> 00:06:25,910
Nu vill jag bara tre grupper så
den fjärde personen skulle faktiskt

104
00:06:25,910 --> 00:06:30,160
börja från början och säga,
ja, jag är laget nummer ett också,

105
00:06:30,160 --> 00:06:32,890
och nästa person
skulle vara lag nummer två.

106
00:06:32,890 --> 00:06:37,660
Och därifrån, de kan då
dela upp i sina grupper.

107
00:06:37,660 --> 00:06:41,130
>> Så, hur kan jag använda modulo
att hjälpa mig att genomföra

108
00:06:41,130 --> 00:06:44,160
detta räknas bort wrap runt funktion?

109
00:06:44,160 --> 00:06:50,140
Tja, den första personen
nummer 1, mod 3 ger oss en.

110
00:06:50,140 --> 00:06:54,690
2 mod 3 ger oss två,
och 3 mod 3 ger oss 0.

111
00:06:54,690 --> 00:07:02,140
>> Den fjärde personen, nummer 4, mod 3
ger oss en, och sedan 5 mod 3 ger oss två.

112
00:07:02,140 --> 00:07:05,370
Så kommer du att märka att även om
antalet människor som jag har

113
00:07:05,370 --> 00:07:11,210
ökar, och är över
3, eftersom jag modding med 3

114
00:07:11,210 --> 00:07:15,250
Jag får alltid siffrorna 0, 1 och 2.

115
00:07:15,250 --> 00:07:19,040
Jag får aldrig större än 3.

116
00:07:19,040 --> 00:07:22,630
Alltså, även om jag hade 10
människor, då alla dessa människor

117
00:07:22,630 --> 00:07:27,430
skulle fortfarande vara inom grupperna 1, 2, eller 0.

118
00:07:27,430 --> 00:07:33,560
>> Så, nu vet vi att om vi har en grupp
av 5 och vi mod alla de med 3,

119
00:07:33,560 --> 00:07:38,180
då vi kommer aldrig att
överstiga grupperna 0, 1 eller 2.

120
00:07:38,180 --> 00:07:43,430
Så vi kommer aldrig att få en grupp
tal som är lika med 3 eller högre.

121
00:07:43,430 --> 00:07:46,980
Så även om jag lägger fem mer
människor, då alla av dem

122
00:07:46,980 --> 00:07:53,150
skulle fortfarande tilldelas till grupper
0, 1, eller 2 eftersom jag modding av tre.

123
00:07:53,150 --> 00:07:56,510
Jag kommer aldrig att överstiga den mössa.

124
00:07:56,510 --> 00:08:00,800
>> OK, så låt oss se om vi kan tillämpa
detta koncept för att använda modulo

125
00:08:00,800 --> 00:08:03,710
att omsluta
gruppnummer och tillämpa

126
00:08:03,710 --> 00:08:08,000
den till Vigenère där vi vill
att använda modulo att linda runt

127
00:08:08,000 --> 00:08:10,220
Indexet för sökordet.

128
00:08:10,220 --> 00:08:12,830
Även om vi uppräkning
index vi alltid

129
00:08:12,830 --> 00:08:17,260
vill se till att vi alltid
lindas runt till början

130
00:08:17,260 --> 00:08:20,050
aldrig överskrider den
längden på strängen.

131
00:08:20,050 --> 00:08:23,510
>> OK, så jag vet att det kan vara
lite överväldigande.

132
00:08:23,510 --> 00:08:26,670
Det finns mycket mer att göra i denna p set.

133
00:08:26,670 --> 00:08:30,050
Så, se till att du skriver ut
en bra pseudokod själv

134
00:08:30,050 --> 00:08:32,870
att du förstår och
som får jobbet gjort.

135
00:08:32,870 --> 00:08:35,580
Försök och ta itu med varje
enda rad oberoende av varandra

136
00:08:35,580 --> 00:08:38,370
räkna ut alla de små
små pusselbitar

137
00:08:38,370 --> 00:08:40,260
innan det tillsammans.

138
00:08:40,260 --> 00:08:43,110
>> Se till att du kan få
nyckeln från kommandoraden

139
00:08:43,110 --> 00:08:46,780
och se till att det är alfabetisk,
får klartext från användaren,

140
00:08:46,780 --> 00:08:51,010
och sedan i krypterings, se till att du
vet hur man chiffrera en enda bokstav,

141
00:08:51,010 --> 00:08:56,130
och sedan gå vidare till hela strängen
med alla wrap runt funktioner.

142
00:08:56,130 --> 00:08:59,610
Slutligen, kan du skriva ut chiffertexten.

143
00:08:59,610 --> 00:09:04,050
>> Mitt namn är en Zamyla,
och detta var Vigenère.

144
00:09:04,050 --> 00:09:07,757

