1
00:00:00,000 --> 00:00:00,930

2
00:00:00,930 --> 00:00:04,030
>> Zamyla Kubilas: Leiskite paspartinti mūsų
žaidimas su vigenere šifras.

3
00:00:04,030 --> 00:00:06,710
Vigenere šifras yra
labai panašus į Cezaris,

4
00:00:06,710 --> 00:00:11,060
išskyrus Cezario mes priimtas
vienas sveikasis skaičius, nes mūsų raktu.

5
00:00:11,060 --> 00:00:14,100
Be vigenere mes ketiname
perduoti į raktinį žodį.

6
00:00:14,100 --> 00:00:19,400
Taigi, jei aš norėjau perkelti
ciphertext tai AP 50 iki ohai,

7
00:00:19,400 --> 00:00:23,260
tada tai reiškia, kad kiekvieno rašto
ohai ketina tapti raktu,

8
00:00:23,260 --> 00:00:27,160
ir aš ruošiuosi ciklo per
kad raktažodis mano pamainą

9
00:00:27,160 --> 00:00:31,930
priėmimo ciphertext
daug sunkiau iššifruoti.

10
00:00:31,930 --> 00:00:34,540
>> Ką tai reiškia, kad
pereiti prie raktinį žodį?

11
00:00:34,540 --> 00:00:38,610
Na, raktinis žodis yra eilutė
kur kiekvienas laiškas atitinka

12
00:00:38,610 --> 00:00:41,080
tam tikru sveikasis pamainą.

13
00:00:41,080 --> 00:00:49,310
Taigi, o atitinka 14 raktu,
h iki ne daugiau kaip 7 raktą, yra turi 0 raktą,

14
00:00:49,310 --> 00:00:54,670
taip, kad nekeistų nieko,
ir tada i turi 8 raktą.

15
00:00:54,670 --> 00:01:00,000
>> Pasakykite išbėgau vigenere A su
teksto tai CS50 gerai,

16
00:01:00,000 --> 00:01:02,800
kad būtų tiesiog duoti
man nepakitęs eilutė.

17
00:01:02,800 --> 00:01:08,170
Atkreipkite dėmesį, kad tai atitinka
veikia Cezaris su nulinės raktu.

18
00:01:08,170 --> 00:01:12,070
Tiesą sakant, veikia vigenere
su bet kokį vieną simbolį

19
00:01:12,070 --> 00:01:17,070
būtų lygiavertis veikia
Cezaris su tuo pačiu sveikojo skaičiaus.

20
00:01:17,070 --> 00:01:20,400
>> Gerai, taip, nes
jie tokie panašūs, aš

21
00:01:20,400 --> 00:01:24,300
tikrai rekomenduoju, kad jei
norite, galite tiesiog nukopijuoti Cezaris

22
00:01:24,300 --> 00:01:26,932
kodą į savo vigenere kodą.

23
00:01:26,932 --> 00:01:28,640
Kas pasikeis,
bet bent jau turite

24
00:01:28,640 --> 00:01:31,110
kai stuburas, kad jūs galite dirbti.

25
00:01:31,110 --> 00:01:36,410
Nes Todos yra tokie patys norime
gauti raktą, gauti teksto,

26
00:01:36,410 --> 00:01:40,690
Zaszyfrować, kad teksto,
ir tada spausdinti, kad iš.

27
00:01:40,690 --> 00:01:44,980
>> Tiesiog kaip Cezaris raktas ketina
būtų perduodama kaip antrasis komandų eilutę

28
00:01:44,980 --> 00:01:50,540
argumentas esančius argv indeksą
1, bet tai skirtingi šį kartą

29
00:01:50,540 --> 00:01:52,560
nes ji turi būti abėcėlinis.

30
00:01:52,560 --> 00:01:56,390
Taigi, mes turime kartoti per kiekvieną
vienas simbolis toje raktą

31
00:01:56,390 --> 00:02:00,800
, kad vartotojo priimtas, ir užtikrinti,
kad kiekvienas personažas yra abėcėlinis

32
00:02:00,800 --> 00:02:02,800
siekiant toliau.

33
00:02:02,800 --> 00:02:05,560
>> Kai mes padarėme, kad tada mes
gali gauti eilutę iš naudotojo,

34
00:02:05,560 --> 00:02:07,560
kaip mes anksčiau.

35
00:02:07,560 --> 00:02:10,520
Ir dabar, mes prieiname prie širdies
iš už vigenere problemos,

36
00:02:10,520 --> 00:02:14,665
kuris yra kaip Cezaris, kaip
išsiaiškinti šifravimo modelį

37
00:02:14,665 --> 00:02:19,760
ir lygtis ir Zaszyfrować
visa paprastasis.

38
00:02:19,760 --> 00:02:23,280
>> Taigi, jūs pastebėsite, kad
lygtis vigenere pamainą

39
00:02:23,280 --> 00:02:25,610
yra labai panašus į Cezariu.

40
00:02:25,610 --> 00:02:29,780
Vienintelis skirtumas yra tas, kad
vietoje vieno kintamojo k

41
00:02:29,780 --> 00:02:37,270
anksčiau, dabar K turi apatinis indeksas,
nurodant JTH rakto laišką.

42
00:02:37,270 --> 00:02:39,560
>> Apžvelkime pavyzdys.

43
00:02:39,560 --> 00:02:43,830
Pasakykite, kad norėjo perduoti paslaptį
žinutė ant jūsų sutraiškyti, man patinka jums.

44
00:02:43,830 --> 00:02:46,325
Na, jūsų rakto Jums
pasirinkti kažką, kad jūsų

45
00:02:46,325 --> 00:02:49,790
žinoti traiškyti žino, kad jums patinka, panda.

46
00:02:49,790 --> 00:02:52,290
Gerai, taip, kaip mes perkelti tai?

47
00:02:52,290 --> 00:02:55,500
>> Na, mes turime paprastojo indeksą.

48
00:02:55,500 --> 00:02:59,160
Štai pirmajame laiške, ir
taip yra mūsų raktas puslapis

49
00:02:59,160 --> 00:03:02,830
kuris yra bent P, pirmasis
laiškas mūsų Panda žodį.

50
00:03:02,830 --> 00:03:08,590
Taigi, aš perjungimo P suteikia mums x
tada mes iš anksto paprastojo indeksą.

51
00:03:08,590 --> 00:03:10,460
Tai pasireiškia mus į kosmosą.

52
00:03:10,460 --> 00:03:13,540
Dabar, tarpas
yra ne Abėcėlinis,

53
00:03:13,540 --> 00:03:16,930
taip, kad reiškia, kad, kad tik
perdavimus per į ciphertext,

54
00:03:16,930 --> 00:03:23,430
mes padėkite tarpą ten, ir mes ne
anksto mūsų raktas indeksą.

55
00:03:23,430 --> 00:03:25,820
Taigi, mes vis dar p šiuo metu.

56
00:03:25,820 --> 00:03:30,130
>> Mes iš anksto į kitą
rodiklis mūsų paprastojo.

57
00:03:30,130 --> 00:03:34,030
Ir dabar, nes tai yra
laišką, mažąją l

58
00:03:34,030 --> 00:03:37,920
mes pereiti, kad iki
Kitas puslapis mūsų raktu.

59
00:03:37,920 --> 00:03:42,360
Kuris yra, kuris yra nulis
perėjimas, kad tik tampa

60
00:03:42,360 --> 00:03:44,370
in mūsų ciphertext l.

61
00:03:44,370 --> 00:03:51,120
Tada mes iš anksto tiek paprastojo ir
pagrindinis puslapis, nes tai Abėcėlinis.

62
00:03:51,120 --> 00:03:56,210
Taigi mes ir toliau, kad
kol mes gauti e į pan.

63
00:03:56,210 --> 00:04:01,090
>> Visos teisės, todėl jūs pastebėsite, ne tai
punktas, kad, kalbant apie mūsų pagrindiniu rodikliu,

64
00:04:01,090 --> 00:04:03,940
mes pasiekė pabaigą
Panda žodis, tai kas

65
00:04:03,940 --> 00:04:08,750
atsitinka, kai mes gauti į kitą
Abėcėlinis laiškas į paprastojo?

66
00:04:08,750 --> 00:04:12,180
Na, viskas, kas vyksta, mes
apvynioti į pradžią,

67
00:04:12,180 --> 00:04:14,710
į pirmąjį indeksą mūsų raktu.

68
00:04:14,710 --> 00:04:19,570
Taigi, tada mes pereiti, kad
Y P mums n.

69
00:04:19,570 --> 00:04:26,860
Ir tada, mes ir toliau apdailos koduotę
Mūsų paprastasis gauti x lvne Noh.

70
00:04:26,860 --> 00:04:29,300
>> Iš šio pavyzdžio, aš
parodė, kad mes tik iš anksto

71
00:04:29,300 --> 00:04:33,140
į kitą raidę raktinį žodį
jei paprasto teksto simbolių

72
00:04:33,140 --> 00:04:37,480
yra todėl IsAlpha laiškas
funkcija bus naudinga čia.

73
00:04:37,480 --> 00:04:43,030
Ir, kaip ir Cezaris, mes norime
išsaugoti atveju isupper ir islower.

74
00:04:43,030 --> 00:04:46,100
Taigi, pridėkite šį šiek tiek
į į jūsų Pseudocode.

75
00:04:46,100 --> 00:04:48,510
>> Taigi, kaip mes išsiaiškinti pagrindinius pokyčius?

76
00:04:48,510 --> 00:04:53,030
Na, jei jūs prisimenate mūsų diskusiją
nuo abėcėlės indeksai Cezaris

77
00:04:53,030 --> 00:04:55,370
problema, tai labai panašus.

78
00:04:55,370 --> 00:05:01,130
>> Kai atitinka ASCII
vertė 65, bet nuo 0 perėjimas,

79
00:05:01,130 --> 00:05:03,550
ir tada paskutinė jo raidė
abėcėlėje, Z,

80
00:05:03,550 --> 00:05:06,940
atitinka 25 d pamainą.

81
00:05:06,940 --> 00:05:10,320
Jūs pastebėsite, kad pamainos
yra identiškas ar ne

82
00:05:10,320 --> 00:05:14,880
laiškas yra didžiosiomis arba mažosiomis raidėmis.

83
00:05:14,880 --> 00:05:17,700
>> Gerai, kad dabar, kad jūs
žinoti, kaip išsiaiškinti,

84
00:05:17,700 --> 00:05:21,470
skaitmeninė perėjimas, kad
atitinka vienas simbolis

85
00:05:21,470 --> 00:05:24,050
grįžkime prie mūsų lygtį.

86
00:05:24,050 --> 00:05:28,180
Kadangi mes turime dvi skirtingas
indeksai čia, i ir j,

87
00:05:28,180 --> 00:05:32,130
tai užuomina, kad mes norime sekti
Abu mūsų padėtį paprastojo

88
00:05:32,130 --> 00:05:36,600
taip pat mūsų poziciją raktažodį
todėl tiems, yra du atskiri kintamieji

89
00:05:36,600 --> 00:05:39,010
kad mes norime saugoti griebtis.

90
00:05:39,010 --> 00:05:42,580
>> Dabar, mūsų paprastojo pozicija
ketina padidinti kiekvieną kartą,

91
00:05:42,580 --> 00:05:45,530
kad ketina būti
tiek daugiau tiesiai į priekį

92
00:05:45,530 --> 00:05:49,750
o ne pozicijos raktažodis,
kurią mes žinome, turi apvynioti,

93
00:05:49,750 --> 00:05:52,910
o kartais prieaugio,
kartais lieka tos pačios.

94
00:05:52,910 --> 00:05:55,430
Taigi, kaip mes įgyvendinti
funkcionalumas

95
00:05:55,430 --> 00:05:59,820
į kuriuos vyniojami aplink
indeksas raktažodį?

96
00:05:59,820 --> 00:06:01,640
>> Aš ruošiuosi naudoti tikėtis ne pavyzdys.

97
00:06:01,640 --> 00:06:06,100
Skaičiavimas išjungti yra populiarus būdas
padalinti žmones į grupes.

98
00:06:06,100 --> 00:06:10,660
Pasakykite turėjau 5 žmonės, ir aš norėjau
juos padalinti į tris grupes,

99
00:06:10,660 --> 00:06:13,640
gerai, tada norėčiau pradėti skaičiuoti išjungtas.

100
00:06:13,640 --> 00:06:16,980
Pirmasis asmuo būtų
pasakyti, kad esu komanda numeris vienas,

101
00:06:16,980 --> 00:06:21,030
kitas asmuo būtų komanda skaičius
du, trečiasis asmuo komanda skaičius

102
00:06:21,030 --> 00:06:21,910
trys.

103
00:06:21,910 --> 00:06:25,910
Dabar, aš tik noriu tris grupes,
ketvirtas žmogus iš tikrųjų

104
00:06:25,910 --> 00:06:30,160
pradėti iš pradžių ir pasakyti,
Na, aš komanda numeris vienas, taip pat,

105
00:06:30,160 --> 00:06:32,890
ir kitam asmeniui,
Būtų komanda numeris du.

106
00:06:32,890 --> 00:06:37,660
Ir iš ten, jie gali
atskirti į savo grupes.

107
00:06:37,660 --> 00:06:41,130
>> Taigi, kaip galėčiau naudoti modulo
padėti man įgyvendinti

108
00:06:41,130 --> 00:06:44,160
tai skaičiuoti nuo apvynioti funkcija?

109
00:06:44,160 --> 00:06:50,140
Na, pirmas žmogus
skaičius 1, mod 3 suteikia mums 1 d.

110
00:06:50,140 --> 00:06:54,690
2 mod 3 suteikia mums 2,
ir 3 mod 3 suteikia mums 0.

111
00:06:54,690 --> 00:07:02,140
>> Ketvirtasis asmuo, numeris 4, mod 3
suteikia mums 1, ir tada 5 Mod 3 suteikia mums 2.

112
00:07:02,140 --> 00:07:05,370
Taigi, jūs pastebėsite, kad nors
žmonių skaičius, kad turiu

113
00:07:05,370 --> 00:07:11,210
padidina, ir yra didesnis už
3, nes aš modding iš 3

114
00:07:11,210 --> 00:07:15,250
Aš visada gauti skaičiai nuo 0, 1 ir 2.

115
00:07:15,250 --> 00:07:19,040
Aš niekada didesnis nei 3.

116
00:07:19,040 --> 00:07:22,630
Taigi, net jei aš turėjo 10
žmonių, tada visi iš tų žmonių,

117
00:07:22,630 --> 00:07:27,430
vis tiek būtų per 1, 2, arba 0 grupių.

118
00:07:27,430 --> 00:07:33,560
>> Taigi, dabar mes žinome, kad jei mes turime grupę
5, ir mes mod visi tie 3,

119
00:07:33,560 --> 00:07:38,180
tada mes niekada
viršyti grupes 0, 1, arba 2.

120
00:07:38,180 --> 00:07:43,430
Taigi, mes niekada gauti grupę
numeris, kuris priklauso lygus 3 arba aukščiau.

121
00:07:43,430 --> 00:07:46,980
Taigi, net jei aš įdėti penki
žmonės, visi iš jų

122
00:07:46,980 --> 00:07:53,150
vis tiek priskirti grupėms
0, 1 arba 2, nes aš modding iš 3.

123
00:07:53,150 --> 00:07:56,510
Aš niekada viršytų tą dangtelį.

124
00:07:56,510 --> 00:08:00,800
>> Gerai, kad galime pamatyti, jei mes galime taikyti
ši koncepcija naudojant modulo

125
00:08:00,800 --> 00:08:03,710
į kuriuos vyniojami aplink
grupė numeriai ir taikyti

126
00:08:03,710 --> 00:08:08,000
ji vigenere kur mes norime
naudoti modulo wrap aplink

127
00:08:08,000 --> 00:08:10,220
už žodį indeksas.

128
00:08:10,220 --> 00:08:12,830
Nors mes incrementing
indeksas mes visada

129
00:08:12,830 --> 00:08:17,260
norite įsitikinti, kad mes visada
apvynioti į pačią pradžią

130
00:08:17,260 --> 00:08:20,050
niekada viršijamas
ilgis eilutę.

131
00:08:20,050 --> 00:08:23,510
>> Gerai, kad aš žinau, tai gali būti
šiek tiek absoliuti.

132
00:08:23,510 --> 00:08:26,670
Yra daug daugiau nuveikti šioje p rinkinys.

133
00:08:26,670 --> 00:08:30,050
Taigi, įsitikinkite, kad jums parašyti
geras Pseudocode sau

134
00:08:30,050 --> 00:08:32,870
kad jums suprasti ir
kad gauna darbą.

135
00:08:32,870 --> 00:08:35,580
Išbandykite ir spręsti kiekvieną
vienos linijos nepriklausomai

136
00:08:35,580 --> 00:08:38,370
suprasti, visi mažai
maži dėlionės

137
00:08:38,370 --> 00:08:40,260
prieš išleidimą kartu.

138
00:08:40,260 --> 00:08:43,110
>> Įsitikinkite, kad jūs galite gauti
raktas iš komandinės eilutės

139
00:08:43,110 --> 00:08:46,780
ir užtikrinti, kad tai Abėcėlinis,
gauti paprastą tekstą iš vartotojo,

140
00:08:46,780 --> 00:08:51,010
ir tada šifravimo, įsitikinkite, kad jūs
žinoti, kaip šifruoti vieną raidę,

141
00:08:51,010 --> 00:08:56,130
ir tada pereiti į visą eilutę
su visais aplink funkcijų plėvele.

142
00:08:56,130 --> 00:08:59,610
Galiausiai, jūs galite spausdinti ciphertext.

143
00:08:59,610 --> 00:09:04,050
>> Mano vardas yra Zamyla,
ir tai buvo vigenere.

144
00:09:04,050 --> 00:09:07,757

