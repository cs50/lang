Zamyla Chan: Poďme zintenzívniť naše Hra s Vigener kód. Vigener kód je veľmi podobný cisárovi, s výnimkou Caesar sme absolvovali v jediné číslo ako náš kľúč. V Vigener ideme odovzdať kľúčové slovo. Takže, keby som chcel posunúť Ciphertext je to SK 50 podľa Ohai, potom to znamená, že každé písmeno v Ohai bude slúžiť ako kľúč, a idem na bicykli cez že kľúčové slovo pre moje smeny vďaka ciphertext oveľa ťažšie dekódovať. 

Čo to znamená posunúť o kľúčové slovo? No, kľúčové slovo je reťazec kde každý písmeno zodpovedá do istej celé číslo posunu. Takže, o zodpovedá tlačidlu 14, h na kľúč 7, A má kľúč 0, takže by sa nič nezmenilo, a potom som má kľúč 8. 

Povedzme, že som bežal Vigener A s obyčajný text je to CS50 dobre, že by jednoducho dať me nezmenenej reťazec. Všimnite si, že to je ekvivalentná beh Caesar s kľúčom nula. V skutočnosti, beh Vigener s akýmkoľvek jedným znakom by bol ekvivalent k behu Caesar s rovnakým celé číslo. 

Dobre, takže, pretože oni sú tak podobné, že by som v skutočnosti odporučiť, že ak chcete, môžete len skopírovať Caesar Kód do Vigener kódu. Veci sa menia, ale aspoň máte niektorí chrbticu, ktoré môžete pracovať. Vzhľadom k tomu, Todos sú rovnaké chceme získať kľúč, ten obyčajný text, zašifrovať, že obyčajný text, a vytlačiť to von. 

Rovnako ako Caesar kľúč sa chystá odovzdané v ako druhý príkazového riadku argumentácia obsiahnuté v indexe argv 1, ale je to tentoraz inak pretože musí byť abecedný. Takže musíme iteráciu každý Jeden znak v tomto kľúči že používateľ prešiel v, a zaistiť že každý znak je abecedný s cieľom pokračovať. 

Potom, čo sme urobili, potom by sme môže dostať reťazec od užívateľa, rovnako ako sme to urobili predtým. A teraz sa dostávame k jadru problému pre Vigener, čo je rovnako ako Caesar, ako sa vymyslieť kódovacieho vzoru a rovnice, a zašifrovať celý holý. 

Takže, zistíte, že rovnica pre posun Vigener je veľmi podobný tomu, ktorý Caesar. Jediný rozdiel je, že namiesto jedinej premennej k skôr, teraz k má dolný index, označujúce JTH písmeno kľúča. 

Poďme sa prejsť príklad. Povedzme, že ste chcel odovzdať tajomstvo Správa na svoju lásku, mám ťa rád. No, pre váš kľúče, ktorý vybrať niečo, že váš viem tlačenica vie, že sa vám páči, pandy. Dobre, tak ako sme to posunúť? 

No, máme holého textu index. To je na prvé písmeno a takže je index pre náš kľúč ktorý je u p, prvý písmeno v našej panda slovo. Takže, presúva Aj podľa p us x udáva, Potom sme sa posunúť holého textu index. To nás dostáva do priestoru. Teraz je medzera je non abecedný, tak, že znamená, že, že práve prevody priamo nad do ciphertext, dáme priestor tam, a my nie posunúť index pre náš kľúč. Takže, sme stále na str v tomto bode. 

My postúpiť do ďalšej index v našej obyčajného textu. A teraz, pretože to je list je malé l, posunieme, že touto ďalší index v našej kľúča. Ktorý je, ktorý je nulový Posun takže jednoducho stane l v našej ciphertext. Potom sme postúpiť aj holý text, a kľúč index, pretože to je abecedný. Takže budeme pokračovať, že až sa dostaneme do e v podobne. 

V poriadku, takže si všimnete na to ukazujú, že, pokiaľ ide o nášho indexu kľúča, sme došli na koniec panda slovo, takže to, čo sa stane, keď sa dostaneme k druhému abecedný list v holom texte? No, všetko, čo sa stane, je, že sme zábal okolo na začiatok, na prvý index nášho kľúča. Áno, potom posunieme, že y o p n dať nám. A potom budeme pokračovať dokončovacie kódovanie Naše plaintext dostať x lvne NOH. 

Z tohto príkladu I ukázala, že my len vopred na ďalšie písmeno v kľúčové slovo v prípade, že postava vo formáte obyčajného textu je list, takže IsAlpha funkcia príde vhod tu. A rovnako ako v Caesar, chceme zachovať prípad, isupper a islower. Takže, pridajte tento trochu V do svojho pseudokódu. 

Tak ako sme sa zistiť kľúčové posuny? No, ak si spomínate našu diskusiu Na abecedný indexy v Caesar Problém, je to veľmi podobné. 

Kde A zodpovedá ASCII hodnota 65, ale k posunu 0, a potom posledné písmeno v abecede, Z, zodpovedá posunu 25 ° C. Všimnite si, že posun je totožná tiež písmeno je veľké písmená alebo malé písmená. 

OK, tak teraz, keď vás vedieť, ako prísť na to, číselné posun, ktorý zodpovedá jednému znaku vráťme sa k našej rovnice. Pretože máme dva odlišné indexy tu, i a j, To je náznak, že chceme sledovať ako našej pozície v holom texte rovnako ako našu pozíciu v kľúčové slovo, tak tie sú dve samostatné premenné že chceme udržať držanie. 

Teraz sa pozície v našej obyčajný text porastie zakaždým, takže to bude byť trochu viac priamočiara v protiklade k pozícii kľúčového slova, ktorého poznáme má zabaliť okolo, a niekedy aj zvyšovať, Niekedy zostane rovnaký. Tak, ako sme sa realizovať funkčnosť zabaliť okolo index pre kľúčové slovo? 

Budem používať započatia príklad. Počítanie off je populárny spôsob, rozdeliť ľudí do skupín. Povedzme, že som mal 5 ľudí a chcel som ich rozdeliť do troch skupín, no potom by som začať odpočítavať. Prvá osoba by hovoria, že som tím číslo jedna, ďalšia osoba bude počet tím dva, tím číslo tretia osoba tri. Teraz chcem len tri skupín, aby bolo štvrtá osoba by v skutočnosti začať od začiatku a hovoria, No, ja som team číslo jedna, rovnako, a ďalšia osoba by tím číslo dva. A odtiaľ potom môžu oddeliť do svojich skupín. 

Tak, ako by som mohol použiť modulo aby mi pomohol realizovať Tento odpočítať zábal okolo funkciu? No, prvá osoba číslo 1, mod 3 nám dáva 1. 2 mod 3 nám dáva 2, a 3 mod 3 nám dáva 0. 

Štvrtá osoba, číslo 4, mod 3 nám dáva 1 a potom 5 mod 3 nám dáva 2. Takže, všimnete si, že hoci počet ľudí, ktoré mám zvyšuje, a je nad 3, pretože som modding o 3 Vždy som si čísla 0, 1 a 2. Nikdy som sa dostať väčší ako 3. A tak, aj keď som mal 10 ľudí, potom všetky z tých ľudí, by ešte bolo v rámci skupín 1, 2, alebo 0. 

Takže teraz vieme, že ak máme skupinu 5 a my mod všetky tie, o 3, Potom sme nikdy presiahnuť skupiny 0, 1 alebo 2. Takže sme nikdy dostať skupinu číslo, ktoré je rovné 3 alebo vyššej. Takže, aj keď pridám ďalších päť ľudí, potom všetky z nich by sa ešte zaradené do skupín 0, 1 alebo 2, pretože som modding o 3. Ja nikdy prekročiť tento čiapku. 

OK, takže uvidíme, či môžeme aplikovať Tento koncept použitia modulo zabaliť okolo Čísla skupín a aplikovať to Vigener kam chceme používať modulo obtekanie Hodnota indexu pre kľúčové slovo. Aj napriek tomu, že sme postupne index vždy chcete byť istý, že sme vždy zábal okolo samého počiatku nikdy prekročení dĺžka reťazca. 

OK, takže viem, že by to mohlo byť trochu ohromujúce. Je tu oveľa viac robiť v tejto p sade. Takže, uistite sa, že ste vypísať dobrý pseudocode pre seba že chápete a že dostane úlohu. Pokúsiť sa riešiť každý jednoriadkový nezávisle zisťuje, všetko malý malé kúsky skladačky Pred uvedením dohromady. 

Uistite sa, že môžete získať kľúče z príkazového riadku a zabezpečiť, že to je abecedný, ten obyčajný text od užívateľa, a potom v zašifrovať, uistite sa, že vedieť zašifrovať jedno písmeno, a potom postupujú do celého reťazca so všetkými ovinutie funkcií. A konečne, môžete vytlačiť ciphertext. 

Moje meno je Zamyla, a to bolo Vigener. 