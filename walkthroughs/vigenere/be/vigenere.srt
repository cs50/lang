1
00:00:00,000 --> 00:00:00,930

2
00:00:00,930 --> 00:00:04,030
>> Zamyla Чан: Давайце актывізаваць нашы
гульня з Vigenere шыфра.

3
00:00:04,030 --> 00:00:06,710
Vigenere шыфр
вельмі падобны на Цэзара,

4
00:00:06,710 --> 00:00:11,060
акрамя Цэзара мы прайшлі ў
адно цэлае, як наш ключ.

5
00:00:11,060 --> 00:00:14,100
У Vigenere мы збіраемся
перадаць у якасці ключавога слова.

6
00:00:14,100 --> 00:00:19,400
Так што, калі б я хацеў, каб зрушыць
шифротекста гэта CS 50 ад ohai,

7
00:00:19,400 --> 00:00:23,260
то гэта азначае, што кожная літара ў
ohai будзе служыць у якасці ключа,

8
00:00:23,260 --> 00:00:27,160
і я збіраюся цыклу над
што ключавое слова для майго зруху

9
00:00:27,160 --> 00:00:31,930
што робіць зашыфраванага
значна цяжэй расшыфраваць.

10
00:00:31,930 --> 00:00:34,540
>> Што гэта значыць
зрух па ключавым слове?

11
00:00:34,540 --> 00:00:38,610
Ну, ключавое слова з'яўляецца радком
дзе кожная літара адпавядае

12
00:00:38,610 --> 00:00:41,080
да некаторага цэлага зруху.

13
00:00:41,080 --> 00:00:49,310
Такім чынам, O адпавядае ключу 14,
ч да ключа 7, мае ключ ад 0,

14
00:00:49,310 --> 00:00:54,670
так што нічога не змяніла б,
а затым я ёсць ключ 8.

15
00:00:54,670 --> 00:01:00,000
>> Скажам, я пабег Vigenere А з
просты тэкст гэта добра CS50,

16
00:01:00,000 --> 00:01:02,800
што б проста даць
мне нязменную радок.

17
00:01:02,800 --> 00:01:08,170
Звярніце ўвагу на тое, што гэта эквівалентна
Цэзар працуе з ключом, роўным нулю.

18
00:01:08,170 --> 00:01:12,070
На самай справе, бег Vigenere
з любым адзінкавым сімвалам

19
00:01:12,070 --> 00:01:17,070
будзе эквівалентна запуску
Цэзар з тым жа лікам.

20
00:01:17,070 --> 00:01:20,400
>> Добра, так, так як
яны настолькі падобныя, я б

21
00:01:20,400 --> 00:01:24,300
на самай справе рэкамендую, калі вам
хочаце, вы можаце проста скапіяваць Цэзар

22
00:01:24,300 --> 00:01:26,932
код у код Vigenere.

23
00:01:26,932 --> 00:01:28,640
Ўсё будзе мяняцца,
але па меншай меры ў вас ёсць

24
00:01:28,640 --> 00:01:31,110
некаторыя пазваночнік, што вы можаце працаваць з.

25
00:01:31,110 --> 00:01:36,410
Паколькі TODOS такія ж мы хочам
каб атрымаць ключ, атрымаць просты тэкст,

26
00:01:36,410 --> 00:01:40,690
зашыфроўваць, што звычайны тэкст,
а затым раздрукаваць гэта.

27
00:01:40,690 --> 00:01:44,980
>> Гэтак жа, як Цэзар ключ збіраецца
быць прыняты ў якасці другой каманднага радка

28
00:01:44,980 --> 00:01:50,540
аргумент, які змяшчаецца ў індэксе ARGV
1, але гэта па-іншаму на гэты раз

29
00:01:50,540 --> 00:01:52,560
таму што яна павінна быць у алфавітным парадку.

30
00:01:52,560 --> 00:01:56,390
Такім чынам, мы павінны перабраць кожны
адзін знак у гэтым ключы

31
00:01:56,390 --> 00:02:00,800
што карыстальнік прайшоў у, а таксама забяспечыць
што кожны знак літарны

32
00:02:00,800 --> 00:02:02,800
для таго, каб працягнуць.

33
00:02:02,800 --> 00:02:05,560
>> Пасля таго, як мы зрабілі гэта, то мы
можа атрымаць радок ад карыстальніка,

34
00:02:05,560 --> 00:02:07,560
гэтак жа, як мы рабілі раней.

35
00:02:07,560 --> 00:02:10,520
І зараз, мы прыходзім да сэрца
праблемы для Vigenere,

36
00:02:10,520 --> 00:02:14,665
які гэтак жа, як Цэзар, то як да
высветліць карціну шыфраванні

37
00:02:14,665 --> 00:02:19,760
і раўнанне, і зашыфроўваць
ўвесь адкрыты тэкст.

38
00:02:19,760 --> 00:02:23,280
>> Такім чынам, вы заўважыце, што
Раўнанне для Vigenere зруху

39
00:02:23,280 --> 00:02:25,610
вельмі падобны на Цэзара адзін.

40
00:02:25,610 --> 00:02:29,780
Адзінае адрозненне складаецца ў тым, што
замест адной зменнай да

41
00:02:29,780 --> 00:02:37,270
раней, цяпер да мае індэкс,
з указаннем -ю літару ключа.

42
00:02:37,270 --> 00:02:39,560
>> Давайце разбярэм прыклад.

43
00:02:39,560 --> 00:02:43,830
Дапусцім, вы хацелі перадаць сакрэт
паведамленне на ваш цісканіна, што ты мне падабаешся.

44
00:02:43,830 --> 00:02:46,325
Ну, для вашага ключа, які вы
выбраць нешта, што ваш

45
00:02:46,325 --> 00:02:49,790
ведаю, цісканіна ведае, што вам падабаецца, панд.

46
00:02:49,790 --> 00:02:52,290
Добра, так як мы ссунем гэта?

47
00:02:52,290 --> 00:02:55,500
>> Ну, у нас ёсць наш індэкс адкрытага тэксту.

48
00:02:55,500 --> 00:02:59,160
Вось у першым лісце і
так гэта індэкс для нашага ключа

49
00:02:59,160 --> 00:03:02,830
якая знаходзіцца на р, першы
літара ў нашым панды слове.

50
00:03:02,830 --> 00:03:08,590
Такім чынам, зрушэнне I р дае нам х,
Затым мы рухаемся наперад адкрытага тэксту індэкс.

51
00:03:08,590 --> 00:03:10,460
Гэта прымушае нас прастору.

52
00:03:10,460 --> 00:03:13,540
Цяпер, сімвал прабелу
не з'яўляецца алфавітным,

53
00:03:13,540 --> 00:03:16,930
так што гэта азначае, што, што якраз
перадае прама да шифротекста,

54
00:03:16,930 --> 00:03:23,430
мы змяшчаем прастору там, і мы не робім
прасоўваць індэкс для нашага ключа.

55
00:03:23,430 --> 00:03:25,820
Такім чынам, мы ўсё яшчэ на р у гэтай кропцы.

56
00:03:25,820 --> 00:03:30,130
>> Мы перайсці да наступнага
Індэкс ў нашым адкрытага тэксту.

57
00:03:30,130 --> 00:03:34,030
А цяпер, таму што гэта
літара, ніжні рэгістр л,

58
00:03:34,030 --> 00:03:37,920
мы пераходзім што да
Наступны індэкс ў нашым ключы.

59
00:03:37,920 --> 00:03:42,360
Які з'яўляецца, які з'яўляецца нулявым
зрух, так што проста становіцца

60
00:03:42,360 --> 00:03:44,370
л ў нашым шифротекста.

61
00:03:44,370 --> 00:03:51,120
Затым мы рухаемся наперад як адкрыты тэкст, і
ключ індэкса, таму што гэта літарны.

62
00:03:51,120 --> 00:03:56,210
Такім чынам, мы працягваем, што
пакуль мы не атрымаем на электронны адрас у падобным.

63
00:03:56,210 --> 00:04:01,090
>> Добра, так што вы ўбачыце ў гэтым
паказваюць, што, з пункту гледжання нашага ключавога індэкса,

64
00:04:01,090 --> 00:04:03,940
мы дасягнулі канца
панда слова, так, што

65
00:04:03,940 --> 00:04:08,750
адбываецца, калі мы пяройдзем да наступнага
алфавітны літара ў незашыфраваным выглядзе?

66
00:04:08,750 --> 00:04:12,180
Ну, усё, што адбываецца, мы
абгарнуць вакол пачатку,

67
00:04:12,180 --> 00:04:14,710
да першага індэксе нашага ключа.

68
00:04:14,710 --> 00:04:19,570
Так, тады мы перамяшчаем, што
у р, каб даць нам п.

69
00:04:19,570 --> 00:04:26,860
І потым, мы працягваем аддзелачныя кадаваньне
наш адкрыты тэкст, каб атрымаць х lvne NOH.

70
00:04:26,860 --> 00:04:29,300
>> З гэтага прыкладу, я
паказалі, што мы толькі загадзя

71
00:04:29,300 --> 00:04:33,140
да наступнай літары ў ключавых словах
калі знак у выглядзе звычайнага тэксту

72
00:04:33,140 --> 00:04:37,480
гэты ліст так што IsAlpha
функцыя спатрэбіцца тут.

73
00:04:37,480 --> 00:04:43,030
І, гэтак жа, як у Цэзар, мы хочам
захаваць справы, ISUPPER і ISLOWER.

74
00:04:43,030 --> 00:04:46,100
Так, дадайце трохі
ва ў ваш псевдокоде.

75
00:04:46,100 --> 00:04:48,510
>> Так як жа нам высветліць ключавыя зрухі?

76
00:04:48,510 --> 00:04:53,030
Ну, калі вы памятаеце нашу дыскусію
на літарных індэксаў у Цэзару

77
00:04:53,030 --> 00:04:55,370
праблема, гэта вельмі падобна.

78
00:04:55,370 --> 00:05:01,130
>> Дзе A адпавядае ASCII
значэнне 65, але зрушэнне 0,

79
00:05:01,130 --> 00:05:03,550
а затым апошняя літара
у алфавіце, Z,

80
00:05:03,550 --> 00:05:06,940
адпавядае зруху 25.

81
00:05:06,940 --> 00:05:10,320
Вы заўважыце, што зрух
ідэнтычная ці не

82
00:05:10,320 --> 00:05:14,880
літара ў верхнім рэгістры або ніжнім рэгістры.

83
00:05:14,880 --> 00:05:17,700
>> ОК, так што зараз, калі вы
ведаюць, як высветліць,

84
00:05:17,700 --> 00:05:21,470
колькасны зрух,
адпавядае аднаму знаку

85
00:05:21,470 --> 00:05:24,050
давайце вернемся да нашага раўнанні.

86
00:05:24,050 --> 00:05:28,180
Таму што мы маем два розных
індэксы тут, я і J,

87
00:05:28,180 --> 00:05:32,130
гэта намёк, што мы хочам, каб сачыць
і нашай пазіцыі ў незашыфраваным

88
00:05:32,130 --> 00:05:36,600
а таксама нашай пазіцыі ў ключавых словах,
так што тыя дзве асобныя зменныя

89
00:05:36,600 --> 00:05:39,010
што мы хочам захаваць валоданне.

90
00:05:39,010 --> 00:05:42,580
>> Цяпер становішча ў нашым незашыфраваным
будзе павялічвацца кожны раз,

91
00:05:42,580 --> 00:05:45,530
так што гэта будзе
трохі больш прама наперад

92
00:05:45,530 --> 00:05:49,750
у адрозненне ад пазіцыі ключавых слоў,
які мы ведаем, ёсць абгарнуць вакол,

93
00:05:49,750 --> 00:05:52,910
а часам і прырашчэнне,
часам застаюцца тымі ж.

94
00:05:52,910 --> 00:05:55,430
Такім чынам, як жа мы рэалізуем
функцыянальнасць

95
00:05:55,430 --> 00:05:59,820
каб абгарнуць вакол
Індэкс для ключавога слова?

96
00:05:59,820 --> 00:06:01,640
>> Я збіраюся выкарыстоўваць адлічыць прыклад.

97
00:06:01,640 --> 00:06:06,100
Адлічваючы з'яўляецца папулярным спосабам
каб падзяліць людзей на групы.

98
00:06:06,100 --> 00:06:10,660
Скажам, у мяне было 5 чалавек, і я хацеў
падзяліць іх на тры групы,

99
00:06:10,660 --> 00:06:13,640
ну тады я хацеў бы пачаць з загінаць.

100
00:06:13,640 --> 00:06:16,980
Першы чалавек будзе
сказаць, што я каманда нумар адзін,

101
00:06:16,980 --> 00:06:21,030
наступны чалавек будзе нумар каманды
два, трэцяя асоба нумар каманды

102
00:06:21,030 --> 00:06:21,910
тры.

103
00:06:21,910 --> 00:06:25,910
Зараз, я хачу толькі тры групы так,
чацвёрты чалавек будзе на самой справе

104
00:06:25,910 --> 00:06:30,160
пачаць з самага пачатку, і кажуць,
ну, я каманда нумар адзін, а таксама,

105
00:06:30,160 --> 00:06:32,890
і наступны чалавек
будзе каманда нумар два.

106
00:06:32,890 --> 00:06:37,660
І адтуль, яны могуць
падзяляюцца на свае групы.

107
00:06:37,660 --> 00:06:41,130
>> Такім чынам, як я мог бы выкарыстаць па модулю
каб дапамагчы мне рэалізаваць

108
00:06:41,130 --> 00:06:44,160
гэта адлічыць абгарнуць вакол функцыі?

109
00:06:44,160 --> 00:06:50,140
Ну, першы чалавек,
нумар 1, па модулю 3 дае нам 1.

110
00:06:50,140 --> 00:06:54,690
2 мод 3 дае нам 2,
і 3 па модулю 3 дае нам 0.

111
00:06:54,690 --> 00:07:02,140
>> Чацвёрты чалавек, нумар 4, мод 3
дае нам 1, а затым 5 мод 3 дае нам 2.

112
00:07:02,140 --> 00:07:05,370
Такім чынам, можна заўважыць, што нягледзячы на ​​тое,
лік людзей, што ў мяне ёсць

113
00:07:05,370 --> 00:07:11,210
павялічваецца, і вышэй
3, так як я модынгу на 3

114
00:07:11,210 --> 00:07:15,250
Я заўсёды атрымліваю колькасці 0, 1 і 2.

115
00:07:15,250 --> 00:07:19,040
Я ніколі не атрымліваю больш, чым 3.

116
00:07:19,040 --> 00:07:22,630
Такім чынам, нават калі ў мяне было 10
людзі, то ўсе з тых людзей,

117
00:07:22,630 --> 00:07:27,430
будзе па-ранейшаму знаходзіцца ў групах 1, 2 ці 0.

118
00:07:27,430 --> 00:07:33,560
>> Такім чынам, зараз мы ведаем, што калі мы маем групу
5 і мы мод ўсе тыя, на 3,

119
00:07:33,560 --> 00:07:38,180
то мы ніколі не будзем
перавышаць групы 0, 1 або 2.

120
00:07:38,180 --> 00:07:43,430
Такім чынам, мы ніколі не збіраемся, каб атрымаць групу
лік, гэта роўна 3 або вышэй.

121
00:07:43,430 --> 00:07:46,980
Такім чынам, нават калі я дадам яшчэ пяць
людзі, то ўсе з іх

122
00:07:46,980 --> 00:07:53,150
будзе па-ранейшаму быць прызначаныя групам
0, 1 або 2, таму што я модынгу на 3.

123
00:07:53,150 --> 00:07:56,510
Я ніколі не будзе перавышаць гэтую крышку.

124
00:07:56,510 --> 00:08:00,800
>> ОК, так што давайце паглядзім, калі мы можам прымяніць
гэта паняцце выкарыстання па модулю

125
00:08:00,800 --> 00:08:03,710
каб абгарнуць вакол
нумары груп і прымяніць

126
00:08:03,710 --> 00:08:08,000
гэта Vigenere, дзе мы хочам
выкарыстоўваць па модулю, каб абгарнуць вакол

127
00:08:08,000 --> 00:08:10,220
індэкс па ключавым слове.

128
00:08:10,220 --> 00:08:12,830
Нягледзячы на ​​тое, што мы прырашчэннем
індэкс мы заўсёды

129
00:08:12,830 --> 00:08:17,260
хочаце, каб пераканацца, што мы заўсёды
абгарнуць да самага пачатку

130
00:08:17,260 --> 00:08:20,050
ніколі не перавышаючы
даўжыня радка.

131
00:08:20,050 --> 00:08:23,510
>> ОК, так што я ведаю, што гэта можа быць
трохі пераважнай.

132
00:08:23,510 --> 00:08:26,670
Там вельмі шмат больш, каб зрабіць у гэтым р наборы.

133
00:08:26,670 --> 00:08:30,050
Такім чынам, пераканайцеся, што вы пішаце з
добры псевдокод для сябе

134
00:08:30,050 --> 00:08:32,870
што вы разумееце і
што выконвае сваю працу.

135
00:08:32,870 --> 00:08:35,580
Паспрабуйце звярнуцца кожны
адзінкавая лінія незалежна адзін ад аднаго

136
00:08:35,580 --> 00:08:38,370
высветліць усе мала
невялікія кавалачкі галаваломкі

137
00:08:38,370 --> 00:08:40,260
перш чым пакласці яго разам.

138
00:08:40,260 --> 00:08:43,110
>> Пераканайцеся, што вы можаце атрымаць
ключ з каманднага радка

139
00:08:43,110 --> 00:08:46,780
і пераканайцеся, што гэта алфавітны,
атрымаць просты тэкст ад карыстальніка,

140
00:08:46,780 --> 00:08:51,010
а затым у шыфраванні, пераканайцеся, што вы
ведаюць, як зашыфраваць адну літару,

141
00:08:51,010 --> 00:08:56,130
а затым пераходзіце на ўсю радок
з усімі абгарнуць вакол функцый.

142
00:08:56,130 --> 00:08:59,610
І, нарэшце, вы можаце раздрукаваць шифротекста.

143
00:08:59,610 --> 00:09:04,050
>> Мяне клічуць гэта Zamyla,
і гэта было Vigenere.

144
00:09:04,050 --> 00:09:07,757

