Zamyla Chan: Să intensifice nostru joc cu cifrul Vigenere. Cifrul Vigenere este foarte similar cu Cezar, cu excepția lui Cezar am trecut în un singur număr întreg ca cheia noastră. În Vigenere vom merge pentru a trece într-un cuvânt cheie. Așa că, dacă am vrut să transfere ciphertext acest lucru este CS 50 de ohai, atunci înseamnă că fiecare literă ohai va servi drept cheie, și mă duc la un ciclu de peste acel cuvânt cheie pentru trecerea mea ceea ce face ciphertext mult mai greu de decodat. 

Ce înseamnă să trecerea de cuvântul cheie? Ei bine, cuvântul cheie este un șir de caractere în cazul în care fiecare literă corespunde într-o oarecare schimbare de număr întreg. Așa că, o 'corespunde unei chei de 14, h la o cheie de 7, o are o cheie de 0, astfel încât nu s-ar schimba nimic, și apoi am are o cheie de 8. 

Spun ca am fugit Vigenere A cu text simplu acest lucru este CS50 bine, care ar da pur și simplu mi un șir neschimbat. Observați că acest lucru este echivalent cu Caesar rulează cu o cheie de la zero. De fapt, Vigenere rulează cu orice caracter unic ar fi echivalent cu funcționare Cezar cu același număr întreg. 

Bine, deci, din moment ce ele sunt atât de similare aș de fapt, recomandăm că, dacă doriți, puteți copia pur și simplu Cezar tău codul în codul Vigenere. Lucrurile se vor schimba, dar cel puțin aveți unele coloana vertebrală pe care le poate lucra cu. Deoarece Todos sunt la fel ne-o dorim pentru a obține cheia, pentru a primi textul simplu, cifrare acel text simplu, și apoi tipăriți asta. 

La fel ca Caesar cheia va să fie trecut în cea de a doua ca linia de comandă Argumentul conținut în indexul argv 1, dar este diferit de data asta pentru că acesta trebuie să fie în ordine alfabetică. Așa că, trebuie să itera fiecare cu un singur caracter în acea cheie că utilizatorul a trecut în, și să se asigure că fiecare caracter este alfabetic în scopul de a continua. 

Odată ce am făcut asta, atunci noi poate obține șirul de la utilizator, la fel cum am făcut înainte. Și acum, am ajuns la inimă a problemei pentru Vigenere, care este la fel ca Cezar, cum să dau seama de modelul de cifrare și ecuația, și cifrare întreaga plaintext. 

Așa că, veți observați că Ecuația pentru trecerea Vigenere este foarte similar cu cel Caesar. Singura diferență este că în loc de o singură variabilă k înainte, acum k are un subscript, indicând litera j cheii. 

Hai să mergem printr-un exemplu. Spuneți că ați vrut să treacă un secret Mesajul pe pasiune, îmi place de tine. Ei bine, pentru cheia tine alege ceva care ta știu zdrobi știe că vă place, ursii panda. Bine, așa cum putem schimba acest lucru? 

Ei bine, avem indexul nostru plaintext. Asta e la prima literă și astfel încât este indicele pentru cheia noastră care se află la p, primul scrisoare în cuvântul nostru panda. Așa că, mutând eu de p-ne x da, atunci vom avansa indicele plaintext. Acest lucru ne duce la un spațiu. Acum, caracterul spațiu este non alfabetice, astfel încât înseamnă că, pe care tocmai transferuri la dreapta peste textul cifrat, am pus un spațiu acolo, iar noi nu facem avans indicele pentru cheia noastră. Așa că, suntem încă la p la acest punct. 

Noi avansa la următorul indexul în plaintext nostru. Și acum, pentru că este o scrisoare, litere mici L, trecem că, prin următor indicele în cheia noastră. Ceea ce este, ceea ce este un zero schimbare, astfel încât devine doar o l în nostru ciphertext. Apoi, vom avansa atât plaintext- și indicele cheie, deoarece este în ordine alfabetică. Așa că, atunci vom continua că până când vom ajunge la e în place. 

Bine, deci vei observa acest punct că, în ceea ce privește indicele nostru cheie, am ajuns la sfârșitul anului cuvântul panda, astfel încât ceea ce se întâmplă atunci când vom ajunge la următorul literă alfabetică în plaintext-? Ei bine, tot ceea ce se întâmplă este noi încheie în jurul valorii de la început, la primul index al noastre cheie. Așa că, atunci vom schimba asta y de p pentru a ne da n. Și apoi, vom continua finisare de codificare plaintext nostru pentru a obține x lvne Noh. 

Din acest exemplu, am a arătat că numai în avans la următoarea literă a cuvântului cheie în cazul în care caracterul în text simplu este o literă, astfel încât isalpha Funcția va veni la îndemână aici. Și, la fel ca și în Cezar, vrem să păstra caz, isupper și islower. Așa că, adăugați acest pic în în pseudocod ta. 

Deci, cum ne dăm seama schimbările cheie? Ei bine, dacă îți amintești discuția noastră asupra indicilor alfabetică Cezar problemă este foarte asemănătoare. 

În cazul în care A corespunde unei ASCII valoarea 65, ci o schimbare de la 0, și apoi ultima literă în alfabet, Z, corespunde unei deplasări de 25. Vei observa că tura este identic sau dacă nu scrisoarea este cu majuscule sau minuscule. 

OK, deci acum că știu cum să dau seama tura numerică care corespunde unui singur caracter Să ne întoarcem la ecuația noastră. Pentru că avem două diferite subscript aici, i și j, asta e un indiciu pe care dorim să urmăriți atât poziția noastră în plaintext- precum și poziția noastră în cuvântul cheie, astfel încât acestea sunt două variabile distincte pe care vrem să păstreze o dețin. 

Acum, poziția în plaintext noastră va crește de fiecare dată, astfel că va fi un pic mai mult drept înainte spre deosebire de poziția cuvântului cheie, pe care știm că trebuie să-și încheie în jurul valorii, și, uneori, incrementa, uneori rămân aceleași. Deci, cum putem pune în aplicare funcționalitatea să-și încheie în jurul valorii de index pentru cuvântul cheie? 

Am de gând să utilizeze conta off exemplu. Numărare off este un mod popular pentru a împărți oamenii în grupuri. Spune că am avut 5 persoane și am vrut să împărțiți-le în trei grupuri, bine, atunci aș începe prin numărarea off. Prima persoană care ar spun că sunt echipa numărul unu, persoana următoare ar fi numărul de echipa doi, numărul de echipa a treia persoană Trei. Acum, eu vreau doar trei grupuri, astfel a patra persoană ar efectiv încep de la început și să spunem, bine, eu sunt echipa numărul unu la fel de bine, iar următoarea persoană ar fi echipa numărul doi. Și, de acolo, ei pot apoi separate in grupurile lor. 

Asa ca, cum s-ar putea să folosesc modulo să mă ajute să pună în aplicare acest off conta folie în jurul funcției? Ei bine, prima persoană numărul 1, mod 3 ne dă 1. 2 mod 3 ne dă 2, și 3 mod 3 ne dă 0. 

A patra persoană, numărul 4, 3 mod ne dă 1, și apoi 5 mod 3 ne dă 2. Așa că, veți observa că, chiar dacă numărul de persoane pe care am crește, și este mai presus 3, din moment ce eu sunt modding de 3 Am întotdeauna numere de 0, 1 și 2. N-am obține mai mult de 3. Așa că, atunci, chiar dacă am avut 10 oameni, atunci toți acei oameni ar fi în continuare în cadrul grupurilor 1, 2, sau 0. 

Deci, acum știm că, dacă avem un grup din 5 și noi Mod toți cei de 3, atunci vom merge niciodată la depășesc grupele 0, 1 sau 2. Așa că, vom intra niciodată un grup număr care este egal cu 3 sau mai sus. Deci, chiar dacă am adăuga încă cinci oameni, atunci toate acestea ar fi în continuare clasificate în grupele 0, 1 sau 2 pentru că eu sunt modding de 3. Eu nu o să depășească acel capac. 

OK, așa că hai să vedem dacă putem aplica acest concept de utilizare a modulo să-și încheie în jurul valorii de Numerele de grup și se aplică l la Vigenere unde dorim să utilizeze modulo să-și încheie în jurul valorii de indicele pentru cuvântul cheie. Chiar dacă suntem incrementare indicele întotdeauna am doriți să vă asigurați că întotdeauna în jurul valorii de folie la bun început niciodată să depășească lungimea șirului. 

OK, așa că știu că ar putea fi un pic copleșitoare. Există o mult mai mult de făcut în acest p set. Așa că, asigurați-vă că ați scrie un pseudocod bun pentru tine că înțelegeți și care devine treaba. Încercați și adresa fiecare o singură linie, în mod independent imaginind toate micile bucăți mici de puzzle înainte de a pune împreună. 

Asigurați-vă că puteți obține cheia din linia de comandă și să se asigure că este în ordine alfabetică, obține textul simplu de la utilizator, și apoi în cifrare, asigurați-vă că știu cum să cifrare o singură literă, și apoi se trece la întregul șir cu toate învelitorii în jurul valorii de funcții. În cele din urmă, puteți imprima ciphertext. 

Numele meu este un Zamyla, iar acest lucru a fost Vigenere. 