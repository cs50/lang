Zamyla Chan: Laten we een stap onze spel met de vigenèrecijfer. De vigenèrecijfer is zeer vergelijkbaar met Caesar, behalve in Caesar kwamen we in een integer onze sleutel. In Vigenere we gaan geschiedde in een trefwoord. Dus, als ik wilde het verschuiven cijfertekst dit CS 50 door ohai, dan is dat betekent dat elke letter in ohai gaat om te dienen als de sleutel, en ik ga fietsen over dat zoekwoord voor mijn shift waardoor de cijfertekst een stuk moeilijker te decoderen. 

Wat betekent het om verschuiven door het trefwoord? Nou, het sleutelwoord is een string waar elke letter overeenkomt wat integer shift. Dus, de o overeenkomt met een sleutel van 14, h een sleutel van 7, a een sleutel van 0, dus dat zou niets veranderen, en dan moet ik een sleutel van 8. 

Zeg ik liep Vigenere A met de platte tekst is dit CS50 goed, dat zou gewoon geven me een onveranderd string. Merk op dat dit overeenkomt met Caesar lopen met een sleutel nul. In feite, het lopen Vigenere met elk willekeurig teken gelijk aan het uitvoeren zou Caesar met hetzelfde getal. 

Oké, dus, aangezien ze zijn zo op elkaar lijken Ik zou eigenlijk aanraden dat als je wilt kunt u gewoon uw Caesar kopiëren code in uw Vigenere code. Dingen zullen veranderen, maar in ieder geval heb je sommige backbone die je kunt werken. Omdat de TODOS zijn dezelfde die we willen om de sleutel te krijgen, krijgen de platte tekst, encipher dat platte tekst, en vervolgens afdrukken die uit. 

Net als Caesar de sleutel gaat worden doorgegeven als de tweede command line argument in argv index 1, maar het is anders deze keer omdat het moet alfabetisch zijn. Dus, moeten we meer dan herhalen iedere enkel teken in die toets dat de gebruiker doorgegeven, en zorgen dat elk karakter is alfabetisch om door te gaan. 

Zodra we dat gedaan hebt, dan zullen we kan de tekenreeks krijgen van de gebruiker, net zoals we voorheen. En nu komen we bij het hart het probleem voor Vigenere, dat is net als Caesar, hoe achterhalen van de encryptieapparatuur patroon en vergelijking, en encipher het hele plaintext. 

Dus, zult u merken dat de vergelijking voor de Vigenere shift is zeer vergelijkbaar met de Caesar één. Het enige verschil is dat in plaats van een enkele variabele k vóór, nu k heeft een onderschrift, met vermelding van de jde letter van de toets. 

Laten we eens een voorbeeld. Stel dat je wilde een geheim voorbij bericht op je geliefde, ik hou van je. Nou ja, voor uw sleutel u kies iets dat je weet te verpletteren weet dat je wilt, panda's. Oké, dus hoe kunnen we deze verschuiving? 

Nou, we hebben onze plaintext index. Dat is op de eerste letter en zo is de index voor onze key die aan de p, de eerste brief in onze panda woord. Dus verschuift I p geeft ons x, dan vooraf we het leesbare index. Dit brengt ons naar een ruimte. Nu, de spatie is niet alfabetisch, dus dat betekent dat, dat net transfers recht over naar de gecodeerde tekst, we een ruimte is er, en dat doen we niet vooraf de index voor onze belangrijkste. Dus, we zijn nog steeds op p op dit punt. 

We gaan naar het volgende index in onze plaintext. En nu, want dat is een brief, de kleine letter l, We verschuiven dat de volgende index in onze belangrijkste. Dat een, een nul shift zodat alleen wordt een l in onze cijfertekst. Dan, vooruit we zowel de platte tekst, en de belangrijkste index, want het is alfabetisch. Dus dan gaan we dat totdat we bij de e in dergelijke. 

Oké, dus je zult merken in deze wijzen dat, wat betreft onze sleutelindex, we hebben het einde van de bereikte de panda woord, dus wat gebeurt er als we naar het volgende alfabetische brief in de plaintext? Nou ja, alles wat er gebeurt is dat we wikkel rond naar het begin, de eerste index van onze belangrijkste. Zo is, dan schuiven we dat y door p ons n te geven. En dan gaan we verder afwerken encoding onze plaintext naar x lvne noh krijgen. 

Dit voorbeeld I toonde aan dat we alleen vooruit naar de volgende letter in het trefwoord als het personage in platte tekst is een brief zodat de isAlpha functie zal van pas komen hier. En, net als in Caesar, willen we het behoud van de zaak, isupper en islower. Dus, voeg deze beetje in in uw pseudocode. 

Dus hoe kunnen we achterhalen van de belangrijkste verschuivingen? Nou, als je herinneren aan onze discussie op alfabetische indices in de Caesar probleem, het is zeer vergelijkbaar. 

Waarin A correspondeert met een ASCII waarde van 65 maar een verschuiving van 0, en dan de laatste letter in het alfabet, Z, komt overeen met een verschuiving van 25. U zult merken dat de verschuiving identiek of de brief is hoofdletters of kleine letters. 

OK, dus nu dat je weten hoe om erachter te komen de numerieke verschuiving die correspondeert met één teken Laten we teruggaan naar onze vergelijking. Omdat we twee verschillende indices hier, i en j, Dat is een hint dat we willen bijhouden van zowel onze positie in de plaintext evenals onze positie in het trefwoord, Dus dat zijn twee verschillende variabelen dat we willen een greep van te houden. 

Nu is de positie in onze plaintext zal elke keer verhogen, zodat gaat om een ​​te zijn wat meer rechttoe rechtaan in tegenstelling tot de positie van het zoekwoord, waarvan we weten heeft om rond te wikkelen, en soms verhogen, soms dezelfde blijven. Dus, hoe kunnen we implementeren de functionaliteit te wikkelen rond de index voor het zoekwoord? 

Ik ga naar het aftellen voorbeeld te gebruiken. Tellen off is een populaire manier mensen in groepen verdeeld. Zeggen dat ik had 5 mensen en ik wilde splitsen in drie groepen, nou dan zou ik beginnen door het tellen uit. De eerste persoon zou doen zeggen dat ik het team nummer een, de volgende persoon zou team getal twee, de derde persoon teamnummer drie. Nu, ik wil slechts drie groepen, zodat de vierde persoon zou eigenlijk bij het begin beginnen en te zeggen: Nou, ik ben het team nummer een als goed, en de volgende persoon zouden team nummer twee te zijn. En van daaruit kunnen ze dan scheiden in hun groep. 

Dus, hoe kan ik gebruik maken van modulo om me te helpen uit te voeren Dit aftellen wrap around functie? Nou, de eerste persoon nummer 1, mod 3 geeft ons 1. 2 mod 3 geeft ons 2, en 3 mod 3 geeft ons 0. 

De vierde persoon, nummer 4, mod 3 geeft ons 1, en vervolgens 5 mod 3 geeft ons 2. Dus, zult u merken dat, hoewel het aantal mensen die ik heb verhoogt en boven 3, aangezien ik modding door 3 Ik krijg altijd getallen 0, 1 en 2. Ik krijg nooit groter dan 3. Zo dan, zelfs als ik had 10 mensen, dan al die mensen zou nog steeds binnen groepen 1, 2, of 0. 

Zo, nu weten we dat als we een groep van 5 en we mod al die door 3, dan zijn we nooit te overschrijden groepen 0, 1 of 2. Dus we nooit naar een groep te krijgen nummer dat is gelijk aan 3 of hoger. Dus, zelfs als ik toe te voegen vijf mensen, dan allemaal zou nog steeds worden toegewezen aan groepen 0, 1 of 2, want ik ben het modden van 3. Ik ga nooit naar die cap overtreffen. 

OK, dus laten we eens kijken of we kunnen toepassen Dit concept van het gebruik modulo te wikkelen rond de groepsnummers en toe te passen het aan Vigenère waar we willen modulo te gebruiken om rond te wikkelen de index voor het zoekwoord. Hoewel we het verhogen de index we altijd willen ervoor zorgen dat we altijd wikkel rond naar het allereerste begin nooit meer dan de lengte van de snaar. 

OK, dus ik weet dat het zou kunnen zijn een beetje overweldigend. Er is veel meer te doen in dit p set. Dus, zorg ervoor dat u uitschrijven een goede pseudocode voor jezelf dat u begrijpt en dat klaart de klus. Probeer het en pakken elke enkele lijn onafhankelijk het uitzoeken van alle kleine kleine stukjes van de puzzel voordat het samenstellen van het. 

Zorg ervoor dat je kunt krijgen de sleutel uit de opdrachtregel en ervoor te zorgen dat het alfabetisch, krijgt de gewone tekst van de gebruiker, en vervolgens in encryptieapparatuur, zorg ervoor dat je weet hoe je een enkele letter vercijferen, en vervolgens doorstromen naar de hele reeks met alle van de wrap around functies. Ten slotte kunt u de cijfertekst af te drukken. 

Mijn naam is een Zamyla, en dit was Vigenere. 