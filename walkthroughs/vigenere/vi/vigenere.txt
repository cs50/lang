Zamyla Chan: Hãy bước lên chúng tôi trò chơi với các thuật toán mã hóa vigenere. Các thuật toán mã hóa vigenere là rất giống với Caesar, trừ Caesar chúng tôi thông qua tại một số nguyên duy nhất là chính chúng ta. Trong vigenere chúng ta sẽ để vượt qua trong một từ khóa. Vì vậy, nếu tôi muốn chuyển các bản mã này là CS 50 bởi ohai, sau đó có nghĩa rằng mỗi chữ cái trong ohai sẽ phục vụ như là chìa khóa, và tôi sẽ đến chu kỳ trên từ khóa cho sự thay đổi của tôi làm cho các bản mã rất nhiều khó khăn hơn để giải mã. 

không có nghĩa là gì chuyển bằng các từ khóa? Vâng, từ khóa là một chuỗi nơi mỗi lá thư tương ứng đến một số thay đổi số nguyên. Vì vậy, các o tương ứng với khóa 14, h cho một phím số 7, một có một phím 0, do đó sẽ không thay đổi bất cứ điều gì, và sau đó tôi có một khóa 8. 

Nói rằng tôi chạy vigenere A với văn bản đơn giản này là CS50 tốt, mà chỉ đơn giản là sẽ cung cấp cho cho tôi một chuỗi không thay đổi. Chú ý rằng điều này là tương đương với chạy Caesar với khóa bằng không. Trong thực tế, chạy vigenere với bất cứ ký tự đơn sẽ tương đương với chạy Caesar với số nguyên cùng. 

Được rồi, như vậy, vì họ là như vậy tương tự như tôi muốn thực sự khuyên rằng nếu bạn muốn bạn chỉ có thể sao chép Caesar của bạn mã vào mã vigenere của bạn. Mọi thứ sẽ thay đổi, nhưng ít nhất bạn có một số xương sống mà bạn có thể làm việc với. Bởi vì Todos đều giống nhau, chúng tôi muốn để có được chìa khóa, có văn bản đồng bằng, Mã hóa là văn bản đơn giản, và sau đó in ra rằng. 

Cũng giống như Caesar phím sẽ được thông qua tại như dòng lệnh thứ hai lập luận chứa trong chỉ số argv 1, nhưng nó khác nhau thời gian này vì nó phải là chữ cái. Vì vậy, chúng ta cần để lặp qua mỗi nhân vật duy nhất trong chủ chốt mà người sử dụng đã có, đảm bảo mà mỗi nhân vật là chữ cái để tiếp tục. 

Một khi chúng ta đã làm điều đó, sau đó chúng tôi có thể có được chuỗi từ người sử dụng, cũng như chúng ta đã làm trước. Và bây giờ, chúng tôi đến với trái tim của vấn đề cho vigenere, mà chỉ là như Caesar, làm thế nào để tìm ra các mô hình Enciphering và phương trình, và Mã hóa toàn bộ bản rõ. 

Vì vậy, bạn sẽ nhận thấy rằng phương trình cho sự thay đổi vigenere là rất tương tự như Caesar. Sự khác biệt duy nhất là thay vì một biến duy nhất k trước, bây giờ k có chỉ số phụ, chỉ thư thứ j của khoá. 

Hãy xem qua một ví dụ. Giả sử bạn muốn vượt qua một bí mật nhắn vào lòng của bạn, tôi thích bạn. Vâng, đối với chính bạn, bạn chọn cái gì đó của bạn biết lòng biết rằng bạn thích, gấu trúc. Được rồi, vậy làm thế nào chúng ta thay đổi này? 

Vâng, chúng tôi có chỉ số rõ chúng tôi. Đó là ở chữ cái đầu tiên và vậy là chỉ số cho khóa của chúng tôi mà là ở p, là người đầu tiên lá thư từ gấu trúc của chúng tôi. Vì vậy, việc chuyển đổi tôi bởi p cho chúng ta x, sau đó chúng ta tiến chỉ số plaintext. Điều này được chúng tôi đến một không gian. Bây giờ, các nhân vật không gian là không tự chữ cái, do đó có nghĩa rằng, đó chỉ chuyển quyền qua các bản mã, chúng tôi đặt một không gian ở đó, và chúng tôi không thúc đẩy các chỉ số cho chính chúng ta. Vì vậy, chúng tôi vẫn còn ở p vào thời điểm này. 

Chúng tôi tiến đến tiếp theo chỉ số trong bản rõ của chúng tôi. Và bây giờ, bởi vì đó là một bức thư, chữ thường l, chúng tôi thay đổi điều đó bằng các chỉ số tiếp theo trong chính chúng ta. Mà là một, đó là một số không sự thay đổi như vậy mà chỉ cần trở thành một l trong bản mã của chúng tôi. Sau đó, chúng ta tiến cả bản rõ, và các chỉ số quan trọng vì nó là chữ cái. Vì vậy, sau đó chúng tôi tiếp tục mà cho đến khi chúng tôi nhận được e trong như thế nào. 

Được rồi, do đó, bạn sẽ nhận thấy tại đây chỉ rằng, trong điều kiện của chỉ số quan trọng của chúng tôi, chúng tôi đã đạt đến cuối từ gấu trúc, vì vậy những gì xảy ra khi chúng tôi nhận được đến tiếp theo thư chữ cái trong plaintext? Vâng, tất cả những gì xảy ra là chúng tôi quấn xung quanh để bắt đầu, để chỉ số đầu tiên của chính chúng tôi. Vì vậy, sau đó chúng tôi thay đổi đó y bởi p để cung cấp cho chúng tôi n. Và sau đó, chúng tôi tiếp tục hoàn chỉnh mã hóa bản rõ của chúng tôi để có được x lvne noh. 

Từ ví dụ này, tôi cho thấy rằng chúng tôi chỉ tiến để tự tiếp theo trong các từ khóa nếu nhân vật trong văn bản gốc là một bức thư như vậy isalpha chức năng sẽ có ích ở đây. Và, cũng giống như trong Caesar, chúng tôi muốn bảo tồn các trường hợp, isupper và islower. Vì vậy, thêm chút này trong thành giả của bạn. 

Vì vậy, làm thế nào để chúng ta tìm ra những thay đổi quan trọng? Vâng, nếu bạn nhớ lại cuộc thảo luận của chúng tôi trên các chỉ số chữ cái trong các Caesar vấn đề, nó rất giống. 

Trong đó A tương ứng với một ASCII giá trị là 65, nhưng một sự thay đổi từ 0, và sau đó là lá thư cuối cùng trong bảng chữ cái, Z, tương ứng với một sự thay đổi của 25. Bạn sẽ nhận thấy rằng sự thay đổi là giống nhau hay không bức thư là chữ hoa hay chữ thường. 

OK, vì vậy bây giờ mà bạn biết làm thế nào để tìm ra sự thay đổi số mà tương ứng với một ký tự đơn chúng ta hãy quay trở lại phương trình của chúng tôi. Bởi vì chúng tôi có hai khác nhau subscript đây, i, k, đó là một gợi ý rằng chúng ta muốn theo dõi của cả hai vị trí của mình trong plaintext cũng như vị trí của chúng tôi trong các từ khóa, vì vậy những người là hai biến riêng biệt rằng chúng ta muốn giữ một tổ chức của. 

Bây giờ, các vị trí trong bản rõ của chúng tôi sẽ tăng lên mỗi lần, do đó sẽ là một chút về phía trước thẳng như trái ngược với các vị trí từ khóa, mà chúng ta biết có để bọc xung quanh, và đôi khi tăng, đôi khi ở lại cùng. Vì vậy, làm thế nào để chúng ta thực hiện các chức năng để bọc xung quanh chỉ số cho các từ khóa không? 

Tôi sẽ sử dụng cách đếm ví dụ. Đếm ra là một cách phổ biến chia thành các nhóm người. Nói rằng tôi có 5 người và tôi muốn chia chúng thành ba nhóm, cũng sau đó tôi sẽ bắt đầu bằng cách đếm đi. Người đầu tiên sẽ nói tôi là đội bóng số một, người tiếp theo sẽ là số nhóm hai, số lượng nhóm người thứ ba số ba. Bây giờ, tôi chỉ muốn ba nhóm để người thứ tư sẽ thực sự bắt đầu từ đầu và nói, tốt, tôi là đội bóng số một là tốt, và người kế tiếp sẽ là đội bóng số hai. Và, từ đó, họ có thể sau đó phân chia thành các nhóm của họ. 

Vì vậy, làm thế nào tôi có thể sử dụng modulo để giúp tôi thực hiện này đếm ra bọc quanh chức năng? Vâng, người đầu tiên số 1, mod 3 cho chúng ta 1. 2 mod 3 cho chúng ta 2, và 3 mod 3 cho chúng ta 0. 

Người thứ tư, số 4, mod 3 cho chúng ta 1, và sau đó 5 mod 3 cho chúng ta 2. Vì vậy, bạn sẽ nhận thấy rằng mặc dù số lượng người mà tôi có tăng, và ở trên 3, vì tôi modding của 3 Tôi luôn luôn có được con số 0, 1 và 2. Tôi không bao giờ có được lớn hơn 3. Vì vậy, sau đó, ngay cả khi tôi đã 10 người, sau đó tất cả những người sẽ vẫn nằm trong nhóm 1, 2, hoặc 0. 

Vì vậy, bây giờ chúng ta biết rằng nếu chúng ta có một nhóm 5 và chúng tôi mod tất cả những bằng 3, sau đó chúng tôi sẽ không bao giờ đến vượt nhóm 0, 1, hoặc 2. Vì vậy, chúng ta sẽ không bao giờ có được một nhóm số đó bằng 3 hoặc cao hơn. Vì vậy, ngay cả khi tôi thêm năm nữa người, sau đó tất cả chúng sẽ vẫn được giao cho các nhóm 0, 1, hoặc 2, vì tôi đang modding cho 3. Tôi sẽ không bao giờ vượt quá giới hạn đó. 

OK, vì vậy hãy xem nếu chúng ta có thể áp dụng khái niệm này bằng cách sử dụng modulo để bọc xung quanh số nhóm và áp dụng nó để vigenere nơi chúng tôi muốn sử dụng modulo để bọc xung quanh các chỉ số cho các từ khóa. Mặc dù chúng tôi đang incrementing chỉ số chúng ta luôn luôn muốn chắc chắn rằng chúng tôi luôn quấn xung quanh để khi bắt đầu không bao giờ vượt quá chiều dài của chuỗi. 

OK, vì vậy tôi biết nó có thể là một chút áp đảo. Có rất nhiều hơn để làm trong p thiết lập này. Vì vậy, hãy chắc chắn rằng bạn viết ra một giả tốt cho chính mình rằng bạn hiểu và mà được công việc làm. Hãy thử và giải quyết tất cả dòng duy độc lập tìm ra tất cả các bé mảnh nhỏ của câu đố trước khi đưa nó lại với nhau. 

Hãy chắc chắn rằng bạn có thể nhận được phím từ dòng lệnh và đảm bảo rằng đó là chữ cái, nhận được văn bản đồng bằng từ người sử dụng, và sau đó trong Enciphering, chắc chắn bạn biết cách Mã hóa thư duy nhất, và sau đó tiến đến toàn bộ chuỗi với tất cả các chức năng bọc xung quanh. Cuối cùng, bạn có thể in các bản mã. 

Tên tôi là một Zamyla, và đây là vigenere. 