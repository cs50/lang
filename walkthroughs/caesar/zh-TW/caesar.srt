1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> AMILA：讓我們來解決凱撒。

3
00:00:02,270 --> 00:00:06,110
在凱撒，我們允許用戶
編碼一個秘密消息。

4
00:00:06,110 --> 00:00:09,780
因此，讓我們言歸正傳，來看看
在我們的待辦事項這個問題。

5
00:00:09,780 --> 00:00:12,210
因此，首先，我們從用戶的關鍵。

6
00:00:12,210 --> 00:00:15,210
然後，我們得到明文
他們要編碼。

7
00:00:15,210 --> 00:00:21,380
在那之後，我們進行加密為他們，
最後我們打印他們的密文。

8
00:00:21,380 --> 00:00:23,600
>> 所以，讓我們先從一個例子。

9
00:00:23,600 --> 00:00:26,920
假設你想編碼
整個字母表與兩個鍵。

10
00:00:26,920 --> 00:00:31,360
那麼，你的整個字母表會
只是轉移到字母。

11
00:00:31,360 --> 00:00:37,060
因此，A將編碼為C，B，以
D，C至E，等等等等，

12
00:00:37,060 --> 00:00:42,470
直到進入X，編碼到Z
捷思還是取決於你來自哪裡。

13
00:00:42,470 --> 00:00:47,445
那麼Y就再移位一路，
環繞字母去A，

14
00:00:47,445 --> 00:00:53,256
然後最後的最後一個字母
字母表，Z，捷思，將編碼為B.

15
00:00:53,256 --> 00:00:54,660
>> 你明白了嗎？

16
00:00:54,660 --> 00:00:56,380
讓我們來看一些例子。

17
00:00:56,380 --> 00:01:00,540
這裡的第一實施例非常相似
什麼，我們只是上面的解釋。

18
00:01:00,540 --> 00:01:05,560
所以，如果我編碼的某些部分
字母A至L，由二的關鍵，

19
00:01:05,560 --> 00:01:09,760
然後，我只是得到我的整個
字母表轉移兩個字母。

20
00:01:09,760 --> 00:01:12,230
>> 然後，在我的下一個例子，
關鍵還是二，

21
00:01:12,230 --> 00:01:15,080
所以你還應該知道
該信件的期望。

22
00:01:15,080 --> 00:01:16,400
但在這裡它是一個短語。

23
00:01:16,400 --> 00:01:18,100
這是CS50。

24
00:01:18,100 --> 00:01:21,090
所以，你會發現，我
保存了我的信的情況下，

25
00:01:21,090 --> 00:01:25,600
所以任何大寫字母也
大寫字母的密文。

26
00:01:25,600 --> 00:01:27,800
和任何一個小寫
明文中的信

27
00:01:27,800 --> 00:01:30,640
也小寫
信中的密文。

28
00:01:30,640 --> 00:01:34,020
但我一直字母
任何感嘆號

29
00:01:34,020 --> 00:01:37,610
或任何其他標點符號一樣。

30
00:01:37,610 --> 00:01:40,360
>> 所以，現在我們有一個感覺
該計劃是如何工作的，

31
00:01:40,360 --> 00:01:43,890
隨意去跑多一些
你自己的例子，如果你想。

32
00:01:43,890 --> 00:01:47,072
讓我們開始越來越
來自用戶的鍵。

33
00:01:47,072 --> 00:01:48,780
傳統上，用
其他的問題，我們已經

34
00:01:48,780 --> 00:01:51,450
已經習慣了越來越
任何數字，我們

35
00:01:51,450 --> 00:01:54,710
需要通過提示用戶
用函數調用getInt。

36
00:01:54,710 --> 00:01:58,850
但是，這一次，我們真的要
使用命令行參數

37
00:01:58,850 --> 00:02:01,760
和一個新的函數調用的atoi。

38
00:02:01,760 --> 00:02:05,130
>> 當您運行主
程序用C，然後將其

39
00:02:05,130 --> 00:02:08,500
接受兩個parameters--
INT ARGC，這

40
00:02:08,500 --> 00:02:11,670
是參數的數量
傳遞，然後

41
00:02:11,670 --> 00:02:15,920
ARGV，字符串數組，其中包含
所有的參數列表

42
00:02:15,920 --> 00:02:16,740
通過。

43
00:02:16,740 --> 00:02:19,740
你沒有明確有
聲明這些變量。

44
00:02:19,740 --> 00:02:22,700
他們計算了
您可以通過編譯器。

45
00:02:22,700 --> 00:02:28,160
這個正確的用法是
為的argc是兩個在這種情況下，

46
00:02:28,160 --> 00:02:32,630
因為用戶必須通過在
在調用程序，./caesar，

47
00:02:32,630 --> 00:02:35,570
然後鑰匙，
無論數量他們的願望。

48
00:02:35,570 --> 00:02:39,920
這樣就意味著的argc必須有兩個
為了有效利用愷撒

49
00:02:39,920 --> 00:02:41,680
被執行。

50
00:02:41,680 --> 00:02:43,590
>> 所以，讓我們來看一個例子。

51
00:02:43,590 --> 00:02:47,760
說我已經寫和
編譯一個名為升空計劃。

52
00:02:47,760 --> 00:02:52,670
所以，如果我在命令行運行
./blastoff火箭隊，順利的話，

53
00:02:52,670 --> 00:02:57,750
ARGC將有三個，因為我
在三個不同的參數傳遞。

54
00:02:57,750 --> 00:02:59,830
然後argv的是這樣的。

55
00:02:59,830 --> 00:03:03,750
這是一個數組，它會
包含這三個串。

56
00:03:03,750 --> 00:03:09,640
./blastoff在第一索引，隊
在接下來的，並且在過去的火箭。

57
00:03:09,640 --> 00:03:11,610
>> 讓我們來談談對秒的陣列。

58
00:03:11,610 --> 00:03:15,560
數組是保存數據結構
相同類型的多個值。

59
00:03:15,560 --> 00:03:19,980
這可以派上用場的時候，我們
有整數或字符串列表。

60
00:03:19,980 --> 00:03:23,030
只要記住他們
向是相同的類型。

61
00:03:23,030 --> 00:03:25,310
在計算機科學中，我們
愛從零開始計數，

62
00:03:25,310 --> 00:03:29,260
所以記住，數組
也是零索引。

63
00:03:29,260 --> 00:03:34,360
所以，我的數組的第一個元素
將是在指數為零。

64
00:03:34,360 --> 00:03:37,580
因此，在這種情況下，當我有
長度為4的陣列，

65
00:03:37,580 --> 00:03:41,350
隨後的的最後一個索引
我的數組中最後一個元素

66
00:03:41,350 --> 00:03:44,970
實際上將是
在指數三，不是四個。

67
00:03:44,970 --> 00:03:48,880
因為記得，我們
從零開始計數。

68
00:03:48,880 --> 00:03:52,530
>> 這裡有一個如何你一個例子
可以創建自己的數組。

69
00:03:52,530 --> 00:03:56,440
所以說，我想我的存儲
最喜歡的三狗的名字。

70
00:03:56,440 --> 00:03:59,030
然後，我會創建一個字符串數組。

71
00:03:59,030 --> 00:04:04,450
因此，我想聲明的類型，字符串，
然後把陣列的名稱，狗，

72
00:04:04,450 --> 00:04:06,450
然後在這些方
括號把大小

73
00:04:06,450 --> 00:04:09,260
在這種情況下，三個array--。

74
00:04:09,260 --> 00:04:12,690
>> 所以我的第一個條目是怎麼回事
是狗在指數為零，

75
00:04:12,690 --> 00:04:14,750
而這將是米洛。

76
00:04:14,750 --> 00:04:17,850
然後，狗是索引一
將是愚蠢的，

77
00:04:17,850 --> 00:04:23,060
寵兒年糕，然後在最後
項，在指數兩個第三項，

78
00:04:23,060 --> 00:04:26,130
將是可愛，甜美Elphie。

79
00:04:26,130 --> 00:04:28,610
你會發現，格式
對於此數組中填充

80
00:04:28,610 --> 00:04:32,150
很像你怎麼可能
聲明任何其他變量，其中

81
00:04:32,150 --> 00:04:36,307
你有變量名後跟
你想存儲在其中的價值。

82
00:04:36,307 --> 00:04:38,140
在唯一的區別
這種情況下，是你

83
00:04:38,140 --> 00:04:42,700
一定要記得把指數
在方括號內的數值。

84
00:04:42,700 --> 00:04:46,420
還有，我們有我們
最喜歡的三個狗。

85
00:04:46,420 --> 00:04:48,780
>> 但很可惜，它的時間
要回撒。

86
00:04:48,780 --> 00:04:52,910
記住那個在正確的使用方法
用戶將被傳遞不僅

87
00:04:52,910 --> 00:04:57,430
程序./caesar的名稱，但
同時，他們希望轉移的關鍵

88
00:04:57,430 --> 00:04:58,850
其明文。

89
00:04:58,850 --> 00:05:01,540
這樣就意味著的argc必須有兩個。

90
00:05:01,540 --> 00:05:07,580
他們必須通過two--，不多也
不到兩年的命令行參數。

91
00:05:07,580 --> 00:05:09,050
>> 現在，有關的argv？

92
00:05:09,050 --> 00:05:12,880
好了，我們已經知道，
陣列將是長度為二，

93
00:05:12,880 --> 00:05:15,270
但什麼是包含在每一個元素？

94
00:05:15,270 --> 00:05:19,330
好了，第一個元素
將是./caesar，

95
00:05:19,330 --> 00:05:24,190
然後下一個元素是要
包含用戶鍵入的鍵。

96
00:05:24,190 --> 00:05:27,480
現在，如果他們正確使用它
凱撒的使用，

97
00:05:27,480 --> 00:05:29,350
然後他們會在鍵入一個數字。

98
00:05:29,350 --> 00:05:33,260
但是，即使人物
他們Type是一個數字，

99
00:05:33,260 --> 00:05:35,790
它的數據類型為字符串。

100
00:05:35,790 --> 00:05:40,390
>> 那麼，我們如何將其轉換
字符串的整數

101
00:05:40,390 --> 00:05:46,680
所以說，我有NUM，字符串
包含字符串50。

102
00:05:46,680 --> 00:05:49,000
如果我想將其轉換
為整數，那麼我乾脆

103
00:05:49,000 --> 00:05:53,340
聲明一個新的變量，
整數i，調用的atoi。

104
00:05:53,340 --> 00:06:01,160
我通過我的字符串變量，NUM和
然後我會再包含數字50。

105
00:06:01,160 --> 00:06:04,350
確保檢查的人
對於atoi函數頁面

106
00:06:04,350 --> 00:06:07,990
要檢查它的哪個庫
在，還有什麼價值它

107
00:06:07,990 --> 00:06:14,550
將返回如果字符串傳遞
在不包含所有的數字。

108
00:06:14,550 --> 00:06:16,950
>> 所以，現在我們已經得到
鍵，下一個步驟

109
00:06:16,950 --> 00:06:19,430
是獲得來自用戶的明文。

110
00:06:19,430 --> 00:06:21,170
現在，這是怎麼回事
不太複雜

111
00:06:21,170 --> 00:06:23,410
不是圍繞導航
命令行參數。

112
00:06:23,410 --> 00:06:26,190
我們所要做的就是調用
在GetString函數

113
00:06:26,190 --> 00:06:29,660
以提示用戶，得到
我們一個字符串，但要記住

114
00:06:29,660 --> 00:06:34,090
檢查如何規範我們
可能要提示用戶。

115
00:06:34,090 --> 00:06:36,420
>> 現在我們就來了
在problem--的心臟

116
00:06:36,420 --> 00:06:38,860
如何進行加密的明文。

117
00:06:38,860 --> 00:06:42,830
嗯，首先，讓我們來談談如何
在一個時間來加密一個字符，

118
00:06:42,830 --> 00:06:47,370
然後我們將討論如何
遍歷整個明文。

119
00:06:47,370 --> 00:06:50,440
我已經寫了一些偽代碼
對於凱撒的問題。

120
00:06:50,440 --> 00:06:52,310
我鼓勵你
寫自己的為好。

121
00:06:52,310 --> 00:06:55,900
它可能看起來不相同
我的，這是確定的，但只要

122
00:06:55,900 --> 00:06:58,640
作為一般的想法是一致的。

123
00:06:58,640 --> 00:07:00,780
>> 前三個步驟
我們已經做了。

124
00:07:00,780 --> 00:07:03,100
我們已經得到了從關鍵
命令行參數，

125
00:07:03,100 --> 00:07:05,510
我們已經變成了關鍵
成的整數，我們已經

126
00:07:05,510 --> 00:07:09,320
提示明文用戶
他們要進行加密。

127
00:07:09,320 --> 00:07:12,420
於是接下來的大塊
的是，對每個字符

128
00:07:12,420 --> 00:07:15,070
在明文串，
如果是字母，

129
00:07:15,070 --> 00:07:17,750
我們希望保留
它的外殼和移動它。

130
00:07:17,750 --> 00:07:20,900
通過保留的情況下，我
意思是說，所有的大寫

131
00:07:20,900 --> 00:07:23,580
信件應保持上
外殼和全小寫字母

132
00:07:23,580 --> 00:07:25,640
應保持小寫。

133
00:07:25,640 --> 00:07:29,110
於是當我們轉向那些，
那麼我們打印密文。

134
00:07:29,110 --> 00:07:33,100
>> 這裡有三個函數會
就派上用場了這個問題。

135
00:07:33,100 --> 00:07:38,010
記住了上面的時候我給了
例如用於移動，這是CS50？

136
00:07:38,010 --> 00:07:41,800
請記住，50和
感嘆號沒有轉移？

137
00:07:41,800 --> 00:07:45,680
那麼怎樣才能知道我們是否
需要轉向一個字母或不？

138
00:07:45,680 --> 00:07:48,650
嗯，“阿爾法是，”如果
你傳遞一個字符，

139
00:07:48,650 --> 00:07:54,850
將返回如果該字符真
是一個字母，否則為假。

140
00:07:54,850 --> 00:07:56,870
為了幫助您
保持資本

141
00:07:56,870 --> 00:07:59,750
是功能“的
上“和”低“。

142
00:07:59,750 --> 00:08:03,350
>> 這兩個功能還需要
在一個單一的字符作為輸入

143
00:08:03,350 --> 00:08:06,580
並返回一個布爾值，
無論是真的還是假的

144
00:08:06,580 --> 00:08:11,280
取決於是否該字符
是大寫或小寫。

145
00:08:11,280 --> 00:08:14,610
因為“是上”和“是
下“布爾函數，

146
00:08:14,610 --> 00:08:18,660
這意味著他們回報你一個布爾值，
你可以在你的條件下使用它們。

147
00:08:18,660 --> 00:08:23,490
因此，這裡的一個代碼片段，只有
打印的信，如果是大寫。

148
00:08:23,490 --> 00:08:27,790
所以我宣布我的性格
信中大寫捷思

149
00:08:27,790 --> 00:08:33,440
然後，如果“為上”的回報
真的，那我打印的信。

150
00:08:33,440 --> 00:08:38,200
>> 回到我們的簡單例子
通過兩個關鍵移位字母表

151
00:08:38,200 --> 00:08:41,049
我們如何真正得到工作？

152
00:08:41,049 --> 00:08:45,770
那麼，事實證明，字符
和整數的關係非常密切。

153
00:08:45,770 --> 00:08:48,840
每個人物都有一個
相關的整數值

154
00:08:48,840 --> 00:08:53,260
與它的ASCII表中發現，
其中每個字符的ASCII

155
00:08:53,260 --> 00:08:55,380
顯示值。

156
00:08:55,380 --> 00:08:58,940
因此，一個大寫字母A對應
到65 ASCII值

157
00:08:58,940 --> 00:09:02,270
和小寫的a到
97 ASCII值。

158
00:09:02,270 --> 00:09:04,940
>> 隨意查詢
網上的任何ASCII表

159
00:09:04,940 --> 00:09:07,720
看到自己這些值。

160
00:09:07,720 --> 00:09:12,096
所以，這是什麼意思是，我們可以
採取大寫A的角色，

161
00:09:12,096 --> 00:09:18,200
整數兩個附加給它，然後得到
字符大寫C作為一個結果。

162
00:09:18,200 --> 00:09:23,720
這是因為65，ASCII
資本值，加2，

163
00:09:23,720 --> 00:09:29,960
為我們提供了67，其對應於
到上殼體C的字符

164
00:09:29,960 --> 00:09:33,480
>> 不幸的是，事情
將不完全是那麼簡單。

165
00:09:33,480 --> 00:09:36,980
我們有一個方程
我們要考慮的。

166
00:09:36,980 --> 00:09:43,590
這告訴我們，第i個密文
信對應於第i個明文

167
00:09:43,590 --> 00:09:48,900
信，加上key--
所有這一切，模塊化的26。

168
00:09:48,900 --> 00:09:50,810
為什麼會這樣呢？

169
00:09:50,810 --> 00:09:55,430
讓我們回到我們的例子，從
之前，在資本A，加2，

170
00:09:55,430 --> 00:09:57,590
給我們的資本C.

171
00:09:57,590 --> 00:10:01,870
>> 因此，運用方程
規範給我們，

172
00:10:01,870 --> 00:10:06,660
接下來就讓我們一大寫A
加上2和MOD由26。

173
00:10:06,660 --> 00:10:10,730
所以資本A，當我把它放在
那些單引號，

174
00:10:10,730 --> 00:10:14,010
讓我把它當作
的整數，以便允許

175
00:10:14,010 --> 00:10:17,500
我把它轉換為字符的​​ASCII值，65。

176
00:10:17,500 --> 00:10:20,080
65加2是67。

177
00:10:20,080 --> 00:10:25,210
67國防部26給了我們15，
但是這並沒有真正

178
00:10:25,210 --> 00:10:32,590
很有道理，因為我們知道，
大寫字母C的ASCII值是67，而不是15。

179
00:10:32,590 --> 00:10:35,580
那麼，我們如何調和？

180
00:10:35,580 --> 00:10:39,840
>> 那麼，在這裡我想斷定的
一個字母索引的概念。

181
00:10:39,840 --> 00:10:44,010
因此，我們已經談到了如何
每個角色都有它的ASCII值，

182
00:10:44,010 --> 00:10:48,810
但我想說，好吧，讓我們
想想每個字符也有

183
00:10:48,810 --> 00:10:52,230
一個字母索引，
其中A例如，

184
00:10:52,230 --> 00:10:58,800
作為拼音的第一個字母，
具有零字母索引。

185
00:10:58,800 --> 00:11:02,070
所以，現在，讓我們的應用
相同的公式之前，

186
00:11:02,070 --> 00:11:05,040
但使用字母索引。

187
00:11:05,040 --> 00:11:07,810
>> 所以A是零，因為我們已經定義。

188
00:11:07,810 --> 00:11:15,640
於是採取零加二，國防部26日，
這是二，國防部26日，這給了我們兩個。

189
00:11:15,640 --> 00:11:18,780
和好，在以下方面
一個字母索引，

190
00:11:18,780 --> 00:11:23,930
C是在第三信
字母，以便將對應

191
00:11:23,930 --> 00:11:26,290
為兩個的字母索引。

192
00:11:26,290 --> 00:11:29,850
如此看來，使用
在這種情況下，字母索引

193
00:11:29,850 --> 00:11:32,840
實際上給了我們正確的結果。

194
00:11:32,840 --> 00:11:35,020
>> 所以，現在，讓我們檢查
看到，如果方程作品

195
00:11:35,020 --> 00:11:37,210
以字母索引。

196
00:11:37,210 --> 00:11:42,540
個Y字母索引是24作為
第二個字母表中的最後一個字母。

197
00:11:42,540 --> 00:11:46,520
於是24加上我們
兩個關鍵給了我們26。

198
00:11:46,520 --> 00:11:54,750
26模26給我們0，，幸運
我們是A.字母索引

199
00:11:54,750 --> 00:11:59,100
所以希望這足以證明這一點
字母索引方法的工作。

200
00:11:59,100 --> 00:12:03,180
如果沒有，隨意試用
自己的一些例子。

201
00:12:03,180 --> 00:12:08,030
>> 為了周圍的正常包裝
字母和應用凱撒方程，

202
00:12:08,030 --> 00:12:11,280
那麼我們知道，我們需要
處理的字母索引。

203
00:12:11,280 --> 00:12:15,130
但是，我們開始與ASCII
值，才把

204
00:12:15,130 --> 00:12:18,530
我們再轉換為
字母索引。

205
00:12:18,530 --> 00:12:23,970
從那裡，為了打印，就需要
再次處理的ASCII值。

206
00:12:23,970 --> 00:12:28,350
因此，我們需要弄清楚如何
從ASCII去英文字母

207
00:12:28,350 --> 00:12:31,080
從按字母順序排列為ASCII。

208
00:12:31,080 --> 00:12:34,910
>> 所以我把它留給你找出
一個字符之間的模式

209
00:12:34,910 --> 00:12:38,590
其英文字母
指數及其ASCII值。

210
00:12:38,590 --> 00:12:41,530
現在，請記住，即使
在幻燈片上的這個表正確

211
00:12:41,530 --> 00:12:45,630
顯示大寫字母，我們也
要考慮是不是

212
00:12:45,630 --> 00:12:48,915
不同的應用模式
為小寫字符。

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> 所以，現在我們已經想通了
如何將單個字符移位，

215
00:12:55,840 --> 00:13:02,200
那麼我們需要做的就是規模的
到整個明文去。

216
00:13:02,200 --> 00:13:04,260
所以明文是一個字符串。

217
00:13:04,260 --> 00:13:08,210
我們是幸運的，一個字符串是真的
只是字符數組，

218
00:13:08,210 --> 00:13:12,150
所以為了訪問每一個字符
一個字符串，所有你需要做的

219
00:13:12,150 --> 00:13:14,270
是使用數組表示法。

220
00:13:14,270 --> 00:13:20,270
說我有類型的變量
字符串被稱為“文字='這是CS50。'”

221
00:13:20,270 --> 00:13:22,730
>> 好吧，那麼，為了
訪問每個字符，

222
00:13:22,730 --> 00:13:25,880
所有我必須做
可變文本

223
00:13:25,880 --> 00:13:31,660
說好了，在指數為零的文字，那
對應於資本T.文本索引

224
00:13:31,660 --> 00:13:35,100
一者對應於下殼體小時。

225
00:13:35,100 --> 00:13:38,110
另一個有用的功能是
字符串長度的功能。

226
00:13:38,110 --> 00:13:40,760
所以傳遞一個字符串
該函數將返回

227
00:13:40,760 --> 00:13:44,610
的整數，該字符串的長度。

228
00:13:44,610 --> 00:13:47,060
>> 現在我們已經談過
所有這些不同的元素，

229
00:13:47,060 --> 00:13:48,540
讓我們把他們重新走到一起。

230
00:13:48,540 --> 00:13:52,210
所以，回到我的任偽
代碼或偽代碼

231
00:13:52,210 --> 00:13:55,920
並通過，並確保你
知道怎麼做的每一件事。

232
00:13:55,920 --> 00:14:01,520
獲取使用argc和argv的關鍵，
轉動鑰匙進入的整數，一個

233
00:14:01,520 --> 00:14:06,840
到我，提示明文，
GetString的，然後遍歷

234
00:14:06,840 --> 00:14:09,590
在以上每一個字符
明文字符串，

235
00:14:09,590 --> 00:14:14,910
保存每個字符的情況下
以及按鍵轉移該字符，

236
00:14:14,910 --> 00:14:17,520
確保你
纏繞的字母，

237
00:14:17,520 --> 00:14:20,850
最後打印的密文。

238
00:14:20,850 --> 00:14:25,470
我的名字是Amila，這是凱撒。

239
00:14:25,470 --> 00:14:28,448

