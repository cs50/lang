AMILA: Hãy giải quyết Caesar. Trong Caesar, chúng tôi cho phép người sử dụng để mã hóa một thông điệp bí mật. Vì vậy, chúng ta hãy cùng tìm hiểu ngay và tìm kiếm tại của chúng tôi to-dos cho vấn đề này. Vì vậy, đầu tiên, chúng tôi nhận được chìa khóa từ người sử dụng. Sau đó, chúng tôi nhận được bản rõ rằng họ muốn để mã hóa. Sau đó, chúng tôi Mã hóa nó cho họ, và cuối cùng chúng tôi in bản mã của họ. 

Vì vậy, chúng ta hãy bắt đầu với một ví dụ. Giả sử bạn muốn mã hóa toàn bộ bảng chữ cái với khóa hai. Vâng, toàn bộ bảng chữ cái của bạn sẽ chỉ được chuyển sang chữ cái. Vì vậy, A sẽ mã hóa để C, B D, C đến E, vv và vv, cho đến khi bạn nhận được để X, mã hóa đến Z hoặc Zed, tùy thuộc vào nơi bạn đang từ. Sau đó, Y sau đó sẽ thay đổi tất cả các cách, quấn quanh bảng chữ cái để có được A, và cuối cùng là lá thư cuối cùng của bảng chữ cái, Z, Zed, sẽ mã hóa đến B. 

Hiểu rồi chứ? Hãy xem xét một số ví dụ. Ví dụ đầu tiên ở đây là rất tương tự những gì chúng ta vừa giải thích ở trên. Vì vậy, nếu tôi mã hóa một số khu vực bảng chữ cái từ A đến L, theo một khóa hai, sau đó tôi chỉ nhận được toàn bộ của tôi bảng chữ cái chuyển hai bức thư. 

Sau đó, trong ví dụ tiếp theo của tôi, phím vẫn là hai, vì vậy bạn vẫn nên biết mà chữ để mong đợi. Nhưng ở đây, đó là một cụm từ. Đây là CS50. Vì vậy, bạn sẽ nhận thấy rằng tôi bảo tồn các trường hợp của các chữ cái của tôi, vì vậy bất kỳ trường hợp chữ hoa cũng là chữ cái viết hoa trong các bản mã. Và bất kỳ chữ thường chữ trong plaintext cũng được chữ thường chữ cái trong bản mã. Nhưng tôi giữ các chữ cái và bất kỳ dấu chấm than hoặc bất kỳ dấu chấm câu khác nhau. 

Vì vậy, bây giờ chúng ta có một cảm giác cho cách chương trình làm, cảm thấy tự do để đi chạy một số chi tiết ví dụ của riêng của bạn, nếu bạn muốn. Hãy bắt đầu với việc chìa khóa từ người sử dụng. Theo truyền thống, với các vấn đề khác, chúng tôi đã đã quen với việc nhận được bất kỳ con số mà chúng tôi cần bằng cách khiến người sử dụng với chức năng getInt. Nhưng lần này, chúng tôi đang thực sự đi sử dụng các đối số dòng lệnh và một chức năng mới được gọi là atoi. 

Khi bạn chạy các chính chương trình trong C, sau đó nó mất trong hai parameters-- int argc, mà là số đối số thông qua tại, và sau đó argv, một mảng các chuỗi có chứa danh sách của tất cả các đối số thông qua. Bạn không cần phải rõ ràng để khai báo các biến này. Họ đang tính toán cho bạn bởi trình biên dịch. sử dụng chính xác cho điều này sẽ là cho argc là hai trong trường hợp này, bởi vì người dùng phải vượt qua trong các cuộc gọi đến các chương trình, ./caesar, và sau đó là quan trọng, bất kỳ số họ muốn. Vì vậy, đó có nghĩa là phải có hai argc để cho việc sử dụng hợp lệ của Caesar được thực thi. 

Vì vậy, chúng ta hãy xem xét một ví dụ. Nói rằng tôi đã viết và biên soạn một chương trình gọi là blastoff. Vì vậy, nếu tôi chạy trong dòng lệnh ./blastoff Team Rocket, tốt, sau đó, argc sẽ là ba vì tôi thông qua trong ba đối số riêng biệt. Sau đó argv sẽ trông như thế này. Đây là một mảng, và nó sẽ chứa một trong ba chuỗi. ./blastoff trong chỉ mục, đội đầu tiên ở bên cạnh, và tên lửa cuối cùng. 

Hãy nói về mảng cho một giây. Mảng là những cấu trúc dữ liệu mà giữ nhiều giá trị cùng loại. Điều này có thể có ích khi chúng ta có danh sách các số nguyên hoặc chuỗi. Chỉ cần nhớ rằng họ có là cùng loại. Trong khoa học máy tính, chúng tôi thích đếm từ số không, vì vậy hãy nhớ rằng các mảng cũng không lập chỉ mục. Vì vậy, các phần tử đầu tiên của mảng của tôi sẽ là ở chỉ số zero. Vì vậy, trong trường hợp này, khi tôi có một mảng có độ dài bốn, sau đó chỉ số cuối cùng của Yếu tố cuối cùng của mảng của tôi thực sự sẽ là tại mục ba, không phải bốn. Bởi vì nhớ, chúng tôi bắt đầu đếm từ số không. 

Dưới đây là một ví dụ về cách bạn có thể tạo ra một mảng của riêng bạn. Vì vậy, nói tôi muốn để lưu trữ của tôi ba tên con chó yêu thích. Sau đó, tôi sẽ tạo ra một mảng các chuỗi. Vì vậy, tôi sẽ khai báo các loại, chuỗi, và sau đó đặt tên của mảng, chó, và sau đó trong những vuông dấu ngoặc đặt size của array-- trong trường hợp này, ba. 

Vì vậy, mục đầu tiên của tôi là đi là con chó ở chỉ số không, và đó sẽ là Milo. Sau đó, con chó ở chỉ số một sẽ là ngu ngốc, yêu Mochi, và sau đó cuối cùng nhập cảnh, nhập cảnh thứ ba tại chỉ số hai, sẽ là dễ thương, ngọt ngào Elphie. Bạn sẽ nhận thấy rằng định dạng cho điền vào mảng này là rất nhiều như thế nào có lẽ bạn tuyên bố bất kỳ biến khác, nơi bạn có tên biến tiếp theo các giá trị mà bạn muốn lưu trữ trong nó. Sự khác biệt chỉ có tại trường hợp này là bạn phải nhớ để đưa chỉ số giá trị trong ngoặc vuông. Và chúng tôi đã có của chúng tôi ba con chó yêu thích. 

Nhưng than ôi, đó là thời gian để lại cho Caesar. Hãy nhớ rằng việc sử dụng chính xác cho các người sử dụng sẽ được đi qua trong không chỉ tên của ./caesar chương trình, nhưng còn là chìa khóa mà họ muốn thay đổi bản rõ bằng cách. Vì vậy, đó có nghĩa là argc phải có hai người. Họ phải vượt qua trong two-- không hơn, không ít hơn so với hai đối số dòng lệnh. 

Bây giờ, những gì về argv? Vâng, chúng tôi đã biết rằng các mảng là sẽ có chiều dài hai, nhưng những gì chứa trong mỗi phần tử? Vâng, yếu tố đầu tiên sẽ là ./caesar, và sau đó các phần tử tiếp theo sẽ chứa chìa khóa mà người dùng gõ vào. Bây giờ, nếu họ sử dụng nó một cách chính xác cho việc sử dụng của Caesar, sau đó chúng ta sẽ phải nhập một số. Nhưng mặc dù các nhân vật mà họ gõ là một số, đó là các kiểu dữ liệu chuỗi. 

Vì vậy, làm thế nào để chúng ta chuyển đổi đó chuỗi số nguyên? Vì vậy, nói tôi có num, một chuỗi, chứa chuỗi 50. Nếu tôi muốn chuyển đổi đó để một số nguyên, sau đó tôi chỉ đơn giản khai báo một biến mới, một số nguyên i, gọi atoi. Tôi vượt qua trong biến chuỗi của tôi, num, và sau đó tôi sẽ chứa số 50. Hãy chắc chắn để kiểm tra người đàn ông trang cho hàm atoi để kiểm tra thư viện mà nó trong, cũng như những gì nó có giá trị sẽ trở lại nếu các chuỗi thông qua trong không chứa tất cả các số. 

Vì vậy, bây giờ mà chúng tôi đã nhận được chìa khóa, bước tiếp theo là để có được bản rõ từ người sử dụng. Bây giờ, điều này sẽ ít phức tạp hơn điều hướng xung quanh đối số dòng lệnh. Tất cả chúng ta phải làm là gọi chức năng getString để nhắc nhở người dùng để cung cấp cho chúng tôi là một chuỗi, nhưng hãy nhớ để kiểm tra các thông số kỹ thuật cho chúng ta như thế nào có thể muốn nhắc nhở người dùng đó. 

Bây giờ chúng ta đến với trái tim của problem-- cách Mã hóa bản rõ. Vâng, đầu tiên, chúng ta hãy nói về làm thế nào để Mã hóa một ký tự tại một thời gian, và sau đó chúng tôi sẽ giải quyết như thế nào để lặp lại trên toàn bộ bản rõ. Tôi đã viết một số giả cho vấn đề Caesar. Tôi khuyến khích bạn viết riêng của bạn là tốt. Nó có thể không trông giống hệt tôi, và đó là OK, nhưng miễn như là ý tưởng chung là như nhau. 

Ba bước đầu tiên chúng ta đã làm. Chúng tôi đã nhận được chìa khóa từ các đối số dòng lệnh, chúng tôi đã bật chìa khóa mà vào một số nguyên, và chúng tôi đã nhắc nhở người sử dụng cho bản rõ rằng họ muốn Mã hóa. Vì vậy, sau đó các đoạn lớn tiếp theo đây là mỗi một nhân vật trong chuỗi chữ thô, nếu nó là chữ cái, chúng ta muốn bảo tồn trường hợp của mình và thay đổi nó. Bằng cách giữ gìn trường hợp, những gì tôi có nghĩa là tất cả các trường hợp trên chữ nên vẫn còn trên trường hợp và tất cả chữ thường nên vẫn còn chữ thường. Vì vậy, sau đó sau khi chúng tôi chuyển những, sau đó chúng tôi in các bản mã. 

Dưới đây là ba chức năng đó sẽ để có ích cho vấn đề này. Ghi lên trên khi tôi đã cho Ví dụ cho việc chuyển đổi này là CS50? Hãy nhớ rằng 50 và dấu chấm than không thay đổi? Vậy làm thế nào chúng ta có thể nói cho dù chúng tôi cần phải thay đổi một lá thư hay không? Vâng, "là alpha," nếu bạn vượt qua nó một ký tự, sẽ trả về true nếu nhân vật đó là một bức thư và false. Để giúp bạn với bảo quản vốn là chức năng "được thượng "và" thấp ". 

Hai chức năng này cũng mất trong một nhân vật duy nhất là đầu vào và trả lại cho bạn một Boolean, đúng hoặc sai tùy thuộc vào việc nhân vật là chữ hoa hay chữ thường. Bởi vì "là thượng" và "là thấp hơn "là các hàm Boolean, có nghĩa là họ trả lại cho bạn một Boolean, bạn có thể sử dụng chúng trong điều kiện của bạn. Vì vậy, đây là một đoạn mã mà chỉ in thư nếu đó là trường hợp trên. Vì vậy, tôi đã tuyên bố nhân vật của tôi thư được các trường hợp trên zed và sau đó nếu "là trên" trả về sự thật, sau đó tôi in chữ đó. 

Trở lại với ví dụ đơn giản của chúng tôi chuyển các bảng chữ cái bằng cách khóa hai, làm thế nào để chúng tôi thực sự nhận được rằng để làm việc? Vâng, nó chỉ ra rằng nhân vật và số nguyên có liên quan rất chặt chẽ. Mỗi nhân vật có một giá trị số nguyên liên quan với nó được tìm thấy trong các biểu đồ ASCII, nơi ASCII của từng nhân vật giá trị được hiển thị. Vì vậy, một trường hợp trên tương ứng với A đến một giá trị ASCII của 65 và chữ thường a đến một giá trị ASCII của 97. 

Hãy nhìn lên bất kỳ ASCII biểu đồ trực tuyến để xem các giá trị cho chính mình. Vì vậy, điều này có nghĩa là chúng ta có thể đưa các ký tự của chữ hoa A, thêm các số nguyên hai với nó, và sau đó nhận được các nhân vật trên trường hợp C như một kết quả. Đó là bởi vì 65, ASCII giá trị vốn A, cộng với 2, cho chúng ta 67, tương ứng với nhân vật của trường hợp trên C. 

Thật không may, điều sẽ không hoàn toàn đơn giản như vậy. Chúng tôi có một phương trình mà chúng ta phải xem xét. Ở đây nó cho chúng ta biết rằng các bản mã thứ i thư tương ứng với bản rõ thứ i thư, cộng với key-- tất cả điều đó, mô-đun 26. Tại sao lại như vậy không? Hãy trở lại với ví dụ của chúng tôi từ trước, nơi vốn A, cộng với 2, cho chúng ta vốn C. 

Vì vậy, việc áp dụng các phương trình đó các đặc điểm kỹ thuật cho chúng ta, sau đó hãy lấy vốn Một cộng với 2 và mod 26. Vì vậy, vốn A, khi tôi đặt nó trong những dấu ngoặc kép duy nhất, cho phép tôi để xử lý nó như một số nguyên, do đó cho phép tôi bỏ nó vào giá trị ASCII của nó, 65. 65 cộng với 2 là 67. 67 mod 26 cung cấp cho chúng tôi 15, nhưng điều đó không thực sự có ý nghĩa bởi vì chúng ta biết rằng vốn C giá trị ASCII là 67, không phải 15. Vì vậy, làm thế nào để chúng tôi tiến hành hoà giải mà? 

Vâng, ở đây tôi muốn thừa nhận những khái niệm về một chỉ số theo thứ tự abc. Vì vậy, chúng tôi đã nói chuyện về làm thế nào mỗi nhân vật có giá trị ASCII của nó, nhưng tôi muốn nói rằng, tốt, chúng ta hãy suy nghĩ về mỗi nhân vật cũng có một số chữ cái, trong đó A chẳng hạn, là chữ cái đầu tiên của bảng chữ cái, có một chỉ số theo thứ tự abc bằng không. Vì vậy, bây giờ hãy áp dụng các cùng một phương trình như trước, nhưng sử dụng một chỉ số theo thứ tự abc. 

Vì vậy, A là số không, như chúng ta đã xác định. Vì vậy, sau đó tham gia không cộng hai, mod 26, đó là hai, mod 26, mà cho chúng ta hai. Và tốt, về một số chữ cái, C là ký tự thứ ba trong bảng chữ cái, do đó sẽ tương ứng đến một chỉ số chữ cái của hai. Vì vậy, có vẻ như sử dụng Chỉ số chữ cái trong trường hợp này thực sự mang đến cho chúng ta những kết quả chính xác. 

Vì vậy, bây giờ hãy kiểm tra để xem các công trình phương trình với một chỉ số theo thứ tự abc. Chỉ số chữ cái của Y là 24 là thứ hai để lá thư cuối cùng trong bảng chữ cái. Vì vậy, sau đó 24 cộng với chúng tôi quan trọng của hai cho chúng ta 26. 26 mod 26 cho chúng ta 0, trong đó, may mắn cho chúng ta, là những chỉ số chữ cái cho A. Vì vậy, hy vọng đó là đủ để chứng minh phương pháp chỉ số chữ cái hoạt động. Nếu không được, cảm thấy tự do để thử một số ví dụ của riêng bạn. 

Để thi hành đúng quấn quanh bảng chữ cái và áp dụng các phương trình Caesar, sau đó chúng ta biết rằng chúng ta cần phải đối phó với các chỉ số theo thứ tự abc. Nhưng chúng ta bắt đầu với ASCII giá trị, và chỉ sau đó Chúng ta sau đó chuyển sang các chỉ số theo thứ tự abc. Từ đó, để in, chúng ta cần để đối phó với các giá trị ASCII một lần nữa. Vì vậy, chúng ta cần phải tìm ra cách để đi từ ASCII để thuộc về mẫu tự và từ chữ cái ASCII. 

Vì vậy, tôi để lại nó cho bạn để tìm ra mô hình giữa một nhân vật và chữ cái của nó chỉ số và giá trị ASCII của nó. Bây giờ, hãy nhớ rằng mặc dù bảng này ngay trên slide cho thấy các chữ in hoa, chúng tôi cũng phải xem xét có hay không một mô hình khác nhau được áp dụng đối với trường hợp nhân vật thấp hơn. 

Vì vậy, bây giờ mà chúng tôi đã tìm ra làm thế nào để thay đổi một nhân vật duy nhất, sau đó tất cả chúng ta phải làm là quy mô mà lên để đi trên toàn bộ bản rõ. Vì vậy, rõ là một chuỗi. May mắn cho chúng tôi, một chuỗi thực sự là chỉ là một mảng kí tự, do đó để truy cập vào tất cả các nhân vật của một chuỗi, tất cả các bạn phải làm là sử dụng ký hiệu mảng. Nói rằng tôi có một biến kiểu chuỗi gọi là "text = 'này là CS50.'" 

Vâng, sau đó, để truy cập vào từng nhân vật, tất cả tôi phải làm với các văn bản biến là nói tốt, văn bản tại chỉ số không, mà tương ứng với T. vốn chữ ở chỉ số một tương ứng với các trường hợp thấp hơn h. Một chức năng hữu ích là chức năng chiều dài chuỗi. Vì vậy, đi qua trong một chuỗi chức năng đó sẽ trở lại một số nguyên, chiều dài của chuỗi. 

Bây giờ chúng ta đã nói về tất cả những yếu tố khác nhau, chúng ta hãy đặt chúng lại với nhau. Vì vậy, trở lại hoặc giả của tôi mã hoặc giả bạn và đi qua và chắc chắn rằng bạn biết làm thế nào để làm mọi điều duy nhất. Bắt khóa bằng argc và argv, biến chiếc chìa khóa vào một số nguyên, một cho tôi, khiến cho bản rõ, getString, và sau đó lặp lại trên mỗi nhân vật trong chuỗi chữ thô, bảo quản các trường hợp của từng nhân vật và chuyển nhân vật bằng phím, đảm bảo rằng bạn đang quấn quanh bảng chữ cái, cuối cùng đã in bản mã đó. Tên tôi là Amila, và điều này là Caesar. 