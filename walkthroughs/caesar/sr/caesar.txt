АМИЛА: Да старт Цезара. У Цезара, ми омогућавају кориснику за кодирање тајну поруку. Дакле, да је у праву ронити у и погледати у нашим То-Дос за овај проблем. Прво, имамо кључ од корисника. Онда смо добили отворени текст да они желе да кодира. Након тога, ми га енципхер за њих, и на крају смо штампати своје шифрат. 

Почнимо са примером. Рекао да желиш за кодирање Цео писмо са кључем два. Па, цела ваша писмо би само се пребацује на писма. Тако да би кодирање у Ц, Б у Д, Ц до Е, и тако даље и тако даље, док не дођете до Кс, који кодира до З или зед, у зависности од тога одакле сте. Онда би и, а затим пребацити до краја, замотати око писму доћи до, и на крају последње слово писмо З, зед, да кодира до Б. 

Имаш да? Хајде да погледамо неке примере. Први пример је веома сличан на шта смо горе објашњено. Дакле, ако сам кодира неку одељка писмо, А до Л, од кључа два, онда сам се цело моје писмо померио два писма. 

Затим, у следећем примеру, кључ је још два, тако да и даље треба да знате која слова очекивати. Али овде је реч. Ово је ЦС50. Тако да ћете приметити да сам сачувати случају мог писма, тако да ће велика слова су такође велика слова у шифрату. И било мала слова слова у отвореном тексту Такође мала слова слова у шифрату. Али ја и даље писма и било Екцламатион марака или било који други интерпункцијски исти. 

Дакле, сада имамо смисла за како програм ради, слободно да се ради још мало примери сами, ако желите. Почнимо са се кључ од корисника. Традиционално, са други проблеми, имамо навикли да се бројеве који смо ми треба је навело корисника са функцијом Тоноване. Али овај пут ми заправо догађа да користите командне линије аргумент и нова функција под називом Атои. 

Када покренете главни програм у Ц, онда узима у два параметерс-- инт аргц, који је број аргумената донет, а затим , аргв, низ жице које садржи листа свих аргумената положио. Не експлицитно имати да прогласи ове варијабле. Они израчунати за Ви компајлер. Правилна употреба за ово би био за аргц да буду два у овом случају, јер корисник мора да прође у позив на програму, ./цаесар, а затим тастер, без обзира број желе. То значи да аргц мора бити два како би ваљаног коришћење Цезара да се изврши. 

Хајде да погледамо пример. Да сам већ написао и сачинио програм који се зове Бластофф. Дакле, ако сам побегао у командној линији ./бластофф тима ракета, па, онда, аргц ће бити три јер ја усвојен у три различита аргументима. Онда би, аргв изгледају овако. То је читав низ, и то би садрже сваки од три жице. ./бластофф у првом индекса, тима у следећем, и ракета у последњи. 

Хајде да причамо о низовима за секунду. Низови су структуре података које држе више вредности исте врсте. Ово може бити корисно када имају листе целини или низова. Само се сећам да имају бити исти тип. У компјутерској науци, ми лове рачунајући од нуле, тако се тога низови су такође нула-индексирани. Тако да је први елемент мог низа ће бити у индексу нула. Дакле, у овом случају, када имам низ дужине четири, онда последњи индекс Последњи елемент моје низа заправо ће бити у индексу три, не четири. Јер Запамтите, ми почети да броји од нуле. 

Ево примера како сте може да створи низ свој. Тако да сам желео да складишти мој три омиљене дог намес. Онда бих створити низ низова. Зато бих прогласити тип, стринг, и затим ставити назив низа, пси, а онда у тим тргу носачи пут величину на арраи-- у овом случају, три. 

Дакле, мој први улазак иде да се пси у индексу нула, и да ће бити Мила. Онда паса у индексу једном ће бити смешан, драги Моцхи, а онда последњи унос, трећи улазак у индексу два, ће бити сладак, слатка Елпхие. Приметићете да је формат за пуњење у овом низу је веома слична како би могао прогласи било која друга променљива где имате име варијабле следе вредност коју желите да чувају у њој. Једина разлика у овај случај је да ти имати на уму да стави индекс од вредности у заградама. И ту имамо своје три омиљене пси. 

Али, авај, то је време да се вратимо се Цезару. Запамтите да правилна употреба за корисник ће бити пролази у не само назив програма ./цаесар, али Такође кључ који желе да пребаце њихов отвореног текста је. То значи да аргц мора бити два. Они морају да прођу у два-- више, не мање од два аргументе командне линије. 

Сада, шта је са аргв? Па, ми већ знамо да је низ ће бити дужине два, али оно што је садржано у сваком елементу? Па, први елемент ће бити ./цаесар, а онда следећи елемент ће садрже кључ који је корисник унео у. Сада, ако га правилно користе за коришћење Цезара, онда ћемо да унесете број. Али, иако карактер да тип је број, то је типа података низа. 

Па како онда претворити да низ на цео број? Па кажем да имам цилиндра, стринг, садржи низ 50. Ако желим да претворити да на цео број, онда једноставно прогласити нову променљиву, један цели број и позивајући Атои. Ја проћи у мом стринг променљиве, Број, и онда ћу онда садржати број 50. Побрините се да проверите човека странице за функцију Атои Провери који библиотека је у, као и шта га цениш ће се вратити ако стринг прошло у не садржи све бројеве. 

Дакле, сада када смо добили кључ, следећи корак је да се отвореног текста од стране корисника. Сада, ово ће бити мање компликован него навигацију кроз командна линија аргументи. Све што треба да урадимо је позив гетстринг функција да подстакне кориснику да дају нас низ, али запамти да проверите спецификације о томе како смо можда желети да подстакне корисника за то. 

Сада долазимо до срце мали проблем како да енципхер на отворени текст. Па, прво, хајде да разговарамо о томе како да енципхер један лик у једном тренутку, а онда ћемо обратити како поновити по целом отворени текст. Писао сам нешто псеудокоду за Цезара проблем. Позивам вас да Напишите своју као добро. Могуће да не изгледа идентично мина, а то је у реду, али докле год као опште идеје је исти. 

Прва три корака смо већ урадили. Ми смо добили кључ из командна линија аргументи, ми смо се тај кључ у цео број, и имамо затражено корисника за отворени текст да желе да енципхер. Па онда следећи велики комад је да за сваки карактер у отворени текст низу, ако је словна, желимо да сачувамо његов случај и то схифт. Би сачувати случај, шта ја значи да све великим словима слова треба да остане Уппер случај и сва мала слова треба да остане мала слова. Па онда када смо схифт оне, онда принт шифрат. 

Овде су три функције које ће да добро доћи за овај проблем. Не заборавите изнад кад сам дао Пример за пребацивање ово је ЦС50? Запамтите да је 50 и знак узвика није схифт? Па како можемо рећи да ли ћемо треба да пређу писмо или не? Па, "је алфа," ако ти то карактер прође, ће се вратити труе ако тај лик је писмо и иначе фалсе. Да ти помогнем очување капитализација су функције "је горњи "и" је нижи. " 

Ове две функције такође узети у једној карактера као инпут и врати ти Боолеан, истинито или лажно у зависности да ли тај лик је велика и мала слова. Јер "је горња" и "је нижи "су Боолеан функције, што значи да су вам вратити Боолеан, можете користити ово у својим условима. Дакле, овде је фрагмент кода који само штампа писмо ако је горњи случај. Па сам прогласио мој карактер писмо да се горњи случај зед а онда, ако "је горњи" се враћа истина, онда сам принт то писмо. 

Враћајући се нашој једноставан пример пребацивање абецеду по кључ од две, како ћемо заиста добити то да ради? Па, испоставило се да ликови и цели бројеви су врло блиско повезани. Сваки лик хас ан цео број вредност која са њим наћи у АСЦИИ табели, где сваког лика АСЦИИ вредност је приказана. Тако да се велика слова А одговара на АСЦИИ вредности од 65 и мала слова бисте АСЦИИ вредност 97. 

Слободно погледајте горе сваки АСЦИИ графикон на мрежи да видим ове вредности за себе. Дакле, шта то значи да можемо узме карактер великим словима А, додајте цео број два на њега, а онда се карактер горњи случај Ц као резултат тога. То је зато што 65, АСЦИИ вредност за капиталне А плус 2, нам даје 67, што одговара у карактеру великим словима Ц. 

Нажалост, ствари Неће баш бити тако једноставно. Имамо једначину која морамо узети у обзир. Овде нам говори да ити шифрату писмо одговара-тог отвореног текста писмо, плус кеи-- све то, модуларни 26. Зашто је то тако? Вратимо се у нашем примеру из пре, где је главни А плус 2, даје нам капитала Ц 

Дакле, применом једначине ту спецификација нам даје, онда узмимо слово '' А Плус 2 и мод да је 26. Дакле капитал А када сам га ставио у те сингле наводнике, дозвољава ми да га третирају као цео број, тако да омогућује да га баци своје АСЦИИ вредности, 65. 65 плус 2 је 67. 67 Мод 26 даје нам 15, али то није стварно смисла јер знамо да је капитал, Ц АСЦИИ вредност је 67, а не 15. Како да помиримо то? 

Па, овде желим да претпостављају појам абецедном индекса. Тако да смо већ разговарали о томе како сваки лик има своју АСЦИИ вредност, али желео бих да кажем, добро, хајде да мисле једни о карактер и има абецедни индекс, где А на пример, као прво слово абецеде, има абецедни индекс нуле. Дакле, сада ћемо применити Исто једначина као и раније, али користећи абецедни индекс. 

Тако да је нула, као што смо дефинисано. Па онда узима нула плус два, мод 26, То је два, Мод 26, што нам даје два. И добро, у смислу абецедни индекс, Ц је трећи слово у писмо, тако да би одговарало на абецедном индекс два. Тако да се чини да помоћу абецедни индекс у овом случају заправо нам даје тачан резултат. 

Дакле, хајде да се провери да види ако се једначине радова са абецедним индексом. И је по абецеди индекс 24 као Други на последњем писму у писму. Па онда 24, плус наш кључ две нам даје 26. 26 Мод 26 даје нам 0, што, луцки за нас, је по абецеди индекс А. Тако да се надамо да је довољно да доказ абецедни метод индекса ради. Ако не, слободно испробати неки примери сами. 

Да би се правилно окружују писмо и примењују Цаесар једначину, онда знамо да морамо да баве абецеде индекса. Али почињемо са АСЦИИ вредности, и тек тада ми онда претворити у по абецедном индекса. Одатле, како би се исписати, треба да се поново баве АСЦИИ вредности. Зато морамо да смислимо како да иду од АСЦИИ до алпхабетицал и од абецедном у АСЦИИ. 

Па сам га остављам вама да схватим образац између карактера и његов по абецеди индекс и његова АСЦИИ вредност. Сада, запамтите да иако ово сто право на слајду показује велика слова, такође морати да размотри да ли или не другачији образац важи за мала слова. 

Дакле, сада када смо схватили како да пребаци један карактер, онда све што треба да урадимо је скала која да иде преко целог отвореном тексту. Тако да је отворени текст је стринг. Срећом по нас, стринг је стварно само низ карактера, тако да би се приступило сваки лик од низа, све што треба да урадите је да користите арраи запис. Да имам променљиву типа низ назива "тект = ово је ЦС50. '" 

Па, онда, како би се приступити сваки лик, све што има везе са променљива текст је то саи добро, текст на индексу нула, да одговара капитал Т. Текст у индексу један одговара малим словима х. Још једна корисна функција је дужина низ функција. Тако пролазе у низу на да функција ће вратити цео број, дужина тог низа. 

Сада када смо разговарали о томе Сви ови различити елементи, хајде да их поново заједно. Па се врати у било моје псеудокоду Код или ваш Псеудокод и пролазе кроз и проверите да ли знам да радим сваку ствар. Добијање кључ помоћу аргц и аргв, окретањем кључа у целим бројем, А до и, што је навело на отвореном тексту, гетстринг, затим итератинг преко сваког знака у отворени текст низ, очување случај сваки карактер и пребацивање тај лик по кључу, осигуравајући да си паковање око писма, коначно штампања тог шифрат. Моје име је Амили, а то је Цезар. 