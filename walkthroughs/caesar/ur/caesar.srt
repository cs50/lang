1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> Amila کی: چلو قیصر نمٹنے کے ہیں.

3
00:00:02,270 --> 00:00:06,110
کیسر میں، ہم صارف کی اجازت دیتے ہیں
ایک خفیہ پیغام ضابطہ کاری کرنے.

4
00:00:06,110 --> 00:00:09,780
تو چلو میں حق گوتا لگا دو اور نظر آتے ہیں
اس مسئلہ کے لئے ہمارے ڈاس میں.

5
00:00:09,780 --> 00:00:12,210
تو سب سے پہلے، ہم صارف سے چابی حاصل.

6
00:00:12,210 --> 00:00:15,210
پھر ہم سادہ متن حاصل
وہ ضابطہ کاری کرنا چاہتے ہیں کہ.

7
00:00:15,210 --> 00:00:21,380
اس کے بعد، ہم نے ان کے لئے یہ encipher،
اور آخر میں ہم نے ان ciphertext کے پرنٹ.

8
00:00:21,380 --> 00:00:23,600
>> تو ایک مثال سے شروع کرتے ہیں.

9
00:00:23,600 --> 00:00:26,920
آپ ضابطہ کاری کرنا چاہتے تھے کہہ دو
دو میں سے ایک بٹن کے ساتھ تمام حروف.

10
00:00:26,920 --> 00:00:31,360
ویسے، آپ کے پورے حروف تہجی گے
صرف خطوط پر منتقل کر دیا جائے.

11
00:00:31,360 --> 00:00:37,060
لہذا A کرنے کے لئے C، B کرنے کے لئے ضابطہ کاری کریں گے
D، C E، تو اور تو آگے،

12
00:00:37,060 --> 00:00:42,470
آپ Z کرنے میں encodes جس X، حاصل کرنے تک
یا تم سے ہو جہاں پر منحصر ہے، جیڈ.

13
00:00:42,470 --> 00:00:47,445
تو y پھر، تمام راستہ کو منتقل کریں گے
A کرنے کے لئے حاصل کرنے کے لئے حروف تہجی کے ارد گرد لپیٹ،

14
00:00:47,445 --> 00:00:53,256
اور پھر آخر میں کے آخری خط
حروف تہجی، Z، جیڈ، B. کرنے کاری کریں گے

15
00:00:53,256 --> 00:00:54,660
>> تم سمجھ گئے؟

16
00:00:54,660 --> 00:00:56,380
چلو کچھ مثالوں پر نظر ڈالتے ہیں.

17
00:00:56,380 --> 00:01:00,540
یہاں پہلی مثال کی طرح ہے
ہم صرف اوپر وضاحت کی باتوں پر.

18
00:01:00,540 --> 00:01:05,560
I میں سے کچھ حصے کو ضابطہ کاری تو
حروف تہجی، L کے ذریعے ایک، دونوں میں سے ایک چابی کی طرف سے،

19
00:01:05,560 --> 00:01:09,760
تو میں صرف اپنے پورے ملتا
حروف تہجی دو حروف منتقل کردیا.

20
00:01:09,760 --> 00:01:12,230
>> اس کے بعد، اپنے اگلے مثال میں،
کلید، اب بھی دو ہے

21
00:01:12,230 --> 00:01:15,080
لہذا آپ کو اب بھی معلوم ہونا چاہیے
جس کے حروف کی توقع کرنا.

22
00:01:15,080 --> 00:01:16,400
لیکن یہاں یہ ایک جملہ ہے.

23
00:01:16,400 --> 00:01:18,100
یہ CS50 ہے.

24
00:01:18,100 --> 00:01:21,090
تو آپ کو اس میں محسوس کریں گے
میرے خطوں کی صورت کو محفوظ،

25
00:01:21,090 --> 00:01:25,600
لہذا کسی بھی اوپری کیس حروف بھی ہیں
ciphertext کے میں اوپری کیس حروف.

26
00:01:25,600 --> 00:01:27,800
اور اگر کوئی خفی
سادہ متن میں خط

27
00:01:27,800 --> 00:01:30,640
بھی چھوٹے رہے ہیں
ciphertext کے میں حروف.

28
00:01:30,640 --> 00:01:34,020
لیکن میں خطوط رکھنے
اور کسی بھی فجائیہ کے نشانات

29
00:01:34,020 --> 00:01:37,610
یا کسی دیگر اوقاف اسی.

30
00:01:37,610 --> 00:01:40,360
>> تو اب ہم احساس ہے کہ
پروگرام کیسے کام کرتا ہے کے لئے،

31
00:01:40,360 --> 00:01:43,890
چلانے جانے کے لئے کچھ زیادہ آزاد محسوس
اپنی خود کی مثالیں، اگر تم چاہو تو.

32
00:01:43,890 --> 00:01:47,072
کے حاصل کرنے کے ساتھ شروع کرتے ہیں
صارف کی طرف سے اہم.

33
00:01:47,072 --> 00:01:48,780
روایتی طور پر، کے ساتھ
دوسرے مسائل، ہم نے

34
00:01:48,780 --> 00:01:51,450
حاصل کرنے کے عادی
ہم کہ کسی بھی تعداد

35
00:01:51,450 --> 00:01:54,710
صارف نے فورا طرف سے کی ضرورت ہے
تقریب میں GetInt ساتھ.

36
00:01:54,710 --> 00:01:58,850
لیکن اس بار ہم اصل میں جا رہے ہیں
کمانڈ لائن کی دلیل استعمال کرنے کے لئے

37
00:01:58,850 --> 00:02:01,760
اور ایک نئی atoi تقریب بلایا.

38
00:02:01,760 --> 00:02:05,130
>> آپ کو مرکزی چلاتے ہیں
C میں پروگرام، پھر اس کے بعد

39
00:02:05,130 --> 00:02:08,500
دو parameters-- میں لیتا ہے
argc int ہے، جس

40
00:02:08,500 --> 00:02:11,670
دلائل کی تعداد ہے
میں منظور، اور اس کے بعد

41
00:02:11,670 --> 00:02:15,920
ہے argv، ڈور کی ایک صف پر مشتمل ہے جس
دلائل کے تمام کی فہرست

42
00:02:15,920 --> 00:02:16,740
منظور.

43
00:02:16,740 --> 00:02:19,740
آپ کو واضح طور نہیں بنایا
ان متغیرات کا اعلان کرنا.

44
00:02:19,740 --> 00:02:22,700
انہوں نے کے لئے حساب کر رہے ہیں
سنکلک کی طرف سے آپ.

45
00:02:22,700 --> 00:02:28,160
اس کے لئے درست استعمال کیا جائے گا
argc کے اس کیس میں دو ہو جائے کرنے کے لئے،

46
00:02:28,160 --> 00:02:32,630
صارف میں منتقل کرنے کی ہے کیونکہ
پروگرام کے لیے اذان، ./caesar،

47
00:02:32,630 --> 00:02:35,570
اور پھر چابی،
جو بھی تعداد میں وہ چاہیں.

48
00:02:35,570 --> 00:02:39,920
لہذا اس argc ہونا ضروری ہے کا مطلب ہے کہ دو
سیزر کی ایک درست استعمال کے لئے ترتیب میں

49
00:02:39,920 --> 00:02:41,680
پھانسی دے دی جائے.

50
00:02:41,680 --> 00:02:43,590
>> تو اس کی ایک مثال کو دیکھو.

51
00:02:43,590 --> 00:02:47,760
میں نے پہلے ہی لکھا ہے کہو اور
blastoff نامی ایک پروگرام مرتب کیا.

52
00:02:47,760 --> 00:02:52,670
تو تو میں کمانڈ لائن میں بھاگ گیا
./blastoff ٹیم راکٹ، ٹھیک ہے، تو،

53
00:02:52,670 --> 00:02:57,750
argc کے تین ہو جائے گا کیونکہ میں
تین واضح دلائل میں منظور.

54
00:02:57,750 --> 00:02:59,830
پھر argv اس طرح نظر آئے گا.

55
00:02:59,830 --> 00:03:03,750
یہ ایک صف ہے، اور یہ کرے گا
تین ڈور میں سے ہر ایک پر مشتمل ہے.

56
00:03:03,750 --> 00:03:09,640
پہلے انڈیکس، ٹیم میں ./blastoff
اگلے، اور آخری میں راکٹ میں.

57
00:03:09,640 --> 00:03:11,610
>> چلو ایک سیکنڈ کے لئے arrays کے بارے میں بات کرتے.

58
00:03:11,610 --> 00:03:15,560
لڑیوں کی حامل ہیں کہ ڈیٹا ڈھانچے ہیں
اسی قسم کی ایک سے زیادہ اقدار.

59
00:03:15,560 --> 00:03:19,980
جب ہم اس کے ہاتھ میں آ سکتا ہے
integers کے یا ڈور کی فہرست ہے.

60
00:03:19,980 --> 00:03:23,030
بس وہ ہے یاد
اسی قسم بننے کے لئے.

61
00:03:23,030 --> 00:03:25,310
کمپیوٹر سائنس میں ہم
صفر سے گنتی سے محبت کرتا ہوں،

62
00:03:25,310 --> 00:03:29,260
تو arrays کہ یاد
بھی صفر حساب سے ترتیب ہیں.

63
00:03:29,260 --> 00:03:34,360
میرے صف کے پہلے عنصر تو
انڈیکس صفر پر ہونے جا رہا ہے.

64
00:03:34,360 --> 00:03:37,580
تو اس صورت میں، جب میرے پاس ہے
لمبائی چار کی ایک صف،

65
00:03:37,580 --> 00:03:41,350
پھر کے آخری انڈیکس
میرے صف کے آخری عنصر

66
00:03:41,350 --> 00:03:44,970
اصل میں ہونے جا رہا ہے
انڈیکس تین، چار میں.

67
00:03:44,970 --> 00:03:48,880
یاد، ہم نے کی وجہ
صفر پر گنتی شروع.

68
00:03:48,880 --> 00:03:52,530
>> یہاں آپ کو ہے کہ کس طرح کی ایک مثال ہے
آپ کی اپنی کی ایک صف بنا سکتا ہے.

69
00:03:52,530 --> 00:03:56,440
لہذا میں ذخیرہ کرنے کے لئے کرنا چاہتا تھا کا کہنا ہے کہ میرے
تین پسندیدہ کتے ناموں.

70
00:03:56,440 --> 00:03:59,030
پھر میں نے ڈور کی ایک صف پیدا ہوں گے.

71
00:03:59,030 --> 00:04:04,450
تو میں نے قسم، سٹرنگ کا اعلان کریں گے، اور
پھر صف کے نام ڈال دیا، کتوں،

72
00:04:04,450 --> 00:04:06,450
اور پھر ان کے چوک میں
بریکٹ کے سائز ڈال

73
00:04:06,450 --> 00:04:09,260
اس کیس، تین میں صف کے.

74
00:04:09,260 --> 00:04:12,690
>> تو میری پہلی انٹری کی جا رہی ہے
انڈیکس صفر پر کتوں ہونے کے لئے،

75
00:04:12,690 --> 00:04:14,750
اور یہ کہ ملو ہونے جا رہا ہے.

76
00:04:14,750 --> 00:04:17,850
اس کے بعد انڈیکس ایک میں کتوں
مورھ ہونے جا رہا ہے،

77
00:04:17,850 --> 00:04:23,060
عزیز موچی، اور پھر آخری
انٹری، انڈیکس دو میں تیسرا اندراج،

78
00:04:23,060 --> 00:04:26,130
پیارا، میٹھا Elphie ہونے جا رہا ہے.

79
00:04:26,130 --> 00:04:28,610
آپ کی شکل ہے کہ محسوس کریں گے
اس صف میں بھرنے کے لئے

80
00:04:28,610 --> 00:04:32,150
تمہیں کیسے سکتا ہے کی طرح بہت زیادہ ہے
کسی بھی دوسرے متغیر جہاں اعلان

81
00:04:32,150 --> 00:04:36,307
آپ کی طرف سے کے بعد متغیرہ کا نام ہے
قیمت آپ اس میں ذخیرہ چاہتے ہیں کہ.

82
00:04:36,307 --> 00:04:38,140
میں صرف اتنا فرق
اس کیس میں آپ کہ ہے

83
00:04:38,140 --> 00:04:42,700
انڈیکس ڈال کرنے کے لئے یاد کرنے کے لئے ہے
مربع بریکٹ میں قدر کی.

84
00:04:42,700 --> 00:04:46,420
اور وہاں ہم نے اپنے پاس
تین پسندیدہ کتوں.

85
00:04:46,420 --> 00:04:48,780
>> لیکن افسوس، یہ وقت ہے
قیصر کو واپس حاصل کرنے کے.

86
00:04:48,780 --> 00:04:52,910
کے لئے کہ درست استعمال کو یاد رکھیں
صارف نہ صرف میں گزر کر جا رہا ہے

87
00:04:52,910 --> 00:04:57,430
پروگرام ./caesar کے نام، لیکن
بھی اہم ہے کہ وہ منتقل کرنے کے لئے چاہتے ہیں کہ

88
00:04:57,430 --> 00:04:58,850
کی طرف سے ان سادہ متن.

89
00:04:58,850 --> 00:05:01,540
تو اس کا مطلب جہاں argc دو ہونا ضروری ہے.

90
00:05:01,540 --> 00:05:07,580
وہ، two-- کوئی زیادہ میں منتقل کرنا ضروری ہے کوئی
دو کمانڈ لائن دلائل سے بھی کم.

91
00:05:07,580 --> 00:05:09,050
>> اب، argv کے بارے میں؟

92
00:05:09,050 --> 00:05:12,880
ویسے، ہم نے پہلے ہی کہ پتہ
صف، لمبائی دو میں ہونے جا رہا ہے

93
00:05:12,880 --> 00:05:15,270
لیکن کیا ہر عنصر میں موجود ہے؟

94
00:05:15,270 --> 00:05:19,330
ویسے، پہلے عنصر
./caesar ہونے جا رہا ہے،

95
00:05:19,330 --> 00:05:24,190
اور پھر اگلے عنصر کی جا رہی ہے
چابی صارف میں ٹائپ مشتمل.

96
00:05:24,190 --> 00:05:27,480
اب، اگر وہ اسے صحیح طریقے سے استعمال کیا جاتا ہے
سیزر کے استعمال کے لئے،

97
00:05:27,480 --> 00:05:29,350
پھر وہ ایک بڑی تعداد میں ٹائپ کرنے جا رہے ہیں.

98
00:05:29,350 --> 00:05:33,260
لیکن پھر بھی کردار اگرچہ
وہ قسم ہے کہ ایک بڑی تعداد ہے،

99
00:05:33,260 --> 00:05:35,790
یہ اعداد و شمار کی قسم سٹرنگ کے مطابق ہے.

100
00:05:35,790 --> 00:05:40,390
>> تو ہم کس طرح تبدیل کر سکتا ہوں
ایک عددی سٹرنگ؟

101
00:05:40,390 --> 00:05:46,680
لہذا میں NUM ہے کا کہنا ہے، ایک تار،
سٹرنگ 50 پر مشتمل.

102
00:05:46,680 --> 00:05:49,000
میں نے اس کو تبدیل کرنا چاہتے ہیں تو
ایک عددی کے لئے، تو میں نے صرف

103
00:05:49,000 --> 00:05:53,340
، ایک نیا متغیر کا اعلان ایک
میں عددی ہے، atoi بلا.

104
00:05:53,340 --> 00:06:01,160
میں نے اپنے سٹرنگ متغیر میں منتقل، NUM، اور
پھر میں نے پھر نمبر 50 پر مشتمل ہوگا.

105
00:06:01,160 --> 00:06:04,350
بنائیں آدمی مخفی
atoi تقریب کے لئے صفحات

106
00:06:04,350 --> 00:06:07,990
جس لائبریری بس کی جانچ کرنا
میں، اس کے ساتھ ساتھ اس کی قدر کیا کے طور پر

107
00:06:07,990 --> 00:06:14,550
سٹرنگ گزر چکا ہے تو واپس آ جائیں گے
میں تمام نمبر پر مشتمل نہیں ہے.

108
00:06:14,550 --> 00:06:16,950
>> تو اب ہے کہ ہم ملا ہے
کلید، اگلے قدم

109
00:06:16,950 --> 00:06:19,430
صارف کی طرف سے سادہ متن حاصل کرنے کے لئے ہے.

110
00:06:19,430 --> 00:06:21,170
اب، اس لئے جا رہی ہے
کم پیچیدہ ہو

111
00:06:21,170 --> 00:06:23,410
ارد گرد گشت زائد
کمانڈ لائن کے دلائل.

112
00:06:23,410 --> 00:06:26,190
ہمیں کیا کرنا ہے تمام کال ہے
GetString تقریب

113
00:06:26,190 --> 00:06:29,660
دینے کے لئے صارف کو فوری طور کرنا
ہم سے ایک تار، لیکن یاد رکھیں

114
00:06:29,660 --> 00:06:34,090
کس طرح کے لئے وضاحتیں کی جانچ کرنا ہم
اس کے لئے صارف کو فوری طور کرنا چاہتے ہو سکتا.

115
00:06:34,090 --> 00:06:36,420
>> اب ہم کے لئے آیا
مسئلے کے دل

116
00:06:36,420 --> 00:06:38,860
کس طرح سادہ متن encipher.

117
00:06:38,860 --> 00:06:42,830
ویسے، سب سے پہلے، کے طریقے کے بارے میں بات کرتے ہیں
ایک وقت میں ایک کردار encipher کرنا،

118
00:06:42,830 --> 00:06:47,370
اور پھر ہم کس طرح کرنے سے خطاب کریں گے
پورے سادہ متن پر iterate.

119
00:06:47,370 --> 00:06:50,440
میں نے کچھ pseudocode لکھا ہے
قیصر مسئلہ کے لئے.

120
00:06:50,440 --> 00:06:52,310
میں نے آپ کی حوصلہ افزائی
اس کے ساتھ ساتھ اپنے طور پر تحریر.

121
00:06:52,310 --> 00:06:55,900
یہ کرنے کے لئے ایک جیسی نہیں نظر ہو سکتا ہے
میرا، اور یہ کہ ٹھیک، لیکن جب تک ہے

122
00:06:55,900 --> 00:06:58,640
عام خیال کے طور پر ایک ہی ہے.

123
00:06:58,640 --> 00:07:00,780
>> پہلے تین مراحل
ہم نے پہلے ہی سے کیا ہے.

124
00:07:00,780 --> 00:07:03,100
ہم سے اہم ہو گیا ہے
کمانڈ لائن کی دلیل،

125
00:07:03,100 --> 00:07:05,510
ہم کہ اہم آن کیا ہے
ایک عددی میں، اور ہم نے

126
00:07:05,510 --> 00:07:09,320
سادہ متن کے لئے صارف کی حوصلہ افزائی
وہ encipher کرنا چاہتے ہیں کہ.

127
00:07:09,320 --> 00:07:12,420
تو پھر اگلے بڑا حصہ
کہ ہر کردار کے لئے ہے

128
00:07:12,420 --> 00:07:15,070
سادہ متن سٹرنگ میں،
یہ اکشراتمک ہے تو،

129
00:07:15,070 --> 00:07:17,750
ہم محفوظ کرنا چاہتے ہیں
اس کا مقدمہ ہے اور یہ منتقل.

130
00:07:17,750 --> 00:07:20,900
کیس کے تحفظ، سے تمہارا کیا مجھے
مطلب یہ ہے کہ تمام اوپری کیس ہے کہ

131
00:07:20,900 --> 00:07:23,580
خطوط اوپری رہنا چاہئے
صورت اور تمام چھوٹے حروف

132
00:07:23,580 --> 00:07:25,640
خفی رہنا چاہئے.

133
00:07:25,640 --> 00:07:29,110
تو پھر ہم ان لوگوں کو منتقل کرنے کے بعد،
پھر ہم ciphertext کے پرنٹ.

134
00:07:29,110 --> 00:07:33,100
>> یہاں تین افعال جو کہ جا رہے ہیں
اس مسئلہ کے لئے ہاتھ میں آنے کے لئے.

135
00:07:33,100 --> 00:07:38,010
جب میں نے دے دیا اوپر یاد رکھیں
اس منتقلی کے لئے مثال CS50 ہے؟

136
00:07:38,010 --> 00:07:41,800
یاد رہے کہ 50 اور
فجائیہ نشان منتقل نہیں کیا؟

137
00:07:41,800 --> 00:07:45,680
تو ہم چاہے ہم کیسے بتا سکتے ہیں
ایک خط میں منتقل یا نہیں کی ضرورت ہے؟

138
00:07:45,680 --> 00:07:48,650
ٹھیک ہے، اگر "الفا ہے"
آپ کو یہ ایک کردار کو منتقل،

139
00:07:48,650 --> 00:07:54,850
اس کردار تو سچ واپس آ جائیں گے
ایک خط اور جھوٹے دوسری صورت میں ہے.

140
00:07:54,850 --> 00:07:56,870
میں آپ کی مدد کرنے کے لئے
تحفظ کیپٹلائزیشن

141
00:07:56,870 --> 00:07:59,750
افعال "ہیں کر رہا ہے
اوپری "اور" کم ہے. "

142
00:07:59,750 --> 00:08:03,350
>> یہ دونوں افعال بھی لے
ان پٹ کے طور پر ایک ہی کردار میں

143
00:08:03,350 --> 00:08:06,580
اور آپ کو ایک بولین واپس،
صحیح یا غلط یا تو

144
00:08:06,580 --> 00:08:11,280
کہ کردار یا نہیں پر منحصر
اپر کیس یا کم کیس ہے.

145
00:08:11,280 --> 00:08:14,610
کیونکہ "اوپری ہے" اور "ہے
زیریں "بولین افعال ہیں،

146
00:08:14,610 --> 00:08:18,660
مطلب یہ ہے کہ وہ آپ کو ایک بولین واپس،
آپ کو آپ کے حالات پر استعمال کرسکتے ہیں.

147
00:08:18,660 --> 00:08:23,490
تو یہاں کے کوڈ کا ایک ٹکڑا ہے کہ صرف
یہ اوپری کیس ہے تو ایک خط پرنٹ.

148
00:08:23,490 --> 00:08:27,790
تو میں نے اپنے کردار کو قرار دیا ہے
خط اوپری کیس جیڈ جا کرنے کے لئے

149
00:08:27,790 --> 00:08:33,440
اور پھر تو واپسی "اوپری ہے"
سچ، پھر میں نے اس خط کو پرنٹ.

150
00:08:33,440 --> 00:08:38,200
>> کی ہماری سادہ مثال پر واپس جا
دونوں میں سے ایک چابی کی طرف سے حروف تہجی کی منتقلی،

151
00:08:38,200 --> 00:08:41,049
کس طرح ہم اصل میں اس کام کرنے کے لئے حاصل کرتے ہیں؟

152
00:08:41,049 --> 00:08:45,770
ویسے، یہ حروف کہ باہر کر دیتا
اور integers کے بہت قریب سے متعلق ہیں.

153
00:08:45,770 --> 00:08:48,840
ہر کردار ایک ہے
منسلک عددی قیمت

154
00:08:48,840 --> 00:08:53,260
یہ ASCII چارٹ میں مل گیا کے ساتھ،
جہاں ہر کردار کے ASCII

155
00:08:53,260 --> 00:08:55,380
قدر ظاہر کیا جاتا ہے.

156
00:08:55,380 --> 00:08:58,940
چنانچہ ایک اوپری کیس ایک مساوی
65 ایک ASCII ویلیو پر

157
00:08:58,940 --> 00:09:02,270
اور کرنے کے لئے ایک چھوٹے ایک
97 کے ایک ASCII قیمت.

158
00:09:02,270 --> 00:09:04,940
>> تلاش کرنے کے لئے آزاد محسوس کرتے ہیں
کسی بھی ASCII چارٹ لائن

159
00:09:04,940 --> 00:09:07,720
خود کے لئے ان اقدار کو دیکھنے کے لئے.

160
00:09:07,720 --> 00:09:12,096
تو کیا اس کا مطلب ہے ہم کر سکتے ہیں کہ
، اوپری کیس ایک کے کردار کو لے

161
00:09:12,096 --> 00:09:18,200
یہ کرنے کے لئے عددی دو کا اضافہ، اور پھر حاصل
اس کے نتیجے کے طور پر کردار اوپری کیس C.

162
00:09:18,200 --> 00:09:23,720
اس لئے کہ 65، ASCII ہے
دارالحکومت A کے لئے قیمت، کے علاوہ 2،

163
00:09:23,720 --> 00:09:29,960
ہمیں 67 میل جو دیتا ہے،
اوپری کیس سی کے کردار کے لئے

164
00:09:29,960 --> 00:09:33,480
>> بدقسمتی سے، چیزوں
بالکل اتنا آسان نہیں ہو گا.

165
00:09:33,480 --> 00:09:36,980
ہم ایک مساوات ہے کہ
ہم پر غور کرنے کے لئے ہے.

166
00:09:36,980 --> 00:09:43,590
یہاں یہ پر ith ciphertext کے کہ ہمیں بتاتا ہے
خط پر ith سادہ متن کے مساوی ہے

167
00:09:43,590 --> 00:09:48,900
خط، علاوہ چابی
26 اس کے سب، ماڈیولر.

168
00:09:48,900 --> 00:09:50,810
اس صورت کیوں ہے؟

169
00:09:50,810 --> 00:09:55,430
کی طرف سے ہماری مثال پر واپس جانے دو
اس سے پہلے، جہاں دارالحکومت A، 2 پلس،

170
00:09:55,430 --> 00:09:57,590
امریکی دارالحکومت C. دیتا ہے

171
00:09:57,590 --> 00:10:01,870
>> لہذا مساوات کہ درخواست دینے
تصریح، ہمیں دیتا ہے

172
00:10:01,870 --> 00:10:06,660
پھر کے دارالحکومت A ڈالیں ہیں
علاوہ 2 اور 26 کی طرف سے اس جدید.

173
00:10:06,660 --> 00:10:10,730
تو دارالحکومت A، جب میں اس میں ڈال دیا
ان لوگوں کو واحد واوین،

174
00:10:10,730 --> 00:10:14,010
مجھے کے طور پر اس کے علاج کے لئے کی اجازت دیتا ہے
ایک عددی، تا کہ اجازت دیتا ہے

175
00:10:14,010 --> 00:10:17,500
مجھے اس کی ASCII قیمت، 65 کو ڈال دینا.

176
00:10:17,500 --> 00:10:20,080
65 پلس 2 67 ہے.

177
00:10:20,080 --> 00:10:25,210
67 MOD کے 26، 15 امریکی دیتا ہے
لیکن یہ واقعی نہیں کرتا

178
00:10:25,210 --> 00:10:32,590
کیونکہ ہم جانتے ہیں کہ احساس کریں
دارالحکومت C ASCII قیمت 67، نہ 15 ہے.

179
00:10:32,590 --> 00:10:35,580
تو ہم کس طرح مصالحت کرتے ہیں؟

180
00:10:35,580 --> 00:10:39,840
>> ویسے، یہاں میں posit کرنا چاہوں گا
ایک حروف تہجی انڈیکس کے تصور.

181
00:10:39,840 --> 00:10:44,010
تو ہم نے پہلے سے ہی کس طرح کے بارے میں بات کی ہے
ہر کردار، اس کی ASCII قیمت ہے

182
00:10:44,010 --> 00:10:48,810
لیکن میں، کیا کہنا ٹھیک ہے، کی اجازت چاہوں گا
ہر کردار بھی ہونے کے بارے میں سوچنا

183
00:10:48,810 --> 00:10:52,230
ایک حروف تہجی انڈیکس،
مثال کے طور پر جہاں ایک،

184
00:10:52,230 --> 00:10:58,800
حروف تہجی کے پہلے حرف کے طور پر،
صفر کی ایک حروف تہجی انڈیکس ہے.

185
00:10:58,800 --> 00:11:02,070
تو اب کا اطلاق
اسی مساوات پہلے کے طور پر،

186
00:11:02,070 --> 00:11:05,040
لیکن ایک حروف تہجی انڈیکس کا استعمال کرتے ہوئے.

187
00:11:05,040 --> 00:11:07,810
>> چنانچہ ایک ہم بیان کیا جاتا ہے کے طور پر، صفر ہے.

188
00:11:07,810 --> 00:11:15,640
تو پھر لینے صفر کے علاوہ دو، جدید 26،
کہ دو، جدید 26، جس نے ہمیں دو دیتا ہے.

189
00:11:15,640 --> 00:11:18,780
اور اچھی طرح سے کی شرائط میں
ایک حروف تہجی انڈیکس،

190
00:11:18,780 --> 00:11:23,930
C میں تیسرا حرف ہے
حروف تہجی، تاکہ مطابق کریں گے

191
00:11:23,930 --> 00:11:26,290
دو میں سے ایک حروف تہجی انڈیکس پر.

192
00:11:26,290 --> 00:11:29,850
لہذا اس کا استعمال ہے کہ لگتا ہے
اس معاملے میں حروف تہجی انڈیکس

193
00:11:29,850 --> 00:11:32,840
دراصل ہمیں درست نتیجہ دیتا ہے.

194
00:11:32,840 --> 00:11:35,020
>> تو اب کی جانچ کرنے کی اجازت دینا
اگر مساوات کاموں کو دیکھ

195
00:11:35,020 --> 00:11:37,210
ایک حروف تہجی انڈیکس کے ساتھ.

196
00:11:37,210 --> 00:11:42,540
Y کے حروف تہجی انڈیکس 24 کے طور پر ہے
حروف تہجی میں آخری خط سے پیچھے.

197
00:11:42,540 --> 00:11:46,520
تو پھر 24 کے علاوہ ہمارے
دونوں میں سے اہم امریکی 26 فراہم کرتا ہے.

198
00:11:46,520 --> 00:11:54,750
26 MOD کے 26 ہم 0، جس کے لئے، خوش قسمت دیتا ہے
ہمیں، اے کے لئے حروف تہجی انڈیکس ہے

199
00:11:54,750 --> 00:11:59,100
تو امید ہے کہ کافی ثبوت ہے
حروف تہجی انڈیکس طریقہ کام کرتا.

200
00:11:59,100 --> 00:12:03,180
اگر نہیں تو، باہر کرنے کی کوشش کرنے کے لئے آزاد محسوس کرتے ہیں
اپنے آپ سے کچھ مثالیں.

201
00:12:03,180 --> 00:12:08,030
>> مناسب طریقے سے ارد گرد لپیٹ کرنے کے لئے ہے
حروف تہجی اور قیصر مساوات کا اطلاق ہوتا ہے،

202
00:12:08,030 --> 00:12:11,280
پھر ہم کرنے کی ضرورت ہے کہ پتہ
دکھاے سوچکانکوں کے ساتھ نمٹنے.

203
00:12:11,280 --> 00:12:15,130
لیکن ہم ASCII کے ساتھ شروع
اقدار، اور صرف اس صورت

204
00:12:15,130 --> 00:12:18,530
ہم تو قبول کرو
حروف تہجی انڈیکس.

205
00:12:18,530 --> 00:12:23,970
وہاں سے، پرنٹ کرنے کے لئے، ہم نے کی ضرورت ہے
پھر سے ASCII اقدار کے ساتھ نمٹنے کے لئے.

206
00:12:23,970 --> 00:12:28,350
تو ہم کس طرح کرنے کے لئے جاننے کی ضرورت ہے
حروف تہجی کرنے ASCII سے جاؤ

207
00:12:28,350 --> 00:12:31,080
اور حروف تہجی سے ASCII کرنے.

208
00:12:31,080 --> 00:12:34,910
>> لہذا میں معلوم کرنا آپ پر چھوڑ
ایک کردار کے درمیان پیٹرن

209
00:12:34,910 --> 00:12:38,590
اور اس کے حروف تہجی
انڈیکس اور اس کے ASCII قیمت.

210
00:12:38,590 --> 00:12:41,530
اب، اگرچہ یاد رکھیں کہ
سلائڈ پر اس ٹیبل حق

211
00:12:41,530 --> 00:12:45,630
بھی بڑے حروف کو ظاہر کرتا ہے کہ ہم،
چاہے یا نہیں پر غور کرنا ہوگا

212
00:12:45,630 --> 00:12:48,915
ایک مختلف پیٹرن لاگو ہوتا ہے
کم کیس حروف کے لئے.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> تو اب ہم باہر سوچا ہے کہ
ایک کردار کو منتقل کرنے کا طریقہ،

215
00:12:55,840 --> 00:13:02,200
پھر ہم یہ کرنا ہے کہ پیمانے پر ہے کہ
سائن پورے سادہ متن بھر جانے کے لئے.

216
00:13:02,200 --> 00:13:04,260
تو سادہ متن ایک تار ہے.

217
00:13:04,260 --> 00:13:08,210
ہمارے لئے خوش قسمت، ایک تار واقعی ہے
صرف حروف کا ایک سرنی،

218
00:13:08,210 --> 00:13:12,150
تاکہ ہر کردار تک رسائی حاصل کرنے کے لئے میں
ایک تار کی، تمام تمہیں کیا کرنا ہے

219
00:13:12,150 --> 00:13:14,270
سرنی سنکیتن کا استعمال کرنا ہے.

220
00:13:14,270 --> 00:13:20,270
میں قسم کی ایک متغیر ہے کہہ دو
کہا جاتا سٹرنگ "متن = 'اس CS50 ہے.'"

221
00:13:20,270 --> 00:13:22,730
>> ٹھیک ہے، تو، حکم کے لئے
ہر کردار تک رسائی حاصل،

222
00:13:22,730 --> 00:13:25,880
تمام میں نے ساتھ کیا کرنا ہے
متغیر متن ہے

223
00:13:25,880 --> 00:13:31,660
کہ، اچھی طرح سے کیا کہنا انڈیکس صفر پر متن،
انڈیکس میں دارالحکومت T. ہائے کے مساوی ہے

224
00:13:31,660 --> 00:13:35,100
ایک کو کم کیس ح کے مساوی ہے.

225
00:13:35,100 --> 00:13:38,110
ایک اور مفید کام ہے
سٹرنگ کی لمبائی تقریب.

226
00:13:38,110 --> 00:13:40,760
چنانچہ ایک سٹرنگ میں گزر
اس تقریب واپس آ جائیں گے

227
00:13:40,760 --> 00:13:44,610
ایک عددی، کہ سٹرنگ کی لمبائی.

228
00:13:44,610 --> 00:13:47,060
>> ہم کے بارے میں بات کی ہے اب جب کہ
ان تمام مختلف عناصر،

229
00:13:47,060 --> 00:13:48,540
ایک ساتھ مل کر انہیں واپس ڈال دو.

230
00:13:48,540 --> 00:13:52,210
تو یا تو میری pseudocode کے لئے واپس آ جائیں
کوڈ یا آپ کے pseudocode

231
00:13:52,210 --> 00:13:55,920
اور اس کے ذریعے جانے کے لئے اور اس بات کو یقینی بنانے کے آپ کہ
ہر ایک چیز کس طرح جانتے.

232
00:13:55,920 --> 00:14:01,520
argc اور argv استعمال کرتے ہوئے کلید حاصل کرنا،
ایک عددی میں چابی رخ، ایک

233
00:14:01,520 --> 00:14:06,840
میں، سادہ متن کے لئے فورا ہی،
GetString کے، اور پھر iterating کر

234
00:14:06,840 --> 00:14:09,590
میں ہر کردار پر
سادہ متن سٹرنگ،

235
00:14:09,590 --> 00:14:14,910
ہر کردار کی صورت تحفظ
اور چابی کی طرف سے اس کردار کو منتقل،

236
00:14:14,910 --> 00:14:17,520
تم ہو کہ کو یقینی بنانے
حروف تہجی کے ارد گرد ریپنگ،

237
00:14:17,520 --> 00:14:20,850
آخر میں ہے کہ ciphertext کے پرنٹنگ.

238
00:14:20,850 --> 00:14:25,470
میرا نام Amila کی ہے، اور اس میں کیسر تھا.

239
00:14:25,470 --> 00:14:28,448

