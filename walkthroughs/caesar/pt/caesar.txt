Amila: Vamos abordar César. Em César, que permitem que o usuário para codificar uma mensagem secreta. Então, vamos mergulhar na direita e olhar em nossas to-dos para este problema. Então, primeiro, temos a chave do usuário. Então, temos o texto plano que deseja codificar. Depois disso, nós cifrar-lo para eles, e, finalmente, imprimir seu texto cifrado. 

Então, vamos começar com um exemplo. Digamos que você queria para codificar o toda alfabeto com uma chave de duas. Bem, todo o seu alfabeto seria apenas ser deslocado para letras. Assim, um iria codificar para C, B para D, C e E, assim por diante e assim por diante, até chegar ao X, que codifica a Z ou zed, dependendo de onde você é. Então Y, então, mudar toda a maneira, envolver em torno do alfabeto para chegar a A, e, em seguida, finalmente, a última letra da alfabeto, Z, zed, que codificam para B. 

Você entendeu? Vejamos alguns exemplos. O primeiro exemplo é muito semelhante ao que nós apenas explicado acima. Então, se eu codificar alguma seção do alfabeto, de A a G, por uma chave de duas, então eu só pegar minha inteira alfabeto deslocou duas cartas. 

Então, no meu próximo exemplo, a chave é ainda dois, assim você ainda deve saber que as letras que esperar. Mas aqui é uma frase. Este é CS50. Então você vai perceber que eu preservar o caso de minhas cartas, por isso todas as letras maiúsculas são também letras maiúsculas no texto cifrado. E qualquer minúsculas letras no texto simples também são minúsculas letras no texto cifrado. Mas eu continuo as letras e quaisquer pontos de exclamação ou qualquer outro tipo de pontuação da mesma. 

Portanto, agora que temos um senso de como o programa funciona, sinta-se livre para ir correr um pouco mais exemplos de seu próprio país, se desejar. Vamos começar com a obtenção a chave do utilizador. Tradicionalmente, com outros problemas, nós temos foi acostumado a obter todos os números que nós precisa de avisar o usuário com a getInt função. Mas desta vez nós estamos indo realmente usar o argumento de linha de comando e uma nova função chamada atoi. 

Quando você executa o principal programa em C, então leva em dois parameters-- int argc, que é o número de argumentos transmitido, e então argv, uma matriz de strings que contém uma lista de todos os argumentos passado. Você não tem explicitamente para declarar essas variáveis. Eles estão computados para você pelo compilador. uso correto para isso seria argc para ser duas neste caso, porque o usuário tem de passar em a chamada para o programa, ./caesar, e, em seguida, a tecla, qualquer número que desejar. Então isso significa que argc deve ser dois Para que uma utilização válida de César para ser executado. 

Então, vamos olhar um exemplo. Digamos que eu já escrevi e compilado um programa chamado blastoff. Então, se eu corri na linha de comando ./blastoff Equipe Rocket, bem, então, argc seriam três, porque eu passados ​​em três argumentos distintos. Então argv ficaria assim. É uma matriz, e seria conter cada uma das três cordas. ./blastoff no primeiro índice, equipe no próximo, e foguete no último. 

Vamos falar sobre matrizes para um segundo. Matrizes são estruturas de dados que armazenam vários valores do mesmo tipo. Isto pode vir a calhar quando têm listas de números inteiros ou strings. Basta lembrar que eles têm para ser do mesmo tipo. Na ciência da computação, nós amor contando a partir de zero, então lembre-se que as matrizes também estão com índice zero. Assim, o primeiro elemento da minha matriz vai ser no índice zero. Portanto, neste caso, quando tenho uma matriz de comprimento de quatro, em seguida, o último índice do último elemento da minha matriz é realmente vai ser no índice três, não quatro. Porque lembre-se, nós começar a contar em zero. 

Aqui está um exemplo de como você pode criar uma matriz de seu próprio país. Então, digamos que eu queria para guardar a minha três nomes favoritos do cão. Então eu iria criar uma matriz de strings. Assim, gostaria de declarar o tipo, corda, e em seguida, colocar o nome da matriz, cães, e, em seguida, os quadrados suportes de colocar o tamanho do array-- neste caso, três. 

Assim, a minha primeira entrada vai para ser cães no índice zero, e que vai ser Milo. Então cães em um índice de vai ser pateta, querida Mochi, e, em seguida, o último entrada, a terceira entrada no índice dois, vai ser bonito, doce Elphie. Você vai notar que o formato para preencher essa matriz é muito parecido como você pode declarar qualquer outra variável, onde você tem o nome da variável seguido por o valor que você deseja armazenados nele. A única diferença em Neste caso é que você tem que se lembrar de colocar o índice do valor entre colchetes. E aí temos o nosso três cães favoritos. 

Mas, infelizmente, é hora para voltar a César. Lembre-se que o uso correto para o usuário vai estar passando, não só o nome do programa ./caesar, mas também a chave que eles querem mudar seu texto simples por. Então isso significa que argc deve ser dois. Eles devem passar em dois-- nem mais, nem menos de dois argumentos de linha de comando. 

Agora, que tal argv? Bem, já sabemos que a matriz vai ser de comprimento dois, mas o que está contido em cada elemento? Bem, o primeiro elemento vai ser ./caesar, e, em seguida, o próximo elemento vai conter a chave que o usuário digitou. Agora, se eles usaram-lo corretamente para o uso de César, em seguida, eles vão para digitar um número. Mas mesmo que o personagem que tipo é um número, é do tipo string de dados. 

Então, como vamos converter essa string para um inteiro? Então, dizer que tenho num, uma corda, que contém a cadeia 50. Se eu quiser converter esse para um inteiro, então eu simplesmente declarar uma nova variável, um inteiro I, chamando atoi. Eu passar no meu variável de cadeia, num, e então eu conterá então o número 50. Certifique-se de verificar o homem páginas para a função atoi para verificar qual biblioteca é no, bem como o valor que voltará se a string passada se em não conter todos os números. 

Portanto, agora que temos obtido a chave, a próxima etapa é fazer com que o texto original do usuário. Agora, isso vai ser menos complicada do que navegar ao redor do argumentos de linha de comando. Tudo o que temos a fazer é chamar a função getString para pedir ao utilizador para dar -nos uma corda, mas lembre-se para verificar as especificações de como nós pode querer para solicitar ao usuário para isso. 

Agora chegamos à coração do problema-- como cifrar o texto plano. Bem, em primeiro lugar, vamos falar sobre como para cifrar um carácter de cada vez, e depois vamos abordar como iterar sobre todo o texto simples. Eu escrevi alguns pseudocódigo para o problema de César. Encorajo-vos a escrever o seu próprio bem. Pode não parecer idêntico à meu, e isso é OK, mas contanto como a ideia geral é a mesma. 

Os três primeiros passos já fizemos. Nós começamos a chave o argumento de linha de comando, nós transformamos essa chave em um número inteiro, e nós solicitado ao utilizador para o texto simples que querem cifrar. Então a próxima grande pedaço é que, para cada caractere na seqüência de texto simples, se é alfabética, queremos preservar seu caso e transferi-lo. Ao preservar a caso, o que eu quero dizer é que todas as letras maiúsculas letras deve permanecer superior caso e todas as letras minúsculas deve permanecer em minúsculas. Então, em seguida, depois de mudar aqueles, então nós imprimir o texto cifrado. 

Aqui estão três funções que vão de vir a calhar para este problema. Recorde-se acima quando eu dei o exemplo para deslocar este é CS50? Lembre-se que o 50 eo ponto de exclamação não mudar? Então, como podemos dizer se nós precisa mudar uma letra ou não? Bem, "é alfa," se você passá-lo um personagem, retornará true se esse personagem é uma letra e falso caso contrário. Para ajudá-lo com preservando capitalização são as funções "está superior "e" inferior é. " 

Estas duas funções também tomar em um único caractere como entrada e retornar um booleano, verdadeiro ou falso dependendo se esse personagem é maiúsculas ou minúsculas. Porque "é superior" e "é inferior "são funções booleanas, o que significa que eles retornam um booleano, você pode usá-los em suas condições. Então aqui está um trecho de código que só imprime uma carta se é maiúscula. Então eu declarou o meu personagem carta para ser o caso superior zed e então, se "é superior" retornos verdade, então eu imprimir essa letra. 

Voltando ao nosso exemplo simples de deslocando o alfabeto por uma chave de duas, como é que vamos realmente ter que trabalhar? Bem, acontece que personagens e inteiros estão intimamente relacionados. Cada personagem tem uma valor inteiro associado com ele encontrada no gráfico ASCII, onde ASCII de cada personagem valor é exibido. Assim, um corresponde um caso superior para um valor ASCII de 65 e uma minúscula ao um valor ASCII de 97. 

Sinta-se livre para olhar para cima qualquer gráfico ASCII on-line para ver esses valores para si mesmo. Então, o que isto significa é que nós podemos assumir o caráter de maiúsculas A, adicionar o número inteiro de dois a ela, e em seguida, obter o caso de caracteres C superior como resultado. Isso porque 65, o ASCII valor para o capital de A, mais 2, dá-nos 67, o que corresponde ao caráter de maiúsculas C. 

Infelizmente, as coisas não bastante ser tão simples. Nós temos uma equação que temos de considerar. Aqui nos diz que o texto cifrado om letra corresponde ao texto simples om carta, além da key-- tudo isso, modular 26. Por que é esse o caso? Vamos voltar ao nosso exemplo de antes, onde o capital A, mais 2, dá-nos de capital C. 

Assim que a aplicação da equação a especificação nos dá, em seguida, vamos dar maiúsculo além de 2 e mod que 26. Assim, o capital A, quando eu colocá-lo em essas aspas, permite-me a tratá-lo como um número inteiro, de modo que permite me para lançá-lo para o seu valor ASCII, 65. 65 + 2 é 67. 67 mod 26 nos dá 15, mas isso realmente não faz sentido, porque sabemos que o capital de valor ASCII C é de 67, e não 15. Então, como podemos conciliar isso? 

Bem, aqui eu gostaria de postular a noção de um índice alfabético. Então, nós já falamos sobre como cada personagem tem seu valor ASCII, mas eu gostaria de dizer, bem, vamos pensar em cada personagem também ter um índice alfabético, onde A, por exemplo, como a primeira letra do alfabeto, tem um índice alfabético de zero. Então agora vamos aplicar o mesma equação, como antes, mas usando um índice alfabético. 

Então A é zero, como já definido. Então, em seguida, tendo zero mais dois, mod 26, que é dois, mod 26, o que nos dá dois. E bem, em termos de um índice alfabético, C é a terceira letra na alfabeto, de modo que corresponderia para um índice alfabético de dois. Assim, parece que a utilização do índice alfabético, neste caso, realmente nos dá o resultado correto. 

Então agora vamos verificar para ver se as obras de equações com um índice alfabético. índice alfabético de Y é de 24 como a segundo a última letra do alfabeto. Assim então 24 mais a nossa chave de dois nos dá 26. 26 mod 26 nos dá 0, o que, por sorte nós, é o índice alfabético para A. Portanto, esperamos que isso é prova suficiente de que o método índice alfabético funciona. Se não, sinta-se livre para experimentar alguns exemplos de seu próprio país. 

A fim de envolver adequadamente em torno da alfabeto e aplicar a equação de César, então sabemos que precisamos lidar com índices alfabéticos. Mas vamos começar com ASCII valores, e só então nós, em seguida, converter para o índice alfabético. De lá, a fim de imprimir, precisamos para lidar com os valores ASCII novamente. Então, precisamos descobrir como ir de ASCII a ordem alfabética e de alfabética para ASCII. 

Então eu deixo para você descobrir o padrão entre um personagem e os seus alfabética índice e seu valor ASCII. Agora, lembre-se que, apesar de este direito tabela no slide mostra as letras maiúsculas, nós também tem que considerar se ou não um padrão diferente se aplica para os caracteres minúsculos. 

Portanto, agora que nós descobrimos como mudar um único personagem, em seguida, todos nós temos que fazer é escala que -se para ir ao longo de todo o texto plano. Assim, o texto original é uma string. Sorte para nós, uma string é realmente apenas um array de caracteres, por isso, para acessar cada personagem de uma cadeia, tudo que você tem a fazer é usar a notação de matriz. Digamos que eu tenha uma variável do tipo string chamada "text =" este é CS50 '. " 

Pois bem, a fim de acessar cada personagem, tudo o que tenho a ver com O texto variável é para dizer bem, o texto no índice zero, que corresponde ao capital T. texto no índice uma corresponde ao caso inferior h. Outra função útil é a função comprimento da corda. Então, passando em uma string para que a função irá retornar um inteiro, o comprimento dessa corda. 

Agora que nós já conversamos sobre todos estes elementos diferentes, vamos juntá-los novamente. Então, voltar a qualquer meu pseudocódigo código ou o seu pseudocódigo e passar por e certifique-se de que você sabe como fazer cada coisa. Obtendo a chave usando argc e argv, girando a chave para um número inteiro, um para i, alertando para texto simples, getString, em seguida, a iteração sobre cada personagem a cadeia de texto simples, preservando o caso de cada caractere e mudando esse caráter pela chave, garantir que você está enrolar o alfabeto, finalmente, imprimir o texto cifrado. Meu nome é Amila, e esta era César. 