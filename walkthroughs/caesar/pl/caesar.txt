AMILA: Zajmijmy się Cezarowi. W Cezara, pozwalamy użytkownikowi zakodować tajną wiadomość. Warto więc nurkować w prawo i szukać w naszych czynności do wykonania dla tego problemu. Więc po pierwsze, otrzymujemy klucz z użytkownikiem. Następnie otrzymujemy czysty tekst że chcą, aby zakodować. Po tym, encipher to za nich, i wreszcie możemy wydrukować swój zaszyfrowany. 

Więc zacznijmy od przykładu. Powiedzmy, że chciał w celu zakodowania Cały alfabet z kluczem dwóch. Cóż, całe abecadło będzie po prostu być przesunięte do listów. Więc będzie kodować do C, B do D, C, E, tak dalej, i tak dalej, aż dojdziesz do X, który koduje do Z zed lub, w zależności od tego, gdzie jesteś z. Wtedy Y by następnie przenieść całą drogę, owinąć wokół alfabetu, aby dostać się do, i wreszcie ostatnią literę alfabet, Z, zed, by zakodować do B. 

Zrozumiałeś? Spójrzmy na kilka przykładów. Pierwszym przykładem jest tu bardzo podobna do tego, co właśnie wyjaśniono powyżej. Więc jeśli mogę kodować jakiś odcinek alfabetu, od A do L, za pomocą klucza dwóch, potem po prostu cała moja Alfabet przesunął dwie litery. 

Następnie, w moim przykładzie, klucz jest nadal dwa, więc należy jeszcze wiedzieć listów, które mogą się spodziewać. Ale tutaj jest to zdanie. To CS50. Tak więc można zauważyć, że ja zachować sprawę z moich listów, więc żadnym wypadku górne litery są również Górne litery w zaszyfrowanym tekście. A każda mała litera litery tekstu jawnego są również małe litery Litery w zaszyfrowanym tekście. Ale trzymam litery oraz wszystkie wykrzykniki lub jakiekolwiek inne znaki takie same. 

Więc teraz, że mamy poczucie na jak program działa, nie krępuj się udać uruchomić kilka przykłady własną rękę, jeśli chcesz. Zacznijmy coraz klucz od użytkownika. Tradycyjnie, z inne problemy, mamy przyzwyczajeni do uzyskania jakieś numery, że my trzeba by monitowania użytkownika z getint funkcji. Ale tym razem mamy naprawdę dzieje użyć argumentu wiersza poleceń a nowa funkcja o nazwie atoi. 

Po uruchomieniu głównego Program w C, następnie odbywa się w dwóch parameters-- int argc, które Jest to liczba argumentów przekazany, a następnie argv, tablica ciągów, które zawiera lista wszystkich argumentów minął. Nie ma jednoznacznie zadeklarować tych zmiennych. Są one obliczane na Ci przez kompilator. Poprawne użycie tego byłoby dla argc się dwa w tym przypadku ponieważ użytkownik musi przejść w wywołanie programu ./caesar, a następnie klawisz bez względu na liczbę chcą. Więc to oznacza, że ​​muszą być dwa argc W celu zapewnienia prawidłowego stosowania Cezara do wykonania. 

Więc spójrzmy na przykład. Powiedzieć, że już napisane i skompilowany program o nazwie blastoff. Jeśli więc wpadłem w wierszu poleceń ./blastoff Team Rocket, dobrze więc, argc będzie trzy, bo przeszedł w trzech różnych argumentów. Następnie argv wyglądałby następująco. Jest to tablica, a to byłoby zawierają każdy z trzech łańcuchów. ./blastoff w pierwszym zespole indeksu, w następnym, a rakiety w ostatnim. 

Porozmawiajmy o macierzach dla sek. Tablice są struktur danych, które posiadają wiele wartości tego samego typu. To może się przydać, kiedy mają listy liczb całkowitych lub ciągi. Wystarczy pamiętać, że mają być tego samego typu. W informatyce, mamy Uwielbiam licząc od zera, więc pamiętać, że tablice są również zero-indeksowane. Tak więc pierwszym elementem mojej tablicy będzie o indeksie zerowego. Więc w tym przypadku, kiedy mam tablica o długości czterech, to ostatnia indeksem Ostatnim elementem mojej tablicy faktycznie będzie o indeksie trzy, a nie cztery. Bo pamiętajmy, że rozpocznie odliczanie od zera. 

Oto przykład, w jaki sposób może utworzyć tablicę własnych. Tak mówią chciałem przechowywać moje trzy ulubione imiona dla psów. Następnie chciałbym utworzyć tablicę ciągów. Więc chciałbym zadeklarować typ, sznurek i następnie umieścić nazwę tablicy, psy, a następnie w tych placu Wsporniki umieścić rozmiar z array-- w tym przypadku trzy. 

Więc mój pierwszy wpis będzie się psy o indeksie zerowym, i że będzie Milo. Potem psy pod indeksem będzie Goofy, kochanie Mochi, a następnie ostatni Wpis, trzecia pozycja w indeksie dwa, będzie słodki, słodki Elphie. Zauważysz, że format za wypełnienie tej tablicy jest bardzo podobny, jak to polubisz Oświadczam, gdzie dowolnej innej zmiennej masz nazwę zmiennej, po której następuje wartości, które mają być przechowywane w nim. Jedyna różnica w tym przypadku jest to, że ciebie Trzeba pamiętać, aby umieścić wskaźnik wartości w nawiasach kwadratowych. I nie mamy trzy ulubione psy. 

Ale niestety, nadszedł czas, wrócić do Cezara. Należy pamiętać, że prawidłowe wykorzystanie dla Użytkownik będzie nie tylko przechodząc nazwa ./caesar programem, ale również kluczem, które chcą przenieść ich tekst jawny przez. To znaczy, że argc musi wynosić dwa. Muszą one przejść w two-- nie więcej, nie mniej niż dwóch argumentów wiersza poleceń. 

Teraz, co argv? Cóż, wiemy już, że Tablica będzie o długości dwóch, Ale co jest zawarte w każdym elemencie? Cóż, pierwszy element będzie ./caesar, a następnie kolejnym elementem będzie zawierają klawisz, który użytkownik wpisana. Teraz, jeśli są stosowane prawidłowo za korzystanie z Cezarem, Następnie jadą do wpisania numeru. Ale mimo charakteru że typ jest liczbą, to danych typu string. 

Więc w jaki sposób przekonwertować łańcuch na liczbę całkowitą? Więc muszę powiedzieć, num, ciąg, zawierający łańcuch 50. Jeśli chcesz przekonwertować do liczby całkowitej, a następnie po prostu zadeklarować nową zmienna, całkowitej I, nazywając atoi. Mijam w moim zmiennej łańcuchowej, num, a Wtedy następnie zawierać numer 50. Upewnij się, aby sprawdzić mężczyznę stron dla funkcji atoi aby sprawdzić, które to biblioteka w, jak również to, co cenią go powróci, jeśli ciąg przekazywane W nie zawiera wszystkie numery. 

Więc teraz, że dotarłeś kluczem, następnym krokiem jest uzyskanie zwykłego tekstu ze strony użytkownika. Teraz to będzie są mniej skomplikowane niż nawigacja okolice Argumenty wiersza poleceń. Wszystko co musimy zrobić, to zadzwonić funkcja getString monitować użytkownika, aby dać nam ciąg, ale należy pamiętać, aby sprawdzić specyfikacje jak chcieć poprosi użytkownika o tym. 

Teraz dochodzimy do Sercem problem-- Jak encipher tekst jawny. Cóż, po pierwsze, porozmawiajmy o tym, jak do encipher jeden znak naraz, a następnie będziemy zająć jak iteracyjne nad cały tekst jawny. Pisałem jakiś Pseudokod za problem Cezara. Zachęcam do Napisz własną, jak również. Może nie wyglądają identyczne kopalni, a to jest OK, ale tak długo, jako ogólna idea jest taka sama. 

Pierwsze trzy etapy mamy już zrobione. Musimy zdobyć klucz od argument wiersza poleceń, mamy odwrócił ten klucz do liczby całkowitej, a my skłoniło użytkownika do tekstu jawnego że chcą encipher. Tak więc kolejny wielki kawał jest to, że dla każdego znaku w słownym ciąg, jeśli jest to alfabetyczna, chcemy zachować jego obudowa i przesunięcie go. By zachować sprawa, co ja oznacza to, że wszystkie wielkie litery Litery powinny pozostać Górny Przypadek, a wszystkie małe litery powinny pozostać małe. Więc po tym przesunięcie tych, potem wydrukować tekst zaszyfrowany. 

Oto trzy funkcje, które idą by się przydał do tego problemu. Pamiętaj, w górze, kiedy dał Przykładem tego jest przesunięcie CS50? Pamiętaj, że 50 a Wykrzyknik nie zmieniać? Więc jak możemy powiedzieć, czy my trzeba przenieść do nas, czy nie? Cóż, "jest alfa", jeśli przekazać to charakter, zwróci true, jeśli ta postać Jest to list i false w przeciwnym wypadku. Aby pomóc zachowaniem kapitalizacji są funkcje "jest górny "i" jest mniejsze. " 

Te dwie funkcje również wziąć w jednym znaku jako wejście i powrót logiczną, true lub false w zależności od tego, czy tego znaku Jest wielkie litery lub małe litery. Ponieważ "jest górny" i "jest niższy "są funkcje logiczne, co oznacza, że ​​wrócą ci logiczną, można z nich korzystać w swoich warunkach. Tak oto fragment kodu, że tylko drukuje list, czy to wielkie litery. Więc ja oświadczył mój charakter List do górnej przypadku zed a następnie, jeśli "to górny" powraca prawda, potem wydrukować ten list. 

Wracając do naszego prostego przykładu przesuwanie alfabetu za pomocą klucza dwóch, jaki sposób rzeczywiście się, że do pracy? Cóż, okazuje się, że znaki i całkowitymi są bardzo ściśle powiązane. Każda postać posiada Wartość całkowita związane z stwierdzono w tabeli ASCII, gdzie każdego znaku ASCII jest wyświetlana wartość. Tak więc wielkie litery A odpowiada na wartość ASCII 65 i małe litery od a do wartość ASCII 97. 

Zapraszam do zapoznania się każda tablica ASCII Internecie aby zobaczyć te wartości dla siebie. Więc co to oznacza to, że możemy przybrać charakter wielkimi literami A, dodać do niego dwie liczby całkowitej, a następnie dostać postać wielkie litery C w wyniku. To dlatego, że 65 lat, ASCII wartość kapitału A plus 2, daje 67, które odpowiada do charakteru Wielkie litery C. 

Niestety, rzeczy nie dość być tak proste. Mamy równania musimy wziąć pod uwagę. Oto ona mówi nam, że szyfrogram ith litera odnosi się do tekstu jawnego ith List, plus key-- wszystko to modułowe 26. Dlaczego tak? Wróćmy do naszego przykładu z przed, w których kapitał A, oraz 2, Daje nam kapitału C. 

Zatem stosując równanie specyfikacja daje nam, Następnie weźmy kapitałowych, Plus 2 i mod, który przez 26 lat. Więc kapitał A, kiedy mogę umieścić go w te pojedyncze cudzysłowy, pozwala mi traktować go jako liczbą całkowitą, tak że umożliwia abym wrzucił je do wartości ASCII, 65. 65 Plus 2 jest 67. 67 mod 26 daje nam 15, ale to naprawdę nie ma sensu, ponieważ wiemy, że Kapitał C wartość ASCII jest 67, a nie 15. Jak więc pogodzić, że? 

Cóż, tutaj chciałbym postulować Pojęcie indeksie alfabetycznym. Więc mamy już rozmawialiśmy o tym, jak Każda postać ma swoją wartość ASCII ale chcę powiedzieć, dobrze, niech myśleć o każdy znak posiadający również indeks alfabetyczny, gdzie A, na przykład, jako pierwsza litera alfabetu, ma indeks alfabetyczny zera. Więc teraz niech zastosuje Równanie samo jak poprzednio, ale stosując indeks alfabetyczny. 

Tak więc wynosi zero, jak to wcześniej zdefiniowano. Tak więc biorąc zera plus dwa, MOD 26, to dwa, mod 26, co daje nam dwa. I dobrze pod względem indeks alfabetyczny, C jest trzecia litera w alfabet, tak by odpowiadać z indeksem alfabetycznym dwóch. Wygląda więc na to, że za pomocą Indeks alfabetyczny w tym przypadku w rzeczywistości daje nam poprawny wynik. 

Więc teraz niech sprawdzi sprawdzić, czy prace równania z indeksem alfabetycznym. Indeks alfabetyczny Y jest 24 jako przedostatniej litery alfabetu. Tak więc 24 oraz naszych Kluczem dwóch daje nam 26. 26 mod 26 daje nam 0, co, na szczęście dla USA, jest indeks alfabetyczny dla A. Więc mam nadzieję, że to wystarczy, że dowód Metoda alfabetycznego indeksu działa. Jeśli nie, zachęcamy do wypróbowania Niektóre przykłady własnych. 

W celu prawidłowego owinąć wokół alfabet i zastosować równanie Caesar, to wiemy, że musimy czynienia z indeksów alfabetycznych. Ale zaczynamy z ASCII wartości, a dopiero potem mamy następnie przekonwertować do indeks alfabetyczny. Stamtąd, w celu wydrukowania, musimy do czynienia z wartościami ASCII ponownie. Dlatego musimy dowiedzieć się, jak przejść z ASCII na alfabetycznie iz alfabetycznej ASCII. 

Więc zostawiam to do ciebie, aby dowiedzieć się, wzór między charakterem i jego alfabetycznej indeksu i jego wartość ASCII. Teraz należy pamiętać, że choć prawo to stół na szkiełku pokazuje liter, również trzeba rozważyć, czy Dotyczy inny wzór dla małych liter. 

Więc teraz, że mamy zorientowali się Jak przesunąć pojedynczy znak, Następnie wszystko, co musimy zrobić, to skala, która górę, aby przejść całej postaci zwykłego tekstu. Tak więc tekst jawny jest ciągiem. Na szczęście dla nas, ciąg jest naprawdę tylko tablica znaków, tak, aby uzyskać dostęp do każdego znaku z ciągu, wszystko co musisz zrobić, jest użycie notacji tablicy. Że mam zmiennej typu Ciąg o nazwie "text =" to jest CS50 ". 

No cóż, w celu dostęp do każdego znaku, wszystko, co mam zrobić z tekst zmienna jest powiedzieć, dobrze, tekst o indeksie zerowym, które odpowiada kapitał T. Tekst o indeksie jeden odpowiada dolnej części obudowy godziny. Kolejną użyteczną funkcją jest funkcja długość łańcucha. Więc przechodząc do łańcucha że funkcja zwróci liczbą całkowitą długość tego łańcucha. 

Teraz, kiedy rozmawialiśmy o wszystkie te różne elementy, postawmy je razem. Więc powrót do obu moich Pseudokod kod lub Twój pseudokod i przejść przez i upewnij się, że wiem jak to zrobić każdą rzecz. Uzyskiwanie klucza przy użyciu argc i argv, przekręcając kluczyk w całkowite, to do i, co skłoniło do zwykłego tekstu, getString, a następnie iteracji nad każdym znaku ciąg zwykłego tekstu, zachowując przypadek każdego znaku i przesunięcie tego znaku przez klucz, zapewnienie, że jesteś owijania wokół alfabetu Wreszcie wydrukowaniem zaszyfrowanego tekstu. Nazywam się Amila, a to był Cezar. 