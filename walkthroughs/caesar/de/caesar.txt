AMILA: Lassen Sie uns Caesar angehen. In Caesar, ermöglichen wir den Benutzer eine geheime Nachricht zu kodieren. Also lassen Sie uns tauchen rechts in und schauen auf unserer To-dos für dieses Problem. Also zuerst, erhalten wir den Schlüssel vom Benutzer. Dann erhalten wir den Klartext dass sie wollen, zu kodieren. Danach wird chiffrieren wir es für sie, und schließlich drucken wir ihre Geheimtext. 

Lassen Sie uns also mit einem Beispiel an. Angenommen, Sie wollten das zu kodieren gesamte Alphabet mit einem Schlüssel von zwei Kindern. Nun, Ihre gesamte Alphabet würde nur Buchstaben verschoben werden. So würde A bis C, B kodieren D, C bis E, so weiter und so fort, bis Sie zu X bekommen, die bis Z kodiert oder zed, je nachdem, wo man herkommt. Dann würde Y dann verschieben den ganzen Weg, Verpackung um das Alphabet zu A zu bekommen, und dann schließlich der letzte Buchstabe der Alphabet, Z, zed, würde B. kodieren 

Du hast das bekommen? Schauen wir uns einige Beispiele an. Das erste Beispiel ist hier sehr ähnlich zu dem, was wir oben gerade erklärt. Also, wenn ich einige Abschnitt des kodieren Alphabet, A bis L, mit einem Schlüssel von zwei, Ich bekomme dann nur meine ganze Alphabet verschoben zwei Buchstaben. 

Dann wird in meinem nächsten Beispiel, der Schlüssel ist, immer noch zwei, wissen, so sollten Sie noch die Buchstaben zu erwarten. Aber hier ist es eine Phrase. Dies ist CS50. So werden Sie, dass ich merke, den Fall meiner Briefe erhalten, so dass alle Großbuchstaben sind auch Großbuchstaben in der Chiffretext. Und jeder Klein Buchstaben im Klartext auch sind klein geschrieben Buchstaben im Geheimtext. Aber ich halte die Buchstaben und alle Ausrufezeichen oder jede andere Interpunktion gleich. 

So, jetzt haben wir ein Gefühl haben für wie das Programm funktioniert, fühlen Sie sich frei zu gehen, laufen einige mehr Beispiele für Ihre eigenen, wenn Sie es wünschen. Beginnen wir mit dem Ausstieg der Schlüssel vom Benutzer. Traditionell mit andere Probleme, wir haben wurden daran gewöhnt, immer alle Zahlen, dass wir müssen durch den Benutzer auffordert, mit der Funktion getint. Aber dieses Mal werden wir tatsächlich die Befehlszeilenargument verwenden und eine neue Funktion namens atoi. 

Wenn Sie laufen Haupt Programm in C, dann nimmt in zwei parameters-- int argc, die ist die Anzahl der Argumente eingeleitet, und dann argv, ein Array von Strings, die enthält die Liste der alle Argumente bestanden. Sie haben nicht explizit diese Variablen zu erklären. Sie sind berechnet für Sie durch den Compiler. Die korrekte Verwendung hierfür wäre für argc zwei in diesem Fall zu sein, da der Benutzer muss passieren in der Anruf an das Programm, ./caesar, und dann der Schlüssel, was Zahl, die sie wünschen. Das heißt also, dass argc zwei sein müssen um für eine gültige Verwendung von Caesar ermordet werden. 

Also lassen Sie uns ein Beispiel an. Sagen wir, ich habe schon geschrieben und ein Programm namens blastoff zusammengestellt. Also, wenn ich lief in der Kommandozeile ./blastoff Team Rocket, na ja, dann, argc wäre drei, weil ich in drei verschiedene Argumente übergeben. Dann würde argv wie folgt aussehen. Es ist ein Array, und es wäre enthält jeder der drei Saiten. ./blastoff im ersten Index-Team in der nächsten, und Rakete in die andere. 

Lassen Sie uns über Arrays für eine Sekunde sprechen. Arrays sind Datenstrukturen, die halten mehrere Werte desselben Typs. Dies kann nützlich sein, wenn wir haben Listen von ganzen Zahlen oder Strings. Denken Sie daran, sie haben vom gleichen Typ zu sein. In der Informatik, wir Liebe von Null zu zählen, so denken Sie daran, dass Arrays auch nullindizierte sind. Also das erste Element meiner Array wird mit dem Index Null. Also in diesem Fall, wenn ich ein Array von vier Länge, dann der letzte Index der letzte Element meiner Array wird tatsächlich sein bei Index drei, nicht vier. Denn denken Sie daran, wir beginnen bei Null zu zählen. 

Hier ist ein Beispiel dafür, wie Sie könnte eine Reihe von Ihrer eigenen erstellen. Also sage ich wollte meine speichern drei Lieblingshundenamen. Dann würde ich ein Array von Strings erstellen. Deshalb würde ich die Art, Schnur, erklären und setzen Sie den Namen des Arrays dann, Hunde, und dann in diesen Platz Klammern die Größe des array-- in diesem Fall drei. 

Also mein erster Eintrag wird um Hunde auf dem Index Null, und das wird Milo sein. Dann Hunde am Index ein sein wird, doof, Liebling Mochi, und dann die letzte Eintrag, der dritte Eintrag im Index zwei, geht niedlich, süß Elphie zu sein. Sie werden feststellen, dass das Format bemerken in dieser Anordnung füllt sehr viel ist wie, wie könnte man deklarieren andere Variable, in Sie haben den Variablennamen, gefolgt von der Wert, der in ihm gespeichert werden sollen. Der einzige Unterschied in dieser Fall ist, dass Sie haben sich daran zu erinnern, den Index zu setzen der Wert in eckigen Klammern. Und da haben wir unsere drei Lieblingshunde. 

Aber ach, es ist Zeit, zurück zu Caesar zu bekommen. Denken Sie daran, dass die richtige Verwendung der Benutzer wird nicht nur zu vorbei der Name des Programms ./caesar, aber auch der Schlüssel, dass sie verschieben wollen ihre Klartext durch. Das heißt also, dass argc zwei sein müssen. Sie müssen in two-- nicht mehr passieren, nein weniger als zwei Befehlszeilenargumente. 

Nun, was ist argv? Nun, wir wissen bereits, dass die Array wird mit einer Länge von zwei zu sein, aber was ist in jedem Element enthalten? Nun, das erste Element sein wird ./caesar, und dann das nächste Element wird zu enthalten den Schlüssel, den der Benutzer eingegeben. Nun, wenn sie verwendet es richtig für die Nutzung von Caesar, dann werden sie eine Nummer eingeben. Aber auch wenn der Charakter dass sie geben eine Zahl, es ist vom Datentyp String. 

So, wie Sie konvertieren wir, dass String in einen Integer? Also sage ich haben num, eine Zeichenfolge, mit der Zeichenfolge 50. Wenn ich konvertieren wollen, dass auf eine ganze Zahl, dann ich einfach deklarieren Sie eine neue Variable, ein integer i, atoi Aufruf. Ich gehe in meine String-Variable, num, und Danach werde ich dann enthalten die Nummer 50. Achten Sie darauf, den Mann zu überprüfen Seiten für die Funktion atoi die Bibliothek zu überprüfen, es ist in, als auch, was es Wert zurück, wenn die Zeichenfolge übergeben in dem nicht alle Zahlen. 

So, jetzt haben wir bekommen haben der Schlüssel ist, der nächste Schritt wird der Klartext von dem Benutzer zu erhalten. Nun, das wird weniger kompliziert sein als die Navigation um die Kommandozeilenargumente. Alles, was wir Anruf zu tun haben, ist die getstring Funktion den Benutzer aufzufordern, zu geben, uns eine Zeichenfolge, aber nicht vergessen die Spezifikationen zu überprüfen, wie wir Möglicherweise möchten Sie die Benutzer dazu aufzufordern. 

Nun kommen wir zu den Herz des problem-- wie die Text-zu chiffrieren. Nun, lassen Sie uns zuerst darüber reden, wie ein Zeichen in einer Zeit zu chiffrieren, und dann werden wir ansprechen, wie man laufen den gesamten Text-über. Ich habe einige Pseudo-Code geschrieben für das Caesar Problem. Ich ermutige Sie, schreiben auch Sie Ihre eigenen. Es ist vielleicht nicht identisch aussehen mir, und das ist in Ordnung, aber so lange als allgemeine Idee ist die gleiche. 

Die ersten drei Schritte wir haben bereits getan. Wir haben den Schlüssel bekommen aus die Befehlszeilenargument, wir haben den Schlüssel gedreht in eine ganze Zahl ist, und wir haben aufgefordert, den Benutzer für den Klar dass sie wollen chiffrieren. Also dann der nächste große Brocken ist, dass für jedes Zeichen, in dem unverschlüsselten Text-String, wenn es alphabetisch, wir wollen, zu erhalten seinen Fall und es verschieben. Mit dem wahren Fall, was ich meine ist, dass Großbuchstaben Briefe sollten obere bleiben Fall und alle Kleinbuchstaben sollte Klein bleiben. Also dann, nachdem wir jene verschieben, dann drucken wir den Geheimtext. 

Hier sind drei Funktionen, die gehen werden praktisch für dieses Problem zu finden. Denken Sie daran, sich oben, wenn ich gab die Beispiel für diese Verschiebung ist CS50? Denken Sie daran, dass die 50 und die Ausrufezeichen hat verlagern nicht? Wie können wir also sagen, ob wir brauchen einen Brief oder nicht zu verschieben? Nun, "Alpha", wenn Sie übergeben ein Zeichen, gibt true zurück, wenn das Zeichen ansonsten ist ein Brief und falsch. Um Ihnen zu helfen Erhaltung der Kapitalisierung sind die Funktionen "ist obere "und" niedriger ist. " 

Diese beiden Funktionen übernehmen auch in einem einzelnen Zeichen als Eingabe und kehren Sie ein Boolean, entweder wahr oder falsch je nachdem, ob dieses Zeichen ist Groß- oder Kleinschreibung. Denn "ist oben" und "ist niedriger "sind Booleschen Funktionen, was bedeutet, dass sie Ihnen einen Boolean zurückgeben, Sie können diese in Ihren Bedingungen. Also hier ist ein Code-Snippet, dass nur druckt einen Brief, wenn sie in die obere Fall ist. Also ich habe meinen Charakter erklärt Brief das obere Gehäuse zu zed und dann, wenn "ist oben" zurückkehrt wahr ist, dann drucke ich diesen Brief. 

Gehen wir zurück zu unserem einfachen Beispiel von das Alphabet durch einen Schlüssel von zwei Schalt, wie kommen wir, dass tatsächlich zu arbeiten? Nun, es stellt sich heraus, dass Zeichen und ganze Zahlen sind sehr eng miteinander verbunden. Jeder Charakter hat eine Integer-Wert zugeordnet mit ihm in der ASCII-Grafik gefunden, wobei jedes Zeichen des ASCII Wert wird angezeigt. So ein oberes Gehäuse A entspricht zu einem ASCII-Wert von 65 und ein Klein ein zu ein ASCII-Wert von 97. 

Fühlen Sie sich frei zu sehen jede ASCII-Chart Online diese Werte für sich selbst zu sehen. Also, was das bedeutet, ist, dass wir nehmen den Charakter von Großbuchstaben A, fügen Sie die ganze Zahl zwei, und dann bekommen die Zeichen in Großbuchstaben C als Ergebnis. Das ist, weil 65, die ASCII Wert für Kapital A, sowie 2, gibt uns 67, das entspricht auf den Charakter des oberen Gehäuses C. 

Leider Dinge nicht mehr ganz so einfach sein. Wir haben eine Gleichung, wir haben zu prüfen. Hier sagt uns, dass der i-ten verschlüsselten Text Buchstabe entspricht dem i-ten Klar Brief, plus die key-- all das, modular 26. Warum ist das der Fall? Kommen wir zu unserem Beispiel zurück aus vor, wo das Kapital A, sowie 2, gibt uns Kapital C. 

So Anwendung der Gleichung, dass die Spezifikation gibt uns, dann lassen Sie uns Kapital A nehmen plus 2 und mod, dass um 26. So Kapital A, wenn ich es in diese einfache Anführungszeichen, erlaubt es mir, sie zu behandeln wie eine ganze Zahl ist, dass ermöglicht so mich auf seine ASCII-Wert zu werfen, 65. 65 plus 2 ist 67. 67 mod 26 gibt uns 15, aber das ist nicht wirklich Sinn machen, weil wir wissen, dass die Kapital C ASCII-Wert ist 67, nicht 15. So wie versöhnen wir das? 

Nun, hier würde Ich mag die postulieren Vorstellung eines alphabetischen Index. Deshalb haben wir bereits darüber gesprochen, wie jeder Charakter hat seine ASCII-Wert, aber ich möchte sagen, na ja, lassen Sie uns denken über jedes Zeichen auch mit einen alphabetischen Index, wobei A beispielsweise als ersten Buchstaben des Alphabets, hat einen alphabetischen Index von Null. So, jetzt lassen Sie uns die Anwendung elbe Gleichung wie zuvor, aber mit einem alphabetischen Index. 

So eine Null ist, wie wir definiert haben. Also dann nehmen Null plus zwei, mod 26, das ist zwei, mod 26, das gibt uns zwei. Und auch im Hinblick auf die einen alphabetischen Index, C ist der dritte Buchstabe in der Alphabet, das wäre so entsprechen auf einen alphabetischen Index von zwei Kindern. So scheint es, dass die Verwendung von alphabetischen Index in diesem Fall tatsächlich gibt uns das richtige Ergebnis. 

So, jetzt wollen wir prüfen, sehen, ob die Gleichung funktioniert mit einem alphabetischen Index. Y im alphabetischen Index 24 als die zweitletzten Buchstaben im Alphabet. Also dann 24 plus unsere Schlüssel von zwei gibt uns 26. 26 mod 26 gibt uns 0, die, zum Glück für uns ist der alphabetischen Index für A. Hoffentlich ist das Beweis genug, dass die alphabetische Index-Methode funktioniert. Wenn nicht, fühlen sich frei, zu versuchen, einige Beispiele für Ihre eigenen. 

Um rund um die richtig wickeln Alphabet und wenden Sie die Caesar-Gleichung, dann wissen wir, dass wir brauchen, um befassen sich mit alphabetischen Indizes. Aber wir beginnen mit ASCII Werte, und nur dann konvertiere wir dann zu die alphabetischen Index. Von dort aus zu drucken, um, müssen wir mit den ASCII-Werten wieder zu beschäftigen. Also müssen wir, um herauszufinden, wie man gehen von ASCII nach alphabetisch und alphabetisch nach ASCII. 

Also habe ich überlasse es Ihnen, um herauszufinden, das Muster zwischen einem Zeichen und seine alphabetisch Index und dessen ASCII-Wert. Nun, denken Sie daran, dass, obwohl In dieser Tabelle sind direkt auf der Folie zeigt die Großbuchstaben, wir auch haben zu prüfen, ob oder nicht ein anderes Muster gilt für die Kleinbuchstaben. 

So, jetzt haben wir herausgefunden haben, wie ein einzelnes Zeichen zu verschieben, dann alles, was wir tun müssen, ist Skala, bis über den gesamten Text-zu gehen. So ist der Text-String. Zum Glück für uns, ist ein String wirklich nur ein Array von Zeichen, so um jedes Zeichen zuzugreifen einer Zeichenkette, alle müssen Sie tun ist Array-Notation zu verwenden. Sagen, dass ich eine Variable vom Typ haben Zeichenfolge mit der Bezeichnung "text =" Dies ist CS50. " 

Nun, dann, um zu Zugriff auf jedes Zeichen, Alle habe ich zu tun mit der variable Text ist zu sagen, gut, Text auf dem Index Null, dass entspricht Kapital T. Text im Index ein entspricht dem unteren Fall h. Eine weitere nützliche Funktion ist die String-Länge-Funktion. So vorbei in einem String diese Funktion wird wieder eine ganze Zahl, die Länge dieser Zeichenkette. 

Nun, da wir sprachen über Alle diese verschiedenen Elemente, wir setzen sie wieder zusammen. So kehren Sie entweder mein Pseudo-Code Code oder Ihre Pseudo-Code und gehen Sie durch und stellen Sie sicher, dass Sie wissen, wie jede einzelne Sache zu tun. Den Schlüssel zu bekommen argc und argv verwenden, den Schlüssel in eine ganze Zahl drehen, ein i, woraufhin für Klartext, getstring und dann iteriert über jedes Zeichen in die Klartextkette, Erhaltung der Fall jedes Zeichens und das Zeichen durch den Schlüssel Verschiebung, sicherzustellen, dass Sie um das Alphabet Einwickeln, schließlich die Druckausgabe des chiffrierten Text. Mein Name ist Amila, und das war Caesar. 