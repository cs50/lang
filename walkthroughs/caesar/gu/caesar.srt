1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> AMILA: માતાનો સીઝર હલ કરીએ.

3
00:00:02,270 --> 00:00:06,110
સીઝર, અમે વપરાશકર્તા માટે પરવાનગી આપે છે
એક ગુપ્ત સંદેશ બેવડી.

4
00:00:06,110 --> 00:00:09,780
તેથી આપણે જમણી ડાઇવ દો અને જુઓ
આ સમસ્યા માટે અમારા માટે-DOS છે.

5
00:00:09,780 --> 00:00:12,210
તેથી પ્રથમ, અમે વપરાશકર્તા પાસેથી કી વિચાર.

6
00:00:12,210 --> 00:00:15,210
પછી અમે સાદી વિચાર
તેઓ બેવડી કરવા માંગો છો.

7
00:00:15,210 --> 00:00:21,380
તે પછી, અમે તે તેમના માટે ચિહ્નિત,
અને છેલ્લે અમે તેમની સાઇફર ટેક્સટ છાપો.

8
00:00:21,380 --> 00:00:23,600
>> તેથી આપણે એક ઉદાહરણ સાથે શરૂ કરો.

9
00:00:23,600 --> 00:00:26,920
તમે બેવડી કરવા માગે છે
બે એક કી સાથે સમગ્ર મૂળાક્ષર.

10
00:00:26,920 --> 00:00:31,360
વેલ, તમારા સમગ્ર મૂળાક્ષર કરશે
માત્ર અક્ષરો ખસેડવામાં કરી શકાય છે.

11
00:00:31,360 --> 00:00:37,060
તેથી એક સી, બી બેવડી કરશે
ડી, સી ઇ, તેથી પર અને તેથી આગળ,

12
00:00:37,060 --> 00:00:42,470
ત્યાં સુધી તમે X, કે જે z માટે એનકોડ મેળવવા
અથવા ઝેડ, જ્યાં તમે છો તેના પર આધાર રાખીને.

13
00:00:42,470 --> 00:00:47,445
પછી વાય પછી બધા માર્ગ પાળી કરશે,
મૂળાક્ષર આસપાસ લપેટી એ વિચાર,

14
00:00:47,445 --> 00:00:53,256
અને પછી છેવટે છેલ્લા અક્ષર
મૂળાક્ષર, ઝેડ, ઝેડ, બી બેવડી કરશે

15
00:00:53,256 --> 00:00:54,660
>> તમે મળી છે?

16
00:00:54,660 --> 00:00:56,380
કેટલાક ઉદાહરણો જુઓ.

17
00:00:56,380 --> 00:01:00,540
અહીં પ્રથમ ઉદાહરણ ખૂબ સમાન છે
શું અમે ફક્ત ઉપર વર્ણવ્યું છે.

18
00:01:00,540 --> 00:01:05,560
તેથી જો હું અમુક વિભાગ બેવડી
મૂળાક્ષર, એ એલ મારફતે, બે કી દ્વારા,

19
00:01:05,560 --> 00:01:09,760
પછી હું માત્ર મારા સમગ્ર વિચાર
મૂળાક્ષર બે અક્ષરો ખસેડવામાં આવ્યા હતા.

20
00:01:09,760 --> 00:01:12,230
>> પછી, મારી આગામી ઉદાહરણમાં,
કી હજુ બે છે,

21
00:01:12,230 --> 00:01:15,080
તેથી તમે હજુ પણ ખબર હોવી જોઇએ
જે અક્ષરો અપેક્ષા છે.

22
00:01:15,080 --> 00:01:16,400
પરંતુ અહીં તેને એક શબ્દસમૂહ છે.

23
00:01:16,400 --> 00:01:18,100
આ CS50 છે.

24
00:01:18,100 --> 00:01:21,090
તેથી જો તમે કે હું નોટિસ પડશે
મારા પત્રો કિસ્સામાં સાચવવા,

25
00:01:21,090 --> 00:01:25,600
જેથી કોઇ પણ અપર કેસ અક્ષરો પણ છે
સાઇફર ટેક્સટ માં અપર કેસ અક્ષરો.

26
00:01:25,600 --> 00:01:27,800
અને કોઇ પણ નાના
સાદી ભાષા માં અક્ષરો

27
00:01:27,800 --> 00:01:30,640
પણ નાના હોય છે
સાઇફર ટેક્સટ માં અક્ષરો.

28
00:01:30,640 --> 00:01:34,020
પરંતુ હું અક્ષરો રાખો
અને કોઈપણ ઉદ્ગારવાચક ગુણ

29
00:01:34,020 --> 00:01:37,610
અથવા કોઈપણ અન્ય વિરામચિહ્ન જ.

30
00:01:37,610 --> 00:01:40,360
>> તેથી હવે અમે એક અર્થમાં છે કે
કેવી રીતે કાર્યક્રમ કામ માટે,

31
00:01:40,360 --> 00:01:43,890
ચલાવવા કેટલાક વધુ જાઓ મફત લાગે
તમારા પોતાના ઉદાહરણો, તમે ઈચ્છો છો.

32
00:01:43,890 --> 00:01:47,072
માતાનો મેળવવામાં સાથે શરૂ કરીએ
વપરાશકર્તા કી.

33
00:01:47,072 --> 00:01:48,780
પરંપરાગત રીતે, સાથે
અન્ય સમસ્યા છે, અમે કરેલા

34
00:01:48,780 --> 00:01:51,450
મેળવવામાં કરવા માટે ટેવાયેલું કરવામાં
કે જે કોઈપણ નંબરો અમે

35
00:01:51,450 --> 00:01:54,710
વપરાશકર્તાને પૂછવાની દ્વારા જરૂર
કાર્ય GetInt સાથે.

36
00:01:54,710 --> 00:01:58,850
પરંતુ આ સમયે અમે ખરેખર જઈ રહ્યાં છો
આદેશ વાક્ય દલીલ વાપરવા માટે

37
00:01:58,850 --> 00:02:01,760
અને એક નવી કાર્ય atoi કહેવાય.

38
00:02:01,760 --> 00:02:05,130
>> તમે મુખ્ય ચલાવવા જ્યારે
સી કાર્યક્રમ, પછી તે

39
00:02:05,130 --> 00:02:08,500
બે parameters-- લે
પૂર્ણાંક argc, કે જે

40
00:02:08,500 --> 00:02:11,670
દલીલો સંખ્યા છે
માં પસાર, અને પછી

41
00:02:11,670 --> 00:02:15,920
argv, શબ્દમાળાઓ ઝાકઝમાળ જેમાં
દલીલો બધા યાદી

42
00:02:15,920 --> 00:02:16,740
પસાર કર્યો હતો.

43
00:02:16,740 --> 00:02:19,740
તમે સ્પષ્ટપણે નથી
આ ચલો જાહેર કરવા.

44
00:02:19,740 --> 00:02:22,700
તેઓ માટે ગણતરી કરી રહ્યાં છો
કમ્પાઇલર દ્વારા તમે.

45
00:02:22,700 --> 00:02:28,160
આ માટે યોગ્ય વપરાશ હશે
argc આ કિસ્સામાં બે પ્રયત્ન કરવા માટે,

46
00:02:28,160 --> 00:02:32,630
વપરાશકર્તા પાસ કરવાની હોય છે કારણ કે
કાર્યક્રમ માટે કૉલ, ./caesar,

47
00:02:32,630 --> 00:02:35,570
અને પછી કી,
ગમે નંબર તેઓ માંગો છો.

48
00:02:35,570 --> 00:02:39,920
તેથી અર્થ એ થાય કે argc હોવા જ જોઈએ બે
સીઝર એક માન્ય ઉપયોગ માટે ક્રમમાં

49
00:02:39,920 --> 00:02:41,680
ચલાવવામાં કરી શકાય છે.

50
00:02:41,680 --> 00:02:43,590
>> તેથી આપણે એક ઉદાહરણ જોવા દો.

51
00:02:43,590 --> 00:02:47,760
હું પહેલેથી જ તેવા પરચૂરણ ખર્ચ કર્યો કહે છે અને
એક કાર્યક્રમ BlastOff કહેવાય સંકલિત.

52
00:02:47,760 --> 00:02:52,670
તેથી જો હું આદેશ વાક્ય ચાલી હતી
./blastoff ટીમ રોકેટ, સારી રીતે, તે પછી,

53
00:02:52,670 --> 00:02:57,750
argc ત્રણ હશે કારણ કે હું
ત્રણ અલગ દલીલો માં પસાર.

54
00:02:57,750 --> 00:02:59,830
પછી argv આના જેવો દેખાશે.

55
00:02:59,830 --> 00:03:03,750
તે એક એરે છે, અને તે કરશે
ત્રણ શબ્દમાળાઓ દરેક સમાવે છે.

56
00:03:03,750 --> 00:03:09,640
પ્રથમ ઇન્ડેક્સ ટીમ ./blastoff
આગામી, અને છેલ્લા રોકેટ.

57
00:03:09,640 --> 00:03:11,610
>> એક સેકન્ડ માટે એરે વિશે વાત કરો.

58
00:03:11,610 --> 00:03:15,560
એરે માહિતી માળખાં કે ધરાવે છે
એક જ પ્રકારના બહુવિધ મૂલ્યો.

59
00:03:15,560 --> 00:03:19,980
જ્યારે અમે આ હાથમાં આવી શકે છે
પૂર્ણાંકો અથવા શબ્દમાળાઓ યાદી છે.

60
00:03:19,980 --> 00:03:23,030
જસ્ટ યાદ રાખો કે તેઓ પાસે
એક જ પ્રકારના હોય છે.

61
00:03:23,030 --> 00:03:25,310
કોમ્પ્યુટર વિજ્ઞાન, અમે
શૂન્ય માંથી ગણતરી પ્રેમ,

62
00:03:25,310 --> 00:03:29,260
તેથી યાદ રાખો કે એરે
પણ શૂન્ય અનુક્રમિત છે.

63
00:03:29,260 --> 00:03:34,360
મારા એરે પ્રથમ તત્વ તેથી
ઇન્ડેક્સ શૂન્ય પર હોઈ ચાલે છે.

64
00:03:34,360 --> 00:03:37,580
તેથી આ કિસ્સામાં, જ્યારે મારી પાસે
લંબાઈ ચાર ઝાકઝમાળ,

65
00:03:37,580 --> 00:03:41,350
પછી છેલ્લા ઇન્ડેક્સ
મારા એરે છેલ્લા તત્વ

66
00:03:41,350 --> 00:03:44,970
ખરેખર હોઈ ચાલે છે
ઇન્ડેક્સ ત્રણ, ચાર છે.

67
00:03:44,970 --> 00:03:48,880
કારણ કે યાદ રાખો, આપણે
શૂન્ય અંતે ગણતરી શરૂ કરો.

68
00:03:48,880 --> 00:03:52,530
>> અહિંયા તમે કેવી રીતે એક ઉદાહરણ છે
તમારા પોતાના ઝાકઝમાળ બનાવી શકે છે.

69
00:03:52,530 --> 00:03:56,440
તેથી હું સંગ્રહ કરવા માગે છે મારા
ત્રણ પ્રિય કૂતરો નામો.

70
00:03:56,440 --> 00:03:59,030
પછી હું શબ્દમાળાઓ ઝાકઝમાળ રચના કરશે.

71
00:03:59,030 --> 00:04:04,450
તેથી હું પ્રકાર, શબ્દમાળા જાહેર કરશે, અને
પછી એરે નામ મૂકી, કૂતરાં,

72
00:04:04,450 --> 00:04:06,450
અને પછી તે ચોરસ
કૌંસ માપ મૂકી

73
00:04:06,450 --> 00:04:09,260
આ કિસ્સામાં, ત્રણ એરે છે.

74
00:04:09,260 --> 00:04:12,690
>> તેથી મારી પ્રથમ પ્રવેશ રહ્યું છે
ઇન્ડેક્સ શૂન્ય પર શ્વાન હોઇ શકે છે,

75
00:04:12,690 --> 00:04:14,750
અને તે મિલો હોઈ ચાલે છે.

76
00:04:14,750 --> 00:04:17,850
પછી ઇન્ડેક્સ એક શ્વાન
ગૂફી હોઈ ચાલે છે,

77
00:04:17,850 --> 00:04:23,060
પ્રિયતમ Mochi, અને પછી છેલ્લા
પ્રવેશ, ઇન્ડેક્સ બે ત્રીજા પ્રવેશ,

78
00:04:23,060 --> 00:04:26,130
સુંદર, મીઠી Elphie હોઈ ચાલે છે.

79
00:04:26,130 --> 00:04:28,610
તમે કે બંધારણમાં નોટિસ પડશે
આ એરે ભરવા માટે

80
00:04:28,610 --> 00:04:32,150
જેમ તમે કેવી રીતે કદાચ ખૂબ
અન્ય કોઇ વેરિયેબલ જ્યાં જાહેર

81
00:04:32,150 --> 00:04:36,307
તમે ચલ નામ દ્વારા અનુસરવામાં છે
કિંમત છે કે જે તમે તેને સંગ્રહિત કરવા માંગો છો.

82
00:04:36,307 --> 00:04:38,140
માં માત્ર એટલો જ તફાવત
આ કિસ્સામાં કે જે તમે છે

83
00:04:38,140 --> 00:04:42,700
ઇન્ડેક્સ પુટ યાદ છે
ચોરસ કૌંસ માં કિંમત છે.

84
00:04:42,700 --> 00:04:46,420
અને ત્યાં અમે અમારા હોય છે
ત્રણ મનપસંદ શ્વાન.

85
00:04:46,420 --> 00:04:48,780
>> પરંતુ અરે, તે સમય છે
પાછા સીઝર મેળવવા માટે.

86
00:04:48,780 --> 00:04:52,910
યાદ રાખો માટે કે યોગ્ય વપરાશ
વપરાશકર્તા માત્ર પસાર કરી રહ્યું છે

87
00:04:52,910 --> 00:04:57,430
કાર્યક્રમ ./caesar નામ છે, પરંતુ
પણ કી છે કે જે તેઓ પાળી કરવા માંગો છો

88
00:04:57,430 --> 00:04:58,850
દ્વારા તેમના સાદી ભાષા.

89
00:04:58,850 --> 00:05:01,540
તેથી અર્થ એ થાય કે argc બે હોવા જ જોઈએ.

90
00:05:01,540 --> 00:05:07,580
તેઓ two-- કોઈ વધુ પાસ કરવી જરૂરી છે કોઈ
બે આદેશ વાક્ય દલીલો કરતાં ઓછો હોય છે.

91
00:05:07,580 --> 00:05:09,050
>> હવે, argv વિશે શું?

92
00:05:09,050 --> 00:05:12,880
વેલ, અમે પહેલાથી જ ખબર છે કે
અરે, લંબાઈ બે હોઈ ચાલે છે

93
00:05:12,880 --> 00:05:15,270
પરંતુ શું દરેક તત્વ માં સમાયેલ છે?

94
00:05:15,270 --> 00:05:19,330
વેલ, પ્રથમ તત્વ
./caesar હોઈ ચાલે છે,

95
00:05:19,330 --> 00:05:24,190
અને પછી આગામી તત્વ રહ્યું છે
કી છે કે જે વપરાશકર્તા ટાઇપ છે.

96
00:05:24,190 --> 00:05:27,480
હવે, જો તેઓ તે યોગ્ય રીતે ઉપયોગ
સીઝર વપરાશ માટે,

97
00:05:27,480 --> 00:05:29,350
પછી તેઓ એક નંબર લખી રહ્યા છીએ.

98
00:05:29,350 --> 00:05:33,260
પણ પાત્ર છતાં
તેઓ પ્રકારની છે કે જે નંબર છે,

99
00:05:33,260 --> 00:05:35,790
તે માહિતી પ્રકાર શબ્દમાળા છે.

100
00:05:35,790 --> 00:05:40,390
>> તેથી અમે કેવી રીતે કન્વર્ટ કરો કે
પૂર્ણાંક માટે શબ્દમાળા?

101
00:05:40,390 --> 00:05:46,680
તેથી કહે છે કે હું NUM હોય છે, એક શબ્દમાળા,
શબ્દમાળા 50 સમાવતી.

102
00:05:46,680 --> 00:05:49,000
હું કન્વર્ટ કરવા માંગો છો,
પૂર્ણાંક માટે, પછી હું ફક્ત

103
00:05:49,000 --> 00:05:53,340
નવી ચલ જાહેર, એક
હું પૂર્ણાંક, atoi કહે છે.

104
00:05:53,340 --> 00:06:01,160
હું મારા શબ્દમાળા ચલ પસાર કરવા માટે, સંખ્યા, અને
પછી હું પછી નંબર 50 ધરાવશે.

105
00:06:01,160 --> 00:06:04,350
બનાવો માણસ ચકાસવા માટે ખાતરી કરો
atoi કાર્ય માટે પાનાંઓ

106
00:06:04,350 --> 00:06:07,990
જે પુસ્તકાલય તે ચકાસવા માટે
, તેમજ શું તે કિંમત તરીકે

107
00:06:07,990 --> 00:06:14,550
જો શબ્દમાળા પસાર આપશે
તમામ નંબરો સમાવી નથી.

108
00:06:14,550 --> 00:06:16,950
>> તેથી હવે અમે મેળવેલ કર્યું
કી, આગામી પગલું

109
00:06:16,950 --> 00:06:19,430
વપરાશકર્તા માંથી સાદી વિચાર છે.

110
00:06:19,430 --> 00:06:21,170
હવે, આ રહ્યું છે
ઓછા જટિલ હોઈ

111
00:06:21,170 --> 00:06:23,410
આસપાસ શોધખોળ કરતાં
આદેશ વાક્ય દલીલો.

112
00:06:23,410 --> 00:06:26,190
બધા અમે હોય કોલ છે
GetString કાર્ય

113
00:06:26,190 --> 00:06:29,660
આપી વપરાશકર્તા પૂછવા
અમને શબ્દમાળા, પરંતુ યાદ રાખો

114
00:06:29,660 --> 00:06:34,090
કેવી રીતે તરફથી તપાસો અમે
તે માટે વપરાશકર્તા પૂછવા માંગો છો શકે છે.

115
00:06:34,090 --> 00:06:36,420
>> હવે અમે આવવા
problem-- હૃદય

116
00:06:36,420 --> 00:06:38,860
કેવી રીતે સાદી ભાષા ચિહ્નિત કરો.

117
00:06:38,860 --> 00:06:42,830
વેલ, પ્રથમ, ચાલો એ વિષે વધારે જોઈએ
એક સમયે એક અક્ષર ચિહ્નિત કરો,

118
00:06:42,830 --> 00:06:47,370
અને પછી અમે કેવી રીતે સંબોધવા પડશે
સમગ્ર સાદી ભાષા ઉપર ફરી વળવું.

119
00:06:47,370 --> 00:06:50,440
હું કેટલાક સ્યુડોકોડનો તેવા પરચૂરણ ખર્ચ કર્યો
સીઝર સમસ્યા છે.

120
00:06:50,440 --> 00:06:52,310
હું તમને પ્રોત્સાહિત
તમારા પોતાના તેમજ લખો.

121
00:06:52,310 --> 00:06:55,900
તે સમાન ન જોવા શકે છે
ખાણ, અને તે ઠીક છે, પરંતુ લાંબા સમય સુધી છે

122
00:06:55,900 --> 00:06:58,640
સામાન્ય વિચાર તરીકે જ છે.

123
00:06:58,640 --> 00:07:00,780
>> પ્રથમ ત્રણ પગલાંઓ
અમે પહેલાથી જ કર્યું છે.

124
00:07:00,780 --> 00:07:03,100
અમે કી મેળવેલ કર્યું
આદેશ વાક્ય દલીલ,

125
00:07:03,100 --> 00:07:05,510
અમે તે કી ચાલુ કરી
પૂર્ણાંક માં, અને અમે કર્યું

126
00:07:05,510 --> 00:07:09,320
સાદી ભાષા માટે વપરાશકર્તા પૂછવામાં
તેઓ ચિહ્નિત કરવા માંગો છો.

127
00:07:09,320 --> 00:07:12,420
તેથી પછી આગામી મોટી ચંકને
દરેક અક્ષર માટે છે

128
00:07:12,420 --> 00:07:15,070
સાદી શબ્દમાળા માં,
તે આલ્ફાબેટીક છે, તો

129
00:07:15,070 --> 00:07:17,750
અમે સાચવવા માંગો
તેના કેસ અને તે પાળી.

130
00:07:17,750 --> 00:07:20,900
દ્વારા કેસ સાચવવા, હું શું
અર્થ છે બધા અપર કેસ કે

131
00:07:20,900 --> 00:07:23,580
અક્ષરો ઉપલા રહેવું જોઈએ
કેસ અને બધા લોઅરકેસ અક્ષરો

132
00:07:23,580 --> 00:07:25,640
લોઅરકેસ રહેવું જોઈએ.

133
00:07:25,640 --> 00:07:29,110
તેથી પછી અમે તે પાળી,
પછી અમે સાઇફર ટેક્સટ છાપો.

134
00:07:29,110 --> 00:07:33,100
>> અહીં ત્રણ વિધેયો કે જે જતા હોય છે
આ સમસ્યા માટે હાથમાં આવે છે.

135
00:07:33,100 --> 00:07:38,010
ઉપર જ્યારે હું આપ્યો યાદ રાખો
આ સ્થળાંતર માટે, ઉદાહરણ તરીકે CS50 છે?

136
00:07:38,010 --> 00:07:41,800
યાદ રાખો કે 50 અને
આશ્ચર્યચિહ્ન પાળી ન હતી?

137
00:07:41,800 --> 00:07:45,680
તેથી અમે શું આપણે કેવી રીતે કહી શકે
એક અક્ષર નથી પાળી અથવા કરવાની જરૂર છે?

138
00:07:45,680 --> 00:07:48,650
વેલ, જો "આલ્ફા છે,"
તમે તેને એક અક્ષર પસાર કરવા માટે,

139
00:07:48,650 --> 00:07:54,850
જો કે પાત્ર સાચું આપશે
એક પત્ર અને ખોટા અન્યથા છે.

140
00:07:54,850 --> 00:07:56,870
સાથે તમને મદદ કરવા માટે
સાચવીને કેપિટલાઈઝેશન

141
00:07:56,870 --> 00:07:59,750
કાર્યો "છે
ઉપલા "અને" નીચા છે. "

142
00:07:59,750 --> 00:08:03,350
>> આ બે કાર્યો પણ લેવા
ઇનપુટ તરીકે એક પાત્ર

143
00:08:03,350 --> 00:08:06,580
અને તમે બુલિયન પાછા,
સાચું કે ખોટું ક્યાં

144
00:08:06,580 --> 00:08:11,280
કે શું પાત્ર પર આધાર રાખીને
અપર કેસ અથવા નીચલા કેસ છે.

145
00:08:11,280 --> 00:08:14,610
કારણ કે "ઉપર" અને "છે
નીચલા "બુલિયન વિધેયો છે,

146
00:08:14,610 --> 00:08:18,660
જેનો અર્થ થાય છે કે તેઓ તમને બુલિયન પાછા,
તમે તમારા શરતો આ ઉપયોગ કરી શકો છો.

147
00:08:18,660 --> 00:08:23,490
તેથી અહીં કોડ સ્નીપેટ છે કે માત્ર
એક પત્ર છાપે જો તે અપર કેસ છે.

148
00:08:23,490 --> 00:08:27,790
તેથી હું મારા પાત્ર જાહેર કર્યું
પત્ર અપર કેસ ઝેડ શકાય

149
00:08:27,790 --> 00:08:33,440
અને પછી જો વળતર "ઉચ્ચ" છે
સાચું હોય, તો પછી હું કે જે અક્ષર છાપો.

150
00:08:33,440 --> 00:08:38,200
>> અમારી સરળ ઉદાહરણ પર પાછા જવાનું
બે એક કી દ્વારા મૂળાક્ષરમાંથી સ્થળાંતર,

151
00:08:38,200 --> 00:08:41,049
અમે કેવી રીતે વાસ્તવમાં તે કામ કરવા માટે મેળવી શકું?

152
00:08:41,049 --> 00:08:45,770
વેલ, તે છે કે જે અક્ષરો બહાર વળે
અને પૂર્ણાંકો ખૂબ નજીકથી સંબંધિત છે.

153
00:08:45,770 --> 00:08:48,840
દરેક અક્ષર એક છે
સંકળાયેલ પૂર્ણાંક કિંમત

154
00:08:48,840 --> 00:08:53,260
તે ASCII ચાર્ટ મળી સાથે,
જ્યાં દરેક અક્ષર તે ASCII

155
00:08:53,260 --> 00:08:55,380
કિંમત પ્રદર્શિત થાય છે.

156
00:08:55,380 --> 00:08:58,940
તેથી એક અપર કેસ એક અનુલક્ષે
65 એક ASCII કિંમત

157
00:08:58,940 --> 00:09:02,270
અને એક લોઅરકેસ માટે
97 એક ASCII કિંમત.

158
00:09:02,270 --> 00:09:04,940
>> જોવા માટે મફત લાગે
કોઈપણ ASCII ચાર્ટ ઑનલાઇન

159
00:09:04,940 --> 00:09:07,720
તમારા માટે આ કિંમતો જુઓ.

160
00:09:07,720 --> 00:09:12,096
તેથી તેનો અર્થ શું અમે કરી શકો છો કે જે
, અપર કેસ એક પાત્ર લેવા

161
00:09:12,096 --> 00:09:18,200
તે પૂર્ણાંક બે ઉમેરવા, અને પછી વિચાર
પરિણામે પાત્ર અપર કેસ સી.

162
00:09:18,200 --> 00:09:23,720
કારણ કે 65, તે ASCII છે
મૂડી માટે કિંમત, વત્તા 2,

163
00:09:23,720 --> 00:09:29,960
અમને 67 આપે છે, જે અનુલક્ષે
અપર કેસ સી ના પાત્ર માટે

164
00:09:29,960 --> 00:09:33,480
>> કમનસીબે, વસ્તુઓ
એટલા સરળ રહેશે નહીં.

165
00:09:33,480 --> 00:09:36,980
અમે એક સમીકરણ છે કે
અમે ધ્યાનમાં હોય છે.

166
00:09:36,980 --> 00:09:43,590
અહીં તે છે કે અમને ઇથ સાઇફર ટેક્સટ કહે
પત્ર ઇથ સાદી અનુલક્ષે

167
00:09:43,590 --> 00:09:48,900
પત્ર, વત્તા key--
મોડ્યુલર તે તમામ, 26.

168
00:09:48,900 --> 00:09:50,810
શા માટે બને છે?

169
00:09:50,810 --> 00:09:55,430
માતાનો અમારા ઉદાહરણ પર પાછા જઈએ
પહેલાં, જ્યાં મૂડી, વત્તા 2,

170
00:09:55,430 --> 00:09:57,590
અમને મૂડી સી આપે

171
00:09:57,590 --> 00:10:01,870
>> તેથી સમીકરણ કે અરજી
સ્પષ્ટીકરણ અમને આપે છે,

172
00:10:01,870 --> 00:10:06,660
પછી મૂડી લેવા દો
2 અને 26 દ્વારા ફેરફારની વત્તા.

173
00:10:06,660 --> 00:10:10,730
તેથી મૂડી, જ્યારે હું તેને મૂકી
તે એક અવતરણ ચિહ્નો,

174
00:10:10,730 --> 00:10:14,010
મને તે સારવાર માટે પરવાનગી આપે છે
પૂર્ણાંક છે, કે જેથી માટે પરવાનગી આપે છે

175
00:10:14,010 --> 00:10:17,500
મને તે તેના ASCII કિંમત, 65 પડેલા.

176
00:10:17,500 --> 00:10:20,080
65 વત્તા 2 67 છે.

177
00:10:20,080 --> 00:10:25,210
67 ફેરફારની 26 માટે 15 આપે છે,
પરંતુ તે ખરેખર નથી

178
00:10:25,210 --> 00:10:32,590
અર્થમાં બનાવવા કારણ કે અમે જાણીએ છીએ કે
મૂડી સી ASCII કિંમત 67, 15 છે.

179
00:10:32,590 --> 00:10:35,580
તેથી અમે તે કેવી રીતે સમાધાન નથી?

180
00:10:35,580 --> 00:10:39,840
>> ઠીક છે, અહીં હું posit કરવા માંગો છો
એક મૂળાક્ષર ઇન્ડેક્સ કલ્પના.

181
00:10:39,840 --> 00:10:44,010
તેથી અમે પહેલાથી જ કેવી રીતે વાત કરી છે
દરેક પાત્ર તેના ASCII કિંમત ધરાવે છે,

182
00:10:44,010 --> 00:10:48,810
પરંતુ હું કહું છું, સારી રીતે, ચાલો માંગો છો
દરેક પાત્ર પણ કર્યા વિશે વિચારો

183
00:10:48,810 --> 00:10:52,230
એક મૂળાક્ષર ઇન્ડેક્સ
જ્યાં એક દાખલા તરીકે,

184
00:10:52,230 --> 00:10:58,800
મૂળાક્ષર પ્રથમ અક્ષર તરીકે,
શૂન્ય એક મૂળાક્ષર ઇન્ડેક્સ છે.

185
00:10:58,800 --> 00:11:02,070
તેથી હવે આપણે લાગુ પડે છે
એ જ સમીકરણ પહેલાં,

186
00:11:02,070 --> 00:11:05,040
પરંતુ એક મૂળાક્ષર ઇન્ડેક્સ મદદથી.

187
00:11:05,040 --> 00:11:07,810
>> તેથી શૂન્ય, કારણ કે અમે નિર્ધારિત કર્યું છે.

188
00:11:07,810 --> 00:11:15,640
તેથી પછી શૂન્ય વત્તા બે, મોડ 26 લેતી,
કે બે, મોડ 26 છે, જે અમને બે આપે છે.

189
00:11:15,640 --> 00:11:18,780
અને સાથે સાથે, દ્રષ્ટિએ
એક મૂળાક્ષર ઇન્ડેક્સ

190
00:11:18,780 --> 00:11:23,930
સી ત્રીજો પત્ર છે
મૂળાક્ષર, જેથી અનુલક્ષે કરશે

191
00:11:23,930 --> 00:11:26,290
બે એક મૂળાક્ષર ઇન્ડેક્સ.

192
00:11:26,290 --> 00:11:29,850
તેથી તે મદદથી લાગે છે
આ કિસ્સામાં મૂળાક્ષર ઇન્ડેક્સ

193
00:11:29,850 --> 00:11:32,840
ખરેખર અમને યોગ્ય પરિણામ આપે છે.

194
00:11:32,840 --> 00:11:35,020
>> તેથી હવે ચાલો તપાસ માટે
જો સમીકરણ કરણીઓ જોઈને

195
00:11:35,020 --> 00:11:37,210
એક મૂળાક્ષર ઇન્ડેક્સ સાથે.

196
00:11:37,210 --> 00:11:42,540
વાય માતાનો મૂળાક્ષર ઇન્ડેક્સ 24 છે
મૂળાક્ષર છેલ્લા અક્ષર બની ગઈ છે.

197
00:11:42,540 --> 00:11:46,520
તેથી પછી 24 વત્તા અમારી
બે કી યુએસ 26 આપે છે.

198
00:11:46,520 --> 00:11:54,750
26 ફેરફારની 26 અમને 0 છે, જે માટે નસીબદાર આપે
અમને, એ માટે મૂળાક્ષર ઇન્ડેક્સ છે

199
00:11:54,750 --> 00:11:59,100
તેથી આશા છે કે તે પર્યાપ્ત છે કે સાબિતી છે
મૂળાક્ષર ઇન્ડેક્સ પદ્ધતિ કામ કરે છે.

200
00:11:59,100 --> 00:12:03,180
જો નહિં, તો અજમાવી મફત લાગે
તમારા પોતાના કેટલાક ઉદાહરણો.

201
00:12:03,180 --> 00:12:08,030
>> ક્રમમાં યોગ્ય રીતે આસપાસ લપેટી માટે
મૂળાક્ષર અને સીઝર સમીકરણ લાગુ પડે છે,

202
00:12:08,030 --> 00:12:11,280
પછી આપણે જાણીએ છીએ કે અમે જરૂર
મૂળાક્ષર સૂચકાંક સાથે વ્યવહાર.

203
00:12:11,280 --> 00:12:15,130
પરંતુ અમે તે ASCII સાથે શરૂ
મૂલ્યો, અને માત્ર પછી

204
00:12:15,130 --> 00:12:18,530
અમે પછી કન્વર્ટ કરો
મૂળાક્ષર ઇન્ડેક્સ.

205
00:12:18,530 --> 00:12:23,970
ત્યાંથી, ક્રમમાં છાપવા માટે, અમે જરૂર
ફરીથી તે ASCII કિંમતો સાથે વ્યવહાર.

206
00:12:23,970 --> 00:12:28,350
તેથી અમે કેવી રીતે બહાર આકૃતિ જરૂર છે
વર્ણાનુક્રમે માટે ASCII માંથી જાઓ

207
00:12:28,350 --> 00:12:31,080
અને મૂળાક્ષર પરથી તે ASCII છે.

208
00:12:31,080 --> 00:12:34,910
>> તેથી હું તમને તે છોડી બહાર આકૃતિ
એક અક્ષર વચ્ચે પેટર્ન

209
00:12:34,910 --> 00:12:38,590
અને તેના મૂળાક્ષર
ઇન્ડેક્સ અને તેના ASCII કિંમત.

210
00:12:38,590 --> 00:12:41,530
હવે, યાદ રાખો કે, તેમ છતાં
સ્લાઇડ પર આ ટેબલ અધિકાર

211
00:12:41,530 --> 00:12:45,630
પણ મૂડી અક્ષરો બતાવે છે, અમે
કે નહીં ધ્યાનમાં હોય

212
00:12:45,630 --> 00:12:48,915
એક અલગ પેટર્ન લાગુ પડે છે
નીચેના અક્ષરોની છે.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> તેથી હવે અમે બહાર figured કર્યું છે
એક પાત્ર પાળી માટે ઑનલાઇન કેવી રીતે

215
00:12:55,840 --> 00:13:02,200
પછી બધા અમે હોય પાયે છે કે
અપ સમગ્ર સાદી સમગ્ર જાઓ.

216
00:13:02,200 --> 00:13:04,260
તેથી સાદી એક શબ્દમાળા છે.

217
00:13:04,260 --> 00:13:08,210
અમારા માટે લકી, શબ્દમાળા ખરેખર છે
માત્ર અક્ષરો ઝાકઝમાળ,

218
00:13:08,210 --> 00:13:12,150
જેથી દરેક પાત્ર ઍક્સેસ કરવા માટે
શબ્દમાળા, બધા માટે તમારે શું કરવું છે

219
00:13:12,150 --> 00:13:14,270
એરે નોટેશનમાં ઉપયોગ કરવા માટે છે.

220
00:13:14,270 --> 00:13:20,270
હું લખો ચલ છે કહે છે
શબ્દમાળા તરીકે ઓળખાય "લખાણ = 'આ CS50 છે.'"

221
00:13:20,270 --> 00:13:22,730
>> વેલ, પછી, ક્રમમાં
દરેક અક્ષર ઍક્સેસ,

222
00:13:22,730 --> 00:13:25,880
હું બધા સાથે શું કરવું છે
ચલ લખાણ છે

223
00:13:25,880 --> 00:13:31,660
સારી રીતે કહે છે, ઇન્ડેક્સ શૂન્ય પર લખાણ, કે
ઇન્ડેક્સ મૂડી ટી લખાણ અનુલક્ષે

224
00:13:31,660 --> 00:13:35,100
એક લોઅર કેસ એચ અનુલક્ષે છે.

225
00:13:35,100 --> 00:13:38,110
અન્ય ઉપયોગી કાર્ય છે
શબ્દમાળા લંબાઈ કાર્ય.

226
00:13:38,110 --> 00:13:40,760
તેથી એક શબ્દમાળા માં પસાર
તે કાર્ય આપશે

227
00:13:40,760 --> 00:13:44,610
પૂર્ણાંક, કે જેઓ શબ્દમાળા લંબાઈ.

228
00:13:44,610 --> 00:13:47,060
>> અમે વિશે વાત કરી હવે
આ બધા જુદા જુદા તત્વો,

229
00:13:47,060 --> 00:13:48,540
તેમને મળીને પાછા મૂકી દો.

230
00:13:48,540 --> 00:13:52,210
તેથી ક્યાં તો મારા સ્યુડોકોડનો પર પાછા
કોડ અથવા તમારા સ્યુડોકોડનો

231
00:13:52,210 --> 00:13:55,920
અને મારફતે જાઓ અને ખાતરી કરો કે તમે
કેવી રીતે ખબર દરેક એક વસ્તુ કરવા માટે.

232
00:13:55,920 --> 00:14:01,520
argc અને argv મદદથી કી મેળવી,
પૂર્ણાંક માં કી દેવાનો

233
00:14:01,520 --> 00:14:06,840
હું, સાદી ભાષા માટે પૂછવાની,
GetString, અને પછી વારો

234
00:14:06,840 --> 00:14:09,590
દરેક અક્ષર પર
સાદી શબ્દમાળા

235
00:14:09,590 --> 00:14:14,910
દરેક પાત્ર કેસ સાચવીને
અને કી દ્વારા કે પાત્ર સ્થળાંતર,

236
00:14:14,910 --> 00:14:17,520
ખાતરી કરો કે જે તમે છો
મૂળાક્ષર આસપાસ વીંટાળવવાની

237
00:14:17,520 --> 00:14:20,850
છેલ્લે તે સાઇફર ટેક્સટ છાપવા.

238
00:14:20,850 --> 00:14:25,470
મારું નામ Amila છે, અને આ સીઝર હતો.

239
00:14:25,470 --> 00:14:28,448

