AMILA: માતાનો સીઝર હલ કરીએ. સીઝર, અમે વપરાશકર્તા માટે પરવાનગી આપે છે એક ગુપ્ત સંદેશ બેવડી. તેથી આપણે જમણી ડાઇવ દો અને જુઓ આ સમસ્યા માટે અમારા માટે-DOS છે. તેથી પ્રથમ, અમે વપરાશકર્તા પાસેથી કી વિચાર. પછી અમે સાદી વિચાર તેઓ બેવડી કરવા માંગો છો. તે પછી, અમે તે તેમના માટે ચિહ્નિત, અને છેલ્લે અમે તેમની સાઇફર ટેક્સટ છાપો. 

તેથી આપણે એક ઉદાહરણ સાથે શરૂ કરો. તમે બેવડી કરવા માગે છે બે એક કી સાથે સમગ્ર મૂળાક્ષર. વેલ, તમારા સમગ્ર મૂળાક્ષર કરશે માત્ર અક્ષરો ખસેડવામાં કરી શકાય છે. તેથી એક સી, બી બેવડી કરશે ડી, સી ઇ, તેથી પર અને તેથી આગળ, ત્યાં સુધી તમે X, કે જે z માટે એનકોડ મેળવવા અથવા ઝેડ, જ્યાં તમે છો તેના પર આધાર રાખીને. પછી વાય પછી બધા માર્ગ પાળી કરશે, મૂળાક્ષર આસપાસ લપેટી એ વિચાર, અને પછી છેવટે છેલ્લા અક્ષર મૂળાક્ષર, ઝેડ, ઝેડ, બી બેવડી કરશે 

તમે મળી છે? કેટલાક ઉદાહરણો જુઓ. અહીં પ્રથમ ઉદાહરણ ખૂબ સમાન છે શું અમે ફક્ત ઉપર વર્ણવ્યું છે. તેથી જો હું અમુક વિભાગ બેવડી મૂળાક્ષર, એ એલ મારફતે, બે કી દ્વારા, પછી હું માત્ર મારા સમગ્ર વિચાર મૂળાક્ષર બે અક્ષરો ખસેડવામાં આવ્યા હતા. 

પછી, મારી આગામી ઉદાહરણમાં, કી હજુ બે છે, તેથી તમે હજુ પણ ખબર હોવી જોઇએ જે અક્ષરો અપેક્ષા છે. પરંતુ અહીં તેને એક શબ્દસમૂહ છે. આ CS50 છે. તેથી જો તમે કે હું નોટિસ પડશે મારા પત્રો કિસ્સામાં સાચવવા, જેથી કોઇ પણ અપર કેસ અક્ષરો પણ છે સાઇફર ટેક્સટ માં અપર કેસ અક્ષરો. અને કોઇ પણ નાના સાદી ભાષા માં અક્ષરો પણ નાના હોય છે સાઇફર ટેક્સટ માં અક્ષરો. પરંતુ હું અક્ષરો રાખો અને કોઈપણ ઉદ્ગારવાચક ગુણ અથવા કોઈપણ અન્ય વિરામચિહ્ન જ. 

તેથી હવે અમે એક અર્થમાં છે કે કેવી રીતે કાર્યક્રમ કામ માટે, ચલાવવા કેટલાક વધુ જાઓ મફત લાગે તમારા પોતાના ઉદાહરણો, તમે ઈચ્છો છો. માતાનો મેળવવામાં સાથે શરૂ કરીએ વપરાશકર્તા કી. પરંપરાગત રીતે, સાથે અન્ય સમસ્યા છે, અમે કરેલા મેળવવામાં કરવા માટે ટેવાયેલું કરવામાં કે જે કોઈપણ નંબરો અમે વપરાશકર્તાને પૂછવાની દ્વારા જરૂર કાર્ય GetInt સાથે. પરંતુ આ સમયે અમે ખરેખર જઈ રહ્યાં છો આદેશ વાક્ય દલીલ વાપરવા માટે અને એક નવી કાર્ય atoi કહેવાય. 

તમે મુખ્ય ચલાવવા જ્યારે સી કાર્યક્રમ, પછી તે બે parameters-- લે પૂર્ણાંક argc, કે જે દલીલો સંખ્યા છે માં પસાર, અને પછી argv, શબ્દમાળાઓ ઝાકઝમાળ જેમાં દલીલો બધા યાદી પસાર કર્યો હતો. તમે સ્પષ્ટપણે નથી આ ચલો જાહેર કરવા. તેઓ માટે ગણતરી કરી રહ્યાં છો કમ્પાઇલર દ્વારા તમે. આ માટે યોગ્ય વપરાશ હશે argc આ કિસ્સામાં બે પ્રયત્ન કરવા માટે, વપરાશકર્તા પાસ કરવાની હોય છે કારણ કે કાર્યક્રમ માટે કૉલ, ./caesar, અને પછી કી, ગમે નંબર તેઓ માંગો છો. તેથી અર્થ એ થાય કે argc હોવા જ જોઈએ બે સીઝર એક માન્ય ઉપયોગ માટે ક્રમમાં ચલાવવામાં કરી શકાય છે. 

તેથી આપણે એક ઉદાહરણ જોવા દો. હું પહેલેથી જ તેવા પરચૂરણ ખર્ચ કર્યો કહે છે અને એક કાર્યક્રમ BlastOff કહેવાય સંકલિત. તેથી જો હું આદેશ વાક્ય ચાલી હતી ./blastoff ટીમ રોકેટ, સારી રીતે, તે પછી, argc ત્રણ હશે કારણ કે હું ત્રણ અલગ દલીલો માં પસાર. પછી argv આના જેવો દેખાશે. તે એક એરે છે, અને તે કરશે ત્રણ શબ્દમાળાઓ દરેક સમાવે છે. પ્રથમ ઇન્ડેક્સ ટીમ ./blastoff આગામી, અને છેલ્લા રોકેટ. 

એક સેકન્ડ માટે એરે વિશે વાત કરો. એરે માહિતી માળખાં કે ધરાવે છે એક જ પ્રકારના બહુવિધ મૂલ્યો. જ્યારે અમે આ હાથમાં આવી શકે છે પૂર્ણાંકો અથવા શબ્દમાળાઓ યાદી છે. જસ્ટ યાદ રાખો કે તેઓ પાસે એક જ પ્રકારના હોય છે. કોમ્પ્યુટર વિજ્ઞાન, અમે શૂન્ય માંથી ગણતરી પ્રેમ, તેથી યાદ રાખો કે એરે પણ શૂન્ય અનુક્રમિત છે. મારા એરે પ્રથમ તત્વ તેથી ઇન્ડેક્સ શૂન્ય પર હોઈ ચાલે છે. તેથી આ કિસ્સામાં, જ્યારે મારી પાસે લંબાઈ ચાર ઝાકઝમાળ, પછી છેલ્લા ઇન્ડેક્સ મારા એરે છેલ્લા તત્વ ખરેખર હોઈ ચાલે છે ઇન્ડેક્સ ત્રણ, ચાર છે. કારણ કે યાદ રાખો, આપણે શૂન્ય અંતે ગણતરી શરૂ કરો. 

અહિંયા તમે કેવી રીતે એક ઉદાહરણ છે તમારા પોતાના ઝાકઝમાળ બનાવી શકે છે. તેથી હું સંગ્રહ કરવા માગે છે મારા ત્રણ પ્રિય કૂતરો નામો. પછી હું શબ્દમાળાઓ ઝાકઝમાળ રચના કરશે. તેથી હું પ્રકાર, શબ્દમાળા જાહેર કરશે, અને પછી એરે નામ મૂકી, કૂતરાં, અને પછી તે ચોરસ કૌંસ માપ મૂકી આ કિસ્સામાં, ત્રણ એરે છે. 

તેથી મારી પ્રથમ પ્રવેશ રહ્યું છે ઇન્ડેક્સ શૂન્ય પર શ્વાન હોઇ શકે છે, અને તે મિલો હોઈ ચાલે છે. પછી ઇન્ડેક્સ એક શ્વાન ગૂફી હોઈ ચાલે છે, પ્રિયતમ Mochi, અને પછી છેલ્લા પ્રવેશ, ઇન્ડેક્સ બે ત્રીજા પ્રવેશ, સુંદર, મીઠી Elphie હોઈ ચાલે છે. તમે કે બંધારણમાં નોટિસ પડશે આ એરે ભરવા માટે જેમ તમે કેવી રીતે કદાચ ખૂબ અન્ય કોઇ વેરિયેબલ જ્યાં જાહેર તમે ચલ નામ દ્વારા અનુસરવામાં છે કિંમત છે કે જે તમે તેને સંગ્રહિત કરવા માંગો છો. માં માત્ર એટલો જ તફાવત આ કિસ્સામાં કે જે તમે છે ઇન્ડેક્સ પુટ યાદ છે ચોરસ કૌંસ માં કિંમત છે. અને ત્યાં અમે અમારા હોય છે ત્રણ મનપસંદ શ્વાન. 

પરંતુ અરે, તે સમય છે પાછા સીઝર મેળવવા માટે. યાદ રાખો માટે કે યોગ્ય વપરાશ વપરાશકર્તા માત્ર પસાર કરી રહ્યું છે કાર્યક્રમ ./caesar નામ છે, પરંતુ પણ કી છે કે જે તેઓ પાળી કરવા માંગો છો દ્વારા તેમના સાદી ભાષા. તેથી અર્થ એ થાય કે argc બે હોવા જ જોઈએ. તેઓ two-- કોઈ વધુ પાસ કરવી જરૂરી છે કોઈ બે આદેશ વાક્ય દલીલો કરતાં ઓછો હોય છે. 

હવે, argv વિશે શું? વેલ, અમે પહેલાથી જ ખબર છે કે અરે, લંબાઈ બે હોઈ ચાલે છે પરંતુ શું દરેક તત્વ માં સમાયેલ છે? વેલ, પ્રથમ તત્વ ./caesar હોઈ ચાલે છે, અને પછી આગામી તત્વ રહ્યું છે કી છે કે જે વપરાશકર્તા ટાઇપ છે. હવે, જો તેઓ તે યોગ્ય રીતે ઉપયોગ સીઝર વપરાશ માટે, પછી તેઓ એક નંબર લખી રહ્યા છીએ. પણ પાત્ર છતાં તેઓ પ્રકારની છે કે જે નંબર છે, તે માહિતી પ્રકાર શબ્દમાળા છે. 

તેથી અમે કેવી રીતે કન્વર્ટ કરો કે પૂર્ણાંક માટે શબ્દમાળા? તેથી કહે છે કે હું NUM હોય છે, એક શબ્દમાળા, શબ્દમાળા 50 સમાવતી. હું કન્વર્ટ કરવા માંગો છો, પૂર્ણાંક માટે, પછી હું ફક્ત નવી ચલ જાહેર, એક હું પૂર્ણાંક, atoi કહે છે. હું મારા શબ્દમાળા ચલ પસાર કરવા માટે, સંખ્યા, અને પછી હું પછી નંબર 50 ધરાવશે. બનાવો માણસ ચકાસવા માટે ખાતરી કરો atoi કાર્ય માટે પાનાંઓ જે પુસ્તકાલય તે ચકાસવા માટે , તેમજ શું તે કિંમત તરીકે જો શબ્દમાળા પસાર આપશે તમામ નંબરો સમાવી નથી. 

તેથી હવે અમે મેળવેલ કર્યું કી, આગામી પગલું વપરાશકર્તા માંથી સાદી વિચાર છે. હવે, આ રહ્યું છે ઓછા જટિલ હોઈ આસપાસ શોધખોળ કરતાં આદેશ વાક્ય દલીલો. બધા અમે હોય કોલ છે GetString કાર્ય આપી વપરાશકર્તા પૂછવા અમને શબ્દમાળા, પરંતુ યાદ રાખો કેવી રીતે તરફથી તપાસો અમે તે માટે વપરાશકર્તા પૂછવા માંગો છો શકે છે. 

હવે અમે આવવા problem-- હૃદય કેવી રીતે સાદી ભાષા ચિહ્નિત કરો. વેલ, પ્રથમ, ચાલો એ વિષે વધારે જોઈએ એક સમયે એક અક્ષર ચિહ્નિત કરો, અને પછી અમે કેવી રીતે સંબોધવા પડશે સમગ્ર સાદી ભાષા ઉપર ફરી વળવું. હું કેટલાક સ્યુડોકોડનો તેવા પરચૂરણ ખર્ચ કર્યો સીઝર સમસ્યા છે. હું તમને પ્રોત્સાહિત તમારા પોતાના તેમજ લખો. તે સમાન ન જોવા શકે છે ખાણ, અને તે ઠીક છે, પરંતુ લાંબા સમય સુધી છે સામાન્ય વિચાર તરીકે જ છે. 

પ્રથમ ત્રણ પગલાંઓ અમે પહેલાથી જ કર્યું છે. અમે કી મેળવેલ કર્યું આદેશ વાક્ય દલીલ, અમે તે કી ચાલુ કરી પૂર્ણાંક માં, અને અમે કર્યું સાદી ભાષા માટે વપરાશકર્તા પૂછવામાં તેઓ ચિહ્નિત કરવા માંગો છો. તેથી પછી આગામી મોટી ચંકને દરેક અક્ષર માટે છે સાદી શબ્દમાળા માં, તે આલ્ફાબેટીક છે, તો અમે સાચવવા માંગો તેના કેસ અને તે પાળી. દ્વારા કેસ સાચવવા, હું શું અર્થ છે બધા અપર કેસ કે અક્ષરો ઉપલા રહેવું જોઈએ કેસ અને બધા લોઅરકેસ અક્ષરો લોઅરકેસ રહેવું જોઈએ. તેથી પછી અમે તે પાળી, પછી અમે સાઇફર ટેક્સટ છાપો. 

અહીં ત્રણ વિધેયો કે જે જતા હોય છે આ સમસ્યા માટે હાથમાં આવે છે. ઉપર જ્યારે હું આપ્યો યાદ રાખો આ સ્થળાંતર માટે, ઉદાહરણ તરીકે CS50 છે? યાદ રાખો કે 50 અને આશ્ચર્યચિહ્ન પાળી ન હતી? તેથી અમે શું આપણે કેવી રીતે કહી શકે એક અક્ષર નથી પાળી અથવા કરવાની જરૂર છે? વેલ, જો "આલ્ફા છે," તમે તેને એક અક્ષર પસાર કરવા માટે, જો કે પાત્ર સાચું આપશે એક પત્ર અને ખોટા અન્યથા છે. સાથે તમને મદદ કરવા માટે સાચવીને કેપિટલાઈઝેશન કાર્યો "છે ઉપલા "અને" નીચા છે. " 

આ બે કાર્યો પણ લેવા ઇનપુટ તરીકે એક પાત્ર અને તમે બુલિયન પાછા, સાચું કે ખોટું ક્યાં કે શું પાત્ર પર આધાર રાખીને અપર કેસ અથવા નીચલા કેસ છે. કારણ કે "ઉપર" અને "છે નીચલા "બુલિયન વિધેયો છે, જેનો અર્થ થાય છે કે તેઓ તમને બુલિયન પાછા, તમે તમારા શરતો આ ઉપયોગ કરી શકો છો. તેથી અહીં કોડ સ્નીપેટ છે કે માત્ર એક પત્ર છાપે જો તે અપર કેસ છે. તેથી હું મારા પાત્ર જાહેર કર્યું પત્ર અપર કેસ ઝેડ શકાય અને પછી જો વળતર "ઉચ્ચ" છે સાચું હોય, તો પછી હું કે જે અક્ષર છાપો. 

અમારી સરળ ઉદાહરણ પર પાછા જવાનું બે એક કી દ્વારા મૂળાક્ષરમાંથી સ્થળાંતર, અમે કેવી રીતે વાસ્તવમાં તે કામ કરવા માટે મેળવી શકું? વેલ, તે છે કે જે અક્ષરો બહાર વળે અને પૂર્ણાંકો ખૂબ નજીકથી સંબંધિત છે. દરેક અક્ષર એક છે સંકળાયેલ પૂર્ણાંક કિંમત તે ASCII ચાર્ટ મળી સાથે, જ્યાં દરેક અક્ષર તે ASCII કિંમત પ્રદર્શિત થાય છે. તેથી એક અપર કેસ એક અનુલક્ષે 65 એક ASCII કિંમત અને એક લોઅરકેસ માટે 97 એક ASCII કિંમત. 

જોવા માટે મફત લાગે કોઈપણ ASCII ચાર્ટ ઑનલાઇન તમારા માટે આ કિંમતો જુઓ. તેથી તેનો અર્થ શું અમે કરી શકો છો કે જે , અપર કેસ એક પાત્ર લેવા તે પૂર્ણાંક બે ઉમેરવા, અને પછી વિચાર પરિણામે પાત્ર અપર કેસ સી. કારણ કે 65, તે ASCII છે મૂડી માટે કિંમત, વત્તા 2, અમને 67 આપે છે, જે અનુલક્ષે અપર કેસ સી ના પાત્ર માટે 

કમનસીબે, વસ્તુઓ એટલા સરળ રહેશે નહીં. અમે એક સમીકરણ છે કે અમે ધ્યાનમાં હોય છે. અહીં તે છે કે અમને ઇથ સાઇફર ટેક્સટ કહે પત્ર ઇથ સાદી અનુલક્ષે પત્ર, વત્તા key-- મોડ્યુલર તે તમામ, 26. શા માટે બને છે? માતાનો અમારા ઉદાહરણ પર પાછા જઈએ પહેલાં, જ્યાં મૂડી, વત્તા 2, અમને મૂડી સી આપે 

તેથી સમીકરણ કે અરજી સ્પષ્ટીકરણ અમને આપે છે, પછી મૂડી લેવા દો 2 અને 26 દ્વારા ફેરફારની વત્તા. તેથી મૂડી, જ્યારે હું તેને મૂકી તે એક અવતરણ ચિહ્નો, મને તે સારવાર માટે પરવાનગી આપે છે પૂર્ણાંક છે, કે જેથી માટે પરવાનગી આપે છે મને તે તેના ASCII કિંમત, 65 પડેલા. 65 વત્તા 2 67 છે. 67 ફેરફારની 26 માટે 15 આપે છે, પરંતુ તે ખરેખર નથી અર્થમાં બનાવવા કારણ કે અમે જાણીએ છીએ કે મૂડી સી ASCII કિંમત 67, 15 છે. તેથી અમે તે કેવી રીતે સમાધાન નથી? 

ઠીક છે, અહીં હું posit કરવા માંગો છો એક મૂળાક્ષર ઇન્ડેક્સ કલ્પના. તેથી અમે પહેલાથી જ કેવી રીતે વાત કરી છે દરેક પાત્ર તેના ASCII કિંમત ધરાવે છે, પરંતુ હું કહું છું, સારી રીતે, ચાલો માંગો છો દરેક પાત્ર પણ કર્યા વિશે વિચારો એક મૂળાક્ષર ઇન્ડેક્સ જ્યાં એક દાખલા તરીકે, મૂળાક્ષર પ્રથમ અક્ષર તરીકે, શૂન્ય એક મૂળાક્ષર ઇન્ડેક્સ છે. તેથી હવે આપણે લાગુ પડે છે એ જ સમીકરણ પહેલાં, પરંતુ એક મૂળાક્ષર ઇન્ડેક્સ મદદથી. 

તેથી શૂન્ય, કારણ કે અમે નિર્ધારિત કર્યું છે. તેથી પછી શૂન્ય વત્તા બે, મોડ 26 લેતી, કે બે, મોડ 26 છે, જે અમને બે આપે છે. અને સાથે સાથે, દ્રષ્ટિએ એક મૂળાક્ષર ઇન્ડેક્સ સી ત્રીજો પત્ર છે મૂળાક્ષર, જેથી અનુલક્ષે કરશે બે એક મૂળાક્ષર ઇન્ડેક્સ. તેથી તે મદદથી લાગે છે આ કિસ્સામાં મૂળાક્ષર ઇન્ડેક્સ ખરેખર અમને યોગ્ય પરિણામ આપે છે. 

તેથી હવે ચાલો તપાસ માટે જો સમીકરણ કરણીઓ જોઈને એક મૂળાક્ષર ઇન્ડેક્સ સાથે. વાય માતાનો મૂળાક્ષર ઇન્ડેક્સ 24 છે મૂળાક્ષર છેલ્લા અક્ષર બની ગઈ છે. તેથી પછી 24 વત્તા અમારી બે કી યુએસ 26 આપે છે. 26 ફેરફારની 26 અમને 0 છે, જે માટે નસીબદાર આપે અમને, એ માટે મૂળાક્ષર ઇન્ડેક્સ છે તેથી આશા છે કે તે પર્યાપ્ત છે કે સાબિતી છે મૂળાક્ષર ઇન્ડેક્સ પદ્ધતિ કામ કરે છે. જો નહિં, તો અજમાવી મફત લાગે તમારા પોતાના કેટલાક ઉદાહરણો. 

ક્રમમાં યોગ્ય રીતે આસપાસ લપેટી માટે મૂળાક્ષર અને સીઝર સમીકરણ લાગુ પડે છે, પછી આપણે જાણીએ છીએ કે અમે જરૂર મૂળાક્ષર સૂચકાંક સાથે વ્યવહાર. પરંતુ અમે તે ASCII સાથે શરૂ મૂલ્યો, અને માત્ર પછી અમે પછી કન્વર્ટ કરો મૂળાક્ષર ઇન્ડેક્સ. ત્યાંથી, ક્રમમાં છાપવા માટે, અમે જરૂર ફરીથી તે ASCII કિંમતો સાથે વ્યવહાર. તેથી અમે કેવી રીતે બહાર આકૃતિ જરૂર છે વર્ણાનુક્રમે માટે ASCII માંથી જાઓ અને મૂળાક્ષર પરથી તે ASCII છે. 

તેથી હું તમને તે છોડી બહાર આકૃતિ એક અક્ષર વચ્ચે પેટર્ન અને તેના મૂળાક્ષર ઇન્ડેક્સ અને તેના ASCII કિંમત. હવે, યાદ રાખો કે, તેમ છતાં સ્લાઇડ પર આ ટેબલ અધિકાર પણ મૂડી અક્ષરો બતાવે છે, અમે કે નહીં ધ્યાનમાં હોય એક અલગ પેટર્ન લાગુ પડે છે નીચેના અક્ષરોની છે. 

તેથી હવે અમે બહાર figured કર્યું છે એક પાત્ર પાળી માટે ઑનલાઇન કેવી રીતે પછી બધા અમે હોય પાયે છે કે અપ સમગ્ર સાદી સમગ્ર જાઓ. તેથી સાદી એક શબ્દમાળા છે. અમારા માટે લકી, શબ્દમાળા ખરેખર છે માત્ર અક્ષરો ઝાકઝમાળ, જેથી દરેક પાત્ર ઍક્સેસ કરવા માટે શબ્દમાળા, બધા માટે તમારે શું કરવું છે એરે નોટેશનમાં ઉપયોગ કરવા માટે છે. હું લખો ચલ છે કહે છે શબ્દમાળા તરીકે ઓળખાય "લખાણ = 'આ CS50 છે.'" 

વેલ, પછી, ક્રમમાં દરેક અક્ષર ઍક્સેસ, હું બધા સાથે શું કરવું છે ચલ લખાણ છે સારી રીતે કહે છે, ઇન્ડેક્સ શૂન્ય પર લખાણ, કે ઇન્ડેક્સ મૂડી ટી લખાણ અનુલક્ષે એક લોઅર કેસ એચ અનુલક્ષે છે. અન્ય ઉપયોગી કાર્ય છે શબ્દમાળા લંબાઈ કાર્ય. તેથી એક શબ્દમાળા માં પસાર તે કાર્ય આપશે પૂર્ણાંક, કે જેઓ શબ્દમાળા લંબાઈ. 

અમે વિશે વાત કરી હવે આ બધા જુદા જુદા તત્વો, તેમને મળીને પાછા મૂકી દો. તેથી ક્યાં તો મારા સ્યુડોકોડનો પર પાછા કોડ અથવા તમારા સ્યુડોકોડનો અને મારફતે જાઓ અને ખાતરી કરો કે તમે કેવી રીતે ખબર દરેક એક વસ્તુ કરવા માટે. argc અને argv મદદથી કી મેળવી, પૂર્ણાંક માં કી દેવાનો હું, સાદી ભાષા માટે પૂછવાની, GetString, અને પછી વારો દરેક અક્ષર પર સાદી શબ્દમાળા દરેક પાત્ર કેસ સાચવીને અને કી દ્વારા કે પાત્ર સ્થળાંતર, ખાતરી કરો કે જે તમે છો મૂળાક્ષર આસપાસ વીંટાળવવાની છેલ્લે તે સાઇફર ટેક્સટ છાપવા. મારું નામ Amila છે, અને આ સીઝર હતો. 