1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> AMILA: Við skulum takast Caesar.

3
00:00:02,270 --> 00:00:06,110
Í keisaranum, leyfum við notanda
að umrita leyndarmál skilaboð.

4
00:00:06,110 --> 00:00:09,780
Svo skulum kafa rétt í og ​​líta
á okkar verkþætti fyrir þessu vandamáli.

5
00:00:09,780 --> 00:00:12,210
Svo fyrst, fáum við lykilinn frá notandanum.

6
00:00:12,210 --> 00:00:15,210
Þá fáum við kæra
sem þeir vilja að umrita.

7
00:00:15,210 --> 00:00:21,380
Eftir það, dulrita við það fyrir þá,
og að lokum við prentað ciphertext þeirra.

8
00:00:21,380 --> 00:00:23,600
>> Svo skulum byrja með dæmi.

9
00:00:23,600 --> 00:00:26,920
Segjum að þú vildir að umrita
Allt stafrófið með lykli tveggja.

10
00:00:26,920 --> 00:00:31,360
Jæja, allt stafrófið þinn myndi
bara beinst að bréfum.

11
00:00:31,360 --> 00:00:37,060
Svo myndi umrita í C, B
D, C til E, svo framvegis og svo framvegis,

12
00:00:37,060 --> 00:00:42,470
þar til þú færð að X, sem umbreytir til Ö
eða Zed, eftir því hvar þú ert frá.

13
00:00:42,470 --> 00:00:47,445
Þá Y myndi þá skipta alla leið,
vefja um stafrófinu til að fá að,

14
00:00:47,445 --> 00:00:53,256
og loks síðasta bréf af
stafrófið, Z, Zed, myndi umrita til B.

15
00:00:53,256 --> 00:00:54,660
>> Þú fékk það?

16
00:00:54,660 --> 00:00:56,380
Við skulum líta á nokkur dæmi.

17
00:00:56,380 --> 00:01:00,540
Fyrsta dæmið hér er mjög svipuð
hvað við útskýrt ofan.

18
00:01:00,540 --> 00:01:05,560
Svo ef ég umrita einhverja hluta af
stafrófið, A í gegnum L, með lykli af tveimur,

19
00:01:05,560 --> 00:01:09,760
þá fæ ég bara öllu mínu
stafrófið færst tvo stafi.

20
00:01:09,760 --> 00:01:12,230
>> Þá, í næsta dæmi mínu,
lykillinn er enn tveir,

21
00:01:12,230 --> 00:01:15,080
svo þú ættir samt að vita
sem bréf að búast.

22
00:01:15,080 --> 00:01:16,400
En hér er það setning.

23
00:01:16,400 --> 00:01:18,100
Þetta er CS50.

24
00:01:18,100 --> 00:01:21,090
Svo þú munt taka eftir að ég
varðveita málið af bréfum mínum,

25
00:01:21,090 --> 00:01:25,600
svo allir hástafi eru einnig
hástafi í ciphertext.

26
00:01:25,600 --> 00:01:27,800
Og allir lágstafir
stafir í kæra

27
00:01:27,800 --> 00:01:30,640
eru einnig lágstafir
stafir í ciphertext.

28
00:01:30,640 --> 00:01:34,020
En ég halda bréf
og allir upphrópunarmerki

29
00:01:34,020 --> 00:01:37,610
eða önnur greinarmerki sama.

30
00:01:37,610 --> 00:01:40,360
>> Svo nú er að við höfum vit
fyrir hvernig forritið virkar,

31
00:01:40,360 --> 00:01:43,890
ekki hika við að fara að keyra meira
dæmi um eigin spýtur, ef þú vilt.

32
00:01:43,890 --> 00:01:47,072
Við skulum byrja með að fá
lykillinn frá notandanum.

33
00:01:47,072 --> 00:01:48,780
Hefð, með
önnur vandamál, höfum við

34
00:01:48,780 --> 00:01:51,450
verið vanir að fá
einhverjar tölur sem við

35
00:01:51,450 --> 00:01:54,710
þarf því vekur notandi
með virka GetInt.

36
00:01:54,710 --> 00:01:58,850
En í þetta sinn erum við í raun að fara
að nota stjórn lína rifrildi

37
00:01:58,850 --> 00:02:01,760
og nýtt hlutverk sem kallast atoi.

38
00:02:01,760 --> 00:02:05,130
>> Þegar þú keyrir helstu
forrit í C, þá er það

39
00:02:05,130 --> 00:02:08,500
tekur í tveimur parameters--
INT argc, sem

40
00:02:08,500 --> 00:02:11,670
er fjöldi rök
fór í, og þá

41
00:02:11,670 --> 00:02:15,920
argv, fylki af strengjum sem inniheldur
listi af öllum rökum

42
00:02:15,920 --> 00:02:16,740
liðin.

43
00:02:16,740 --> 00:02:19,740
Þú ert ekki beinlínis að hafa
til að lýsa þessar breytur.

44
00:02:19,740 --> 00:02:22,700
Þeir eru reiknuð fyrir
þú með þýðanda.

45
00:02:22,700 --> 00:02:28,160
Rétt notkun fyrir þetta væri
fyrir argc að eitt til tvö í þessu tilfelli,

46
00:02:28,160 --> 00:02:32,630
vegna þess að notandinn þarf að fara í
símtalið til áætlunarinnar, ./caesar,

47
00:02:32,630 --> 00:02:35,570
og þá lykillinn,
hvað tala þeir vilja.

48
00:02:35,570 --> 00:02:39,920
Svo það þýðir að argc verður tveir
í því skyni að gilt notkun keisaranum

49
00:02:39,920 --> 00:02:41,680
til að framkvæma.

50
00:02:41,680 --> 00:02:43,590
>> Svo skulum líta á dæmi.

51
00:02:43,590 --> 00:02:47,760
Segja að ég hef nú þegar skrifað og
saman forrit sem heitir BlastOff.

52
00:02:47,760 --> 00:02:52,670
Þannig að ef ég hljóp í skipanalínunni
./blastoff Team Rocket, vel, þá

53
00:02:52,670 --> 00:02:57,750
argc væri þriggja vegna þess að ég
samþykkt í þremur mismunandi rök.

54
00:02:57,750 --> 00:02:59,830
Þá argv myndi líta svona út.

55
00:02:59,830 --> 00:03:03,750
Það er fylki, og það væri
innihalda hverju hinna þriggja strengi.

56
00:03:03,750 --> 00:03:09,640
./blastoff í fyrsta vísitölu, lið
í næsta, og eldflaugar í síðasta.

57
00:03:09,640 --> 00:03:11,610
>> Við skulum tala um fylki fyrir a sek.

58
00:03:11,610 --> 00:03:15,560
Fylki eru gögn uppbygging sem halda
mörg gildi af sömu gerð.

59
00:03:15,560 --> 00:03:19,980
Þetta getur komið sér vel þegar við
hafa lista yfir heiltalna eða strengi.

60
00:03:19,980 --> 00:03:23,030
Mundu bara að þeir hafa
að vera sú sama tegund.

61
00:03:23,030 --> 00:03:25,310
Í tölvunarfræði við
elska telja frá núlli,

62
00:03:25,310 --> 00:03:29,260
svo muna að fylki
Einnig eru núll-verðtryggð.

63
00:03:29,260 --> 00:03:34,360
Svo fyrstu þáttur array minn
er að fara að vera á vísitölu núll.

64
00:03:34,360 --> 00:03:37,580
Svo í þessu tilfelli, þegar ég hef
An array af lengd fjórum,

65
00:03:37,580 --> 00:03:41,350
þá síðustu Vísitala
síðasta þáttur array minn

66
00:03:41,350 --> 00:03:44,970
er í raun að fara að vera
á vísitölu þremur, ekki fjórir.

67
00:03:44,970 --> 00:03:48,880
Vegna muna, við
byrja að telja á núlli.

68
00:03:48,880 --> 00:03:52,530
>> Hér er dæmi um hvernig þú
gæti búið til fylki af eigin spýtur.

69
00:03:52,530 --> 00:03:56,440
Svo segi ég vildi að geyma minn
Þrír uppáhalds hundur nöfn.

70
00:03:56,440 --> 00:03:59,030
Þá myndi ég búa til fjölbreytta strengi.

71
00:03:59,030 --> 00:04:04,450
Þannig að ég myndi lýsa tegund, band, og
þá setja nafn fylkisins, hundar,

72
00:04:04,450 --> 00:04:06,450
og þá í þeim ferningi
sviga setja stærð

73
00:04:06,450 --> 00:04:09,260
á array-- í þessu tilfelli, þrír.

74
00:04:09,260 --> 00:04:12,690
>> Svo fyrsta færsla mín er að fara
að vera hundar á vísitölu núll,

75
00:04:12,690 --> 00:04:14,750
og það er að fara að vera Milo.

76
00:04:14,750 --> 00:04:17,850
Þá hundar á vísitölu einum
er að fara að vera Guffi,

77
00:04:17,850 --> 00:04:23,060
elskan Mochi, og þá síðustu
færslu, þriðja færslan á vísitölu tveimur,

78
00:04:23,060 --> 00:04:26,130
er að fara að vera sætur, sætur Elphie.

79
00:04:26,130 --> 00:04:28,610
Þú munt taka eftir því sniði
til að fylla í þessu fylki

80
00:04:28,610 --> 00:04:32,150
er mjög mikið eins og hvernig þú gætir
lýsa öðrum breytu hvar

81
00:04:32,150 --> 00:04:36,307
þú þarft heiti breytunnar á eftir
gildi sem þú vilt geyma í henni.

82
00:04:36,307 --> 00:04:38,140
Eini munurinn á
þetta mál er að þér

83
00:04:38,140 --> 00:04:42,700
verður að muna að setja vísitöluna
af verðmæti í hornklofa.

84
00:04:42,700 --> 00:04:46,420
Og þar höfum við okkar
Þrír uppáhalds hundar.

85
00:04:46,420 --> 00:04:48,780
>> En því miður, það er kominn tími
að komast aftur til keisarans.

86
00:04:48,780 --> 00:04:52,910
Mundu að rétta notkun fyrir
Notandinn er að fara að vera liggur í ekki aðeins

87
00:04:52,910 --> 00:04:57,430
nafn program ./caesar, en
einnig lykillinn að þeir vilja til að skipta

88
00:04:57,430 --> 00:04:58,850
kæra þeirra með.

89
00:04:58,850 --> 00:05:01,540
Svo það þýðir að argc verður tvö.

90
00:05:01,540 --> 00:05:07,580
Þeir þurfa að standast í two-- ekkert meira, ekkert
minna en tvo stjórn lína rifrildi.

91
00:05:07,580 --> 00:05:09,050
>> Nú, hvað um argv?

92
00:05:09,050 --> 00:05:12,880
Jæja, við vitum nú þegar að
array er að fara að vera lengd tveimur,

93
00:05:12,880 --> 00:05:15,270
En hvað er að finna í hverri frumefni?

94
00:05:15,270 --> 00:05:19,330
Jæja, fyrsti þáttur
er að fara að vera ./caesar,

95
00:05:19,330 --> 00:05:24,190
og svo næsta þátturinn er að fara að
innihalda lykilinn sem notandinn slegið inn.

96
00:05:24,190 --> 00:05:27,480
Nú, ef þeir nota það á réttan hátt
fyrir notkun keisaranum,

97
00:05:27,480 --> 00:05:29,350
þá eru þeir að fara að slá inn númer.

98
00:05:29,350 --> 00:05:33,260
En jafnvel þótt eðli
að þeir slá er tala,

99
00:05:33,260 --> 00:05:35,790
það er af gögnum taginu String.

100
00:05:35,790 --> 00:05:40,390
>> Svo hvernig gera við umbreyta það
band við heiltala?

101
00:05:40,390 --> 00:05:46,680
Svo segi ég hef num, a band,
inniheldur strenginn 50.

102
00:05:46,680 --> 00:05:49,000
Ef ég vil breyta sem
heiltölu, þá er ég einfaldlega

103
00:05:49,000 --> 00:05:53,340
lýsa nýja breytu, sem
Integer i, kalla atoi.

104
00:05:53,340 --> 00:06:01,160
Ég fara í strengbreyta mínum, NUM, og
þá mun ég þá vera númer 50.

105
00:06:01,160 --> 00:06:04,350
Gakktu úr skugga um að athuga manninn
síður fyrir atoi virka

106
00:06:04,350 --> 00:06:07,990
að athuga hvaða bókasafn það er
í, og hvað gildi það

107
00:06:07,990 --> 00:06:14,550
mun skila ef strengurinn liðin
í innihaldi ekki öll númer.

108
00:06:14,550 --> 00:06:16,950
>> Svo nú er að við höfum fengið
lykillinn er næsta skref

109
00:06:16,950 --> 00:06:19,430
er að fá kæra frá notandanum.

110
00:06:19,430 --> 00:06:21,170
Nú, þetta er að fara að
vera minna flókið

111
00:06:21,170 --> 00:06:23,410
en siglingar í kringum
stjórn lína rifrildi.

112
00:06:23,410 --> 00:06:26,190
Allt sem við þurfum að gera er að hringja
GetString virka

113
00:06:26,190 --> 00:06:29,660
að hvetja notandann til að gefa
okkur a band, en muna

114
00:06:29,660 --> 00:06:34,090
að athuga upplýsingar um hvernig við
might vilja til að hvetja notandann fyrir það.

115
00:06:34,090 --> 00:06:36,420
>> Nú við komum til
Hjarta problem--

116
00:06:36,420 --> 00:06:38,860
hvernig á að dulrita í kæra.

117
00:06:38,860 --> 00:06:42,830
Jæja, fyrst skulum tala um hvernig
að dulrita einn staf í einu,

118
00:06:42,830 --> 00:06:47,370
og þá munum við takast á hvernig á að
iterate yfir alla kæra.

119
00:06:47,370 --> 00:06:50,440
Ég hef skrifað nokkrar sauðakóðanum
fyrir vandamál Caesar.

120
00:06:50,440 --> 00:06:52,310
Ég hvet þig til að
skrifa eigin spýtur eins og heilbrigður.

121
00:06:52,310 --> 00:06:55,900
Það gæti ekki líta eins
minn, og það er allt í lagi, en svo lengi

122
00:06:55,900 --> 00:06:58,640
sem almenna hugmyndin er sú sama.

123
00:06:58,640 --> 00:07:00,780
>> Fyrstu þrjú skref
við höfum nú þegar gert.

124
00:07:00,780 --> 00:07:03,100
Við höfum fengið lykil af
stjórn lína rifrildi,

125
00:07:03,100 --> 00:07:05,510
við höfum snúið þessi lykill
í heiltala, og við höfum

126
00:07:05,510 --> 00:07:09,320
beðið notanda fyrir kæra
sem þeir vilja til að dulrita.

127
00:07:09,320 --> 00:07:12,420
Svo þá er næsta stór klumpur
er að fyrir hvern staf

128
00:07:12,420 --> 00:07:15,070
í kæra band,
ef það er stafrófsröð,

129
00:07:15,070 --> 00:07:17,750
við viljum varðveita
mál sitt og skipta henni.

130
00:07:17,750 --> 00:07:20,900
Með varðveita málið, það sem ég
meina er að öllum hástafi

131
00:07:20,900 --> 00:07:23,580
bréf ætti að vera Efri
tilfelli og allir lágstöfum

132
00:07:23,580 --> 00:07:25,640
ætti að vera lágstafir.

133
00:07:25,640 --> 00:07:29,110
Svo þá eftir að við skipta þeim,
þá erum við að prenta ciphertext.

134
00:07:29,110 --> 00:07:33,100
>> Hér eru þrjár aðgerðir sem eru að fara
að koma sér vel fyrir þessu vandamáli.

135
00:07:33,100 --> 00:07:38,010
Mundu upp hér að ofan þegar ég gaf
dæmi um að breytast þetta er CS50?

136
00:07:38,010 --> 00:07:41,800
Mundu að 50 og
upphrópunarmerki ekki skipta?

137
00:07:41,800 --> 00:07:45,680
Og hvernig getum við sagt hvort við
þarf að skipta bréf eða ekki?

138
00:07:45,680 --> 00:07:48,650
Jæja, "er alfa," ef
þú gefa það a staf,

139
00:07:48,650 --> 00:07:54,850
mun skila satt ef það eðli
er bréf og falskur annað.

140
00:07:54,850 --> 00:07:56,870
Til að hjálpa þér með
varðveita fjármögnun

141
00:07:56,870 --> 00:07:59,750
eru aðgerðir "er
efri "og" er lægri. "

142
00:07:59,750 --> 00:08:03,350
>> Þessar tvær aðgerðir einnig taka
í einni persónu sem inntak

143
00:08:03,350 --> 00:08:06,580
og skila þér Boolean,
annaðhvort satt eða ósatt

144
00:08:06,580 --> 00:08:11,280
eftir því hvort þessi karakter
er efri tilfelli eða lágstöfum.

145
00:08:11,280 --> 00:08:14,610
Vegna þess að "er efri" og "er
lægri "eru Boolean aðgerðir,

146
00:08:14,610 --> 00:08:18,660
sem þýðir að þeir koma aftur þér Boolean,
þú getur notað þessa í aðstæðum þínum.

147
00:08:18,660 --> 00:08:23,490
Svo er hér bút af kóða sem aðeins
prentar bréf ef það er efri raunin.

148
00:08:23,490 --> 00:08:27,790
Þannig að ég hef lýst eðli mínu
bréf að efri málið Zed

149
00:08:27,790 --> 00:08:33,440
og þá ef "er efri" skilar
satt, þá er ég að prenta bréfið.

150
00:08:33,440 --> 00:08:38,200
>> Fara aftur til einfalt dæmi okkar
breytast stafrófið með lykli af tveimur,

151
00:08:38,200 --> 00:08:41,049
hvernig fáum við í raun að vinna?

152
00:08:41,049 --> 00:08:45,770
Jæja, það kemur í ljós að stafir
og heiltölur eru mjög nátengd.

153
00:08:45,770 --> 00:08:48,840
Hver persóna hefur
heiltölu gildi tengd

154
00:08:48,840 --> 00:08:53,260
með það í ASCII töfluna,
þar ASCII hvern staf er

155
00:08:53,260 --> 00:08:55,380
gildi birtist.

156
00:08:55,380 --> 00:08:58,940
Svo er efri tilfelli samsvarar
til ASCII gildi 65

157
00:08:58,940 --> 00:09:02,270
og lágstafir a til
ASCII gildi 97.

158
00:09:02,270 --> 00:09:04,940
>> Feel frjáls til að líta upp
allir ASCII graf netinu

159
00:09:04,940 --> 00:09:07,720
að sjá þessi gildi fyrir sjálfan þig.

160
00:09:07,720 --> 00:09:12,096
Svo hvað þetta þýðir er að við getum
taka eðli efri tilfelli,

161
00:09:12,096 --> 00:09:18,200
bæta heiltölu tvær við það, og þá fá
eðli efri málið C í kjölfarið.

162
00:09:18,200 --> 00:09:23,720
Það er vegna þess 65 að ASCII
gildi fyrir fjármagni, auk 2,

163
00:09:23,720 --> 00:09:29,960
gefur okkur 67, sem samsvarar
við eðli hástöfum C.

164
00:09:29,960 --> 00:09:33,480
>> Því miður, það
verður ekki alveg vera svo einfalt.

165
00:09:33,480 --> 00:09:36,980
Við höfum jöfnu sem
við verðum að íhuga.

166
00:09:36,980 --> 00:09:43,590
Hér segir hún okkur að við ith ciphertext
bréf samsvarar ith kæra

167
00:09:43,590 --> 00:09:48,900
bréf, auk key--
allt það, mát 26.

168
00:09:48,900 --> 00:09:50,810
Hvers vegna er það málið?

169
00:09:50,810 --> 00:09:55,430
Við skulum fara aftur til okkar dæmi úr
áður, þar fjármagn A, plús 2,

170
00:09:55,430 --> 00:09:57,590
gefur okkur fjármagns C.

171
00:09:57,590 --> 00:10:01,870
>> Svo beita jöfnu sem
forskrift gefur okkur,

172
00:10:01,870 --> 00:10:06,660
þá skulum taka fjármagni
plús 2 og unga fólkið sem um 26.

173
00:10:06,660 --> 00:10:10,730
Svo höfuðborg A, þegar ég setti hana í
þessir single gæsalöppum,

174
00:10:10,730 --> 00:10:14,010
leyfa mér að meðhöndla það eins
heiltala, þannig að leyfir

175
00:10:14,010 --> 00:10:17,500
mér að kasta því til ASCII gildi þess, 65.

176
00:10:17,500 --> 00:10:20,080
65 plús 2 er 67.

177
00:10:20,080 --> 00:10:25,210
67 Mod 26 gefur okkur 15,
en það er í raun ekki

178
00:10:25,210 --> 00:10:32,590
skynsamleg vegna þess að við vitum að
Höfuðborg C ASCII gildi er 67, ekki 15.

179
00:10:32,590 --> 00:10:35,580
Svo hvernig gera við að sætta það?

180
00:10:35,580 --> 00:10:39,840
>> Jæja, hér er ég langar að posit sem
hugmyndin um stafrófsröð vísitölu.

181
00:10:39,840 --> 00:10:44,010
Þannig að við höfum þegar talað um hvernig
hver persóna hefur ASCII gildi þess,

182
00:10:44,010 --> 00:10:48,810
En mig langar að segja, vel, við skulum
hugsa um hvert eðli hafa einnig

183
00:10:48,810 --> 00:10:52,230
stafrófsröð vísitölu,
þar sem A til dæmis,

184
00:10:52,230 --> 00:10:58,800
sem fyrsta staf í stafrófinu,
hefur stafrófsröð vísitölu núll.

185
00:10:58,800 --> 00:11:02,070
Svo nú skulum beita
Sama jöfnu eins og áður,

186
00:11:02,070 --> 00:11:05,040
en með því að nota stafrófsröð vísitölu.

187
00:11:05,040 --> 00:11:07,810
>> Svo A er núll, eins og við höfum skilgreint.

188
00:11:07,810 --> 00:11:15,640
Svo þá taka núll plús tveir, mod 26,
það er tveir, Mod 26, sem gefur okkur tvö.

189
00:11:15,640 --> 00:11:18,780
Og vel, í skilmálar af
stafrófsröð vísitölu,

190
00:11:18,780 --> 00:11:23,930
C er þriðji bréf í
stafrófið, svo sem myndi samsvara

191
00:11:23,930 --> 00:11:26,290
til stafrófsröð vísitölu tveimur.

192
00:11:26,290 --> 00:11:29,850
Svo virðist sem nota
Stafrófsröð vísitölu í þessu tilfelli

193
00:11:29,850 --> 00:11:32,840
reyndar gefur okkur rétta niðurstöðu.

194
00:11:32,840 --> 00:11:35,020
>> Svo nú skulum athuga að
sjá hvort Jafnan verk

195
00:11:35,020 --> 00:11:37,210
með einum bókstaf vísitölu.

196
00:11:37,210 --> 00:11:42,540
Stafrófsröð Vísitala Y er 24 sem
Annað síðasta staf í stafrófinu.

197
00:11:42,540 --> 00:11:46,520
Svo þá 24 plús okkar
Lykillinn af tveimur gefur okkur 26.

198
00:11:46,520 --> 00:11:54,750
26 Mod 26 gefur okkur 0, sem, heppinn að
okkur, er stafrófsröð vísitölu A.

199
00:11:54,750 --> 00:11:59,100
Svo vonandi er það sönnun nógu að
Stafrófskóðun vísitalan aðferð virkar.

200
00:11:59,100 --> 00:12:03,180
Ef ekki, ekki hika við að prófa
nokkur dæmi um eigin spýtur.

201
00:12:03,180 --> 00:12:08,030
>> Til þess að almennilega vefja í kringum
stafrófið og beita Caesar jöfnu,

202
00:12:08,030 --> 00:12:11,280
þá vitum við að við þurfum að
takast á við bókstöfum vísitölum.

203
00:12:11,280 --> 00:12:15,130
En við byrjum með ASCII
gildi, og aðeins þá

204
00:12:15,130 --> 00:12:18,530
eigum við umbreyta þá til
í stafrófsröð vísitölu.

205
00:12:18,530 --> 00:12:23,970
Þaðan, í því skyni að prenta, þurfum við
að takast á við ASCII gildi aftur.

206
00:12:23,970 --> 00:12:28,350
Þannig að við þurfum að reikna út hvernig á að
fara frá ASCII til Stafrófsröð

207
00:12:28,350 --> 00:12:31,080
og frá stafrófsröð til ASCII.

208
00:12:31,080 --> 00:12:34,910
>> Svo ég leyfi það að þér að reikna út
mynstrið á milli persónu

209
00:12:34,910 --> 00:12:38,590
og stafrófsröð hennar
vísitölu og ASCII gildi þess.

210
00:12:38,590 --> 00:12:41,530
Nú, muna að jafnvel þótt
þetta borð rétt á renna

211
00:12:41,530 --> 00:12:45,630
sýnir hástafi, við einnig
verða að íhuga hvort ekki

212
00:12:45,630 --> 00:12:48,915
mismunandi mynstur á
fyrir lágstafi.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> Svo nú er að við höfum mynstrağur út
hvernig á að skipta einum staf,

215
00:12:55,840 --> 00:13:02,200
þá er allt sem við þurfum að gera mælikvarði sem
upp til að fara yfir allan kæra.

216
00:13:02,200 --> 00:13:04,260
Svo er kæra band.

217
00:13:04,260 --> 00:13:08,210
Lucky fyrir okkur, band er í raun
bara fylki af stöfum,

218
00:13:08,210 --> 00:13:12,150
svo í því skyni að fá aðgang Sérhver persóna
af streng, allt sem þú þarft að gera

219
00:13:12,150 --> 00:13:14,270
er að nota array tákn.

220
00:13:14,270 --> 00:13:20,270
Segja að ég hef breytu af tegund
band heitir "text =" þetta er CS50. "

221
00:13:20,270 --> 00:13:22,730
>> Jæja, þá, í ​​því skyni að
aðgang hvern staf,

222
00:13:22,730 --> 00:13:25,880
allt sem ég hef að gera við
breytan textinn er

223
00:13:25,880 --> 00:13:31,660
að segja vel, textinn á vísitölu núll, sem
samsvarar höfuðborg T. Texti á vísitölu

224
00:13:31,660 --> 00:13:35,100
Einn samsvarar um lítið h.

225
00:13:35,100 --> 00:13:38,110
Annar gagnlegur virka er
band lengd virka.

226
00:13:38,110 --> 00:13:40,760
Svo liggur í streng til
sem virka aftur

227
00:13:40,760 --> 00:13:44,610
heiltala, lengd strengsins.

228
00:13:44,610 --> 00:13:47,060
>> Nú þegar við höfum talað um
Allir þessir mismunandi þættir,

229
00:13:47,060 --> 00:13:48,540
skulum setja þá aftur saman.

230
00:13:48,540 --> 00:13:52,210
Svo aftur að annaðhvort sauðakóðanum minn
númer eða sauðakóðanum þinn

231
00:13:52,210 --> 00:13:55,920
og fara í gegnum og ganga úr skugga um að þú
vita hvernig á að gera hvert einasta hlutur.

232
00:13:55,920 --> 00:14:01,520
Getting the lykill með argc og argv,
snúa takkanum í heiltala, a

233
00:14:01,520 --> 00:14:06,840
til i, vekur til kæra,
GetString, og þá iterating

234
00:14:06,840 --> 00:14:09,590
yfir hverju staf í
sem kæra band,

235
00:14:09,590 --> 00:14:14,910
varðveita ræða hvern staf
og breytast að eðli af lykli,

236
00:14:14,910 --> 00:14:17,520
að tryggja að þú ert
umbúðir í kring stafrófinu,

237
00:14:17,520 --> 00:14:20,850
loksins að prenta þær ciphertext.

238
00:14:20,850 --> 00:14:25,470
Mitt nafn er Amila, og þetta var Caesar.

239
00:14:25,470 --> 00:14:28,448

