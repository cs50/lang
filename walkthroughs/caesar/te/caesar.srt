1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> AMILA: సీజర్ అధిగమించేందుకు లెట్.

3
00:00:02,270 --> 00:00:06,110
సీజర్, మేము వినియోగదారు అనుమతిస్తుంది
ఒక రహస్య సందేశాన్ని ఎన్కోడ్.

4
00:00:06,110 --> 00:00:09,780
కాబట్టి యొక్క కుడి ప్రవేశిస్తాడు తెలియజేయండి మరియు చూడండి
ఈ సమస్య కోసం మా చేయాల్సిన వద్ద.

5
00:00:09,780 --> 00:00:12,210
కాబట్టి మొదటి, మేము వినియోగదారు నుండి కీ పొందుటకు.

6
00:00:12,210 --> 00:00:15,210
అప్పుడు మేము, సాదా పొందండి
వారు ఎన్కోడ్ కావలసిన.

7
00:00:15,210 --> 00:00:21,380
ఆ తరువాత, మేము వాటిని encipher,
చివరకు మేము వారి సాంకేతికపాఠం ప్రింట్.

8
00:00:21,380 --> 00:00:23,600
>> కాబట్టి యొక్క ఒక ఉదాహరణ తో ప్రారంభిద్దాం.

9
00:00:23,600 --> 00:00:26,920
మీరు ఎన్కోడ్ కోరుకుంటే సే
రెండు కీలక తో మొత్తం వర్ణమాల.

10
00:00:26,920 --> 00:00:31,360
బాగా, మీ మొత్తం వర్ణమాల చేస్తాను
కేవలం అక్షరాలు మార్చబడుతుంది.

11
00:00:31,360 --> 00:00:37,060
కాబట్టి యొక్క ఒక C B కు ఎన్కోడ్ ఉంటుంది
డి, సి E లకు, అందువలన న మొదలగునవి,

12
00:00:37,060 --> 00:00:42,470
మీరు Z వరకు సంజ్ఞ X, వచ్చేవరకు
లేదా మీరు నుండి ఎక్కడ ఆధారపడి, జెడ్.

13
00:00:42,470 --> 00:00:47,445
తరువాత Y అప్పుడు, అన్ని మార్గం మార్చాలని
వెళ్ళడానికి వర్ణమాల సర్దుబాటు,

14
00:00:47,445 --> 00:00:53,256
ఆపై చివరకు యొక్క చివరి అక్షరాలను
వర్ణమాల, Z, జెడ్, ఒక B. ఎన్కోడ్

15
00:00:53,256 --> 00:00:54,660
>> మీరు ఆ వచ్చింది?

16
00:00:54,660 --> 00:00:56,380
యొక్క కొన్ని ఉదాహరణలు చూద్దాం.

17
00:00:56,380 --> 00:01:00,540
ఇక్కడ మొదటి ఉదాహరణలో చాలా పోలి ఉంటుంది
మేము కేవలం పైన వివరించిన ఏమి.

18
00:01:00,540 --> 00:01:05,560
నేను కొన్ని విభాగంలో ఎన్కోడ్ చేస్తే
వర్ణమాల, ఎ ఎల్ ద్వారా ఇద్దరు కీ ద్వారా,

19
00:01:05,560 --> 00:01:09,760
అప్పుడు నేను కేవలం నా మొత్తం పొందుటకు
అక్షరం రెండు అక్షరాలు మళ్లింది.

20
00:01:09,760 --> 00:01:12,230
>> అప్పుడు, నా తదుపరి ఉదాహరణలో,
కీ ఇప్పటికీ రెండు,

21
00:01:12,230 --> 00:01:15,080
కాబట్టి మీరు ఇప్పటికీ తెలిసిన ఉండాలి
ఉత్తరాల ఆశించే.

22
00:01:15,080 --> 00:01:16,400
కానీ ఇక్కడ అది ఒక పదబంధం ఉంది.

23
00:01:16,400 --> 00:01:18,100
ఈ CS50 ఉంది.

24
00:01:18,100 --> 00:01:21,090
కాబట్టి మీరు ఆ నేను గమనించవచ్చు చేస్తాము
నా అక్షరాలు విషయంలో సంరక్షించేందుకు,

25
00:01:21,090 --> 00:01:25,600
కాబట్టి ఏ అప్పర్ కేస్ అక్షరాలను కూడా ఉన్నాయి
సాంకేతికపాఠం లో అప్పర్ కేస్ అక్షరాలను.

26
00:01:25,600 --> 00:01:27,800
మరియు ఏ చిన్నబడి
పాఠంలోని అక్షరాలు

27
00:01:27,800 --> 00:01:30,640
కూడా చిన్న అయిన
సాంకేతికపాఠం అక్షరాలు.

28
00:01:30,640 --> 00:01:34,020
కానీ నేను అక్షరాలు ఉంచడానికి
మరియు ఏ ఆశ్చర్యార్థకం మార్కులు

29
00:01:34,020 --> 00:01:37,610
లేదా ఏ ఇతర విరామ అదే.

30
00:01:37,610 --> 00:01:40,360
>> కాబట్టి ఇప్పుడు మేము ఒక అర్ధంలో కలిగి
కార్యక్రమం ఎలా పనిచేస్తుంది,

31
00:01:40,360 --> 00:01:43,890
మరికొంత అమలు వెళ్ళి సంకోచించకండి
ఉదాహరణలు మీ సొంత మీరు అనుకుంటే.

32
00:01:43,890 --> 00:01:47,072
యొక్క పొందడానికి తో ప్రారంభిద్దాం
వినియోగదారు నుండి కీ.

33
00:01:47,072 --> 00:01:48,780
సాంప్రదాయకంగా, తో
ఇతర సమస్యలు, మేము చేసిన

34
00:01:48,780 --> 00:01:51,450
పెరిగిపోతుంది అభిమానం
మేము ఆ ఏ సంఖ్యలు

35
00:01:51,450 --> 00:01:54,710
వినియోగదారు ప్రాంప్ట్ ద్వారా అవసరం
ఫంక్షన్ GetInt తో.

36
00:01:54,710 --> 00:01:58,850
కానీ ఈ సమయంలో మేము నిజంగా చూడాలని
కమాండ్ లైన్ వాదన ఉపయోగించడానికి

37
00:01:58,850 --> 00:02:01,760
మరియు ఒక కొత్త ఫంక్షన్ atoi అని.

38
00:02:01,760 --> 00:02:05,130
>> మీరు ప్రధాన పరిగెడతారు
సి లో కార్యక్రమం, అప్పుడు అది

39
00:02:05,130 --> 00:02:08,500
ఇద్దరు parameters-- టేక్స్
Int argc, ఇది

40
00:02:08,500 --> 00:02:11,670
వాదనలు సంఖ్య
జారీ ఆపై

41
00:02:11,670 --> 00:02:15,920
కలిగిఉన్న argv, తీగలను యొక్క వ్యూహం
వాదనలు యొక్క జాబితా

42
00:02:15,920 --> 00:02:16,740
ఆమోదించింది.

43
00:02:16,740 --> 00:02:19,740
మీరు స్పష్టంగా లేదు
ఈ వేరియబుల్స్ డిక్లేర్.

44
00:02:19,740 --> 00:02:22,700
వారు కంప్యూటెడ్ చేస్తున్నారు
కంపైలర్ ద్వారా మీరు.

45
00:02:22,700 --> 00:02:28,160
ఈ కోసం సరైన వాడుక ఉంటుంది
argc ఈ సందర్భంలో రెండు ఉండాలంటే,

46
00:02:28,160 --> 00:02:32,630
యూజర్ పాస్ ఉంది ఎందుకంటే
కార్యక్రమానికి కాల్, సీజర్,

47
00:02:32,630 --> 00:02:35,570
ఆపై కీ,
వారు అనుకుంటున్నారా సంసార సంఖ్య.

48
00:02:35,570 --> 00:02:39,920
కాబట్టి ఆ argc ఉండాలి అర్థం ఇద్దరు
సీజర్ ఒక చెల్లుబాటు అయ్యే ఉపయోగం కోసం క్రమంలో

49
00:02:39,920 --> 00:02:41,680
అమలుపరచటం.

50
00:02:41,680 --> 00:02:43,590
>> కాబట్టి యొక్క ఒక ఉదాహరణ చూద్దాం.

51
00:02:43,590 --> 00:02:47,760
నేను ఇప్పటికే వ్రాయలేదు సే మరియు
BlastOff అనే ప్రోగ్రామ్ కంపైల్.

52
00:02:47,760 --> 00:02:52,670
కనుక నేను కమాండ్ లైన్ లో నడిచింది
./blastoff టీం రాకెట్, బాగా, అప్పుడు,

53
00:02:52,670 --> 00:02:57,750
argc మూడు ఉంటుంది నేను
మూడు విభిన్న వాదనలు లో ఆమోదించింది.

54
00:02:57,750 --> 00:02:59,830
అప్పుడు argv ఇలా ఉంటుంది.

55
00:02:59,830 --> 00:03:03,750
ఇది వ్యూహం, మరియు అది చేస్తాను
మూడు తీగలను ప్రతి కలిగి.

56
00:03:03,750 --> 00:03:09,640
మొదటి ఇండెక్స్, జట్టులో ./blastoff
తదుపరి, మరియు గత రాకెట్ లో.

57
00:03:09,640 --> 00:03:11,610
>> ఒక క్షణ కోసం శ్రేణుల గురించి మాట్లాడేందుకు లెట్.

58
00:03:11,610 --> 00:03:15,560
వ్యూహాలను నొక్కి ఆ డేటా కట్టడాలు
ఒకే రకమైన అనేక విలువలు.

59
00:03:15,560 --> 00:03:19,980
మేము ఈ ఉపయోగపడుట చేయవచ్చు
పూర్ణాంకాల లేదా సమూహాల జాబితాలను కలిగి.

60
00:03:19,980 --> 00:03:23,030
జస్ట్ వారు గుర్తు
అదే రకం ఉండాలి.

61
00:03:23,030 --> 00:03:25,310
కంప్యూటర్ సైన్స్ లో, మేము
సున్నా నుండి లెక్కింపు ప్రేమ,

62
00:03:25,310 --> 00:03:29,260
కాబట్టి శ్రేణుల గుర్తుంచుకోవాలి
సున్నా-వర్గీకరించబడతాయి.

63
00:03:29,260 --> 00:03:34,360
నా శ్రేణి యొక్క మొదటి మూలకం
ఇండెక్స్ సున్నా వద్ద అవతరిస్తుంది.

64
00:03:34,360 --> 00:03:37,580
కాబట్టి ఈ సందర్భంలో, నేను ఉన్నప్పుడు
పరిమితి నాలుగు యొక్క వ్యూహం

65
00:03:37,580 --> 00:03:41,350
అప్పటి చివరి ఇండెక్స్
నా శ్రేణి యొక్క చివరి మూలకం

66
00:03:41,350 --> 00:03:44,970
వాస్తవానికి అని అన్నారు
ఇండెక్స్ మూడు, నాలుగు వద్ద.

67
00:03:44,970 --> 00:03:48,880
ఎందుకంటే గుర్తు, మేము
సున్నా వద్ద లెక్కింపు మొదలు.

68
00:03:48,880 --> 00:03:52,530
>> ఇక్కడ మీరు ఎలా ఒక ఉదాహరణ వార్తలు
మీ స్వంత వ్యూహం సృష్టించడానికి ఉండవచ్చు.

69
00:03:52,530 --> 00:03:56,440
నేను నిల్వ కోరుకున్నారు సే నా
మూడు ఇష్టమైన కుక్క పేర్లు.

70
00:03:56,440 --> 00:03:59,030
అప్పుడు నేను తీగలను యొక్క వ్యూహం సృష్టిస్తుంది.

71
00:03:59,030 --> 00:04:04,450
నేను రకం స్ట్రింగ్ డిక్లేర్, మరియు
అప్పుడు శ్రేణి యొక్క పేరు పెట్టి, కుక్కలు,

72
00:04:04,450 --> 00:04:06,450
ఆపై ఆ స్క్వేర్లో
బ్రాకెట్లలో పరిమాణం ఉంచండి

73
00:04:06,450 --> 00:04:09,260
ఈ సందర్భంలో, మూడు శ్రేణి యొక్క.

74
00:04:09,260 --> 00:04:12,690
>> నా మొదటి ఎంట్రీ అన్నారు
ఇండెక్స్ సున్నా వద్ద కుక్కలు ఉండాలి,

75
00:04:12,690 --> 00:04:14,750
మరియు ఆ మిలో చేస్తాడు.

76
00:04:14,750 --> 00:04:17,850
అప్పుడు ఇండెక్స్ ఒక వద్ద కుక్కలు
గూఫీ అవతరిస్తుంది,

77
00:04:17,850 --> 00:04:23,060
డార్లింగ్ Mochi, ఆపై గత
ఎంట్రీ, వరుసగా రెండు మూడో ఎంట్రీ,

78
00:04:23,060 --> 00:04:26,130
అందమైన, తీపి Elphie అవతరిస్తుంది.

79
00:04:26,130 --> 00:04:28,610
మీరు ఫార్మాట్ గమనించవచ్చు
ఈ శ్రేణి లో పూరించేందుకు

80
00:04:28,610 --> 00:04:32,150
ఎలా మీరు వాటిని వంటి చాలా ఉంది
ఏ ఇతర వేరియబుల్ పేరు డిక్లేర్

81
00:04:32,150 --> 00:04:36,307
మీరు వేరియబుల్ పేరు తరువాత కలిగి
మీరు వీటిని నిల్వ కావలసిన విలువ.

82
00:04:36,307 --> 00:04:38,140
లో మాత్రమే తేడా
ఈ సందర్భంలో మీరు అని

83
00:04:38,140 --> 00:04:42,700
సూచిక ఉంచండి గుర్తుపెట్టుకోవాలి
చదరపు బ్రాకెట్లలో విలువ.

84
00:04:42,700 --> 00:04:46,420
మరియు అక్కడ మేము మా కలిగి
మూడు ఇష్టమైన కుక్కలు.

85
00:04:46,420 --> 00:04:48,780
>> కానీ అయ్యో, అది సమయం
సీజర్ తిరిగి పొందడానికి.

86
00:04:48,780 --> 00:04:52,910
ఆ సరైన వాడుక గుర్తుంచుకో
యూజర్ మాత్రమే అక్కడ కూడా అన్నారు

87
00:04:52,910 --> 00:04:57,430
కార్యక్రమం సీజర్ యొక్క పేరు, కానీ
వారు వైపు వెళ్లిపోవాలి అనుకుంటున్నట్టు కూడా కీ

88
00:04:57,430 --> 00:04:58,850
వారి పాఠంలోని.

89
00:04:58,850 --> 00:05:01,540
కాబట్టి ఆ argc రెండు ఉండాలి అర్థం.

90
00:05:01,540 --> 00:05:07,580
వారు, రెండు ఇక పాస్ తప్పక ఎటువంటి
కంటే రెండు ఆదేశ పంక్తి వాదనలు తక్కువ.

91
00:05:07,580 --> 00:05:09,050
>> ఇప్పుడు, argv గురించి ఏమి?

92
00:05:09,050 --> 00:05:12,880
Well, మేము ఇప్పటికే తెలుసు
శ్రేణి పొడవు రెండు అవతరిస్తుంది,

93
00:05:12,880 --> 00:05:15,270
కానీ ప్రతి మూలకం కలిగి ఉంది?

94
00:05:15,270 --> 00:05:19,330
బాగా, మొదటి మూలకం
సీజర్ ఉండబోతుంది,

95
00:05:19,330 --> 00:05:24,190
ఆపై తదుపరి మూలకం అన్నారు
యూజర్ టైప్ చేసే కీ కలిగి.

96
00:05:24,190 --> 00:05:27,480
ఇప్పుడు, ఒకవేళ వారు దాన్ని సరిగ్గా ఉపయోగిస్తారు
సీజర్ యొక్క వినియోగం కోసం,

97
00:05:27,480 --> 00:05:29,350
అప్పుడు వారు అనేక టైప్ చూడాలని.

98
00:05:29,350 --> 00:05:33,260
కానీ కూడా పాత్ర అయితే
వారు టైప్, ఒక సంఖ్య

99
00:05:33,260 --> 00:05:35,790
అది డేటా రకం స్ట్రింగ్ యొక్క వార్తలు.

100
00:05:35,790 --> 00:05:40,390
>> కాబట్టి మేము ఆ మార్చేందుకు చెయ్యాలి
పూర్ణాంకం స్ట్రింగ్?

101
00:05:40,390 --> 00:05:46,680
నేను num కలిగి చెప్పటానికి ఒక స్ట్రింగ్,
స్ట్రింగ్ 50 కలిగి.

102
00:05:46,680 --> 00:05:49,000
నేను ఆ మార్చేందుకు అనుకుంటే
పూర్ణాంకం, అప్పుడు నేను కేవలం

103
00:05:49,000 --> 00:05:53,340
ఒక కొత్త వేరియబుల్ డిక్లేర్, ఒక
atoi కాల్ నేను పూర్ణాంక.

104
00:05:53,340 --> 00:06:01,160
నేను సంఖ్య, నా స్ట్రింగ్ వేరియబుల్ పాస్, మరియు
తర్వాత నేను సంఖ్య 50 కలిగి ఉంటుంది.

105
00:06:01,160 --> 00:06:04,350
హౌ వ్యక్తి తనిఖీ నిర్థారించుకోండి
atoi క్రియాశీలతను కోసం పేజీలను

106
00:06:04,350 --> 00:06:07,990
అంతే ఆ గ్రంధాలయం తనిఖీ
అలాగే, ఇది విలువ వంటి

107
00:06:07,990 --> 00:06:14,550
స్ట్రింగ్ ఆమోదించింది ఉంటే చేరుకుంటాయి
అన్ని సంఖ్యలు కలిగి లేదు.

108
00:06:14,550 --> 00:06:16,950
>> కాబట్టి ఇప్పుడు మేము సంపాదించిన చేసిన
కీ, తదుపరి దశలో

109
00:06:16,950 --> 00:06:19,430
వినియోగదారు నుండి సాదా పొందడానికి ఉంది.

110
00:06:19,430 --> 00:06:21,170
ఇప్పుడు, ఈ అన్నారు
తక్కువ క్లిష్టమైనది

111
00:06:21,170 --> 00:06:23,410
నావిగేట్ కన్నా
ఆదేశ పంక్తి వాదనలు.

112
00:06:23,410 --> 00:06:26,190
మనం చేయాల్సిందల్లా పిలుపు
GetString ఫంక్షన్

113
00:06:26,190 --> 00:06:29,660
యూజర్ ఇవ్వాలని ఫలితానికి
మాకు ఒక స్ట్రింగ్, కానీ గుర్తుంచుకోవాలి

114
00:06:29,660 --> 00:06:34,090
ఎలా కోసం లక్షణాలు తనిఖీ మనం
ఆ కోసం వినియోగదారును ప్రాంప్ట్ అనుకోవచ్చు.

115
00:06:34,090 --> 00:06:36,420
>> ఇప్పుడు మేము వచ్చిన
problem-- గుండె

116
00:06:36,420 --> 00:06:38,860
ఎలా సాదా encipher.

117
00:06:38,860 --> 00:06:42,830
బాగా, మొదటి, యొక్క ఎలా మాట్లాడటానికి వీలు
ఒక సమయంలో ఒక పాత్ర encipher కు,

118
00:06:42,830 --> 00:06:47,370
ఆపై మేము ఎలా పరిష్కరించడానికి ఉంటాం
మొత్తం సాదా పైగా iterate.

119
00:06:47,370 --> 00:06:50,440
నేను కొన్ని pseudocode వ్రాయలేదు
సీజర్ సమస్య కోసం.

120
00:06:50,440 --> 00:06:52,310
నేను మీరు ప్రోత్సహిస్తున్నాము
అలాగే మీ స్వంత వ్రాయండి.

121
00:06:52,310 --> 00:06:55,900
ఇది ఒకేలా కనిపించడం ఉండవచ్చు
గని, మరియు ఆ సరి, కానీ కాలం వార్తలు

122
00:06:55,900 --> 00:06:58,640
సాధారణ ఆలోచన అదే.

123
00:06:58,640 --> 00:07:00,780
>> మొదటి మూడు దశలు
మేము ఇప్పటికే చేశాను.

124
00:07:00,780 --> 00:07:03,100
మేము నుండి కీ సంపాదించిన చేసిన
కమాండ్ లైన్ వాదన,

125
00:07:03,100 --> 00:07:05,510
మేము ఆ కీ చేసారు
ఒక పూర్ణాంకం, మరియు మేము చేసిన

126
00:07:05,510 --> 00:07:09,320
సాదా కోసం యూజర్ ప్రాంప్ట్
వారు encipher కావలసిన.

127
00:07:09,320 --> 00:07:12,420
కాబట్టి అప్పుడు తదుపరి పెద్ద భాగం
ప్రతి పాత్ర కోసం

128
00:07:12,420 --> 00:07:15,070
సాదా స్ట్రింగ్ లో
ఇది అక్షర ఉంటే,

129
00:07:15,070 --> 00:07:17,750
మేము సంరక్షించేందుకు అనుకుంటున్నారా
దాని కేసు మరియు అది మారవచ్చు.

130
00:07:17,750 --> 00:07:20,900
సంరక్షించేందుకు కేసు ద్వారా నేను
అర్థం అన్ని అప్పర్ కేస్

131
00:07:20,900 --> 00:07:23,580
అక్షరాలు ఎగువ ఉంటుందని
కేసు మరియు అన్ని చిన్న అక్షరాలను

132
00:07:23,580 --> 00:07:25,640
చిన్నబడి ఉంటుందని.

133
00:07:25,640 --> 00:07:29,110
కాబట్టి అప్పుడు మేము ఆ మారవచ్చు తర్వాత,
అప్పుడు మేము సాంకేతికపాఠం ప్రింట్.

134
00:07:29,110 --> 00:07:33,100
>> ఇక్కడ వెళ్తున్నారు ఆ మూడు విధులు ఉన్నాయి
ఈ సమస్య కోసం ఉపయోగపడుట.

135
00:07:33,100 --> 00:07:38,010
నేను ఇచ్చినపుడు పైన up గుర్తుంచుకో
ఈ బదిలీ కోసం ఉదాహరణకు CS50 ఉంది?

136
00:07:38,010 --> 00:07:41,800
గుర్తుంచుకోండి 50 మరియు
ఆశ్చర్యార్థకం గుర్తును మారవచ్చు లేదు?

137
00:07:41,800 --> 00:07:45,680
కనుక మేము లేదో ఎలా తెలియజేయవచ్చు
ఒక అక్షరం మార్చేందుకు లేదా అవసరం?

138
00:07:45,680 --> 00:07:48,650
బాగా, "ఆల్ఫా, ఉంది"
మీరు ఒక పాత్ర పాస్,

139
00:07:48,650 --> 00:07:54,850
ఆ పాత్ర ఉంటే నిజమైన తిరిగి
ఒక అక్షరం మరియు తప్పుడు లేకపోతే ఉంది.

140
00:07:54,850 --> 00:07:56,870
మీకు సహాయం
పరిరక్షించే క్యాపిటలైజేషన్

141
00:07:56,870 --> 00:07:59,750
క్రియలు "ఉంది
ఉన్నత "మరియు" తక్కువ. "

142
00:07:59,750 --> 00:08:03,350
>> ఈ రెండు చర్యలు తీసుకోవాలని
ఇన్పుట్ వంటి ఒక పాత్ర లో

143
00:08:03,350 --> 00:08:06,580
మరియు మీరు ఒక బూలియన్ తిరిగి,
నిజమైన లేదా తప్పుడు గాని

144
00:08:06,580 --> 00:08:11,280
ఆ పాత్ర అనే అంశంపై ఆధారపడి
అప్పర్ కేస్ లేదా తక్కువ కేసు.

145
00:08:11,280 --> 00:08:14,610
"ఉన్నత" ఎందుకంటే మరియు "
తక్కువ "బూలియన్ క్రియలు,

146
00:08:14,610 --> 00:08:18,660
వారు మీరు ఒక బూలియన్ తిరిగి అని అర్థం,
మీరు మీ పరిస్థితుల్లో ఉపయోగించవచ్చు.

147
00:08:18,660 --> 00:08:23,490
కాబట్టి ఇక్కడ కోడ్ స్నిప్పెట్ అని మాత్రమే
ఉన్నత ఒకవేళ ఒక లేఖ వ్రాశారు.

148
00:08:23,490 --> 00:08:27,790
నేను నా పాత్ర డిక్లేర్డ్ చేసిన
లేఖ అప్పర్ కేస్ జెడ్ వుంటుంది

149
00:08:27,790 --> 00:08:33,440
ఆపై తిరిగి "అప్పర్"
నిజమైన, అప్పుడు నేను ఆ లేఖ ప్రింట్.

150
00:08:33,440 --> 00:08:38,200
>> మా సాధారణ ఉదాహరణకు తిరిగి గోయింగ్
రెండు ఒక కీ ద్వారా అక్షరం బదిలీ

151
00:08:38,200 --> 00:08:41,049
ఎలా మేము నిజంగా ఆ పని వస్తుందా?

152
00:08:41,049 --> 00:08:45,770
సరే, అక్షరాలు హాజరవుతారు
మరియు పూర్ణాంకాల చాలా దగ్గర సంబంధం.

153
00:08:45,770 --> 00:08:48,840
ప్రతి పాత్ర ఒక లో
సంబంధం పూర్ణ సంఖ్య విలువ

154
00:08:48,840 --> 00:08:53,260
ఇది ASCII చార్ట్ లో దొరికాయి తో,
ప్రతి పాత్ర యొక్క ASCII

155
00:08:53,260 --> 00:08:55,380
విలువ ప్రదర్శించబడుతుంది.

156
00:08:55,380 --> 00:08:58,940
సో ఒక అప్పర్ కేస్ ఒక సంబంధితంగా ఉంటుంది
65 ఒక ASCII విలువ

157
00:08:58,940 --> 00:09:02,270
మరియు ఒక చిన్న ఒక వరకు
97 ఒక ASCII విలువ.

158
00:09:02,270 --> 00:09:04,940
>> చూసేందుకు సంకోచించకండి
ఏ ASCII చార్ట్ ఆన్లైన్

159
00:09:04,940 --> 00:09:07,720
మీ కోసం ఈ విలువలు చూడటానికి.

160
00:09:07,720 --> 00:09:12,096
కాబట్టి ఈ పధ్ధతి మేము అని
అప్పర్ కేస్ A యొక్క పాత్ర తీసుకుని,

161
00:09:12,096 --> 00:09:18,200
దానికి పూర్ణాంక రెండు జోడించడానికి, మరియు అప్పుడు పొందుటకు
ఫలితంగా పాత్ర అప్పర్ కేస్ సి.

162
00:09:18,200 --> 00:09:23,720
ఆ ఎందుకంటే 65, ASCII వార్తలు
2 రాజధాని కోసం విలువ, ప్లస్,

163
00:09:23,720 --> 00:09:29,960
అనుగుణంగా, మాకు 67 ఇస్తుంది,
అప్పర్ కేస్ సి పాత్ర

164
00:09:29,960 --> 00:09:33,480
>> దురదృష్టవశాత్తు, విషయాలు
చాలా చాలా సింపుల్ కాదు.

165
00:09:33,480 --> 00:09:36,980
మేము ఒక సమీకరణం కలిగి
మనం పరిగణించాలి.

166
00:09:36,980 --> 00:09:43,590
ఇక్కడ అది ith సాంకేతికపాఠం అని మాకు చెబుతుంది
లేఖ ith సాదా అనుగుణంగా

167
00:09:43,590 --> 00:09:48,900
లేఖ, ప్లస్ key--
ఆ అన్ని మాడ్యులర్ 26.

168
00:09:48,900 --> 00:09:50,810
ఎందుకు ఆ సందర్భంలో?

169
00:09:50,810 --> 00:09:55,430
నుండి మా ఉదాహరణ తిరిగి వెళ్ళి తెలపండి
ముందు, రాజధాని, ఇంకా 2,

170
00:09:55,430 --> 00:09:57,590
మాకు రాజధానిగా సి ఇస్తుంది

171
00:09:57,590 --> 00:10:01,870
>> కాబట్టి సమీకరణ చేసే దరఖాస్తు
స్పెసిఫికేషన్ మాకు ఇస్తుంది,

172
00:10:01,870 --> 00:10:06,660
అప్పుడు యొక్క రాజధాని తీసుకుందాం
ప్లస్ 2 మరియు 26 ఆ mod.

173
00:10:06,660 --> 00:10:10,730
కాబట్టి రాజధాని, నేను అది చాలు ఉన్నప్పుడు
ఆ ఒకే కొటేషన్ మార్కులు,

174
00:10:10,730 --> 00:10:14,010
నాకు గా చికిత్స అనుమతిస్తుంది
పూర్ణాంకం, తద్వారా అనుమతిస్తుంది

175
00:10:14,010 --> 00:10:17,500
నాకు దాని ASCII విలువను 65 నటింపజేయాలని.

176
00:10:17,500 --> 00:10:20,080
65 ప్లస్ 2 67 ఉంది.

177
00:10:20,080 --> 00:10:25,210
67 mod 26 మాకు ఇస్తుంది 15,
కానీ ఆ నిజంగా కాదు

178
00:10:25,210 --> 00:10:32,590
మేము తెలుసు ఎందుకంటే సమంజసం
రాజధాని సి ASCII విలువను 67, 15 ఉంది.

179
00:10:32,590 --> 00:10:35,580
కాబట్టి మేము ఎలా ఆ పునరుద్దరించటానికి లేదు?

180
00:10:35,580 --> 00:10:39,840
>> బాగా, ఇక్కడ నేను అనుకొనే చెయ్యాలనుకుంటే
ఒక అక్షర సూచిక భావన.

181
00:10:39,840 --> 00:10:44,010
కాబట్టి మేము ఇప్పటికే గురించి మాట్లాడారు చేసిన
ప్రతి పాత్ర, దాని ASCII విలువ ఉంది

182
00:10:44,010 --> 00:10:48,810
కానీ నేను చెప్పేది బాగా, లెట్స్ చేర్చదలచిన
ప్రతి పాత్ర కూడా ఉన్నట్లు తాను భావించడం

183
00:10:48,810 --> 00:10:52,230
ఒక అక్షర సూచిక,
ఉదాహరణకు పేరు ఒక,

184
00:10:52,230 --> 00:10:58,800
వర్ణమాల యొక్క మొదటి అక్షరం వంటి,
సున్నా అక్షర సూచిక ఉంది.

185
00:10:58,800 --> 00:11:02,070
కాబట్టి ఇప్పుడు యొక్క దరఖాస్తు తెలియజేయండి
అదే సమీకరణ వంటి ముందు,

186
00:11:02,070 --> 00:11:05,040
కానీ ఒక అక్షర సూచిక ఉపయోగించి.

187
00:11:05,040 --> 00:11:07,810
>> కాబట్టి ఒక మేము వివరించిన విధంగా, సున్నా.

188
00:11:07,810 --> 00:11:15,640
కాబట్టి అప్పుడు సున్నా ప్లస్ రెండు, mod 26 తీసుకొని,
రెండు, mod 26, మాకు రెండు ఇస్తుంది వార్తలు.

189
00:11:15,640 --> 00:11:18,780
బాగా, పరంగా
ఒక అక్షర సూచిక,

190
00:11:18,780 --> 00:11:23,930
సి మూడవ అక్షరం
వర్ణమాల, కాబట్టి అనుగుణంగా

191
00:11:23,930 --> 00:11:26,290
రెండు యొక్క ఒక అక్షర సూచిక.

192
00:11:26,290 --> 00:11:29,850
కనుక ఇది ఉపయోగించి తెలుస్తుంది
ఈ సందర్భంలో అక్షర సూచిక

193
00:11:29,850 --> 00:11:32,840
వాస్తవానికి మాకు సరైన ఫలితం ఇస్తుంది.

194
00:11:32,840 --> 00:11:35,020
>> కాబట్టి ఇప్పుడు యొక్క పరిశీలించుకోవచ్చు
ఉంటే సమీకరణ రచనలు చూడడానికి

195
00:11:35,020 --> 00:11:37,210
ఒక అక్షర సూచిక తో.

196
00:11:37,210 --> 00:11:42,540
Y యొక్క అక్షర సూచిక వంటి 24
వర్ణమాలలో చివరి లేఖ రెండో.

197
00:11:42,540 --> 00:11:46,520
కాబట్టి అప్పుడు 24 ప్లస్ మా
రెండు యొక్క కీ US 26 ఇస్తుంది.

198
00:11:46,520 --> 00:11:54,750
26 mod 26 మాకు ఇస్తుంది 0, లకు ఇది అదృష్ట
మాకు, A లో అక్షర సూచిక

199
00:11:54,750 --> 00:11:59,100
కాబట్టి ఆశాజనక తగినంత అని రుజువు వార్తలు
అక్షర సూచిక పద్ధతి పనిచేస్తుంది.

200
00:11:59,100 --> 00:12:03,180
లేకపోతే, ప్రయత్నించండి సంకోచించకండి
కొన్ని ఉదాహరణలు మీ స్వంత.

201
00:12:03,180 --> 00:12:08,030
>> సరిగా చుట్టూ చేయడానికి
వర్ణమాల మరియు సీజర్ సమీకరణ దరఖాస్తు,

202
00:12:08,030 --> 00:12:11,280
అప్పుడు మేము అవసరం తెలుసు
అక్షర సూచికలు వ్యవహరించే.

203
00:12:11,280 --> 00:12:15,130
కానీ మేము ASCII ప్రారంభం
విలువలు, మరియు అప్పుడు మాత్రమే

204
00:12:15,130 --> 00:12:18,530
మేము అప్పుడు మార్చుకునేందుకు లేదు
అక్షర సూచిక.

205
00:12:18,530 --> 00:12:23,970
అక్కడ నుండి, ప్రింట్ చెయ్యడానికి, మేము అవసరం
మళ్ళీ ASCII విలువలు ఎదుర్కోవటానికి.

206
00:12:23,970 --> 00:12:28,350
కాబట్టి మేము ఎలా దొరుకుతుందని అవసరం
అక్షరక్రమంలో వరకు ASCII నుండి వెళ్ళి

207
00:12:28,350 --> 00:12:31,080
మరియు అక్షర నుండి ASCII కు.

208
00:12:31,080 --> 00:12:34,910
>> నేను గుర్తించడానికి మీరు దానిని వదిలి
ఒక పాత్ర మధ్య నమూనా

209
00:12:34,910 --> 00:12:38,590
మరియు దాని అక్షర
ఇండెక్స్ మరియు దాని ASCII విలువ.

210
00:12:38,590 --> 00:12:41,530
ఇప్పుడు, అయినప్పటికీ గుర్తుంచుకోవాలి
పట్టిక కుడి స్లయిడ్ ఈ

211
00:12:41,530 --> 00:12:45,630
కూడా రాజధాని అక్షరాలు చూపే, మేము
లేదో పరిగణించాలి

212
00:12:45,630 --> 00:12:48,915
వేరే నమూనా వర్తిస్తుంది
దిగువ బడిలో అక్షరాలు.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> కాబట్టి ఇప్పుడు మేము కనుగొన్నారు చేసిన
ఒకే పాత్ర మార్చేందుకు ఎలా,

215
00:12:55,840 --> 00:13:02,200
అప్పుడు మేము చేయాల్సిందల్లా స్కేలు
మొత్తం సాదా అంతటా వెళ్ళడానికి పైకి.

216
00:13:02,200 --> 00:13:04,260
కాబట్టి సాదా సమూహము.

217
00:13:04,260 --> 00:13:08,210
మాకు లక్కీ, ఒక స్ట్రింగ్ నిజంగా
కేవలం అక్షరాలు యొక్క వ్యూహం

218
00:13:08,210 --> 00:13:12,150
కాబట్టి ప్రతి పాత్ర యాక్సెస్ చెయ్యడానికి
ఒక స్ట్రింగ్, అన్ని మీరు చెయ్యవలసింది

219
00:13:12,150 --> 00:13:14,270
శ్రేణి సంజ్ఞామానం ఉపయోగిస్తారు.

220
00:13:14,270 --> 00:13:20,270
నేను రకం ఒక వేరియబుల్ కలిగి సే
అని స్ట్రింగ్ "టెక్స్ట్ = 'ఈ CS50 ఉంది.'"

221
00:13:20,270 --> 00:13:22,730
>> వెల్, అప్పుడు, క్రమంలో
ప్రతి పాత్ర యాక్సెస్,

222
00:13:22,730 --> 00:13:25,880
అన్ని నేను చేయాల్సిందల్లా
వేరియబుల్ టెక్స్ట్ ఉంది

223
00:13:25,880 --> 00:13:31,660
, అలాగే, ఇండెక్స్ సున్నా వద్ద టెక్స్ట్ చెప్పటానికి
సూచిక వద్ద రాజధాని టి టెక్స్ట్ అనుగుణంగా

224
00:13:31,660 --> 00:13:35,100
ఒకటి తక్కువ కేసు గం సూచించదు.

225
00:13:35,100 --> 00:13:38,110
మరొక ఉపయోగకరమైన ఫంక్షన్ ఉంది
స్ట్రింగ్ పొడవు విధి.

226
00:13:38,110 --> 00:13:40,760
సో ఒక స్ట్రింగ్ లో ఉత్తీర్ణత
ఆ ఫంక్షన్ చేరుకుంటాయి

227
00:13:40,760 --> 00:13:44,610
పూర్ణాంకం, ఆ స్ట్రింగ్ యొక్క పొడవు.

228
00:13:44,610 --> 00:13:47,060
>> మేము గురించి మాట్లాడారు చేసిన ఇప్పుడు ఆ
ఈ వివిధ అంశాలు,

229
00:13:47,060 --> 00:13:48,540
యొక్క కలిసి వాటిని తిరిగి ఉంచండి తెలియజేయండి.

230
00:13:48,540 --> 00:13:52,210
సో గాని నా pseudocode తిరిగి
కోడ్ లేదా మీ pseudocode

231
00:13:52,210 --> 00:13:55,920
మరియు ద్వారా వెళ్ళి నిర్ధారించుకోండి మీరు ఆ
ప్రతి ఒక్క పనిని ఎలా.

232
00:13:55,920 --> 00:14:01,520
argc మరియు argv ఉపయోగించి కీ పొందడం,
ఒక పూర్ణాంకం కీ చెయ్యడానికి, ఒక

233
00:14:01,520 --> 00:14:06,840
నేను, సాదా కోసం ప్రోత్సహించాడు
GetString, ఆపై సంభవింప

234
00:14:06,840 --> 00:14:09,590
ప్రతి పాత్ర మీద
సాదా స్ట్రింగ్,

235
00:14:09,590 --> 00:14:14,910
ప్రతి పాత్ర కేసు సంరక్షించడానికి
మరియు కీ ద్వారా ఆ పాత్ర మార్చగల

236
00:14:14,910 --> 00:14:17,520
మీరు ఆ భరోసా
అక్షరం చుట్టూ చుట్టడం,

237
00:14:17,520 --> 00:14:20,850
చివరకు ఆ సాంకేతికపాఠం ప్రింటింగ్.

238
00:14:20,850 --> 00:14:25,470
నా పేరు Amila, మరియు ఈ సీజర్ ఉంది.

239
00:14:25,470 --> 00:14:28,448

