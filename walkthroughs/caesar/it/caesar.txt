AMILA: Affrontiamo Cesare. In Cesare, lasciamo che l'utente per codificare un messaggio segreto. Quindi cerchiamo di immergersi in dettaglio e guardare le nostre cose da fare per questo problema. Quindi, prima, si ottiene la chiave da parte dell'utente. Poi si ottiene il testo in chiaro che vogliono codificare. Dopo di che, abbiamo cifrare per loro, e, infine, il risultato della stampa il testo cifrato. 

Quindi cominciamo con un esempio. Diciamo che si voleva per codificare il intero alfabeto con una chiave di due. Bene, il vostro intero alfabeto sarebbe solo essere spostato a lettere. Quindi, A dovrebbe codificare in C, B per D, C a E, così via e così via, fino ad arrivare a X, che codifica per Z o zed, a seconda di dove vieni. Poi Y sarebbe poi passare tutta la strada, avvolgere l'alfabeto per arrivare ad A, e infine l'ultima lettera del alfabeto, Z, zed, sarebbe codificare B. 

Hai capito? Diamo un'occhiata ad alcuni esempi. Il primo esempio è molto simile a quello che abbiamo appena spiegato sopra. Quindi, se ho codificare alcune sezione del alfabeto, da A a L, da una chiave di due, allora ottengo solo tutta la mia alfabeto spostato due lettere. 

Poi, nel mio prossimo esempio, la chiave è ancora due, così si dovrebbe ancora sapere che le lettere di aspettarsi. Ma qui si tratta di una frase. Questo è CS50. Quindi, si noterà che ho preservare il caso delle mie lettere, così eventuali lettere maiuscole sono anche lettere maiuscole nel testo cifrato. E qualsiasi minuscolo lettere nel testo in chiaro sono anche minuscole lettere nel testo cifrato. Ma io continuo le lettere e gli eventuali punti esclamativi o qualsiasi altra punteggiatura stesso. 

Quindi, ora che abbiamo un senso per il funzionamento del programma, sentitevi liberi di andare correre ancora un po ' esempi di proprio, se lo si desidera. Cominciamo con ottenere il tasto da parte dell'utente. Tradizionalmente, con altri problemi, abbiamo stato abituato ad ottenere tutti i numeri che abbiamo bisogno per chiedere conferma all'utente con la funzione getint. Ma questa volta stiamo effettivamente andando utilizzare l'argomento della riga di comando e una nuova funzione chiamata atoi. 

Quando si esegue il principale programma C, allora prende in due parameters-- int argc, che è il numero di argomenti passato, e poi argv, un array di stringhe che contiene l'elenco di tutti gli argomenti passato. Non è necessario in modo esplicito per dichiarare queste variabili. Sono calcolati per si dal compilatore. uso corretto per questo sarebbe per argc essere due in questo caso, perché l'utente deve passare in la chiamata al programma, ./caesar, e poi il tasto, qualunque sia il numero che desiderano. Quindi questo significa che argc deve essere due affinché un valido utilizzo di Cesare da eseguire. 

Quindi diamo un'occhiata a un esempio. Dire che ho già scritto e compilato un programma chiamato blastoff. Quindi, se ho eseguito nella riga di comando ./blastoff Team Rocket, beh, allora, argc sarebbe tre perché ho passato in tre argomenti distinti. Poi argv sarebbe simile a questa. E 'un array, e sarebbe contenere ciascuno dei tre corde. ./blastoff nel primo indice, squadra nel prossimo, e rucola nell'ultima. 

Parliamo di array per un secondo. Gli array sono strutture di dati che contengono più valori dello stesso tipo. Questo può tornare utile quando abbiamo hanno liste di numeri interi o stringhe. Basta ricordare che hanno per essere dello stesso tipo. In informatica, abbiamo amore a contare da zero, in modo da ricordare che gli array sono anche zero indicizzato. Quindi il primo elemento del mio allineamento sta per essere a indice zero. Quindi, in questo caso, quando ho un array di lunghezza quattro, quindi l'ultimo indice della ultimo elemento della mia serie è in realtà sta per essere a indice di tre, non quattro. Perché ricordate, abbiamo iniziare a contare da zero. 

Ecco un esempio di come si potrebbe creare un array di tua scelta. Quindi dico che volevo conservare la mia tre nomi cane preferito. Poi vorrei creare un array di stringhe. Quindi mi sento di dichiarare il tipo, stringa e poi mettere il nome della matrice, i cani, e poi in quelli piazza staffe messo la dimensione del array-- in questo caso, tre. 

Così la mia prima voce sta andando per essere cani a indice zero, e che sta per essere Milo. Poi cani in un indice sta per essere goofy, cara Mochi, e poi l'ultimo ingresso, la terza voce di indice due, sta per essere carino, dolce Elphie. Si noterà che il formato per il riempimento in questo array è molto simile a come si potrebbe dichiarare qualsiasi altra variabile in cui si ha il nome della variabile seguito da il valore che si desidera in essa memorizzati. L'unica differenza questo caso è che si ricordarsi di mettere all'indice del valore tra parentesi quadre. E lì abbiamo il nostro tre cani preferiti. 

Ma, ahimè, è il momento per tornare a Cesare. Ricordate che l'uso corretto per il utente sta per essere passando non solo il nome del ./caesar programma, ma anche la chiave che vogliono spostare il testo in chiaro da. Quindi questo significa che argc deve essere due. Devono passare two-- né più, né meno di due argomenti della riga di comando. 

Ora, per quanto riguarda argv? Beh, sappiamo già che la serie sta per essere di lunghezza due, ma ciò che è contenuto in ogni elemento? Ebbene, il primo elemento sta per essere ./caesar, e poi l'elemento successivo sta per contenere la chiave che l'utente ha inserito. Ora, se hanno usato correttamente per l'utilizzo di Cesare, poi che stanno andando a digitare un numero. Ma anche se il carattere che tipo è un numero, è del tipo di dati stringa. 

Quindi, come possiamo convertire tale stringa in un intero? Quindi dire che ho num, una stringa, contenente la stringa 50. Se voglio convertire tale a un numero intero, poi ho semplicemente dichiarare una nuova variabile, un intero i, chiamando atoi. Passo nella mia variabile stringa, num, e allora io poi contenere il numero 50. Assicurati di controllare l'uomo pagine per la funzione atoi per verificare quale libreria è in, così come quello che valorizzarla restituirà se la stringa passata in non contiene tutti i numeri. 

Quindi, ora che abbiamo ottenuto la chiave, il passo successivo è quello di ottenere il testo in chiaro dall'utente. Ora, questo sta per meno complicato di navigazione intorno al argomenti della riga di comando. Tutto ciò che dobbiamo fare è chiamare la funzione getString per richiedere all'utente di dare noi una stringa, ma ricorda di verificare le specifiche per il modo in cui potrebbe desiderare di richiedere all'utente per questo. 

Ora veniamo alla cuore della problem-- Come per cifrare il testo in chiaro. Beh, prima, parliamo di come per cifrare un carattere per volta, e poi ci rivolgiamo come iterare su tutto il testo in chiaro. Ho scritto alcuni pseudocodice per il problema Cesare. Vi incoraggio a scrivere il proprio così. Potrebbe non sembrare identici a la mia, e va bene, ma fino a come l'idea generale è la stessa. 

I primi tre passi abbiamo già fatto. Abbiamo ottenuto la chiave l'argomento della linea di comando, abbiamo girato quella chiave in un numero intero, e abbiamo viene richiesto all'utente per il testo in chiaro che vogliono per cifrare. Allora la prossima grande pezzo è che per ogni carattere nella stringa di testo in chiaro, se è alfabetico, vogliamo preservare custodia e spostamento di esso. Con preservare caso, quello che ho dire è che tutto maiuscolo le lettere devono rimanere in alto caso e tutte le lettere minuscole dovrebbe rimanere in minuscolo. Così, poi dopo ci spostiamo quelli, poi stampiamo il testo cifrato. 

Qui ci sono tre funzioni che sono in corso di tornare utile per questo problema. Ricordate sopra quando ho dato il ad esempio per spostare questo è CS50? Ricordate che il 50 e il punto esclamativo non spostare? Quindi, come possiamo dire se ci necessario spostare una lettera o no? Ebbene, "è alpha," se si passa un carattere, restituisce vero se quel personaggio è una lettera e false altrimenti. Per aiutarvi con preservando capitalizzazione sono le funzioni "viene superiore "e" inferiore ". 

Queste due funzioni anche prendere in un singolo carattere come input e restituire un booleano, vero o falso a seconda che quel carattere è maiuscolo o minuscolo. Poiché "è superiore" e "è inferiore "sono funzioni booleane, il che significa che si restituiscono un valore booleano, è possibile utilizzare questi nelle vostre condizioni. Quindi, ecco un frammento di codice che solo stampa una lettera, se è maiuscola. Così ho dichiarato il mio personaggio lettera da maiuscolo zed e poi se "è superiore" ritorni vero, allora stampo quella lettera. 

Tornando al nostro esempio semplice di spostando l'alfabeto da una chiave di due, come possiamo effettivamente ottenere che al lavoro? Beh, si scopre che i personaggi e interi sono strettamente correlati. Ogni personaggio ha un valore intero associato con trovato nella tabella ASCII, dove ASCII di ogni personaggio viene visualizzato il valore. Quindi, un maiuscole A corrisponde per un valore ASCII di 65 e un minuscolo un a un valore ASCII di 97. 

Sentitevi liberi di guardare in alto qualsiasi grafico ASCII in linea per vedere questi valori per lei. Così che cosa questo significa è che possiamo prendere il carattere di lettere maiuscole A, aggiungere il numero intero di due ad esso, e quindi ottenere il carattere maiuscola C come risultato. Questo perché 65, l'ASCII valore per il capitale A, più 2, ci dà 67, che corrisponde al carattere gambale caso C. 

Purtroppo, le cose non sarà abbastanza essere così semplice. Abbiamo un'equazione che dobbiamo considerare. Qui ci dice che il testo cifrato esimo lettera corrisponde al testo in chiaro esima lettera, più il key-- tutto questo, modulare 26. Perché è che il caso? Torniamo al nostro esempio da prima, dove il capitale A, più 2, ci dà il capitale C. 

Così applicando l'equazione che la specificazione ci dà, poi prendiamo maiuscola più 2 e mod che entro il 26. Così maiuscola, quando ho messo in quelle singole virgolette, mi permette di trattarlo come un intero, in modo che permette me per lanciare al suo valore ASCII, 65. 65 + 2 fa 67. 67 mod 26 ci dà 15, ma che in realtà non dare un senso perché sappiamo che la capitale valore ASCII C è 67, non 15. Quindi, come possiamo conciliare questo? 

Bene, qui vorrei porre la nozione di un indice alfabetico. Quindi abbiamo già parlato di come ogni personaggio ha il suo valore ASCII, ma mi piacerebbe dire, beh, andiamo pensare a ogni personaggio avendo anche un indice alfabetico, dove A, per esempio, come prima lettera dell'alfabeto, ha un indice alfabetico di zero. Così ora cerchiamo di applicare la stessa equazione come prima, ma utilizzando un indice alfabetico. 

Quindi A è pari a zero, come abbiamo definito. Così poi prendendo a zero più due, mod 26, Sono due, mod 26, che ci dà due. E bene, in termini di un indice alfabetico, C è la terza lettera del alfabeto, di modo che corrisponderebbe ad un indice alfabetico dei due. Così sembra che utilizzando il indice alfabetico in questo caso in realtà ci dà il risultato corretto. 

Così ora cerchiamo di controllare a vedere se le opere equazione con un indice alfabetico. indice alfabetico di Y è come il 24 secondo per ultima lettera dell'alfabeto. Allora 24 più il nostro chiave di due ci dà 26. 26 mod 26 ci dà 0, che, per fortuna Stati Uniti, è l'indice alfabetico per A. Così si spera che sia sufficiente che la prova il metodo indice alfabetico funziona. In caso contrario, non esitate a provare alcuni esempi di tua scelta. 

Per avvolgere attorno ad esso alfabeto e applicare l'equazione Cesare, allora sappiamo che abbiamo bisogno di trattare con indici alfabetici. Ma iniziamo con ASCII valori, e solo allora dobbiamo poi convertire in l'indice alfabetico. Da lì, per stampare, abbiamo bisogno a che fare con i valori ASCII di nuovo. Quindi abbiamo bisogno di capire come andare da ASCII a alfabetici e da alfabetico a ASCII. 

Così lascio a voi per capire il modello tra un carattere e la sua alfabetico l'indice e il suo valore ASCII. Ora, ricordate che anche se questa tabella direttamente sulla slitta mostra le lettere maiuscole, abbiamo anche prendere in considerazione o meno un modello diverso si applica per i caratteri minuscoli. 

Quindi, ora che abbiamo capito come spostare un singolo carattere, allora tutto quello che dobbiamo fare è quello di scala fino a passare attraverso l'intero testo in chiaro. Così il testo in chiaro è una stringa. Fortunatamente per noi, una stringa è davvero solo un array di caratteri, Quindi, al fine di accedere a ogni personaggio di una stringa, tutto quello che dovete fare è quello di utilizzare la notazione di matrice. Dire che ho una variabile di tipo stringa chiamata "text = 'questo è CS50.'" 

Allora, per accedere a ogni personaggio, tutto quello che ho a che fare con Il testo variabile è a dire bene, testo a indice zero, che corrisponde al capitale T. testo in corrispondenza dell'indice una corrisponde minuscolo h. Un'altra funzione utile è la funzione lunghezza della stringa. Quindi, passando una stringa di che funzione restituirà un numero intero, la lunghezza di tale stringa. 

Ora che abbiamo parlato tutti questi elementi diversi, cerchiamo di mettere di nuovo insieme. Quindi tornare a uno mia pseudocodice codice o il vostro pseudocodice e passare attraverso e assicurarsi che si sapere come fare ogni singola cosa. Ottenere la chiave utilizzando argc e argv, ruotando la chiave in un numero intero, un a I, spingendo per testo in chiaro, getString, e quindi l'iterazione su ogni personaggio la stringa di testo in chiaro, preservando il caso di ciascun carattere e spostando tale carattere dalla chiave, assicurando che sei avvolgendo intorno l'alfabeto, infine di stampare tale testo cifrato. Il mio nome è Amila, e questo era Cesare. 