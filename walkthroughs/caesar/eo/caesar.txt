AMILA: Ni pritraktas Cezaro. En Cezaro, ni permesas al la uzanto kodi sekreta mesaĝo. Do ni plonĝi juste kaj rigardi en nia por-dos por tiu problemo. Do unue, ni ricevas la ŝlosilon de la uzanto. Tiam ni preni la tekston ke ili volas kodi. Post tio, ni encipher gxin por ili, kaj fine ni presi sian ĉifrita teksto. 

Do ni komencu per ekzemplo. Diru vi volis kodi la tuta alfabeto kun ŝlosilo de du. Nu, via tuta alfabeto estus nur esti ŝanĝita al literoj. Do A estus kodi al C, B al D, C al E, tiel plu kaj tiel plu, ĝis vi akiras al X, kiu kodas al Z aŭ Zed, dependanta sur kie vi estas de. Tiam Y devus tiam movi la tutan vojon, envolver ĉirkaŭ la alfabeto por akiri al A, kaj tiam fine la lasta litero de la alfabeto, Z, Zed, estus kodi al B. 

Vi tion aŭdas? Ni rigardu kelkajn ekzemplojn. La unua ekzemplo tie estas tre simila al kion ni ĵus klarigis supre. Do se mi kodi iu sekcio de la alfabeto, A tra L, per ŝlosilo de du, tiam mi simple akiri mian tutan alfabeto ŝanĝiĝis du literoj. 

Tiam, en mia sekva ekzemplo, la ŝlosilo estas ankoraŭ du, tiel vi devus ankoraŭ scias kiun literoj atendi. Sed tie estas frazo. Ĉi tiu estas CS50. Do vi rimarkos ke mi konservi la kazon de miaj leteroj, tiel ajna majuskla literoj estas ankaŭ majuskla literoj en la ĉifrita teksto. Kaj neniu minuskla literojn en la teksto ankaŭ minuskla literoj en la ĉifrita teksto. Sed mi teni la literoj kaj neniu Krisigno aŭ ajna alia interpunkcia la sama. 

Do nun ke ni havas sencon cxar kiel la programo funkcias, bonvolu iri kuri iuj pli ekzemploj de via propra, se vi deziras. Komencu kun akiranta la ŝlosilo de la uzanto. Tradicie, kun aliaj problemoj, ni havas kutimis ricevi ajna nombro ke ni bezonas per instigante la uzanto kun la funkcio GetInt. Sed ĉifoje ni efektive tuj uzi la komandlinio argumento kaj nova funkcio nomita atoi. 

Kiam vi kuros la ĉefa programo en C, tiam prenas en du parameters-- int argc, kiu estas la nombro de argumentoj pasis en, kaj tiam argv, tabelo de kordoj kiuj enhavas la liston de ĉiuj la argumentoj pasis. Vi ne eksplicite havas deklari tiuj variabloj. Ili komputita por vi per la tradukilo. Korekta uzado por tiu estus por argc esti du en tiu kazo, ĉar la uzanto devas pasi en la alvoko al la programo, ./caesar, kaj tiam la ŝlosilo, ajn nombro ili volas. Do tio signifas ke argc devas esti du en ordo por validan uzon de Cezaro esti ekzekutita. 

Do ni rigardu ekzemplon. Diru mi jam skribis kaj kompilita programo nomata blastoff. Do se mi kuris en la komandlinio ./blastoff Teamo Rocket, nu, tiam, argc estus tri ĉar mi pasis en tri malsamaj argumentoj. Tiam argv aspektus kiel tio. Ĝi estas tabelo, kaj tio estus enhavas ĉiu el la tri kordoj. ./blastoff en la unua indico, teamo en la sekva, kaj raketo en la lasta. 

Ni parolu pri arrays por sek. Arrays estas datumstrukturoj, kiuj gardas multnombraj valoroj de la sama tipo. Tiu povas veni en oportuna kiam ni havas listojn de entjeroj aŭ kordoj. Nur memori ke havas esti la sama tipo. En komputiko, ni amas rakonti de nulo, tiel memoras ke tabeloj Ankaŭ estas nulo-indeksitaj. Do la unua elemento de mia tabelo tuj estos ĉe indekso nulo. Do en ĉi tiu kazo, Kiam mi tabelo de longo kvar, tiam la lasta indekso de la lasta elemento de mia tabelo fakte tuj estos indekso tri, ne kvar. Ĉar rememoru, ni komenci kalkulon je nulo. 

Jen ekzemplo de kiel vi povus krei tabelon de via propra. Tiel diru mi volis konservi miajn tri preferataj hundo nomoj. Tiam mi kreus tabelo de kordoj. Do mi deklarus la tipo, kordoj, kaj tiam meti la nomon de la tabelo, hundoj, kaj tiam el kvadrato krampoj metu la grandeco de la tabelo en ĉi tiu kazo, tri. 

Do mia unua eniro tuj esti hundoj ĉe indekso nulo, kaj ke tuj estos Milo. Tiam hundoj ĉe indekso oni tuj esti ridinda, karulo Mochi, kaj tiam la lasta eniro, la tria eniro ĉe indekso du, tuj estos bela, dolĉa Elphie. Vi rimarkos ke la formato por plenigi tiun tabelo Estas tre kiel kiel vi povus deklari ajna alia variablo kie vi havas la variablo nomo sekvata de la valoro kiun vi volas stokitaj en ĝi. La nura diferenco en tiu kazo estas ke vi devas memori meti la indekso de la valoro en kvadrataj krampoj. Kaj tie ni havas niajn tri preferataj hundoj. 

Sed ve, estas tempo reiri al Cezaro. Memoru ke korekta uzado por la uzanto tuj estos pasante en ne nur la nomo de la programo ./caesar, sed Ankaŭ la kerna ke ili volas ŝanĝi ilia teksto de. Do tio signifas ke argc devas esti du. Ili devas pasi en two-- ekzistos, neniu malpli ol du komandlinio argumentoj. 

Nun, kio pri argv? Nu, ni jam scias ke la tabelo tuj estos de longo du, sed kio enhavis en ĉiu elemento? Nu, la unua elemento tuj estos ./caesar, kaj tiam la sekva elemento tuj enhavas la ŝlosilo kiu la uzanto tajpas in. Nun, se ili uzis ĝin ĝuste por la uzado de Cezaro, tiam ili tuj tajpi en kelkaj. Sed kvankam la karaktero ke ili tajpas estas nombro, ĝi estas de datumtipo kordoj. 

Do kiel ni konverti ke ŝnuro al entjero? Tiel diru mi num, ŝnuro, enhavanta la ĉeno 50. Se mi volas konverti ke por entjero, tiam mi simple deklari nova variablo, oni entjero mi, nomante atoi. Mi pasas en mia ŝnuro varia, num, kaj tiam mi havos tiam enhavas la numeron 50. Fari certe kontroli la viro paĝoj pri la atoi funkcio kontroli kiun biblioteko estas en, tiel kiel kion taksi ĝin revenos se la kordo pasis en ne enhavas ĉiuj nombroj. 

Do nun ke ni alvenas la ŝlosilo, la sekva paŝo estas akiri la fontan tekston de la uzanto. Nun, ĉi tiu tuj malpli komplika ol navigi ĉirkaŭ la komandliniajn argumentojn. Ĉiuj ni devi fari estas alvoko la GetString funkcio suflori la uzanto doni ni kordo, sed memoru kontroli la especificaciones por kiom ni eble volas instigas la uzanton por. 

Nun ni venas al la koro de la problem-- kiel encipher la kompletan tekston. Nu, unue, ni parolu pri kiel al encipher unu signo samtempe, kaj tiam ni trakti kiel persisti super la tuta teksto. Mi verkis iuj _pseudocode_ cxar la cezaro problemo. Mi instigas vin skribi vian propran tiel. Eble ne aspektas identaj al mia, kaj tio estas okej, sed kiel longe kiel la ĝenerala ideo estas la sama. 

La unuaj tri paŝoj Ni jam faris. Ni alvenas la ŝlosilo de la komandlinio argumento, ni turnis ke ŝlosilaj en entjero, kaj ni havas instigis la uzanto por la teksto ke ili volas encipher. Do tiam la sekva granda bloko estas ke por ĉiu karaktero en la teksto kordoj, se ĝi estas alfabeta, ni volas konservi lia kazo kaj ŝanĝi ĝin. Per konservi kazo, kion mi signifas estas ke ĉiuj majusklo leteroj devus resti supra kazo kaj ĉiuj minuskla literoj devus resti minuskle. Tial post ni ŝanĝi tiujn, tiam ni presi la ĉifrita teksto. 

Tie estas tri funkcioj kiuj tuj veni en oportuna por tiu problemo. Memoru super kiam mi donis la Ekzemple por sxangxigxantaj tiu estas CS50? Memoru ke la 50 kaj la Krisigno ne movi? Do kiel ni povas distingi, ĉu ni bezonas movi leteron aŭ ne? Nu, "estas alfa," se vi pasi ĝin karaktero, revenos vera se tiu karaktero estas letero kaj falsaj alie. Helpi vin kun konservado capitalización estas la funkcioj "estas supra "kaj" estas pli malalta. " 

Tiuj du funkcioj ankaŭ preni en sola karaktero kiel enigo kaj redoni vin Bulea, ĉu vera aŭ malvera Dependanta sur ĉu tiu karaktero estas majuskla aŭ minuskla. Ĉar "estas supera" kaj "estas malalta "estas Bulea funkcioj, Signifanta ke ili deturnu vin Bulea, Vi povas uzi ĉi tiujn en via kondiĉoj. Do jen fragmento de kodo kiu nur presas leteron, se ĝi estas majuskla. Do mi deklaris mian karakteron letero esti la supra kazo Zed kaj tiam se "estas supera" revenoj vera, tiam Mi presi tiu letero. 

Revenanta al nia simpla ekzemplo de sxangxigxantaj la alfabeto per ŝlosilo de du, kiel ni reale preni ke labori? Nu, tio rezultas ke karakteroj kaj entjeroj estas tre proksime rilataj. Ĉiu karaktero havas entjera valoro asociita kun ĝi troviĝas en la ASCII-diagramo, kie ĉiu karaktero ASCII valoro estas montrita. Tiel supra kazo A respondas al ASCII valoro de 65 kaj minuskla a al an ASCII valoro de 97. 

Bonvolu rigardi supren ajna ASCII abako rete vidi tiujn valorojn por vi mem. Do kion tio signifas estas ke ni povas preni la karakteron de majuskla A, aldonu la entjera du al ĝi, kaj tiam akiri la karaktero majuskla C rezulte. Tio estas ĉar 65, la ASCII valoro por ĉefurbo A, plus 2, nin tostas 67, kiu respondas al la karaktero de majuskla C 

Bedaŭrinde, aferoj ne tute tiel simpla. Ni havas ekvacion kiu ni devas konsideri. Jen ĝi diras nin ke la Ith ĉifrita teksto letero respondas al la Ith teksto letero, plus la key-- ĉiuj kiuj, modula 26. Kial estas ke la kazo? Ni reiru al nia ekzemplo de antaŭe, kie ĉefurbo A, plus 2, donas al ni ĉefurbo C. 

Do apliki la ekvacion, kiu la specifo donas nin, tiam ni prenos ĉefurbo A plus 2 kaj mod kiu per 26. Do ĉefurbo A, kiam mi metas ĝin en tiuj sola citiloj, permesas al mi trakti ĝin kiel entjero, tial permesas mi jxetis gxin al lia ASCII valoro, 65. 65 plus 2 estas 67. 67 mod 26 donas al ni 15 sed tio ne vere sencon ĉar ni scias ke la majuskla C ASCII valoro estas 67, ne 15. Do kiel ni repacigi ke? 

Nu, jen mi ŝatus premisi la nocio de alfabeta indekso. Do ni jam parolis pri kiel ĉiu karaktero havas sian ASCII valoro, sed mi ŝatus diri, nu, ni pensas pri ĉiu karaktero ankaŭ havi alfabeta indekso, kie A ekz kiel la unua litero de la alfabeto, havas alfabeta indekso de nulo. Do nun ni aplikas la sama ekvacio kiel antaŭe, sed uzanta alfabeta indekso. 

Tiel A estas nulo, kiel ni difinis. Tial prenante nulo plus du, mod 26, jen du, mod 26, kiu donas al ni du. Kaj bone, laŭ alfabeta indekso, C estas la tria litero en la alfabeto, do kiu respondus por alfabeta indekso de du. Tial ĝi similas ke uzante la alfabeta indekso tiukaze fakte donas al ni la korektan rezulton. 

Do nun ni kontrolu ĉu la ekvacio verkoj kun alfabeta indekso. Y la alfabeta indekso estas 24 kiel la dua al lasta letero en la alfabeto. Tial 24 plus nia ŝlosilo de du al ni 26. 26 mod 26 donas ni 0, kiu, feliĉe por ni, la alfabeta indekso de A. Tiel espereble tio sufiĉa provo ke la alfabeta indekso metodo funkcias. Se ne, bonvolu provi iuj ekzemploj de via propra. 

Por konvene envolver ĉirkaŭ la alfabeto kaj apliki la cezaro ekvacio, tiam ni scias ke ni devas trakti alfabeta indeksoj. Sed ni komencu per ASCII valoroj, kaj nur tiam ni tiam konverti al la alfabeta indekso. De tie, por presi, ni bezonas trakti la ASCII valoroj denove. Do ni devas kalkuli ekstere kiel iri de ASCII al Alfabeta kaj el alfabeta al ASCII. 

Do mi lasos al vi eltrovi la mastro inter gravulo kaj lia alfabeta indekso kaj ĝia ASCII valoro. Nun, memoru ke kvankam ĉi tablo dekstre sur la glito montras la majusklojn, ni ankaŭ devas konsideri ĉu aŭ ne malsama skemo validas cxar la minusklan karakteroj. 

Do nun ke ni eltrovis kiel ŝanĝi sola karaktero, tiam ĉiuj ni devas fari estas skalo kiu supren iri tra la tuta teksto. Do la fonta teksto estas ĉeno. Bonsorta por ni, ŝnuro estas vere nur tabelo de signoj, tiel por aliri ĉiu karaktero de kordo, ĉiuj vi devas fari estas uzi tabelo skribmaniero. Diru mi havas variablo de tipo ŝnuro nomita "text = 'tiu estas CS50.'" 

Nu, do por aliri ĉiu karaktero, ĉiuj mi devi fari kun la variablo teksto diri bone, teksto ĉe indekso nulo, ke respondas al ĉefurbo T. Teksto indekso respondas al la minuskla h. Alia utila funkcio estas la kordo longo funkcio. Tiel pasante en cxeno al domadministranto revenos entjera, la longo de tiu linio. 

Nun ke ni jam parolis pri ĉiuj tiuj malsamaj elementoj, ni metis ilin reen kune. Tiel reveni al ĉu mia _pseudocode_ kodo aŭ via _pseudocode_ kaj iri tra kaj fari certe ke vi scipovas fari ĉiu unuopa afero. Akiranta la ŝlosilon uzante argc kaj argv, turninte la ŝlosilon en entjero, a al mi, instigante por teksto, GetString kaj tiam ripetanta super ĉiu karaktero en la teksto kordoj, konservante la kazon de ĉiu karaktero kaj sxangxigxantaj tiu karaktero de la ŝlosilo, certigante ke vi estas ĉirkaŭvolvinte ĉirkaŭ la alfabeto, fine presi ke ĉifrita teksto. Mia nomo estas Amila, kaj tio estis Cezaro. 