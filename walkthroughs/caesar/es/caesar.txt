AMILA: Vamos a hacer frente a César. En César, permitimos que el usuario para codificar un mensaje secreto. Así que vamos a bucear en derecho y mirar en nuestras tareas pendientes para este problema. Así que, primero, se obtiene la clave del usuario. Entonces conseguimos el texto plano que quieren codificar. Después de eso, se cifran para ellos, y, finalmente, es la impresión de su texto cifrado. 

Así que vamos a empezar con un ejemplo. Di que quieres codificar el toda alfabeto con una llave de dos. Bueno, todo el alfabeto haría acaba de ser desplazado a las cartas. Así que sería una codificar a C, B D, C y E, así sucesivamente y así sucesivamente, hasta llegar a X, que codifica a la Z o zeta, dependiendo de donde eres. Entonces Y entonces cambiar todo el camino, envolver alrededor del alfabeto para llegar a A, y, finalmente, la última letra de la alfabeto, Z, zeta, codificaría a B. 

¿Lo tienes? Veamos algunos ejemplos. El primer ejemplo es muy similar a lo que se acaba de explicar. Así que si puedo codificar alguna sección del alfabeto, A a L, por una llave de dos, entonces por lo menos meter toda alfabeto cambió dos cartas. 

Entonces, en mi siguiente ejemplo, la clave sigue siendo dos, por lo que aún debe saber que las letras a esperar. Pero aquí se trata de una frase. Esto es CS50. Así se dará cuenta de que yo preservar el caso de mis cartas, por lo que cualquier letras mayúsculas son también las letras mayúsculas en el texto cifrado. Y cualquier minúsculas letras en el texto llano También se escriben en minúscula letras en el texto cifrado. Pero guardo las letras y cualquier signo de exclamación o cualquier otro puntuacion la misma. 

Así que ahora que tenemos un sentido para el funcionamiento del programa, no dude en ir correr un poco más ejemplos de su propia, si lo desea. Vamos a empezar con conseguir la clave del usuario. Tradicionalmente, con otros problemas, hemos acostumbrado a conseguir cualquier número que nos necesita por preguntar al usuario con la getint función. Pero esta vez estamos realmente va utilizar el argumento de la línea de comandos y una nueva función llamada atoi. 

Cuando se ejecuta el principal programa en C, entonces se toma en dos parameters-- int argc, que es el número de argumentos aprobada en, y luego argv, una matriz de cadenas que contiene la lista de todos los argumentos pasado. No es necesario que de forma explícita para declarar estas variables. Están calculados para por el compilador. El uso correcto para esto sería para argc sea dos en este caso, porque el usuario tiene que pasar en la llamada al programa, ./caesar, y luego la tecla, cualquiera que sea el número que deseen. Eso significa que debe haber dos argc Para que un uso válido de César para ser ejecutado. 

Así que vamos a ver un ejemplo. Digamos que ya he escrito y compilado un programa llamado despegue. Así que si me encontré en la línea de comandos ./blastoff Equipo Rocket, bueno, entonces, argc serían tres, porque yo aprobada en tres argumentos distintos. Entonces argv se vería así. Es una matriz, y sería contener cada una de las tres cadenas. ./blastoff en el primer índice, el equipo en el siguiente, y el cohete en el pasado. 

Vamos a hablar acerca de las matrices de un segundo. Las matrices son estructuras de datos que mantienen varios valores del mismo tipo. Esto puede ser útil cuando nos tener listas de números enteros o cadenas. Sólo recuerda que tienen a ser del mismo tipo. En informática, nos amor a contar desde cero, a fin de recordar que las matrices son también cero-indexada. Así que el primer elemento de mi matriz va a ser en el índice cero. Así pues, en este caso, cuando tengo una matriz de longitud cuatro, a continuación, el último índice de la último elemento de mi matriz es en realidad va a ser en el índice de tres, no cuatro. Porque recuerda, nos comenzará a contar desde cero. 

He aquí un ejemplo de cómo se podría crear una matriz de su cuenta. Así que decir que quería guardar mi tres nombres perro preferido. A continuación, me gustaría crear una matriz de cadenas. Así que me gustaría declarar el tipo, secuencia, y a continuación, poner el nombre de la matriz, perros, y luego en los cuadrados soportes de poner el tamaño de la array-- en este caso, tres. 

Así que mi primera entrada va para ser perros en el índice cero, y que va a ser Milo. A continuación, los perros en el índice uno va a ser torpe, Mochi querida, y luego la última entrada, la tercera entrada en el índice dos, va a ser lindo, dulce Elphie. Se dará cuenta de que el formato para el llenado en esta matriz es muy parecida a cómo se puede declarar cualquier otra variable donde usted tiene el nombre de la variable seguido de el valor que desea almacenar en él. La única diferencia en este caso es que se Hay que recordar que poner el índice del valor entre corchetes. Y ahí tenemos nuestra tres perros favoritos. 

Pero, por desgracia, es el momento para volver a César. Recuerde que el uso correcto de la usuario va a ser pasando en no sólo el nombre de la ./caesar programa, pero También la llave que quieren cambiar su texto plano por. Eso significa que argc debe haber dos. Ellos deben pasar en dos-- ni más ni menos de dos argumentos de línea de comandos. 

Ahora, ¿qué pasa con argv? Bueno, ya sabemos que la matriz va a tener una longitud de dos, pero lo que está contenida en cada elemento? Bueno, el primer elemento va a ser ./caesar, y luego el siguiente elemento se va a contener la clave que el usuario escribió. Ahora, si se utilizan correctamente para el uso de César, a continuación, van a escribir un número. Pero a pesar de que el carácter que tipo es un número, que es de tipo cadena de datos. 

Entonces, ¿cómo convertir ese cadena en un entero? Así que decir que tengo num, una cadena, que contiene la cadena 50. Si quiero convertir ese a un entero, entonces yo simplemente declarar una nueva variable, una entero i, llamando atoi. Yo paso en mi variable de cadena, num, y entonces yo entonces contendrá el número 50. Asegúrese de revisar el hombre páginas para la función atoi para comprobar qué biblioteca es en, así como qué valor devolverá si la cadena pasó en no contiene todos los números. 

Así que ahora que hemos conseguido la clave, el siguiente paso es conseguir que el texto en claro por parte del usuario. Ahora, esto va a ser menos complicado que navegar alrededor de la argumentos de línea de comandos. Todo lo que tenemos que hacer es llamar la función getString para pedir al usuario para dar somos una cadena, pero recuerda para comprobar las especificaciones de la forma en que puede ser que desee pedir al usuario para eso. 

Ahora llegamos a la corazón de la problema-- cómo cifrar el texto en claro. Bueno, en primer lugar, vamos a hablar acerca de cómo para cifrar un carácter a la vez, y luego vamos a abordar cómo iterar a lo largo de todo el texto en claro. He escrito algunos pseudocódigo para el problema de César. Os animo a escribir su propia también. Podría no parecer idénticos a la mía, y eso está bien, pero siempre como la idea general es la misma. 

Los primeros tres pasos que ya hemos hecho. Hemos recibido la llave de el argumento de línea de comandos, hemos dado vuelta a esa tecla en un entero, y hemos se le solicita al usuario que el texto plano que quieren cifrar. Así entonces el siguiente trozo grande es que para cada carácter en la cadena de texto claro, si es alfabético, queremos preservar su caso y lo desplazan. Por preservar caso, lo que quieren decir es que todo en mayúsculas cartas deben seguir siendo superior caso y todas las letras minúsculas debe permanecer en minúsculas. Así que a continuación, después cambiamos aquellos, a continuación, imprimimos el texto cifrado. 

Aquí hay tres funciones que se van a ser muy útil para este problema. Recuerde arriba cuando me dio el ejemplo para el desplazamiento de este es CS50? Recuerde que el 50 y el signo de exclamación no cambió? Entonces, ¿cómo podemos saber si estamos que tenga que cambiar una letra o no? Bueno, "es alfa," si se le pasa un personaje, devolverá verdadero si ese personaje es una carta y falso en caso contrario. Para ayudarle con capitalización de la preservación son las funciones "se superior "e" es menor ". 

Estas dos funciones también toman en un solo personaje como entrada y devolver un booleano, ya sea verdadera o falsa dependiendo de si ese carácter en mayúscula o minúscula. Porque "es superior" e "es inferior "son funciones de Boole, lo que significa que se devuelven un booleano, puede utilizar éstos en sus condiciones. Así que aquí está un fragmento de código que sólo imprime una carta si es mayúscula. Así que he declarado mi personaje carta a ser la caja superior zed y luego, si "es" retornos superiores verdad, entonces puedo imprimir esa letra. 

Volviendo a nuestro ejemplo simple de cambiando el alfabeto por una llave de dos, ¿cómo podemos conseguir que funcione? Pues bien, resulta que los caracteres y números enteros están muy estrechamente relacionados. Cada personaje tiene una valor entero asociado con lo encontrado en la tabla ASCII, donde ASCII de cada carácter Se muestra el valor. Por lo que una caja superior corresponde una a un valor ASCII de 65 y una minúscula de un valor ASCII de 97. 

No dude en consultar cualquier gráfico ASCII en línea para ver estos valores por sí mismo. Así que lo que esto significa es que podemos tomar el carácter de mayúsculas A, añadir el número entero de dos a ella, y luego el carácter superior caso C como resultado. Esto se debe a 65, el ASCII valor para el capital A, más 2, nos da 67, que corresponde al carácter de la caja superior C. 

Desafortunadamente, las cosas se no es tan sencillo. Tenemos una ecuación que tenemos que considerar. Aquí se nos dice que el texto cifrado ITH letra corresponde al texto claro ITH carta, además de la key-- todo eso, modular 26. ¿Por qué es ese el caso? Volvamos a nuestro ejemplo de antes, donde el capital A, más 2, nos da el capital C. 

Así la aplicación de la ecuación que la especificación nos da, a continuación, vamos a echar mayúscula más 2 y mod que en un 26. Así mayúscula, cuando lo pongo en esas comillas simples, me permite tratar como un número entero, de modo que permite mi intención que poner a su valor ASCII, de 65 años. 65 más 2 es 67. 67 mod 26 nos da 15, pero que en realidad no se tiene sentido porque sabemos que la C mayúscula valor ASCII es 67, no 15. Entonces, ¿cómo podemos reconciliar eso? 

Bueno, aquí me gustaría plantear la noción de un índice alfabético. Así que ya hemos hablado de cómo cada personaje tiene su valor ASCII, pero me gustaría decir, bueno, vamos a pensar en cada personaje también tiene un índice alfabético, en la que A, por ejemplo, como la primera letra del alfabeto, tiene un índice alfabético de cero. Así que ahora vamos a aplicar la misma ecuación que antes, pero el uso de un índice alfabético. 

Así que A es cero, ya que hemos definido. Así que luego de tomar cero más dos, mod 26, eso es dos, mod 26, lo que nos da dos. Y así, en términos de un índice alfabético, C es la tercera letra en el alfabeto, de manera que correspondería a un índice alfabético de los dos. Por lo tanto, parece que el uso de la índice alfabético en este caso en realidad nos da el resultado correcto. 

Así que ahora vamos a ver a ver si las obras de ecuaciones con un índice alfabético. índice alfabético de Y es como el 24 segunda a la última letra del alfabeto. Así entonces 24 más nuestra clave de dos nos da 26. 26 mod 26 nos da 0, lo que, por suerte para nosotros, es el índice alfabético de A. Así que espero que eso es suficiente que la prueba el método del índice alfabético funciona. Si no es así, no dude en probar algunos ejemplos de su propio. 

Con el fin de envolver adecuadamente alrededor de la alfabeto y aplicar la ecuación de César, entonces sabemos que necesitamos hacer frente a los índices alfabéticos. Pero empezamos con ASCII valores, y sólo entonces Cómo podemos entonces convertimos a el índice alfabético. A partir de ahí, con el fin de imprimir, necesitamos para hacer frente a los valores ASCII de nuevo. Así que tenemos que encontrar la manera de ir de ASCII alfabéticos y desde alfabético para ASCII. 

Así que lo dejo a usted para averiguar el patrón entre un carácter y su alfabético índice y su valor ASCII. Ahora, recuerde que aunque esta tabla a la derecha en la diapositiva Muestra el mayúsculas, también que considerar si o no un patrón diferente se aplica para los caracteres en minúscula. 

Así que ahora que hemos descubierto cómo cambiar un solo carácter, entonces todo lo que tenemos que hacer es que la escala para ir a través de todo el texto en claro. Por lo que el texto plano es una cadena. Por suerte para nosotros, una cadena es realmente simplemente un conjunto de caracteres, así con el fin de acceder a cada carácter de una cadena, todo lo que tiene que hacer es el uso de la notación de matriz. Decir que tengo una variable de tipo cadena llamado "text =" esto es CS50. ' " 

Bueno, entonces, con el fin de acceder a cada personaje, todo lo que tengo que ver con El texto variable es decir así, el texto en el índice cero, se corresponde con T mayúscula de texto en el índice una corresponde a la caja inferior h. Otra función útil es la función de longitud de la cadena. Por lo que pasa en una cadena de que función devolverá un número entero, la longitud de esa cadena. 

Ahora que ya hemos hablado de todos estos elementos diferentes, vamos a poner de nuevo juntos. Así que volver a cualquiera de mi pseudocódigo código o su pseudocódigo e ir a través y asegúrese de que usted saber cómo hacer cada cosa. Obtención de la clave utilizando argc y argv, girando la llave en un entero, una a i, lo que llevó a texto plano, getString y, a continuación, la iteración sobre todos los personajes de la cadena de texto claro, preservando el caso de cada carácter y cambiando el carácter con la tecla, asegurando que eres envolver alrededor del alfabeto, finalmente la impresión de que el texto cifrado. Mi nombre es Amila, y esto era César. 