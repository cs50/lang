AMILA: Gadewch i ni fynd i'r afael â Caesar. Yn Cesar, rydym yn caniatáu i'r defnyddiwr i amgodio neges gudd. Felly gadewch i ni plymio i'r dde i mewn ac edrych yn ein i-dos ar gyfer y broblem hon. Felly yn gyntaf, rydym yn cael y allweddol o'r defnyddiwr. Yna rydym yn cael y plaintext eu bod am i amgodio. Ar ôl hynny, yr ydym encipher ei ar eu cyfer, ac yn olaf, rydym yn argraffu eu ciphertext. 

Felly gadewch i ni ddechrau gydag enghraifft. Dywedwch eich bod yn awyddus i amgodio y wyddor gyfan gyda allweddol dau. Wel, byddai eich wyddor cyfan dim ond yn cael ei symud i lythyrau. Felly Byddai amgodio i C, B i D, C i E, yn y blaen ac yn y blaen, nes i chi gyrraedd X, sy'n encodes i Z neu ZED, yn dibynnu ar ble rydych chi'n dod. Yna byddai Y wedyn symud yr holl ffordd, lapio o amgylch y wyddor i ddod i A, ac yna yn olaf llythyren olaf y wyddor, Z, ZED, byddai amgodio i B. 

Rydych wedi cael hynny? Gadewch i ni edrych ar rai enghreifftiau. Yr enghraifft cyntaf yma yn debyg iawn i hyn yr ydym newydd esboniwyd uchod. Felly os wyf yn amgodio rhyw ran o'r wyddor, A drwy L, gan allweddol dau, Yna, Fi jyst cael fy cyfan wyddor symud dau lythyr. 

Yna, yn fy enghraifft nesaf, yr allwedd yn dal i fod dau, felly dylech wybod pa lythrennau i'w ddisgwyl. Ond dyma ei fod yn ymadrodd. Mae hyn yn CS50. Felly, byddwch yn sylwi fy mod cadw achos fy llythyrau, felly mae unrhyw priflythrennau hefyd priflythrennau yn y ciphertext. Ac unrhyw llythrennau bach llythyrau yn y plaintext hefyd yn cael eu llythrennau bach llythyrau yn y ciphertext. Ond yr wyf yn cadw y llythrennau ac unrhyw ebychnodau neu unrhyw atalnodi arall yr un fath. 

Felly nawr bod gennym synnwyr am sut mae'r rhaglen yn gweithio, teimlo'n rhydd i fynd rhedeg rhai yn fwy enghreifftiau o'ch hun, os ydych yn dymuno. Gadewch i ni ddechrau gyda chael y allweddol o'r defnyddiwr. Yn draddodiadol, gyda problemau eraill, mae gennym arfer â chael unrhyw rifau ein bod yn angen trwy annog y defnyddiwr gyda'r getint swyddogaeth. Ond y tro hwn rydym yn wir yn mynd i ddefnyddio'r ymresymiad llinell orchymyn a swyddogaeth newydd o'r enw atoi. 

Pan fyddwch yn rhedeg y prif rhaglen yn C, yna mae'n cymryd mewn dwy parameters-- argc int, a oedd yn yw nifer o ddadleuon basiwyd yn, ac yna argv, amrywiaeth o linynnau sy'n cynnwys y rhestr o holl ddadleuon pasio. Nid ydych yn benodol gennych i ddatgan newidynnau hyn. Maent yn gyfrifo at chi gan y compiler. Byddai defnydd cywir ar gyfer hyn fod yn er argc fod dau yn yr achos hwn, oherwydd bod y defnyddiwr wedi i basio mewn yr alwad i'r rhaglen, ./caesar, ac yna'r allwedd, pa bynnag rif y maent yn dymuno. Felly mae hynny'n golygu bod yn rhaid argc fod dau er mwyn i ddefnydd dilys o Cesar i gael ei ddienyddio. 

Felly gadewch i ni edrych ar enghraifft. Dywedwch Rwyf eisoes wedi ysgrifennu a llunio rhaglen o'r enw blastoff. Felly os wyf yn rhedeg yn y llinell gorchymyn Roced Tîm ./blastoff, yn dda, yna, argc fyddai tri oherwydd fy mod basiwyd mewn tair dadleuon gwahanol. Yna byddai argv edrych fel hyn. Mae'n arae, a byddai'n yn cynnwys pob un o'r tri llinynnau. ./blastoff yn y mynegai, tîm cyntaf yn y nesaf, a roced yn yr olaf. 

Gadewch i ni siarad am araeau am sec. Araeau strwythurau data sy'n dal gwerthoedd lluosog o'r un math. Gall hyn yn dod yn ddefnyddiol pan fyddwn yn restrau o gyfanrifau neu linynnau. Ond cofiwch fod ganddynt i fod yn un math. Mewn gwyddoniaeth gyfrifiadurol, rydym yn wrth eu bodd yn cyfrif o sero, felly cofiwch fod araeau yn sero-indexed hefyd. Felly elfen gyntaf fy arae yn mynd i fod yn fynegai sero. Felly, yn yr achos hwn, pan fydd gen i amrywiaeth o hyd pedwar, yna bydd y mynegai olaf y Elfen olaf o fy arae mewn gwirionedd yn mynd i fod yn mynegai tri, nid pedwar. Oherwydd cofiwch, rydym yn yn dechrau cyfrif ar sero. 

Dyma enghraifft o sut rydych chi Gallai creu amrywiaeth o eich pen eich hun. Felly, yn dweud fy mod i eisiau i storio fy tri enw ci hoff. Yna byddwn yn creu amrywiaeth o dannau. Felly byddwn yn datgan bod y math, y llinyn, ac yna rhowch enw'r array, cŵn, ac yna yn y rheiny sgwâr cromfachau rhoi'r maint o'r array-- yn yr achos hwn, tri. 

Felly, fy cofnod cyntaf yn mynd i fod cŵn yn mynegai sero, ac mae hynny'n mynd i fod yn Milo. Yna cŵn yn mynegai un yn mynd i fod goofy, darling Mochi, ac yna yr olaf mynediad, y trydydd mynediad ar mynegai dau, yn mynd i fod cute, Elphie melys. Byddwch yn sylwi bod y fformat am lenwi'r amrywiaeth hwn yn debyg iawn sut gallech chi ddatgan unrhyw newidyn arall lle mae gennych yr enw newidyn ddilyn gan y gwerth eich bod eisiau storio ynddo. Yr unig wahaniaeth yn yr achos hwn yw eich bod yn rhaid i ni gofio i roi'r mynegai o werth mewn cromfachau sgwâr. Ac yno yr ydym wedi ein tri hoff cŵn. 

Ond yn anffodus, mae'n amser i fynd yn ôl at Gesar. Cofiwch fod defnydd cywir ar gyfer y defnyddiwr yn mynd i gael ei basio mewn, nid yn unig enw'r ./caesar rhaglen, ond hefyd yn allweddol eu bod am symud eu plaintext gan. Felly mae hynny'n golygu bod yn rhaid argc fod yn ddau. Mae'n rhaid iddynt basio mewn two-- dim mwy, dim llai na dwy ddadl llinell orchymyn. 

Nawr, beth am argv? Wel, yr ydym eisoes yn gwybod bod y arae yn mynd i fod o hyd dau, ond beth sy'n cynnwys ym mhob elfen? Wel, yr elfen gyntaf yn mynd i fod ./caesar, ac yna yr elfen nesaf yn mynd i cynnwys y allweddol y mae'r defnyddiwr deipio i mewn. Yn awr, os oeddent yn eu defnyddio yn gywir ar gyfer y defnydd o Cesar, Yna, maen nhw'n mynd i deipio mewn nifer. Ond er bod y cymeriad eu bod yn teipio yn rhif, 'i' o linyn math data. 

Felly sut rydym yn trosi bod llinyn i cyfanrif? Felly, yn dweud gennyf num, llinyn, sy'n cynnwys y llinyn 50. Os wyf i am newid y i cyfanrif, yna rwyf yn syml datgan newidyn newydd, cyfanrif i, yn galw atoi. Rwy'n pasio yn fy newidyn llinyn, num, a Yna bydd i wedyn yn cynnwys y rhif 50. Gwnewch yn siwr i wirio y dyn tudalennau ar gyfer y swyddogaeth atoi i wirio pa lyfrgell mae'n mewn, yn ogystal â'r hyn ei werthfawrogi bydd yn dychwelyd os bydd y llinyn basio nad ydynt mewn yn cynnwys yr holl rifau. 

Felly nawr ein bod wedi gotten yr allwedd, y cam nesaf yw cael y plaintext gan y defnyddiwr. Yn awr, mae hyn yn mynd i fod yn llai cymhleth na lywio o gwmpas y dadleuon llinell orchymyn. Mae pob mae'n rhaid i ni ei wneud yw galw y swyddogaeth getstring i annog y defnyddiwr i roi ni llinyn, ond cofiwch i edrych ar y manylebau ar gyfer sut yr ydym yn Efallai eisiau annog y defnyddiwr ar gyfer hynny. 

Nawr rydym yn dod i'r galon y problem-- sut i encipher y plaintext. Wel, yn gyntaf, gadewch i ni siarad am y ffordd i encipher un cymeriad ar y tro, ac yna byddwn yn ystyried sut i ailadrodd dros y plaintext cyfan. Rydw i wedi ysgrifennu rhai pseudocode am y broblem Cesar. Yr wyf yn eich annog i ysgrifennu eich hun yn ogystal. Efallai nad yw'n edrych yn union yr un fath i pwll glo, ac mae hynny'n iawn, ond cyn belled gan fod y syniad cyffredinol yr un fath. 

Y tri cham cyntaf ydym wedi ei wneud yn barod. Rydym wedi gotten y allweddol o'r y ddadl llinell orchymyn, rydym wedi troi hynny allwedd i mewn cyfanrif, ac rydym wedi ysgogodd y defnyddiwr ar gyfer y plaintext eu bod eisiau encipher. Felly, yna mae'r darn mawr nesaf yw bod ar gyfer pob cymeriad yn y llinyn plaintext, os yw'n wyddor, ydym am warchod ei achos a symud iddo. Drwy gadw achos, yr hyn yr wyf olygu yw bod yr holl priflythrennau Dylai llythyrau aros uchaf achos a phob llythrennau bach dylai aros llythrennau bach. Felly, yna ar ôl i ni symud y rheini, yna rydym yn argraffu'r ciphertext. 

Dyma dair swyddogaeth sydd yn mynd i ddod i mewn 'n hylaw ar gyfer y broblem hon. Cofiwch i fyny uchod pan roddais y enghraifft ar gyfer symud hyn yw CS50? Cofiwch fod y 50 a'r Nid ebychnod yn symud? Felly sut allwn ni ddweud a ydym Mae angen i symud llythyr neu beidio? Wel, "yw alffa," os byddwch yn mynd heibio ei gymeriad, Bydd yn dychwelyd wir os mai cymeriad yn llythyr a ffug fel arall. Er mwyn eich helpu chi gyda cadw cyfalafu yw'r swyddogaethau "yn cael ei uchaf "a" yn is. " 

Mae'r ddwy swyddogaeth hefyd yn cymryd mewn cymeriad unigol fel mewnbwn ac yn dychwelyd i chi yn Boole, naill ai gwir neu gau yn dibynnu ar p'un y cymeriad hwnnw yn achos uchaf neu llythrennau bach. Oherwydd bod "yn uchaf" ac "yw is "yn swyddogaethau Boole, golygu eu bod yn dychwelyd i chi yn Boole, gallwch ddefnyddio'r rhain yn eich amodau. Felly dyma snippet o god mai dim ond printiau lythyr os yw'n priflythrennau. Felly dwi wedi datgan fy nghymeriad llythyr i gael ei achos uchaf ZED ac yna os "yn uchaf" yn dychwelyd yn wir, yna rwyf print that llythyr. 

Gan fynd yn ôl at ein Enghraifft syml o symud y wyddor gan allweddol dau, sut rydym yn mewn gwirionedd yn cael y weithio? Wel, mae'n troi allan y cymeriadau a cyfanrifau yn perthyn yn agos iawn. Mae pob cymeriad yn cael gwerth cyfanrifol cysylltiedig ag ef yn y siart ASCII, lle mae ASCII pob cymeriad gwerth yn cael ei arddangos. Felly mae priflythrennau cyfateb A i werth ASCII o 65 a llythrennau bach yn i gwerth ASCII o 97. 

Teimlwch yn rhydd i edrych i fyny unrhyw siart ASCII ar-lein i weld y gwerthoedd hyn drosoch eich hun. Felly beth mae hyn yn ei olygu yw y gallwn cymryd cymeriad priflythrennau A, ychwanegwch y cyfanrif dau ato, ac yna yn cael cymeriad achos C uchaf o ganlyniad. Mae hyn oherwydd 65, mae'r ASCII gwerth am gyfalaf A, ynghyd â 2, rhoi i ni 67, sy'n cyfateb i gymeriad achos C. uchaf 

Yn anffodus, pethau Ni fydd yn eithaf mor syml. Mae gennym hafaliad sy'n rhaid i ni ystyried. Yma, mae'n dweud wrthym fod y ciphertext ith llythyr yn cyfateb i'r plaintext ith llythyr, yn ogystal â'r key-- hynny i gyd, modiwlaidd 26. Pam yw hynny'n wir? Gadewch i ni fynd yn ôl at ein henghraifft o o'r blaen, lle mae cyfalaf A, ynghyd â 2, yn rhoi cyfalaf C. ni 

Felly gymhwyso'r hafaliad bod y fanyleb yn rhoi i ni, Yna gadewch i ni gymryd cyfalaf A ynghyd â 2 a mod, erbyn 26. Felly cyfalaf A, pan fyddaf yn ei roi mewn dyfynodau sengl y rheini, yn caniatáu i mi drin fel yn gyfanrif, fel bod yn caniatáu mi daflu at ei werth ASCII, 65. 65 a 2 yw 67. 67 mod 26 yn rhoi i ni 15, ond nid yw hynny yn wir gwneud synnwyr oherwydd ein bod yn gwybod bod y cyfalaf gwerth ASCII C yn 67, nid 15. Felly sut rydym yn cysoni hynny? 

Wel, dyma hoffwn posit y syniad o mynegai yn nhrefn yr wyddor. Felly rydym eisoes wedi siarad am sut Mae gan bob cymeriad ei werth ASCII, ond hoffwn i ddweud, yn dda, gadewch i ni meddwl am bob cymeriad hefyd yn cael mynegai yn nhrefn yr wyddor, lle mae A er enghraifft, fel llythyren gyntaf yr wyddor, Mae mynegai yn nhrefn yr wyddor o sero. Felly nawr gadewch i gymhwyso'r un hafaliad fel o'r blaen, ond ddefnyddio mynegai yn nhrefn yr wyddor. 

Felly A yw sero, fel yr ydym wedi diffinio. Felly, yna cymryd sero a dau, mod 26, dyna dau, mod 26, sy'n rhoi i ni dau. Ac yn dda, o ran mynegai yn nhrefn yr wyddor, C yw'r trydydd llythyr yn y wyddor, felly byddai hynny'n cyfateb at fynegai yn nhrefn yr wyddor o ddau. Felly, mae'n ymddangos bod defnyddio'r mynegai yn nhrefn yr wyddor yn yr achos hwn mewn gwirionedd yn rhoi'r canlyniad cywir inni. 

Felly nawr gadewch i wirio i weld a yw'r gwaith hafaliad gyda mynegai yn nhrefn yr wyddor. Mynegai yn nhrefn yr wyddor Y yw 24 gan fod y ail llythyr diwethaf yn yr wyddor. Felly, yna 24 yn ogystal â'n allweddol dau yn rhoi i ni 26. 26 mod 26 yn rhoi 0, sydd, yn ffodus i ni ni, yw'r mynegai yn nhrefn yr wyddor ar gyfer A. Felly, gobeithio hynny'n ddigon bod prawf y dull mynegai yn nhrefn yr wyddor yn gweithio. Os nad yw, mae croeso i roi cynnig ar rhai enghreifftiau eich hun. 

Er mwyn lapio yn iawn o amgylch y wyddor a chymhwyso'r hafaliad Cesar, Yna, rydym yn gwybod bod angen i ni ni delio â mynegeion yn nhrefn yr wyddor. Ond rydym yn dechrau gyda ASCII gwerthoedd, a dim ond wedyn rydym yn wedyn yn newid i mynegai yn nhrefn yr wyddor. Oddi yno, er mwyn i argraffu, mae angen i ddelio â'r gwerthoedd ASCII eto. Felly mae angen i chyfrif i maes sut i mynd o ASCII i wyddor ac o nhrefn yr wyddor i ASCII. 

Felly yr wyf yn gadael i chi chyfrif i maes patrwm rhwng cymeriad ac mae ei nhrefn yr wyddor mynegai a'i werth ASCII. Yn awr, cofiwch fod hyd yn oed er tabl hwn hawl ar y sleid yn dangos y priflythrennau, rydym hefyd yn rhaid i ni ystyried a yw patrwm gwahanol yn berthnasol ar gyfer y cymeriadau llythrennau bach. 

Felly nawr ein bod wedi cyfrifedig allan sut i symud cymeriad unigol, yna i gyd yn rhaid i ni ei wneud yw raddfa sy'n i fynd ar draws y plaintext cyfan. Felly mae'r plaintext yn llinyn. Lwcus i ni, llinyn yn wirioneddol dim ond amrywiaeth o gymeriadau, hynny er mwyn cael mynediad i bob cymeriad o linyn, pob rhaid i chi ei wneud yw defnyddio nodiant arae. Dweud Mae gen i amrywiol o fath llinyn o'r enw "testun = 'mae hyn yn CS50.'" 

Wel, yna, er mwyn gael gafael ar bob cymeriad, i gyd yn rhaid i mi ei wneud gyda mae'r testun amrywiol yw i ddweud yn dda, testun yn mynegai sero, bod cyfateb i T. cyfalaf Testun yn mynegai un yn cyfateb i'r llythrennau bach h. swyddogaeth ddefnyddiol arall yw y swyddogaeth hyd llinyn. Felly pasio mewn llinyn i Bydd y swyddogaeth honno yn dychwelyd yn gyfanrif, hyd y llinyn. 

rydym Nawr bod wedi siarad am holl elfennau gwahanol hyn, gadewch i ni roi yn ôl at ei gilydd. Felly yn dychwelyd i naill ai fy pseudocode cod neu eich pseudocode ac ewch drwy'r a gwnewch yn siŵr eich bod yn gwybod sut i wneud pob un peth. Cael y allweddol gan ddefnyddio argc a argv, droi'r allwedd i mewn i cyfanrif, mae i fi, anogaeth ar gyfer plaintext, getstring, ac yna ailadrodd dros bob cymeriad mewn y llinyn plaintext, cadw achos pob cymeriad a symud y cymeriad hwnnw gan yr allwedd, gan sicrhau eich bod yn lapio o amgylch y wyddor, yn olaf argraffu y ciphertext. Fy enw i yw Amila, ac roedd hyn yn Caesar. 