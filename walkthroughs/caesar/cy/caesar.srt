1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> AMILA: Gadewch i ni fynd i'r afael â Caesar.

3
00:00:02,270 --> 00:00:06,110
Yn Cesar, rydym yn caniatáu i'r defnyddiwr
i amgodio neges gudd.

4
00:00:06,110 --> 00:00:09,780
Felly gadewch i ni plymio i'r dde i mewn ac edrych
yn ein i-dos ar gyfer y broblem hon.

5
00:00:09,780 --> 00:00:12,210
Felly yn gyntaf, rydym yn cael y allweddol o'r defnyddiwr.

6
00:00:12,210 --> 00:00:15,210
Yna rydym yn cael y plaintext
eu bod am i amgodio.

7
00:00:15,210 --> 00:00:21,380
Ar ôl hynny, yr ydym encipher ei ar eu cyfer,
ac yn olaf, rydym yn argraffu eu ciphertext.

8
00:00:21,380 --> 00:00:23,600
>> Felly gadewch i ni ddechrau gydag enghraifft.

9
00:00:23,600 --> 00:00:26,920
Dywedwch eich bod yn awyddus i amgodio y
wyddor gyfan gyda allweddol dau.

10
00:00:26,920 --> 00:00:31,360
Wel, byddai eich wyddor cyfan
dim ond yn cael ei symud i lythyrau.

11
00:00:31,360 --> 00:00:37,060
Felly Byddai amgodio i C, B i
D, C i E, yn y blaen ac yn y blaen,

12
00:00:37,060 --> 00:00:42,470
nes i chi gyrraedd X, sy'n encodes i Z
neu ZED, yn dibynnu ar ble rydych chi'n dod.

13
00:00:42,470 --> 00:00:47,445
Yna byddai Y wedyn symud yr holl ffordd,
lapio o amgylch y wyddor i ddod i A,

14
00:00:47,445 --> 00:00:53,256
ac yna yn olaf llythyren olaf y
wyddor, Z, ZED, byddai amgodio i B.

15
00:00:53,256 --> 00:00:54,660
>> Rydych wedi cael hynny?

16
00:00:54,660 --> 00:00:56,380
Gadewch i ni edrych ar rai enghreifftiau.

17
00:00:56,380 --> 00:01:00,540
Yr enghraifft cyntaf yma yn debyg iawn
i hyn yr ydym newydd esboniwyd uchod.

18
00:01:00,540 --> 00:01:05,560
Felly os wyf yn amgodio rhyw ran o'r
wyddor, A drwy L, gan allweddol dau,

19
00:01:05,560 --> 00:01:09,760
Yna, Fi jyst cael fy cyfan
wyddor symud dau lythyr.

20
00:01:09,760 --> 00:01:12,230
>> Yna, yn fy enghraifft nesaf,
yr allwedd yn dal i fod dau,

21
00:01:12,230 --> 00:01:15,080
felly dylech wybod
pa lythrennau i'w ddisgwyl.

22
00:01:15,080 --> 00:01:16,400
Ond dyma ei fod yn ymadrodd.

23
00:01:16,400 --> 00:01:18,100
Mae hyn yn CS50.

24
00:01:18,100 --> 00:01:21,090
Felly, byddwch yn sylwi fy mod
cadw achos fy llythyrau,

25
00:01:21,090 --> 00:01:25,600
felly mae unrhyw priflythrennau hefyd
priflythrennau yn y ciphertext.

26
00:01:25,600 --> 00:01:27,800
Ac unrhyw llythrennau bach
llythyrau yn y plaintext

27
00:01:27,800 --> 00:01:30,640
hefyd yn cael eu llythrennau bach
llythyrau yn y ciphertext.

28
00:01:30,640 --> 00:01:34,020
Ond yr wyf yn cadw y llythrennau
ac unrhyw ebychnodau

29
00:01:34,020 --> 00:01:37,610
neu unrhyw atalnodi arall yr un fath.

30
00:01:37,610 --> 00:01:40,360
>> Felly nawr bod gennym synnwyr
am sut mae'r rhaglen yn gweithio,

31
00:01:40,360 --> 00:01:43,890
teimlo'n rhydd i fynd rhedeg rhai yn fwy
enghreifftiau o'ch hun, os ydych yn dymuno.

32
00:01:43,890 --> 00:01:47,072
Gadewch i ni ddechrau gyda chael
y allweddol o'r defnyddiwr.

33
00:01:47,072 --> 00:01:48,780
Yn draddodiadol, gyda
problemau eraill, mae gennym

34
00:01:48,780 --> 00:01:51,450
arfer â chael
unrhyw rifau ein bod yn

35
00:01:51,450 --> 00:01:54,710
angen trwy annog y defnyddiwr
gyda'r getint swyddogaeth.

36
00:01:54,710 --> 00:01:58,850
Ond y tro hwn rydym yn wir yn mynd
i ddefnyddio'r ymresymiad llinell orchymyn

37
00:01:58,850 --> 00:02:01,760
a swyddogaeth newydd o'r enw atoi.

38
00:02:01,760 --> 00:02:05,130
>> Pan fyddwch yn rhedeg y prif
rhaglen yn C, yna mae'n

39
00:02:05,130 --> 00:02:08,500
cymryd mewn dwy parameters--
argc int, a oedd yn

40
00:02:08,500 --> 00:02:11,670
yw nifer o ddadleuon
basiwyd yn, ac yna

41
00:02:11,670 --> 00:02:15,920
argv, amrywiaeth o linynnau sy'n cynnwys
y rhestr o holl ddadleuon

42
00:02:15,920 --> 00:02:16,740
pasio.

43
00:02:16,740 --> 00:02:19,740
Nid ydych yn benodol gennych
i ddatgan newidynnau hyn.

44
00:02:19,740 --> 00:02:22,700
Maent yn gyfrifo at
chi gan y compiler.

45
00:02:22,700 --> 00:02:28,160
Byddai defnydd cywir ar gyfer hyn fod yn
er argc fod dau yn yr achos hwn,

46
00:02:28,160 --> 00:02:32,630
oherwydd bod y defnyddiwr wedi i basio mewn
yr alwad i'r rhaglen, ./caesar,

47
00:02:32,630 --> 00:02:35,570
ac yna'r allwedd,
pa bynnag rif y maent yn dymuno.

48
00:02:35,570 --> 00:02:39,920
Felly mae hynny'n golygu bod yn rhaid argc fod dau
er mwyn i ddefnydd dilys o Cesar

49
00:02:39,920 --> 00:02:41,680
i gael ei ddienyddio.

50
00:02:41,680 --> 00:02:43,590
>> Felly gadewch i ni edrych ar enghraifft.

51
00:02:43,590 --> 00:02:47,760
Dywedwch Rwyf eisoes wedi ysgrifennu a
llunio rhaglen o'r enw blastoff.

52
00:02:47,760 --> 00:02:52,670
Felly os wyf yn rhedeg yn y llinell gorchymyn
Roced Tîm ./blastoff, yn dda, yna,

53
00:02:52,670 --> 00:02:57,750
argc fyddai tri oherwydd fy mod
basiwyd mewn tair dadleuon gwahanol.

54
00:02:57,750 --> 00:02:59,830
Yna byddai argv edrych fel hyn.

55
00:02:59,830 --> 00:03:03,750
Mae'n arae, a byddai'n
yn cynnwys pob un o'r tri llinynnau.

56
00:03:03,750 --> 00:03:09,640
./blastoff yn y mynegai, tîm cyntaf
yn y nesaf, a roced yn yr olaf.

57
00:03:09,640 --> 00:03:11,610
>> Gadewch i ni siarad am araeau am sec.

58
00:03:11,610 --> 00:03:15,560
Araeau strwythurau data sy'n dal
gwerthoedd lluosog o'r un math.

59
00:03:15,560 --> 00:03:19,980
Gall hyn yn dod yn ddefnyddiol pan fyddwn yn
restrau o gyfanrifau neu linynnau.

60
00:03:19,980 --> 00:03:23,030
Ond cofiwch fod ganddynt
i fod yn un math.

61
00:03:23,030 --> 00:03:25,310
Mewn gwyddoniaeth gyfrifiadurol, rydym yn
wrth eu bodd yn cyfrif o sero,

62
00:03:25,310 --> 00:03:29,260
felly cofiwch fod araeau
yn sero-indexed hefyd.

63
00:03:29,260 --> 00:03:34,360
Felly elfen gyntaf fy arae
yn mynd i fod yn fynegai sero.

64
00:03:34,360 --> 00:03:37,580
Felly, yn yr achos hwn, pan fydd gen i
amrywiaeth o hyd pedwar,

65
00:03:37,580 --> 00:03:41,350
yna bydd y mynegai olaf y
Elfen olaf o fy arae

66
00:03:41,350 --> 00:03:44,970
mewn gwirionedd yn mynd i fod
yn mynegai tri, nid pedwar.

67
00:03:44,970 --> 00:03:48,880
Oherwydd cofiwch, rydym yn
yn dechrau cyfrif ar sero.

68
00:03:48,880 --> 00:03:52,530
>> Dyma enghraifft o sut rydych chi
Gallai creu amrywiaeth o eich pen eich hun.

69
00:03:52,530 --> 00:03:56,440
Felly, yn dweud fy mod i eisiau i storio fy
tri enw ci hoff.

70
00:03:56,440 --> 00:03:59,030
Yna byddwn yn creu amrywiaeth o dannau.

71
00:03:59,030 --> 00:04:04,450
Felly byddwn yn datgan bod y math, y llinyn, ac
yna rhowch enw'r array, cŵn,

72
00:04:04,450 --> 00:04:06,450
ac yna yn y rheiny sgwâr
cromfachau rhoi'r maint

73
00:04:06,450 --> 00:04:09,260
o'r array-- yn yr achos hwn, tri.

74
00:04:09,260 --> 00:04:12,690
>> Felly, fy cofnod cyntaf yn mynd
i fod cŵn yn mynegai sero,

75
00:04:12,690 --> 00:04:14,750
ac mae hynny'n mynd i fod yn Milo.

76
00:04:14,750 --> 00:04:17,850
Yna cŵn yn mynegai un
yn mynd i fod goofy,

77
00:04:17,850 --> 00:04:23,060
darling Mochi, ac yna yr olaf
mynediad, y trydydd mynediad ar mynegai dau,

78
00:04:23,060 --> 00:04:26,130
yn mynd i fod cute, Elphie melys.

79
00:04:26,130 --> 00:04:28,610
Byddwch yn sylwi bod y fformat
am lenwi'r amrywiaeth hwn

80
00:04:28,610 --> 00:04:32,150
yn debyg iawn sut gallech chi
ddatgan unrhyw newidyn arall lle

81
00:04:32,150 --> 00:04:36,307
mae gennych yr enw newidyn ddilyn gan
y gwerth eich bod eisiau storio ynddo.

82
00:04:36,307 --> 00:04:38,140
Yr unig wahaniaeth yn
yr achos hwn yw eich bod yn

83
00:04:38,140 --> 00:04:42,700
rhaid i ni gofio i roi'r mynegai
o werth mewn cromfachau sgwâr.

84
00:04:42,700 --> 00:04:46,420
Ac yno yr ydym wedi ein
tri hoff cŵn.

85
00:04:46,420 --> 00:04:48,780
>> Ond yn anffodus, mae'n amser
i fynd yn ôl at Gesar.

86
00:04:48,780 --> 00:04:52,910
Cofiwch fod defnydd cywir ar gyfer y
defnyddiwr yn mynd i gael ei basio mewn, nid yn unig

87
00:04:52,910 --> 00:04:57,430
enw'r ./caesar rhaglen, ond
hefyd yn allweddol eu bod am symud

88
00:04:57,430 --> 00:04:58,850
eu plaintext gan.

89
00:04:58,850 --> 00:05:01,540
Felly mae hynny'n golygu bod yn rhaid argc fod yn ddau.

90
00:05:01,540 --> 00:05:07,580
Mae'n rhaid iddynt basio mewn two-- dim mwy, dim
llai na dwy ddadl llinell orchymyn.

91
00:05:07,580 --> 00:05:09,050
>> Nawr, beth am argv?

92
00:05:09,050 --> 00:05:12,880
Wel, yr ydym eisoes yn gwybod bod y
arae yn mynd i fod o hyd dau,

93
00:05:12,880 --> 00:05:15,270
ond beth sy'n cynnwys ym mhob elfen?

94
00:05:15,270 --> 00:05:19,330
Wel, yr elfen gyntaf
yn mynd i fod ./caesar,

95
00:05:19,330 --> 00:05:24,190
ac yna yr elfen nesaf yn mynd i
cynnwys y allweddol y mae'r defnyddiwr deipio i mewn.

96
00:05:24,190 --> 00:05:27,480
Yn awr, os oeddent yn eu defnyddio yn gywir
ar gyfer y defnydd o Cesar,

97
00:05:27,480 --> 00:05:29,350
Yna, maen nhw'n mynd i deipio mewn nifer.

98
00:05:29,350 --> 00:05:33,260
Ond er bod y cymeriad
eu bod yn teipio yn rhif,

99
00:05:33,260 --> 00:05:35,790
'i' o linyn math data.

100
00:05:35,790 --> 00:05:40,390
>> Felly sut rydym yn trosi bod
llinyn i cyfanrif?

101
00:05:40,390 --> 00:05:46,680
Felly, yn dweud gennyf num, llinyn,
sy'n cynnwys y llinyn 50.

102
00:05:46,680 --> 00:05:49,000
Os wyf i am newid y
i cyfanrif, yna rwyf yn syml

103
00:05:49,000 --> 00:05:53,340
datgan newidyn newydd,
cyfanrif i, yn galw atoi.

104
00:05:53,340 --> 00:06:01,160
Rwy'n pasio yn fy newidyn llinyn, num, a
Yna bydd i wedyn yn cynnwys y rhif 50.

105
00:06:01,160 --> 00:06:04,350
Gwnewch yn siwr i wirio y dyn
tudalennau ar gyfer y swyddogaeth atoi

106
00:06:04,350 --> 00:06:07,990
i wirio pa lyfrgell mae'n
mewn, yn ogystal â'r hyn ei werthfawrogi

107
00:06:07,990 --> 00:06:14,550
bydd yn dychwelyd os bydd y llinyn basio
nad ydynt mewn yn cynnwys yr holl rifau.

108
00:06:14,550 --> 00:06:16,950
>> Felly nawr ein bod wedi gotten
yr allwedd, y cam nesaf

109
00:06:16,950 --> 00:06:19,430
yw cael y plaintext gan y defnyddiwr.

110
00:06:19,430 --> 00:06:21,170
Yn awr, mae hyn yn mynd i
fod yn llai cymhleth

111
00:06:21,170 --> 00:06:23,410
na lywio o gwmpas y
dadleuon llinell orchymyn.

112
00:06:23,410 --> 00:06:26,190
Mae pob mae'n rhaid i ni ei wneud yw galw
y swyddogaeth getstring

113
00:06:26,190 --> 00:06:29,660
i annog y defnyddiwr i roi
ni llinyn, ond cofiwch

114
00:06:29,660 --> 00:06:34,090
i edrych ar y manylebau ar gyfer sut yr ydym yn
Efallai eisiau annog y defnyddiwr ar gyfer hynny.

115
00:06:34,090 --> 00:06:36,420
>> Nawr rydym yn dod i'r
galon y problem--

116
00:06:36,420 --> 00:06:38,860
sut i encipher y plaintext.

117
00:06:38,860 --> 00:06:42,830
Wel, yn gyntaf, gadewch i ni siarad am y ffordd
i encipher un cymeriad ar y tro,

118
00:06:42,830 --> 00:06:47,370
ac yna byddwn yn ystyried sut i
ailadrodd dros y plaintext cyfan.

119
00:06:47,370 --> 00:06:50,440
Rydw i wedi ysgrifennu rhai pseudocode
am y broblem Cesar.

120
00:06:50,440 --> 00:06:52,310
Yr wyf yn eich annog i
ysgrifennu eich hun yn ogystal.

121
00:06:52,310 --> 00:06:55,900
Efallai nad yw'n edrych yn union yr un fath i
pwll glo, ac mae hynny'n iawn, ond cyn belled

122
00:06:55,900 --> 00:06:58,640
gan fod y syniad cyffredinol yr un fath.

123
00:06:58,640 --> 00:07:00,780
>> Y tri cham cyntaf
ydym wedi ei wneud yn barod.

124
00:07:00,780 --> 00:07:03,100
Rydym wedi gotten y allweddol o'r
y ddadl llinell orchymyn,

125
00:07:03,100 --> 00:07:05,510
rydym wedi troi hynny allwedd
i mewn cyfanrif, ac rydym wedi

126
00:07:05,510 --> 00:07:09,320
ysgogodd y defnyddiwr ar gyfer y plaintext
eu bod eisiau encipher.

127
00:07:09,320 --> 00:07:12,420
Felly, yna mae'r darn mawr nesaf
yw bod ar gyfer pob cymeriad

128
00:07:12,420 --> 00:07:15,070
yn y llinyn plaintext,
os yw'n wyddor,

129
00:07:15,070 --> 00:07:17,750
ydym am warchod
ei achos a symud iddo.

130
00:07:17,750 --> 00:07:20,900
Drwy gadw achos, yr hyn yr wyf
olygu yw bod yr holl priflythrennau

131
00:07:20,900 --> 00:07:23,580
Dylai llythyrau aros uchaf
achos a phob llythrennau bach

132
00:07:23,580 --> 00:07:25,640
dylai aros llythrennau bach.

133
00:07:25,640 --> 00:07:29,110
Felly, yna ar ôl i ni symud y rheini,
yna rydym yn argraffu'r ciphertext.

134
00:07:29,110 --> 00:07:33,100
>> Dyma dair swyddogaeth sydd yn mynd
i ddod i mewn 'n hylaw ar gyfer y broblem hon.

135
00:07:33,100 --> 00:07:38,010
Cofiwch i fyny uchod pan roddais y
enghraifft ar gyfer symud hyn yw CS50?

136
00:07:38,010 --> 00:07:41,800
Cofiwch fod y 50 a'r
Nid ebychnod yn symud?

137
00:07:41,800 --> 00:07:45,680
Felly sut allwn ni ddweud a ydym
Mae angen i symud llythyr neu beidio?

138
00:07:45,680 --> 00:07:48,650
Wel, "yw alffa," os
byddwch yn mynd heibio ei gymeriad,

139
00:07:48,650 --> 00:07:54,850
Bydd yn dychwelyd wir os mai cymeriad
yn llythyr a ffug fel arall.

140
00:07:54,850 --> 00:07:56,870
Er mwyn eich helpu chi gyda
cadw cyfalafu

141
00:07:56,870 --> 00:07:59,750
yw'r swyddogaethau "yn cael ei
uchaf "a" yn is. "

142
00:07:59,750 --> 00:08:03,350
>> Mae'r ddwy swyddogaeth hefyd yn cymryd
mewn cymeriad unigol fel mewnbwn

143
00:08:03,350 --> 00:08:06,580
ac yn dychwelyd i chi yn Boole,
naill ai gwir neu gau

144
00:08:06,580 --> 00:08:11,280
yn dibynnu ar p'un y cymeriad hwnnw
yn achos uchaf neu llythrennau bach.

145
00:08:11,280 --> 00:08:14,610
Oherwydd bod "yn uchaf" ac "yw
is "yn swyddogaethau Boole,

146
00:08:14,610 --> 00:08:18,660
golygu eu bod yn dychwelyd i chi yn Boole,
gallwch ddefnyddio'r rhain yn eich amodau.

147
00:08:18,660 --> 00:08:23,490
Felly dyma snippet o god mai dim ond
printiau lythyr os yw'n priflythrennau.

148
00:08:23,490 --> 00:08:27,790
Felly dwi wedi datgan fy nghymeriad
llythyr i gael ei achos uchaf ZED

149
00:08:27,790 --> 00:08:33,440
ac yna os "yn uchaf" yn dychwelyd
yn wir, yna rwyf print that llythyr.

150
00:08:33,440 --> 00:08:38,200
>> Gan fynd yn ôl at ein Enghraifft syml o
symud y wyddor gan allweddol dau,

151
00:08:38,200 --> 00:08:41,049
sut rydym yn mewn gwirionedd yn cael y weithio?

152
00:08:41,049 --> 00:08:45,770
Wel, mae'n troi allan y cymeriadau
a cyfanrifau yn perthyn yn agos iawn.

153
00:08:45,770 --> 00:08:48,840
Mae pob cymeriad yn cael
gwerth cyfanrifol cysylltiedig

154
00:08:48,840 --> 00:08:53,260
ag ef yn y siart ASCII,
lle mae ASCII pob cymeriad

155
00:08:53,260 --> 00:08:55,380
gwerth yn cael ei arddangos.

156
00:08:55,380 --> 00:08:58,940
Felly mae priflythrennau cyfateb A
i werth ASCII o 65

157
00:08:58,940 --> 00:09:02,270
a llythrennau bach yn i
gwerth ASCII o 97.

158
00:09:02,270 --> 00:09:04,940
>> Teimlwch yn rhydd i edrych i fyny
unrhyw siart ASCII ar-lein

159
00:09:04,940 --> 00:09:07,720
i weld y gwerthoedd hyn drosoch eich hun.

160
00:09:07,720 --> 00:09:12,096
Felly beth mae hyn yn ei olygu yw y gallwn
cymryd cymeriad priflythrennau A,

161
00:09:12,096 --> 00:09:18,200
ychwanegwch y cyfanrif dau ato, ac yna yn cael
cymeriad achos C uchaf o ganlyniad.

162
00:09:18,200 --> 00:09:23,720
Mae hyn oherwydd 65, mae'r ASCII
gwerth am gyfalaf A, ynghyd â 2,

163
00:09:23,720 --> 00:09:29,960
rhoi i ni 67, sy'n cyfateb
i gymeriad achos C. uchaf

164
00:09:29,960 --> 00:09:33,480
>> Yn anffodus, pethau
Ni fydd yn eithaf mor syml.

165
00:09:33,480 --> 00:09:36,980
Mae gennym hafaliad sy'n
rhaid i ni ystyried.

166
00:09:36,980 --> 00:09:43,590
Yma, mae'n dweud wrthym fod y ciphertext ith
llythyr yn cyfateb i'r plaintext ith

167
00:09:43,590 --> 00:09:48,900
llythyr, yn ogystal â'r key--
hynny i gyd, modiwlaidd 26.

168
00:09:48,900 --> 00:09:50,810
Pam yw hynny'n wir?

169
00:09:50,810 --> 00:09:55,430
Gadewch i ni fynd yn ôl at ein henghraifft o
o'r blaen, lle mae cyfalaf A, ynghyd â 2,

170
00:09:55,430 --> 00:09:57,590
yn rhoi cyfalaf C. ni

171
00:09:57,590 --> 00:10:01,870
>> Felly gymhwyso'r hafaliad bod
y fanyleb yn rhoi i ni,

172
00:10:01,870 --> 00:10:06,660
Yna gadewch i ni gymryd cyfalaf A
ynghyd â 2 a mod, erbyn 26.

173
00:10:06,660 --> 00:10:10,730
Felly cyfalaf A, pan fyddaf yn ei roi mewn
dyfynodau sengl y rheini,

174
00:10:10,730 --> 00:10:14,010
yn caniatáu i mi drin fel
yn gyfanrif, fel bod yn caniatáu

175
00:10:14,010 --> 00:10:17,500
mi daflu at ei werth ASCII, 65.

176
00:10:17,500 --> 00:10:20,080
65 a 2 yw 67.

177
00:10:20,080 --> 00:10:25,210
67 mod 26 yn rhoi i ni 15,
ond nid yw hynny yn wir

178
00:10:25,210 --> 00:10:32,590
gwneud synnwyr oherwydd ein bod yn gwybod bod y
cyfalaf gwerth ASCII C yn 67, nid 15.

179
00:10:32,590 --> 00:10:35,580
Felly sut rydym yn cysoni hynny?

180
00:10:35,580 --> 00:10:39,840
>> Wel, dyma hoffwn posit y
syniad o mynegai yn nhrefn yr wyddor.

181
00:10:39,840 --> 00:10:44,010
Felly rydym eisoes wedi siarad am sut
Mae gan bob cymeriad ei werth ASCII,

182
00:10:44,010 --> 00:10:48,810
ond hoffwn i ddweud, yn dda, gadewch i ni
meddwl am bob cymeriad hefyd yn cael

183
00:10:48,810 --> 00:10:52,230
mynegai yn nhrefn yr wyddor,
lle mae A er enghraifft,

184
00:10:52,230 --> 00:10:58,800
fel llythyren gyntaf yr wyddor,
Mae mynegai yn nhrefn yr wyddor o sero.

185
00:10:58,800 --> 00:11:02,070
Felly nawr gadewch i gymhwyso'r
un hafaliad fel o'r blaen,

186
00:11:02,070 --> 00:11:05,040
ond ddefnyddio mynegai yn nhrefn yr wyddor.

187
00:11:05,040 --> 00:11:07,810
>> Felly A yw sero, fel yr ydym wedi diffinio.

188
00:11:07,810 --> 00:11:15,640
Felly, yna cymryd sero a dau, mod 26,
dyna dau, mod 26, sy'n rhoi i ni dau.

189
00:11:15,640 --> 00:11:18,780
Ac yn dda, o ran
mynegai yn nhrefn yr wyddor,

190
00:11:18,780 --> 00:11:23,930
C yw'r trydydd llythyr yn y
wyddor, felly byddai hynny'n cyfateb

191
00:11:23,930 --> 00:11:26,290
at fynegai yn nhrefn yr wyddor o ddau.

192
00:11:26,290 --> 00:11:29,850
Felly, mae'n ymddangos bod defnyddio'r
mynegai yn nhrefn yr wyddor yn yr achos hwn

193
00:11:29,850 --> 00:11:32,840
mewn gwirionedd yn rhoi'r canlyniad cywir inni.

194
00:11:32,840 --> 00:11:35,020
>> Felly nawr gadewch i wirio i
weld a yw'r gwaith hafaliad

195
00:11:35,020 --> 00:11:37,210
gyda mynegai yn nhrefn yr wyddor.

196
00:11:37,210 --> 00:11:42,540
Mynegai yn nhrefn yr wyddor Y yw 24 gan fod y
ail llythyr diwethaf yn yr wyddor.

197
00:11:42,540 --> 00:11:46,520
Felly, yna 24 yn ogystal â'n
allweddol dau yn rhoi i ni 26.

198
00:11:46,520 --> 00:11:54,750
26 mod 26 yn rhoi 0, sydd, yn ffodus i ni
ni, yw'r mynegai yn nhrefn yr wyddor ar gyfer A.

199
00:11:54,750 --> 00:11:59,100
Felly, gobeithio hynny'n ddigon bod prawf
y dull mynegai yn nhrefn yr wyddor yn gweithio.

200
00:11:59,100 --> 00:12:03,180
Os nad yw, mae croeso i roi cynnig ar
rhai enghreifftiau eich hun.

201
00:12:03,180 --> 00:12:08,030
>> Er mwyn lapio yn iawn o amgylch y
wyddor a chymhwyso'r hafaliad Cesar,

202
00:12:08,030 --> 00:12:11,280
Yna, rydym yn gwybod bod angen i ni ni
delio â mynegeion yn nhrefn yr wyddor.

203
00:12:11,280 --> 00:12:15,130
Ond rydym yn dechrau gyda ASCII
gwerthoedd, a dim ond wedyn

204
00:12:15,130 --> 00:12:18,530
rydym yn wedyn yn newid i
mynegai yn nhrefn yr wyddor.

205
00:12:18,530 --> 00:12:23,970
Oddi yno, er mwyn i argraffu, mae angen
i ddelio â'r gwerthoedd ASCII eto.

206
00:12:23,970 --> 00:12:28,350
Felly mae angen i chyfrif i maes sut i
mynd o ASCII i wyddor

207
00:12:28,350 --> 00:12:31,080
ac o nhrefn yr wyddor i ASCII.

208
00:12:31,080 --> 00:12:34,910
>> Felly yr wyf yn gadael i chi chyfrif i maes
patrwm rhwng cymeriad

209
00:12:34,910 --> 00:12:38,590
ac mae ei nhrefn yr wyddor
mynegai a'i werth ASCII.

210
00:12:38,590 --> 00:12:41,530
Yn awr, cofiwch fod hyd yn oed er
tabl hwn hawl ar y sleid

211
00:12:41,530 --> 00:12:45,630
yn dangos y priflythrennau, rydym hefyd yn
rhaid i ni ystyried a yw

212
00:12:45,630 --> 00:12:48,915
patrwm gwahanol yn berthnasol
ar gyfer y cymeriadau llythrennau bach.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> Felly nawr ein bod wedi cyfrifedig allan
sut i symud cymeriad unigol,

215
00:12:55,840 --> 00:13:02,200
yna i gyd yn rhaid i ni ei wneud yw raddfa sy'n
i fynd ar draws y plaintext cyfan.

216
00:13:02,200 --> 00:13:04,260
Felly mae'r plaintext yn llinyn.

217
00:13:04,260 --> 00:13:08,210
Lwcus i ni, llinyn yn wirioneddol
dim ond amrywiaeth o gymeriadau,

218
00:13:08,210 --> 00:13:12,150
hynny er mwyn cael mynediad i bob cymeriad
o linyn, pob rhaid i chi ei wneud

219
00:13:12,150 --> 00:13:14,270
yw defnyddio nodiant arae.

220
00:13:14,270 --> 00:13:20,270
Dweud Mae gen i amrywiol o fath
llinyn o'r enw "testun = 'mae hyn yn CS50.'"

221
00:13:20,270 --> 00:13:22,730
>> Wel, yna, er mwyn
gael gafael ar bob cymeriad,

222
00:13:22,730 --> 00:13:25,880
i gyd yn rhaid i mi ei wneud gyda
mae'r testun amrywiol yw

223
00:13:25,880 --> 00:13:31,660
i ddweud yn dda, testun yn mynegai sero, bod
cyfateb i T. cyfalaf Testun yn mynegai

224
00:13:31,660 --> 00:13:35,100
un yn cyfateb i'r llythrennau bach h.

225
00:13:35,100 --> 00:13:38,110
swyddogaeth ddefnyddiol arall yw
y swyddogaeth hyd llinyn.

226
00:13:38,110 --> 00:13:40,760
Felly pasio mewn llinyn i
Bydd y swyddogaeth honno yn dychwelyd

227
00:13:40,760 --> 00:13:44,610
yn gyfanrif, hyd y llinyn.

228
00:13:44,610 --> 00:13:47,060
>> rydym Nawr bod wedi siarad am
holl elfennau gwahanol hyn,

229
00:13:47,060 --> 00:13:48,540
gadewch i ni roi yn ôl at ei gilydd.

230
00:13:48,540 --> 00:13:52,210
Felly yn dychwelyd i naill ai fy pseudocode
cod neu eich pseudocode

231
00:13:52,210 --> 00:13:55,920
ac ewch drwy'r a gwnewch yn siŵr eich bod yn
gwybod sut i wneud pob un peth.

232
00:13:55,920 --> 00:14:01,520
Cael y allweddol gan ddefnyddio argc a argv,
droi'r allwedd i mewn i cyfanrif, mae

233
00:14:01,520 --> 00:14:06,840
i fi, anogaeth ar gyfer plaintext,
getstring, ac yna ailadrodd

234
00:14:06,840 --> 00:14:09,590
dros bob cymeriad mewn
y llinyn plaintext,

235
00:14:09,590 --> 00:14:14,910
cadw achos pob cymeriad
a symud y cymeriad hwnnw gan yr allwedd,

236
00:14:14,910 --> 00:14:17,520
gan sicrhau eich bod yn
lapio o amgylch y wyddor,

237
00:14:17,520 --> 00:14:20,850
yn olaf argraffu y ciphertext.

238
00:14:20,850 --> 00:14:25,470
Fy enw i yw Amila, ac roedd hyn yn Caesar.

239
00:14:25,470 --> 00:14:28,448

