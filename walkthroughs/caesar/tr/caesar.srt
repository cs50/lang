1
00:00:00,000 --> 00:00:00,760

2
00:00:00,760 --> 00:00:02,270
>> Amila: Kullanıcı Sezar mücadele edelim.

3
00:00:02,270 --> 00:00:06,110
Sezar, biz kullanıcı izin
gizli bir mesaj kodlamak için.

4
00:00:06,110 --> 00:00:09,780
Yani sağ dalış let ve bakmak
Bu sorun için bizim-dos de.

5
00:00:09,780 --> 00:00:12,210
Bunun için ilk önce, biz kullanıcıdan anahtarı alın.

6
00:00:12,210 --> 00:00:15,210
Sonra düz metin olsun
onlar kodlamak istediğiniz.

7
00:00:15,210 --> 00:00:21,380
Bundan sonra biz onlar için şifrelenmesi,
ve nihayet biz onların şifreli yazdırın.

8
00:00:21,380 --> 00:00:23,600
>> Yani bir örnekle başlayalım.

9
00:00:23,600 --> 00:00:26,920
kodlamak istediğini söylemek
ikisinin bir anahtarla tüm alfabe.

10
00:00:26,920 --> 00:00:31,360
Eh, tüm alfabe olur
Sadece harfler kaydırılmalıdır.

11
00:00:31,360 --> 00:00:37,060
Yani A C, B kodlamak istiyorum
D, C, E, böylece ve benzeri,

12
00:00:37,060 --> 00:00:42,470
Eğer Z'ye kodlayan X, elde edene kadar
ya Nereli bağlı zed.

13
00:00:42,470 --> 00:00:47,445
Sonra Y, daha sonra tüm yol kayacaktır
A almak için alfabenin etrafına sarın,

14
00:00:47,445 --> 00:00:53,256
ve sonra nihayet geçen mektup
alfabe, Z, zed, B. kodlamak istiyorum

15
00:00:53,256 --> 00:00:54,660
>> Anladın?

16
00:00:54,660 --> 00:00:56,380
Biraz örneklere bakalım.

17
00:00:56,380 --> 00:01:00,540
Burada ilk örnek çok benzer
Biz sadece yukarıda açıklandığı ne.

18
00:01:00,540 --> 00:01:05,560
Ben biraz bölümünü kodlamak Yani eğer
Alfabe, bir L ile, bu ikisinin bir anahtar ile,

19
00:01:05,560 --> 00:01:09,760
Sonra sadece benim bütününü almak
alfabe iki harf değiştirdi.

20
00:01:09,760 --> 00:01:12,230
>> Sonra, benim bir sonraki örnekte,
Anahtar, yine iki

21
00:01:12,230 --> 00:01:15,080
bu yüzden hala bilmeli
hangi harfler beklemek.

22
00:01:15,080 --> 00:01:16,400
Ama burada bir ifade var.

23
00:01:16,400 --> 00:01:18,100
Bu CS50 olduğunu.

24
00:01:18,100 --> 00:01:21,090
Yani o ben fark edeceksiniz
Benim küçük harf korumak,

25
00:01:21,090 --> 00:01:25,600
bu yüzden herhangi bir üst harf de vardır
şifreli üst harfler.

26
00:01:25,600 --> 00:01:27,800
Ve her küçük
düz metin olarak harfler

27
00:01:27,800 --> 00:01:30,640
Ayrıca küçük harf olur
şifreli harfler.

28
00:01:30,640 --> 00:01:34,020
Ama mektupları tutmak
ve herhangi bir ünlem işareti

29
00:01:34,020 --> 00:01:37,610
ya da başka bir noktalama aynı.

30
00:01:37,610 --> 00:01:40,360
>> Yani şimdi bir duygusu var olduğunu
Program nasıl çalıştığını,

31
00:01:40,360 --> 00:01:43,890
biraz daha koşmak gitmek için çekinmeyin
Kendi örnekleri, isterseniz.

32
00:01:43,890 --> 00:01:47,072
en alma ile başlayalım
kullanıcıdan tuşuna basın.

33
00:01:47,072 --> 00:01:48,780
Geleneksel olarak, sahip
Diğer problemler, biz ettik

34
00:01:48,780 --> 00:01:51,450
elde alışık
herhangi bir numara biz bu

35
00:01:51,450 --> 00:01:54,710
kullanıcıdan istemek tarafından ihtiyaç
fonksiyon GETINT ile.

36
00:01:54,710 --> 00:01:58,850
Ama bu sefer biz aslında gidiyoruz
komut satırı argümanı kullanmak için

37
00:01:58,850 --> 00:02:01,760
ve yeni bir fonksiyon atoi denir.

38
00:02:01,760 --> 00:02:05,130
>> Ana çalıştırdığınızda
C programı, daha sonra

39
00:02:05,130 --> 00:02:08,500
İki parameters-- alır
int argc, hangi

40
00:02:08,500 --> 00:02:11,670
argümanların sayısı
geçirilen ve daha sonra

41
00:02:11,670 --> 00:02:15,920
içeren argv, dizelerden oluşan bir dizi
tüm argümanlar listesi

42
00:02:15,920 --> 00:02:16,740
geçti.

43
00:02:16,740 --> 00:02:19,740
Açıkça yok
Bu değişkenleri bildirmek için.

44
00:02:19,740 --> 00:02:22,700
Bunlar için hesaplanan konum
derleyici tarafından size.

45
00:02:22,700 --> 00:02:28,160
Bunun için doğru kullanım olurdu
argc bu durumda iki olmak üzere,

46
00:02:28,160 --> 00:02:32,630
Kullanıcı geçmek zorunda çünkü
Programa çağrı ./caesar,

47
00:02:32,630 --> 00:02:35,570
ve daha sonra anahtar,
ne olursa olsun sayı istedikleri.

48
00:02:35,570 --> 00:02:39,920
Böylece argc olması gerektiği anlamına gelir, iki
Sezar geçerli bir kullanım için sırayla

49
00:02:39,920 --> 00:02:41,680
yürütülecek.

50
00:02:41,680 --> 00:02:43,590
>> Yani bir örneğe bakalım.

51
00:02:43,590 --> 00:02:47,760
Zaten yazdım demek ve
blastoff adında bir program hazırladı.

52
00:02:47,760 --> 00:02:52,670
Yani eğer ben komut satırında koştu
./blastoff Roket Takımı, o zaman,

53
00:02:52,670 --> 00:02:57,750
argc üç olurdu çünkü ben
üç ayrı argümanlar geçti.

54
00:02:57,750 --> 00:02:59,830
Sonra argv böyle olmazdı.

55
00:02:59,830 --> 00:03:03,750
Bu bir dizi, ve o-cekti
Üç dizeleri her içerirler.

56
00:03:03,750 --> 00:03:09,640
İlk endeks, takım ./blastoff
Geçen sonraki ve roket.

57
00:03:09,640 --> 00:03:11,610
>> en bir saniye diziler bahsedelim.

58
00:03:11,610 --> 00:03:15,560
Diziler tutun veri yapıları vardır
Aynı türden birden çok değer.

59
00:03:15,560 --> 00:03:19,980
biz bu kullanışlı gelebilir
tamsayılar ya da dizeleri listeleri vardır.

60
00:03:19,980 --> 00:03:23,030
Sadece onlar hatırlıyorum
aynı tip olması.

61
00:03:23,030 --> 00:03:25,310
bilgisayar bilimi, biz
sıfırdan saymaya seviyorum,

62
00:03:25,310 --> 00:03:29,260
bu yüzden diziler unutmayın
Ayrıca sıfır endeksli bulunmaktadır.

63
00:03:29,260 --> 00:03:34,360
Benim dizinin ilk elemanı Yani
indeks sıfır olacak.

64
00:03:34,360 --> 00:03:37,580
Yani bu durumda, ne zaman var
süresi dört bir dizi,

65
00:03:37,580 --> 00:03:41,350
sonra son endeks
Benim dizinin son elemanı

66
00:03:41,350 --> 00:03:44,970
Aslında olacak
endeksi üç değil, dört at.

67
00:03:44,970 --> 00:03:48,880
, Biz hatırlıyorum çünkü
sıfırdan saymaya başlar.

68
00:03:48,880 --> 00:03:52,530
>> İşte size nasıl bir örnek
Kendi bir dizi oluşturmak olabilir.

69
00:03:52,530 --> 00:03:56,440
Yani saklamak istedim demek benim
üç favori köpek isimleri.

70
00:03:56,440 --> 00:03:59,030
Sonra dizelerden oluşan bir dizi oluşturmak istiyorum.

71
00:03:59,030 --> 00:04:04,450
Yani tipi, dize beyan ederim ve
Daha sonra dizinin adını koymak, köpekler,

72
00:04:04,450 --> 00:04:06,450
ve daha sonra bu meydanda
parantez boyutu koymak

73
00:04:06,450 --> 00:04:09,260
Bu durumda, üç array-- arasında.

74
00:04:09,260 --> 00:04:12,690
>> Yani benim ilk giriş gidiyor
indeks sıfır köpekler olmak,

75
00:04:12,690 --> 00:04:14,750
ve o Milo olacak.

76
00:04:14,750 --> 00:04:17,850
Sonra endeksinde bir de köpekleri
goofy olacak,

77
00:04:17,850 --> 00:04:23,060
Daha sonra sevgilim Mochi ve son
giriş, endeks iki üçüncü giriş,

78
00:04:23,060 --> 00:04:26,130
sevimli, tatlı Elphie olacak.

79
00:04:26,130 --> 00:04:28,610
Sen biçimi olduğunu fark edeceksiniz
Bu dizide doldurmak için kullanılan

80
00:04:28,610 --> 00:04:32,150
nasıl olabilir gibi çok fazla
başka herhangi bir değişkeni nerede bildirmek

81
00:04:32,150 --> 00:04:36,307
Eğer takip değişken adı var
Eğer içinde saklanan istediğiniz değer.

82
00:04:36,307 --> 00:04:38,140
tek fark
Bu durumda size olduğunu

83
00:04:38,140 --> 00:04:42,700
endeksi koymak için hatırlamak zorunda
köşeli parantez içinde değerin.

84
00:04:42,700 --> 00:04:46,420
Ve orada biz bizim var
üç favori köpekler.

85
00:04:46,420 --> 00:04:48,780
>> Ama ne yazık ki, zamanı geldi
geri Sezar almak için.

86
00:04:48,780 --> 00:04:52,910
söz konusu doğru kullanım Ol
Kullanıcı sadece geçen olacak

87
00:04:52,910 --> 00:04:57,430
Program ./caesar adı, ama
onlar vardiya istediğiniz zamanda anahtar

88
00:04:57,430 --> 00:04:58,850
onların şifresiz.

89
00:04:58,850 --> 00:05:01,540
Böylece argc iki olması gerektiği anlamına gelir.

90
00:05:01,540 --> 00:05:07,580
Hiçbir, iki-- daha geçmesi gerekir
İki komut satırı argümanları daha az.

91
00:05:07,580 --> 00:05:09,050
>> Şimdi, argv hakkında?

92
00:05:09,050 --> 00:05:12,880
Eh, biz zaten biliyoruz
Dizi, uzunluğu iki olacak

93
00:05:12,880 --> 00:05:15,270
ama ne her elemanın bulunan ki?

94
00:05:15,270 --> 00:05:19,330
Peki, ilk eleman
./caesar olacak,

95
00:05:19,330 --> 00:05:24,190
ve sonra bir sonraki eleman gidiyor
Kullanıcı yazdığınız anahtar içerir.

96
00:05:24,190 --> 00:05:27,480
Şimdi, eğer doğru kullanılan
Sezar kullanımı için,

97
00:05:27,480 --> 00:05:29,350
sonra da bir sayı yazmak için gidiyoruz.

98
00:05:29,350 --> 00:05:33,260
Ama bile karakter olsa
onlar yazdığınız bir sayıdır

99
00:05:33,260 --> 00:05:35,790
veri türü dize var.

100
00:05:35,790 --> 00:05:40,390
>> Peki bunu nasıl dönüştürebilirim
bir tamsayı dize?

101
00:05:40,390 --> 00:05:46,680
Yani num var ki, bir dize,
sicimi 50 ihtiva etmektedir.

102
00:05:46,680 --> 00:05:49,000
Bunu dönüştürmek istiyorsanız
bir tamsayı, sonra ben sadece

103
00:05:49,000 --> 00:05:53,340
Yeni bir değişkeni bildirmek bir
atoi çağırarak, i tamsayı.

104
00:05:53,340 --> 00:06:01,160
Ben num, benim dize değişkeni geçmek ve
sonra ben, sonra sayı 50 içerecektir.

105
00:06:01,160 --> 00:06:04,350
Make adamı kontrol edin
atoi fonksiyonu için sayfa

106
00:06:04,350 --> 00:06:07,990
öyle ki kütüphane kontrol etmek için
, hem de ona değer olarak ne

107
00:06:07,990 --> 00:06:14,550
dize geçtiyseniz dönecektir
Tüm sayılar içermez.

108
00:06:14,550 --> 00:06:16,950
>> Yani şimdi biz kazanılmış ettik
anahtar, bir sonraki adım

109
00:06:16,950 --> 00:06:19,430
kullanıcıdan düz metin elde etmektir.

110
00:06:19,430 --> 00:06:21,170
Şimdi, bu gidiyor
daha az karmaşık olması

111
00:06:21,170 --> 00:06:23,410
etrafında gezinmek daha
komut satırı argümanları.

112
00:06:23,410 --> 00:06:26,190
Tek yapmamız gereken tüm çağrı
getString fonksiyonu

113
00:06:26,190 --> 00:06:29,660
vermek için kullanıcı istemi
Bize bir dize, ama unutmayın

114
00:06:29,660 --> 00:06:34,090
nasıl özelliklerini kontrol etmek biz
Bunun için kullanıcı istemi isteyebilirsiniz.

115
00:06:34,090 --> 00:06:36,420
>> Şimdi gelip
problem-- kalbi

116
00:06:36,420 --> 00:06:38,860
nasıl düz metin şifrelemek için.

117
00:06:38,860 --> 00:06:42,830
Peki, ilk, en nasıl hakkında konuşalım
Bir seferde bir karakter şifrelemek için,

118
00:06:42,830 --> 00:06:47,370
ve sonra biz nasıl hitap edeceğiz
tüm düz metin üzerinde yineleme.

119
00:06:47,370 --> 00:06:50,440
Bazı pseudocode yazdım
Sezar sorunu için.

120
00:06:50,440 --> 00:06:52,310
Ben etmenizi öneririz
aynı zamanda kendi yazın.

121
00:06:52,310 --> 00:06:55,900
Bu aynı görünmeyebilir
benim ve bu Tamam, ama sürece var

122
00:06:55,900 --> 00:06:58,640
genel bir fikir aynıdır.

123
00:06:58,640 --> 00:07:00,780
>> İlk üç adım
biz zaten yaptık.

124
00:07:00,780 --> 00:07:03,100
Biz anahtarı gotten
komut satırı argümanı,

125
00:07:03,100 --> 00:07:05,510
biz bu anahtarı çevirdiğim
bir tamsayı içine ve biz ettik

126
00:07:05,510 --> 00:07:09,320
düz metin için kullanıcı istendiğinde
onlar şifrelenmesi istediğiniz.

127
00:07:09,320 --> 00:07:12,420
O zaman bir sonraki büyük bir yığın
her bir karakter için

128
00:07:12,420 --> 00:07:15,070
düz metin dizesinde,
o alfabetik eğer,

129
00:07:15,070 --> 00:07:17,750
Biz korumak istiyor
İçtihat ve doğru kayması.

130
00:07:17,750 --> 00:07:20,900
Vaka korumak tarafından ne
demek tüm üst durumda olduğunu

131
00:07:20,900 --> 00:07:23,580
harfler büyük kalmalıdır
dava ve tüm küçük harfler

132
00:07:23,580 --> 00:07:25,640
küçük kalmalıdır.

133
00:07:25,640 --> 00:07:29,110
Öyleyse biz bu vardiya sonra,
o zaman şifreli yazdırın.

134
00:07:29,110 --> 00:07:33,100
>> İşte gidiyor üç işlevi vardır
Bu sorun için kullanışlı gelmek.

135
00:07:33,100 --> 00:07:38,010
Ben verince kadar yukarıda hatırla
Bu kaydırma örneğin CS50 mı?

136
00:07:38,010 --> 00:07:41,800
Unutmayın ki 50 ve
ünlem işareti vardiya değil mi?

137
00:07:41,800 --> 00:07:45,680
Bu yüzden biz olmadığını nasıl anlarım
bir mektup vardiya veya gerekir?

138
00:07:45,680 --> 00:07:48,650
Peki, eğer "alfa olduğunu"
Eğer bir karakter geçmek

139
00:07:48,650 --> 00:07:54,850
Bu karakter ise doğru döndürür
Aksi takdirde, bir mektup ve yanlıştır.

140
00:07:54,850 --> 00:07:56,870
size yardımcı olmak için
koruyarak büyük harf

141
00:07:56,870 --> 00:07:59,750
fonksiyonları "toplamak vardır
Üst "ve" düşüktür ".

142
00:07:59,750 --> 00:08:03,350
>> Bu iki işlev de almak
girdi olarak tek bir karakter

143
00:08:03,350 --> 00:08:06,580
ve size bir Boole döndürür
doğru ya da yanlış

144
00:08:06,580 --> 00:08:11,280
o karakterin bağlı olarak
büyük harf veya küçük harf olduğunu.

145
00:08:11,280 --> 00:08:14,610
"Üst çünkü" ve "dir
alt "Boole fonksiyonları,

146
00:08:14,610 --> 00:08:18,660
onlar size bir Boole döndürür, yani
Eğer şartlarda bu kullanabilirsiniz.

147
00:08:18,660 --> 00:08:23,490
Yani burada bir kod parçacığını olduğunu sadece
üst durumda eğer bir mektup yazdırır.

148
00:08:23,490 --> 00:08:27,790
Yani benim karakter ilan ettik
harf büyük zed edilecek

149
00:08:27,790 --> 00:08:33,440
ve daha sonra eğer döner "üst olduğunu"
Gerçek, sonra o mektup yazdırmak.

150
00:08:33,440 --> 00:08:38,200
>> bizim basit örneğine dönersek
ikisinin bir anahtar ile alfabeyi kaydırılması,

151
00:08:38,200 --> 00:08:41,049
nasıl biz aslında bu işe alabilirim?

152
00:08:41,049 --> 00:08:45,770
Peki, bu karakterlerin çıkıyor
ve tamsayılar çok yakından ilişkilidir.

153
00:08:45,770 --> 00:08:48,840
Her karakter bir vardır
ilişkili tamsayı değeri

154
00:08:48,840 --> 00:08:53,260
ASCII tablosunda bulunan ile,
nerede her karakterin ASCII

155
00:08:53,260 --> 00:08:55,380
değeri görüntülenir.

156
00:08:55,380 --> 00:08:58,940
Yani bir büyük harf A tekabül
65 ASCII değeri

157
00:08:58,940 --> 00:09:02,270
ve bir küçük a
97 ASCII değeri.

158
00:09:02,270 --> 00:09:04,940
>> bakmak için çekinmeyin
Online herhangi bir ASCII tablosu

159
00:09:04,940 --> 00:09:07,720
Kendiniz için bu değerleri görmek için.

160
00:09:07,720 --> 00:09:12,096
Peki bunun anlamı biz olduğunu
, Büyük harf A karakterini almak

161
00:09:12,096 --> 00:09:18,200
buna tamsayı iki ekleyin ve sonra almak
bir sonucu olarak karakter büyük harf C.

162
00:09:18,200 --> 00:09:23,720
Bu 65 için, ASCII var:
sermaye A değeri, artı 2,

163
00:09:23,720 --> 00:09:29,960
tekabül eden bize 67 verir
büyük harf C karakterine

164
00:09:29,960 --> 00:09:33,480
>> Ne yazık ki, işler
o kadar basit olmayacaktır.

165
00:09:33,480 --> 00:09:36,980
Biz bir denklemi var
Biz düşünmek zorundayız.

166
00:09:36,980 --> 00:09:43,590
Burada i şifreli olduğunu söyler
mektup i düz metin karşılık

167
00:09:43,590 --> 00:09:48,900
mektup, artı key--
Bütün bunlar, modüler 26.

168
00:09:48,900 --> 00:09:50,810
Neden bu durumda?

169
00:09:50,810 --> 00:09:55,430
en bizim örnek geri dönelim
daha önce nerede sermaye A, artı 2,

170
00:09:55,430 --> 00:09:57,590
Bize sermaye C verir

171
00:09:57,590 --> 00:10:01,870
>> Bu yüzden denklem uygulanarak
şartname, bize verir

172
00:10:01,870 --> 00:10:06,660
Daha sonra sermaye A alalım
2 ve 26 ile o mod artı.

173
00:10:06,660 --> 00:10:10,730
Yani sermaye A, ne zaman koymak
Bu tek tırnak işaretleri,

174
00:10:10,730 --> 00:10:14,010
Benim gibi davranın olanak sağlar
arasında bir tamsayıdır, böylece sağlar

175
00:10:14,010 --> 00:10:17,500
Bana onun ASCII değeri, 65 için döküm.

176
00:10:17,500 --> 00:10:20,080
65 artı 2 67 olduğunu.

177
00:10:20,080 --> 00:10:25,210
67 mod 26, bize 15 verir
ama bu gerçekten değil

178
00:10:25,210 --> 00:10:32,590
Biz biliyoruz çünkü mantıklı
sermaye C ASCII değeri 67 değil, 15 olduğunu.

179
00:10:32,590 --> 00:10:35,580
Peki bunu bağdaştırmak mı?

180
00:10:35,580 --> 00:10:39,840
>> İşte ben varsaymak istiyorum
alfabetik indeks kavramı.

181
00:10:39,840 --> 00:10:44,010
Yani biz zaten nasıl konuştuk
Her karakter, ASCII değeri vardır

182
00:10:44,010 --> 00:10:48,810
ama ben de, diyelim, demek istiyorum
her karakter aynı zamanda sahip düşünmek

183
00:10:48,810 --> 00:10:52,230
alfabetik indeks,
burada A, örneğin,

184
00:10:52,230 --> 00:10:58,800
alfabenin ilk harfi olarak,
sıfır alfabetik bir fihrist vardır.

185
00:10:58,800 --> 00:11:02,070
Bu yüzden şimdi en uygulayalım
Aynı denklem daha önce olduğu gibi,

186
00:11:02,070 --> 00:11:05,040
ama alfabetik dizini kullanarak.

187
00:11:05,040 --> 00:11:07,810
>> Belirlediğimiz bu şekilde bir sıfır.

188
00:11:07,810 --> 00:11:15,640
Öyleyse sıfır artı iki, mod 26 alarak,
iki, iki bize veren mod 26 var.

189
00:11:15,640 --> 00:11:18,780
ve iyi, terimler
alfabetik indeks,

190
00:11:18,780 --> 00:11:23,930
C üçüncü mektup
alfabe, böylece karşılık gelecektir

191
00:11:23,930 --> 00:11:26,290
İki alfabetik indeksi.

192
00:11:26,290 --> 00:11:29,850
Yüzden kullanırken görünüyor
Bu durumda alfabetik indeks

193
00:11:29,850 --> 00:11:32,840
aslında bize doğru sonuç verir.

194
00:11:32,840 --> 00:11:35,020
>> Bu yüzden şimdi en kontrol izin
denklem eserleri görmek

195
00:11:35,020 --> 00:11:37,210
alfabetik indeksi ile.

196
00:11:37,210 --> 00:11:42,540
Y'nin alfabetik indeks olarak 24 olduğu
alfabenin son harfi ikinci.

197
00:11:42,540 --> 00:11:46,520
Öyleyse 24 artı bizim
iki anahtar bize 26 verir.

198
00:11:46,520 --> 00:11:54,750
26 mod 26 bize 0, için, şanslı verir
Bize, A. alfabetik indeksi

199
00:11:54,750 --> 00:11:59,100
Bu yüzden umarım bu yeterli kanıtıdır var
alfabetik indeks yöntem çalışır.

200
00:11:59,100 --> 00:12:03,180
Değilse, denemek için çekinmeyin
kendi bazı örnekler.

201
00:12:03,180 --> 00:12:08,030
>> Düzgün etrafında sarmak için,
alfabe ve Sezar denklemini uygulamak,

202
00:12:08,030 --> 00:12:11,280
o zaman biz gerektiğini biliyoruz
alfabetik endeksleri ile anlaşma.

203
00:12:11,280 --> 00:12:15,130
Ama biz ASCII ile başlar
ancak o zaman değerleri ve

204
00:12:15,130 --> 00:12:18,530
O zaman için dönüştürebilirim
alfabetik indeksi.

205
00:12:18,530 --> 00:12:23,970
Oradan, yazdırmak için, ihtiyacımız
Yine ASCII değerleri ile başa çıkmak için.

206
00:12:23,970 --> 00:12:28,350
Bu yüzden nasıl anlamaya ihtiyacımız var
alfabetik ASCII gitmek

207
00:12:28,350 --> 00:12:31,080
ve alfabetik gelen ASCII.

208
00:12:31,080 --> 00:12:34,910
>> Bu yüzden anlamaya size bırakıyorum
Bir karakter arasındaki desen

209
00:12:34,910 --> 00:12:38,590
ve alfabetik
indeks ve ASCII değeri.

210
00:12:38,590 --> 00:12:41,530
Şimdi, olsa da unutmayın
slaytta bu tablo doğru

211
00:12:41,530 --> 00:12:45,630
biz de, büyük harf gösterir
olsun veya olmasın düşünmek zorundayız

212
00:12:45,630 --> 00:12:48,915
Farklı desen uygular
küçük harf karakterleri için.

213
00:12:48,915 --> 00:12:52,070

214
00:12:52,070 --> 00:12:55,840
>> Yani şimdi biz çözdüm o
tek bir karakter nasıl değiştireceğini,

215
00:12:55,840 --> 00:13:02,200
Daha sonra yapmamız gereken tüm ölçek olduğunu
kadar tüm düz metin boyunca gitmek için.

216
00:13:02,200 --> 00:13:04,260
Yani düz metin bir dizedir.

217
00:13:04,260 --> 00:13:08,210
Şanslı bizim için bir dize gerçekten
karakter sadece bir dizi,

218
00:13:08,210 --> 00:13:12,150
bu yüzden her karaktere erişmek için
Bir dize, tüm yapmanız gereken

219
00:13:12,150 --> 00:13:14,270
dizi gösterimini kullanmaktır.

220
00:13:14,270 --> 00:13:20,270
Ben türünde bir değişken var demek
denilen string "text = 'Bu CS50 olduğunu.'"

221
00:13:20,270 --> 00:13:22,730
>> Peki, o zaman, sırayla için
her karakter erişmek,

222
00:13:22,730 --> 00:13:25,880
Tüm ben yapmak zorunda
Değişken metin

223
00:13:25,880 --> 00:13:31,660
Bu, iyi demek endeksi sıfır metni
endeksi sermaye T. Metin tekabül

224
00:13:31,660 --> 00:13:35,100
bir küçük harf h karşılık gelir.

225
00:13:35,100 --> 00:13:38,110
Başka bir yararlı işlevi
dize uzunluğu işlevi.

226
00:13:38,110 --> 00:13:40,760
Yani bir dize geçirerek
Bu fonksiyon dönecektir

227
00:13:40,760 --> 00:13:44,610
bir tamsayı, o dizenin uzunluğu.

228
00:13:44,610 --> 00:13:47,060
>> biz konuştuk şimdi
Tüm bu farklı unsurları,

229
00:13:47,060 --> 00:13:48,540
Birlikte onları geri koyalım.

230
00:13:48,540 --> 00:13:52,210
Yani ya benim pseudocode dönmek
Kod veya pseudocode

231
00:13:52,210 --> 00:13:55,920
ve geçmesi ve emin olun size o
her şeyi yapmak için biliyorum.

232
00:13:55,920 --> 00:14:01,520
argc ve argv kullanarak anahtarı alma,
bir tamsayı içine anahtarı çevirerek, bir

233
00:14:01,520 --> 00:14:06,840
i, düz metin sorulması,
getString ve yineleme

234
00:14:06,840 --> 00:14:09,590
Her karakter üzerinde
düz metin dizesi,

235
00:14:09,590 --> 00:14:14,910
Her karakterin davayı koruyarak
ve anahtar ile bu karakteri değişen,

236
00:14:14,910 --> 00:14:17,520
sen sağlanması
alfabenin sarılıp,

237
00:14:17,520 --> 00:14:20,850
Nihayet o şifreli baskı.

238
00:14:20,850 --> 00:14:25,470
Benim adım Amila ve bu Sezar oldu.

239
00:14:25,470 --> 00:14:28,448

