1
00:00:00,000 --> 00:00:00,460

2
00:00:00,460 --> 00:00:02,251
>> 陈ZAMYLA：在
缩写的问题，我们

3
00:00:02,251 --> 00:00:04,320
要提示用户
他们的名字，然后

4
00:00:04,320 --> 00:00:07,000
打印从名字缩写。

5
00:00:07,000 --> 00:00:09,750
要提示用户输入姓名，
我们将使用get_string功能

6
00:00:09,750 --> 00:00:11,670
在CS 50库中找到。

7
00:00:11,670 --> 00:00:14,000
>> 你允许做
2 assumptions--之一，

8
00:00:14,000 --> 00:00:17,010
该字符串将包括
只有字母和spaces--等等

9
00:00:17,010 --> 00:00:19,152
没有数字，没有其它字符。

10
00:00:19,152 --> 00:00:21,110
你也被允许
假设有只

11
00:00:21,110 --> 00:00:25,420
将是一个单一的空间
之间字母，名称之间。

12
00:00:25,420 --> 00:00:29,560
>> 所以一旦你有一个字符串，那么
让我们去打印的缩写。

13
00:00:29,560 --> 00:00:32,740
在这个例子中，说我
要成为一个完美的用户。

14
00:00:32,740 --> 00:00:36,040
然后我会在我的名字输入
资本Z和大写的C，

15
00:00:36,040 --> 00:00:37,940
在两者之间有一个空格。

16
00:00:37,940 --> 00:00:40,360
所以，你的计划将
计算第一信

17
00:00:40,360 --> 00:00:44,860
然后将第一个字母之后
一个空间，并打印出ZC。

18
00:00:44,860 --> 00:00:47,710
>> 但对于例如，假设英里
香蕉是在键盘。

19
00:00:47,710 --> 00:00:50,240
好了，他可能是一个
比我有点更模糊

20
00:00:50,240 --> 00:00:54,890
我只有在小写型
信件和包括额外的空间

21
00:00:54,890 --> 00:00:56,870
在他的名字前面。

22
00:00:56,870 --> 00:00:59,890
但是，你的程序应该
具有完全相同的输出，

23
00:00:59,890 --> 00:01:03,440
以大写MB，不含任何空格。

24
00:01:03,440 --> 00:01:06,600
>> 最后，只要您
确定的字符打印，

25
00:01:06,600 --> 00:01:11,360
确保你打印出来的
大写使用TOUPPER功能。

26
00:01:11,360 --> 00:01:15,870
>> 我的名字是ZC，这是缩写。

27
00:01:15,870 --> 00:01:18,482

