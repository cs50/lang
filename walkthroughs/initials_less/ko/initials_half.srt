1
00:00:00,000 --> 00:00:00,460

2
00:00:00,460 --> 00:00:02,251
>> ZAMYLA CHAN :에서
이니셜 문제, 우리는있어

3
00:00:02,251 --> 00:00:04,320
사용자에게 메시지를 표시 할 것
자신의 이름에 대한 다음

4
00:00:04,320 --> 00:00:07,000
그 이름에서 이니셜을 인쇄 할 수 있습니다.

5
00:00:07,000 --> 00:00:09,750
이름을 사용자에게 메시지를 표시하기 위해,
우리는에서는 get_string 기능을 사용합니다

6
00:00:09,750 --> 00:00:11,670
연사 (50) 도서관에서 발견했다.

7
00:00:11,670 --> 00:00:14,000
>> 당신은 할 수있어
이 일 assumptions--,

8
00:00:14,000 --> 00:00:17,010
문자열이 포함됩니다
의 문자와 spaces-- 그래서

9
00:00:17,010 --> 00:00:19,152
아무 번호도없고, 다른 문자.

10
00:00:19,152 --> 00:00:21,110
또한 허용하고
이 단지의 가정

11
00:00:21,110 --> 00:00:25,420
하나의 공간이 될 것
이름 사이에 문자 사이.

12
00:00:25,420 --> 00:00:29,560
>> 다음, 해당 문자열을 일단 그래서
이제 글자를 인쇄 할 수 가자.

13
00:00:29,560 --> 00:00:32,740
이 예에서, 내가 말
완벽한 사용자로했다.

14
00:00:32,740 --> 00:00:36,040
그럼 난 내 이름을 입력 것
자본 Z와 자본 C,

15
00:00:36,040 --> 00:00:37,940
그 사이에 하나의 공간.

16
00:00:37,940 --> 00:00:40,360
그래서 프로그램이 것
첫 글자를 계산

17
00:00:40,360 --> 00:00:44,860
다음 첫 번째 문자 뒤에
ZC 밖으로 공간 및 인쇄.

18
00:00:44,860 --> 00:00:47,710
>> 그러나 예를 들어, 마일 말
바나나는 키보드에있다.

19
00:00:47,710 --> 00:00:50,240
글쎄, 그가 할 수있는
나는보다 조금 sloppier

20
00:00:50,240 --> 00:00:54,890
오전 소문자 만 입력
문자와 여분의 공간을 포함

21
00:00:54,890 --> 00:00:56,870
그의 이름 앞에있다.

22
00:00:56,870 --> 00:00:59,890
그러나 프로그램이해야
같은 정확한 출력을 가지고,

23
00:00:59,890 --> 00:01:03,440
공백없이 자본 MB와.

24
00:01:03,440 --> 00:01:06,600
>> 마지막으로, 당신은 할 때마다를했습니다
인쇄 문자를 결정,

25
00:01:06,600 --> 00:01:11,360
당신이 그들을 인쇄해야합니다
보수 ToUpper 기능을 사용하여 대문자.

26
00:01:11,360 --> 00:01:15,870
>> 내 이름은 ZC이며,이 이니셜이었다.

27
00:01:15,870 --> 00:01:18,482

