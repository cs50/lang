DAVID MALAN: Baiklah, selamat datang kembali. Sebelum kita menyelam ke dalam pengkomputeran awan, Saya fikir saya akan fikir seketika jika terdapat sebarang pertanyaan cemerlang atau topik yang datang semasa makan tengah hari bahawa sekarang mungkin menarik minat. PENONTON: [didengar] 

DAVID MALAN: OK. Oh baiklah. PENONTON: [didengar] 

DAVID MALAN: Tidak, sudah tentu. OK, baik mudah-mudahan semua anda masalah timbul dalam beberapa jam akan datang dan esok terutamanya. Tetapi mari kita lihat, kemudian, di mana perbincangan terakhir mengenai menyediakan laman web yang membawa, secara umum ketika datang ke awan pengkomputeran, menubuhkan sebuah seni bina pelayan, jenis keputusan jurutera dan pemaju dan pengurus perlu membuat apabila ia datang untuk melakukan lebih daripada sekadar mendaftar untuk $ 10 setiap web host bulan apabila anda benar-benar ingin membina infrastruktur anda sendiri. Dan kami akan cuba untuk mengikat kembali ini, misalnya, untuk Dropbox dan lain-lain suka mereka. 

Jadi mari kita mulakan untuk mempertimbangkan apa masalah timbul sebagai perniagaan mendapat yang baik dan masalah baik timbul. Jadi dalam kes yang paling mudah yang mempunyai beberapa syarikat yang mempunyai pelayan web, anda mungkin mempunyai, katakan, pelayan yang kita hanya akan menarik yang kelihatan seperti ini. Dan hari ini, sebahagian besar servers-- dan mari kita sebenarnya meletakkan gambar ini hanya jadi bahawa itu sedikit kurang samar. 

Jadi rak Dell server-- kembali pada hari itu, terdapat adalah komputer kerangka utama yang mengambil keseluruhan bilik. Hari-hari ini, jika kamu untuk mendapatkan pelayan itu, mungkin kelihatan sesuatu yang kecil seperti ini. Pelayan diukur dalam apa dipanggil unit rak, atau universiti penyelidikan. Dan satu RU 1.5 inci, yang merupakan standard industri. Jadi ini kelihatan seperti pelayan dua RU. Jadi ia adalah 3 inci tinggi. Dan mereka biasanya 19 inci lebar, yang bermaksud semua ini jenis barangan dipiawaikan. 

Jadi, jika anda melihat penggunaan di center-- data tidak hanya pada satu pelayan, tetapi mari kita kita lihat pada Google pusat data dan lihat jika kita melihat gambar yang bagus di Google Images. Ini adalah lebih baik daripada apa yang anda dinyalakan biasanya akan mencari, dan banyak seksi mencari akibat. tetapi ini adalah apa yang kelihatan seperti pasangan ratus pelayan semua kira-kira saiz yang sama, sebenarnya, dalam rak selepas rak selepas rak selepas rak di pusat data. 

Sesuatu seperti this-- boleh ini dengan baik menjadi Google, kerana saya googled Google. Tetapi ia boleh menjadi wakil lebih umumnya pusat data di mana banyak syarikat-syarikat biasanya bersama terletak. Dan bersama-terletak umumnya bermakna bahawa anda pergi ke tempat seperti Equinix atau vendor lain yang mempunyai besar gudang yang mempunyai banyak kuasa, banyak penyejukan, mudah-mudahan banyak keselamatan, dan sangkar individu melampirkan rak pelayan, dan anda sama ada menyewa rak atau anda membawa rak dalam. 

Dan syarikat-syarikat individu, startups terutamanya, akan mempunyai beberapa jenis biometrik untuk masuk ke dalam sangkar mereka, atau kekunci, atau kad utama. Anda membuka pintu. Dan di dalam terdapat hanya jejak rakaman persegi bahawa anda membayar untuk, di dalam mana anda boleh meletakkan apa sahaja yang anda mahu. 

Dan anda biasanya membayar untuk kuasa. Dan anda membayar untuk tapak kaki. Dan kemudian anda membayar diri untuk pelayan bahawa anda membawa ke dalam ruang itu. Dan apa yang anda kemudian mempunyai pilihan lakukan adalah membayar seseorang untuk sambungan perkhidmatan internet anda. Anda boleh membayar apa-apa bilangan vendor, yang semuanya biasanya datang ke dalam bahawa pusat data. 

Tetapi soalan yang menarik yang sebenar adalah, apa yang sebenarnya berlaku dalam orang-orang rak? Mereka mungkin semua sangat baik kelihatan seperti apa yang kita hanya melihat. Tetapi mereka melakukan fungsi yang berbeza dan mungkin perlu melakukan perkara-perkara yang berbeza. Dan mari kita sebenarnya motivasi kepada perbincangan ini dengan persoalan, apa masalah mula timbul jika anda berjaya? 

Jadi anda mempunyai laman web yang anda telah dibina. Dan mungkin ia menjual Widget atau sesuatu seperti itu. Dan anda telah melakukan dengan baik dengan jualan Widget talian. Dan anda mula mengalami beberapa gejala, laman web anda. Apa yang mungkin menjadi sebahagian daripada gejala teknikal yang pengguna melaporkan sebagai perniagaan berkembang dan berkembang pesat dan laman web anda adalah mendapat manfaat daripada itu? 

PENONTON: [didengar] 

DAVID MALAN: Ya, betul-betul. Jadi, anda mungkin mempunyai kelembapan laman web anda. Dan mengapa yang mungkin berlaku? Nah, jika kita menganggap, untuk demi perbincangan sekarang, bahawa anda berada di satu ini tuan rumah web komersial bahawa kita bercakap tentang sebelum makan tengah hari, yang anda bayar beberapa beberapa dolar untuk sebulan, dan anda telah dibayar untuk kos tahunan domain anda nama, bahawa tuan rumah web mungkin Overselling sumber mereka sehingga satu tahap. Jadi, anda mungkin mempunyai nama pengguna dan kata laluan pada pelayan mereka. Tetapi setakat mungkin beberapa yang lain, atau beberapa dozen lain, atau mungkin juga beberapa ratus lain, pengguna. 

Dan laman web hidup secara fizikal pada pelayan yang sama. Mengapa ini boleh terjadi? Well hari-hari, pelayan seperti ini biasanya mempunyai berbilang pemacu keras, mungkin sebanyak enam atau lebih pemacu keras, setiap yang mungkin menjadi sebanyak sebagai 4 terabytes hari ini. Jadi, anda mungkin mempunyai 24 terabytes ruang dalam hanya satu pelayan kecil seperti ini. 

Dan jika anda mencuri beberapa ruang yang bagi lebihan, untuk tujuan sandaran, ia masih agak banyak ruang. Dan demi sesungguhnya, sebuah laman web biasa tidak perlu bahawa ruang yang banyak. Hanya mendaftar pengguna dan menyimpan log pesanan tidak mengambil semua yang ruang yang banyak. Jadi, anda boleh partition ia agak sedikit dan memberi setiap pengguna hanya sepotong kecil itu. 

Sementara itu, komputer seperti ini hari ini biasanya mempunyai pelbagai CPUs-- bukan sahaja satu, mungkin dua, mungkin empat, mungkin 16, atau lebih. Dan setiap CPU mempunyai sesuatu yang dinamakan teras, yang jenis seperti otak di dalam otak. Jadi sebenarnya semua orang yang di sini dengan komputer riba moden mempunyai mungkin dual core atau quad teras CPU-- dan mungkin hanya satu CPU di dalam komputer riba hari ini. Tetapi komputer desktop dan komputer rak seperti ini mungkin mempunyai cukup beberapa lebih CPU, dan dalam teras seterusnya. 

Dan terus terang, walaupun dalam Mac dan PC daripada kami hari ini, anda tidak benar-benar memerlukan teras dual atau teras quad untuk memeriksa e-mel anda. Jika ada apa-apa apabila kesesakan ia datang untuk menggunakan komputer, anda manusia yang mungkin Perkara yang paling perlahan mengenai komputer itu. Dan anda tidak akan dapat memeriksa e-mel anda apa-apa lebih cepat jika anda mempunyai empat kali lebih banyak CPU atau teras. 

Tetapi yang sama adalah jenis daripada sebenar pelayan. Salah satu laman web tunggal tidak mungkin semestinya memerlukan lebih daripada satu CPU atau teras, satu otak kecil di dalam melakukan semua pemikiran dan pemprosesan. Jadi pengeluar mempunyai sama mula keping sehingga sumber-sumber supaya mungkin laman web anda mendapat satu teras, laman web anda mendapat satu teras, atau mungkin kita berkongsi satu teras tersebut. Kami juga berkongsi ruang cakera. Dan kita juga berkongsi RAM, atau memori capaian rawak dari sebelum ini, yang mana ada juga jumlah yang terhad. 

Dan itulah kunci. Tidak kira berapa mahal komputer itu, masih ada yang terhad jumlah sumber di dalamnya. Dan sebagainya yang lebih dan lebih banyak anda cuba untuk mengambil sumber-sumber, perkara-perkara yang lebih perlahan mungkin menjadi. Tapi kenapa? Mengapa perkara akan melambatkan sebagai gejala pelayan terlebih beban? Apa yang sedang berlaku? 

PENONTON: [didengar] DAVID MALAN: Ya, betul-betul. Saya mencadangkan sebelum ini bahawa RAM adalah sejenis ingatan. Ia adalah tidak menentu, di mana itulah mana aplikasi dan data disimpan apabila mereka digunakan. Dan sebagainya oleh kerana itu hanya beberapa terhingga perkara yang anda boleh lakukan nampaknya sekaligus. Dan ia juga lebih cepat adalah, yang merupakan satu perkara yang baik. Tetapi ia juga lebih mahal, yang merupakan satu perkara yang tidak baik. Dan ia juga oleh itu di dalam yang lebih rendah kuantiti daripada ruang cakera, cakera keras ruang, yang cenderung untuk menjadi lebih murah. 

Dalam erti kata lain, anda mungkin mempunyai 4 terabytes ruang cakera dalam komputer anda. Tetapi anda mungkin mempunyai 4 gigabait, atau 64 gigabait, dalam perintah magnitud, faktor 1000 kurang, RAM dalam komputer anda. Jadi, apa yang komputer lakukan? Nah, katakan bahawa anda yang mempunyai 64 gigabait RAM dalam pelayan seperti ini, yang akan menjadi perkara biasa, jika tidak rendah hari ini. Tetapi andaikan anda mempunyai begitu banyak pengguna melakukan begitu banyak perkara bahawa anda jenis jenis memerlukan 65 gigabait memori untuk mengendalikan semua itu penggunaan serentak? 

Nah, anda boleh mengatakan, maaf, beberapa bilangan pengguna tidak boleh mengakses laman web ini. Dan itu adalah langkah yang usaha akhir, sudah tentu. Atau anda, kerana operasi sistem, seperti Windows atau Mac OS atau Linux atau Solaris atau mana-mana beberapa OS lain pada pelayan itu, hanya boleh membuat keputusan, anda tahu apa? Saya hanya mempunyai 64 gigabait RAM. Saya jenis perlu 65. Jadi, anda tahu apa? Saya akan mengambil 1 gigabyte bernilai data dalam RAM yang sekurang-kurangnya baru diakses dan hanya memindahkannya ke cakera buat sementara waktu, literal menyalinnya dari puasa memori ke memori yang lebih perlahan supaya saya kemudian boleh mengendalikan bahawa 65 keperluan gigabit untuk ingatan, melakukan beberapa pengiraan di atasnya. Kemudian apabila saya selesai melakukan itu, Saya hanya akan bergerak yang ke cakera, bergerak yang RAM lain saya meletakkan sementara pada cakera ke dalam perkakasan sebenar supaya saya jenis multitasking. 

Jadi saya semacam meletakkan sesuatu sementara di ruang yang lebih perlahan ini jadi saya mencipta ilusi mengendalikan semua orang. Tetapi ada kelembapan. Mengapa? Nah, dalam ini keras cakera hari ini adalah apa? Sebaliknya, apa yang membuatkan sukar memandu yang berbeza dari RAM terbaik yang anda tahu sekarang? 

PENONTON: [didengar] 

DAVID MALAN: OK, benar. PENONTON: [didengar] 

DAVID MALAN: Jadi sangat benar. Dan itu adalah kesan sampingan atau ciri hakikat RAM yang memang lebih cepat. Dan oleh itu anda mahu menggunakannya untuk kegunaan semasa. Dan cakera adalah lebih perlahan. Tetapi ia kekal, atau tak meruap. Jadi, anda menggunakannya untuk simpanan jangka panjang. Tetapi dari segi pelaksanaan, jika saya melihat ke atas apa yang dipanggil DIMM yang, Memory Dual Inline Modul, ini adalah apa yang sekeping RAM biasanya mungkin kelihatan seperti. 

Jadi di dalam Mac-- kami yang bug. Di dalam Mac dan PC kita, desktop kami komputer akan mempunyai batang memori, seperti yang anda akan memanggil mereka, atau DIMM atau SIMM kembali pada hari itu, memori yang kelihatan seperti ini. komputer riba kami mungkin mempunyai perkara-perkara yang adalah satu pertiga saiz atau separuh saiz. Mereka sedikit lebih kecil, tetapi sedikit idea-- yang sama keping silikon hijau wafer atau plastik yang mempunyai cip hitam sedikit kepada mereka dengan banyak wayar bersambung segala-galanya. Anda mungkin mempunyai sejumlah besar ini di dalam komputer anda. Tetapi bisa dibesarkan di sini adalah ia sepenuhnya elektronik. Terdapat hanya elektron mengalir pada peranti ini. Sebaliknya, jika kita melihat bahagian dalam cakera keras dan tarik sehingga gambar di sini, anda akan sebaliknya melihat sesuatu seperti ini, yang tidak mempunyai bekalan elektrik akan melaluinya akhirnya. Tetapi apa juga melompat keluar pada anda tentang perkara ini? PENONTON: [didengar] DAVID MALAN: Ya, ada nampaknya bahagian yang bergerak. Ia adalah jenis seperti rekod lama pemain atau pemain pikap. Dan ia cukup banyak adalah. Ia sedikit pelamun daripada bahawa- manakala pemain pikap digunakan alur dalam rekod, ini sebenarnya menggunakan kecil zarah magnet kecil bahawa kita tidak boleh agak melihat. Tetapi jika seorang zarah magnet kecil kelihatan seperti ini, ia dianggap sebagai 1. Dan jika ia kelihatan seperti ini, utara-selatan dan bukannya selatan-utara, ia mungkin menjadi 0. Dan kita akan melihat esok bagaimana kita boleh membina itu kepada perkara yang lebih menarik. 

Tetapi apa-apa yang mendapat untuk bergerak secara fizikal pastinya akan pergi lebih perlahan daripada kelajuan cahaya, yang secara teori adalah apa yang elektron mungkin mengalir di, walaupun secara realistik tidak cukup. devices-- Jadi mekanikal lebih perlahan. Tetapi mereka lebih murah. Dan anda boleh muat banyak lebih banyak data dalam mereka. Jadi hakikat bahawa terdapat wujud dalam sesuatu dunia dipanggil memori maya, menggunakan cakera keras seperti ini seolah-olah ia RAM telus kepada pengguna, hanya dengan menggerakkan data dari RAM ke cakera keras, kemudian bergerak semula apabila anda perlu sekali lagi, mewujudkan kelembapan. Kerana anda benar-benar perlu menyalinnya dari satu tempat ke tempat lain. Dan perkara yang anda menyalin ke dan dari sebenarnya lebih perlahan daripada RAM di mana anda mahu ia menjadi. 

The sini-- penyelesaian alternatif jika anda tidak suka yang perlahan, dan ingatan maya anda jenis yang overtaxed, apa yang satu lagi penyelesaian kepada masalah ini? 

PENONTON: [didengar] DAVID MALAN: Baiklah, meningkatkan memori maya akan membiarkan kita melakukan ini pada skala yang lebih besar. Kami boleh mengendalikan 66 gigabait bernilai keperluan memori, atau 67 gigabait. Tetapi rasa saya tidak suka ini ke bawah perlahan, sebenarnya Saya hendak mematikan maya memori jika itu mustahil, apa lagi yang boleh saya membuang masalah ini untuk menyelesaikannya, di mana saya mahu untuk mengendalikan lebih ramai pengguna dan banyak lagi keperluan memori daripada saya secara fizikal mempunyai pada masa ini? 

PENONTON: [didengar] 

DAVID MALAN: Malangnya tidak. Jadi CPU dan teras mereka dalam adalah sumber yang terhad. Dan tidak ada analog dalam konteks itu. Soalan yang baik, walaupun. Jadi hanya perlu jelas, juga, jika dalam komputer ini adalah, katakan, kayu RAM yang kelihatan seperti this-- dan sebagainya kita akan memanggil RAM ini. Dan di sini adalah pemacu cakera keras. Dan saya hanya akan menarik ini bergambar sebagai bulatan kecil. Ada 0 dan 1 di kedua-dua data these--, kami akan umum sebagai. 

Dan pada dasarnya, ada pengguna menjalankan aplikasi yang seperti, katakan, sebuah laman web yang memerlukan ini banyak RAM setiap pengguna, apa yang saya mencadangkan, melalui perkara ini dipanggil memori maya, adalah untuk menggerakkan hanya sementara yang di sini supaya sekarang saya boleh bergerak ingatan orang lain keperluan di sana. Dan kemudian apabila itu dilakukan, Saya boleh menyalin ini kembali ke atas dan ini diletakkan di sini, dan dengan itu bergerak apa yang saya mahu di sana di tempat lain kesemuanya. 

Jadi ada hanya banyak Switcheroo, adalah bawa pulang di sini. Jadi, jika anda tidak suka ini, dan anda tidak mahu meletakkan apa-apa pada cakera keras, apa yang jenis yang jelas penyelesaian perniagaan orang itu kepada masalah ini, atau jurutera penyelesaian, dalam hal ini juga? 

PENONTON: [didengar] 

DAVID MALAN: Ya, saya maksudkan secara literal membuang wang pada masalah. Dan sebenarnya, ini adalah yang sempurna segue kepada beberapa peringkat yang lebih tinggi perbincangan pengkomputeran awan. Kerana banyak ia didorong oleh keputusan kewangan, tidak semestinya teknologi. Jika 64 gig RAM adalah terlalu sedikit, baik, mengapa tidak mendapatkan 128 gigabait RAM? Mengapa tidak mendapat 256 gigabait RAM? Nah, mengapa tidak? 

PENONTON: [didengar] DAVID MALAN: Sebenarnya, ia kos lebih banyak wang, pasti. Dan jika anda sudah mempunyai lapang ruang cakera keras, berkesan, atau setara, ruang cakera keras begitu lebih murah anda juga mungkin menggunakannya. Jadi sekali lagi, ada perdagangan ini di luar yang kita lihat lebih awal pada pagi ini, mana ada benar-benar tidak semestinya jawapan yang betul, ada hanya jawapan yang lebih baik atau lebih teruk lagi berdasarkan apa yang anda benar-benar hargai. 

Jadi ada juga realiti teknologi. Saya tidak boleh membeli sebuah komputer, untuk pengetahuan saya, dengan satu trilion gigabait RAM sekarang. Ia hanya secara fizikal tidak wujud. Jadi terdapat beberapa had atas. Tetapi jika anda pernah walaupun berbelanja untuk Mac pengguna atau PC, juga, umumnya ada keluk ini ciri-ciri mana mungkin ada yang baik, yang lebih baik, dan komputer yang terbaik. 

Dan pulangan marginal belian dolar anda komputer terbaik berbanding komputer yang lebih baik mungkin tidak hampir yang tinggi sebagai menghabiskan wang sedikit lebih dan mendapatkan komputer yang lebih baik atas komputer yang baik. Dalam erti kata lain, anda membayar premium untuk mendapatkan bahagian atas garis. 

Dan apa yang kita akan melihat dalam perbincangan perkomputeran awan adalah bahawa apa yang sangat biasa ini hari, dan apa yang syarikat-syarikat seperti Google awal dipopularkan, tidak membayar untuk dan bangunan benar-benar mewah, mahal souped komputer dengan banyak dan banyak segala-galanya, tetapi membeli atau membina cukup komputer sederhana tetapi banyak daripada mereka, dan menggunakan sesuatu yang umumnya dipanggil scaling mendatar dan bukannya bersisik menegak. 

Jadi scaling menegak bermakna mendapatkan lebih banyak RAM, lebih cakera, lebih daripada segala-galanya, dan jenis melabur menegak dalam perkakasan anda jadi anda hanya mendapat terbaik daripada yang terbaik daripada yang terbaik, tetapi anda membayar untuk itu. scaling mendatar jenis mendapatkan perkara yang peringkat bawah, model yang baik, atau model yang lebih teruk lagi, tetapi mendapat banyak daripada mereka. Tetapi sebaik sahaja anda mendapat banyak mereka, kelak misalnya, dalam kes ini, pelayan web, jika pelayan ini satu atau satu hos web tidak mencukupi, kemudian hanya intuitif, yang Penyelesaian kepada masalah ini beban atau beban pada pelayan anda sama ada mendapatkan server yang lebih besar atau, apa yang saya mencadangkan di sini dan bukannya mendaki menegak boleh dikatakan, akan, anda tahu apa? Hanya mendapatkan yang kedua ini. Atau mungkin juga mendapat satu pertiga. Tetapi sekarang kita telah membuat masalah kejuruteraan oleh jenis perniagaan ini atau keputusan kewangan. Apa masalah kejuruteraan sekarang? 

PENONTON: [didengar] 

DAVID MALAN: Ya, bagaimana anda menyambung mereka dan- maaf? 

PENONTON: [didengar] DAVID MALAN: Betul, kerana saya masih ada-- jika saya memperkenalkan semula saya ke dalam gambar ini, jika ini adalah komputer riba saya di suatu tempat di internet, yang kini antara saya dan syarikat kita bercakap tentang, sekarang saya perlu memikirkan, yang server saya menghantar pengguna ini tertentu? Dan jika ada pengguna lain, seperti ini, dan kemudian satu ini di sini, dan mungkin ini adalah pengguna A, ini user B, ini adalah pengguna C, dan ini adalah server 1, 2, dan 3-- sekarang jawapan yang intuitif sini mungkin hanya, kami akan menghantar pengguna A ke 1 dan B 2 dan C hingga 3. Dan kita boleh mengendalikan 3 kali lebih banyak pengguna. 

Tetapi itu melampaui batas. Bagaimana anda membuat keputusan siapa akan dihantar di mana? Jadi mari kita cuba sebab melalui ini. Jadi andaikan bahawa komputer A, B, dan C adalah pelanggan, dan pelayan 1, 2, dan 3 mendatar berskala pelayan. Jadi mereka jenis yang serupa. Mereka semua menggunakan perisian yang sama. Dan mereka semua boleh melakukan perkara yang sama. Tetapi sebab yang kita ada tiga daripada mereka begitu bahawa kita boleh mengendalikan tiga kali lebih banyak orang sekaligus. 

Oleh itu, kita tahu daripada kami perbincangan sebelum makan tengah hari bahawa ada perkakasan di antara komputer riba dan pelayan. Tetapi kita akan hanya jenis umum yang kini sebagai internet atau awan. Tetapi kita tahu bahawa di rumah saya, ada mungkin router rumah. Berhampiran pelayan, ada mungkin router, server DNS, DHCP. Terdapat boleh menjadi apa-apa kita mahu dalam cerita ini. 

Jadi bagaimana kita mula untuk membuat keputusan, apabila pengguna A pergi ke something.com, yang pelayan untuk laluan pengguna untuk? Bagaimana kita boleh mula untuk memberitahu cerita ini? PENONTON: Pengseimbangan? DAVID MALAN: Load balancing. Apa maksud kamu dengan itu? 

PENONTON: Kembali di mana penggunaan yang paling adalah dan yang mana satu mempunyai paling sumber yang ada. DAVID MALAN: OK, jadi biarlah saya memperkenalkan jenis baru perkakasan bahawa kita belum lagi dibincangkan, yang adalah tepat bahawa, pengimbang beban. Ini juga hanya boleh menjadi pelayan. Ia boleh kelihatan sama seperti yang kita lihat sebentar tadi. A balancer beban benar-benar adalah hanya sekeping perisian bahawa anda menjalankan di atas sekeping perkakasan. 

Atau anda boleh membayar vendor, seperti Citrix atau lain-lain, Cisco atau orang lain. Anda boleh membayar untuk perkakasan mereka sendiri, yang adalah pengimbang beban perkakasan. Tetapi itu hanya bermakna mereka diprapasang pengimbangan beban perisian pada perkakasan mereka dan menjualnya kepada anda semua bersama-sama. Oleh itu, kita hanya akan menarik sebagai segi empat tepat untuk tujuan kita. 

Bagaimana sekarang saya melaksanakan balancer beban? Dalam erti kata lain, apabila pengguna A mahu melawat laman web saya, permintaan mereka entah bagaimana atau lain-lain, mungkin dengan cara yang router kita bercakap tentang sebelum ini, akan akhirnya mencapai ini balancer beban, yang kemudian perlu membuat keputusan routing seperti. Tetapi ia laluan untuk jenis untuk tujuan yang lebih tinggi sekarang. Ia bukan hanya tentang mendapatkan dari titik A ke titik B. Ia mengenai membuat keputusan yang titik B adalah yang terbaik di kalangan mereka, kelak 1, 2, atau 3 dalam kes ini. 

Jadi bagaimana saya boleh membuat keputusan sama ada untuk pergi ke 1, 2, 3? Apa mungkin kotak hitam ini, jadi untuk berkata, maka hendaklah melakukan di bahagian dalam? Ini juga adalah satu lagi contoh dalam sains komputer abstraksi. Saya telah benar-benar tertarik pengimbang beban sebagai kotak hitam dalam dakwat hitam, di dalam yang adalah beberapa menarik logik, atau sihir walaupun, yang mana perlu datang yang decision-- 1, 2, atau 3. Dan input adalah hanya A. 

PENONTON: [didengar] DAVID MALAN: Saya minta maaf? PENONTON: [didengar] DAVID MALAN: Baiklah, bagaimana mungkin kita mengkategorikan jenis transaksi di sini? 

PENONTON: Melihat halaman web berbanding pertanyaan pangkalan data. DAVID MALAN: OK, itulah yang baik. Jadi mungkin pengguna ini A mahu melihat sesuatu laman web. Dan mungkin ia lebih kandungan statik, sesuatu yang mengubah jarang, jika pernah. Dan seolah-olah seperti operasi agak mudah. Jadi mungkin kita akan hanya sewenang-wenangnya, tetapi munasabah, berkata, server 1, tujuan dalam hidup ini hanya berkhidmat sehingga kandungan statik, fail yang jarang, jika pernah, perubahan. Mungkin ia adalah imej-imej pada halaman. Mungkin ia adalah teks pada halaman atau lain jenis apa-apa perkara tidak menarik, apa-apa transaksi, tiada apa yang dinamik. 

Sebaliknya, jika pengguna A ialah memeriksa daripada keranjang belanja nya yang memerlukan pangkalan data, entah dimana untuk menyimpan dan ingat transaksi itu, baik mungkin permintaan yang perlu pergi ke pelayan 2. Jadi itulah yang baik. Oleh itu, kita boleh memuatkan kira-kira berdasarkan kepada jenis permintaan. Bagaimana lagi kita boleh melakukan ini? apa other-- 

PENONTON: Berdasarkan pelayan penggunaan dan keupayaan. DAVID MALAN: Betul, OK. Jadi, anda menyebut bahawa sebelum ini, Kareem. Jadi apa jika kita memberikan sedikit input pada [didengar] antara pelayan 1, 2, dan 3 ini balancer beban supaya mereka hanya sentiasa memaklumkan balancer beban apa status mereka? Seperti, hey, beban balancer, Saya pada penggunaan 50%. Dalam erti kata lain, saya mempunyai separuh ramai pengguna kerana saya benar-benar boleh mengendalikan sekarang. Hey, beban balancer, Saya pada penggunaan 100%. Hey, beban balancer, penggunaan 0%. Beban balancer, jika ia direka dengan cara yang boleh mengambil mereka comments sebagai input, ia boleh kemudian membuat keputusan, aduh, nombor 2 adalah pada 100%. Biar saya hantar tiada permintaan masa depan kepadanya selain daripada pengguna yang telah disambungkan. Lelaki ini adalah pada 0%. Mari kita menghantar banyak lalu lintas kepadanya. Lelaki ini berkata dia pada 50%. Mari kita menghantar beberapa trafik kepadanya. 

Supaya akan menjadi ramuan, yang kita boleh mengambil beban kira. Dan ia akan berubah mengikut masa. Jadi keputusan akan berubah. Jadi itulah teknik yang benar-benar baik, satu yang yang biasa digunakan. Apa lagi yang kita boleh lakukan? Dan mari kita sebenarnya hanya meringkaskan sini. Jadi keputusan di sini boleh menjadi mengikut jenis lalu lintas, saya akan memanggilnya. Ia boleh berdasarkan beban. Mari kita lihat jika kita tidak boleh datang dengan beberapa tempat lain. 

PENONTON: [didengar] DAVID MALAN: Location. Jadi, itu satu yang baik. Jadi location-- bagaimana anda mungkin memanfaatkan maklumat itu? 

PENONTON: [didengar] 

DAVID MALAN: Oh, itulah yang baik. Dan kira-kira berapa banyak milisaat ia akan berkurangan berdasarkan apa yang kita lihat ini pagi, anda akan berkata? 

PENONTON: [didengar] 

DAVID MALAN: Baiklah, berdasarkan di laluan jejak kita lihat sebelum ini, yang hanya ukuran kasar sesuatu, sekurang-kurangnya berapa lama masa diambil untuk data untuk mendapatkan dari A ke B merasakan seperti apa-apa tempatan, apa, seperti 74 milisaat, memberikan atau mengambil? Dan kemudian apa-apa 100 plus, 200 plus mungkin di luar negara. Dan sebagainya berdasarkan itu sahaja, ia kelihatan munasabah untuk menganggap bahawa untuk pengguna di Amerika Syarikat untuk mengakses pelayan Eropah mungkin mengambil masa dua kali atau tiga kali lama, walaupun dalam milisaat, daripada ia mungkin mengambil masa jika itu server yang terletak di sini geografi, atau sebaliknya. Oleh itu, apabila saya mencadangkan sebelum ini bahawa terutamanya sebaik sahaja anda melintas 200 milisaat ambang, memberi atau mengambil, manusia yang mula melihat. Dan laluan jejak hanya dengan andaian mentah, data tidak menarik. Apabila anda mempunyai laman web, anda perlu untuk mendapatkan pengguna memuat turun imej atau filem fail, banyak teks, permintaan seterusnya. Kita lihat apabila kita melawat, apa yang ia, Facebook atau Amazon sebelum ini, ada banyak keseluruhan barangan yang perlu dimuat turun. Supaya akan menambah. Jadi pelbagai saat mungkin tidak munasabah. Begitu baik, geografi adalah satu bahan. Jadi dalam syarikat fakta seperti Akamai, jika anda telah mendengar daripada mereka, atau lain-lain telah lama diambil geografi kira. Dan ternyata bahawa dengan sifat yang alamat IP, alamat IP komputer riba saya, anda boleh membuat kesimpulan, dengan beberapa kebarangkalian, di mana anda berada di dunia. Dan sebenarnya ada perkhidmatan pihak ketiga yang anda boleh membayar yang mengekalkan pangkalan data yang alamat IP dan geografi bahawa dengan keyakinan yang tinggi akan menjadi benar apabila ditanya, di mana di dunia ialah Alamat IP ini? 

Dan jadi sebenarnya apa syarikat-syarikat lain menggunakan ini? Jika anda mempunyai Hulu atau Netflix, jika anda pernah melancong ke luar negara, dan anda cuba untuk menonton sesuatu di Hulu, dan anda tidak berada di Amerika Syarikat, anda mungkin melihat mesej berkata, bukan di Amerika Syarikat. Maaf, anda tidak boleh melihat kandungan ini. 

PENONTON: [didengar] 

DAVID MALAN: Oh, benar-benar? Tetapi ya, jadi sebenarnya itulah aplikasi yang sempurna sesuatu yang sangat teknikal kepada masalah yang sebenar. Jika anda untuk VPN dari Eropah atau Asia atau di mana di dunia yang korporat anda yang beribu pejabat di New York atau di mana sahaja anda berada, anda berada akan membuat penampilan ke laman web luar yang anda sebenarnya di New York, walaupun anda fizikal agak jauh. 

Sekarang anda pengguna akan tahu anda jelas jauh. Tetapi anda juga akan merasainya kerana dari orang-orang milisaat tambahan. Bahawa jarak tambahan dan penyulitan yang yang berlaku di VPN akan melambatkan perkara turun. Jadi ia boleh atau tidak boleh menjadi pengalaman hebat. Tetapi Hulu dan Netflix akan melihat anda sebagai duduk di suatu tempat di New York, kerana anda telah dikumpulkan dengan jelas. Apa yang sempurna penyelesaian untuk itu. 

Baiklah, jadi geografi adalah satu keputusan. Apa lagi yang boleh kita gunakan untuk membuat keputusan bagaimana kepada lalu lintas perjalanan dari A, B, dan C 1, 2, dan 3, sekali lagi, meletakkan topi kejuruteraan pada? Ini semua bunyi yang sangat rumit. Uh, saya tidak tahu di mana untuk memulakan pelaksanaan mereka. Berikan saya sesuatu yang mudah. Apakah cara yang paling mudah untuk membuat keputusan ini? 

PENONTON: Adakah server yang ada? 

DAVID MALAN: Adakah server yang ada? Jadi tidak buruk. Itulah yang baik. Itulah jenis yang nuancing beban. Jadi mari kita menyimpan bahawa dalam kategori beban. Jika anda ada, saya hanya akan menghantar data yang ada. Tetapi yang boleh memakan diri dengan cepat. Kerana jika saya menggunakan logik itu, dan jika saya selalu bertanya 1, adakah anda di, adalah anda pada, kamu, jika jawapannya adalah sentiasa ya, Saya akan menghantar 100% daripada trafik kepadanya, 0% kepada orang lain. Dan pada satu ketika, kita akan melanda kelembapan atau tapak tersedia. Jadi apa yang lebih baik sedikit daripada itu tetapi masih agak mudah dan tidak hampir yang pandai mengambil semua ini data tambahan ke dalam akaun? 

PENONTON: Kos setiap pelayan. DAVID MALAN: Kos setiap pelayan. OK, jadi biarlah saya melambungkan yang dalam kategori beban, juga. Kerana apa yang anda akan dapati di syarikat, too-- bahawa jika anda menaik taraf pelayan anda dari masa ke masa atau membeli lebih banyak, anda mungkin tidak dapat untuk mendapatkan tepat versi sama perkakasan. Kerana ia jatuh daripada tarikh. Anda tidak boleh membeli lagi. Harga berubah. 

Jadi, anda mungkin mempunyai pelayan berbeza dalam kelompok anda, jadi untuk bercakap. Itulah betul-betul halus. Tetapi perkakasan tahun depan mungkin dua kali lebih cepat, dua kali sebagai dapat sebagai tahun ini. Oleh itu, kita boleh melemparkan yang ke dalam kategori beban. Ini gelung maklum balas antara 1, 2, dan 3 dalam balancer beban pasti boleh memberitahu ia, hey, Saya pada kapasiti 50%. Tetapi dengan cara itu, saya juga mempunyai dua kali ganda teras. Menggunakan maklumat tersebut. Walaupun simpler-- dan ini akan menjadi tema dalam sains komputer. Apabila ragu-ragu, atau apabila anda mahu mudah penyelesaian yang biasanya berfungsi dengan baik dari masa ke masa, jangan pilih yang sama server sepanjang masa, tetapi choose-- 

PENONTON: A satu rawak? DAVID MALAN: --Yang pelayan rawak. Ya, memilih satu atau yang lain. Jadi rawak sebenarnya bahan yang sangat berkuasa ini dalam bidang sains komputer, dan dalam bidang kejuruteraan lebih umumnya, terutamanya apabila anda mahu untuk membuat keputusan yang mudah dengan cepat tanpa merumitkan dengan semua ini sangat pandai, tetapi juga sangat pandai, penyelesaian yang memerlukan semua kejuruteraan banyak lagi, semuanya pemikiran yang lebih, apabila benar-benar, mengapa tidak saya hanya jenis flip duit syiling, atau tiga berpihak syiling dalam kes ini, dan membuat keputusan sama ada untuk pergi 1, 2, 3? 

Yang mungkin memakan diri probabilistically, tetapi sama seperti kemungkinan Melibas kepala lagi dan lagi dan lagi dan lagi dan lagi dan lagi mungkin dalam super reality--, super tidak mungkin. Jadi dari masa ke masa, kemungkinan hanya menghantar pengguna secara rawak 1, 2, dan 3 akan bersenam betul-betul halus. Dan ini adalah teknik yang umumnya dikenali sebagai pusingan robin. 

Atau sebenarnya, itu bukan pusingan robin. Ini akan menjadi pendekatan rawak. Dan jika anda mahu untuk menjadi lebih sedikit lebih mudah daripada itu, pusingan robin akan, orang pertama pergi 1, orang kedua kepada 2, orang ketiga 3, orang keempat 1. Dan di dalamnya terletak robin bulat. Anda hanya jenis pergi di dalam kitaran. 

Sekarang, anda perlu bijak mengenainya. Anda tidak boleh membuta tuli menghantar pengguna ke nombor pelayan salah jika apa yang berlaku? Jika ia pada kapasiti max, atau ia hanya tidak lagi responsif. Begitu ideal anda mahu beberapa jenis maklum balas gelung. Jika tidak, anda hanya menghantar semua pengguna anda ke jalan buntu. Tetapi yang boleh diambil kira juga. 

Jadi jangan bawah menghargai nilai hanya rawak, yang agak kerap penyelesaian kepada jenis-jenis masalah. Dan kita akan menulis robin bulat. Jadi bagaimana beberapa syarikat melaksanakan robin bulat atau rawak atau mana-mana keputusan ini? Baik malangnya, mereka melakukan perkara-perkara seperti ini. Biar saya tarik satu lagi screenshot cepat. 

Sebenarnya, mari kita buat dua. Saya tidak tahu mengapa kita mendapat semua hidangan ini. Itu sangat pelik. Baiklah, apa yang saya benar-benar mahu adalah tangkapan skrin. Yang pelik. Baiklah, jadi saya boleh spoof ini. Saya tidak tahu berapa banyak lebih jauh Saya mahu untuk memastikan menatal. 

Jadi sangat biasa, anda akan mendapati diri anda di alamat seperti www.2.acme.com, mungkin www.3 atau 4 atau 5. Dan memerhatikan untuk ini. Anda tidak melihatnya yang kerap. Tetapi apabila anda lakukan, ia jenis cenderung untuk menjadi lebih besar, lebih tua, syarikat stodgier bahawa teknologi tidak benar-benar seolah-olah tahu apa yang mereka lakukan. Dan kamu lihat ini di syarikat teknologi kadang-kadang, orang-orang yang lebih tua. 

Jadi apa yang mereka buat? Bagaimana mereka melaksanakan pengimbangan beban, ia akan kelihatan? Jika anda mendapati diri anda sebagai menaip pengguna www.something.com, dan tiba-tiba anda berada di www.2.something.com, apa yang mempunyai beban mereka pengimbang mungkin dilakukan? PENONTON: [didengar] 

DAVID MALAN: Ya, jadi beban pengimbang adalah mungkin membuat keputusan berdasarkan salah satu daripada keputusan ini membuat processes-- tidak benar-benar perkara yang. Tetapi sama seperti saya telah disediakan yang nombor di papan sini, pelayan tidak hanya dipanggil 1, 2, dan 3. Mereka mungkin dipanggil WWW1, www2, www3. Dan ternyata bahawa bahagian dalam permintaan HTTP adalah ciri ini. Dan saya akan simulasi ini seperti berikut. 

Saya akan membuka yang sama tab rangkaian pemaju seperti sebelum ini hanya supaya kita boleh melihat apa yang berlaku di bawah hood. Saya akan mengosongkan skrin. Dan saya akan pergi ke, mari kita berkata, http://harvard.edu. Sekarang untuk apa sahaja sebab-sebab perniagaan, Harvard telah membuat keputusan, seperti banyak, banyak laman web yang lain, untuk menyeragamkan yang laman web pada www.harvard.edu untuk kedua-dua teknikal dan sebab-sebab pemasaran. Ia hanya jenis dalam tren untuk mempunyai www. 

Jadi pelayan di Harvard mempunyai entah bagaimana mengarahkan pengguna, kerana saya terus mengatakan, dari satu URL kepada yang lain. Bagaimana yang berfungsi? Baiklah, biar saya pergi ke hadapan dan tekan Enter. Dan perhatikan URL memang cepat ditukar kepada www.harvard.edu. Biar saya skrol kembali dalam ini Sejarah dan klik pada debug ini maklumat diagnostik, jika anda akan. Biar saya melihat permintaan saya. 

Jadi di sini adalah permintaan yang saya buat. Dan notis itu konsisten dengan jenis daripada meminta saya membuat Facebook sebelum ini. Tetapi perhatikan sambutan. Apa yang berbeza dalam sambutan kali ini? 

PENONTON: [didengar] 

DAVID MALAN: Ya, jadi ia bukan satu 200 OK. Ia bukan satu 404 Not Found. Ia adalah 301 Moved Permanently, yang adalah jenis cara yang lucu untuk mengatakan, Harvard telah upped dan berpindah tempat lain untuk www.harvard.edu. 301 melambangkan bahawa ini adalah lencongan. Dan di mana perlu pengguna nampaknya diarahkan? Ada satu berita gembira tambahan maklumat di dalam sampul surat itu. Dan setiap ayat-ayat ini akan kini mula memanggil header HTTP. Tandukan hanya nilai utama pair-- sesuatu kolon sesuatu. Ia adalah sekeping maklumat. Di mana sekiranya baru lokasi nampaknya menjadi? Perhatikan barisan terakhir di antara semua orang pengepala. 

PENONTON: [didengar] 

DAVID MALAN: Ya, jadi tidak maklumat tambahan. Baris pertama bahawa saya telah menekankan kata 301 Moved Permanently. Nah, di mana telah ia bergerak? The garis ini-- lepas dan mereka tidak perlu berada dalam susunan ini. Ia boleh menjadi rawak. Lokasi kolon bermakna, hey pelayar, pergi ke URL ini sebaliknya. 

Jadi pelayar memahami HTTP pelencongan. Dan ini adalah sangat, sangat cara biasa melantun pengguna dari satu tempat ke tempat lain. Sebagai contoh, jika anda pernah mencuba untuk melawat tapak web yang anda tidak log masuk ke dalam, anda tiba-tiba mungkin mendapati diri anda di URL baru sama sekali menjadi diminta untuk log masuk. 

Bagaimana yang berfungsi? pelayan mungkin menghantar 301. Terdapat juga nombor lain, seperti 302, agak berbeza dalam makna, yang menghantar anda ke URL lain. Kemudian pelayan, sebaik sahaja anda telah log masuk, akan menghantar kembali kepada di mana anda sebenarnya dimaksudkan. 

Jadi apa, maka, adalah kurang laman web kejuruteraan buat? Apabila anda melawat www.acme.com, dan mereka hanya kebetulan telah dinamakan pelayan mereka WWW1, www2, www3, dan sebagainya, mereka sangat simply-- yang adil, tetapi sangat jenis foolishly-- mengarahkan anda ke pelayan sebenarnya berbeza dinamakan. Dan ia berfungsi dengan sempurna denda. Ia adalah baik dan mudah. 

Kami telah melihat bagaimana ia akan menjadi dilakukan di bawah hood dalam sampul surat maya. Tetapi mengapa ini boleh dikatakan satu keputusan kejuruteraan yang tidak baik? Dan mengapa aku semacam condescending ke arah kejuruteraan tertentu mendekati? Berhujah mengapa ini tidak baik. Ben? PENONTON: [didengar] DAVID MALAN: Setiap pelayan perlu mempunyai salinan pendua laman web. Saya OK dengan itu. Dan sebenarnya, itulah yang saya menjangkakan untuk cerita ini secara keseluruhan, kerana jika kita wanted-- baik sebenarnya, kecuali Dan sebelum ini cadangan, di mana jika anda mempunyai yang berbeza pelayan melakukan perkara-perkara yang berbeza, maka mungkin mereka sebenarnya boleh menjadi fungsi melakukan perkara-perkara yang berbeza. 

Tetapi kemudian, pada satu ketika, anda pangkalan data akan mendapatkan beban. server aset statik anda akan mendapatkan beban. Jadi, pada satu ketika, kita berada kembali pada cerita ini, di mana kita perlu berbilang salinan perkara yang sama. Jadi saya OK dengan itu. PENONTON: [didengar] 

DAVID MALAN: OK, jadi beberapa halaman mungkin tidak seimbang popular. Dan sebagainya fixating pada satu alamat tidak semestinya perkara yang terbaik. [Didengar]? 

PENONTON: [didengar] 

DAVID MALAN: Apa yang anda maksudkan dengan itu? PENONTON: [didengar] 

DAVID MALAN: Ya, betul-betul. Jadi, anda tidak mahu semestinya ada-- anda pasti tidak mahu mempunyai pengguna anda secara manual menaip WWW1 atau www2. Dari perspektif penjenamaan, ia hanya kelihatan sedikit tidak masuk akal. Jika anda hanya mahu semacam bersih, pengalaman yang elegan, mempunyai jenis ini secara rawak URL bernombor benar-benar tidak baik. Kerana itu pengguna adalah pasti akan menyalin dan tampal ke dalam e-mel atau mesej segera. 

Sekarang mereka menyebarkan. Sekarang anda jenis mengelirukan anda kurang penonton teknikal, yang berfikir alamat web anda adalah www2.something.com. Tidak ada semantik yang menarik untuk itu. Ia hanya berlaku untuk menjadi yang mendasari detail teknikal yang anda telah bernombor pelayan anda dengan cara ini. 

Dan lebih teruk lagi, bagaimana jika, misalnya, mungkin pada masa Krismas apabila perniagaan adalah benar-benar berkembang pesat, anda telah mendapat WWW1 melalui www99, tetapi pada bulan Januari dan Februari dan seterusnya, anda mematikan separuh daripada mereka jadi anda hanya perlu WWW1 melalui www50? Apakah implikasi sekarang untuk keputusan perniagaan yang sangat berpatutan? PENONTON: [didengar] DAVID MALAN: Anda perlu menguruskan semua mereka yang masih. PENONTON: [didengar] DAVID MALAN: Tepat sekali. Itulah jenis tangkapan di sana. Jika pelanggan anda dalam tabiat perkara bookmark, menghantar e-mel mereka, hanya menjimatkan URL di suatu tempat, atau jika ia hanya di auto mereka melengkapkan dalam pelayar mereka supaya mereka tidak benar-benar sengaja menaip, ia hanya berlaku, mereka mungkin, selama 11 bulan daripada tahun berkesan, mencapai jalan buntu. Dan hanya bijak sebahagian besar pengguna akan sedar, mungkin saya perlu secara manual mengeluarkan nombor ini. Maksud saya, ia hanya tidak akan berlaku dengan ramai pengguna, jadi tidak baik untuk perniagaan, kejuruteraan pelaksanaan buruk bijak. 

Jadi bersyukur, ia tidak lebih perlu. Ia ternyata bahawa apa yang balancers beban boleh lakukan adalah daripada berkata, apabila A menjadikan request-- yang hey A, pergi ke 1. Dalam erti kata lain, bukan penghantaran yang redirect seperti langkah satu dalam ini proses adalah pergi di sini, dia kemudian diberitahu untuk pergi ke tempat lain. Dan supaya langkah tiga, dia pergi tempat lain. 

Anda sebaliknya boleh terus laluan, untuk terus menggunakan istilah itu, semua data A melalui balancer beban supaya dia pernah kenalan 1, 2, atau 3 secara langsung. Semua trafik yang tidak mendapatkan "dihalakan" oleh beban balancer sendiri. Dan sekarang kita semacam sengaja mengaburkan garis antaranya pelbagai peranti. A balancer beban boleh data laluan. Ia hanya satu fungsi yang begitu ramai. 

Jadi pengimbang beban, juga, ia suatu perisian, benar-benar. Dan router adalah suatu perisian. Dan anda benar-benar boleh mempunyai dua keping perisian dalam satu komputer fizikal supaya beban pengimbang boleh lakukan ini pelbagai perkara. 

Jadi ada satu cara lain untuk melakukan ini, yang sebenarnya kembali kepada jenis prinsip pertama DNS, yang kita bercakap tentang sebelum rehat. DNS adalah Sistem Nama Domain. Ingatlah bahawa anda boleh meminta pelayan DNS, apa yang alamat IP google.com, facebook.com? 

Dan kita sebenarnya boleh melakukan ini. Satu alat yang kita tidak menggunakan sebelum ini adalah salah itu hanya sebagai diakses, dipanggil nslookup untuk lookup pelayan nama. Dan saya hanya akan menaip facebook.com. Dan saya melihat bahawa Facebook IP alamat nampaknya ini. Biar saya pergi ke hadapan dan salinan itu, pergi ke pelayar, dan pergi ke http: // dan alamat IP dan tekan Enter. Dan cukup yakin, ia seolah-olah untuk bekerja. 

Sekarang bekerja ke belakang, apa yang di dalam sampul surat maya bahawa Facebook bertindak balas dengan apabila Saya melawat yang alamat IP secara langsung? Oleh kerana notis, di mana saya sekarang? Di mana saya sekarang, alamat? 

PENONTON: [didengar] 

DAVID MALAN: pada versi selamat dan pada www.facebook.com itu. Jadi ia tidak walaupun hanya alamat IP yang selamat. Facebook telah mengambil ia atas dirinya untuk mengatakan, ini adalah tidak masuk akal. Kami tidak akan membuat anda di ini URL mencari hodoh itulah angka. Kami akan menghantar HTTP mengarahkan melalui tandukan yang sama yang kita lihat sebelum itu lokasi kolon sesuatu. 

Dan hal ini bermaksud bahawa di bawah hood masih alamat IP ini. Setiap komputer di internet mempunyai alamat IP, ia akan kelihatan. Tetapi anda tidak semestinya perlu untuk mendedahkan bahawa kepada pengguna. Dan sama seperti pada zaman dahulu, terdapat adalah 1-800-mengumpul, 1-800-C-O-L-L-E-C-T, di Amerika Syarikat, adalah satu cara untuk membuat collect panggilan melalui telefon yang sangat mudah dilupakan nombor, atau 1-800-MATTRESS untuk membeli katil, dan mnemonik yang sama yang anda juga melihat di telefon jenis jenis masih, bahawa surat peta untuk nombor. 

Sekarang, mengapa? Nah, ia adalah lebih mudah untuk menghafal 1-800-MATTRESS atau 1-800-COLLECT sebaliknya daripada 1-800 sesuatu sesuatu sesuatu sesuatu sesuatu sesuatu sesuatu, di mana setiap daripada mereka adalah angka. Begitu juga, dunia belajar cepat bahawa kita tidak harus mempunyai orang-orang menghafal alamat IP. Itu akan menjadi bodoh. Kami akan menggunakan nama, bukan. Dan itulah sebabnya DNS dilahirkan. 

Baiklah, jadi dengan itu berkata, dari segi beban pengimbang, mari kita cuba yahoo.com. Nah, itu menarik. Yahoo seolah-olah kembali tiga IP. Jadi kesimpulan daripada ini, jika anda boleh, apa yang satu lagi cara yang kita boleh melaksanakan tanggapan ini pengimbangan beban mungkin tanpa menggunakan fizikal peranti, peranti fizikal baru ini? 

Dalam erti kata lain, bolehkah saya mengambil yang pembiayaan anda ada untuk pengimbang beban dan memberitahu anda untuk menggunakan beberapa yang sedia ada sekeping perkakasan untuk melaksanakan tanggapan ini pengimbangan beban? Dan spoiler adalah, ya, tetapi apa, atau bagaimana? Apakah Yahoo mungkin buat di sini? Kareem? OK, Chris? PENONTON: [didengar] DAVID MALAN: Ya, semua tiga daripada kerja mereka. Jadi rawak, pusingan robin, location-- anda boleh hanya memanfaatkan sekeping yang sedia ada teka-teki yang kita bercakap tentang awal DNS sistem dan hanya berkata, apabila pertama pengguna hari meminta yahoo.com, memberikan mereka alamat IP yang pertama, seperti yang berakhir pada 45 di atas sana. Dan masa depan yang permintaan pengguna alamat IP yahoo.com dari suatu tempat di dunia, memberi mereka IP kedua, maka IP ketiga, maka pertama IP, kemudian yang kedua. Atau bijak mengenainya dan melakukannya secara grafik. Atau adakah ia secara rawak dan tidak hanya melakukan ia round robin dengan cara ini. 

Dan dalam kes ini, maka kita tidak perlu untuk memperkenalkan hitam ini kotak ke dalam gambar kami. Kami tidak memerlukan peranti baru. Kami hanya memberitahu komputer untuk pergi ke pelayan secara langsung, berkesan, tetapi tidak melalui nama mereka. Mereka tidak perlu tahu nama. Mereka hanya diberitahu bahawa yahoo.com peta ke mana-mana salah satu daripada alamat IP. 

Jadi ia menghantar permintaan yang sama. Tetapi di luar sampul surat, ia hanya meletakkan IP bahawa ia telah dimaklumkan. Dan dengan cara ini juga, boleh kita memuatkan mengimbangi permintaan dengan hanya menghantar sampul surat kepada yang berbeza salah satu pelayan Yahoo sendiri? 

Dan jika kita terus menggali, kita akan melihat mungkin syarikat-syarikat lain dengan lebih. CNN telah dua terdedah kepada umum. Walaupun sebenarnya jika kita melakukan ini lagi dan again-- cnn.com-- anda boleh melihat mereka mengubah perintah, sebenarnya. Jadi apa mekanisme ialah CNN menggunakan, nampaknya? 

PENONTON: Random. DAVID MALAN: Sebenarnya, ia boleh menjadi rawak, walaupun ia seolah-olah berbasikal belakang dan sebagainya. Jadi ia mungkin round robin di mana mereka hanya beralih perintah itu dibuat supaya bahawa saya mungkin akan mengambil pertama. Komputer saya akan mengambil setiap kali yang pertama. Jadi itulah mengimbangi beban. Dan yang membolehkan kita, akhirnya, untuk memetakan data, atau permintaan peta, merentasi pelbagai pelayan. Jadi apa jenis masalah sekarang masih wujud? Rasanya seperti kita hanya benar-benar menyelesaikan masalah yang baik. Kami mendapat pengguna untuk pelayan yang berbeza. But-- oh, dan Chris, adakah anda mempunyai soalan sebelum ini? 

PENONTON: [didengar] 

DAVID MALAN: Totally bergantung. Jadi apa yang berlaku di sini? Dan kita sebenarnya boleh melihat ini. Jadi mari kita cuba Yahoo. Sebenarnya, mari kita pergi ke Facebook. Kerana kita tahu bahawa salah berfungsi. Jadi, saya akan menyalin bahawa alamat IP lagi. Saya akan menutup semua tab ini. Saya akan pergi ke terbuka yang tab rangkaian yang khas di sini. Dan saya akan melawat hanya http: //. Dan sekarang saya akan tekan Enter. Dan mari kita lihat apa yang berlaku. 

Jika saya melihat bahawa permintaan, notis yang my-- Facebook adalah contoh yang tidak baik. Kerana mereka mempunyai teknik super mewah yang menyembunyikan terperinci yang dari kami. Biar saya menggunakan Yahoo instead-- http: // IP itu. Mari kita membuka rangkaian kami tab, memelihara log. Dan di sini kita pergi, Enter. Itu kelakar. OK, jadi di sini adalah terkenal 404 mesej. Apa yang lucu di sini adalah bahawa mereka mungkin tidak pernah akan kembali. Kerana ada mungkin bukan sesuatu yang salah semata-mata. Mereka mempunyai hanya sengaja memutuskan untuk tidak menyokong bentuk angka untuk alamat mereka. 

Jadi apa yang kita sebenarnya melihat dalam tab Network, jika saya menarik ini di sini, adalah, seperti yang saya katakan, yang terkenal 404, di mana jika saya melihat pengepala sambutan, ini adalah apa yang saya dapat sini-- 404 Not Found. Jadi mari kita cuba satu yang lain. Mari kita lihat jika CNN bekerjasama dengan kami. Saya akan merebut salah satu alamat IP CNN, membersihkan ini, http, dah, dah, dah, dah. Jadi, dalam jawapan kepada Chris soalan, salah satu yang bekerja. 

Dan mari kita pergi ke pengepala sambutan. Sebenarnya tidak, semua betul, saya bergelut untuk mencari contoh bekerja. Jadi CNN telah membuat keputusan, kita hanya akan meninggalkan anda pada apa-apa alamat anda sebenarnya melawat, isu-isu penjenamaan diketepikan. Tetapi apa yang tidak akan berlaku, jika kita dapat melihat ia dalam kes Facebook, adalah kita akan mendapat 301 Moved Selama-lamanya, kemungkinan besar, di dalam yang adalah lokasi: https: //www.facebook.com. Dan kemungkinan adalah www.facebook.com adalah alias untuk pelayan yang sama yang tepat kita hanya pergi ke. 

Jadi ia adalah tidak produktif sedikit. Kami benar-benar anda lawati pelayan. pelayan itu kemudiannya memberitahu kami, pergi. Pergi ke alamat ini lain. Tetapi kita hanya supaya berada akan kembali ke server yang sama. Tetapi mungkin kita kini tinggal di yang server tanpa belakang ini dan sebagainya. Kerana sekarang kita menggunakan yang dinamakan versi laman web ini, tidak angka itu. Soalan yang baik. 

OK, jadi jika kita kini assume-- kita telah diselesaikan mengimbangi beban. Kami kini mempunyai satu mekanisme, sama ada melalui DNS, sama ada melalui kotak hitam ini, sama ada ia menggunakan mana-mana teknik-teknik ini. Kita boleh mengambil permintaan pengguna dalam dan memikirkan yang pelayan, 1, 2, atau 3, untuk menghantar dia atau dia. 

Apa yang bermula untuk memecahkan mengenai laman web kami? Dalam erti kata lain, kita mempunyai membina perniagaan yang sebelum ini pada satu pelayan tunggal. Kini perniagaan yang sedang berjalan merentasi pelbagai pelayan. Apakah jenis andaian, apa jenis keputusan reka bentuk, kini mungkin pecah? 

Ini adalah kurang jelas. Tetapi mari kita lihat jika kita tidak boleh meletakkan kami jari pada beberapa masalah yang kita telah dicipta untuk diri kita sendiri. Sekali lagi, ia adalah jenis seperti memegang turun kebocoran pada hos. Dan kini beberapa isu baru telah muncul di sini. 

PENONTON: [didengar] DAVID MALAN: OK, jadi kita perlu terus berkembang ruang cakera keras. Saya OK dengan yang sekarang. Kerana saya fikir saya boleh skala mendatar. Seperti jika saya semakin lemah, saya hanya akan mendapat pelayan keempat, mungkin pelayan kelima, dan kemudian meningkatkan kapasiti kami sebanyak 30% lagi atau 50% atau barang kecil. Jadi saya OK dengan itu, sekurang-kurangnya buat masa ini. PENONTON: [didengar] DAVID MALAN: OK, jadi itulah titik yang baik. Jadi andaikan pelayan tidak sama. Dan perkhidmatan pelanggan atau yang setaraf e-mel semakin beberapa mesej daripada pengguna berkata, ini tidak berfungsi dengan betul. Ini sangat mungkin, kadang-kadang, bahawa mungkin satu atau lebih pelayan bertindak agak serba salah, tetapi tidak yang lain, yang boleh pasti membuat ia lebih sukar untuk mengejar isu itu. Anda mungkin perlu melihat pelbagai tempat. 

Itulah manifestasi daripada satu lagi jenis bug, yang adalah bahawa anda mungkin perlu mereka bentuk infrastruktur anda supaya bahawa segala-galanya adalah benar-benar sama. Tetapi ia mendedahkan masalah baru bahawa kita tidak mempunyai sebelum ini. Apa lagi? PENONTON: [didengar] 

DAVID MALAN: Ya, ada lagi kerumitan. Ada fizikal lebih wayar. Ada peranti lain. Malah, saya telah memperkenalkan asas konsep dan masalah asas di sini dikenali sebagai satu titik kegagalan, yang, walaupun anda tidak pernah mendengar frasa, anda boleh mungkin sekarang bekerja ke belakang dan mencari penyelesaiannya. Apakah ini bermakna bahawa saya mempunyai satu titik kegagalan dalam seni bina saya? Dan oleh seni bina, saya hanya bermakna topologi daripadanya. 

PENONTON: [didengar] 

DAVID MALAN: Ya, bagaimana jika balancer beban terbenam? Saya telah dimasukkan orang ini pertengahan yang tujuan hidup adalah untuk menyelesaikan masalah. Tetapi saya telah memperkenalkan masalah baru. Satu kebocoran baru telah muncul di dalam hos. Kerana sekarang jika balancer beban meninggal dunia atau rehat atau misfunctions, sekarang saya kehilangan akses kepada ketiga-tiga pelayan saya. Dan sebelum ini, saya tidak mempunyai orang tengah ini. Dan sebagainya ini adalah masalah baru, boleh dikatakan. Kami akan kembali kepada bagaimana kita boleh menetapkan bahawa. 

PENONTON: [didengar] DAVID MALAN: Itu akan menjadi satu pendekatan. Ya, dan sebagainya ini akan menjadi agak lubang tikus kita mula turun ke bawah. Tetapi mari kita kembali kepada bahawa dalam hanya seketika. Apa masalah-masalah lain yang telah kami ciptakan? 

Jadi Dan disebutkan dalam pangkalan data sebelum ini. Dan jika anda tidak terlalu biasa dari segi teknikal, pangkalan data yang hanya pelayan di mana mengubah data biasanya disimpan, mungkin yang seseorang perintah telah diletakkan, profil pengguna anda, nama anda, Alamat e-mel anda, perkara-perkara yang mungkin akan dimasukkan atau diubah dari masa ke masa. 

Sebelum ini, pangkalan data saya berada di pelayan yang sama sebagai pelayan web saya. Oleh kerana saya hanya mempunyai satu web akaun hosting. Segala-galanya adalah semua di tempat yang sama. Di mana saya harus meletakkan pangkalan data saya sekarang, pada pelayan 1, 2, atau 3? 

PENONTON: 4. 

DAVID MALAN: 4, OK, semua betul, jadi mari kita pergi ke sana. Jadi, saya akan meletakkan saya database-- dan mari kita mula melabelkan ini www, www, www. Dan saya akan berkata, ini adalah nombor empat. Dan saya akan berkata db untuk pangkalan data. OK, Saya menyukainya. Apa yang harus saya mungkin dapat melukis di sini? 

PENONTON: [didengar] 

DAVID MALAN: Ya, jadi kod, seperti yang kita akan membincangkan esok, mungkin adalah sama pada semua tiga pelayan. Tetapi ia kini perlu untuk menyambung tidak kepada pangkalan data berjalan dalam negara tetapi di tempat lain. Dan itulah denda. Kami hanya boleh memberi pangkalan data yang nama, seperti yang kita mempunyai, atau nombor. Dan itu semua berfungsi dengan baik. Tetapi apa yang telah kita lakukan? Kami telah mendatar skrin skrin dengan mempunyai tiga pelayan dan bukan satu, yang bagus. Kerana sekarang kita boleh mengendalikan tiga kali lebih banyak beban. 

Dan lebih baik lagi, jika satu atau dua dari orang-orang pelayan turun, perniagaan saya boleh terus beroperasi. Kerana saya masih mempunyai satu, walaupun saya jenis tempang bersama prestasi bijak. Tetapi apa masalah baru aku diperkenalkan dengan menggerakkan pangkalan data kepada pelayan berasingan ini bukan pada 1, 2, dan 3? 

PENONTON: [didengar] DAVID MALAN: Ya, jadi sekarang saya mempunyai satu lagi titik tunggal kegagalan. Jika pangkalan data saya meninggal dunia, atau perlu dinaik taraf, atau apa sahaja, kini pasti, laman web saya adalah dalam talian. Dan saya boleh berkhidmat statik, kandungan yang tidak berubah. Tetapi saya tidak boleh membiarkan log pengguna dalam atau perubahan apa-apa atau untuk apa-apa, lebih teruk lagi. Kerana jika 4 di luar talian, maka 1, 2, dan 3 benar-benar tidak boleh bercakap kepadanya oleh definisi. 

OK jadi yeah, dan ini adalah mengapa Saya teragak-agak untuk menarik ini. Jadi mari kita kembali kepada itu. Saya tidak bermaksud untuk terus menolak anda di luar. Tetapi gambar adalah sangat cepat akan mendapat tekanan. Kerana anda perlu mula mempunyai dua daripada segala-galanya. Malah, jika anda telah pernah melihat filem Hubungi beberapa tahun yang lalu dengan Jodie Foster-- tidak? 

OK, jadi untuk dua kita yang telah menonton Hubungi, terdapat hubungan yang terdapat di mana mereka pada dasarnya membeli dua sesuatu bukannya satu, walaupun pada dua kali harga. Jadi ia adalah jenis yang suka bermain komen dalam filem. Ia adalah jenis yang berkaitan dengan ini. Kami benar-benar boleh melakukan itu. Dan anda baru sahaja kos kita wang dua kali ganda. Tetapi kita akan kembali kepada itu. 

Oleh itu, kita telah diselesaikan ini. Jadi, anda tahu apa? Ini seperti cerun licin. Saya tidak mahu berurusan dengan mempunyai mempunyai pangkalan data pendua. Ia terlalu banyak wang. Awak tahu tak? Saya ingin mempunyai pangkalan data saya seperti dalam versi satu di mana setiap pelayan mempunyai pangkalan data tempatan sendiri. Jadi, saya hanya akan menarik db pada masing-masing. 

Jadi sekarang setiap pelayan web adalah sama dalam setakat ini kerana ia mempunyai kod yang sama, yang sama aset statik, gambar yang sama dan teks dan sebagainya. Dan masing-masing mempunyai pangkalan data sendiri. Saya tetap titik tunggal masalah kegagalan. Sekarang saya mempunyai database. Tidak kira yang dua atau salah satu daripada perkara mati, selalu ada satu kiri. Tetapi apa masalah baru aku dicipta bahawa penyelesaian Dan ini dielakkan? 

PENONTON: [didengar] 

DAVID MALAN: Ya, saya perlu menyegerakkan mereka, bukan? Kerana sama ada saya perlu menyegerakkan siapa yang akan jika- dalam erti kata lain, jika Alice melawat saya tapak dan dia berlaku untuk mendapatkan secara rawak atau bulat robined atau apa sahaja, ke nombor server satu, selepas itu saya perlu sentiasa menghantarnya ke pelayan 1. Mengapa? Kerana jika saya menghantar beliau kepada pelayan 2, ia akan kelihatan seperti dia tidak wujud di sana. 

Saya tidak akan mempunyai sejarah perintah beliau. Saya tidak akan mempunyai profil beliau di sana. Dan itu hanya berasa seperti ia mengundang masalah. Dan apabila Bob melawat, saya perlu menghantar dia sentiasa kepada pelayan yang sama, 2, atau mana-mana satu, dan Charlie kepada yang ketiga, dan konsisten. Ini tidak munasabah, walaupun. Ini dipanggil pembahagian pangkalan data anda. Dan sebenarnya inilah yang Facebook lakukan awal. 

Jika anda mengikuti sejarah Facebook, ia bermula di sini di kampus sebagai www.thefacebook.com. Kemudian ia berkembang sekali Mark bermula merebak ke dalam kampus lain menjadi harvard.thefacebook.com dan mit.thefacebook.com, dan mungkin bu.thefacebook.com, dan sebagainya. Dan itu adalah kerana awal, saya tidak fikir anda boleh mempunyai rakan di seluruh kampus. Tetapi itulah denda. Kerana sesiapa sahaja dari Harvard tidak perlu lagi dihantar ke pelayan ini. Sesiapa sahaja dari BU tidak perlu lagi dihantar ke pelayan ini. Sesiapa sahaja dari MIT tidak perlu lagi menghantar untuk server-- ini dalam teori. Saya kurang tahu semua butir-butir pelaksanaan asas. Tetapi dia mungkin disisihkan oleh orang kampus mereka, di mana rangkaian mereka adalah. 

Jadi itulah yang baik sehingga ke titik di mana anda perlu dua pelayan untuk Harvard, atau tiga pelayan untuk Harvard. Dan kemudian kesederhanaan yang jenis rosak. Tetapi itu pendekatan yang munasabah. Mari kita sentiasa menghantar Alice ke tempat yang sama, sentiasa menghantar Bob ke tempat yang sama. Tetapi apa yang berlaku jika Alice pelayan pergi luar talian? Bob dan Charlie masih boleh membeli perkara dan log masuk ke dalam laman web ini. Tetapi Alice tidak boleh. Jadi, anda telah kehilangan satu pertiga pangkalan pengguna anda. Mungkin itu lebih baik daripada 100%? Tetapi mungkin ia akan menjadi baik jika kita boleh masih menyokong 100% daripada pengguna kami walaupun satu pertiga daripada kami pelayan pergi luar talian. 

Oleh itu, kita dapat menyegerakkan apa? Bukan pengguna, per se, tetapi pangkalan data di semua pelayan ini. Jadi sekarang kita jenis memerlukan jenis sambungan di sini supaya pelayan diri mereka boleh sync-- tidak munasabah. Dan sebenarnya, teknologi ini wujud. Dalam dunia pangkalan data, ada tanggapan pangkalan data yang tuan-hamba, atau utama menengah, di mana antara ciri-ciri bukan sahaja untuk menyimpan data dan bertindak balas dengan data, tetapi juga hanya untuk sentiasa menyelaras dengan satu sama lain. Jadi bila-bila masa anda menulis atau menyimpan sesuatu untuk pangkalan data ini, ia segera mendapat "ditiru" kepada pangkalan data yang lain juga. 

Dan bila-bila masa anda dibaca, ia tidak kira di mana anda berada. Kerana jika dalam teori mereka semuanya telah diselaraskan, anda akan mendapat pandangan yang sama data. Jadi ini betul-betul sesuai. Pasti ada menjadi tangkapan. Apa yang mungkin tangkapan menjadi? 

PENONTON: [didengar] 

DAVID MALAN: Ya, jadi tiga kali sebanyak barangan yang boleh berlaku. Itulah kenyataan. Semuanya mungkin sama dalam semangat. Tetapi seseorang perlu konfigurasi ini. Ada kebarangkalian yang lebih tinggi yang sesuatu yang akan pergi salah. Hanya combinatorially anda mempunyai barangan yang lebih terdedah kepada kesilapan. Apa lagi yang tidak baik yang berpotensi? PENONTON: [didengar] 

DAVID MALAN: Ya, jadi penyegerakan boleh menjadi buruk. Walaupun anda mungkin tahu dari sandaran dan apa-apa, jika anda hanya sedang membuta tuli membuat sandaran, bagaimana jika sesuatu yang tidak pergi salah dalam satu pangkalan data? Anda memadam sesuatu yang anda tidak sepatutnya. Anda segera ditiru masalah yang mana-mana sahaja. Jadi Victoria adalah backup talking-- akan menjadi satu perkara yang baik di sini. Dan dengan itu kita akan kembali kepada itu. Dan untuk menjadi jelas, kita berbicara tidak mengenai sandaran di sini semata-mata. Kami bercakap tentang replikasi benar atau penyegerakan seluruh pelayan. Mereka semua streaming. Mereka tidak bermaksud untuk digunakan untuk sandaran. 

PENONTON: [didengar] DAVID MALAN: Apa itu? PENONTON: Higher-- DAVID MALAN: kos tinggi. Kami telah tiga kali ganda kos bagi pasti, walaupun sekurang-kurangnya dari segi perkakasan. Kerana pangkalan data adalah hanya sekeping perisian. Dan pelayan web adalah suatu perisian. Ia mungkin percuma jika kita menggunakan apa-apa beberapa perkara sumber terbuka. Tetapi jika kita menggunakan sesuatu seperti Oracle, kita membayar Oracle lebih banyak wang setiap lesen, atau Microsoft untuk akses. Pasti ada beberapa tangkapan lain di sini. Ia tidak boleh menjadi mudah ini. 

Jadi untuk mata anda, saya fikir ia adalah Kareem, untuk geografi earlier-- atau tidak, Roman, adalah ia, untuk geography-- rasa bahawa kita menjadi pintar tentang perkara ini, dan kami meletakkan salah satu pelayan kami, dan menghidupkan pangkalan data kami, di Amerika Syarikat, dan satu lagi di Eropah, satu lagi di Amerika Selatan, satu lagi di Afrika, lain di Asia, di mana sahaja kita mungkin mahu seluruh dunia. Kita sudah tahu dari jejak kami laluan yang titik A dan titik B, jika mereka semakin jauh, akan mengambil lebih banyak masa. 

Dan jika ada di antara kamu telah menggunakan alat, seperti Facebook atau Twitter atau mana-mana laman web hari ini yang sentiasa berubah kerana pengguna data dicipta, kadang-kadang jika anda melanda Reload atau membuka halaman yang sama dalam pelayar lain, anda lihat versi yang berbeza, hampir. Anda mungkin melihat status seseorang kini di sini tetapi tidak di sini, dan kemudian anda tambah nilai, dan kemudian ia muncul, dan anda menambah nilai lagi, dan ia hilang. Dengan kata lain, menyimpan mata keluar untuk ini, sekurang-kurangnya jika anda menggunakan sosial rangkaian terutamanya. 

Sekali lagi, hanya kerana data berubah begitu cepat, kadang-kadang pelayan yang keluar dari penyegerakan. Dan mungkin ia adalah satu tetingkap super kecil. Tetapi 200 milisaat, mungkin malah lebih daripada itu bahawa- akan mengambil bukan sifar jumlah masa untuk pangkalan data tersebut, segerakkan. Dan kita tidak hanya bercakap kira-kira satu permintaan. Jika syarikat yang mempunyai beribu-ribu pengguna menggunakannya secara serentak, mereka mungkin penampan. Dalam erti kata lain, tidak mungkin menjadi barisan atau garis tunggu sebelum semua pangkalan data yang pertanyaan boleh mendapatkan disegerakkan. Jadi mungkin ia sebenarnya beberapa saat. 

Dan sesungguhnya ini adalah benar Saya rasa walaupun sehingga hari ini dengan Facebook, di mana apabila mereka disegerakkan daripada Pantai Timur ke Pantai Barat, ia mempunyai bukan remeh lengah perambatan, jadi untuk bercakap, bahawa anda hanya jenis perlu bertolak ansur. Dan kerana itu ia tidak begitu banyak bug kerana ia adalah satu realiti yang pengguna anda mungkin tidak melihat data yang betul sekurang-kurangnya Beberapa saat. 

Saya melihat ini di Twitter banyak sebenarnya mana kadang-kadang saya akan tweet dalam satu tetingkap, buka lain untuk kemudian melihat sendiri untuk mengesahkan bahawa ia memang naik, dan ia tidak ada lagi. Dan saya perlu jenis nilai, tambah nilai, reload-- oh, ada ia. Dan itu bukan kerana ia tidak disimpan. Ia hanya tidak dibiakkan kepada pelayan lain. 

Jadi ini keseimbangan, too-- adakah anda benar-benar mahu mendedahkan diri kepada risiko bahawa jika pengguna pergi ke perintah mereka sejarah, ia tidak benar-benar sudah sampai? Saya melihat ini atas bank-bank tertentu. Ia sentiasa menyakitkan hati saya apabila, baik, untuk satu, anda hanya boleh pergi seperti enam bulan lepas dalam penyata bank anda dalam beberapa bank-bank, walaupun dalam teori yang sepatutnya dapat mempunyai segala-galanya dalam talian. Mereka hanya mengambil barangan offline kadang-kadang. Kadang-kadang, too-- apa yang laman web yang ia? Ada one-- oh, ia adalah GoDaddy, saya fikir. GoDaddy, apabila anda menyemak membeli nama domain atau sesuatu, mereka sering akan memberikan anda pautan ke resit anda. Dan jika anda klik link yang betul jauh, ia sering tidak berfungsi. Ia hanya berkata, buntu, apa-apa di sini. 

Dan itu juga kerana ini kelewatan pembiakan. Kerana bagi apa-apa sebab, mereka mengambil sedikit masa untuk benar-benar menjana itu. Jadi ini adalah jenis seperti anda mahu menarik rambut anda keluar pada satu ketika. Kerana semua yang anda cuba untuk lakukan adalah menyelesaikan masalah yang mudah. Dan kita terus mewujudkan baru masalah kepada diri kita sendiri. Jadi mari kita lihat jika kita jenis boleh membatalkan. 

Ia ternyata bahawa menggabungkan pangkalan data pada semua pelayan web anda adalah amalan yang tidak benar-benar yang terbaik. Secara umumnya, apa yang jurutera akan lakukan, atau sistem arkitek, adalah untuk mempunyai yang berbeza peringkat pelayan. Dan hanya demi ruang ini, saya akan menarik pangkalan data mereka di sini. 

Kami mungkin mempunyai pangkalan data dan nombor pelayan empat sini yang tidak mempunyai hubungan dengan setiap pelayan ini di sini. Jadi ini mungkin depan kami menamatkan peringkat, kerana orang akan berkata. Dan ini akan menjadi akhir peringkat belakang kami. Dan yang hanya bermakna bahawa ini menghadapi pengguna. Dan pangkalan data tidak menghadapi pengguna. Tiada pengguna boleh terus mengakses pangkalan data. 

Jadi mari kita kini mungkin turun laluan Victoria dicadangkan. Ini adalah satu titik kegagalan. Yang membuatkan saya tidak selesa. Jadi apa yang mungkin yang paling penyelesaian yang jelas? PENONTON: [didengar] DAVID MALAN: Maaf, mengatakan bahawa sekali lagi. PENONTON: [didengar] DAVID MALAN: Pelayan Non-pengeluaran. Apa maksud awak? 

PENONTON: [didengar] 

DAVID MALAN: Oh, OK, jadi sandaran. OK, jadi kita boleh berbuat demikian, sudah tentu. Dan sebenarnya ini adalah sangat biasa dilakukan. Ini mungkin menjadi nombor pangkalan data lima. Tetapi itu hanya disambungkan ke nombor empat. Dan anda mungkin memanggilnya ganti panas. Kedua-dua pangkalan data yang boleh dikonfigurasikan untuk hanya sentiasa menyegerakkan satu sama lain. Dan jadi jika mesin ini mati, untuk apa sahaja yang bodoh reason-- cakera keras mati, seseorang dengan lawatan-lawatan ke atas kord, beberapa perisian cacat dan tergantung mesin crashes-- anda boleh mempunyai manusia secara literal cabut satu ini dari dinding dan sebaliknya plug satu ini dalam. Dan kemudian dalam, katakan, yang beberapa minit, mungkin setengah jam, anda kembali dalam talian. 

Ia tidak besar, tetapi ia juga tidak dahsyat. Dan anda tidak perlu bimbang tentang apa-apa isu-isu penyegerakan. Kerana segala-galanya sudah ada. Kerana anda mempunyai yang sempurna sandaran bersedia untuk pergi. 

Anda boleh menjadi sedikit pelamun tentang perkara ini, kerana beberapa orang kerap, di mana anda mungkin mempunyai beberapa pangkalan data empat di sini, bilangan pangkalan data lima sini, yang bercakap antara satu sama lain. Tetapi anda juga perlu ini jenis arrangement-- dan ia sengaja kelihatan tidak kemas, kerana ia is-- di mana semua pelayan akhir hadapan boleh bercakap dengan semua pelayan akhir belakang. Dan jadi jika pangkalan data ini tidak bertindak balas, ini pelayan akhir hadapan mempunyai untuk mempunyai program kod dalam mereka yang berkata, jika anda tidak mendapat sambungan kepada pangkalan data ini, utama dengan segera bermula bercakap dengan menengah. 

Tetapi ini sekarang menolak kerumitan kepada kod. Dan kini pemaju anda, perisian anda pemaju, perlu tahu tentang perkara ini. Dan anda jenis mengikat kod yang anda menulis untuk akhir belakang sebenar anda butir-butir pelaksanaan, yang menjadikan ia lebih keras, terutamanya dalam yang lebih besar syarikat atau laman web yang lebih besar, di mana anda tidak semestinya mahu pengaturcara untuk mempunyai untuk mengetahui bagaimana pangkalan data jurutera menjalankan tugas mereka. Anda mungkin mahu menyimpan peranan jenis fungsi yang berbeza supaya bahawa ada lapisan ini abstraksi antara kedua-dua. 

Jadi bagaimana kita boleh menetapkan ini? Well, kita jenis diselesaikan masalah ini sebelum ini. Mengapa kita tidak meletakkan salah satu daripada perkara-perkara ini di sini di mana ia bercakap pula kepada nombor empat dan lima, semua pelayan web akhir hadapan bercakap dengan orang tengah ini, dan orang tengah dalam laluan seterusnya data mereka? Malah, apa yang mungkin menjadi nama baik untuk perkara ini? 

PENONTON: [didengar] DAVID MALAN: OK, pengurus pangkalan data. Tetapi apa yang mungkin menjadi tempoh yang kita boleh menggunakan semula untuk peranti ini? Kami mengimbangi. Ya, jadi sebenarnya, Saya tidak berlaku adil di sini. Jadi pengimbang beban akan membayangkan bahawa kita menogol belakang dan sebagainya di sini, yang perlu sebenarnya tidak menjadi kes itu. Jadi ada beberapa cara yang boleh kita lakukan ini. 

Jika ini adalah sebenarnya balancer beban, cerita betul-betul sama seperti sebelum ini. Beberapa permintaan pergi ke 4. Sesetengah daripada mereka pergi ke 5. Dan itulah yang baik. Kerana sekarang kita boleh mengendalikan dua kali ganda pemprosesan. Tetapi hubungan ini di sini adalah super penting. Mereka terpaksa tinggal sentiasa disegerakkan dan diharapkan tidak geografi terlalu jauh supaya bahawa penyegerakan pada dasarnya serta-merta. Jika tidak, kita mungkin mempunyai masalah. 

Jadi itu tidak buruk. Tetapi sekali lagi, kami telah memperkenalkan masalah baru. Apa masalah aku hanya dicipta semula? titik kegagalan. Jadi apa penyelesaian untuk itu? Jadi seperti Victoria suka untuk membelanjakan wang, kita boleh mengambil lelaki ini keluar dan melakukan ini. Dan saya hanya akan bergerak di sini ruang yang cukup. Dan ia akan menjadi sedikit tidak kemas. Saya akan menjaga garisan lukisan. Katakan bahawa semua orang-orang garisan pergi ke kedua-duanya? 

Satu teknik yang biasa di sini akan menjadi menggunakan teknik yang dipanggil denyutan jantung mana setiap peranti ini, kiri dan kanan balancers beban, atau apa sahaja yang ingin untuk memanggil mereka, sentiasa berkata, saya masih hidup, Saya masih hidup, saya masih hidup, saya masih hidup. Salah seorang daripada mereka secara lalai bertindak sebagai sekolah rendah. Jadi semua trafik dihalakan melalui yang di sebelah kiri, misalnya, secara lalai, sewenang-wenangnya. 

Tetapi sebaik sahaja lelaki itu di sebelah kanan tidak mendengar dari lelaki di sebelah kiri lagi, salah satu di sebelah kanan diprogramkan secara automatik, misalnya, mengambil alih alamat IP daripada satu di sebelah kiri, dan oleh itu menjadi sekolah rendah, dan mungkin menghantar e-mel atau mesej teks kepada manusia untuk berkata, hey, utama sebelah kiri di luar talian. Aku akan menjadi utama untuk sekarang. Jadi Naib Presiden menjadi presiden, jadi untuk bercakap. Dan seseorang mempunyai untuk pergi menyelamatkan presiden, jika anda mahu. Kerana sekarang kita mempunyai sementara titik kegagalan. 

Jadi seperti yang rumit atau tertekan kerana ini mungkin kelihatan mula bersikap, ini adalah bagaimana anda menyelesaikan masalah ini. Anda tidak membuang wang di dalamnya. Anda membuang perkakasan di dalamnya. Tetapi malangnya anda menambah kerumitan untuk itu. Tetapi hasilnya, akhirnya, adalah bahawa anda mempunyai banyak lagi, dalam teori, seni bina yang teguh. Ia masih tidak sempurna. Kerana walaupun kita ada-- kita mungkin tidak mempunyai satu titik kegagalan. Kami kini mempunyai mata dwi kegagalan. Tetapi jika dua perkara yang silap, yang benar-benar boleh, kita masih akan berada di luar talian. 

Dan sebagainya sangat biasa dalam industri adalah untuk menggambarkan masa sehingga anda dari segi nines. Dan jenis matlamat bercita-cita untuk menjadi 99.999% masa laman web anda adalah dalam talian. Atau lebih baik, menambah beberapa nines untuk itu. Malangnya, nines adalah sangat mahal. Dan mari kita benar-benar melakukan ini keluar. Jadi jika saya membuka kalkulator besar saya sekali lagi, 365 hari dalam setahun, 24 jam dalam sehari, 60 minit dalam satu jam, dan 60 saat dalam satu minit, itulah berapa saat terdapat dalam setahun jika saya melakukan ini dengan betul. Jadi, jika kita kali ini dengan 0,99999, itu berapa banyak masa yang kita mahu bercita-cita untuk. Jadi itu bermakna kita harus sehingga ini banyak saat sepanjang tahun. Jadi, jika saya kini tolak nilai asal, atau sebaliknya nilai baru ini daripada first-- 316 saat, yang sudah tentu adalah lima minit. 

Jadi, jika laman web anda atau syarikat anda adalah mendakwa "lima nines," di mana anda berada sehingga 99.99% masa, ini bermakna anda lebih baik telah cukup pintar dan cepat cukup dan cukup siram dengan sumber yang pelayan anda hanya offline lima minit daripada tahun. Ia merupakan satu mahal dan perkara yang sukar untuk bercita-cita untuk. 

Jadi ia adalah satu kekurangan juga. 99.999% daripada masa yang cukup darn sukar dan mahal. Five minutes-- anda hampir tidak boleh mendapatkan kepada pelayan untuk menggantikan fizikal sesuatu yang silapnya. Dan itulah sebabnya kita mula pendawaian perkara bersama-sama lebih rumit apriori supaya komputer jenis boleh menetapkan diri mereka sendiri. Yeah. 

PENONTON: [didengar] DAVID MALAN: Masalah ini boleh dalam apa-apa beberapa tempat. Dan dalam fact-- 

PENONTON: [didengar] DAVID MALAN: Sudah tentu, benar-benar. Dan seperti gambar adalah semakin rumit, ia boleh menjadi pelayan web. Ia boleh menjadi kuasa untuk bangunan. Ia boleh menjadi sesuatu yang fizikal, seperti kabel mendapat berjumbai atau ditendang keluar. Ia boleh menjadi pangkalan data tidak bertindak balas. Ia boleh mereka dikemaskini operasi mereka sistem dan sesuatu yang tergantung. Jadi terdapat banyak bahagian yang bergerak yang lain. Dan begitu banyak kejuruteraan yang telah pergi di sebalik ini adalah benar-benar hanya berdagang kira, seperti bagaimana banyak masa, berapa banyak wang ia sebenarnya bernilai, dan apakah ancaman anda benar-benar bimbang tentang? Sebagai contoh, dalam kursus yang saya mengajar di Harvard, kita menggunakan banyak pengkomputeran awan, yang kami akan mula mengambil lihat pada masa ini, sebenarnya, di mana kita menggunakan Amazon Web Services. Hanya kerana itulah salah satu kami bermula dengan. Tetapi ada yang lebih hari ini daripada Google dan Microsoft dan lain-lain. Dan kita sedar memilih untuk meletakkan semua mesin maya kursus kami, kerana mereka dipanggil, dalam saya fikir ia Western pusat data Virginia. Kebanyakan pelajar-pelajar kita berada dari Amerika Syarikat, walaupun terdapat pasti beberapa di peringkat antarabangsa. 

Tetapi realitinya adalah ia hanya lebih mudah dan ia lebih murah untuk kita untuk meletakkan semua telur kami dalam bakul Virginia, walaupun saya tahu jika sesuatu yang tidak kena di Virginia, sebagai mempunyai kadang-kadang happened-- seperti jika ada taufan atau beberapa cuaca acara seperti itu, jika ada beberapa kuasa isu grid atau like-- semua data kursus kami mungkin pergi offline untuk beberapa beberapa minit atau jam atau lebih lama lagi. 

Tetapi jumlah kerumitan yang akan diperlukan, dan jumlah wang yang akan diperlukan, untuk mengendalikan segala-galanya selari di Eropah atau di California hanya tidak rasa begitu banyak. Jadi ia adalah satu perdagangan rasional di luar, tetapi salah satu yang pedih apabila anda sebenarnya mempunyai downtime itu. 

Nah, mari kita peralihan sekarang untuk beberapa penyelesaian berasaskan awan kepada beberapa masalah-masalah ini. Semua yang kita telah membincangkan setakat ini adalah jenis masalah yang mempunyai telah bersama kami untuk beberapa waktu, sama ada anda mempunyai anda sendiri pelayan di syarikat anda, sama ada anda pergi ke lokasi bersama meletakkan seperti pusat data dan bahagian ruang dengan orang lain, atau pada masa kini di dalam awan. 

Dan apa yang baik tentang awan adalah bahawa semua perkara-perkara ini saya lukisan sebagai objek fizikal kini boleh dianggap sebagai jenis objek maya dalam awan yang simulasi dengan perisian. Dalam erti kata lain, komputer hari ini, pelayan hari ini, seperti gambar Dell Saya menunjukkan sebelum ini, begitu cepat, mempunyai begitu banyak RAM, begitu banyak CPU, cakera begitu banyak ruang, yang penulis telah menulis perisian untuk partition hampir satu pelayan ke dalam ilusi ia dua orang pelayan, atau 200 pelayan, jadi bahawa setiap daripada kita pelanggan mempunyai ilusi mempunyai bukan hanya akaun di beberapa web menjadi tuan rumah, tetapi mesin kita sendiri bahawa kita menyewa dari orang lain. 

Tetapi ia adalah satu mesin maya dalam setakat yang pada satu pelayan Dell, sekali lagi mungkin akan dibahagikan ke dalam dua atau 200 atau lebih mesin maya, semua yang memberi seseorang pentadbiran akses, tetapi dengan cara yang di mana tiada seorang pun daripada kami mengetahui atau boleh mengakses lain maya mesin pada perkakasan yang sama. Jadi untuk cat gambar dalam slaid hari ini, Saya telah ini ditembak di sini dari laman web dipanggil buruh pelabuhan. 

Jadi ini adalah lebih sedikit terperinci daripada kita benar-benar perlu. Tetapi jika anda melihat ini sebagai infrastructure-- anda jadi hanya perkakasan anda sendiri, pelayan anda, rak, data pusat, dan semua yang anda lakukan bahawa- biasanya menjalankan sistem operasi tuan rumah. Jadi sesuatu like-- ia boleh menjadi Windows. Ia tidak akan menjadi Mac OS. Oleh kerana itu tidak benar-benar perusahaan hari ini. Jadi ia akan menjadi Linux atau Solaris atau Unix atau BSD atau FreeBSD atau apa-apa bilangan sistem operasi lain yang sama ada percuma atau komersial. 

Dan kemudian anda menjalankan program, program khas, dipanggil hypervisor, atau mesin monitor maya, VMM. Dan ini adalah produk, jika anda biasa, seperti VMware atau VirtualBox atau PC Maya atau orang lain. Dan apa program-program lakukan adalah tepat ciri yang saya diterangkan sebelum ini. Ia mewujudkan ilusi bahawa satu mesin fizikal boleh menjadi pelbagai mesin maya. 

Dan supaya kotak-kotak berwarna-warni sehingga atas adalah lukisan gambar yang berikut. hypervisor ini, ini perisian, memanggilnya VMware, berjalan pada beberapa yang lain sistem operasi, memanggilnya Linux, mewujudkan ilusi bahawa komputer fizikal ini sebenarnya satu, dua, tiga komputer maya. Jadi saya sekarang beli, sebagai pemilik perkakasan ini, satu komputer fizikal. Dan sekarang saya menyewa kepada tiga pelanggan. 

Dan orang-orang tiga pelanggan semua berfikir mereka mempunyai mesin maya berdedikasi. Dan ia tidak umpan dan suis. Ia adalah pendedahan yang lebih yang anda menggunakan mesin maya. Tetapi teknologi, kita semua mempunyai kawalan pentadbiran penuh atas setiap daripada tetamu mereka sistem operasi, yang boleh mana-mana beberapa sistem operasi. 

Saya boleh memasang apa-apa yang saya mahu. Saya boleh menaik taraf seperti yang saya mahu. Dan saya tidak perlu tahu atau mengambil berat tentang operasi lain sistem di komputer itu, mesin maya yang lain, kecuali pemilik semua kelabu barangan sedang sedikit tamak dan keterlebihan sumber mereka. 

Jadi, jika anda mengambil satu mesin fizikal dan menjualnya untuk tidak 200 tetapi 400 pelanggan, pada satu ketika kita akan tersandung ke dalam orang-orang isu-isu prestasi yang sama seperti sebelum ini. Kerana anda hanya mempunyai terhingga jumlah cakera dan RAM dan sebagainya. Dan mesin maya hanya program itu berpura-pura menjadi komputer yang lengkap. Jadi anda mendapat apa yang anda bayar di sini. 

Jadi, anda akan mencari dalam talian anda mungkin membayar syarikat terkemuka mungkin $ 100 sebulan untuk mesin maya anda sendiri, atau sendiri pelayan persendirian maya anda, yang merupakan satu lagi istilah untuk itu. Atau anda mungkin menemui beberapa lalat oleh malam di mana anda membayar $ 5,99 sebulan untuk mesin maya anda sendiri. Tetapi kemungkinan besar anda tidak mempunyai hampir prestasi sebanyak disediakan untuk anda, kerana mereka telah Overselling ia jadi, daripada anda akan dengan yang lebih tinggi peringkat perkhidmatan atau vendor yang lebih baik. 

Jadi apakah ini sebenarnya bermakna untuk kita? Jadi biarlah saya pergi ke ini. Saya akan pergi ke aws.amazon.com. Hanya kerana mereka mempunyai menu baik pilihan. Tetapi ini pelajaran yang sama terpakai bagi sesuatu seluruh sekumpulan vendor awan lain. Malangnya, ia adalah sering lebih pemasaran bercakap daripada apa-apa. Dan ini sentiasa berubah. Jadi, anda pergi ke laman web seperti ini. Dan ini benar-benar tidak memberitahu anda apa-apa. 

Dan saya, kerana saya melihat ini, tidak benar-benar tahu apa yang mana-mana perkara-perkara ini semestinya lakukan sehingga saya menyelam dalam. Tetapi mari kita mulakan di sebelah kiri, pengiraan. Dan saya akan klik ini. Dan kini Amazon mempunyai terang yang bilangan besar daripada perkhidmatan hari ini. Tetapi Amazon EC2 adalah mungkin yang paling mudah. 

Amazon EC2 akan buat untuk kita betul-betul gambar yang kita lihat sebentar tadi. Ia adalah bagaimana mereka membuat banyak wang mereka dalam awan. Rupa-rupanya Netflix dan lain-lain adalah dalam awan dengan mereka. Ini semua biasanya bercakap pemasaran gebu. Jadi apa yang saya mahu lakukan adalah pergi ke Pricing-- atau sebaliknya mari kita pergi ke Kejadian pertama hanya untuk melukis sekeping gambar ini. 

Jadi ini akan berbeza-beza oleh vendor. Dan kita tidak perlu terlalu jauh ke dalam rumpai sini bagaimana ini semua kerja-kerja. Tetapi cara Amazon, misalnya, sewa anda mesin maya atau pelayan dalam awan itu mereka telah mendapat ini jenis nama-nama lucu, seperti t2.nano, yang bermaksud kecil, atau t2.large, yang bermaksud besar. Setiap daripada mereka memberikan anda sama ada satu atau dua CPU maya. 

Mengapa CPU maya? Nah, mesin fizikal mungkin mempunyai 64 atau lebih CPU yang sebenar. Tetapi sekali lagi, melalui perisian, mereka mencipta ilusi bahawa satu mesin boleh divvied sehingga berbilang pengguna. Oleh itu, kita boleh memikirkan ini sebagai mempunyai satu Intel CPU atau dua. kredit CPU setiap hour-- saya akan perlu membaca cetakan halus apa ini sebenarnya bermakna. Ini bermakna berapa banyak mesin anda boleh menggunakan sejam vis-a-vis pelanggan lain pada perkakasan itu. 

Berikut adalah berapa banyak RAM atau memori anda get-- sama ada separuh gigabyte, atau 500 megabait, atau 1 gigabyte, atau 2. Dan kemudian penyimpanan hanya merujuk kepada jenis cakera mereka memberi anda. Ada simpanan yang berbeza teknologi yang mereka tawarkan. Tetapi yang lebih menarik daripada ini maka mungkin harga. 

Jadi, jika anda adalah CTO atau seorang jurutera yang tidak mahu menjalankan pelayan di anda pejabat, atas apa jua sebab, dan ia adalah terlalu rumit atau mahal untuk membeli pelayan dan bersama mencari mereka dan membayar sewa dalam beberapa ruang sangkar fizikal somewhere-- anda hanya mahu duduk pada komputer riba anda lewat malam, menaip maklumat kad kredit anda, dan pelayan sewa di cloud-- baik, kita boleh melakukannya di sini. Saya akan turun ke bawah supaya- Linux adalah sistem operasi popular. Dan mari kita hanya mendapatkan rasa sesuatu. Whoops-- terlalu besar. 

Jadi mari kita lihat yang paling kecil mereka mesin maya, yang seolah-olah mempunyai, untuk tujuan kita, satu CPU dan 500 megabait RAM. Itu cukup kecil. Tetapi terus terang, pelayan web tidak perlu melakukan semua yang banyak. Anda mempunyai ciri-ciri komputer yang lebih baik dalam komputer riba anda. Tetapi anda tidak perlu mereka ciri-ciri komputer pada hari ini untuk perkara-perkara. Anda akan membayar $ 0,0065 per jam. 

Jadi mari kita lihat. Jika terdapat 24 jam dalam sehari, dan kami membayar sebanyak ini sejam, ia akan kos anda $ 0,15 untuk menyewa yang server tertentu dalam awan. Dan itu hanya untuk sehari. Jika kita melakukan ini 365-- $ 57 hingga menyewa server tersebut. Jadi ia kedengaran super murah. 

Itu juga prestasi yang sangat rendah. Oleh itu, kita, untuk kursus yang saya mengajar di sini, cenderung untuk menggunakan Saya rasa t2.smalls atau t2.mediums. Dan kita mungkin mempunyai beberapa ratus pengguna, beberapa ribu pengguna, jumlah. Ia agak sederhana. Jadi mari kita lihat apa ini akan kos. Jadi, jika saya lakukan kali ini kos 24 jam kali 365, satu ini $ 225. Dan bagi kursus Saya mengajar, kita biasanya menjalankan dua daripada segala-galanya, untuk lebihan dan juga untuk prestasi. Oleh itu, kita mungkin menghabiskan, oleh itu, $ 500 untuk pelayan bahawa kita mungkin perlu setahun. 

Sekarang, jika anda memerlukan lebih performance-- mari kita lihat pada ingatan. Kami telah berbincang tentang memori agak sedikit. Dan jika anda memerlukan lebih banyak memory-- dan 64 gigabait adalah nombor saya terus mentioning-- ini adalah hampir $ 1 setiap jam. Dan anda boleh cantik dengan cepat melihat di mana ini goes-- jadi 24 jam kali 365. Jadi sekarang ia $ 8,000 setiap tahun untuk pelayan yang cukup baik. 

Jadi, pada satu ketika, ada titik lengkok balas ini di mana sekarang kita boleh menghabiskan $ 6000 mungkin dan membeli mesin seperti itu dan amortize kosnya lebih mungkin dua, tiga tahun, hayat mesin. Tetapi apa yang mungkin mendorong anda dalam sokongan atau ketidakadilan menyewa mesin dalam awan seperti ini? Sekali lagi, ini adalah setanding, mungkin, kepada salah satu daripada orang-orang pelayan Dell kita lihat digambarkan sedikit lalu. 

PENONTON: [didengar] 

DAVID MALAN: Ya, itu adalah satu peningkatan yang besar. Kerana kita tidak membeli mesin, kita tidak perlu Unbox ia. Kami tidak mempunyai untuk mengangkatnya. Kami tidak mempunyai palamkan ia ke dalam rak kami. Kami tidak perlu palamkan ia. Kami tidak perlu membayar bil elektrik. 

Kami tidak perlu untuk menghidupkan penyaman udara pada. Apabila cakera keras mati, kita tidak mempunyai untuk memandu di dalam tengah-tengah malam untuk menyelesaikannya. Kami tidak perlu menyediakan pemantauan. Kami tidak mempunyai supaya- senarai seterusnya dan semua perkara-perkara fizikal anda tidak perlu lakukan kerana "awan." 

Dan untuk menjadi jelas, pengkomputeran awan adalah istilah yang sangat berlebihan ini. Ia benar-benar hanya bermakna membayar seseorang lain untuk menjalankan pelayan untuk anda, atau menyewa ruang pada pelayan orang lain. Jadi istilah "pengkomputeran awan" yang baru. Idea ini adalah lama dekad. Jadi, itu cukup menarik. 

Dan apa lagi yang anda dapat? Nah, anda juga mendapat keupayaan untuk melakukan segala-galanya pada komputer riba di rumah. Dalam erti kata lain, semua gambar saya hanya drawing-- dan ia tidak begitu lama dahulu bahawa walaupun Saya merangkak di atas lantai server memasang kabel dalam untuk setiap garisan yang anda lihat, dan menaik taraf operasi sistem, dan menukar pemacu sekitar. Ada banyak physicality untuk semua itu. 

Tetapi apa yang indah tentang maya mesin, sebagai nama jenis mencadangkan, kini terdapat berasaskan web antara muka mana jika anda mahu bersamaan daripada garis dari pelayan ini kepada yang lain, hanya menaip, jenis, jenis, klik dan drag, Klik Hantar dan Voilà, anda mempunyai ia berwayar sehingga hampir. Kerana itu semua dilakukan dalam perisian. Dan sebab ia dilakukan dalam perisian sekali lagi kerana kita mempunyai begitu banyak RAM dan sebagainya banyak CPU yang ada pada kita hari ini, walaupun semua barangan yang mengambil masa, ia adalah lebih perlahan untuk menjalankan perkara-perkara dalam perisian daripada perkakasan, hanya kerana ia lebih perlahan menggunakan mekanikal peranti seperti pemacu keras daripada RAM, sesuatu semata-mata elektronik. Kita mempunyai begitu banyak sumber ada pada kita. Kita manusia adalah jenis invariantly perlahan. Dan sekarang mesin boleh melakukan banyak lagi per unit masa. Kami mempunyai kebolehan ini untuk melakukan perkara yang hampir. 

Aku akan berkata kursus Saya mengajar, sebagai contoh, di sini, kita mempunyai kira-kira mungkin sedozen atau maka jumlah mesin maya seperti yang berjalan pada suatu masa melakukan barangan akhir hadapan, melakukan kembali barangan akhir. Kami mempunyai semua simpanan kami. Jadi mana-mana video, termasuk perkara seperti ini yang kita menembak, kita akhirnya meletakkan ke dalam awan. Amazon mempunyai perkhidmatan dipanggil Amazon S3, perkhidmatan simpanan mudah mereka, yang adalah sama seperti ruang cakera dalam awan. Mereka mempunyai sesuatu Dipanggil Cloudfront, yang adalah perkhidmatan CDN, Kandungan Perkhidmatan rangkaian penghantaran, yang bermakna mereka mengambil semua fail anda dan untuk anda secara automagik menirunya seluruh dunia. 

Jadi mereka tidak melakukannya preemptively. Tetapi seseorang yang kali pertama di India meminta fail anda, mereka berpotensi akan cache ia dalam negara. Kali pertama di China, kali pertama di Brazil yang berlaku, mereka akan mula cache ia dalam negara. Dan anda tidak perlu melakukan apa-apa itu. Dan oleh itu adalah begitu amat menarik hari ini untuk menggerakkan ke dalam awan. Kerana anda mempunyai keupayaan ini secara literal untuk tidak mempunyai manusia melakukan hampir sebanyak kerja. Dan anda benar-benar tidak memerlukan seberapa banyak manusia melakukan pekerjaan ini anymore-- "Ops," atau peranan operasi, lagi. Anda benar-benar hanya perlu pemaju dan lebih sedikit jurutera yang hanya boleh melakukan perkara-perkara hampir. Malah, hanya untuk memberi anda rasa ini, biarlah saya pergi ke harga untuk satu produk lain di sini. Mari kita melihat sesuatu seperti CDN S3. Jadi ini pada asasnya adalah maya cakera keras dalam awan. Dan jika kita tatal ke bawah ke pricing-- jadi ia $ 0,007 bagi setiap gigabit. Dan that's-- bagaimana kita melakukan ini? Saya fikir itu sebulan. 

Jadi jika itu setiap month-- atau setiap hari? Dan, adakah ini setiap hari? Ini adalah sebulan, OK. Jadi, jika ini adalah satu month-- maaf, ia adalah $ 0.03 setiap bulan. Ada 12 bulan dalam tahun. Jadi berapa banyak data mungkin yang kamu simpan di awan? gigabyte A tidak besar, tetapi saya tidak tahu, seperti 1 terabyte, jadi seperti 1000 daripada mereka. Bukan itu sahaja yang banyak. Ia $ 368 berbanding menyimpan terabyte yang data dalam awan Amazon. Jadi apakah beberapa yang offs perdagangan, kemudian? Ia tidak boleh menjadi baik. Tiada apa-apa yang kita telah bercakap tentang hari ini adalah semacam tanpa tangkapan atau kos. Jadi apa yang buruk tentang berpindah segala-galanya ke dalam awan? PENONTON: Keselamatan. DAVID MALAN: OK, apa yang kamu maksudkan? PENONTON: [didengar] DAVID MALAN: Ya, betul. Dan adakah anda benar-benar mahu beberapa jurutera rawak di Amazon yang anda tidak akan bertemu dengan mempunyai akses fizikal kepada orang-orang komputer, dan jika mereka benar-benar mahu, akses maya? Dan walaupun dalam teori software-- baik, penyulitan boleh benar-benar melindungi anda daripada ini. Jadi, jika apa yang anda menyimpan pada pelayan anda adalah encrypted-- kurang membimbangkan. 

Tetapi sebaik sahaja manusia yang mempunyai fizikal akses kepada mesin, penyulitan diketepikan, semua pertaruhan adalah semacam off. Anda mungkin tahu dari tadi bahawa PC terutamanya, walaupun anda mempunyai perkara-perkara dipanggil "kata laluan BIOS," adalah apabila desktop anda boot up, anda akan digesa dengan kata laluan yang mempunyai apa-apa kaitan dengan Windows, anda boleh biasanya hanya membuka casis daripada mesin, mencari pin kecil sedikit, dan menggunakan sesuatu yang dinamakan pelompat dan hanya menyambung kedua-dua wayar selama kira-kira satu saat, sekali gus melengkapkan litar. Dan yang akan menghapuskan kata laluan. 

Oleh itu, apabila anda mempunyai akses fizikal kepada peranti, anda boleh melakukan perkara-perkara seperti itu. Anda boleh mengeluarkan cakera keras. Anda boleh mendapat akses kepada cara itu. Dan hal ini sebabnya, dalam kes Dropbox, misalnya, ia sedikit membimbangkan bahawa bukan sahaja mereka mempunyai data, walaupun ia disulitkan, mereka juga mempunyai kunci. kebimbangan yang lain? 

PENONTON: [didengar] DAVID MALAN: Ya, ia sangat true-- yang Googles, Epal, yang Microsofts di dunia. Dan sebenarnya, berapa lama anda mempunyai iPhone anda untuk? Ya, memberi atau mengambil. PENONTON: [didengar] DAVID MALAN: Saya minta maaf? Anda berada di kalangan mereka yang mempunyai iPhone, bukan? PENONTON: Ya. DAVID MALAN: Berapa lama telah anda mempunyai iPhone anda? PENONTON: [didengar] DAVID MALAN: OK, jadi Apple secara literal tahu di mana anda telah setiap jam hari sejak lima tahun lepas. 

PENONTON: [didengar] DAVID MALAN: Yang ciri yang indah. PENONTON: [didengar] DAVID MALAN: Ya, tetapi perdagangan luar pasti. PENONTON: [didengar] 

DAVID MALAN: Ya, ia sangat mudah untuk. PENONTON: [didengar] DAVID MALAN: kelemahan lain? PENONTON: [didengar] DAVID MALAN: Absolutely-- teknologi, ekonomi, ia agak menarik untuk semacam mendapat ini skala ekonomi dan bergerak ke dalam segala-galanya awan yang dipanggil. Tetapi anda mungkin mahu pergi dengan beberapa yang terbesar ikan, Amazon, yang Googles, yang Microsofts-- Rackspace agak big-- dan beberapa orang lain, dan tidak semestinya terbang oleh orang malam yang caranya sangat mudah untuk dilakukan ini jenis teknik pada masa kini. Dan itulah yang engkau dapat membayar $ 5,99 setiap bulan untuk. Tetapi anda akan pasti mendapatkan apa yang anda bayar. 

Apabila kamu berkata [didengar], itu apabila perkara seperti lima nines datang, mana walaupun teknologi kita tidak boleh benar-benar menjamin 99.999, kita hanya akan membina dalam beberapa jenis penalti kepada kontrak supaya jika ia berlaku, sekurang-kurangnya ada beberapa kos kepada kami, vendor. Dan itulah apa yang anda lakukan biasanya akan mendapatkan mereka untuk bersetuju dengan. 

PENONTON: [didengar] 

DAVID MALAN: Dan satu jenis berkat adalah bahawa walaupun kita turun ke bawah, untuk contoh, atau tertentu syarikat, realitinya adalah Amazon, misalnya, mempunyai banyak pelanggan darn, pelanggan yang terkenal, beroperasi di luar pusat-pusat data tertentu bahawa apabila sesuatu yang benar-benar berlaku, seperti bencana alam dan cuaca dan sebagainya, jika ada apa-apa jenis lapisan perak, ia adalah bahawa anda berada dalam syarikat yang sangat baik. Laman web anda mungkin di luar talian. Tetapi begitu juga separuh serupa dengan internet yang popular. Oleh karena itu, boleh dikatakan sedikit lebih menarik kepada pelanggan anda jika ia lebih daripada internet yang perkara daripada satu perkara yang acme.com. Tetapi itu sedikit menipu. 

Jadi dari segi perkara-perkara lain untuk melihat, hanya supaya kita tidak menolak orang lain, jika anda pergi ke Microsoft Azure, mereka mempunyai kedua-dua Linux dan Windows barangan yang setanding dengan Amazon. Jika anda pergi ke Google Compute Engine, mereka mempunyai sesuatu yang serupa juga. Dan hanya untuk mengisi ini penawaran awan, Saya akan menyebutkan satu perkara lain. Ini laman web popular itulah wakil daripada kelas teknologi. Orang-orang kita hanya bercakap kira-kira, Amazon, akan menjadi IAAS, Infrastruktur sebagai Perkhidmatan, di mana anda jenis perkakasan fizikal sebagai perkhidmatan. Ada SAAS. Sebenarnya, saya mencatat ini ke bawah. 

Infrastruktur IAAS-- Perkhidmatan A, SAAS, dan PAAS, yang akronim amat mengelirukan yang yang menggambarkan tiga jenis perkara. Dan akronim diri mereka tidak benar-benar perkara. Ini semua barangan awan kita baru sahaja telah bercakap tentang, yang barangan tahap rendah, virtualisasi perkakasan dan penyimpanan dalam awan yang dipanggil, sama ada Amazon, Microsoft, Google, atau lain-lain. 

Perisian sebagai service-- yang kita semua jenis menggunakan ini. Jika anda menggunakan Google Apps untuk Gmail atau kalendar, mana-mana berasaskan web aplikasi yang 10 tahun yang lalu kita akan mempunyai ikon double klik pada desktop kami, perisian sebagai perkhidmatan sekarang adalah benar-benar aplikasi web. Dan platform sebagai perkhidmatan jenis bergantung. 

Dan satu contoh saya akan memberikan anda di sini dalam konteks computing-- awan ada satu syarikat yang agak popular hari ini, Heroku. Dan mereka adalah perkhidmatan, platform, jika anda akan, yang berjalan di atas infrastruktur Amazon. Dan mereka hanya membuat ia lebih mudah untuk pemaju dan jurutera untuk mendapatkan aplikasi berasaskan web dalam talian. 

Ia adalah sakit, pada mulanya, untuk menggunakan Amazon Web Services dan lain-lain. Kerana anda sebenarnya mempunyai untuk mengetahui dan memahami mengenai pangkalan data dan pelayan web dan balancers beban dan semua barangan Saya hanya bercakap tentang. Kerana semua Amazon telah dilakukan tidak tersembunyi cabaran reka bentuk. Mereka baru sahaja maya mereka dan memindahkan mereka ke dalam pelayar, ke dalam perisian dan bukannya perkakasan. 

Tetapi syarikat-syarikat seperti Heroku dan lain-lain pembekal PAAS, Platform Sebagai Perkhidmatan, mereka menggunakan mereka asas-asas Barebone bahawa kita hanya bercakap tentang, dan mereka membina lebih mudah untuk menggunakan perisian di atasnya supaya jika anda ingin mendapatkan web berasaskan permohonan dalam talian hari ini, anda pasti perlu tahu bagaimana untuk program. Anda perlu tahu Java atau Python atau PHP atau Ruby atau sekumpulan bahasa lain. 

Tetapi anda juga memerlukan tempat untuk meletakkan ia. Dan kita bercakap lebih awal mengenai mendapat sebuah syarikat web hosting. Itulah jenis seperti pertengahan 2000-an pendekatan untuk mendapat sesuatu dalam talian. Kini anda sebaliknya mungkin membayar seseorang seperti Heroku beberapa dolar sebulan. Dan pada dasarnya, sebaik sahaja anda telah melakukan beberapa konfigurasi awal, untuk mengemas kini laman web anda, anda hanya taip arahan di tingkap. Dan apa sahaja kod yang anda tulis di sini pada komputer riba anda dengan segera mendapat diagihkan kepada mana-mana nombor pelayan dalam awan. 

Dan Heroku menjaga semua kerumitan. Mereka memikirkan semua pangkalan data barangan, semua pengimbangan beban, semua sakit kepala yang kami telah hanya ditulis di papan, dan menyembunyikan semua itu untuk anda. Dan sebagai balasan, anda hanya membayar mereka sedikit lebih. Jadi, anda mempunyai infrastruktur ini sebagai perkhidmatan, platform sebagai perkhidmatan, dan kemudian perisian sebagai perkhidmatan. Ia adalah, sekali lagi, ini abstraksi atau lapisan. 

Sebarang pertanyaan mengenai awan atau membina infrastruktur sendiri? Baiklah, itu adalah banyak. Apa kata kita pergi ke hadapan dan berehat 15 minit kami di sini. Kami akan kembali dengan beberapa konsep baru dan sedikit amali peluang sebelum malam berakhir. 