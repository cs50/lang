DAVID Malan: Gerai, pasveikinti atgal. Prieš pasinerti į debesų kompiuterijos, Aš maniau, kad aš sustabdyti akimirką jei yra kokių nors neišspręstų klausimų ar temos, kad atėjo iki pietų metu kad dabar gali būti įdomūs. Auditorija: [NESIGIRDI] 

DAVID Malan: Gerai. Ai, gerai. Auditorija: [NESIGIRDI] 

DAVID Malan: Ne, žinoma. Gerai, gerai, tikiuosi, visus savo problemų kyla per ateinančius keletą valandų ir rytoj ypač. Bet leiskite pažvelgti, tada, bent kur paskutinis diskusija apie steigti svetainė veda apskritai kai jis ateina į Debesis kompiuterija, sukurti serverio architektūra, Sprendimų rūšys kad inžinieriai ir kūrėjai ir valdytojai reikia padaryti, kai kalbama apie daryti daugiau nei tiesiog Užsiregistravę 10 $ per mėnesį interneto priimančiosios kai jūs iš tikrųjų norite sukurti iš savo infrastruktūrą. Ir mes bandysime susieti šį nugarą, pavyzdžiui, į Dropbox ir kitų mėgti juos. 

Taigi pradėkime svarstyti kokios problemos iškyla verslo gauna geras ir geri problemų kyla. Taigi, labai Paprasčiausiu atveju turėti kai įmonė, kuri turi serverį, jums gali tekti, tarkim, serveris, kad mes tiesiog atkreipti, kad atrodo taip. Ir šių dienų, dauguma servers-- ir tegul iš tikrųjų įdėti nuotrauką į tai tiesiog taip kad tai šiek tiek mažiau miglotas. 

Taigi "Dell stovas server-- atgal per dieną, ten buvo mainframe kompiuteriai kad paėmė visą kambariai. Šių dienų, jei buvo gauti serverį, jis gali atrodyti šiek tiek kažką panašaus į tai. Serveriai matuojami kas yra vadinami stovo vienetams arba GĮ. Ir viena GĮ yra 1,5 colių, kuris yra pramonės standartas. Taigi, tai atrodo kaip du RU serveryje. Taigi, tai 3 colių aukščio. Ir jie paprastai esate 19 colių pločio, o tai reiškia, visą šį medžiagos rūšies nėra standartizuota. 

Taigi, jei jūs žiūrite į duomenų center-- ne tik viename serveryje, bet tegul pažvelgti "Google" išvaizdą duomenų centrų ir pamatyti, jei mes matyti gražią nuotrauką "Google" vaizdai. Tai daug geriau dega negu jūs būtų paprastai rasti, ir kiek seksualesnis ieško, kaip rezultatas. bet tai, kas atrodo pora šimtą serveriai visi apie tą pačią dydžio, Tiesą sakant, į stovo po stovo po stovo po stovo duomenų centre. 

Kažkas panašaus this-- tai gali būti "Google", nes aš googled "Google". Bet jis gali būti atstovas daugiau paprastai duomenų centras, kuriame daugelis įmonės paprastai bendrai yra. Ir bendrai įkurti paprastai reiškia kad jūs einate į panašaus Equinix vietoje ar kiti pardavėjai, kurie didelės sandėliai, kurie daug galios, daug aušinti, tikiuosi daug saugumo, ir individualios narvai apgaubiantis lentynas iš Serveriai ir jūs arba išsinuomoti kabyklos ar jums atnešti į lentynas. 

Ir atskirų bendrovių, pradedantiesiems ypač turės šiek tiek biometrinių duomenų pobūdžio patekti į jų rėmas, arba rakto, arba rakto kortelę. Jūs atverti duris. Ir viduje yra tik kvadratinių filmuotą medžiagą pėdsakas kad jūs mokate už, viduje kurią galite įdėti viską, ką nori. 

Ir jūs paprastai mokėti už maitinimą. Ir jūs mokate už pėdsaką. Ir tada jūs mokate Būk už serverius kad esate pareikšti į tą erdvę. Ir ką jūs tada turite galimybė padaryti, tai mokėti kas nors Jūsų interneto paslaugų ryšį. Galite mokėti jokių skaičių pardavėjų, visi iš kurių paprastai ateina į tą duomenų centre. 

Tačiau realus įdomus klausimas, kas iš tikrųjų vyksta tose lentynos? Jie gali labai gerai atrodyti, ką mes tik pamačiau. Bet jie atlieka skirtingas funkcijas ir gali tekti daryti skirtingus dalykus. Ir tegul iš tikrųjų motyvuoti šią diskusiją su klausimu, kokia problema pradeda kilti, jei esate sėkmingas? 

Taigi, jūs turite svetainę kad jūs pastatytas. O gal ji parduoda raštai arba kažkas panašaus. Ir jūs buvote labai gerai sekasi su pardavimo raštai internete. Ir jūs pradėsite patirti kai simptomai, jūsų svetainėje. Kas gali būti kai kurių techniniai požymiai kad vartotojai atsiskaito verslo auga ir klesti ir jūsų svetainė yra naudos iš to? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, būtent. Taigi jums gali turėti sulėtėjimas savo svetainėje. Ir kodėl gali, kad taip atsitiktų? Na, jei mes manome, už Diskutuojant dabar, kad jūs esate vienas Šių komercinių interneto pavaduojančius kad mes kalbėjome apie prieš pietus, kad jūs mokate šiek tiek dolerių skaičių į per mėnesį, ir jau mokama metinės išlaidos domeno Pavadinimas, kad interneto kompiuteris tikriausiai overselling jų išteklius tam tikru mastu. Taigi jums gali turėti vardą ir slaptažodis savo serveryje. Bet taip galėtų keletas kitų, arba kelios keliolika kitą, o gal net kelis šimtai kitų, vartotojai. 

Ir tinklalapiai gyventi fiziškai tame pačiame serveryje. Kodėl tai įmanoma? Na šių dienų, serveriai kaip tai paprastai turėti kelis kietuosius diskus, gal daugiau kaip šeši ar daugiau standžiųjų diskų, iš kurių kiekvienas gali būti tiek, kiek kaip 4 terabaitų šių dienų. Taigi jums gali tekti 24 terabaitų vietos tik viena maža serverio panašaus į tai. 

Ir net jei jūs pavogti kai tos erdvės atleidimo iš darbo, kuriant atsarginę kopiją, jis vis dar gana daug erdvės. Ir, žinoma, tipiškas svetainė nereikia, kad daug vietos. Tiesiog registruojant vartotojus ir saugoti žurnalus užsakymus nesiima visi, kad daug vietos. Taigi galite suskaidyti ją gana šiek tiek ir suteikti kiekvienam vartotojui tik šiek tiek gabalas, kad. 

Tuo tarpu kompiuteriui kaip tai šių dienų paprastai turi kelis CPUs-- ne tik vienas, gal du, o gal keturi, o gal ir 16, ar net daugiau. Ir kiekvienas iš šių procesorių turi kažką vadinama pagrindinis, kuris yra tipo kaip smegenų viduje smegenis. Taigi iš tikrųjų dauguma ir visi čia su šiuolaikinių nešiojamųjų kompiuterių tikriausiai dual core arba keturių branduolių CPU-- ir tikriausiai tik vienas procesoriaus viduje nešiojamas šių dienų. Bet staliniai kompiuteriai ir krumpliniai kompiuteriai, kaip tai gali turėti gana daug daugiau CPU, ir, savo ruožtu branduolių. 

Ir tiesą sakant, net mūsų "Mac" ir PC nuo Šiandien jums tikrai nereikia dvejopų branduolių ar quad šerdims pasitikrinti savo elektroninį paštą. Jei yra bet kokia kliūtimi, kai jis ateina į naudojant kompiuterį, Jums žmogaus yra turbūt lėčiausiai dalykas, apie šio kompiuterio. Ir jūs nesiruošia galėtų pasitikrinti savo elektroninį paštą bet greičiau, jei jus turi keturis kartus daugiau procesorių arba gurgučių. 

Bet tas pats yra natūra iš pasakytina apie serverį. Vienas svetainė gali ne nebūtinai reikia daugiau nei vieno Procesoriaus ar viena pagrindinė, vienas maža smegenų viduje daro visi mąstymo ir perdirbimo. Taigi gamintojai turi taip pat pradėjo dalyti iki šių išteklių taip, kad galbūt jūsų svetainė gauna vieną branduolys, jūsų svetainė gauna vieną branduolį, o gal mes dalintis vieną tokį branduolį. Mes taip pat dalintis diske. Ir mes taip pat dalintis RAM, arba Random Access Memory iš anksčiau, iš kurių ten taip pat baigtinis dydis. 

Ir tai svarbiausia. Nesvarbu, kiek brangiau kompiuteris buvo, dar yra baigtinis išteklių kiekis jame. Ir taip vis daugiau ir daugiau jus pabandykite vartoti šiuos išteklius, lėčiau dalykai gali tapti. Bet kodėl? Kodėl viskas sulėtinti kaip simptomas serveryje yra perkrautas? Kas vyksta? 

Auditorija: [NESIGIRDI] DAVID Malan: Taip, būtent. Aš pasiūliau anksčiau, kad RAM yra atminties tipas. Tai nepastovi, kuriuo tai kur programos ir duomenys yra saugomi, kai jie naudojami. Ir taip todėl ten tik baigtinis skaičius dalykų, kuriuos galite padaryti, matyt, ne vieną kartą. Ir tai taip pat greičiau, kuris yra geras dalykas. Bet tai taip pat brangesnis, kuris yra blogas dalykas. Ir tai taip pat todėl, esančių mažiau kiekiai nei diske, kietojo disko erdvė, kuri linkusi pigiau. 

Kitaip tariant, jūs gali turėti 4 terabaitų diske į savo kompiuterį. Tačiau jums gali tekti 4 GB arba 64 GB, tam, dydžio, iš koeficiento 1000 mažiau, RAM į savo kompiuterį. Taigi, ką kompiuteris daryti? Na, tarkime, kad jums turiu 64 GB RAM A kaip tai serveris, kuris būtų gana paplitęs, jei ne mažas šių dienų. Bet tarkime, jūs turite tiek daug Vartotojų daro tiek daug dalykų, kad jus rūšies tarsi reikia 65 gigabaitų atminties tvarkyti visa tai vienalaikis naudojimas? 

Na, galima tiesiog pasakyti, Atsiprašome, kai vartotojų skaičius tiesiog negali jungtis prie svetainės. Ir tai yra priemonė kraštutinė, tikrai. Arba jūs, kaip veiklos sistema, kaip ir "Windows" arba "Mac" OS arba "Linux" arba "Solaris ar skaičius kitų OSE tame serveryje, gali tiesiog nuspręsti, žinote, ką? Turiu tik 64 gigabaitai atminties. I rūšies reikia 65. Taigi jūs žinote, ką? Aš ruošiuosi imtis 1 gigabaito Verta iš RAM duomenų Tai buvo jau neseniai atvertas ir tiesiog perkelti jį į diską laikinai, tiesiog nukopijuokite jį iš greitai atminties lėčiau atminties taip, kad aš galiu tada dirbti, kad 65. GIGABYTE poreikis atminties, ką nors skaičiavimus į jį. Tada, kai Atlikau daro, kad Aš tiesiog perkelti, kad į diską, perkelti tą kitą RAM Aš laikinai įdėti diske atgal į faktinį įrangos kad aš rūšies multitasking. 

Taigi, aš tarsi išleisti dalykus laikinai šiame lėčiau erdvę todėl aš sukurti iliuziją tvarkyti visus. Bet ten sulėtėjimas. Kodėl? Na, viduje jie sunkiai diskai šių dienų yra kas? Atvirkščiai, tai, ką daro sunku vairuoti skiriasi nuo RAM kaip geriausiai žinote dabar? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Gerai, tiesa. Auditorija: [NESIGIRDI] 

DAVID Malan: Taigi labai teisinga. Ir tai yra šalutinis poveikis arba funkcija į tai, kad RAM iš tikrųjų greičiau. Ir todėl jūs norite naudoti jį dabartiniam naudojimui. Ir diskas yra lėtesnis. Bet tai nuolatinis arba nonvolatile. Taigi jūs jį naudoti ilgalaikiam saugojimui. Tačiau kalbant apie įgyvendinimas, jei aš ieškoti kas vadinama DIMM, Dual Inline Memory Modulis, tai ką RAM gabalas gali paprastai atrodyti. 

Taigi viduje mūsų Mac-- tai klaida. Viduje mūsų Mac ir PC, mūsų darbastalio kompiuteriai turės lazdos atminties, kaip galėtumėte jiems skambinti, arba DIMM, arba SIMM atgal į dieną, atminties kad atrodyti taip. Mūsų nešiojamieji tikriausiai dalykus, kurie yra trečioji dydis arba pusė dydis. Jie šiek tiek mažesni, bet tas pats idea-- mažai vienetų žalia silicio vaflių arba plastiko, kuris turi mažą juodą lustai ant jų su daugybe laidų sujungti viską. Galbūt visa krūva tai kompiuterio viduje. Bet Takeaway čia tai visiškai elektroninis. Yra tik elektronai teka į šį įrenginį. Priešingai, jeigu pažvelgtume iš kietojo disko viduje ir atsigriebti paveikslėlį čia, jūs verčiau pamatyti kažką panašaus į tai, kuris tikrai turi elektrą išgyvena galiausiai. Bet kas taip pat šokinėja iš ne jums apie tai, ką? Auditorija: [NESIGIRDI] DAVID Malan: Taip, ten matyt judančių dalių. Tai lyg sename įraše grotuvas ar patefonas grotuvas. Ir tai gana daug yra. Tai šiek tiek mėgėjas nei that-- kadangi fonografo grotuvas naudojamas grioveliuose Apmaudu, kad tai iš tiesų naudoja maža maža magnetines daleles kad mes negalime gana pamatyti. Bet jei šiek tiek magnetinių dalelių atrodo taip, tai laikoma 1 d. Ir jei ji atrodo taip, šiaurės-pietų, o ne Šiaurės-Pietų, tai gali būti 0. Ir mes pamatysime rytoj, kaip mes galime sukurti nuo daugiau įdomių dalykų. 

Bet nieko, kad yra gavo fiziškai judėti yra tikrai ketina eiti lėčiau nei šviesos greičiu, kuri teoriškai yra kas elektronas gali tekėti ne, nors realiai ne visai. Taigi mechaninis devices-- daug lėčiau. Bet jie pigiau. Ir jūs gali tilpti tiek daug daugiau duomenų viduje iš jų. Todėl tai, kad ten egzistuoja pasaulyje kažką vadinama virtualios atminties, naudojant kietąjį diską panašaus į tai tarsi tai būtų RAM skaidri, kad vartotojas, tiesiog judinant duomenis iš RAM į kietąjį diską, tada perkelti jį atgal, kai jums reikia jis vėl sukuria sulėtėjimo. Kadangi jūs tiesiog turite nukopijuokite jį iš vienos vietos į kitą. Ir ką jūs kopijuojate jį ir iš tikrųjų yra lėtesnis nei RAM ten, kur norite, kad ji būtų. 

Alternatyvus sprendimas here-- jei jums nepatinka, kad sulėtinti, ir virtualiosios atminties yra Rūšiuoti būti overtaxed, kas kitas šios problemos sprendimas? 

Auditorija: [NESIGIRDI] DAVID Malan: Na, padidinti virtualiosios atminties būtų mums tai padaryti dar didesnis mastu. Galėtume dirbti 66 gigabaitų verta atminties poreikius, arba 67 gigabaitų. Bet tarkime, man nepatinka tai sulėtinti, iš tiesų Noriu išjungti virtualios atminties, jei tai dar įmanoma, ką dar galėčiau mesti į Tai problema, ją išspręsti, kur aš noriu dirbti daugiau vartotojų ir daugiau atminties reikalavimai nei aš fiziškai turi šiuo metu? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Deja ne. Taigi CPU ir šerdys jie Åre baigtinis išteklius. Ir nėra tame kontekste analogas. Geras klausimas, nors. Taigi tiesiog būti aišku, taip pat, jei viduje šis kompiuteris yra tarkim, RAM lazda, kuri atrodo kaip this-- ir taip mes vadiname RAM. Ir štai čia yra kietasis diskas. Ir aš tiesiog atkreipti tai pavaizduotomis piktogramo- kaip mažai ratą. Yra 0 "ir 1 s abiem these-- duomenys, mes apibendrinti kaip. 

Ir iš esmės, jei vartotojas yra veikia paraišką, kaip, tarkim, svetainę, kuri reikalauja, kad ši kiek RAM vienam vartotojui, ką aš pasiūlyti, būdu šis dalykas vadinama virtualios atminties, yra tiesiog laikinai perkelti kad per čia, kad dabar aš gali judėti kažkieno atminties reikalavimai ten. Ir tada, kai tai daroma, Galiu nukopijuoti tai atgal per ir tai vyksta čia, taip juda ką aš norėjau ten kažkur kitur apskritai. 

Taigi ten tik daug switcheroo, yra Takeaway čia. Taigi, jei jums nepatinka tai ir jums nereikia norite įdėti ką nors į kietąjį diską, kas tarsi akivaizdus verslo asmuo "sprendimas problemos, arba inžinieriaus sprendimas, šiuo klausimu, taip pat? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, aš tai tiesiog mesti pinigus į šią problemą. Ir iš tikrųjų, tai yra puikus segue į kai aukštesnio lygio diskusijos cloud computing. Kadangi jo partija yra motyvuotas finansinių sprendimų, net nebūtinai technologinė. Jei 64 koncertai RAM yra per mažai, gerai, kodėl gi ne gauti 128 GB RAM? Kodėl gi ne gauti 256 GB RAM? Na, kodėl gi ne? 

Auditorija: [NESIGIRDI] DAVID Malan: Na, tai kainuoja daugiau pinigų, tikrai. O jei jau turite atsarginį kietajame diske, efektyviai, arba analogiškai, kietajame diske yra toks daug pigiau galite taip pat naudoti ją. Taigi dar kartą, ten tai kompromisą, kad matėme net anksčiau šį rytą, ten, kur tikrai nėra nebūtinai yra teisingas atsakymas, ten tik geriau ar blogiau atsakymas remiantis tuo, kas jums iš tikrųjų rūpi. 

Taigi ten taip pat technologines realijas. Aš negaliu pirkti kompiuterį, mano žiniomis, su trilijoną gigabaitų RAM dabar. Jis tiesiog fiziškai neegzistuoja. Taigi yra tam viršutinė riba. Bet jei jūs kada nors net pirko už vartotojų Mac arba PC, taip pat paprastai ten ši kreivė funkcijų ten, kur gali būti gera, geriau, ir geriausiai kompiuteris. 

Ir ribinio grįžta Jūsų dolerio pirkimo geriausias kompiuterio palyginti geriau kompiuteris gali būti toli gražu ne toks didelis, kaip išleisti šiek tiek daugiau pinigų ir gauti geresnį kompiuterį per gera kompiuterį. Kitaip tariant, jūs mokate premija gauti linijos viršuje. 

Ir ką mes pamatyti diskusija cloud computing yra tai, kad tai, kas labai dažnai jie dienų, o tai, ką kompanijos kaip "Google" pradžioje išpopuliarino nebuvo mokėti už ir statybos tikrai išgalvotas, brangus Souped iki kompiuterius su daug ir daug visko, o pirkti ar statyti gana kuklus kompiuterius, bet daug jų, ir naudojant kažką, kad paprastai vadinamas horizontalus mastelio vietoj vertikalios pleiskanojimas. 

Taigi vertikali mastelio reikštų gauti daugiau RAM daugiau disko, daugiau visko, ir tarsi investuoti vertikaliai jūsų kompiuterio todėl jūs tiesiog gauti maksimalią geriausias iš geriausių iš geriausių, bet jūs mokate už jį. Horizontali pleiskanojimas yra tarsi gauti apačios pakopos dalykų, geras pavyzdys, ar net dar blogiau modelis, bet gauti daug iš jų. Bet kaip tik jums daug , išbandyti pavyzdžiui, šiuo atveju, interneto serverių, jei tai viename serveryje arba Vienos Web Host yra nepakankama, tada tiesiog Intuityviai, išspręsti šią problemą apkrovos arba perkrovos jūsų serveriuose yra arba gauti didesnį serverį arba: 'Ką aš pasiūlyti čia vietoj mastelio vertikaliai taip sakant, būtų, žinote, ką? Tiesiog gauti antrą vieną iš šių. O gal net gauti trečdaliu. Bet dabar mes sukūrėme inžinerinė problema pagal pobūdį šio verslo arba finansinis sprendimas. Kas inžinerijos problema dabar? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, kaip tai padaryti prijungsite juos and-- gaila? 

Auditorija: [NESIGIRDI] DAVID Malan: Teisė, nes aš vis dar have-- jei aš vėl mane į šią nuotrauką, jei tai yra mano nešiojamas kažkur internete, kuris yra dabar tarp man ir kompanija mes kalbame apie, dabar turiu išsiaiškinti, į kurį serveris man siųsti šį konkretų vartotoją? Ir jei ten kiti vartotojai, kaip ir tai, ir tada tai vienas per čia, o gal tai yra vartotojas A tai yra vartotojo B, tai yra vartotojo C, ir tai yra serveris 1, 2, ir 3-- dabar intuityvus atsakymas gali čia būti tiesiog, mes atsiųsime vartotojui 1 ir B iki 2 ir C iki 3. Ir mes galime tvarkyti 3 kartus daugiau vartotojų. 

Bet tai supaprastinimas. Kaip jūs nusprendžiate, kam siųsti, kur? Taigi pabandykime samprotauti per tai. Taigi tarkime, kad kompiuterių A, B, ir C yra klientų, ir 3 serveriai 1, 2, ir yra horizontaliai mastelis serverius. Taigi jie tarsi identiški. Jie visi veikia tą pačią programinę įrangą. Ir visi jie gali daryti tą patį. Bet priežastis, kodėl mes turime trys iš jų yra toks kad mes galime dirbti tris kartus daugiau žmonių vienu metu. 

Taigi mes žinome iš mūsų diskusija prieš pietus kad ten aparatūros tarp nešiojamieji kompiuteriai ir serveriai. Bet mes tiesiog tarsi apibendrina kad dabar kaip internetas ar debesis. Bet mes žinome, kad mano namuose, ten tikriausiai namų maršrutizatorius. Prie serverių, ten tikriausiai maršrutizatorius, DNS serveris, DHCP. Ten gali būti bet koks mes norime šioje istorijoje. 

Taigi, kaip mes pradėti nuspręsti, kai vartotojas eina į something.com, kuris serveris maršrutu vartotojui? Kaip mes galime pradėti pasakoti šią istoriją? Auditorija: Apkrovos balansavimas? DAVID Malan: Apkrovos balansavimas. Ką tu tuo nori pasakyti? 

Auditorija: Grįžimas kur labiausiai naudojimas yra ir kuris iš jų turi tą dauguma turimus išteklius. DAVID Malan: Gerai, kad tegul mane pristatyti naują tipo aparatūros kad mes dar diskutuojama, kuris yra būtent tai, apkrovos balansavimo. Tai taip pat gali būti tiesiog serveris. Tai gali atrodyti tiksliai taip, kaip vienas matėme prieš momentas. Apkrovos balansavimo tikrai yra tik programinė įranga, kad paleisti ant Aparatinė įranga. 

Arba galite mokėti pardavėjas, kaip "Citrix ar kiti," Cisco ar kt. Galite mokėti už savo aparatūros, kuris yra aparatūros apkrovos balansavimo. Bet tai tik reiškia, kad jie iš anksto įdiegta apkrovos balansavimo programinę įrangą savo aparatūros ir jį pardavė jums visiems kartu. Taigi mes tiesiog piešti kaip stačiakampis mūsų tikslais. 

Kaip dabar man įgyvendinti apkrovos balansavimo? Kitaip tariant, kai šis naudotojas nori mano svetainę, kad jų prašymas kažkaip arba kita, tikriausiai būdu tie, maršrutizatoriai mes kalbėjome apie anksčiau, ketina galiausiai pasiekti tai apkrovos balansavimo, kuris vėliau reikia, kad maršruto parinkimo-kaip sprendimą. Bet tai maršruto už rūšiuoti aukštesnės tikslu dabar. Tai ne tik apie tai, kaip iš taško A į tašką B. Tai apie nuspręsti, kuris Taškas B yra geriausias tarp, išbandyti 1, 2, arba 3 ir šiuo atveju. 

Taigi, kaip man nuspręsti, ar eiti į 1, 2, 3? Kas gali tai juoda dėžutė, taip kalbėti, daryti iš vidaus? Tai taip pat yra dar vienas pavyzdys kompiuterių mokslas abstrakcijos. Aš tiesiog atkreipė apkrovos balansavimo kaip "black box juodu rašalu, viduje iš kurių yra kai įdomus logika, arba magija net iš kurių turi ateiti decision-- 1, 2, arba 3. Ir indėlis yra tik A. 

Auditorija: [NESIGIRDI] DAVID Malan: Aš atsiprašau? Auditorija: [NESIGIRDI] DAVID Malan: Gerai, kaip būtų mes kategorizuoti sandorių rūšis čia? 

Auditorija: Aprašymo tinklalapį prieš užklausų duomenų bazę. DAVID Malan: Gerai, tai gerai. Tai gal šiam nariui nori, kad galėtumėte peržiūrėti tinklalapį. O gal tai net statinis turinys, kažkas, kad keičiasi retai, jei kada nors. Ir tai atrodo gana paprasta operacija. Tai gal mes tiesiog savavališkai, bet protingai, tarkim, serveris 1, jo gyvenimo tikslas yra tiesiog tarnauja statinį turinį, failų, kurie retai, jei kada nors, keitimas. Gal tai ant puslapio vaizdus. Gal tai tekstas puslapyje arba kitas toks tarsi neįdomu dalykų, nieko sandorio, nieko dinamiškas. 

Priešingai, jei naudotojas A tikrinti iš jo ar jos pirkinių krepšelį, kad reikalauja duomenų bazę, kažkur saugoti ir prisiminti tą sandorį, gerai gal kad prašymas reikia eiti į serverį 2. Taigi, kad gerai. Taigi, mes galime įkelti balansas remiantis apie prašymų tipo. Kaip dar galime tai padaryti? Kas other-- 

AUDITORIJA: Remiantis serverio panaudojimas ir talpa. DAVID Malan: Teisė, Gerai. Taigi jūs paminėti, kad anksčiau, Kareem. Taigi ką daryti, jei mes teikiame šiek tiek prisidėti ant [NESIGIRDI] tarp serverių 1, 2, ir nuo 3 iki šio apkrovos balansavimo taip, kad jie tiesiog nuolat informuoti apkrova ivedimas kokia jų būsena? Kaip, ei, apkrovos balansavimo, Aš 50% panaudojimo. Kitaip tariant, Turiu puse tiek vartotojai kaip aš iš tikrųjų gali dirbti dabar. Ei, apkrovos balansavimo, aš 100% panaudojimo. Ei, apkrovos balansavimo, 0% utilizavimas. Apkrovos balansavimo, jei tai sukurta tokiu būdu, kad gali imtis šių komentarus kaip pirkimo, tai gali tada nuspręsti, ooh, numeris 2 yra 100%. Leiskite siųsti neturi ateities prašymus jam kitiems nei naudotojai jau prijungtas. Šis vaikinas yra 0%. Leiskite siųsti daug srauto į jį. Šis vaikinas pasakė, kad jis 50%. Leiskite siųsti tam tikrą srautą į jį. 

Taigi, kad būtų sudedamoji dalis, kuri mes galime imtis apkrovą atsižvelgiama. Ir jis ketina pakeisti laikui bėgant. Taigi sprendimai pasikeis. Taigi, kad tikrai geras metodas, vienas, kad dažnai naudojamas. Ką dar būtų galima padaryti? Ir tegul iš tikrųjų tik apibendrinti čia. Taigi sprendimai čia galėtų būti pagal tipą eismo, aš jį vadiname. Jis gali būti priklausomai nuo apkrovos. Leiskite pamatyti, jei mes negalime sugalvoti keletas kitų. 

Auditorija: [NESIGIRDI] DAVID Malan: Location. Taigi, kad gera. Taigi location-- kaip gali jums sverto šią informaciją? 

Auditorija: [NESIGIRDI] 

DAVID Malan: O, tai gerai. Ir apie tai, kiek milisekundžių ar ji sumažės remiantis tuo, kas mes matėme tai rytą, galėtumėte pasakyti? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Na, remiantis ant pėdsakų maršrutais matėme anksčiau, o tai yra tik grubus priemonė kažką, bent kiek laiko užtrunka duomenų gauti iš taško A į B jaučiasi nieko vietos buvo, ką, kaip 74 milisekundžių, suteikti arba užtrukti? Ir tada nieko 100 plius, 200 plius tikriausiai buvo užsienyje. Ir taip, remiantis, kad vienas, atrodo pagrįsta manyti, kad už JAV vartotojui prieiti prie Europos serverį gali užtrukti du arba tris kartus tol, kol, net milisekundžių, nei jis gali imtis, jei tai serveris čia buvo įsikūrusi geografiškai, arba atvirkščiai. Taigi, kai aš pasiūliau anksčiau, kad ypač Kai jūs kirsti tą 200 milisekundės riba, suteikti arba užtrukti, žmonės neturi pradėti pastebėti. Ir Trace Route yra tik darant prielaidą, žalias, neįdomu duomenis. Jei turite svetainę, jūs turite gauti vartotojo parsisiuntimo nuotraukas ar filmą failai, daug teksto, vėlesni prašymai. Mes matėme, kai lankėmės, kas buvo tai, "Facebook" ar "Amazon" anksčiau, ten visai daug stuff kad reikia parsisiųsti. Taigi, kad ketina pridėti. Taigi kelių sekundžių galėtų nėra neprotinga. Taigi gerai, geografija yra vienas ingredientas. Taigi iš tikrųjų bendrovėms kaip Akamai ", jei jūs girdėjote apie juos, arba kiti jau seniai priimtas geografijos į sąskaitą. Ir paaiškėja, kad iš prigimties Kurių IP adresas: Mano nešiojamas IP adresas, galite numanyti su tam tikra tikimybe, ten, kur esate pasaulyje. Ir iš tiesų ten trečiųjų šalių paslaugomis gali mokėti kas prižiūri duomenų bazes IP adresų ir geografijos kad su aukštos pasitikėjimas bus Tiesa, paklaustas, kurioje pasaulio tai IP adresas? 

Ir taip iš tikrųjų, kas kitos įmonės tai naudoti? Jei turite "Hulu" ar "Netflix", jei jūs kada nors buvo keliaujant užsienyje, ir bandote žiūrėti kažką "Hulu", ir jūs ne JAV, galite pamatyti pranešimą sakydamas, o ne JAV. Atsiprašome, Jūs negalite peržiūrėti šį turinį. 

Auditorija: [NESIGIRDI] 

DAVID Malan: O, tikrai? Bet taip, taip, iš tikrųjų tai puikus taikymas kažko labai techninio realų problemos. Jei buvo VPN nuo Europoje ar Azijoje ar kur pasaulyje į savo įmonės būstinėje Niujorke ar kur esate, esate ketina sukurti išvaizdą išorės svetainių, kad jūs iš tikrųjų Niujorke, nors esate fiziškai gana toli. 

Dabar jūs vartotojas ketinate žinoti, kad tu akivaizdžiai toli. Bet jūs taip pat ketina jaustis, nes šių papildomų milisekundžių. Ši papildoma atstumas ir šifravimo, kad vyksta VPN vyksta lėtai dalykų žemyn. Taigi gali arba negali būti puiki patirtis. Bet "Hulu" ir "Netflix ketiname pamatyti jūs, kaip sėdi kažkur Niujorke, kaip jūs aiškiai gautą. Koks puikus sprendimas, kad. 

Visos teisės, todėl geografija yra vienas sprendimas. Ką dar gali mes naudojame nuspręsti, kaip į maršruto srautą iš A, B, ir C į 1, 2, ir 3, ir vėl, išleisti inžinerijos skrybėlę? Visa tai skamba labai sudėtinga. Uh, aš net nežinau, kur pradėti įgyvendinti tuos. Duok man kažką, kad paprastesnis. Koks paprasčiausias būdas padaryti šį sprendimą? 

AUDITORIJA: Ar serveris rasti? 

DAVID Malan: Ar serveris rasti? Taigi nėra blogai. Tai gerai. Štai tarsi apkrovos nuancing. Taigi leiskite laikyti, kad apkrovos kategoriją. Jei esate prieinama, aš tiesiog ketina siųsti duomenis ten. Tačiau, kad galėtų greitai turėti neigiamos. Nes jei aš naudoju tą logiką, ir jei aš visada paklausti 1, yra jums, yra jums, yra jums, jei atsakymas yra visada Taip, Aš ruošiuosi siųsti 100% eismo jo, 0% visiems kitiems. Ir tam tikru momentu, mes ketiname nukentėjo kad sulėtėjimas arba svetainė nepasiekiama. Taigi, kas yra šiek tiek geriau nei kad bet vis dar gana paprasta ir beveik nėra protingas, nes atsižvelgiant į visus šie papildomi duomenys atsižvelgti? 

Auditorija: Kaina už serverį. DAVID Malan: Kaina už serverį. Gerai, kad leiskite Lobizmas kad bagažinės kategorijos, taip pat. Nes tai, kas jums rasti įmonė, too--, kad jei atnaujinti savo serverius per tam tikrą laiką arba pirkti daugiau, jums gali būti suteikta galimybė gauti tiksliai tie patys variantai aparatūros. Nes ji iškrenta iš dienos. Jūs negalite nusipirkti it anymore. Kainos pakeisti. 

Taigi jums gali tekti iš esmės skirtingus serverius Jūsų klasterį, taip sakant. Štai visiškai gerai. Tačiau kitų metų aparatūros gali būti du kartus taip greitai, du kartus veiksnus, šiemet. Taigi, mes galime išmesti, kad į apkrovos kategoriją. Tai grįžtamojo ryšio tarp 1, 2, ir 3 apkrovos balansinio tikrai galėtų papasakoti jį Ei, aš ne 50% talpos. Bet beje, aš taip pat turi dvigubai daugiau branduolių. Naudokite šią informaciją. Net simpler-- ir tai vyksta būti kompiuterių mokslo tema. Jei abejojate, arba jei norite, kad paprastas sprendimas, kuris paprastai veikia gerai per tam tikrą laiką, nereikia pasirinkti tas pats serveris visą laiką, bet choose-- 

Auditorija: atsitiktinė viena? DAVID Malan: --a atsitiktinai serveris. Taip, išsirinkti vieną ar kitą. Taigi atsitiktinumas yra iš tikrųjų Tai labai galingas komponentas kompiuterių mokslo, ir inžinerijos daugiau apskritai, ypač kai norite padaryti paprasta sprendimą greitai be apsunkina jį su visais iš jų labai protingas, bet taip pat labai protingas, sprendimai, kuriuos reikia visi daugiau inžinerija, visi daugiau minties, kai tikrai, kodėl ne aš tiesiog rūšies apversti monetą arba trijų pusių monetos šiuo atveju, ir nuspręsti, ar eiti 1, 2, 3? 

Tai gali turėti neigiamos probabilistically, bet panašiai kaip šansai apie vėl prakeiktas galvas ir vėl ir vėl ir vėl ir vėl ir vėl yra įmanoma, Reality-- Super, Super tikėtina. Taigi, laikui bėgant, šansai yra tiesiog siunčiant vartotojams atsitiktinai 1, 2 ir 3 ketina dirbti, puikiai baudą. Ir tai yra technika paprastai žinomas kaip Žiedinis. 

Arba iš tikrųjų, tai ne Žiedinis. Tai būtų atsitiktinis požiūris. Ir jei jūs norite būti net šiek tiek paprastesnis nei, kad Žiedinis būtų, pirmasis asmuo eina 1, antras asmuo iki 2, trečiasis asmuo iki 3, ketvirtas iki 1. Ir jame slypi Žiedinis. Jūs tiesiog rūšies eiti aplink ciklas. 

Dabar turėtumėte būti protingas apie tai. Jūs neturėtumėte aklai siųsti vartotojui serveris numeris vienas, jei kas yra šiuo atveju? Jei tai ne max pajėgumu, arba tai tiesiog nebėra reaguoja. Taigi idealiai norite kai rūšies grįžtamuoju ryšiu. Priešingu atveju, jūs tiesiog atsiųskite visi jūsų vartotojai aklavietę. Bet tai gali būti atsižvelgta, taip pat. 

Taigi nereikia pagal vertiname vertę tik atsitiktinumas, kuris yra gana dažnai išspręsti šių problemų rūšių. Ir mes užsirašyti Žiedinis. Taigi, kaip kai kurios įmonės vykdyti Žiedinis ar atsitiktinumas arba bet kuris iš šių sprendimų? Na, deja, jie daryti tokius dalykus. Leiskite atsigriebti kitą greitą ekrano. 

Tiesą sakant, padarykime du. Aš nežinau, kodėl mes gauti visų šių patiekalų. Tai labai keista. Gerai, tai, ką aš tikrai noriu yra ekrano. Tai keista. Gerai, kad aš galiu pokštauti tai. Nežinau, kiek toliau Noriu, kad nemirksi. 

Taigi labai paprastai, jums rasti sau ne tokia kaip www.2.acme.com adresą gal www.3 arba 4 arba 5. Ir užmesti akį už tai. Jūs nematote, kad dažnai. Bet kai jūs darote, kad tipo yra linkęs būti didesni, vyresnio amžiaus, stodgier įmonės kad technologiškai tai tikrai ne atrodo, kad žino, ką jie daro. Ir matote šį ant technologijų įmonių Kartais, senesni. 

Taigi, ką jie daro? Kaip jie įgyvendinant apkrovos balansavimo, ar ji atrodo? Jei jums rasti sau, kaip vartotojas rašyti www.something.com, ir staiga jūs esate www.2.something.com, kas turi savo krūvį ivedimas tikriausiai padaryta? Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, todėl apkrovos balansavimo yra turbūt priimant sprendimą pagal vieną iš tai sprendimų priėmimo processes-- tikrai ne klausimas, kuris. Bet panašiai kaip aš atrinktas numeriai ant lentos čia, serveriai yra ne tik vadinamas 1, 2, ir 3. Jie tikriausiai vadinama www1, www2, www3. Ir paaiškėja, kad viduje HTTP užklausa ši funkcija. Ir aš ruošiuosi imituoti tai taip. 

Aš ruošiuosi atverti ta pati kūrėjas tinklas skirtukas, kaip ir anksčiau tik todėl mes galime pamatyti, kas vyksta apie po gaubtu. Aš ruošiuosi išvalyti ekraną. Ir aš ruošiuosi eiti į, tegul pasakyti, http://harvard.edu. Dabar kokia verslo priežastys, Harvardo nusprendė, kaip ir daugelis, daugelis kitų svetainių, standartizuoti savo svetainė apie www.harvard.edu tiek techninis ir rinkodaros tikslais. Tai tiesiog rūšies į Vogue turėti www. 

Taigi Harvardo serveris kažkaip nukreipti vartotoją, kaip aš nuolat sako, iš vieną URL į kitą. Kaip tai veikia? Na, leiskite man eiti į priekį ir paspauskite "Enter". Ir pastebėsite URL tiesų greitai pakeistas į www.harvard.edu. Leiskite slinkti atgal tai istorija ir paspauskite ant šio debug diagnostinė informacija, jei bus. Leiskite pažvelgti į mano prašymą. 

Taigi čia prašymas aš padariau. Ir pastebėsite, kad tai atitiktų rūšies prašymu padariau Facebook anksčiau. Bet pastebėsite atsakymą. Kas skiriasi atsakymas šį kartą? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, taip, tai nėra 200 Gerai. Tai ne 404 Not Found. Tai 301 Perkelta Pastoviai, kuris rūšies juokinga būdas pasakyti, Harvardo jau rezervavimo ir persikėlė kitur www.harvard.edu. 301 reiškia, kad tai peradresavimas. Ir ten, kur turėtų vartotojui matyt nukreipti? Yra papildomas Smakołyk informacija viduje, kad voke. Ir kiekvienas iš šių eilučių bus dabar pradėkite skambinti žinutę HTTP. Antraštė yra tik rakto pair-- kažką storosios žarnos kažką. Tai informacijos gabalas. Kur turėtų naujas vietą, matyt, bus? Atkreipkite dėmesį į paskutinę eilutę tarp visų tų antraščių. 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, taip, ten Papildoma informacija. Pirmoji eilutė, kad aš pabrėžė sako 301 Perkelta visam laikui. Na, kur jau jis persikėlė? Paskutinis line-- ir jie neturi turi būti tokia tvarka. Tai gali būti atsitiktinis. Kur dvitaškis reiškia, ei naršyklę, eikite į šį URL vietoj. 

Taigi naršyklės suprasti HTTP nukreipimus. Ir tai yra labai, labai paplitęs būdas šoktelėti vartotojo iš vienos vietos į kitą. Pavyzdžiui, jei jūs kada nors bandė aplankyti interneto svetainę, kad jūs ne prisijungęs prie, galbūt staiga Būk naujoje URL apskritai yra paraginti prisijungti. 

Kaip tai veikia? Serveris yra turbūt siunčiant 301. Taip pat yra kiti skaičiai, pavyzdžiui, 302, šiek tiek skiriasi prasme, kad jus siunčiu į kitą URL. Ir tada serveris, kai jūs prisijungęs, atsiųsime Jums atgal, iš kur jūs iš tikrųjų numatyta. 

Taigi, kas, tada yra blogai inžinerijos svetainę darai? Kai lankotės www.acme.com, ir jie tiesiog atsitikti pavadino savo serverius www1, www2, www3, ir taip toliau, jie yra labai simply-- kuri būtų teisinga, bet labai rūšiuoti foolishly-- nukreipti jus į tikrųjų skirtingai pavadintas serveris. Ir tai puikiai veikia gerai. Tai malonu ir lengva. 

Mes matėme, kaip jis būtų padaryta po gaubtu virtualiame voką. Bet kodėl tai, be abejonės, blogas sprendimas inžinerija? Ir kodėl aš tarsi maloningas į šiuo konkrečiu inžinerijos požiūris? Teigia, kodėl tai yra blogai. Benas? Auditorija: [NESIGIRDI] DAVID Malan: Kiekvienas serveris turėtų turėti kopiją svetainės. Man viskas gerai su tuo. Ir iš tiesų, tai ką aš darant prielaidą, už visą šią istoriją, nes jei mes wanted-- gerai iš tikrųjų, išskyrus Dan anksčiau pasiūlymas, kur, jei turite skiriasi serveriai daro skirtingus dalykus, tada gal jie iš tikrųjų galėtų būti funkciškai daro skirtingus dalykus. 

Bet net ir tada, tam tikru momentu, jūsų Duomenų bazė yra ketina gauti perkrautas. Jūsų statinio turtas serveris ketina gauti perkrautas. Taigi tam tikru momentu, mes atgal į šią istoriją, kur mes reikia keletą kopijų tą patį. Taigi, aš Gerai, kad. Auditorija: [NESIGIRDI] 

DAVID Malan: Gerai, kad kai kurie puslapiai gali būti neproporcingai populiarus. Ir taip fiksuojančio viename adresą nebūtinai yra geriausias dalykas. [NESIGIRDI]? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Ką reiškia, kad? Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, būtent. Taigi jūs nenorite nebūtinai have-- jūs tikrai nenoriu turėti savo vartotojus rankiniu būdu įvesdami www1 ar www2. Nuo prekės ženklo perspektyvos, tik atrodo šiek tiek juokinga. Jei tiesiog norite tarsi švarus, elegantiškas patirtis, turintys šių atsitiktinai rūšiuoti numeruoti URL tikrai nėra gera. Nes tada vartotojai tikrai ketinate kopijuoti ir įklijuoti juos į laiškus ar momentinius pranešimus. 

Dabar jie dauginamosios. Dabar jūs esate tarsi painioja tavo mažiau techninė auditorija, manantis, Jūsų interneto adresas yra www2.something.com. Nėra jokių įtikinamų semantika, kad. Jis tiesiog atsitinka būti pagrindinis techninė detalė, kad jūs sunumeruoti savo serverius tokiu būdu. 

Ir dar blogiau, kas būtų, jei, pavyzdžiui, gal aplink Kalėdų metu, kai Verslo tikrai auga, jūs turite www1 per www99, bet sausį ir vasarį ir pirmyn, išjungiate pusė šių todėl jūs turite tik www1 per www50? Kas POVEIKIS dabar, kad labai protinga verslo sprendimas? Auditorija: [NESIGIRDI] DAVID Malan: Jums reikia valdyti visus tuos dar. Auditorija: [NESIGIRDI] DAVID Malan: Būtent. Tai tipo laimikio ten. Jei jūsų klientai yra iš įpročio žymėjimas dalykų, siųsdami juos, tiesiog taupymo URL kažkur, arba jei tai tik savo auto baigti savo naršyklėje, todėl jie tikrai ne tyčia jį rinkdami, tai tiesiog vyksta, jie gali, 11 mėnesių iš metų efektyviai, pasiekti aklavietę. Ir tik labiausiai sumani ir Vartotojų ketina realizuoti, Gal aš rankiniu būdu pašalinti šį numerį. Aš turiu galvoje, tai tik nesiruošia atsitikti su daugeliu vartotojų, taip blogai verslui, blogas įgyvendinimas inžinerija išmintingas. 

Taigi, laimei, tai nėra net būtina. Pasirodo, kad tai, kas apkrovos Balansavimo galite padaryti yra vietoj, kai posakis daro request-- ei A eiti iki 1. Kitaip tariant, vietoj siunčiant, kad peradresavimas taip, kad vienas žingsnis šiuo keliu procesas yra eiti čia jis tada pasakė eiti kitur. Ir taip žingsnis trys yra, jis eina kitur. 

Galite vietoj toliau maršrutu, į toliau naudoti šį terminą, visas A duomenimis per apkrovos balansavimo, kad jam niekada kontaktai 1, 2, arba 3 tiesiogiai. Visi eismo ar gauti "nukreiptas" pagal apkrovos balansavimo pati. Ir taip dabar mes tarsi sąmoningai nyksta linijas tarp šių įvairių prietaisų. Apkrovos balansavimo galite maršruto duomenis. Tai tik funkcija, kad ji turi. 

Taigi apkrovos balansavimo, taip pat, tai programinė įranga,, tikrai. Ir maršrutizatorius yra programinė įranga,. Ir jūs galite visiškai turi du gabalai programinė įranga viduje vieno fizinio kompiuterio todėl apkrovos ivedimas gali padaryti šiuos kelis dalykus. 

Taigi vienas kito būdo tai padaryti, kuris iš tikrųjų nueina tarsi pirmųjų principų DNS, kurį mes kalbėjome apie prieš pertrauką. DNS buvo Domenų vardų sistema. Atminkite, kad galite paklausti DNS serverį, kas IP adresas google.com, facebook.com? 

Ir mes iš tikrųjų galite tai padaryti. Įrankis mes ne naudoti anksčiau yra vienas, kad lygiai taip pat prieinama, vadinamas Nslookup, už vardų serveris paieškos. Ir aš tik ketina įvesti facebook.com. Ir matau, kad "Facebook IP adresas, matyt tai. Leiskite man eiti į priekį ir kopijuoti , eikite į naršyklę, ir eiti į http: // ir kad IP adresas ir paspauskite "Enter". Ir tikrai pakankamai, atrodo, į darbą. 

Dabar darbo atgal, kas buvo viduje virtualios paketo kad "Facebook" atsakė, kai Lankiausi, kad IP adresas tiesiogiai? Kadangi pranešimas, kur dabar esu aš? Kur aš esu dabar, adresas? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Tuo saugaus versija, ir tuo www.facebook.com. Taigi tai nėra net tik saugus IP adresas. "Facebook" ėmėsi ją į save sakyti, kad tai yra juokinga. Mes neketiname jus ne tai negraži ieško URL, yra skaitmeninis. Mes ketiname atsiųsime HTTP nukreipti būdu tos pačios antraštės kad mes matėme before-- vieta dvitaškis kažką. 

Ir taip tai tiesiog reiškia, kad po dangtis yra dar šio IP adreso. Kiekvienas kompiuteris internete turi IP adresą, atrodytų. Bet jūs neturite nebūtinai turi atskleisti, kad vartotojui. Ir panašiai kaip atgal per dieną, yra buvo 1-800-rinkti, 1-800 C-O-L-L-El-C-T JAV, buvo padaryti Rink būdas ragina per labai lengvai įsimintina telefoną numeris arba 1-800-ČIUŽINIŲ pirkti lova, ir panašios Mnemoniska, kad jūs net pamatyti telefonu rūšies tarsi vis tiek, kad raidės žemėlapį numeriais. 

Dabar, kodėl taip yra? Na, tai daug lengviau įsiminti 1-800-ČIUŽINIŲ arba 1-800-rinkti, o ne nuo 1-800 kažką kažkas kažką kažkas kažką kažkas kažkas, kur kiekvienas iš jų yra skaitmuo. Be to, pasaulis sužinojo, greitai, kad mes neturėtume kad žmonės įsiminti IP adresus. Tai būtų kvaila. Mes ketiname naudoti pavadinimus vietoj. Ir štai kodėl DNS gimė. 

Gerai, taip kad sakė, kalbant apkrovos balansavimo, pabandykime yahoo.com. Na, tai įdomu. "Yahoo", atrodo, grįžta tris IP. Taigi išvadą iš to, jei galėtų, kas yra kitas būdas, kad galėtume įgyvendinti ši sąvoka apkrovos balansavimo gal net naudojant fizinį prietaisas, ši nauja fizinis įrenginys? 

Kitaip tariant, aš galiu imtis Pašalink finansavimo turite už apkrovos balansavimo ir lieps naudoti kai esama Aparatinė įgyvendinti ši sąvoka apkrovos balansavimo? Ir spoileris yra Taip, bet kas, ar kaip? Kas yra "Yahoo" galbūt čia darai? Kareemas? Gerai, Chrisas? Auditorija: [NESIGIRDI] DAVID Malan: Taip, visi Trys iš šių darbų. Taigi atsitiktinumas, apvalios Robin, location-- galite tiesiog sverto esamą gabalas dėlionės kad mes kalbėjome apie anksčiau DNS sistema ir tiesiog pasakyti, kai pirmasis vartotojas dieną prašo yahoo.com, suteikti jiems pirmąją IP adresą, kaip vienas baigiasi 45 ten. Ir kitą kartą, kai naudotojas prašo IP adresas yahoo.com iš kažkur pasaulyje, suteikti jiems antrą IP, tada trečiasis IP, tada pirmasis IP, tada antra. Arba būti protingas apie tai ir tai padaryti grafiškai. Arba jis atsitiktinai ir ne tik daryti tai Žiedinis šiuo būdu. 

Ir šiuo atveju, tada mes net nereikia pristatyti šį juoda Dėžutė į mūsų nuotrauką. Mums nereikia naują įrenginį. Mes tiesiog sakau kompiuteriai eiti į serverius tiesiogiai veiksmingai, bet ne būdu, kad jų pavadinimai. Jie niekada reikia žinoti pavadinimą. Jie tiesiog buvo pasakyta, kad yahoo.com žemėlapiai į bet kurią iš šių IP adresų vienu. 

Taigi jis siunčia tą patį prašymą. Bet dėl ​​išorės vokas, tai tiesiog kelia IP, kad ji buvo informuota apie. Ir tokiu būdu, taip pat galėtų mes įkelti subalansuoti prašymus tiesiog siunčiant voką iki A skiriasi viena Yahoo nuosavų serverių? 

Ir jei mes nuolat kasti, mes pamatyti tikriausiai kitos įmonės, turinčios daugiau. CNN turi du viešai atskleisti. Nors iš tikrųjų, jei mes tai dar kartą ir again-- cnn.com-- matote jie keičia tvarką, iš tikrųjų. Taigi, ką mechanizmas yra CNN naudojant, matyt? 

Auditorija: atsitiktinai. DAVID Malan: Na, tai gali būti atsitiktinis, nors ji atrodo, kad būti dviračiu pirmyn ir atgal. Taigi, tai tikriausiai Žiedinis kur jie tiesiog perjungimo tvarką, kad kad aš turbūt imtis pirmiausia. Mano kompiuteris bus pirmasis kiekvieną kartą. Taigi, kad apkrovos balansavimo. Ir tai leidžia mums, galiausiai, į žemėlapį duomenis, arba žemėlapių prašymus, keliose serveriuose. Taigi, kas rūšių problemos dabar dar egzistuoja? Atrodo mes tiesiog tikrai išspręsta gerą problemą. Mes turime naudotojus į skirtingus serverius. But-- Oh, ir Chrisas, padarė turite klausimų prieš? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Visiškai priklauso. Taigi, kas vyksta čia? Ir mes iš tikrųjų galite pamatyti tai. Taigi pabandykime Yahoo. Tiesą sakant, eikime į Facebook. Nes mes žinome, kad vienas dirba. Taigi, aš ruošiuosi kopijuoti kad IP adresas dar kartą. Aš ruošiuosi uždaryti visus šiuos skirtukus. Aš ruošiuosi eiti atvira, kad specialus tinklas skirtukas žemyn čia. Ir aš ruošiuosi aplankyti tik http: //. Ir dabar aš ruošiuosi paspauskite Enter. Ir pažiūrėkime, kas atsitiko. 

Jei žiūriu, kad prašyme, pranešime kad my-- "Facebook" yra blogas pavyzdys. Nes jie turi Super išgalvotas technika kad slepia, kad detalę iš mūsų. Leiskite naudoti Yahoo instead-- http: // to IP. Leiskite atidaryti mūsų tinklo skirtukas, išsaugoti žurnalą. Ir čia mes einame, Enter. Tai juokinga. Gerai, kad čia yra garsus 404 žinutė. Kas Juokinga čia yra, kad jie tikriausiai niekada nebus atgal. Nes ten tikriausiai ne kažkas negerai savaime. Jie tiesiog sąmoningai nusprendė neremti skaitinė forma savo adresu. 

Taigi, ką mes iš tikrųjų matome į Tinklas ", jei aš traukti tai čia, yra, kaip aš sakau, garsus 404, kur jei žiūriu reagavimo antraštes, Tai yra tai, ką aš here-- 404 Not Found. Taigi pabandykime vienas kitas. Leiskite pamatyti, jei CNN, bendradarbiauja su mumis. Aš patraukti viena CNN IP adresus, išvalyti šį, HTTP, dah, dah, dah, dah. Taigi atsakydamas į Chris klausimas, kad vienas dirbo. 

Ir eikime reagavimo antraščių. Tiesą sakant ne, viskas gerai, aš esu stengiasi rasti darbo pavyzdys. Taigi, CNN nusprendė, mes tiesiog palikti jus Nepriklausomai adresas jūs iš tikrųjų aplankyti, prekės ženklo klausimai šoną. Bet koks nebūtų vyksta, jei mes galime pamatyti jį "Facebook" atveju, yra gautume 301 Perkelta Pastoviai, greičiausiai, kurio viduje yra buvimo vieta: https: //www.facebook.com. Ir šansai yra www.facebook.com yra slapyvardis už tą patį serverį mes tiesiog nuėjo, nuvyko. 

Taigi tai šiek tiek priešingus rezultatus. Mes tiesiog apsilankymą serverį. Serveris yra tada mums, go away. Eiti į šio kitu adresu. Bet mes tiesiog taip atsitiktų būti grįžta į tą patį serverį. Bet matyt mes dabar likti, kad serveris be šios pirmyn ir atgal. Nes dabar mes naudojant pavadintas svetainės versija, o ne skaičių. Geras klausimas. 

Gerai, kad jeigu mes dabar assume-- mes išsprendė apkrovos balansavimo. Mes dabar turime mechanizmą, ar tai per DNS ar tai per šią juodąją dėžę, ar tai naudojant bet kurį iš šių metodų. Mes galime imtis vartotojo prašymą ir išsiaiškinti, prie kurio serverio, 1, 2, arba 3, siųsti jam ar jai. 

Kas pradeda lūžti apie mūsų svetainę? Kitaip tariant, turime pastatė verslą, kuris anksčiau buvo nuo vieno serverio. Dabar, kad verslas veikia keliose serveriuose. Kokias prielaidas, kokių rūšių dizaino sprendimus, dabar gali būti nesilaikantiems? 

Tai yra mažiau akivaizdus. Bet pažiūrėkime, jei mes negalime įdėti mūsų pirštu kai problemos mes sukurta save. Vėlgi, tai lyg laikydami žemyn į žarna nuotėkio. Ir dabar kai naujas klausimas yra popped up čia. 

Auditorija: [NESIGIRDI] DAVID Malan: Gerai, kad turime nuolat auga mūsų kietajame diske. Man viskas gerai su tuo dabar. Nes manau, kad galiu horizontaliai skalė. Pavyzdžiui, jei aš senka, aš tiesiog gauti ketvirtasis serveris, gal penktadalis serveris, ir tada padidinti savo gebėjimus kita 30% arba 50% arba Plauktiņš. Taigi, aš Gerai su tuo, bent jau dabar. Auditorija: [NESIGIRDI] DAVID Malan: Gerai, kad gera vieta. Taigi manau, serveriams nėra tapačios. Ir klientų aptarnavimo arba siųsti lygiavertis vis šiek žinutė iš vartotojas sakydamas: "Tai yra ne darbo teisė. Tai labai įmanoma, kartais kad galbūt vienas ar daugiau serveriai veikia šiek tiek kreivai, bet ne kiti, kurie tikrai gali sunkiau persekioti žemyn klausimą. Jums gali tekti ieškoti keliose vietose. 

Tai pasireiškimas kitos Bug natūra yra tai, kad jūs tikriausiai turėtų sukūrė savo infrastruktūrą, kad kad viskas yra tikrai identiški. Bet ji atskleidžia naują problemą kad mes neturėjo anksčiau. Kas dar? Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, yra daugiau sudėtingumo. Yra fiziškai daugiau laidų. Yra kitas prietaisas. Tiesą sakant, aš pristatė esminis koncepcija ir yra esminė problema čia žinomas kaip vieno taško nesėkmės, kurios, net jei jūs niekada girdėjote frazė, galite tikriausiai dabar dirbti atgal ir suprasti jį. Ką tai reiškia, kad aš turiu vieną punkto gedimo mano architektūros? Ir architektūra, aš tiesiog tai jo topologija. 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, kas būtų, jei apkrova ivedimas krinta? Aš įtraukė šią viduryje vyras, kurio gyvenimo tikslas yra išspręsti problemą. Bet aš pristatė naują problemą. Naujas nuotėkio Lingių žarnoje. Nes dabar, jei apkrovos balansavimo miršta ar pertraukas ar misfunctions, dabar aš prarasti prieigą prie visi mano serverių trys. Ir prieš, aš ne šią tarpininkus. Ir taip, tai yra nauja problema, be abejo. Mes grįžti į kaip mes galime nustatyti, kad. 

Auditorija: [NESIGIRDI] DAVID Malan: Tai būtų vienas iš būdų. Taip, ir todėl tai bus gana žiurkės skylė mes pradedame eiti. Bet tegul grįžti į kad vos akimirką. Kokie kiti problemos sukūrėme? 

Taigi Danas minėta duomenų bazę anksčiau. Ir net jei nesate pernelyg pažįstami techniškai, duomenų bazė yra tik serveris, kur keičiasi duomenis paprastai saugomi, gal įsakymas kažkas įdėjo, Jūsų vartotojo aprašymą Jūsų vardas Jūsų elektroninio pašto adresas, dalykų, kurie gali būti įvestas ar pasikeitė laikui bėgant. 

Anksčiau mano duomenų buvo tame pačiame serveryje kaip mano serveryje. Nes aš tiesiog turėjo vieną web hosting sąskaitą. Viskas buvo visi toje pačioje vietoje. Kur turėčiau pateikti savo duomenų bazę dabar, spalio 3 serverio 1, 2, arba? 

AUDITORIJA: 4. 

DAVID Malan: 4, Gerai, viskas, teisus, tad ten. Taigi, aš ruošiuosi įdėti savo database-- ir tegul pradėti ženklinimo šias www, www, www. Ir aš ruošiuosi pasakyti, tai yra numeris keturi. Ir aš pasakysiu dB duomenų bazę. Gerai, man patinka tai. Kas linija turėčiau matyt piešimo čia? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, taip, kodas, kaip mes aptarsime rytoj, matyt, yra tas pats visuose trijuose serveriuose. Bet dabar ji turi sujungti ne su duomenų bazė veikia lokaliai, bet ir kitur. Ir tai gerai. Mes galime tik suteikti duomenų bazės A pavadinimas, kaip mes, arba skaičius. Ir kad visi veikia puikiai. Bet ką mes padarėme? Mes horizontaliai mastelis, turintys trys serveriai vietoj vieno, kuris yra geras. Nes dabar mes galime tris kartus daugiau įkelti. 

Ir dar geriau, jei vienas ar du iš šių serverių krinta, mano verslas gali toliau veikti. Nes aš vis dar turiu vieną, net jei aš rūšies šlubas kartu atlikimo išmintingas. Bet kas nauja problema aš įvesta juda į duomenų bazę į šią atskirą serverio o ne ant 1, 2, ir 3? 

Auditorija: [NESIGIRDI] DAVID Malan: Taip, taip, dabar turiu kitas Pavienis pažaidos taškas. Jei mano duomenų miršta, arba turi būti modernizuotos, ar kas, dabar tikrai, mano svetainė yra internete. Ir aš galiu tarnauti statinis, nekintanti turinį. Bet aš negaliu leisti vartotojams prisijungti arba pakeitimas nieko arba užsisakyti nieko, dar blogiau. Nes jei 4 neprisijungęs, tada 1, 2, ir 3 tikrai negaliu kalbėti jai pagal apibrėžimą. 

Gerai, kad taip, ir taip tai kodėl Aš dvejoja atkreipti tai. Taigi leiskite grįžti prie to. Aš nenoriu pasakyti, kad stumia jus išjungtas. Bet vaizdas yra labai greitai bus gauti stresą. Kadangi jums reikia norint pradėti turintys du visko. Iš tiesų, jei jūs kada nors matė filmas Kontaktinė prieš kelerius metus su Jodie Foster-- ne? 

Gerai, kad už du iš mums, kurie jau matė Kontaktų, ten santykiai ten, kur jie esmės nusipirkau du kažką o ne vienas, nors ir dviguba kaina. Taigi tai buvo tarsi žaismingas Komentuoti filmą. Tai tipo, susijusi su tai. Mes galime visiškai padaryti. Ir jūs ką tik išlaidas mums dvigubai daugiau pinigų. Bet mes grįžti prie to. 

Taigi mes išspręsti šią. Taigi jūs žinote, ką? Tai kaip slidaus šlaito. Aš nenoriu elgtis su turintys turėti pasikartojančią duomenų bazę. Tai per daug pinigų. Zinai ka? Noriu turėti savo duomenų bazę kaip ir versija viena kur kiekvienas serveris turi savo vietos duomenų bazę. Taigi, aš tik ketina atkreipti db ant kiekvieno iš jų. 

Taigi dabar kiekvienas interneto serveris yra identiškas tiek, kiek kaip ji turi tą pačią kodo, tos pačios statiniai turtas, patys paveikslėlių ir teksto ir taip toliau. Ir kiekvienas turi savo duomenų bazę. Aš nustatė vieną tašką Nesėkmės problema. Dabar aš turiu duomenų bazę. Nesvarbu, kurioje du arba vienas iš šių viskas miršta, ten visada viena palikta. Bet kas nauja problema aš turiu sukūrė kad Dan sprendimas vengti? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, aš turi juos sinchronizuoti, tiesa? Nes arba man reikia sinchronizuoti kas vyksta where-- kitaip tariant, jei Alisa odwiedzajacy svetainė, ir ji neįvyko gauti atsitiktinai arba apvalios robined ar kas, prie serverio numeris vienas, po to aš turiu visada siųsti ją į serverį 1 d. Kodėl? Nes jei aš siunčiu ją į serverį 2, tai vyksta atrodyti ji neegzistuoja ten. 

Nesiruošiu turėti savo užsakymų istoriją. Nesiruošiu turėti savo profilį čia. Ir tai tik mano, kaip tai kviesdamas problemas. Ir kai Bobas apsilanko, aš turi išsiųsti jį visada į tą patį serverį, 2, arba priklausomai nuo to vienas, ir Charlie į trečiąją vieną, ir nuosekliai. Tai nėra neprotinga, nors. Tai vadinama atitvarų duomenų bazę. Ir iš tiesų, tai buvo tai, ką "Facebook" padarė anksti. 

Jei po istorijos "Facebook", ji pradėjo čia miesteliu kaip www.thefacebook.com. Tada jis išsivystė, kai Markas pradėjo plinta į kitus miesteliai būti harvard.thefacebook.com ir mit.thefacebook.com, ir tikriausiai bu.thefacebook.com, ir pan. Ir tai buvo, nes anksti, aš nemanau, kad galite turėti draugų visame miesteliai. Bet tai gerai. Kadangi kiekvienas iš Harvardo gavo siunčiami šiame serveryje. Kiekvienas iš BU gavo siunčiami šiame serveryje. Kiekvienas iš MIT gavo siunčiami šį server-- teorijos. Aš ne visai žinoti visi pagrindinės įgyvendinimo detales. Bet jis matyt atitverta žmones jų miesteliu, kur jų tinklas buvo. 

Taigi, kad gerai iki taško, kur jums reikia du serveriai Harvardo, ar trys serveriai Harvardo. Ir tada, kad paprastumas rūšies skyla. Bet tai protingas požiūris. Leiskite visada siųsti Alice į tą pačią vietą, visada siųsti Bob į tą pačią vietą. Bet kas atsitinka, jei Alisos serveris eina neprisijungus? Bob ir Čarlis vis dar galima nusipirkti daiktai ir prisijungti prie svetainės. Tačiau Alisa negali. Taigi jūs praradote trečioji savo vartotojų bazę. Gal geriau nei 100%? Bet gal tai būčiau malonu, jei galėtume vis dar palaiko 100% mūsų vartotojų net tada, kai trečiosios mūsų serveriai yra neprisijungę. 

Taigi galėtume sinchronizuoti, ką? Ne vartotojai, per se, bet duomenų visose šių serverių. Taigi dabar mes rūšies reikia šiek tiek rūšies sujungimo čia taip, kad patys serveriai gali sync-- nėra nepagrįstas. Ir iš tiesų, ši technologija egzistuoja. Atsižvelgiant į duomenų bazių pasaulyje, ten apie meistras-vergų duomenų bazių samprata, arba pirminė vidurinį, kur tarp funkcijų yra ne tik parduotuvės duomenis ir reaguoti su duomenimis, bet tik nuolat sinchronizuoti su viena su kita. Taigi bet kuriuo metu jums reikia parašyti ar įrašyti kažkas į šią duomenų bazę, iš karto gauna "pakartotas" į kitas duomenų bazes, taip pat. 

Ir bet kuriuo metu galite skaityti iš jos, nesvarbu, kur esate. Nes jei teoriškai jie visi sinchronizuojami, jūs ketina gauti tą patį vaizdą iš duomenų. Taigi tai skamba puikiai. Yra turite būti sugauti. Ką laimikis gali būti? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, todėl tris kartus kaip daug dalykų gali suklysti. Štai realybe. Visa tai gali būti tokia pati iš esmės. Bet kažkas turi sukonfigūruoti jų. Yra didesnė tikimybė, kad kažkas ketina suklysti. Tiesiog combinatorially turite daugiau daiktų linkę klaidų. Kas kita yra blogai potencialiai? Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, taip, sinchronizavimą gali būti blogai. Net, kaip jūs galite žinoti nuo kopijavimas ir toks, jei jūs tiesiog aklai priėmimo atsargines kopijas, ką daryti, jei kas nors suklysti vieną duomenų bazę? Jūs ištrinti, kas jums neturėtų. Jūs iš karto pakartoti kad problema visur kitur. Taigi Viktorija buvo talking-- atsargines kopijas būtų geras dalykas čia. Ir todėl mes grįžti prie to. Ir, kad būtų aišku, mes kalbame ne apie atsargines kopijas, čia savaime. Mes kalbame apie tikrąją replikacijos arba sinchronizavimas per serverius. Jie visi gyvi. Jie nėra skirtas būti naudojami atsargines kopijas. 

Auditorija: [NESIGIRDI] DAVID Malan: Kas tai? Auditorija: Higher-- DAVID Malan: Aukštasis kaina. Mes trigubai už savikainą Žinoma, nors bent jau kalbant aparatūros. Kadangi duomenų yra tik programinė įranga,. Ir žiniatinklio serveris yra programinė įranga,. Tai tikriausiai nemokamai, jei mes naudojame bet atviro kodo dalykų. Bet jei mes naudojame kažkas panašaus į "Oracle", mes mokate Oracle daugiau pinigų už licencijos, arba Microsoft susipažinti. Yra turite būti kai kurie kiti laimikis čia. Jis gali būti ne tai paprasta. 

Taigi su savo klausimu, manau, tai buvo Kareem, už geografijos earlier-- ar ne, Romanas, tai buvo, geography-- tarkime kad mes yra protingas apie tai, ir mes išleisti vieną iš mūsų serverių, ir, savo ruožtu mūsų duomenų bazes, JAV, ir kitas Europos, kitą Pietų Amerika, dar Afrikoje, kitas Azijoje, kur mes norėti visame pasaulyje. Mes jau žinome iš mūsų pėdsakų maršrutai, kad taškas A ir taškas B, jei jie toliau vienas nuo kito, ketiname imtis daugiau laiko. 

Ir jei kai kurie iš jūsų naudojamas Įrankiai, kaip "Facebook" ar "Twitter" arba bet kurios iš šių svetainių šių dienų, kad nuolat keičiasi, nes vartotojui sukurti duomenys, kartais, jei nukentėjo Perkrauti arba atidaryti tą patį puslapį kitoje naršyklėje, matote skirtingų versijų, beveik. Jūs galite pamatyti kažkieno statusą atnaujinti, bet čia ne čia ir tada perkraukite, ir tada jis Pasirodo, ir jūs perkrauti vėl ir jis dingsta. Kitaip tariant, atnaujina akis už tai, bent jau jei jūs naudojate socialinės tinklų kūrimo, ypač. 

Vėlgi, tik todėl, kad duomenys keičiasi taip greitai, kartais serveriai niezsynchronizowane. O gal tai super mažas langas. Bet 200 milisekundžių, o gal net daugiau nei that-- tai ketina imtis kai kurių ne suma lygi nuliui kiek laiko šių duomenų bazių sinchronizuoti. Ir mes ne tik kalbame apie vieną prašymą. Jeigu bendrovė turi tūkstančius vienetų Vartotojai mano, kad naudojant vienu metu, jie gali buferio. Kitaip tariant, gali būti eilę ar laukimo linija Prieš visus tuos duomenų bazėje užklausas galite gauti sinchronizuojami. Taigi gal tai iš tikrųjų kelias sekundes. 

Ir iš tiesų tai yra tiesa manau, net iki šios dienos su "Facebook", kuriuo kai jie sinchronizuoti iš East Coast į Vakarų Kranto, ji turi ne trivialus vėlinimo, taip sakant, kad jūs tiesiog rūšies toleruoti. Ir taip, tai ne tiek daug klaida, nes ji yra realybe kad jūsų vartotojai nematytų teisingus duomenis ne trumpiau kaip kelias sekundes. 

Matau šis Twitter daug iš tikrųjų, kur kartais aš Čivināšana viename lange, atidarykite kitą tada pamatyti jį patvirtinti, kad ji iš tikrųjų pakilo, ir tai ne ten dar. Ir aš turiu rūšies perkrauti, perkrauti, reload-- oi, ten yra. Ir tai ne todėl, kad nebuvo išsaugotas. Tai tiesiog nėra dauginami su kitais serveriais. 

Taigi, šis kompromisas, too-- Ar tikrai nori atskleisti save į pavojų kad jei vartotojas eina į jų tam, istorija, tai ne iš tikrųjų ten dar? Matau tai dėl tam tikrų bankų. Jis visada mane erzina, kai gerai, vieną, galite eiti tik kaip šešis mėnesius atgal savo banko ataskaitas kai kurie bankai, nors teoriškai jie turėtų galėti viską internete. Jie tiesiog stuff neprisijungęs kartais. Kartais too-- ką svetainė yra? Yra one-- oh, tai GoDaddy, manau. GoDaddy, kai paimate perkant domeno vardą ar kažką, jie dažnai suteikia jums nuoroda į jūsų gavimo. Ir jei jūs spustelėkite šią nuorodą teisė toli, ji dažnai neveikia. Jis tiesiog sako, aklavietę, nieko čia. 

Ir tai taip pat dėl Šie dauginti vėlavimas. Kadangi dėl kokios nors priežasties, jie vartojate šiek tiek laiko faktiškai generuoti, kad. Taigi tai tarsi kaip norite traukti jūsų plaukai iš tam tikru momentu. Kadangi visi bandote padaryti, tai išspręsti paprastą problemą. Ir mes nuolat kurti naują problemos savyje. Taigi pažiūrėkime, jei mes gali rūšies anuliuoti tai. 

Pasirodo, kad derinant duomenų bazių visi jūsų interneto serverių tikrai nėra geriausia praktika. Apskritai, ką inžinierius būtų padaryti, ar sistemos architektas, būtų turėti skiriasi pakopas serverių. Ir tik dėl vietos dėlei, aš atkreipti jų duomenų bazę čia. 

Mes gali turėti duomenų bazę ir serverio numeris keturių čia kad tikrai turi ryšį su kiekvienas iš šių serverių čia. Taigi tai gali būti mūsų priekyje baigti pakopos, kaip žmonės pasakytų. Ir tai būtų mūsų Atgal pabaiga pakopos. Ir tai tiesiog reiškia, kad tai veido vartotoją. Ir bazės nepatiria vartotoją. Ne vartotojas gali tiesiogiai prieigos prie duomenų bazės. 

Taigi leiskite dabar gal eiti maršrutas Viktorija pasiūlė. Tai yra vienintelė vieta, kurioje nepakankamumas. Tai leidžia man nepatogu. Taigi, kas galbūt Akivaizdžiausias sprendimas? Auditorija: [NESIGIRDI] DAVID Malan: Atsiprašome, sako, kad dar kartą. Auditorija: [NESIGIRDI] DAVID Malan: Ne gamybos serveris. Ką turi galvoje? 

Auditorija: [NESIGIRDI] 

DAVID Malan: Oi, Gerai, kad atsargines kopijas. Gerai, kad mes galime padaryti, kad tikrai. Ir iš tikrųjų tai labai dažnai daroma. Tai gali būti duomenų bazės numeris penki. Bet tai tik prijungtas prie keturių skaičių. Ir galbūt ją vadina karšta atsarginis. Šie du duomenų bazės gali būti konfigūruojamas tiesiog nuolat sinchronizuoti vienas kitą. Ir todėl, jei ši mašina miršta, už kokia kvaila reason-- kietąjį diską miršta, kažkas nugriūna kordas, kai programinė įranga yra ydingas ir aparatas stringa arba crashes-- galite turėti žmogų tiesiog atjunkite šį vieną iš sienos ir vietoj to prijunkite šį vieną. Ir tada per, tarkim A kelios minutės, o gal pusvalandį, grįšite internete. 

Tai nėra didelis, tačiau tai taip pat nėra baisu. Ir jūs neturite jaudintis apie bet kokius sinchronizavimo klausimais. Nes viskas jau yra. Kadangi jūs turėjote puikus atsarginės pasiruošę eiti. 

Jums gali būti šiek tiek mėgėjas apie tai, kaip kai kurie žmonės dažnai daryti, kur jums gali turėti duomenų bazės skaičių keturių čia duomenų bazės numeris penki čia kad yra kalbėtis su viena su kita. Bet jūs taip pat turite tai rūšies arrangement-- ir ji sąmoningai atrodo nepatogus, nes tai is-- kai visi priekinės dalies serveriai pasikalbėti su visos nugaros pabaigoje serverių. Ir taip, jei tai duomenų nėra reaguoti, šie priekinės dalies serveriai turėti programavimo kodas jais, kad sako, jei nenorite gauti jungtis į šią duomenų bazę, pagrindinis karto prasideda kalbėti antrinis. 

Bet tai dabar stumia sudėtingumą kodą. Ir dabar savo kūrėjams, jūsų programinė įranga kūrėjai, turime žinoti apie tai. Ir jūs rūšies susiejimas kodą, kad rašote, kad jūsų faktinis nugaros pabaigoje įgyvendinimo detales, todėl sunkiau, ypač didesnis bendrovė arba didesnis svetainė, kur jūs nebūtinai nori, kad programuotojai turi žinoti, kaip duomenų bazės inžinieriai daro savo darbą. Galbūt Jūs norite išlaikyti tuos vaidmenis Rūšiuoti funkciškai skiriasi tiek kad ten toks sluoksnis abstrakcija tarp dviejų. 

Taigi, kaip gali mes išspręsti šią problemą? Na, mes rūšies išspręsta Ši problema, kai anksčiau. Kodėl mes įdėti vieną iš šie dalykai čia, kur kalbama paeiliui keturių skaičių ir penki, visi priekis interneto serverių kalbėtis su šio tarpininkas, ir tarpininkas, savo ruožtu maršrutais savo duomenis? Iš tiesų, kas gali būti geras vardas už tai? 

Auditorija: [NESIGIRDI] DAVID Malan: Gerai, duomenų bazės valdytojui. Bet kas gali būti terminas, kad galėtume panaudoti šį prietaisą? Mes balansavimas. Taip, taip, iš tikrųjų, aš nėra sąžininga čia. Taigi apkrovos balansavimo reikštų, kad mes perjungti atgal ir pirmyn čia kurie turi ne iš tikrųjų būti. Taigi ten yra keletas būdų, kaip galėtume tai padaryti. 

Jei tai yra iš tikrųjų apkrovos balansinio istorija yra lygiai tas pats kaip ir anksčiau. Kai kurie prašymus eiti iki 4. Kai kurie iš jų eiti iki 5. Ir tai gerai. Nes dabar mes galime dvigubai tiek, kiek pralaidumas. Tačiau šis ryšys čia yra super svarbus. Jie turi nuolat išlikti sinchronizuoti ir tikiuosi nėra geografiškai toli vienas nuo kito, todėl kad sinchronizacija yra iš esmės momentinis. Priešingu atveju mes galime turėti problemų. 

Taigi, kad nėra blogai. Bet vėl, mes pristatė naują problemą. Kas problema aš tik atkurta? Pavienis pažaidos taškas. Taigi, kas yra sprendimas, kad? Taigi, kaip Viktorijos mėgsta išleisti pinigus, mes galime imtis šį vaikiną iš ir tai padaryti. Ir aš tik ketina perkelti čia pakankamai vietos. Ir tai bus šiek tiek nepatogus. Aš ruošiuosi laikyti piešimo linijas. Manyti, kad visi tie linijos eiti į abu? 

Labai dažnas technika čia būtų naudoti techniką, vadinamą širdies plakimas kur kiekvienas iš šių įrenginių, kairė ir dešinė apkrovos balansavimo, ar kas mes norime juos vadiname, nuolat sakydamas, aš gyvas, Aš gyvas, aš gyvas, aš gyvas. Vienas iš jų pagal nutylėjimą veikia kaip pagrindinis. Taigi, visi keliai yra nukreipiami per vienas kairėje pusėje, pavyzdžiui, pagal nutylėjimą, savavališkai. 

Bet kaip tik vaikinas dešinėje negirdi iš kairės vaikinas nebėra, vienas dešinėje yra užprogramuotas automatiškai, pavyzdžiui, perimti IP adresą iš vienos kairėje, ir todėl tapo pagrindinis ir gal siųsti elektroninį laišką ar tekstinį pranešimą į žmonėms pasakyti, ei, į kairę pagrindinis neprisijungęs. Aš taps pagrindinis dabar. Taigi viceprezidentas tampa pirmininke, taip sakant. Ir kažkas turi eiti išsaugoti prezidentas, jei norite. Nes dabar mes turime laikinas Pavienis pažaidos taškas. 

Taigi, kaip sudėtinga ar stresą, kaip tai gali atrodyti pradėti yra, tai kaip jums išspręsti šias problemas. Jūs darote mesti pinigus į jį. Jums mesti aparatūros į jį. Bet, deja, jums pridėti sudėtingumo už jį. Bet rezultatas, galiausiai, yra tai, kad turite daug teoriškai Tvirtas architektūra. Jis vis dar nėra tobula. Nes net kai mes have-- mes galime ne turėti vieną pažaidos taškas. Mes dabar turime dvigubą taškų nesėkmės. Bet jei du dalykai suklysti, kurios visiškai galėtų, mes vis dar bus neprisijungęs. 

Ir taip: labai dažni į pramonė yra aprašyti Jūsų Laikas, kalbant apie devynetų. Ir tarsi vartus Siekti, kad yra 99,999% laiko jūsų tinklapis yra internete. Arba dar geriau, pridėti keli devynerios, kad. Deja, šie Nines yra labai brangūs. Ir tegul iš tikrųjų tai padaryti iš. Taigi, jei aš vėl atverti mano didelis skaičiuotuvas, 365 dienas per metus, 24 valandas per dieną, 60 minučių per valandą, ir 60 sekundžių per minutę, tai kiek sekundžių yra per metus, jei aš tai teisingai. Taigi, jei mes kartų tai iki .99999, tai kiek laiko mes norime siekti. Taigi tai reiškia, kad mes turime būti iki tai daug sekundžių per metus. Taigi, jei aš dabar Atimti pradinė vertė, ar veikiau Ši nauja vertė iš first-- 316 sekundžių, kuris, žinoma, yra penkių minučių. 

Taigi, jei jūsų svetainė arba jūsų kompanija yra teigdamas "penkis devynetai", pagal kurią Jums esate iki 99,99% laiko, tai reiškia, kad jums geriau buvo pakankamai protingas ir greitai pakankamai ir pakankamai gausiai praplaukite išteklių kad jūsų serveriai yra tik atsijungęs penkias minutes iš metų. Tai brangus ir sunku, ką reikia siekti. 

Taigi tai kompromisą, taip pat. 99,999% laiko yra gana adyti sunku ir brangu. Penki minutes-- galite vos gauti į serverį fiziškai pakeisti kažkas, kas negerai. Ir štai kodėl mes pradedame laidų viskas kartu sudėtingesnis Apriori kad kompiuteriai gali rūšiuoti išspręsti patys. Taip. 

Auditorija: [NESIGIRDI] DAVID Malan: problema gali būti bet daugelyje vietų. Ir fact-- 

Auditorija: [NESIGIRDI] DAVID Malan: Absoliučiai, visiškai. Ir kaip vaizdas yra vis labiau sudėtinga, tai gali būti interneto serverių. Jis gali būti galią iki pastato. Tai galėtų būti kažkas fizinis, kaip kabeliai gavo susinervinęs arba išmestas. Tai gali būti duomenų bazė nereaguoja. Tai gali būti jie neatnaujino savo veiklos sistema ir kažkas kabo. Taigi ten yra tiek daug kitų judančių dalių. Ir todėl, kad inžinerijos daug kad turi eiti už tai yra tikrai tik kompromisus, pavyzdžiui, kaip kiek laiko, kiek pinigų yra iš tikrųjų verta, ir kokie yra pavojai jūs tikrai jaudina? Pavyzdžiui, į kursai mokau Harvarde, mes naudojame cloud computing, daug kurios mes pradėsime atsižvelgiant pažvelgti dabar iš tikrųjų, kur mes naudoti "Amazon Web Services. Tiesiog nes tai vienas mes pradėjome. Bet ten vis šių dienų "Google" ir "Microsoft" ir kt. Ir mes sąmoningai pasirinkti įdėti visus Mūsų kursai "virtualių mašinų, kaip jie vadinami, į Manau tai Vakarų Virdžinija duomenų centras. Dauguma mūsų studentų atsitikti, kad iš JAV, nors yra tikrai kai tarptautiniu mastu. 

Tačiau realybė yra tai tik paprastesnis ir tai pigiau mums įdėti visus mūsų kiaušinių į Virdžinijos krepšelio nors žinau, jei kas nors negerai Virdžinija, kaip kartais happened-- kaip jei ten uraganas ar kai oras Renginys, kaip kad, jei yra keletas elektros tinklų klausimas arba like-- visi Mūsų kursai "duomenys gali eiti neprisijungęs tam tikrą minučių ar valandų skaičiaus ar net ilgiau. 

Bet sudėtingumo suma kad būtų reikalaujama, ir pinigų sumos, kuri būtų būti reikalaujama, kad veiktų viskas lygiagrečiai Europoje ar Kalifornijoje tiesiog nėra tiek daug prasmės. Taigi, tai racionalus prekyba ne, bet skausminga kai jūs iš tikrųjų turintys tą prastovos. 

Na, tegul perėjimą dabar į kai kurie iš debesis-paremtus sprendimus, kai kurie iš šių problemų. Viskas, ką mes buvome aptarti iki šiol rūšies problemų, kurios buvo pas mus kurį laiką, ar turite savo serveriai Jūsų įmonės, ar jūs einate į bendrą vietą padėkite kaip duomenų centrų ir akcijos erdvė su kažkuo kitu, ar šiais laikais debesyje. 

Ir kas malonu apie debesis, kad visi šių dalykų aš piešimo kaip fizinius objektus dabar gali būti suvokiami kaip Rūšiuoti Virtualių objektų debesyje, kurie yra modeliuojamas su programine įranga. Kitaip tariant, kompiuterių šiandien, Serveriai ir šiandien, kaip Dell paveikslėlyje Aš parodžiau anksčiau, yra toks greitas, turėti tiek daug RAM, tiek procesoriaus, tiek daug disko Erdvė, kad žmonės parašė programinės įrangos beveik pertvara vienas iš serverių iki į jį iliuzijos yra du serverius, arba 200 serverius, todėl kad kiekvienas iš mūsų klientams turi turėti iliuziją ne tik sąskaitą kai internete surengti, bet savo mašiną, kad mes nuoma iš kito asmens. 

Bet tai virtualus mašina tiek, kiek viename DELL serveris, jis vėl gali būti padalytas į viršų į du arba 200 arba daugiau virtualios mašinos, visi, kurie kam nors administracinį prieiga, bet taip, kad joje nė vienas iš mūsų žino ar gali prieiti prie kitų virtualių mašinos tame pačiame kompiuteryje. Taigi dažų paveikslėlį šiandienos skaidres, Aš tai kulka čia iš interneto vadinamas Docker. 

Todėl tai yra šiek tiek daugiau detalė, nei mes iš tikrųjų reikia. Bet jei jūs matytumėte tai kaip jūsų infrastructure-- tad tiesiog aparatūros savo, Jūsų serveriai, į lentynas, duomenų centras, ir visi that-- galėtumėte paprastai paleisti kompiuterio operacinei sistemai. Taigi kažkas like-- tai galėtų būti valdomi langai. Būtų ne "Mac OS. Nes tai tikrai ne įmonė šių dienų. Taigi būtų "Linux" arba "Solaris Unix arba BSD ar FreeBSD arba bet kurį iš kitų operacinių sistemų skaičius kad nemokamai arba komercinis. 

Ir tada jūs paleisti programa, speciali programa, vadinamas Hypervizoriaus arba virtualios mašinos monitorius, VMM. Ir tai yra produktai, jei esate pažįstamas, kaip VMware ar VirtualBox arba "Virtual PC ar kt. O ką tos programos tai yra būtent tai, kad funkcija aprašiau anksčiau. Jis sukuria iliuziją kad vieno fizinio mašina gali būti daug virtualios mašinos. 

Ir todėl šie spalvingi dėžės iki viršaus yra tapyba iš šių vaizdą. Tai Hypervizoriaus, ši gabalas programinės įrangos, ją vadina "VMware", veikia kai kurie kiti operacinė sistema, ją vadina Linux yra sukurti iliuziją, kad tai fizinis kompiuteris iš tiesų yra vienas, du, tris virtualius kompiuteriai. Taigi aš dabar nusipirkau, nes savininkas Tai įranga, vienas fizinis kompiuteris. Ir dabar aš išsinuomoti tai trijų klientams. 

Ir tie trys klientai visi manau jie turi specialų virtualios mašinos. Ir tai ne masalas ir pereiti. Tai daugiau atskleidimas, kad jūs naudojate virtualią mašiną. Bet technologiškai, mes visi turi visišką administracinę kontrolę virš kiekvienos iš šių svečias Operacinės sistemos, kuri galėtų būti bet kuris iš operacinių sistemų skaičius. 

Galiu įdiegti ką noriu. Galiu ją atnaujinti, kaip aš noriu. Ir aš net nereikia žinoti, ar rūpi kitų operacinių sistemos tame kompiuteryje, kiti virtualios mašinos, nebent visa tai pilkos savininkas Daiktai yra yra šiek tiek godus ir overselling jo ar jos išteklius. 

Taigi, jei jūs vartojate vieną fizinė mašina ir ją parduoti iki ne 200, bet 400 klientai, tam tikru mes ketiname kelionė į tuos, tie patys veikimo klausimai kaip ir anksčiau. Nes turite tik baigtinis dydis diske ir RAM ir kt. Ir virtuali mašina yra tik programa, kuri yra apsimeta, kad yra pilnavertį kompiuterį. Taigi jūs gaunate tai, ką jūs mokate už čia. 

Taigi jūs rasite internete jums gali mokėti reputacijos kompanija gal $ 100 per mėnesį už savo virtualios mašinos, arba jūsų pačių Virtualus Privatus Serveris, kuris yra dar vienas terminas už jį. Arba jūs galite rasti kai kurių praskrietų naktį, jei mokate $ 5,99 mėnesį už savo virtualios mašinos. Bet šansai yra jums nereikės beveik kiek spektaklis prieinami jums, nes jie jau buvo overselling ją taip, kaip tai darytumėte su tuo didesnis pakopos paslaugą arba geriau pardavėjas. 

Taigi, ką tai iš tikrųjų reiškia mums? Taigi leiskite man eiti į tai. Aš ruošiuosi eiti į aws.amazon.com. Tiesiog todėl, kad jie turi gražus meniu parinktis. Bet tie patys pamokos kreiptis į visa krūva kitų debesų pardavėjų. Deja, tai dažnai daugiau rinkodaros kalbėti negu nieko. Ir tai nuolat keičiasi. Taigi jūs einate į svetainę kaip šis. Ir tai tikrai ne pasakyti daug ką. 

Ir net aš, kaip aš žiūriu į tai, ar ne tikrai žinote, ką nors iš šių dalykų nebūtinai tai, kol aš pasinerti. Bet pradėkime kairėje, Compute. Ir aš ruošiuosi spausti tai. Ir dabar "Amazon" atvirai didžioji skaičius paslaugos šių dienų. Bet Amazon EC2 yra bene paprasčiausias. 

Amazon EC2 sukurs mums tiksliai vaizdas matėme prieš momentas. Tai, kaip jie padaryti daug savo pinigus į debesis. Matyt "Netflix" ir kiti yra debesyje su jais. Visa tai paprastai purus rinkodaros kalbėti. Taigi, ką aš noriu padaryti, tai eiti į Pricing-- ar veikiau eikime atvejams Pirmoji tiesiog piešti apie šią nuotrauką. 

Taigi tai skirsis pardavėjas. Ir mums nereikia gauti per giliai į čia, kaip tai visų darbų piktžolės. Bet kelias "Amazon", pavyzdžiui, nuomoja jums virtualią mašiną ar serverį debesyje yra jie gavo Šie juokingi pavadinimai rūšiuoti, kaip t2.nano, o tai reiškia mažas, arba t2.large, o tai reiškia didelis. Kiekvienas iš jų duoda jums arba vienas ar du virtualus procesorius. 

Kodėl tai virtualus procesorius? Na, fizinė mašina galėtų turi 64 ar daugiau faktinius procesorių. Bet vėl, per programinę įrangą, jie sukuria iliuziją kad, kad viena mašina gali būti divvied iki keliems naudotojams. Taigi, mes galime galvoti apie tai, kaip turintys vieną Intel procesoriaus ar du. CPU kreditai per hour-- aš norėčiau turi skaityti baudos spausdinti , ką tai iš tikrųjų reiškia. Tai reiškia, kiek mašinos galite naudoti per valandą vis-à-vis kiti klientai tame aparatūros. 

Štai kiek RAM arba atminties jus get-- arba pusę gigabaito arba 500 megabaitų, arba 1 GB arba 2. Ir tada sandėliavimo tik nurodo kokios diskus jie jums. Yra skirtingi saugojimo technologijos, kad jie siūlo. Tačiau įdomiau nei tai tada gali būti kainodara. 

Taigi, jei esate CTO arba inžinierius, kuris nėra norite paleisti serverį savo biuro, dėl kokios nors priežasties, ir tai per daug sudėtingas arba brangus pirkti serverių ir bendrai jas rasti ir mokėti nuomą fizinių narvo erdvę somewhere-- tiesiog norite sėdėti Jūsų nešiojamas vėlai naktį, įveskite savo kreditinės kortelės informaciją, ir nuoma serveriuose cloud-- gerai, mes galime tai padaryti čia. Aš ruošiuosi eiti to-- Linux yra populiarus operacinė sistema. Ir tegul tik gauti dalykų prasmės. Whoops-- per didelis. 

Taigi pažvelkime savo mažytį virtualioji mašina, kuri, atrodo, turi, mūsų tikslams, vienas CPU ir 500 megabaitų RAM. Tai gana mažas. Bet tiesą sakant, interneto serverių neturi reikia daryti viską, kad daug. Turite geresnių specifikacijų į savo kompiuterį. Tačiau jums nereikia tiems Specifikacijos šių dienų dalykus. Jūs ketinate mokėti 0,0065 $ už valandą. 

Taigi pažiūrėkime. Jei yra 24 valandų per dieną, ir mes mokate tai daug per valandą, tai kainuos jums $ 0,15 išsinuomoti, kad ypač serverio debesyse. Ir tai tik už vieną dieną. Jei mes darome tai 365-- 57 $ išsinuomoti tą konkretų serverį. Taigi tai skamba itin pigus. 

Štai taip pat itin mažas spektaklis. Taigi mes, kursus mokau čia linkę naudoti Manau t2.smalls ar t2.mediums. Ir mes galime turėti keli šimtai Vartotojų, keli tūkstančiai vartotojų, iš viso. Tai gana kuklus. Taigi pažiūrėkime, ką šis kainuotų. Taigi, jei aš tai daryti ekonomiškai kartus 24 valandomis 365, Tai vienas $ 225. Ir kursai Aš mokau, mes paprastai paleisti du viską, už atleidimas iš darbo, taip pat už veiklos rezultatus. Taigi, mes galime praleisti, todėl 500 $ už serverius kad mes gali tekti per metus. 

Dabar, jei jums reikia daugiau performance-- tegul pažvelgti atminties išvaizdą. Mes kalbėjome apie atminties gana didelis. Ir jei jums reikia daugiau memory-- ir 64 gigabaitų yra numeris klausau mentioning-- Tai beveik 1 $ per valandą. Ir jūs galite gana greitai pamatyti, kur tai goes-- taip 24 valandomis 365. Taigi dabar tai 8000 $ per metus už gana padoraus serveryje. 

Taigi tam tikru momentu, ten tai vingio taškas kur dabar galėtume išleisti 6000 $ tikriausiai ir pirkti mašiną, pavyzdžiui, kad ir amortizuoti savo išlaidas per gal du, trejus metus iš įrenginio gyvenimas. Bet ką gali stumti jums pirmenybę arba nemalonę Nuomos mašina į debesis, kaip šis? Vėlgi, tai yra panaši, turbūt, vienai iš šių Dell serveriai matėme nuotraukoje prieš šiek tiek. 

Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, tai didžiulis aukštyn kojom. Kadangi mes nepirkdami mašina, mes neturime jį išpakuoti. Neturime jį pakelti. Neturime prijunkite jį į mūsų stovo. Neturime prijungti jį. Neturime mokėti elektros sąskaitą. 

Neturime pasukti oro kondicionierius įjungtas. Kai kietasis diskas miršta, mes neturime vairuoti atsižvelgiant į naktį viduryje siekiant ją išspręsti. Neturime įsteigti stebėseną. Neturime to-- sąrašas tęsiasi ir visų fizinių ko Jums nereikia daryti nes "debesies". 

Ir, kad būtų aišku, Debesis kompiuterija tai labai netinkamiausias terminas. Tai tikrai tiesiog reiškia mokėti ką nors kitur paleisti serverius už jus, arba nuomos vietos kažkieno serveriuose. Taigi terminas "Debesis kompiuterija" yra nauja. Idėja yra dešimtmečių senumo. Taigi tai gana įtikinama. 

Ir ką dar jums gauti? Na, jūs taip pat gausite galimybę padaryti viską dėl namuose nešiojamas. Kitaip tariant, visas nuotraukos man buvo tiesiog drawing-- ir tai buvo ne taip seniai, kad net Buvau nuskaitymo aplink serveryje aukšte įkišant į kabelių kiekvienas iš linijų, kad matote, ir tobulinti operacinę sistemos, kintantys diskai aplink. Yra daug fiziškumą į visa tai. 

Bet kas gražu apie virtualus mašinos, kaip ir pavadinimas rūšies rodo, dabar yra žiniatinklio sąsajos pagal kurias jei norite, kad ekvivalentą nuo linijos, šiame serveryje į kitą, tiesiog įveskite, tipas, rūšis, spustelėkite ir vilkite, spustelėkite Pateikti ir voila, turite jį laidinis iki beveik. Kadangi visa tai daroma programine įranga. Ir priežastis tai padaryti į programinę įrangą ir vėl nes mes turime tiek daug RAM ir taip, daug procesoriaus mums prieinama šių dienų, nors visi kad kita užima daug laiko, jis yra lėtesnis paleisti dalykus programinės įrangos, nei aparatūros, kaip tai lėčiau naudoti mechaninis prietaisas kaip kietąjį diską nei RAM, kažkas grynai elektroninis. Mes turime tiek daug lėšų mums prieinama. Mes, žmonės yra tarsi nekūrybiškai lėtas. Ir todėl dabar mašinos gali padaryti tiek daug daugiau per laiko vienetą. Mes turime šiuos gebėjimus daryti tai, ko praktiškai. 

Ir aš pasakysiu kursus Aš mokau, pavyzdžiui, čia, turime apie gal keliolika ar taip iš viso virtualių mašinų kaip kad veikia bet kuriuo laikas daro priekinės stuff, daro Atgal pabaiga stuff. Mes turime visus mūsų saugojimui. Todėl bet video, taip pat dalykų kaip tai, kad mes šaudymo, mes galų gale išleisti į debesis. "Amazon" paslaugomis, vadinamų "Amazon S3", jų paprastas saugojimo paslauga, kuri yra kaip diske debesyje. Jie turi kažką vadinamas CloudFront, kuris yra CDN paslauga turinys Pristatymas tinklo paslauga, kuri reiškia, kad jie priimti visus savo failus ir Jums Automagically atkartoti ją aplink pasauli. 

Taigi jie neturi daryti Preemptively. Bet pirmą kartą kažkas Indija prašo failą, jie potencialiai talpyklą ją vietoje. Pirmą kartą Kinijoje, Pirmą kartą Brazilijoje tai atsitiks, jie pradėti spartinimo ją vietoje. Ir jūs neturite daryti bet kad. Ir todėl jis yra toks neįtikėtinai įtikinamų šių dienų perkelti daiktus į debesis. Kadangi jūs turite šią galimybę tiesiog , neturi žmonės daro beveik tiek, kiek darbai. Ir jūs tiesiog nereikia, nes daugelis žmonės daro šias darbo vietas anymore-- "OPS", arba veiklos vaidmenys, nebėra. Jūs tikrai tiesiog reikia vystymo mažiau inžinieriai kurie gali tiesiog daryti tai, ko praktiškai. Iš tikrųjų, tiesiog suteikti tu tai jausmas, leiskite man eiti į kainodarą vienas kitas produktas čia. Pažiūrėkime, kažką panašaus į CDN S3. Todėl tai yra iš esmės virtualus kietajame diske debesyje. Ir jei mes slinkti žemyn pricing-- todėl 0.007 $ už gigabaitą. Ir that's-- kaip mes tai darome? Manau, kad per mėnesį. 

Taigi, jei tai vienam MĖNUO arba per dieną? Danas, tai per dieną? Tai per mėnesį, Gerai. Taigi, jei tai yra už MĖNUO Atsiprašome, tai 0,03 $ per mėnesį. Yra 12 mėnesių iš metų. Taigi, kiek duomenys gali galite saugoti debesyje? Gigabyte nėra didelis, bet aš nežinau, kaip 1 terabaito, taip, kaip 1000 iš tų. Tai dar ne viskas, kad daug. Tai 368 $ saugoti terabaito Duomenų Amazon debesis. Taigi, kas yra kai kurie iš profesinės kompromisai, tada? Jis gali ne visi geri. Nieko mes kalbėjome apie šiandien yra tarsi be laimikio arba sąnaudomis. Taigi, kas blogai apie persikėlimą viskas į debesis? Auditorija: Saugumas. DAVID Malan: Gerai, ką reiškia? Auditorija: [NESIGIRDI] DAVID Malan: Taip, tiesa. Ir jūs tikrai norite Kažkoks atsitiktinis inžinieriai "Amazon", kad jūs niekada patenkinti turintys fizinė prieiga prie šių kompiuterių, ir jei jie tikrai norėjo, virtualią prieigą? Ir net jei teorija software-- gerai, šifravimo gali visiškai apsaugoti jus nuo tokių. Taigi, jei kas esate saugoti savo serveriuose yra encrypted-- mažiau rūpesčių. 

Bet kaip tik žmogus turi fizinį Prieiga prie mašina, šifravimo žemę, visi statymai yra tarsi išjungtas. Galbūt žinote iš praeities kad kompiuterių ypač net jei jums tuos dalykus vadinami "BIOS slaptažodžius," buvo, kai jūsų darbastalio įkrautas iki, norite paraginti su slaptažodžiu, kad neturi nieko bendro su Langai, galite paprastai tiesiog atidarykite važiuoklės mašina, susirasti maža maža smeigtukai, ir naudoti kažką vadinama megztinis ir tiesiog prijungti šie du laidai apie sekundę, taip užbaigiant grandinės. Ir kad būtų pašalinti slaptažodį. 

Taigi, kai jūs turite fizinę prieigą prie prietaisas, galite padaryti kažką panašaus, kad. Galite pašalinti standųjį diską. Jūs galite gauti prieigą prie jo, kad taip. Ir todėl tai yra, kodėl, iš Dropbox atveju, Pavyzdžiui, tai šiek tiek jaudina, kad ne tik jie turi duomenis, nors tai šifruota, jie taip pat turi raktą. Kitos rūpesčių? 

Auditorija: [NESIGIRDI] DAVID Malan: Taip, tai labai true-- į Googles, obuoliai, šio pasaulio Microsofts. Ir iš tiesų, kiek laiko turi jums turėjo savo iPhone? Taip, suteikti arba užtrukti. Auditorija: [NESIGIRDI] DAVID Malan: Aš atsiprašau? Jūs esate tarp tų, kurie turi iPhone, tiesa? Auditorija: Taip. DAVID Malan: Kaip ilgai jums teko savo "iPhone"? Auditorija: [NESIGIRDI] DAVID Malan: Gerai, kad "Apple" tiesiog žino kur jūs buvote kiekvienas valandą dieną per pastaruosius penkerius metus. 

Auditorija: [NESIGIRDI] DAVID Malan: Kuris yra puikus bruožas. Auditorija: [NESIGIRDI] DAVID Malan: Taip, bet kompromisą tikrai. Auditorija: [NESIGIRDI] 

DAVID Malan: Taip, tai labai lengva. Auditorija: [NESIGIRDI] DAVID Malan: Kitos praradimas? Auditorija: [NESIGIRDI] DAVID Malan: Absolutely-- technologiškai, ekonomiškai, tai gana įtikinamų rūšiuoti įgyti šias masto ekonomiją ir perkelti viską į vadinamasis debesis. Bet jūs tikriausiai norite eiti su kai kurie iš didžiausių žuvis, Amazonės, The akiniai, The Microsofts-- Rackspace yra gana big-- ir keli kiti, o ne nebūtinai skraidyti naktį žmonės kam tai labai lengva padaryti šios rūšies technikos šiandien. Ir tai, kuriems galite mokėti 5,99 $ per mėnesį. Bet jūs tikrai gauti ką mokate. 

Kai sakote [NESIGIRDI], tai, kai dalykų, pavyzdžiui, šių penkių devynetų sugalvoti, kuriuo, net jei technologiškai mes tikrai negali garantuoti 99.999, mes tiesiog pastatyti tam tikros rūšies Bausmės su sutartimi taip, kad jei, kad nutinka, ne mažiau kaip ten kai kaina pas mus, pardavėjas. Ir tai, ką būtų galima paprastai būti gauti juos sutikti. 

Auditorija: [NESIGIRDI] 

DAVID Malan: Ir vienas tarsi palaiminimas yra tai, kad net tada, kai mes einame žemyn, nes Pavyzdžiui, ar net kai kurios įmonės, tikrovė yra "Amazon", pavyzdžiui, turi tiek daug darn klientai, gerai žinomų klientų, vykdyti veiklą tam tikrų duomenų centrų kad kai kažkas tikrai negerai, kaip aktų Dievo ir oras ir tokių, jei yra kokia nors sidabro pamušalas rūšiuoti, tai, kad esate labai gera kompanija. Jūsų svetainė gali būti neprisijungęs. Bet taip yra kaip pusė populiarus internete. Ir todėl, be abejo, šiek tiek daugiau skanus savo klientams jei tai daugiau interneto dalykas nei acme.com dalykas. Bet tai iš apgauti tiek. 

Taigi, kalbant apie kitus dalykus pažvelgti, tik todėl, kad mes neatmeta kitiems, jei jūs einate į "Microsoft Azure", jie turėti tiek Linux ir Windows stuff tai panaši į Amazon. Jeigu jūs einate į Google Compute Engine, jie turi kažką panašaus, taip pat. Ir tik Apskrito Šie debesys aukos, Aš paminėk vienas kitas dalykas. Tai populiarus svetainė kad atstovas paremta tam tikromis technologijomis klasės. Tie, mes tiesiog kalbėjo apie, "Amazon", būtų IaaS, Infrastruktūra kaip paslauga, kur Jūs Rūšiuoti fizinio Techninė įranga kaip paslauga. Yra SAAS. Tiesą sakant, leiskite Užrašoma tai žemyn. 

IAAS-- infrastruktūros Kaip paslauga SaaS, ir PAAS, kuris yra nepaprastai paini akronimai kurie apibūdina trys skirtingų tipų dalykų. Ir patys akronimai nelabai svarbu. Visa tai debesies daiktų mes ką tik buvo kalbama apie, žemesnio lygio dalykų, The Virtualizacija aparatūros ir saugojimo į vadinamosios debesų, ar tai "Amazon", "Microsoft", "Google" ar kitą. 

Programinė įranga kaip service-- visi iš mūsų rūšies naudoti tai. Jei naudojate "Google Apps" "Gmail" ar kalendorių, bet kurie iš šių interneto pagrindu prieš paraiškų, kad 10 metų mes būtų dvigubai paspaudėte piktogramas mūsų darbastalio, programinė įranga kaip paslauga dabar tikrai interneto programa. Ir platforma kaip paslaugų rūšies priklauso. 

Ir vienas iš pavyzdžių aš duosiu jums čia į debesų computing-- kontekste ten viena bendrovė, kuri gana populiarus šių dienų, Heroku. Ir jie yra paslauga, platforma, jei norite, kad veikia ant "Amazon" infrastruktūra. Ir jie tiesiog tai padaryti dar lengviau kūrėjams ir inžinierių gauti interneto grindžiamas taikomąsias programas internete. 

Ji yra skausmas, iš pradžių, naudoti "Amazon Web Services ir kitų dalykų. Nes jūs iš tikrųjų turi žinoti ir suprasti apie duomenų bazių ir interneto serverių ir apkrovos balansavimo ir visi stuff Aš tiesiog kalbėjo apie. Kadangi visi "Amazon" padarė ne paslėpti tuos projektavimo iššūkius. Jie ką tik virtualių juos ir perkelti juos į naršyklę, į programinę įrangą vietoj aparatūros. 

Bet tokių kompanijų kaip Heroku ir kita Paas teikėjai, Platforma kaip paslauga, jie naudoja tuos barebone pagrindai kad mes tik kalbėjome apie, ir jie pastatyti lengviau naudoti programinę įrangą, ant jo taip, kad jei norite gauti žiniatinklio paraišką internete šių dienų, jūs tikrai turite žinoti, kaip programuoti. Jūs turite žinoti, Java arba Python ar PHP arba Rubinas arba kitomis kalbomis krūva. 

Bet jūs taip pat turite vietą įdėti ją. Ir mes kalbėjome anksčiau apie gauti bendrove hostingową. Tai tarsi panašių viduryje 2000-ųjų požiūris į vis kažką internete. Šiandien galite vietoj mokėti kas nors kaip Heroku keletą dolerių per mėnesį. Ir iš esmės, kai jūs padaryti kai pradinę konfigūraciją, atnaujinti jūsų svetainę, jums tiesiog įrašykite komandą lange. Ir kokia kodas parašiau čia į savo kompiuterį iš karto gauna platinami bet kokį skaičių Serverių debesyje. 

Ir Heroku rūpinasi visi sudėtingumo. Jie išsiaiškinti visą duomenų bazę Daiktai, visą apkrovos balansavimo, visi iš galvos, kad dažnai naudoja tiesiog parašyta ant lentos, ir paslėpti visa tai už jus. Ir mainais, jūs tiesiog mokėti juos šiek tiek daugiau. Taigi jūs turite šias infrastruktūras, paslauga, platformos kaip paslaugos, ir tada programinė įranga kaip paslauga. Tai, vėlgi, tai abstrakcija arba sluoksniavimasis. 

Turite klausimų apie debesis arba statybos iš savo infrastruktūrą? Gerai, kad buvo daug. Kodėl mes einame į priekį ir atsižvelgti į mūsų 15 minučių pertrauką čia. Mes grįžti su keliais naujų koncepcijų ir iš šiek tiek praktinės galimybės prieš vakarą baigėsi. 