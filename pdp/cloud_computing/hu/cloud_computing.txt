DAVID MALAN: Rendben, szívesen vissza. Mielőtt áttérnénk a számítási felhő, Gondoltam, rövid szünetet ha vannak rendezetlen kérdések vagy téma, hogy jött az ebéd során hogy talán most is érdekelheti. KÖZÖNSÉG: [hallható] 

DAVID MALAN: OK. Ó, oké. KÖZÖNSÉG: [hallható] 

DAVID MALAN: Nem, természetesen. Rendben, remélhetőleg az összes problémák merülnek fel a következő néhány órában és holnap, különösen. De vessünk egy pillantást, akkor, ahol Az utolsó beszélgetés létrehozásáról egy weboldal vezet, általában amikor a számítási felhő, felállítása szerver architektúra, a fajta döntések hogy a mérnökök és fejlesztők és a vezetők kell, hogy mikor jön hogy többet tesz, mint csak feliratkozik a havi 10 $ webhoszting ha valóban szeretnénk kiépíteni saját infrastruktúrával. És megpróbáljuk lekötni ezt vissza, például a Dropbox és mások akárcsak ők. 

Tehát kezdjük vizsgálni milyen problémák merülnek fel, mint az üzleti lesz jó, és jó problémák merülnek fel. Így a nagyon legegyszerűbb bírhatja Néhány cég, amely a web szerver, lehet, hogy, mondjuk, egy szerver, mi csak felhívni, hogy úgy néz ki, mint ez. És ezekben a napokban, a legtöbb servers-- és menjünk valójában egy képet erre csak úgy hogy ez egy kicsit kevésbé homályos. 

Tehát Dell állvány server-- vissza a nap, ott voltak mainframe számítógépek hogy vette fel egész szoba. Ezek a napok, ha volt hogy egy szerver, nézhet egy kis valamit, mint ez. Szerverek mérik, hogy milyen nevezzük rack-egység, vagy VT. És egy VT 1,5 hüvelyk, amely egy ipari szabvány. Tehát ez úgy néz ki, mint egy két RU szerver. Tehát 3 hüvelyk magas. És ők általában 19 hüvelyk széles, ami azt jelenti, az összes ilyen cucc szabványosított. 

Tehát, ha megnézi egy adat center-- nem csak egy szerveren, de most megnézzük a Google adatközpont és hátha látni egy szép képet a Google Képek. Ez sokkal jobb, mint amit megvilágított jellemzően találni, és még sok szexisebb keres eredményeként. De ez az, amit úgy néz ki, mint egy pár Száz szerverek minden ugyanezen a méret, valóban, rack után rack-után állvány után rack-ben egy adatközpontban. 

Valami Így-- ez is jól legyen a Google, mert én googled Google. De lehet reprezentatív Az általánosabb adatközpont, ahol sok cégek jellemzően együttes elhelyezése. És együtt található általában azt jelenti, hogy elmész egy ilyen helyre Equinix vagy más gyártók, amelyek nagy raktárak, amelyek sok energiát, sok hűtés, remélhetőleg rengeteg biztonsági, és az egyes ketrecekben körülzáró állványok szerverek, és akkor sem bérbe az állványok vagy magával az állványokat. 

És az egyes társaságok, induló különösen, lesz valamilyen biometrikus bejutni a ketrecbe, vagy egy kulcs, vagy kulcs kártyát. Megnyitod az ajtót. És belül ott is csak egy alapterületét lábnyom hogy te fizet, belseje amely akkor tegye, amit akarsz. 

És akkor általában fizet a teljesítmény. És akkor fizet a lábnyomokat. És akkor fizet magad a szerverek hogy te hozzuk, hogy a tér. És amit majd a lehetőséget kell adni az fizetnie valakinek Az internet-kapcsolat. Fizethet bármennyi A gyártók, akik mind általában jön be, hogy az adatközpontok. 

De az igazán érdekes kérdés az, valójában mi megy azokban állványok? Lehet, minden nagyon jól néz ki, mint amit most láttam. De különböző funkciókat és szükség lehet a különböző dolgokat. És lássuk ténylegesen motiválja a vita azzal a kérdéssel, hogy mi a probléma kezd keletkezik, ha sikeres? 

Szóval van egy weboldal hogy írtál. És talán ez adja widgetek vagy valami ilyesmi. És ha már nagyon jól értékesítési kütyü az interneten. És elkezdi tapasztalni Egyes tünetek, a honlapon. Mi lehet néhány A műszaki tünetek hogy a felhasználók jelentést az üzleti növekszik és virágzik és a honlap részesülő, hogy? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, pontosan. Tehát lehet, hogy a lassulás az Ön honlapján. És miért lehet, hogy ez megtörténjen? Nos, ha azt feltételezzük, számára A vita kedvéért most, hogy te egy E kereskedelmi webtárhely hogy beszéltünk ebéd előtt, hogy akkor fizet bizonyos számú dollárt egy hónapra, és amit már kifizetett az éves költsége a domain megnevezni, hogy a web host valószínűleg overselling forrásaikat bizonyos mértékig. Tehát lehet, hogy egy felhasználónevet és a jelszó a szerveren. De úgy is, számos más, vagy több tucat, vagy akár több száz más felhasználók. 

És weboldalak élnek fizikailag ugyanazon a szerveren. Miért lehetséges ez? Nos ezekben a napokban, szerverek mint ez tipikusan több merevlemez, talán annyi, mint hat vagy több merevlemez, amelyek mindegyike lehet annyi mint 4 terabájtos ezekben a napokban. Tehát lehet, hogy 24 terabájtnyi helyet csak egy kis szerver, mint ez. 

És akkor is, ha lopni néhány, hogy a tér redundancia, biztonsági mentés céljából, ez még mindig elég sok helyet. És természetesen egy tipikus honlap nem kell, hogy sok helyet. Csak regisztráció felhasználók és tárolása is megbízások nem tett meg minden, hogy sok helyet. Szóval lehet particionálni, hogy elég egy kicsit, és így minden felhasználó csak egy kis szeletét. 

Közben, egy számítógép mint ez manapság jellemzően több CPUs-- nemcsak Egy, talán két, talán négy, talán 16, vagy még több. És ezek mindegyike CPU van egy úgynevezett egy mag, ami olyan, mint a agy belsejében egy agy. Tehát valójában a legtöbb mindenki itt modern laptop valószínűleg egy kétmagos vagy négymagos CPU-- és valószínűleg csak Egy CPU belsejében egy laptop ezekben a napokban. De asztali számítógépek és rack számítógépek, mint ez lehet, hogy jó néhány több CPU, és viszont magot. 

És őszintén szólva, még a Mac és PC a ma, akkor nem igazán kell a kettős mag vagy quad magok, hogy ellenőrizze az e-mail. Ha van olyan szűk, ha jön a számítógép használata, Ön az emberi valószínűleg a leglassabb dolog, hogy a számítógép. És nem lesz képes ellenőrizze az e-mail minden gyorsabb, ha van négyszer annyi CPU vagy maghoz. 

De ugyanaz a fajta Az igaz a szerveren. Egyetlen weboldal nem feltétlenül kell több, mint egy CPU vagy egy mag, egy kis agy belsejében csinál minden gondolkodás és a feldolgozás. Tehát gyártók hasonló kezdett szeleteljük fel ezeket az erőforrásokat így talán a honlapon lesz egy mag, a honlapon lesz egy mag, vagy talán mi megosztása egy ilyen magot. Mi is közös lemezterület. És mi is megosztás RAM, vagy Random Access Memory előtti, amelyből van még egy véges mennyiségű. 

És ez a legfontosabb. Nem számít, milyen drága A számítógép volt, van még egy véges erőforrások mennyisége benne. És így a több és minél többet próbálja fogyasztani ezeket az erőforrásokat, A lassabb dolgok válhatnak. De miért? Miért dolgok lassul tünete a szerver túlterhelését? Mi történik? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, pontosan. Azt javasolta, hogy a korábbi RAM egy olyan típusú memória. Ez illékony, ahol ez ahol az alkalmazások és az adatok tárolt amikor ők használják. Így aztán ott van csak véges számú dolog, amit látszólag csinálni egyszerre. És ez is gyorsabb, ami jó dolog. De ez is drágább, ami rossz dolog. És ez is így van jelen az alacsonyabb mennyiségben, mint a lemezterület, merevlemez tér, amely hajlamos lehet olcsóbb. 

Más szóval, ha Lehet, hogy 4 TB lemezterület a számítógépen. De lehet, hogy 4 gigabyte-ban vagy 64 gigabájt, nagyságrendileg, faktorral 1000 kevesebb, RAM a számítógép. Tehát mit jelent a számítógép nem? Nos, tegyük fel, hogy megvan 64 gigabyte RAM szerveren, mint ez, amely lenne elég gyakori, ha nem alacsony ezek a napok. De tegyük fel, hogy van olyan sok a felhasználók ezzel sok mindent hogy milyen fajta szükség 65 gigabájt memóriával kezelni az összes, hogy egyidejű használata? 

Nos, akkor is csak azt mondják, Sajnos néhány felhasználók száma Csak nem tudja elérni az oldalt. És ez az intézkedés legvégső esetben biztosan. Vagy, mint a működési rendszer, mint a Windows vagy Mac OS vagy Linux vagy Solaris vagy bármilyen Számos más operációs rendszerekkel, hogy a szerveren, lehetett csak úgy, tudod mit? Már csak 64 GB RAM-mal. Valahogy szükség 65. Szóval tudod mit? Megyek, hogy 1 gigabájt Érdemes az adatok a RAM-ban Ez volt a legrégebben elérhető és csak mozgás lemezre átmenetileg, Szó átmásolni a gyors memóriájából a lassabb memória így én is majd kezelni ezt a 65. gigabyte memória igény, hogy némi számítást rajta. Aztán amikor végeztem ezzel, hogy Én csak mozgatni, hogy a lemezre, mozgatni a másik RAM én átmenetileg növelte lemezen vissza a tényleges hardver így én vagyok ilyen multitasking. 

Úgyhogy a fajta üzembe dolgokat átmenetileg ebben lassabban tér úgyhogy a látszatot keltik, kezelési mindenkinek. De van egy lassulás. Miért? Nos, belül ilyen kemény lemezek manapság mi? Inkább mi tesz egy kemény meghajtó eltér RAM a lehető legjobban tudja most? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: OK, igaz. KÖZÖNSÉG: [hallható] 

DAVID MALAN: Tehát nagyon igaz. És ez egy mellékhatása, vagy a szolgáltatás Az a tény, hogy a RAM valóban gyorsabb. És ezért azt szeretnénk, hogy használja a jelenlegi használat. És egy lemez lassabb. De ez az állandó, vagy felejtő. Szóval azt hosszú távú tárolására. De tekintve végrehajtására, ha felnézek egy úgynevezett DIMM, Dual Inline Memory Modul, ez az, amit egy darab RAM tipikusan úgy néz ki. 

Tehát belsejében a Mac-- ez egy hiba. Belül a Mac és PC, a desktop számítógépek volna a pálca a memória, ahogy azt hívják őket, vagy DIMM-ek vagy SIMM vissza a nap, a memória úgy néz ki, mint ez. A laptopok valószínűleg dolgok harmad akkora, vagy fele méretű. Ők egy kicsit kisebb, de ugyanaz a ötletem kis db zöld szilícium ostya vagy műanyag kevés fekete zsetont rájuk sok vezetékek összekötő mindent. Lehet, hogy egy csomó ezeket számítógép belsejében. De az itt elvihető ez teljesen elektronikus. Már csak az elektronok áramlik ezen az eszközön. Ezzel szemben, ha megnézzük A belsejében egy merevlemez és húzza fel a képet Itt kell helyette valami ilyesmit, amely nem rendelkezik a villamos megy keresztül végül. De mi is kipattan rád ezt a dolgot? KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, van látszólag mozgó alkatrészek. Ez olyan, mint egy régi rekordot lejátszó vagy lemezjátszó. És ez elég sok van. Ez egy kicsit cifrább, mint hogy-- mivel a lemezjátszó használt hornyok a rekord, ez valójában használja apró mágneses részecskék hogy nem egészen értem. De ha egy kicsit mágneses részecske úgy néz ki, mint ez, ez tekinthető a 1. És ha ez így néz ki, észak-déli, hanem a dél-észak, ez lehet egy 0. És látni fogjuk holnap hogyan építhetünk attól, hogy több érdekes dolgot. 

De bármi, ami van, hogy fizikailag mozgatni biztosan fog menni lassabban mint a fény sebessége, az elméletben milyen egy elektron áramlás a, bár reálisan nem egészen. Tehát mechanikus devices-- sokkal lassabb. De ők olcsóbbak. És akkor illik annyira További adatok bennük. Tehát az a tény, hogy van létezik a világon valami nevezett virtuális memória, egy merevlemez, mint ez mintha ez RAM a felhasználó számára, egyszerűen mozgó adatok RAM-ból a merevlemezre, majd a mozgó vissza, amikor szükség van újra létrehozza a lassulás. Mert szó szerint kell másolni egyik helyről a másikra. És az a helyzet, amit a másolás, hogy és re valójában lassabb, mint a RAM ahol szeretné, hogy legyen. 

Az alternatív megoldás here-- Ha nem tetszik, hogy lassul, és a virtuális memória fajta is túlterhelt, mi más megoldás erre a problémára? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Nos, növelni a virtuális memória azt tegyük ezt egy még nagyobb léptékű. Tudtuk kezelni a 66 gigabájt érdemes A memória igényeket, illetve 67 gigabájt. De tegyük fel, én nem szeretem ez a lassú le, sőt Azt akarom, hogy kapcsolja ki a virtuális memóriát, ha ez egyáltalán lehetséges, mi mást dobni ezt a problémát oldja meg, ahol szeretnék kezelni több felhasználó és több memóriát követelmények mint én fizikailag már abban a pillanatban? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Sajnos. Így a CPU és a magok ők a véges erőforrás. És nincs analóg ebben az összefüggésben. Jó kérdés, mégis. Tehát csak hogy tisztázzuk is, ha belsejében ez a számítógép, mondjuk, egy bottal RAM úgy néz ki, Így-- és így fogjuk hívni ezt a RAM. És itt van a merevlemez-meghajtót. És én csak felhívni a képileg, mint egy kis kört. Jelenleg 0 és 1-es, mind a these-- adatokat fogjuk általánosítani azt. 

És alapvetően, ha a felhasználó fut egy alkalmazás, mint, mondjuk, egy weboldal, amely előírja, hogy ezt mennyi RAM egy felhasználó, amit én javasol, útján ez a dolog nevezett virtuális memória, az, hogy csak ideiglenes jelleggel hogy itt, hogy most mozoghat valaki másnak a memória követelmények ott. És amikor ez kész, Tudom másolni ezt vissza felett és ez megy itt, ezzel megint amit akartam valahol máshol teljesen. 

Tehát csak egy csomó Switcheroo, az elvihető itt. Tehát, ha nem tetszik ez, és te nem szeretnénk, hogy semmit a merevlemezen, mi fajta nyilvánvaló vállalkozó megoldása A probléma, vagy a mérnök megoldás, ami azt illeti, túl? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, úgy értem a szó szoros értelmében dobja pénzt a problémát. És valóban, ez a tökéletes segue hogy néhány, a magasabb szintű viták a számítási felhő. Mivel sok ez motiválja a pénzügyi döntések, nem is feltétlenül a technológiai. Ha 64 giga RAM túl kevés, jól, miért nem kap a 128 GB RAM? Miért nem kap 256 gigabájt RAM? Nos, miért ne? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Nos, ez költségek több pénzt, az biztos. És ha már van tartalék lemezterület, hatékonyan, vagy azzal egyenértékű, lemezterület, így sokkal olcsóbb, akkor akár azt is használni. Tehát megint itt van ez a kompromisszum, hogy láttuk még korábban ezen a reggelen, ahol már tényleg nem szükségszerűen helyes válasz, ott csak jobb vagy rosszabb válasz annak alapján, amit valóban törődnek. 

Tehát van még a technológiai realitásokkal. Nem tudok vásárolni egy számítógépet, tudtommal, egy billió gigabyte RAM most. Ez csak fizikailag nem létezik. Így van némi felső korlátja. De ha valaha is, vásárolt a fogyasztó Mac vagy PC, is, általában ott van A görbe funkciók ahol lehet egy jó, egy jobb és egy a legjobb számítógépet. 

És a marginális hozam a dollár vételi A legjobb számítógépes versus A jobb számítógépes Lehet, hogy nem majdnem olyan magas, mint a kiadások egy kicsit több pénzt és egyre jobb számítógép az jó számítógép. Más szóval, ha fizetünk egy prémium, hogy a felső sorban. 

És mit fogunk látni a vita a számítási felhő hogy mi a közös ezekben a nagyon nap, és milyen cégek, mint a Google korán népszerűvé, nem fizet A és az épület nagyon divatos, drága souped fel számítógépek sok-sok mindent, hanem a vásárlás, vagy az épület szép szerény számítógép, de sok közülük, és használ valamit, ami általában úgynevezett horizontális skálázás helyett A függőleges méretezést. 

Tehát a függőleges méretezést azt jelenti, hogy több RAM, több lemezt, több mindent, és egyfajta befektetni függőlegesen a hardver így csak most a legjobb a legjobb a legjobb, de fizetünk érte. Vízszintes skálázás fajta kap a alsó szint dolgokat, a jó modell, vagy akár a rosszabb modell, de kap sok közülük. De amint kap egy halom them-- például, ebben az esetben, webszerverek, ha ez az egyik szerver vagy egy internetes fogadó nem elegendő, majd csak ösztönösen, a megoldás erre a problémára a terhelés vagy a túlterhelés a szervereket az vagy kap egy nagyobb szerver vagy, amit én itt javasolt helyett méretezés függőlegesen úgy mondjam, lenne, tudod mit? Csak kap egy második egy ilyen. Vagy talán még kap egy harmadikat. De most már létre mérnöki probléma természeténél fogva ez az üzlet vagy pénzügyi döntés. Mi a mérnöki probléma most? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, hogyan csatlakoztatja őket és-- sajnálom? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Jobb, mert még mindig Rézfúvós lévén ha ismét bevezeti engem ebbe a képbe, ha ez a laptop valahol az interneten, ami most között én és a cég beszélünk, Most azt kell kitalálni, hogy mely szerver tudom küldeni az adott felhasználó? És ha van más felhasználókkal, például ezt, és akkor ez itt, és talán ez az A felhasználó, ez a felhasználó B, ezt a felhasználó a C, és ez a szerver 1, 2, és 3-- most intuitív válasz talán itt is csak, küldünk az A felhasználó 1 és B-2 és C 3-ra. És tudjuk kezelni 3-szor annyi felhasználó. 

De ez egy leegyszerűsítés. Hogyan döntik el, hogy kit küld hol? Így próbáljuk meggyőzni ezen keresztül. Tehát tegyük fel, hogy a számítógépek A, B, és C ügyfelek, és a szerverek 1, 2, és 3 vízszintesen méretezett szervereket. Így ők a fajta azonos. Ők minden futó ugyanazt a szoftvert. És ők is mind ugyanezt csinálja. De azért van hárman annyira hogy tudjuk kezelni a három annyi ember egyszerre. 

Tehát tudjuk, hogy a mi vita ebéd előtt hogy van hardver között A laptopok és a szerverek. De majd csak egyfajta általánosítása hogy most az interneten, vagy a felhő. De tudjuk, hogy az otthonomban, ott valószínűleg egy otthoni router. Közel a szerverek, ott valószínűleg útválasztó, DNS szerver, DHCP. Van bármi lehet akarunk ebben a történetben. 

Tehát hogyan kezdjük dönteni, amikor a felhasználó egy megy something.com, amely szerver útvonalon a felhasználó? Miként kezdjük elmondani ezt a történetet? KÖZÖNSÉG: Terhelés elosztás? DAVID MALAN: Terhelés elosztás. Mit értesz ez alatt? 

Közönség: Visszatérő ahol a legtöbb használat és amely az egyik, az a legtöbb rendelkezésre álló forrásokat. DAVID MALAN: OK, hadd be egy új típusú hardvert hogy még nem tárgyalt, amely Pontosan, hogy a terhelés kiegyenlítő. Ez is lehet, hogy csak a szerver. Ez lehet pontosan olyanok, mint Az egyik láttunk egy perce. A terhelés kiegyenlítő tényleg csak egy darab szoftver hogy fut a hardveren. 

Vagy lehet fizetni egy eladó, mint a Citrix vagy mások, Cisco vagy mások. Fizethet a saját hardver, amely a hardver terhelés kiegyenlítő. De ez csak azt jelenti, előre telepített terheléselosztás szoftvert a hardver és eladott neked együtt. Tehát akkor csak rajzolni, mint egy téglalap céljainknak. 

Hogy most tudok végre egy terheléselosztót? Más szóval, amikor a felhasználó egy akar látogassa meg oldalamon, kérésükre valahogy vagy más, valószínűleg útján azokat router beszéltünk korábban, fog végül eléri ez a terhelés kiegyenlítő, aki majd szüksége van, hogy a routing-szerű döntést. De ez útvonaltervezést sort Egy magasabb cél most. Ez nem csak arról szól, hogy A pont a pont B. Arról van szó, eldönti, hogy mely B pont a legjobb az them-- 1, 2, vagy 3 ebben az esetben. 

Nos, hogyan dönt arról, hogy menni 1, 2, 3? Mi lehet ez a fekete doboz, így a beszélni, csinál a belsejében? Ez is egy másik példa számítástechnika absztrakció. Szó szerint kiállított terheléskiegyenlítő mint egy fekete doboz, fekete tintával, belül amelynek néhány érdekes logika, vagy mágikus sőt, ebből kell, hogy jöjjön egy decision-- 1, 2, vagy 3. És a bemenet csak A. 

KÖZÖNSÉG: [hallható] DAVID MALAN: Sajnálom? KÖZÖNSÉG: [hallható] DAVID MALAN: Rendben, hogyan lehet, hogy mi kategorizálja a típusú ügyletek itt? 

KÖZÖNSÉG: weboldal megtekintése versus adatbázis-lekérdezések. DAVID MALAN: OK, ez jó. Így talán ez a felhasználó egy azt akarja, hogy olyan weboldalt tekint. És lehet, hogy még statikus tartalom, valamit, ami megváltoztatja ritkán, vagy soha. És úgy tűnik, mint egy nagyon egyszerű művelet. Így talán majd csak önkényesen, de ésszerűen, mondjuk, 1 szerver, a célja az életben, hogy csak szolgálja ki statikus tartalom, fájlok ritkán, vagy soha, a változás. Lehet, hogy a képek az oldalon. Lehet, hogy ez a szöveg az oldalon, vagy más ilyen fajta érdektelen dolgok, semmi tranzakciós, sem dinamikus. 

Ezzel szemben, ha a felhasználó egy ellenőrzi ki ő bevásárlókosár igényel adatbázist, valahol tárolni és ne feledje, hogy tranzakció, valamint Talán ezt a kérést kell menni a szerver 2. Tehát ez jó. Így tudjuk tölteni egyensúly alapján hogy milyen típusú kéréseket. Hogy más is tesszük ezt? Milyen másik-- 

KÖZÖNSÉG: alapján a szerver kihasználása és a kapacitás. DAVID MALAN: Jobb, OK. Szóval említette, hogy korábban, Kareem. Tehát mi lenne, ha némi bemenet A [hallható] szerverek között 1, 2, és 3. e terheléselosztót, hogy ők csak folyamatosan tájékoztatja A terhelés kiegyenlítő milyen az állapot? Mint, hé, terhelés kiegyenlítő, Én 50% -os kihasználtsággal. Más szóval, azt kell fele annyi felhasználó én is képes kezelni most. Hé, terheléselosztó vagyok 100% -os kihasználtságot. Hé, terheléselosztó, 0% -os kihasználtságot. A terhelés kiegyenlítő, ha ez kialakítva oly módon, hogy vehet azokban megjegyzések a bemenet, akkor ezután dönt, ó, 2. szám eléri a 100%. Hadd Levél nincs jövő kéréseket neki más, mint a felhasználó már csatlakozott. Ez a fickó 0%. Küldjük a nagy forgalmú neki. Ez a fickó azt mondta, hogy ez a 50% -ot. Küldjük némi forgalmat neki. 

Tehát ez lenne egy összetevő, hogy vehettünk terhelést figyelembe. És ez meg fog változni idővel. Tehát a döntéseket fog változni. Tehát ez egy nagyon jó technika, egyik, hogy a leggyakrabban használt. Mi mást tehettünk volna? És nézzük valójában csak összefoglalni itt. Így a döntések itt lehet a forgalom típusa, hívom meg. Ez alapja lehet a terhelés. Lássuk, mi nem felér egy pár más. 

KÖZÖNSÉG: [hallható] DAVID MALAN: Location. Tehát ez egy jó. Tehát telephelyein hogy éred tőkeáttétel ezt az információt? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Ó, ez jó. És hány ezredmásodperc lenne csökken annak alapján, amit láttam ezt reggel, mit mondana? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Nos, alapú A trace útvonalak korábban láttuk, ami csak durva intézkedés valamit, legalább meddig tart az adatok, hogy A-ból B Olyan, mintha valami helyi volt, hogy mi, mint 74 milliszekundum, ide vagy oda? És akkor valami 100 plus, 200 plusz valószínűleg külföldön. És így alapul, hogy egyedül, ésszerűnek tűnik azt feltételezni, hogy a felhasználó számára az Egyesült Államokban elérni egy európai szerver eltarthat kétszer vagy háromszor amíg még milliszekundum, mint ez eltarthat, ha az szerver is itt található földrajzilag, vagy fordítva. Tehát amikor azt javasolta korábban, hogy különösen ha egyszer át, hogy 200 milliszekundum küszöböt, vagy oda, emberek nem kezdenek észrevenni. És a traceroute csak feltételezve nyers, érdektelen adatokat. Ha van egy weboldal, akkor kap a felhasználó letölti a képeket vagy filmet fájlokat, sok szöveg, további kérések. Láttuk, amikor meglátogattuk, mi volt azt, a Facebook vagy az Amazon korábbi, van egy csomó dolgot hogy kell letölteni. Annak érdekében, hogy meg fog összeadni. Tehát több másodpercig talán nem lehet ésszerűtlen. Tehát jó, földrajz egyik összetevője. Tehát valójában a cégek, mint Akamai, ha már hallott róluk, vagy mások már régóta venni földrajz figyelembe. És kiderül, hogy a természet egy IP-cím, a laptop IP-címét, akkor arra következtethetünk, bizonyos valószínűséggel, hol van a világon. És valóban van harmadik felek által nyújtott szolgáltatások Ön Fizethet, aki adatbázisokat Az IP-címek és a földrajzi hogy nagy biztonsággal lesz Igaz, amikor megkérdezte, hol a világon ez az IP-cím? 

És így valójában milyen Más cégek használja ezt? Ha Hulu vagy a Netflix, ha valaha is külföldre utazik, és megpróbálja néz valamit Hulu, és te nem az USA-ban, megjelenhet egy üzenet mondván nem az USA-ban. Sajnos nem lehet nézni ezt a tartalmat. 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Ó, tényleg? De igen, így valójában ez egy tökéletes alkalmazás valami nagyon technikai hogy egy aktuális probléma. Ha úgy döntesz, hogy a VPN-re Európában vagy Ázsiában vagy bárhol a világon, hogy a vállalati székhelyén, New Yorkban vagy bárhol, te fog hozni a megjelenését a külső weboldalak te tényleg a New York-i, Még akkor is, fizikailag elég messze van. 

Most a felhasználó fog tudja, hogy nyilvánvalóan el. De te is fog érezni, mert E kiegészítő milliszekundum. Ez a további távolság és a titkosítás, ami történik a VPN fog lelassulna. Tehát lehet, hogy nem egy nagy élmény. De Hulu és a Netflix fognak látni Ön, mint ül valahol New Yorkban, ahogy már tisztán kivehető. Milyen a tökéletes megoldás. 

Rendben, földrajz egyik döntés. Mi mást lehet használjuk annak eldöntésére, hogy milyen hogy útvonal forgalmat a A, B, és C az 1., 2., és 3., ismét üzembe A mérnöki kalap? Mindez úgy hangzik, nagyon bonyolult. Uh, én nem is tudom, hol végrehajtásának megkezdése azokat. Adj valamit, ami egyszerűbb. Mi a legegyszerűbb módja annak, hogy ezt a döntést? 

KÖZÖNSÉG: A szerver elérhető? 

DAVID MALAN: A szerver elérhető? Tehát nem rossz. Az jó. Ez egyfajta nuancing a terhelést. Tehát lássuk, hogy tartsa a terhelés kategóriában. Ha rendelkezésre áll, én csak fog küldeni az adatokat is. De ami sül gyorsan. Mert ha használja a logika, és ha Mindig kérdezze 1, állsz, állsz, van kapcsolva, ha a válasz mindig igen, Megyek küldeni 100% -át a forgalom neki, 0% mindenkivel. És egy bizonyos ponton, megyünk, hogy elérje hogy lassulás vagy a webhely nem érhető el. Tehát mi valamivel jobb, mint hogy de még mindig elég egyszerű és közel sem olyan okos, mint hogy minden E további adatokat figyelembe? 

KÖZÖNSÉG: Költség szerver. DAVID MALAN: Költség szerver. OK, így hadd dobd A terhelés kategóriában is. Mert amit talál egy cég, hogy ha too-- frissíteni a szervereket idővel vagy vásárolni, előfordulhat, hogy nem lehet tudni, hogy pontosan Ugyanolyan változatokban a hardver. Mert esik elavult. Nem lehet megvenni többé. Az árak változnak. 

Tehát lehet, hogy az eltérő szerver a klaszter, hogy úgy mondjam. Ez teljesen rendben van. De a következő évben hardver Lehet, hogy kétszer olyan gyorsan, kétszer annyit tud, mint az idei. Tehát dobd a terhelés kategóriába. Ez visszacsatolás között 1, 2, és 3. a terhelés kiegyenlítő minden bizonnyal azt mondja, hé, én 50% -os kapacitással. De az úton, én is kétszer annyi magot. Használja ezt az információt. Még simpler-- és ez fog hogy egy témát a számítástechnikában. Ha kétségei vannak, vagy ha szeretne egy egyszerű megoldás, amely általában jól működik idővel, nem választja ugyanazt szerver minden alkalommal, de choose-- 

KÖZÖNSÉG: Egy véletlen egyet? DAVID MALAN: -A véletlen szerver. Ja, válasszon egyik vagy a másik. Tehát véletlenszerűség valójában ez nagyon erős összetevő számítástechnika, és a mérnöki több általában, különösen, ha azt szeretné, hogy egy egyszerű gyors döntést nélkül bonyolítja, hogy az összes Az ilyen nagyon okos, hanem Nagyon okos megoldásokat igénylő annál is inkább műszaki, mind A több gondolat, amikor Tényleg, miért nem én csak egyfajta feldobunk egy érmét, vagy egy három oldalú érme ebben az esetben, és eldönteni, hogy menjen az 1, 2, 3? 

Lehet, hogy ez visszafelé sül véletlenszerűen, de ugyanúgy, mint az esélyek essek fejjel újra és újra és újra és újra és újra és újra van lehetőség reality-- szuper, szuper valószínű. Így idővel, esély Csak küldő felhasználó véletlenszerűen az 1., 2., és 3. fog dolgozzanak ki tökéletesen. És ez egy olyan technika, általánosan ismert körmérkőzéses. 

Vagy valóban, ez nem körmérkőzéses. Ez lenne a véletlen megközelítés. És ha azt szeretné, hogy még egy kicsit egyszerűbb, mint az, round robin lesz, az első ember megy 1, második személy 2, harmadik személy 3, a negyedik személy 1. És ebben rejlik a round robin. Csak ilyen megy körbe a ciklusban. 

Most kell okos róla. Nem szabad vakon küld a felhasználónak, hogy szerver számát egy, ha mi a helyzet? Ha ez a hely kapacitása, vagy ez csak nem reagál. Tehát ideális esetben azt szeretnénk, néhány fajta visszacsatolás. Ellenkező esetben, ha csak küld minden a felhasználókat, hogy zsákutca. De ez lehet figyelembe venni is. 

Tehát ne keretében értékelik az értéke csak véletlenszerű, ami elég gyakran megoldást az ilyen problémák. És azt írjuk le körmérkőzéses. Tehát hogyan néhány vállalat végre körmérkőzéses vagy véletlenszerűség vagy ezek bármelyike ​​döntéseket? Nos sajnos, dolgokat, mint ez. Hadd húzza fel egy gyors képet. 

Valójában, csináljuk kettő. Nem tudom, hogy miért vagyunk kapok az összes ilyen ételeket. Ez nagyon furcsa. Rendben, amit igazán szeretnék egy screenshot. Ez furcsa. Rendben, így tudok hamis ezt. Azt nem tudom, hogy sokkal messzebb Meg akarom tartani a görgetés. 

Tehát nagyon gyakran, akkor találja magát címen, mint www.2.acme.com, Talán www.3 vagy 4 vagy 5. És tartsa szemmel ezt. Nem látom, hogy gyakran. De ha igen, akkor milyen hajlamos lehet nagyobb, idősebb, stodgier cégek hogy technológiailag nem igazán Úgy tűnik, hogy tudják, mit csinálnak. És látja ezt a tech cégek Néha, a régiek. 

Tehát mit csinálnak? Miben végrehajtási terheléselosztás, akkor úgy tűnik? Ha úgy találja magát, mint a felhasználó gépelés www.something.com, és hirtelen te meg www.2.something.com, mi a terhelés kiegyensúlyozó valószínűleg tenni? KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, tehát a terheléselosztót feltehetően döntés alapján az egyik ezek döntéshozó processes-- nem igazán számít, hogy melyik. De ugyanúgy, mint én felhívta a számok a táblán van, A szerverek nem csak nevű 1, 2, és 3. Ők valószínűleg az úgynevezett www1, www2, www3. És kiderül, hogy belseje HTTP kérés ezt a funkciót. És megyek szimulálni ezt a következőképpen. 

Megyek nyitni, hogy ugyanaz fejlesztő hálózat fülön, mint korábban, csak így látjuk mi folyik az alatt a motorháztető. Megyek, hogy törölje a képernyőt. És fogok menni, nézzük mondjuk, http://harvard.edu. Most bármilyen üzleti okokból, a Harvard úgy döntött, mint sok, sok más weboldalakon, hogy egységesíti honlap www.harvard.edu mind technikai és marketing okokból. Ez csak egyfajta in divatban, hogy a www. 

Így a szerver a Harvard van valahogy átirányítani a felhasználót, ahogy mondogatta, honnan egy URL-t, hogy a többi. Hogyan működik ez? Nos, hadd menjen előre, és nyomja meg az Entert. És vegyük észre az URL valóban gyorsan változott www.harvard.edu. Hadd lépjünk vissza ebben a történelem és kattintson erre a hibakeresés diagnosztikai információkat, ha úgy tetszik. Hadd nézzem meg a kérésemet. 

Tehát itt a kérést tettem. És észre, hogy ez összhangban van az a fajta A kérés tettem Facebook előtt. De észre a választ. Mi más a A válasz ebben az időben? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, tehát ez nem egy 200 OK. Ez nem egy 404 Nem található. Ez egy 301 Véglegesen áthelyezve, amely egyfajta furcsa módja mondván, Harvard már növelte, és költözött máshol www.harvard.edu. A 301 jelzi, hogy egy ez egy átirányítást. És hogy hol kell a felhasználó látszólag átirányítja? Van egy további csemege információkat tárolunk a borítékot. És minden egyes ilyen sorok most elkezd amelyben egy HTTP fejléc. Fejléc csak egy kulcs értéke pair-- valami vastagbél valamit. Ez egy darab információkat. Hol kell az új helyen látszólag lenni? Figyeljük meg az utolsó sor mindazok között, fejléceket. 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, így van további információ. Az első sorban, hogy amit kiemelt mondja 301 Véglegesen áthelyezve. Nos, hol is költözött? Az utolsó line-- és nem az kell legyen, ebben a sorrendben. Ez lehet véletlen. Hely kettőspont azt jelenti, hé böngészőt, menjen erre az URL helyett. 

Tehát böngészők értik HTTP átirányítás. És ez egy nagyon-nagyon gyakori módja a pattogó a felhasználó az egyik helyről a másikra. Például, ha valaha is próbált egy webhely, hogy te nem bejelentkezett, akkor lehet, hogy hirtelen meg magát egy új URL teljesen mivel kéri, hogy jelentkezzen be. 

Hogyan működik ez? A kiszolgáló feltehetően küldésével 301. Van még más számok, mint a 302, némileg eltérő a jelentése, hogy küldjön egy másik URL-t. És akkor a szerver, miután bejelentkezett, küld vissza, ahol Ön ténylegesen szánták. 

Tehát mi, akkor rosszul megtervezett weboldalak csinál? Amikor meglátogatja www.acme.com, és ők csak történetesen nevezték a szerverek www1, www2, www3, és így tovább, ezek nagyon simply-- amely igazságos, de nagyon fajta foolishly-- átirányítása, hogy Egy valóban másképp nevű szerver. És ez működik tökéletesen. Ez szép és egyszerű. 

Láttuk, milyen lenne, történik a motorháztető alatt a virtuális borítékot. De miért van ez vitathatatlanul a Rossz mérnöki döntés? És miért vagyok én valami leereszkedő felé az adott műszaki megközelítés? Azt állítják, hogy ez miért rossz. Ben? KÖZÖNSÉG: [hallható] DAVID MALAN: Minden szerver kellene egy példányát a honlapon. Jól vagyok ezzel. És valóban, ez az, amit én feltételezve az ez az egész történet, hiszen ha wanted-- is valójában, kivéve Dan korábbi javaslat, amellyel ha a különböző szerverek különböző dolgokat csinál, akkor talán már valóban funkcionálisan különböző dolgokat csinál. 

De még akkor is, egy bizonyos ponton, a adatbázis fog túlterhelődik. A statikus eszköz- szerver fog túlterhelődik. Tehát egy bizonyos ponton vagyunk, vissza ezt a történetet, ahol szükség több példányban ugyanazt a dolgot. Tehát jól vagyok ezzel. KÖZÖNSÉG: [hallható] 

DAVID MALAN: OK, így bizonyos oldalak Lehet, hogy aránytalanul népszerű. És így fixálása egy címet nem feltétlenül a legjobb dolog. [NEM HALLHATÓ]? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Mit jelent ez? KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, pontosan. Szóval nem akar feltétlenül Rézfúvós lévén bizonyára Nem szeretné, hogy a felhasználók manuálisan beírni www1 vagy www2. Egy branding szempontból, hogy Csak úgy néz ki, egy kicsit nevetséges. Ha csak azt, egyfajta tiszta, elegáns tapasztalat, miután ezek a fajta véletlenszerűen számozott URL tényleg nem jó. Mert akkor a felhasználók biztosan fog másolja be őket be e-mailek vagy azonnali üzeneteket. 

Most ők szaporító. Most meg valami zavaró lehet a kevésbé technikai közönség, aki azt hiszi, A webcím www2.something.com. Nincs meggyőző szemantika, hogy az. Ez csak előfordul, hogy egy mögöttes technikai részletek, hogy már számozott kiszolgálók ezen a módon. 

És ami még rosszabb, mi van, ha például Talán a karácsonyi időszakban, amikor üzlet valóban virágzik, megvan www1 keresztül www99, de januárban és februárban től, akkor kapcsolja ki a fele azoknak, így csak www1 keresztül www50? Mi a következménye, hogy most nagyon ésszerű üzleti döntés? KÖZÖNSÉG: [hallható] DAVID MALAN: Meg kell kezeli az összes ilyen még. KÖZÖNSÉG: [hallható] DAVID MALAN: Pontosan. Ez a fajta a fogás van. Ha az ügyfelek az a szokása, könyvjelző dolgokat, küldje el azokat, csak mentés az URL valahol, vagy ha ez csak a saját auto befejezni a böngészőben, így ők Nem igazán szándékosan beírásával, ez csak történik, lehet, hogy, 11 hónapig ki az év hatékonyan elérni egy zsákutca. És csak a legtöbb okos a felhasználók fog megvalósítani, Talán meg kellene kézzel távolítsa el ezt a számot. Úgy értem, ez csak nem fog megtörténni sok felhasználó, így rossz üzlet, rossz végrehajtás műszaki bölcs. 

Így szerencsére, ez nem is szükséges. Kiderült, hogy milyen terheléskiegyenlítők tehet van, hanem azt mondja, hogy ha A tesz request-- hé A, megy 1. Más szóval, ahelyett, Az, hogy a küldő átirányítás oly módon, hogy az első lépés ebben a folyamat megy itt, ő akkor azt mondta, hogy menjen máshova. És így a harmadik lépést, megy máshol. 

Akkor ehelyett továbbra is az útvonalat, hogy ne használja ezt a kifejezést, mind az A adatai a terhelés kiegyenlítő úgy, hogy soha Kapcsolatok 1, 2, vagy 3 közvetlenül. Az összes forgalom nem kap "irányítva" A terhelés kiegyenlítő is. És így most mi vagyunk a fajta szándékosan elmossa a vonalakat Ezek közül a különböző eszközöket. A terhelés kiegyenlítő érkezhetnek adatokat. Ez csak egy függvény, amely meg is történt. 

Tehát egy terheléselosztó is, ez egy szoftver, tényleg. És a router a szoftver. És akkor teljesen meg két darab szoftver belül Egy fizikai számítógépen, így a terhelés kiegyensúlyozó megteheti ezeket több dolgot. 

Tehát van egy másik út Ehhez, ami valójában visszamegy a fajta első elvek A DNS, amely beszéltünk szünet előtt. DNS volt Domain Name System. Ne feledje, hogy tudsz kérdezni a DNS szervert, mi az IP-címét google.com, facebook.com? 

És mi is valójában csinálni. A szerszám nem használtuk korábban az az egyik, hogy ez csak a hozzáférhető, nslookup, a névszerver elemzéssel. És én csak fog írja facebook.com. És látom, hogy a Facebook IP cím látszólag ezt. Hadd menjek előre, és másolja hogy megy a böngésző, és menjen a http: //, és hogy IP-címet és nyomja meg az Entert. És valóban, úgy tűnik, működik. 

Most visszafelé haladva, mi volt belsejében a virtuális boríték hogy a Facebook válaszolt, amikor Meglátogattam, hogy az IP-címet közvetlenül? Mert észre, hol vagyok most? Hol vagyok most, a cím? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: A biztonságos változatát, és a www.facebook.com. Tehát ez nem is csak A biztonságos IP-címet. Facebook megtette azt magára mondani, ez nevetséges. Nem megyünk, hogy tartsa meg ebben a csúnya URL ami numerikus. Megyünk, hogy küldjön egy HTTP átirányítás útján ugyanezen fejléc láttuk before-- hely vastagbél valamit. 

És így ez egyszerűen azt jelenti, hogy alatta A motorháztető még ezt az IP-címet. Minden számítógép az interneten van IP-címe, úgy tűnik. De nem kell feltétlenül hogy ki, hogy a felhasználó számára. És ugyanúgy, mint vissza a nap, ott volt 1-800-Collect, 1-800-a C-O-L-L-E-C-T, az USA-ban, egy módja annak, hogy gyűjtsön felhívja keresztül nagyon könnyen megjegyezhető telefonszám szám, vagy 1-800-matrac vásárolni egy ágy, és hasonló memorizálás, amit még látni A telefon milyen fajta még, hogy a levelek térkép a számokat. 

Nos, miért van ez? Nos, ez sokkal könnyebb memorizálni 1-800-paplan vagy 1-800-COLLECT helyett A 1-800 valami valami valami valami valami valami valamit, ahol az egyes e egy számjegy. Hasonlóképpen, a világ tanult gyorsan, hogy ne az emberek megjegyezni az IP címeket. Ez lenne butaság. Fogunk helyett neveket használhassunk. És ez az, amiért a DNS-ben született. 

Rendben, hogy azt mondta, tekintve A terheléselosztás, próbáljuk yahoo.com. Nos, ez érdekes. Yahoo úgy tűnik, hogy visszatér a három IP. Tehát ebből arra következtetnek, ha tudnád, mi az Egy másik módja, hogy sikerült végre ez a fogalom a terheléselosztásra talán anélkül, hogy egy fizikai eszköz, az új fizikai eszköz? 

Más szóval, lehet elvenni a finanszírozás van a terhelés kiegyenlítő és megmondja, hogy használja néhány meglévő hardverek végrehajtása ez a fogalom a terheléselosztásra? És a spoiler, Igen, de mi, vagy hogyan? Mi Yahoo talán csinál itt? Kareem? OK, Chris? KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, minden Három ilyen munkát. Tehát véletlenszerűséget, round robin, telephelyein ha csak kihasználja a meglévő darab a puzzle hogy beszéltünk korábban a DNS rendszer, és egyszerűen azt mondják, ha az első felhasználó a nap kér yahoo.com, nekik az első IP-címet, mint az egyik végződő 45 odafent. És a következő alkalommal, amikor egy felhasználó kéri az IP-címét yahoo.com valahol a világban, nekik a második IP, majd a harmadik IP, akkor a első IP, majd a második. Vagy okos róla és csináld grafikusan. Vagy azt, hogy véletlenszerűen, és nem csinál ez round robin ilyen módon. 

És ebben az esetben, akkor nem is kell, bevezetni a fekete doboz a mi kép. Nem kell az új eszközt. Mi egyszerűen megmondja számítógépek menni a szerverek közvetlenül, hatékonyan, de nem útján nevüket. Ők soha nem kell tudni a nevét. Ők csak azt halljuk, hogy yahoo.com térképek bármelyike ​​ezek az IP-címek. 

Tehát küld pontosan ugyanaz a kérést. De a külső a borítékot, egyszerűen helyezi az IP, hogy tájékoztatták. És így is lehetett mi terheléselosztásához kérések mellett csak küld a borítékot a másikat a Yahoo saját szerver? 

És ha továbbra is ásni, majd meglátjuk Valószínűleg más vállalatok több. A CNN két nyilvánosan hozzáférhető. Bár valójában, ha ezt újra és again-- cnn.com-- láthatjuk ők változó sorrendben, valóban. Tehát mi mechanizmus CNN segítségével, nyilván? 

KÖZÖNSÉG: Véletlen. DAVID MALAN: Nos, ez lehet véletlen, bár Úgy tűnik, hogy a kerékpározás oda-vissza. Így talán körmérkőzéses ahol ők csak bekapcsolja a sorrendben, hogy én valószínűleg, hogy az első. Saját számítógép kerül az első minden egyes alkalommal. Tehát ez a terhelés kiegyenlítésére. És amely lehetővé teszi számunkra, végül, feltérképezésére adatok, vagy a térképen kérelmeket, több szerver között. Tehát milyen problémák most is léteznek? Olyan, mintha azt csak nagyon megoldott jó probléma. Kaptunk felhasználók különböző szervereken. De-- oh, és Chris, nem Kérdése van már? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Teljesen függ. Tehát mi történik itt? És valóban látni ezt. Így próbáljuk a Yahoo. Valójában, menjünk a Facebookra. Mert tudjuk, hogy az egyik működik. Így fogok másolni hogy az IP-cím ismét. Megyek zárja be az összes ezeket a lapokat. Megyek menni nyitott, hogy speciális hálózati lap itt. És megyek meglátogatni csak a http: //. És most megyek, hogy elérje az Enter billentyűt. És lássuk, hogy mi történt. 

Ha megnézzük, hogy a kérelem, értesítés hogy my-- Facebook egy rossz példa. Mert van egy szuper divatos technika amely elrejti, hogy részletesen tőlünk. Hadd használja a Yahoo instead-- http: // hogy a VI. Nyissuk meg a hálózati lapon megőrzése naplót. És itt is van, Enter. Ez vicces. OK, így itt van a híres 404-es üzenetet. Mi a vicces az, hogy ők Valószínűleg soha nem lesz újra. Mert ott valószínűleg Nem valami baj önmagában. Ők már csak szándékosan úgy döntött, hogy nem támogatja a A numerikus formában kerülnek címet. 

Tehát mi vagyunk valójában látni a Network fül, ha kihúzom ezt itt, van, ahogy mondom, a híres 404, ahol ha nézem a válasz fejlécét, ez az, amit kaptam here-- 404 Not Found. Így próbáljuk egy másik. Lássuk, CNN együttműködik velünk. Majd megragad egy CNN IP-címek, törléséhez, http, dah, dah, dah, tam. Tehát válaszolva Chris kérdés, hogy az egyik működött. 

És menjünk válasz fejlécet. Igazából nem, minden rendben vagyok küzd, hogy megtalálja egy működő példa. Tehát CNN úgy döntött, akkor csak magad bármilyen szintű címre látogatnak meg, branding kérdéseket félre. De mi nem történhet, ha láttuk, a Facebook esetében, A kapnánk 301 áthelyezve Tartósan, a legvalószínűbb, belsejében, amely helye: https: //www.facebook.com. És esély www.facebook.com egy alias pontosan ugyanazt a szerver már csak elment. 

Tehát ez egy kicsit kontraproduktív. Mi szó szerint látogatás a szerver. A kiszolgáló ezután mondja, elmegy. Megy ez a másik címre. De csak azért történik, hogy megy vissza, hogy ugyanazon a szerveren. De feltehetően most maradni, hogy szerver anélkül, hogy ez oda-vissza. Mert most mi a neve változata az oldalon, nem a numerikus. Jó kérdés. 

OK, így ha most assume-- mi megoldotta a terhelés kiegyenlítésére. Most van egy olyan mechanizmust, legyen szó akár DNS-en keresztül, hogy ez keresztül a fekete doboz, hogy ez bármelyikét használják ezeket a technikákat. Tudjuk, hogy egy felhasználó kérésére és kitalálni, hogy melyik szerver, 1, 2 vagy 3, hogy küld neki. 

Mit kezd megtörni a mi website? Más szavakkal, van épített egy vállalkozás, amely korábban egyetlen egy szerveren. Most, hogy az üzleti fut több szerver között. Milyen feltételezések, milyen tervezési döntéseket, most talán törés? 

Ez kevésbé nyilvánvaló. De lássuk, hogy nem tudunk a ujját néhány probléma voltunk létre a magunk számára. Ismét, ez olyan, mint a gazdaság le a szivárgás a tömlőt. És most néhány új kérdés már felbukkant itt. 

KÖZÖNSÉG: [hallható] DAVID MALAN: OK, így van, hogy folyamatosan növekszik a merevlemezen. Vagyok rendben, hogy most. Mert azt hiszem, tudok vízszintesen skála. Mint ha én kifogyni, Hozok egy negyedik szerver, talán egy ötödik szerver, majd növeljük a kapacitást egy másik 30% -os vagy 50% -os vagy miegymás. Így vagyok rendben, legalábbis egyelőre. KÖZÖNSÉG: [hallható] DAVID MALAN: OK, így ez egy jó pont. Tegyük fel, hogy a szerverek nem azonosak. És ügyfélszolgálat vagy az e-mail egyenértékű közben valamilyen üzenetet a felhasználó mondván, ez nem működik megfelelően. Ez nagyon is lehetséges, néha, hogy talán egy vagy több szerver jár egy kicsit félrecsúszott, de nem a többiek, ami minden bizonnyal megnehezítheti, hogy üldözőbe le a problémát. Lehet, hogy már meg több helyen. 

Ez megnyilvánulása A másik fajta hiba, amely szerint akkor valószínűleg tervezték meg infrastruktúrájának hogy minden valóban azonosak. De ez nem válik egy új problémát hogy nem volt korábban. Mi más? KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, van még összetettségét. Van fizikailag több vezetéket. Van egy másik eszközt. Ami azt illeti, már be egy alapvető koncepció és alapvető probléma ismert, mint egy ponton kudarc, ami akkor is, ha még soha nem hallott a kifejezés, akkor valószínűleg most visszafelé, és kitalálni. Mit jelent az, hogy van egy pont nem az én építészet? És az építészet, csak jelenti a topológia belőle. 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, mi van, ha A terhelés kiegyenlítő lemegy? Már ki ezt a középső ember, akinek célja az életben, hogy megoldja a problémát. De én már egy új probléma. Egy új szivárgás íveltek a tömlőt. Mert most, ha a terhelés kiegyenlítő meghal, vagy elszakad vagy misfunctions, most elveszíti a hozzáférést mind a három szerver. És mielőtt, én nem ezt közvetítő. És így ez egy új probléma, vitathatatlanul. Majd jönnek vissza hogyan lehet javítani. 

KÖZÖNSÉG: [hallható] DAVID MALAN: Ez lenne az egyik megközelítése. Igen, és így ez lesz elég A patkány lyukba kezdjük, hogy menjen le. De térjünk vissza a hogy csak egy pillanatra. Milyen egyéb problémák hoztuk létre? 

Tehát Dan említett adatbázist, mielőtt. És akkor is, ha nem is ismerős technikailag, adatbázis csak egy szerver, ahol változó adatokat jellemzően tárolják, talán egy megbízás valaki elhelyezte, a felhasználói profil, az Ön nevét, e-mail címét, dolgok, amelyek bevinni, vagy változott az idők során. 

Korábban én adatbázis volt ugyanazon a szerveren, mint az én webszerver. Mert én csak volt egy web hosting számla. Minden volt, minden egy helyen. Hová tegyem az adatbázis Most, a szerver 1, 2, vagy 3? 

KÖZÖNSÉG: 4. 

DAVID MALAN: 4, OK, minden Rendben, menjünk oda. Így fogok tenni én database-- és nézzük kezdeni lehessen ezeknek a www, www, www. És én fogom mondani, Ez a négyes számú. És mondom db az adatbázis. OK, ez tetszik. Mi vonal kéne feltehetően rajz itt? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, így a kód, ahogy megbeszéljük holnap, feltehetően ugyanaz mindhárom kiszolgálón. De most meg kell csatlakoztatni, hogy ne a futó adatbázis helyi, hanem máshol. És ez jó. Mi is csak adni az adatbázis egy megnevezni, mint mi, vagy több. És hogy minden jól működik. De mit tettünk? Már vízszintesen skálázott rendelkező Három szerverek helyett, amely ez jó. Mivel most már tudjuk kezelni háromszor annyi terhelést. 

És még jobb, ha egy vagy két E szerverek lemegy, Cégem működik tovább. Mert még mindig van egy, még ha én vagyok fajta sántított mentén teljesítmény-bölcs. De milyen új probléma van én által bevezetett mozgó adatbázisban ehhez külön szerver helyett az 1., 2., és 3.? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, így most már másik egyetlen meghibásodási pont. Ha az adatbázis meghal, vagy be kell bővíthető, vagy bármi, most már biztos, honlapomon online. És tudok szolgálni statikus, változatlan tartalommal. De nem hagyja, hogy a felhasználók be- illetve változás semmit, vagy hogy semmit, ami még rosszabb. Mert ha 4 offline, majd 1, 2, és 3 tényleg nem lehet beszélni, hogy definíció szerint. 

OK hogy igen, és így ez az oka Én haboznak felhívni a. Tehát térjünk vissza erre. Nem úgy értem, hogy ne nyomja ki minket. De a kép nagyon gyorsan fog kapni stresszes. Mert meg kell kezdeni amelynek két mindent. Sőt, ha valaha is látott a film Kapcsolat néhány évvel ezelőtt Jodie Foster-- nem? 

OK, így a két nekünk, akik látták Kapcsolat, van egy kapcsolat van, ahol lényegében vásárolt két valaminek inkább, mint egy, jóllehet kétszeres áron. Így volt ez a fajta játékos megjegyzést a filmben. Ez a fajta kapcsolódó. Tudtuk teljesen csinálni. És akkor már csak költség nekünk kétszer annyi pénzt. De mi jön vissza, hogy a. 

Így már megoldotta ezt. Szóval tudod mit? Ez olyan, mint egy csúszós lejtőn. Nem akarok foglalkozni, amelyek hogy egy ismétlődő adatbázisban. Túl sok pénzt. Tudod mit? Azt akarom, hogy az adatbázis csakúgy, mint a változat egy ahol minden szerver saját helyi adatbázisban. Úgyhogy csak fog felhívni db minden egyes ilyen. 

Tehát most minden webszerver azonos annyiban hiszen ugyanazt a kódot, ugyanaz statikus eszköz-, azonos képek és szöveg és így tovább. És mindegyiknek megvan a saját adatbázisban. Én fix egypontos A hiba probléma. Most van egy adatbázis. Nem számít, amelyben két vagy egy ilyen dolgok meghal, mindig van egy balra. De milyen új probléma alkottam hogy Dan megoldás elkerülni? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, szinkronizálni kell, ugye? Mert akár azt kell szinkronizálni ki fog where-- más szóval, Ha Alice nézte meg helyén, és ő történt hogy véletlenszerűen vagy kerek robined vagy bármi, a szerver számú, ezt követően azt kell mindig küldjön neki a szerver 1. Miért? Mert ha küldök neki a szerver 2, ez lesz hogy néz ki, mint ő nem létezik ott. 

Nem fogom, hogy ő érdekében történetében. Nem fogom, hogy ő profil van. És ez olyan, mintha egy ez hívogató problémákat. És amikor Bob látogatásaim Van, hogy küldjön neki mindig ugyanarra a szerverre, 2, vagy bármelyik egy, és Charlie egy harmadik, és következetesen. Ez nem ésszerűtlen, mégis. Ez az úgynevezett particionálás az adatbázis. És valójában ez az, amit Facebook tette korán. 

Ha követte a történelem Facebook, hogy itt kezdődött a campus mint www.thefacebook.com. Akkor alakult ki egyszer Mark indult elterjedésének más egyetemen hogy harvard.thefacebook.com és mit.thefacebook.com, és valószínűleg bu.thefacebook.com, és hasonlók. És ez volt az oka, korán, nem hiszem, akkor lehetett volna barátai szerte egyetemen. De ez rendben van. Mert valaki a Harvardon kapott érkezik erre a szerverre. Bárkit BU kapott érkezik erre a szerverre. Bárki MIT kapott küldött e server-- elméletben. Nem elég tudni, hogy minden mögöttes végrehajtásának részleteit. De feltehetően megosztjuk emberek campus, ahol a hálózat volt. 

Tehát ez jó egészen a pontig ahol szükség van a két szerver a Harvard, vagy három szerverek Harvard. És akkor, hogy az egyszerűség fajta elromlik. De ez egy ésszerű megközelítés. Nézzük mindig küld Alice ugyanarra a helyre, Mindig küld Bob ugyanarra a helyre. De mi történik, ha Alice kiszolgáló offline állapotba kerül? Bob és Charlie is vásárolni dolgokat, és jelentkezzen be az oldalra. De Alice nem. Szóval elvesztettem egy harmadik a felhasználói bázis. Lehet, hogy jobb, mint a 100%? De talán jó lenne, ha tudnánk még a 100% -os a felhasználók akkor is, ha egy harmadik a mi szerverek offline állapotba kerül. 

Így lehet szinkronizálni, mi? Nem a felhasználók számára, per se, de a adatbázis az összes ezeket a szervereket. Tehát most azt a fajta kell néhány fajta összekapcsolás itt, hogy a szerverek maguk lehet sync-- nem ésszerűtlen. És valóban, ez a technológia létezik. A világon az adatbázisok, van fogalmát a mester-szolga adatbázisok, vagy primer-szekunder ahol többek között a funkciók nem csak az adatok tárolására és válaszol az adat, hanem csak azért, hogy folyamatosan szinkronizálni egymással. Tehát minden alkalommal, amikor írni vagy menteni valamit az adatbázisban, azonnal kap "reprodukálni" a más adatbázisokhoz is. 

És minden alkalommal, amikor olvasni belőle, nem számít, hogy hol van. Mert ha elméletben ők minden szinkronizált, te megy, hogy ugyanazt a nézetet az adatok. Tehát ez tökéletesen hangzik. Kell lennie egy fogás. Mi lehet a fogás legyen? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, tehát háromszor annyi cuccot elromolhat. Ez a valóság. Lehet mind ugyanolyan szellemben. De valakinek meg kell konfigurálni ezeket. Van egy nagyobb a valószínűsége, hogy valami van baj. Csak kombinatorikusan van több dolgot hibákat eredményezhet. Mi mást is rossz potenciálisan? KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, tehát szinkronizálás lehet rossz. Még lehet, hogy tudja, biztonsági másolatok és az ilyen, ha csak vakon teszi mentést, milyen, ha valami elromolhat egy adatbázisban? Törli, amit nem kellene. Már rögtön reprodukálni hogy a probléma mindenhol máshol. Tehát Victoria talking-- mentést lenne egy jó dolog van. És így akkor visszatérünk erre. És hogy tisztázzuk, mi beszélünk Nem a mentést itt önmagában. Beszélünk reprodukálták vagy szinkronizálás a szerverek között. Ők mind élőben. Ők nem azt jelentette, hogy használható mentést. 

KÖZÖNSÉG: [hallható] DAVID MALAN: Mi ez? Közönség: Higher-- DAVID MALAN: Drágább. Már megháromszorozódott költsége biztos, bár legalábbis az a hardver. Mivel az adatbázis csak egy darab szoftvert. A webszerver és egy szoftver. Ez talán szabad, ha mi használ bármennyi nyílt forráskódú dolgokat. De ha mi használ olyasmi, mint az Oracle, fizetünk Oracle több pénz per engedélyeket, illetve a Microsoft-hozzáférés. Kell, hogy legyen valami más fogás. Nem lehet ezt az egyszerű. 

Tehát a lényeg, azt hiszem, Kareem, földrajz earlier-- vagy nem, Roman, igaz, az geography-- feltételezni hogy mi vagyunk, hogy okos erről, és mi vagyunk ami az egyik szerver, és fordítsuk adatbázisok, az USA-ban, és egy másik Európában, a másik Dél-Amerikában, a másik az afrikai, másik Ázsiában, bárhol vagyunk Érdemes az egész világon. Azt már tudjuk, a mi nyom utak, pont és pont B, ha ők távolabb egymástól, megy, hogy több időt. 

És ha néhányan már használt eszközöket, mint a Facebook vagy a Twitter vagy az ilyen helyeket manapság, hogy folyamatosan változik, mert a felhasználó létrehozott adatokat, néha, ha hit Reload vagy nyissa meg az ugyanazon az oldalon egy másik böngészőt, látod különböző változatban, szinte. Lehet, hogy valaki állapotát frissíteni, de itt nincs itt, és akkor újratölteni, és akkor jelenik meg, és újratölti újra, és eltűnik. Más szavakkal, tartsa nézzék meg ezeket a legalább ha használja a szociális hálózatépítési. 

Ismét, csak azért, mert a adatok olyan gyorsan változik, Néha kiszolgálók még elcsúszhat. És lehet, hogy egy szuper kis ablakban. De 200 milliszekundum, talán még jobban, mint hogy-- ez fog tartani egy nem nulla összeget Az idő, hogy ezeket adatbázisok szinkronizálása. És mi nem csak beszél egy kérést. Ha egy cég több ezer felhasználó használja egyszerre, lehet, hogy a puffer. Más szavakkal, előfordulhat egy sorban, vagy a várakozás sor mielőtt az összes ilyen adatbázis lekérdezések a szinkronizálás. Tehát lehet, hogy valójában egy pár másodpercig. 

És valóban, ez igaz azt hiszem, még a mai napig a Facebook, ahol amikor szinkronizálni East Coast West Coast, van egy nem-triviális késleltetési, hogy úgy mondjam, hogy csak ilyen kell elviselni. És ez így nem annyira egy hiba, mint ez a valóság hogy a felhasználók ne lássanak A helyes adatok legalább néhány másodpercig. 

Látom, ez a Twitteren egy csomó valójában hol néha én tweet egy ablakban nyissa meg a másik, hogy majd látni, hogy erősítse meg, hogy valóban felment, és ez még nincs ott. És van, hogy milyen újratölteni, reload, reload-- ó, ez van. És ez nem azért, mert nem volt mentve. Csak még nem szaporították a más szerverek. 

Tehát ez a trade-off, too-- te tényleg akarta kitenni magát annak a veszélynek hogy ha a felhasználó elmegy azok sorrendjét történelem, ez valójában nem létezik még? Látom, ez a bizonyos bankok. Mindig bosszant, amikor is az egyik, akkor csak megy, mint hat hónappal ezelőtt a banki kimutatások egyes bankok, noha elméletileg kellene hogy képes legyen minden online. Ők csak úgy dolgoknak néha. Néha too-- mi website ez? Van one-- ó, ez GoDaddy, azt hiszem. GoDaddy, ha ellenőrizze vásárol egy domain nevet, vagy valami, akkor gyakran kapsz egy linket a nyugtát. És ha a linkre kattint, a jobb el, ez gyakran nem működik. Csak azt mondja, zsákutca, itt semmi. 

És ez is azért, mert a ezeket a terjedési késleltetés. Mert bármilyen okból, akkor szed egy kis időt hogy valóban generál, hogy. Tehát ez a fajta, mint azt szeretnénk, hogy húzza ki a hajad egy bizonyos ponton. Mivel minden próbál tennie megoldani egy egyszerű probléma. És mi folyamatosan új problémákat magunknak. Tehát lássuk, ha lehet egyfajta visszavonni. 

Kiderült, hogy egyesíti adatbázisok minden webszerverei nem igazán a legjobb gyakorlatot. Általában milyen mérnök tenne, vagy rendszerépítész, lenne, hogy a különböző szintek szerverek. És csak a helyet kedvéért, én készít az adatbázis itt. 

Talán van az adatbázisban, és szerver számát négy itt hogy nem rendelkeznek kapcsolattal Minden ilyen szerverek itt. Tehát ez lehet az elülső végén tier, az emberek azt mondják. És ez lenne a mi hátsó réteg. És ez csak azt jelenti, hogy ezek szembe a felhasználó. És az adatbázisok nem szembesülnek a felhasználó. Nem felhasználó közvetlenül az adatbázis eléréséhez. 

Úgyhogy most talán lemegy Az útvonal Victoria javasolt. Ez egy ponton a kudarc. Ami nekem kellemetlen. Tehát mi talán legkézenfekvőbb megoldás? KÖZÖNSÉG: [hallható] DAVID MALAN: Sajnálom, azt mondják, hogy megint. KÖZÖNSÉG: [hallható] DAVID MALAN: Nem termelési kiszolgálóval. Hogy érted? 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Oh, OK, így a biztonsági másolatok. OK, így tudtuk csinálni, biztosan. És tulajdonképpen ez igen gyakran történik. Ez lehet az adatbázisban száma öt. De ez csak csatlakozik száma négy. És lehet, hogy ez egy meleg tartalék. Ez a két adatbázist lehet konfigurálni hogy csak állandóan szinkronizálni egymás. És így, ha ez a gép meghal, a bármilyen hülye reason-- a merevlemez meghal, valaki megbotlik a kábel, néhány szoftver hibás és a gép lefagy vagy crashes-- ha volna egy emberi szó húzza ki ezt a fali és helyette csatlakoztassa ezt a. És akkor belül, mondjuk, egy Néhány perc, talán fél óra, Ön ismét online. 

Ez nem jó, de ez nem is szörnyű. És akkor nem kell aggódnia bármilyen szinkronizációs problémák. Mert minden már ott van. Mert volt egy tökéletes hát kész. 

Lehet, hogy egy kicsit szakértő erről, mint néhány ember gyakran, ahol Lehet, hogy az adatbázisban a négyes itt, adatbázis szám öt itt, amelyek egymással kommunikálnak. De akkor is van ez fajta arrangement-- és szándékosan úgy néz ki, rendetlen, mert is-- ahol az összes front end szerverek is beszélni, hogy minden a hátsó szervereket. És így, ha az adatbázisban nem reagálnak, ezek front end szerverek hogy programozási kódot őket, amely azt mondja, ha nem kap kapcsolat az adatbázisban, Az elsődleges azonnal indul beszél a másodlagos. 

De ez most megnyomja a komplexitás a kódot. És most a fejlesztők, a szoftver fejlesztők, tudni kell ezt. És te milyen árukapcsolás, hogy a kód írsz, hogy a tényleges hátsó végrehajtásának részleteit, ami még nehezebbé teszi, különösen egy nagyobb vállalat vagy egy nagyobb weboldal, ahol nem feltétlenül szeretné, hogy a programozók, hogy tudni, hogy az adatbázis mérnökök csinálnak munkájukat. Érdemes megtartani ezeket a szerepeket fajta funkcionálisan elkülönülő így hogy van ez a réteg absztrakció a kettő között. 

Tehát hogyan tudnánk ezt orvosolni? Nos, azt a fajta megoldott ezt a problémát egyszer. Miért nem teszünk egy ezek a dolgok itt, ahol Úgy beszél viszont a négyes és öt, mind a front end webszerverek beszéljek a közvetítő, és a közvetítő viszont útvonalak adataikat? Tény, hogy mi lehet a jó név ez a dolog? 

KÖZÖNSÉG: [hallható] DAVID MALAN: OK, adatbázis-kezelő. De mi lehet a kifejezés lehet, hogy tudtuk újra ehhez az eszközhöz? Mi kiegyensúlyozó. Igen, valóban, én nem tisztességes itt. Tehát egy terheléselosztó azt jelentené, hogy vagyunk váltva oda-vissza van, amelynek nem ténylegesen a helyzet. Tehát van néhány mód, ezt megteheti. 

Ha ez valójában egy terheléselosztó, a történet pontosan ugyanaz, mint korábban. Néhány kérések 4. Némelyikük megy 5. És ez jó. Mivel most már tudjuk kezelni kétszer annyi teljesítményt. De ez a kapcsolat Itt szuper fontos. Meg kell maradni állandóan szinkronizált, és remélhetőleg földrajzilag nem túl messze egymástól, így hogy a szinkronizációs lényegében pillanatnyi. Egyébként lehet, hogy van egy kis probléma. 

Tehát ez nem rossz. De ismét, most már bevezetett egy új probléma. Mi a probléma már csak újra? Egyetlen meghibásodási pont. Tehát mi a megoldás erre? Így például Victoria szereti a pénzt költeni, tudjuk venni ezt a fickót, és erre a célra. És én csak fog mozog itt elég hely. És ez megy, hogy egy kicsit rendetlen. Megyek, hogy vonalakat. Tegyük fel, hogy minden Ezen a vonalon megy mindkettő? 

Egy nagyon gyakori technika itt lenne használja a technikát nevezik szívverés ahol minden egyes ilyen eszközök, A balra és jobbra terheléskiegyenlítők, vagy amit csak akarunk hívni őket, folyamatosan azt mondja, hogy élek, Életben vagyok, hogy élek, hogy élek. Egyikük alapértelmezés viselkedik, mint az elsődleges. Tehát az összes forgalom halad át az egyik a bal oldalon, például alapértelmezés szerint önkényesen. 

De amint a srác a jobb nem hallja a bal srác többé, Az egyik a jobb oldalon van programozva hogy automatikusan, például átveszi az IP-címet Az egyik a bal oldalon, és így lesz az elsődleges, és a Talán küldjön egy e-mailt vagy szöveges üzenet Az emberek azt mondják, hogy, hé, A bal elsődleges offline. Én lesz az elsődleges most. Így alelnöke lesz elnök, hogy úgy mondjam. És valaki menni menteni az elnök, ha akar. Mert most van egy ideiglenes egyetlen meghibásodási pont. 

Tehát olyan bonyolult, vagy stresszes, mint ez úgy tűnik, hogy megkezdődhessen, ez hogyan oldja meg ezeket a problémákat. Te dobni pénzt rá. Akkor dobja hardver rá. De sajnos bonyolulttá érte. De az eredmény, végül az, hogy a van egy sokkal, az elmélet, robosztus architektúra. Ez még mindig nem tökéletes. Mert még ha Itt jönnek talán nincs egyetlen meghibásodási pont. Most már kettős hibapont. De ha két dolog rosszra, ami egyáltalán tudott, mi még mindig lesz elérhető. 

És így igen gyakori a ipar leírni az idő szempontjából kilences. És egyfajta cél törekedni, hogy a 99,999% Az idő a webhely az interneten. Vagy még jobb, adjunk hozzá egy Még néhány kilences e. Sajnos, ezek a kilences nagyon drágák. És lássuk ténylegesen ezt ki. Tehát, ha én nyit a nagy számológép ismét 365 nap egy évben, 24 óra egy nap, 60 perc egy óra, és 60 másodperc egy perc alatt, ennyi másodperc van egy év alatt, ha ezt tettem helyesen. Tehát, ha alkalommal ezt 0,99999, ami mennyi időt szeretnénk törekszik. Tehát ez azt jelenti, meg kell kezdeni ennyi másodperc az év során. Tehát, ha én most vonjuk le a eredeti érték, vagy inkább ez az új értéket a first-- 316 másodperc, ami természetesen öt percig. 

Tehát, ha a honlap, vagy a cég azt állítva, "öt kilences", amellyel te akár 99,99% az idő, ez azt jelenti, hogy jobban már elég okos, és gyorsan elég flush elég erőforrás hogy a szerverek csak elérhető Öt perccel ki az év. Ez egy költséges és Nehéz dolog, hogy vágynak. 

Tehát ez egy kompromisszum is. 99,999% -ában elég rohadt nehéz és drága. Öt minutes-- akkor alig kap hogy a szerver fizikailag helyére valamit, ami elromlott. És ezért kezdjük vezetékek dolgok együtt bonyolultabb Apriori úgy, hogy a számítógépek lehet egyfajta fix magukat. Igen. 

KÖZÖNSÉG: [hallható] DAVID MALAN: A probléma oka lehet lehet bármely helyek számát. És fact-- 

KÖZÖNSÉG: [hallható] DAVID MALAN: Abszolút, abszolút. És mivel a kép egyre bonyolultabb, ez lehet a web szerver. Ez lehet a hatalom, hogy az épületet. Ez lehet valami fizikai, mint a A kábeleket kapott, kopott vagy kirúgták. Ez lehet az adatbázis nem válaszol. Meg lehetne úgy frissíteni az operációs rendszer és valami lóg. Tehát olyan sok más mozgó alkatrészek. És így sok a mérnöki hogy el kell menni mögött valójában csak kompromisszumokra, mint például hogyan sok időt, hogy mennyi pénz ténylegesen Érdemes, és melyek azok a veszélyek te nagyon aggódik? Például, a tanfolyamok tanítok Harvard, használjuk a sok számítási felhő, amely kezdjük, hogy egy pillantást most, Sőt, ahol az általunk használt Amazon Web Services. Csak azért, mert ez a Egy elkezdtük a. De van még több ezekben a napokban A Google és a Microsoft és mások. És mi tudatosan dönt, hogy minden Tanfolyamaink "virtuális gép, ahogy ők nevezik, a azt hiszem ez Nyugat-Virginia adatközpont. A legtöbb diák történetesen az USA-ból, bár vannak természetesen Egyes nemzetközi szinten. 

De a valóság az, hogy ez csak egyszerűbb és ez olcsóbb nekünk hogy az összes tojást A Virginia kosár, bár tudom, hogy ha valami elromlik Virginia, mivel alkalmanként happened-- mint ha van egy hurrikán vagy valamilyen időjárás ilyen esemény, hogy ha van valami elektromos hálózatra kiadásakor vagy az, így: minden Tanfolyamaink adatai is megy az offline Egyes számú percek vagy órák vagy még hosszabb. 

De az összeg a komplexitás hogy szükség lenne, és az összeget, amely szükséges, hogy működik minden párhuzamosan Európában vagy Kaliforniában csak nincs olyan sok értelme. Tehát ez egy ésszerű kereskedelmi off, de egy fájdalmas ha te tényleg miután a leállás idejét. 

Nos, most, hogy átmeneti néhány felhő alapú megoldások néhány ilyen problémákat. Minden, amit már megvitatása eddig a fajta probléma, hogy van velünk volt egy ideig, hogy van-e a saját szerverek a cég, hogy elmész egy co-location hely, mint egy adatközpont és megosztás helyet valaki, vagy manapság a felhő. 

És mi szép a a felhő az, hogy minden ezeket a dolgokat én rajz fizikai tárgyak most úgy, mint egyfajta virtuális tárgyakat a felhőben, amely szimulált szoftver. Más szóval, a számítógépek ma, szerverek ma, mint a Dell kép Megmutattam korábban, olyan gyorsan, van annyi RAM, annyira a processzort, annyi lemez hely, hogy az emberek írtak szoftver gyakorlatilag partíció Egy szerver fel az illúziót, hogy hogy a két szerver, vagy 200 szerver, így hogy mindannyian vevők van az illúziót, amely nem csak egy számla néhány web fogadó, de a saját gépen, hogy mi vagyunk bérlés mástól. 

De ez egy virtuális gép amennyiben egy Dell szerver, újra lehet megosztjuk fel Két vagy 200 vagy több virtuális gép, amelyek mindegyike ad valaki adminisztratív hozzáférés, de olyan módon, ahol egyikünk sem tudja, vagy a hozzáférést más virtuális gépek ugyanazon a hardveren. Tehát festeni egy képet a mai diák, Én ezt itt forgatták a honlapon, úgynevezett Docker. 

Tehát ez egy kicsit részletességgel, mint mi valójában szüksége van. De ha ezt tekinti Ön infrastructure-- így csak a hardver a saját, A kiszolgálók, az állványok, az adatok központ, és az összes hogy-- tenné jellegzetesen a gazda operációs rendszer. Tehát valami, így: ez lehet a Windows. Nem lenne Mac OS. Mert ez nem igazán vállalkozás ezekben a napokban. Így lenne Linux vagy Solaris vagy Unix vagy BSD vagy a FreeBSD vagy akárhány más operációs rendszerek amelyek vagy szabad vagy kereskedelmi. 

És akkor fennáll a program speciális programot, úgynevezett hypervisor, vagy virtuális gép monitor, VMM. És ezek olyan termékek, ha ismerős, mint a VMware vagy VirtualBox vagy Virtual PC vagy mások. És mi ezeket a programokat csinálni pontosan hogy a funkció azt korábban leírtuk. Ez azt az illúziót kelti hogy egyetlen fizikai gépen lehet több virtuális gép. 

És így ezek a színes dobozokat felső festmény egy képet a következő. Ez hypervisor, ez szoftver, nevezzük VMware futó más operációs rendszer, nevezzük Linux, teremt az illúzió, hogy ez a fizikai számítógép valójában egy, két, három virtuális számítógépek. Úgyhogy most vásárolt, a tulajdonos ez a hardver, egy fizikai számítógép. És most bérbeadás ez három ügyfelek. 

És a három említett ügyfelek gondoltok van egy dedikált virtuális gép. És ez nem csali és kapcsolóval. Ez több felfedése te egy virtuális gép. De technológiailag, mindannyian teljes körű felügyeletet felett minden egyes ilyen vendég operációs rendszerek, amelyek tetszőleges számú operációs rendszer. 

Tudok telepíteni semmit akarok. Tudom frissíteni akarok. És nem is kell tudni, vagy törődnek az egyéb működési rendszereket, hogy a számítógép, a többi virtuális gép, kivéve, ha a tulajdonos mindez szürke cucc, hogy egy kicsit kapzsi és overselling ő források. 

Tehát, ha az ember vesz egy fizikai gépen és értékesítése hogy nem 200, hanem 400 ügyfelek, egy bizonyos ponton megyünk, hogy utat azokba azonos teljesítmény problémák, mint korábban. Mert csak véges lemezterületet és a RAM, és így tovább. És egy virtuális gép csak egy program, ami úgy tesz, mintha egy teljes értékű számítógép. Tehát azt kapja, amit fizetni itt. 

Így talál az online kellene fizetnie a jó hírű cég, talán 100 $ havonta saját virtuális gép, vagy saját virtuális privát szerver, amely egy másik kifejezés rá. Vagy lehet, hogy talál néhány fly este, ha fizet 5,99 $ havonta saját virtuális gép. De esély nincs közel annyi teljesítmény áll az Ön rendelkezésére, mert már overselling meg így, mint ha lenne a magasabb szint a szolgáltatás vagy a jobb eladó. 

Tehát mit jelent ez valójában jelent számunkra? Tehát hadd menjen erre. Megyek menni aws.amazon.com. Csak azért, mert Jó menü lehetőséget. De ugyanezek a tanulságokat kell alkalmazni a csomó más felhő gyártók. Sajnos, ez gyakran marketing beszélnek, mint bármi. És ez folyamatosan változik. Szóval megy a honlapon, mint ez. És ez tényleg nem mondani sok mindent. 

És még azt, ahogy nézem ezt, ne igazán tudom mit jelentenek ezek a dolgok feltétlenül csinálni, amíg nem merülni. De kezdjük a bal oldalon, Compute. És fogok kattintson erre. És most Amazon őszintén egy túlnyomó szolgáltatások száma ezek a napok. De Amazon EC2 talán a legegyszerűbb. 

Amazon EC2 megteremti számunkra pontosan A kép láttunk egy perce. Ez hogyan, hogy egy csomó pénzüket a felhő. Úgy látszik, a Netflix és a többiek vannak a felhő velük. Ez mind jellemzően bolyhos marketing beszélni. Tehát amit akarok menni Pricing-- vagy inkább menjünk példányok először csak festeni egy képet e. 

Tehát ez változik a gyártó. És nem kell, hogy túl mélyen A gyomok itt, hogyan működik mindez. De ahogy az Amazon, például bérel egy virtuális gép, vagy a szerveren a felhő, hogy megvan ezek a fajta vicces nevek, mint t2.nano, ami azt jelenti, kicsi, vagy t2.large, ami azt jelenti, nagy. Mindegyikük ad sem egy vagy két virtuális processzort. 

Miért egy virtuális CPU? Nos, a fizikai gép esetleg van 64 vagy több tényleges CPU. De ismétlem, a szoftveren keresztül, hoznak létre az illúziót hogy az egyik gép lehet divvied akár több felhasználó számára. Így tudjuk gondolni ezt amelynek egy Intel CPU vagy kettő. CPU kredit hour-- tenném El kell olvasni az apró betűs hogy ez mit jelent valójában. Ez azt jelenti, hogy mennyi a gép akkor óránként vis-a-vis más vásárlók ezen a hardveren. 

Itt van, hogy mennyi RAM memória get-- akár fél gigabyte, vagy 500 megabájt, vagy 1 gigabyte, vagy 2. És akkor a tárolás csak utal milyen lemezeket adnak. Van más tároló technológiákat kínálnak. De ami még érdekesebb, akkor lehet, hogy az árképzést. 

Tehát, ha a CTO vagy egy mérnök, aki nem szeretnénk futtatni a szerver a irodai, bármilyen okból, és ez túl bonyolult vagy drága vásárolni szerverek és co-keresse meg őket, és bérleti díj fizetésére valamilyen fizikai ketrecben helyet somewhere-- csak szeretne ülni A laptop késő este, írja be a hitelkártya adatait, és kiadó szerverek az cloud-- is, mi itt megteheti. Megyek lemenni az alábbiakra: Linux egy népszerű operációs rendszer. És nézzük csak, hogy egyfajta dolgot. Whoops-- túl nagy. 

Tehát nézzük meg a legapróbb virtuális gép, amely úgy tűnik, hogy, céljainknak, egy CPU és 500 megabájt RAM-mal. Ez elég kicsi. De őszintén szólva, webszerverek nem kell tennie, hogy sok minden. Van jobb szemüveg a laptop. De nem kell azokat szemüveg manapság a dolgok. Meg fogsz fizetni 0,0065 $ óránként. 

Tehát lássuk. Ha vannak 24 óra egy nap, és fizetünk ennyit óránként, fog kerülni $ 0,15 bérelni, hogy adott szerveren a felhő. És ez csak egy nap. Ha ezt tesszük 365-- $ 57 bérbe adott kiszolgálón. Így hangzik szuper olcsó. 

Ez is szuper alacsony teljesítmény. Tehát, kurzusok tanítok itt, inkább használni azt hiszem t2.smalls vagy t2.mediums. És lehet, hogy van egy pár száz felhasználók, néhány ezer felhasználó, összesen. Ez elég szerény. Nézzük, mi ez kerülne. Tehát, ha én ezt honnan alkalommal 24 órán alkalommal 365, ez az ember 225 $. És a tanfolyamok Tanítok, általában fut két mindent, a redundancia és a teljesítmény. Tehát lehet, hogy tölteni, ezért 500 $ a szerverek hogy szükségünk lehet évente. 

Most, ha több kell performance-- vessünk egy pillantást a memóriát. Beszéltünk memória egy kicsit. És ha több kell memory-- és 64 gigabyte az a szám, én csak mentioning-- ez majdnem $ 1 óránként. És akkor elég gyorsan, hogy hol ez goes-- így 24 órán alkalommal 365. Tehát most már $ 8000 évi Egy elég tisztességes szerver. 

Tehát egy bizonyos ponton, ott ez inflexiós pont ahol most tudtuk tölteni 6000 $ Valószínűleg és vesz egy gépet, mint hogy és törleszt a költsége több mint talán két három év, az élet a gép. De mi lehet lökni a előnyben vagy helytelenít bérbeadás a gép a felhő, mint ez? Ismét, ez hasonló, valószínűleg az egyik ilyen Dell szerverek láttuk a képen egy kicsit korábban. 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, ez egy hatalmas fejjel. Mert mi nem vásárol a gépet, azt nem kell unbox meg. Nem kell, hogy szüntesse meg. Nem kell, hogy dugja be a rack. Nem kell, hogy dugja be. Nem kell fizetni az elektromos számlát. 

Nem kell fordulni A légkondicionáló berendezés. Ha egy merevlemez meghal, nincs vezetni az éjszaka közepén megjavítani. Nem kell, hogy hozzanak létre ellenőrzés. Nem kell az alábbiakra: a lista megy tovább és az összes fizikai dolgok akkor nem kell csinálni mert "a felhő." 

És hogy tisztázzuk, a számítási felhő ez nagyon agyonhasznált kifejezést. Ez tényleg csak azt jelenti, hogy valaki fizet mást futtatni szerverek az Ön számára, vagy bérlő számára valaki másnak a szervereket. Tehát a "cloud computing" új. Az ötlet évtizedes. Szóval ez elég meggyőző. 

És mi több, nem kapsz? Nos, akkor is kap arra, hogy tegyen meg mindent egy laptop otthon. Más szóval, az összes képeket én csak drawing-- és nem volt olyan régen, hogy még Én mászik körül a szerveren emeleten csatlakoztassa a kábeleket az az egyes vonalak, amit látsz, és korszerűsítése a működési rendszerek, és a változó a meghajtókat. Van egy csomó testiség az egésznek. 

De mi szép a virtuális gépek, mint a neve is sugallja, a fajta, most van a web-alapú interfészek, amellyel ha azt szeretnénk, az egyenértékű egy sor erről a szerverről a másik, csak írja, írja, írja, kattintson és húzza, Küldés gombra kattint, és íme, van ez a vezetékes fel virtuálisan. Mivel ez mind kész szoftver. És az ok, hogy kész a szoftver ismét mert van annyi RAM, és így sok CPU elérhetővé számunkra ezekben a napokban, noha az összes ilyesmi időt vesz igénybe, lassabb futtatni a dolgokat a szoftver, mint a hardver, mint ahogy ez lassabb használni a mechanikus eszköz, mint egy merevlemez, mint a RAM, valami tisztán elektronikus. Nagyon sok erőforrás elérhetővé számunkra. Mi emberek egyfajta invariantly lassú. És így most a gép tehet így sokkal több egységnyi idő alatt. Van ezek a képességek hogy a dolgokat virtuálisan. 

És ezt mondom kurzusok Tanítok, például itt, Jelenleg mintegy talán egy tucat így a teljes virtuális gépek mint hogy a futás egy adott időt csinál front end cucc, csinálsz end cucc. Megvan minden kedves tárolására. Tehát minden olyan videók, beleértve a dolgok mint ez, hogy mi forgatás, a végén üzembe helyezés a felhő. Amazon szolgáltatások nevezett Amazon S3, az egyszerű tárolási szolgáltatást, amely olyan, mint a lemezterület a felhő. Van valami nevezett CloudFront, amely egy CDN szolgáltatás, tartalom Delivery Network szolgáltatás, amely azt jelenti, hogy vegye az összes fájlt és Önnek automágikusan megismételni a világ körül. 

Tehát ne csináld preemptively. De az első alkalom, hogy valaki Indiában kéri a fájlt, akkor esetleg cache helyben. Az első alkalommal a kínai, az először Brazíliában, ami történik, elkezdenek caching helyben. És akkor nem kell, hogy hajtsa végre ezt. És ez így van, így hihetetlenül kényszerítő manapság mozgatni a dolgokat a felhő. Mert ezt a képességet szó hogy nem az emberek csinálnak majdnem annyi munka. És szó szerint nem kell annyi emberek csinálnak ezek a munkák anymore-- "Ops", vagy operatív szerepek többé. Te tényleg csak meg kell fejlesztők és kevesebb mérnökök aki csak a dolgok szinte. Tény, hogy csak, hogy a Ön egyfajta ezt, hadd menjen árazását egy másik terméket itt. Lássuk valami hasonló CDN S3. Tehát ez lényegében egy virtuális merevlemez a felhő. És ha lefelé görgetve pricing-- így 0,007 $ per gigabyte. És that's-- hogyan csináljuk ezt? Azt hiszem, ez havonta. 

Tehát, ha ez egy month-- vagy naponta? Dan, ez naponta? Ez havonta, OK. Szóval, ha ez egy month-- Sajnálom, ez a 0,03 $ havonta. Van 12 hónapig az évben. Szóval mennyi adat talán tárolja a felhőben? Egy gigabyte nem nagy, de én Nem tudom, mint 1 TB, így, mint 1000 ilyen. Ez még nem minden, hogy sok. Ez 368 $, hogy tárolja a terabyte Az adatok az Amazon cloud. Tehát mi van néhány A kompromisszumokra, akkor? Ez nem minden jó. Semmi sem beszéltünk ma egyfajta nélkül fogás vagy a költség. Tehát mi rosszul mozgó Mindent a felhő? KÖZÖNSÉG: Biztonsági. DAVID MALAN: OK, mit jelent? KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, így van. És nem szeretné néhány véletlenszerű mérnökök Amazon, hogy akkor soha nem találkoznak, amelynek fizikai hozzáférés azoknak a számítógépeknek, és ha valóban akart, és virtuális hozzáférés? És bár a elmélet software-- is, titkosítás teljesen védelmet nyújt ez ellen. Tehát, ha mi te tárolása a kiszolgálókon A encrypted-- kisebb problémát. 

De amint egy emberi rendelkezik fizikai hozzáférése van a géphez, a titkosítás félre, minden fogadás fajta ki. Lehet, hogy tudják, múlt hogy PC különösen, akkor is, ha már ezek a dolgok "BIOS jelszavak" voltak, amikor az asztali elindult felfelé, azt kéri a jelszót, semmi köze Windows, akkor általában csak nyissa meg a ház a gép, meg apró tűk, és egy ún egy jumper, és csak csatlakozni E két vezetéket körülbelül egy másodpercig, ezáltal teljessé egy áramkört. És, hogy megszüntetné a jelszót. 

Tehát, ha van fizikai hozzáférés a eszköz, meg tudod csinálni az ilyen dolgokat. Akkor távolítsa el a merevlemez-meghajtót. Akkor hozzáférhet így. És így ez az oka annak, esetében Dropbox, Például, ez egy kicsit aggasztó, hogy nem csak ők hogy az adatok, annak ellenére, hogy titkosított, akkor is van a kulcs. További gond? 

KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, ez nagyon true-- a Googles, a Alma, A Microsofts a világ. És valóban, mióta Meg volt az iPhone? Ja, ide vagy oda. KÖZÖNSÉG: [hallható] DAVID MALAN: Sajnálom? Te azok között, akik van egy iPhone, igaz? KÖZÖNSÉG: Igen. DAVID MALAN: Meddig volt már az iPhone? KÖZÖNSÉG: [hallható] DAVID MALAN: OK, így Apple szó tudja hol voltál minden órájában A nap az elmúlt öt évben. 

KÖZÖNSÉG: [hallható] DAVID MALAN: Melyik egy csodálatos tulajdonsága. KÖZÖNSÉG: [hallható] DAVID MALAN: Igen, de kompromisszumot az biztos. KÖZÖNSÉG: [hallható] 

DAVID MALAN: Igen, ez nagyon könnyű. KÖZÖNSÉG: [hallható] DAVID MALAN: Egyéb árnyoldalai? KÖZÖNSÉG: [hallható] DAVID MALAN: Absolutely-- technológiailag, gazdaságilag, ez elég meggyőző, hogy fajta megszerezzék ezeket a méretgazdaságosság és mozgassa mindent az úgynevezett felhő. De akkor valószínűleg nem akar megy néhány a legnagyobb hal, az amazonok, a Googles, a Microsofts-- Rackspace elég big-- és néhány más, és nem szükségszerűen fly by night emberek akiknek ez nagyon könnyű csinálni ez a fajta technika manapság. És ez akivel fizet 5,99 $ havonta. De akkor biztosan kapja, amit fizetni. 

Amikor azt mondja, [hallható], ekkor dolgok, mint ez az öt kilences jön, amellyel még ha technológiailag nem tudjuk igazán garantálni 99.999, mi csak építeni valamilyen A büntetés a szerződés hogy ha ez nem történik, legalábbis van valami kerül nekünk, az eladó. És ez az, amit jellemzően egyre hozzájárulásához. 

KÖZÖNSÉG: [hallható] 

DAVID MALAN: És egyféle áldás az, hogy még ha lemegyünk, az Például, sőt egyes társaságok, A valóság az Amazon, Például oly sok stoppol ügyfelek, a jól ismert ügyfelek, működést bizonyos adatközpontok hogy ha valami igazán elromlik, mint természeti csapások és az időjárás, és az ilyen, ha van bármilyen vigasz, ez, hogy te nagyon jó társaság. A honlapon lehet elérhető. De olyan, mint a fele A népszerű internetes. És ez így vitathatatlanul egy kicsit ízletesebb az ügyfelek ha inkább egy internetes dolog, mint egy acme.com dolog. De ez egy kicsit csal. 

Tehát mind az egyéb dolgokat nézni, csak azért, hogy ne zárja ki mások, ha megy a Microsoft Azure, ők egy Linux és a Windows cucc összevethető az Amazon. Ha megy a Google Compute Engine, van valami hasonló is. És csak azért, hogy még kerekebb ezek felhő kínálatát, Csinálok említést egy másik dolog. Ez egy népszerű weboldal ez reprezentatív egy osztály technológiákat. Azok mi csak beszélgettünk kb, Amazon, lesz IaaS, Infrastruktúra, mint szolgáltatás, ahol valamiféle fizikai hardver, mint szolgáltatás. Van SAAS. Valójában, hadd írd le ezeket. 

IAAS-- Infrastruktúra Mint szolgáltatás SaaS és PAAS, melyek rendkívül zavaró rövidítések amelyek leírják három különböző dolgokat. És a mozaikszavak magukat Nem igazán számít. Ez mind a felhő cucc most voltunk beszélünk, Az alsó szinten dolog, a virtualizáció hardver és tárolás Az úgynevezett felhő, hogy ez Amazon, a Microsoft, a Google, vagy más. 

Szoftver mint service-- mindannyian egyfajta ezt használja. Ha a Google Apps Gmail vagy naptár, minden ilyen web-alapú alkalmazásokat, hogy 10 évvel ezelőtt volna duplán kattintva ikonok a desktop, a szoftver mint szolgáltatás most tényleg webes alkalmazás. És a platform, mint a szolgáltatás jellegű függ. 

És egy példa adok itt összefüggésben a felhő computing-- van egy cég, amely elég népszerű manapság, Heroku. És ezek a szolgáltatások, egy platform, ha úgy tetszik, hogy fut tetején Amazon infrastruktúra. És csak, hogy még egyszerűbb a fejlesztők és mérnökök hogy web-alapú alkalmazások az interneten. 

Ez a fájdalom, kezdetben, hogy használja Amazon Web Services és egyéb dolgok. Mert valójában megismerni és megérteni körülbelül adatbázisok és web szerverek és terheléskiegyenlítők és az összes cuccot Én csak beszélt. Mivel minden Amazon tett nem rejtett azok tervezési kihívások. Már csak virtualizált őket és mozgassa őket egy böngésző, a szoftver helyett a hardver. 

De a cégek, mint Heroku és egyéb PAAS szolgáltatók, platform, mint szolgáltatás, arra használják a barebone alapjait hogy mi csak beszélgettünk, és építenek könnyebben szoftvert használ a tetején hogy ha azt akarjuk, hogy a web-alapú alkalmazás online ezekben a napokban, akkor biztos, hogy tudja, hogyan kell programozni. Meg kell tudni, hogy a Java vagy Python vagy PHP vagy Ruby vagy egy csomó más nyelven. 

De akkor is kell egy hely, hogy tegye azt. És beszéltünk korábban a kapok egy web hosting cég. Ez a fajta, a hasonló közép-2000s megközelítés kezd valamit az interneten. Manapság talán inkább fizet valaki mint Heroku néhány dollárt egy hónapban. És lényegében Miután tett néhány kezdeti konfiguráció, frissíteni a honlapon, akkor Csak írja be a parancsot egy ablakban. És bármilyen kódot, amit írt Itt a laptop azonnal gets szét bármennyi A szerverek a felhő. 

És Heroku gondoskodik minden a komplexitás. Úgy gondolják összes adatbázis dolog, a terheléselosztás, az összes fejfájást, hogy mi már Csak írt a táblára, és elrejti az összes, hogy az Ön számára. És cserébe, csak fizetnek nekik egy kicsit. Szóval ezeket infrastruktúrák szolgáltatás, platformok, mint szolgáltatás, majd a szoftver mint szolgáltatás. Ez megint ezt absztrakció vagy rétegződés. 

Bármilyen kérdése van a felhő, vagy épület saját infrastruktúra? Rendben, hogy volt egy csomó. Miért nem megyünk előre, és vesszük a 15 perces szünet van. Vissza fogunk térni néhány új fogalmak és egy kis gyakorlati lehetőség mielőtt az esti vége. 