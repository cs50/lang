DAVID 마란 : 좋아, 다시 환영합니다. 우리는 클라우드 컴퓨팅에 뛰어 전에, 나는 잠시 동안 일시 정지 줄 알았는데 미결제 질문이있는 경우 점심 시간 와서 또는 주제 즉, 지금 관심이있을 수 있습니다. 청중 : [들리지] 

DAVID 마란 : OK. 오 그래. 청중 : [들리지] 

DAVID 마란 : 아니, 물론. 의 OK, 잘 만하면 모든 문제는 몇 시간에서 발생 내일 특히. 그러나의 어디에서, 다음을 살펴 보자 설정에 대한 마지막 토론 웹 사이트는보다 일반적으로, 리드 이 클라우드 컴퓨팅에 관해서, 서버 아키텍처를 설정 의사 결정의 종류 그 엔지니어와 개발자와 관리자 이 때 확인해야 단지보다 더 많은 일을하는 달 웹 호스트 당 $ 10에 가입 당신은 실제로 구축하고자 할 때 자신의 인프라를 제공합니다. 그리고 우리는이 다시 넥타이하려고합니다, 예를 들어, 보관 및 다른 사람에 그들처럼. 

그래서 고려하기 시작하자 어떤 문제 사업으로 발생 좋은 얻고 좋은 문제가 발생한다. 데의 매우 간단한 경우에 따라서 웹 서버가 어떤 회사 당신은의 말을하자, 서버가있을 수 있습니다 그 우리는 단지 그 다음과 같습니다 그릴 수 있습니다. 그리고 요즘 대부분의 servers-- 및하자 실제로 그냥 여기에 사진을 넣어 조금 덜 성운의 그. 

그래서 델 랙 server-- 다시 하루에,이 메인 프레임 컴퓨터이었다 즉, 전체 객실을했다. 요즘, 당신이라면 서버를 얻기 위해, 그것을 이 같은 작은 선물을 보일 수 있습니다. 서버는 무엇으로 측정 랙 장치, 또는 RU에 불린다. 그리고 하나의 RU는 1.5 인치, 이는 업계 표준입니다. 그래서이 두 개의 RU 서버처럼 보인다. 그래서 3 인치 높이입니다. 그리고 그들은 일반적으로 십구인치 넓은 것 이런 종류의 물건을 모두 의미 표준화된다. 

당신은 데이터 center--에 보면 그래서 단지 하나의 서버에서,하지만하자 구글의 좀 봐 데이터 센터 및 볼 경우 우리 Google 이미지에 좋은 그림을 참조하십시오. 이것은 훨씬 더 당신보다 불 일반적으로 찾아 많은 것 섹시 결과를 찾고 있습니다. 그러나 이 부부의 모습입니다 백 서버의 모든 같은 크기에 대한, 실제로, 랙 랙 후 후 데이터 센터의 랙 후 랙. 

이 항아리 같은 것을이 아니라 할 수있다 내가 구글을 봤 때문에, 구글의 수. 하지만 대표가 될 수 더 일반적으로 데이터 센터 많은에 회사는 일반적으로 공동 있습니다. 공동 위치는 일반적 의미 당신은 Equinix 같은 장소로 이동하는 것이 또는 다른 공급 업체가 큰이 전력을 많이 가지고 창고, 희망 냉각 많은, 보안 많은, 개별 케이지의 랙을 둘러싸 서버는, 당신은 랙 임대 중 또는 당신의 랙을 가지고. 

그리고 개별 기업, 신생 특히, 생체 인식의 어떤 것 자신의 케이지, 또는 키에 도착, 또는 카드 키. 당신은 문을 엽니 다. 그리고 내부에 단지가 평방 피트의 공간 당신의 내부에, 지불하고 있는지 어느 당신은 당신이 원하는 무엇이든 넣을 수 있습니다. 

그리고 당신은 일반적으로 전력 비용을 지불합니다. 그리고 당신은 발자국 비용을 지불합니다. 그리고 당신은 지불 서버에 대한 직접 당신은 그 공간으로 데려하고있다. 그리고 당신은 다음을 가지고있는 할 수있는 옵션은 사람을 지불입니다 인터넷 서비스 연결을위한. 당신은 어떤 수를 지불 할 수 공급 업체의 모든 누구의 일반적으로 데이터 센터에 와서. 

하지만 진짜 재미있는 질문은, 무슨 일이 실제로 그 랙에 간다? 잘 그들은 수있는 모든 우리가 본 것을처럼 보인다. 그러나 그들은 서로 다른 기능을 수행 다른 일을해야 할 수도 있습니다. 실제로하자 이 토론 동기를 부여 의 문제, 어떤 문제와 당신이 성공적이라면 시작이 발생 하는가? 

그래서 당신은 웹 사이트를 가지고 당신은 구축 한 것이다. 그리고 어쩌면 위젯을 판매 또는 그런 일. 그리고 당신은 매우 잘 해왔습니다 온라인 위젯의 매출. 그리고 당신은 경험하기 시작 일부 증상, 귀하의 웹 사이트. 일부있을 수 있습니다 무엇 기술 증상 사용자는 사업으로보고 있음 성장과 호황을 누리고있다 귀하의 웹 사이트입니다 그 혜택? 

청중 : [들리지] 

DAVID 마란 : 네, 정확히. 그래서 당신은있을 수 있습니다 당신의 웹 사이트의 둔화. 왜 그런 일이 있는가? 글쎄, 우리를 위해, 가정하면 토론을 위해 지금 당신이 일에있어, 것을 이러한 상용 웹 호스트 우리가 점심 전에 대한 이야기​​를하는 것이, 당신은 달러의 어떤 수를 지불 당 월에, 당신은 이미 지불했습니다 도메인의 연간 비용 웹 호스트는 아마 있는지, 이름 자원을 지나치게 어느 정도. 그래서 당신은 사용자 이름이있을 수 있습니다 자신의 서버에 암호를 입력합니다. 그러나 그렇게 수있는 몇 가지 다른, 또는 여러 심지어 몇 아마 다스 다른, 또는 백 다른 사용자. 

그리고 웹 사이트는 물리적으로 살 동일한 서버에. 왜 이런 일이 가능할까요? 그런데 요즘, 서버 이 같은 일반적으로 어쩌면, 여러 개의 하드 드라이브가 많은 6 개의 이상의 하드 드라이브, 이들 각각은 많이있을 4 테라 바이트 요즘있다. 그래서 당신은 공간의 24 테라 바이트가있을 수 있습니다 이 같은 하나의 작은 서버입니다. 

그리고 당신은 그 공간의 일부를 도용하는 경우에도 이중화, 백업 목적으로, 그것은 여전히​​ 공간이 꽤 많이 있습니다. 확실히, 전형적인 웹 사이트 그 많은 공간을 필요로하지 않는다. 그냥 사용자를 등록 그리고 주문의 로그를 저장 모든 그렇게 많은 공간을 차지하지 않습니다. 그래서 당신은 확실히 그것을 분할 할 수 조금 모든 사용자에게 제공 그 단지 작은 조각. 

한편, 컴퓨터 요즘 같은 일반적으로 그냥 여러 CPUs--을하지 않았습니다 하나, 어쩌면 둘, 아마 네, 아마 16, 또는 더. 그리고 그 CPU를 각각 라는 뭔가가 가지처럼 코어, 뇌의 내부 뇌. 그래서 여기에 사실 대부분의 사람들에 현대 노트북은 아마 듀얼 코어가 또는 쿼드 코어 CPU-- 아마 만 요즘 노트북의 내부에 하나의 CPU. 하지만 데스크톱 컴퓨터 같은 랙 컴퓨터 이 꽤 몇 가지가있을 수 있습니다 이상의 CPU, 차례로 코어입니다. 

그리고 솔직히, 심지어 우리의 맥과의 PC를의 오늘, 당신은 정말 듀얼 코어가 필요하지 않습니다 또는 쿼드 코어는 이메일을 확인합니다. 어떤 병목 때이 있다면 그 컴퓨터를 사용하여 온다 당신은 인간의 아마 있습니다 해당 컴퓨터에 대한 느린 것. 그리고 당신은 할 수있을 않을거야 빨리 당신이 경우 이메일을 확인 여러 개의 CPU 또는 코어 4 배를 가지고있다. 

그러나 같은 종류 서버의 진실. 하나의 단일 웹 사이트는 그렇지 않을 수 있습니다 반드시 하나 이상의 필요 CPU 또는 하나의 코어 하나 일 안에 작은 뇌 사고 및 모든 처리. 따라서 제조업체들은 유사하게이 그 자원을 슬라이스 시작 그래서 어쩌면 당신의 웹 사이트 하나를 가져옵니다 핵심, 당신의 웹 사이트가 하나의 코어를 가져옵니다, 아니면 우리는 하나의 코어를 공유하고 있습니다. 우리는 또한 디스크 공간을 공유하고 있습니다. 그리고 우리는 또한, RAM을 공유하고 또는 랜​​덤 액세스 메모리 전에에서, 어떤의 유한 금액도있다. 

그리고 그 핵심입니다. 아무리 비싼 컴퓨터가 있었다 여전히 유한있다 거기에 자원의 양. 그리고 더 많은 당신을 그 자원을 소비하려고, 느린 일이 될 수 있습니다. 그런데 왜? 왜 물건은으로 천천히 것 서버의 증상은 오버로드? 무슨 일이야? 

청중 : [들리지] DAVID 마란 : 네, 정확히. 나는 이전에 그 제안 RAM 메모리의 일종입니다. 그건 이에는 휘발성이다 여기서 응용 프로그램 및 데이터는 그들이 사용하는 때 저장됩니다. 그리고 그러므로 거기 단지 한정된 수 일의 당신은 분명히 한 번에 할 수 있습니다. 그리고 그것은 또한 빠르다 이는 좋은 일이다. 그러나, 또한 더 비싸다 어떤 나쁜 일이다. 그리고 그것은 또한 낮은에 따라서 현재의 디스크 공간 량보다 하드 디스크 경향이 공간은 저렴합니다. 

즉, 4 테라 바이트가있을 수 있습니다 컴퓨터의 디스크 공간. 하지만 4가있을 수 있습니다 기가 바이트, 64 기가 바이트, 크기, 배의 순서로 컴퓨터의 RAM 1,000 이하. 그래서 컴퓨터는 무엇을합니까? 글쎄, 당신 있다고 가정 64기가바이트을해야합니까 이 같은 서버에 RAM의 어떤 아주 일반적인, 그렇지 않으면 낮은 것 요즈음. 하지만 당신은 너무 많은이 있다고 가정 너무 많은 일을하는 사용자 당신이 가지 종류의 메모리 65 기가 바이트 필요 그 모두를 처리 할 동시 사용? 

글쎄, 당신은 말할 수 있습니다, 죄송합니다, 일부 사용자 수 다만 사이트에 액세스 할 수 없다. 그리고 그것은 측정 확실히 최후의 수단,의. 운영 같이, 또는 윈도우 나 Mac과 같은 시스템, OS 또는 Linux 또는 Solaris 또는 해당 서버에 다른 운영체제의 수, 다만 결정할 수, 그거 알아? 난 단지 RAM 64 기가 바이트있다. 나는 가지 (65)가 필요합니다. 그래서 당신은 무엇인지? 나는 1 기가 바이트 걸릴거야 RAM의 데이터의 가치 그는 가장 최근에 액세스 한 다만, 일시적으로 디스크로 이동 말 그대로 빠른에서 복사 느린 메모리로 메모리 그때 나는 것을 처리 할 수​​ 있도록 메모리 65 기가 바이트 필요, 거기에 몇 가지 계산을한다. 그럼 내가 그 일을 끝났어요 때, 난 그냥 디스크에 그 이동합니다 나는 일시적으로 넣어 다른 RAM 이동 디스크 다시 실제 하드웨어에 그래서 나는 멀티 태스킹의 종류입니다. 

그래서 나는 종류의 일을두고있어 일시적으로이 느린 공간 그래서 나는 환상을 만들 의 모두를 취급. 하지만 경기 침체가있다. 왜? 음,이 하드의 내부 디스크 요즘은 무엇입니까? 오히려, 어떤 하드를 만든다 RAM에서 다른 드라이브 최선을 이제 알아? 

청중 : [들리지] 

DAVID 마란 : OK, 사​​실. 청중 : [들리지] 

DAVID 마란 : 그래서 매우 사실. 그리고 그 부작용 또는 기능입니다 사실 그 RAM은 참 빠르다. 그러므로 당신이 원하는 현재 사용을 위해 사용합니다. 그리고 디스크가 느립니다. 그러나 영구 또는 비 휘발성이다. 그래서 당신은 장기 저장을 위해 사용합니다. 그러나 측면에서 구현, 나는 위로를 보면 무엇 DIMM을라고, 듀얼 인라인 메모리 모듈이는 RAM의 어떤 조각입니다 일반적으로 다음과 같을 수 있습니다. 

그래서 버그 우리의 Mac--의 내부. 우리의 Mac과 PC, 우리의 바탕 화면의 내부 컴퓨터의 메모리 스틱을 가질 것이다 당신이 그들에게 전화하는 것처럼, 또는 DIMM을, 또는 SIMM을 다시 하루에, 메모리 그는 다음과 같습니다. 우리의 노트북은 아마 일이 그 크기 나 절반 크기 세 번째입니다. 그들은 조금 작은 것, 하지만 같은 아무것도 모르겠어 작은 녹색 실리콘 조각 웨이퍼 또는 플라스틱이 많은 그들에 작은 검은 칩이 전선의 모든 상호 연결. 당신의 전체 무리가있을 수 있습니다 컴퓨터의 이러한 내부. 그러나 테이크 아웃은 여기 그것은 완전히 전자입니다. 다만 전자들있다 이 장치에 흐르는입니다. 대조적으로, 우리가 보면 하드 드라이브의 내부 그리고 사진을 올려 여기에 대신 것 이 같은 것을 볼 수 이는 전력을 가지고 궁극적으로 통과하는. 그러나 또한 밖으로 점프 이 일에 대해 당신에? 청중 : [들리지] DAVID 마란 : 네, 거기에 분명히 움직이는 부품. 그것은 오래 된 기록과 같은 종류의 플레이어 또는 축음기 플레이어. 그리고 그것은 꽤 많이 있습니다. 그것은 that--보다 조금 애호가의 사용하는 축음기 플레이어 반면, 이 사실은, 레코드에 홈 작은 작은 자성 입자를 사용 우리가 확실히 볼 수 있습니다. 그러나 약간의 자성 입자의 경우 이처럼 보이는, 그것은 1 간주됩니다. 그리고이 보이는 경우, 대신 남북의 남북, 그것은 0이 될 수 있습니다. 우리가 만들 수있는 방법을 우리는 내일을 볼 수 있습니다 그에서 더 흥미로운 것들. 

그러나 아무것도이다 그 물리적으로 이동할 수있어 확실히 느리게 갈 것입니다 빛의 속도보다 이론에있는 무슨이다 전자가 흐를 수 있습니다 현실적으로 상당히하지만. 그래서 기계 devices-- 훨씬 느리다. 그러나 그들은 저렴입니다. 그리고 당신은 너무 많이 들어갈 수 그 내부에 더 많은 데이터. 그래서 사실이 세계 어떤 존재 가상 메모리라고, 이 같은 하드 디스크를 사용 그것은 RAM을 것처럼 사용자에게 투명한 간단하게 데이터를 이동하여 RAM에서 하드 디스크, 당신이 필요로 할 때 다음 다시 이동 그것은 다시 둔화를 만듭니다. 당신은 말 그대로을 가지고 있기 때문에 한 장소에서 다른 장소로 복사합니다. 그리고 그 일이 당신에 복사하고 있고 에서는 RAM보다 실제로 느립니다 당신이 원하는 곳이 될 수 있습니다. 

대체 솔루션 here-- 당신이 천천히 마음에 들지 않는 경우, 당신의 가상 메모리입니다 과로되는 종류, 이 문제에 대한 또 다른 해결책은 무엇인가? 

청중 : [들리지] DAVID 마란 : 음, 가상 메모리를 증가 우리는이에하자 것 더 큰 규모. 우리는 가치 66기가바이트를 처리 할 수 메모리 요구 사항, 또는 67기가바이트의. 하지만 내가 싫어하는 가정 사실이 천천히 아래로, 나는 가상 해제 할 메모리 즉도 가능하다면, 또 내가 무엇을 던질 수 이 문제를 해결하기 위해, 나는 더 많은 사용자를 처리 할 위치 더 많은 메모리 요구 사항 나는 물리적 순간에있는 것보다? 

청중 : [들리지] 

DAVID 마란 : 불행하게도 없습니다. CPU와 그들이있어 코어 그래서 으로는 유한 한 자원이다. 그리고 그 상황에서 아무 아날로그가 없습니다. 하지만 좋은 질문입니다. 그래서 너무, 경우, 명확하게하기 이 컴퓨터는 내부, RAM의 스틱 모양으로,의 말을하자 이 항아리 같은 그래서 우리는이 RAM 전화 할게. 이상 여기서 하드 디스크 드라이브이다. 그리고 난 그냥이를 그릴 수 있습니다 그림으로 작은 원으로. 0과 1은 모두에있다 these-- 데이터, 우리는 그것을 일반화 수 있습니다. 

본질적으로 사용자가이면 같은 응용 프로그램을 실행, ,의 말이 필요합니다 웹 사이트를하자 사용자 당 많은 RAM, 내가 무엇을 제안하고있어, 이 일의 방법으로 가상 메모리라고, 단지 일시적으로 이동하는 것입니다 그 여기 그래서 지금 내가 누군가 다른 사람의 메모리를 이동할 수 있습니다 저기 요구 사항. 그리고 그이 끝나면 나는 이상이 다시 복사 할 수 있습니다 그리고 이것에 의해, 이동 간다 제가 다른 곳에서이 원 전부. 

그래서 그냥 많이있다 switcheroo, 여기에 테이크 아웃입니다. 그래서 만약 당신이 좋아하지 않아, 당신은하지 않습니다 하드 드라이브에 아무것도 넣어 원하는, 명백한의 종류 무엇 비즈니스 사람의 솔루션 문제 또는 엔지니어에 솔루션, 그 문제에 관해서는, 너무? 

청중 : [들리지] 

데이비드 마란 : 그래, 말 그대로 의미 이 문제에 돈을 던져. 그리고 실제로, 이것은 완벽 상위 레벨의 일부 SEGUE 클라우드 컴퓨팅의 토론. 이는 많은 동기가되어 있으므로 재정적 인 결정에 의해, 도 반드시 기술되지 않습니다. RAM의 64 기가가 아니라, 너무 작은 경우, 왜 RAM 128 기가 바이트하지? 왜 RAM 256 기가 바이트하지? 글쎄, 왜? 

청중 : [들리지] DAVID 마란 : 음, 물론, 더 많은 돈을 비용. 그리고 당신은 이미 예비가있는 경우 하드 디스크의 공간을 효과적으로 또는 동등, 하드 디스크 공간이 너무입니다 당신은뿐만 아니라 그것을 사용할 수 있습니다 훨씬 저렴합니다. 그래서 다시,이 거래는 떨어져있다 우리는 오늘 아침에 그 이전 보았다 여기서 정말이 아니다 반드시 정답, 그냥 좋든 나쁘 든 답이있다 당신이 실제로 관심 내용에 따라. 

그래서 또한 기술 현실이있다. 나는 컴퓨터를 살 수 없다, 내 지식, 조 기가 바이트 지금의 RAM. 그것은 단지 물리적으로 존재하지 않습니다. 그래서 일부 상한이있다. 그러나 혹시라도 쇼핑을 한 경우 소비자 Mac 또는 PC 용, 또한, 일반적으로있다 기능이 곡선 좋은있을 수 있습니다 경우, 더 나은, 그리고 최고의 컴퓨터. 

그리고 한계를 반환 당신의 달러 매수에 최고의 컴퓨터 대 더 나은 컴퓨터 거의 고하지 않을 수 있습니다 조금 더 많은 돈을 지출로 그리고 더 나은 컴퓨터를 점점 좋은 컴퓨터를. 즉, 당신이 지불하고 프리미엄 라인의 상단을 얻을 수 있습니다. 

그리고 우리는에서 확인할 수 있습니다 무엇을 클라우드 컴퓨팅의 토론 무슨 일이 매우 흔한 일이다 구글과 같은 일, 어떤 회사 초기 대중화에, 지불되지 않았다 및 비용, 정말 멋진 건물 최대 재미있게 컴퓨터 많은 모든 것이 많은, 오히려 구입하거나 예쁜 건물 겸손 컴퓨터하지만 그들 중 많은, 일반적으로 뭔가를 사용하여 라는 수평 확장 대신 수직 스케일링. 

그래서 수직 스케일링은 얻을 의미보다 RAM, 더 많은 디스크, 모든 것을 더, 그리고 일종의 투자 수직으로 하드웨어에 그래서 당신은 단지를 받고있어 최고 중의 최고 중 최고, 하지만 당신은 그것을 위해 지불하고 있습니다. 수평 스케일링 종류의를 얻을 수있다 아래 계층 것들, 좋은 모델, 심지어 더 모델 하지만 그들 중 많은 얻는다. 그러나 바로는 많이 먹을수록 이 경우, 예를 들면 them--, 웹 서버,이 경우 서버 또는 하나의 웹 호스트는 불충분 그럼 그냥 직관적으로는 부하의이 문제에 대한 해결책 서버 또는 과부하 어느 것은 더 큰 서버를 얻을 또는, 내가 대신 여기에 무엇을 제안하고있어 의 말하자면 수직 스케일링, 것, 그거 알아? 다만 이들의 두 번째를 얻을. 아니면 심지어 세 번째를 얻을. 하지만 지금 우리가 만든 공학 문제 이 사업의 본래 나 금융 의사 결정. 엔지니어링 문제는 지금 무엇입니까? 

청중 : [들리지] 

DAVID 마란 : 그래, 어떻게 할 당신은 그들에게 그리고 - 미안 연결? 

청중 : [들리지] DAVID 마란 : 오른쪽, 난 아직도 잔 마셔요 때문에 나는이 그림에 저를 재 도입하는 경우, 이 내 노트북​​ 어딘가에 경우 사이에 지금 인터넷에 저와 우리가 이야기하고있는 회사, 지금은되는, 파악해야 서버는 나는이 특정 사용자를 보낼 수 있습니까? 그리고 다른 사용자가 같은이 있다면 이 다음 여기이 하나, 아마도 이것은 유저 (A)이있다 사용자 B는, 이것은 사용자 C 인 이것은 이제 서버 1, 2, 3--이고 직관적 인 대답은 여기에, 단지 수 있습니다 우리는 1에 사용자 A를 보내드립니다 및 B 2, C 3에. 그리고 우리는 많은 사용자로 3 회를 처리 할 수​​ 있습니다. 

하지만 그건 지나친 단순화이다. 어떻게 어디에서 보내 누구로 결정? 그래서이를 통해 추론 해보자. 그래서 컴퓨터한다고 가정 A, B, C 및 고객이다 및 서버 1, 2, 3은 가로로 서버를 확장. 그래서 그들은 종류의 동일입니다. 그들은 모두 같은 소프트웨어를 실행하고 있습니다. 그리고 그들은 모두 같은 일을 할 수 있습니다. 그러나 이유 우리는이 그 중 세 개는 너무하다 우리는 세 가지를 처리​​ 할 수​​있는 한 번에 많은 사람들이 같은 시간. 

그래서 우리는 알고 우리의 점심 전에 토론 하드웨어는 사이가 있음 이 노트북 및 서버. 그러나 우리는 그저 일반화합니다 이제 인터넷이나 클라우드있다. 그러나 우리는 내 집에 알고, 홈 라우터는 아마이있다. 서버 근처, 거기에 아마 라우터, DNS 서버, DHCP. 아무것도있을 수 있습니다 우리는이 이야기합니다. 

어떻게 우리가 결정하는 시작 수행 사용자 A가 something.com로 진행하면 에 대한 사용자 경로에있는 서버? 우리는 어떻게이 이야기를 시작할 수 있습니까? 청중 :로드 밸런싱? DAVID 마란 :로드 밸런싱. 그게 무슨 뜻 이니? 

청중 : 반환 여기서 가장 사용이 그리고 하나가되는 대부분의 사용 가능한 리소스. DAVID 마란 : OK, 그래서 저를 보자 하드웨어의 새로운 타입을 소개 우리는 아직 논의하지 않은 것으로, 어떤 정확히,로드 밸런서이다. 이 역시 단지 서버가 될 수 있습니다. 그것은 정확히처럼 보일 수 있습니다 하나는 우리가 잠시 전에 보았다. 로드 밸런서는 정말 소프트웨어의 단지 조각 당신은 하드웨어의 조각에 실행하는 것이. 

아니면 같은 공급 업체를 지불 할 수 시트릭스 또는 다른 사람, 시스코 또는 다른 사람. 당신은 자신의 하드웨어에 대한 지불 할 수 있습니다 이는 하드웨어 부하 분산 장치입니다. 그러나 그것은 단지 그들이 의미 로드 균형 조정을 미리 설치 하드웨어에 소프트웨어 및 함께 모두에 판매했다. 그래서 우리는 단지로 그릴 수 있습니다 우리의 목적을 위해 직사각형. 

어떻게 지금은 부하 분산을 구현합니까? 즉, 사용자 A가하고자 할 때 어떻게 든 내 사이트, 그들의 요청을 방문 또는 다른, 아마도 이들의 방법으로 우리가 이전에 대해 이야기 라우터, 결국 도달하는 것입니다 이 부하 분산, 다음 라우팅과 같은 결정을 내릴 필요가있다. 그러나 종류에 대한 라우팅 있어요 더 높은 목적의 지금. 그것은 것에 대해 단지 아니에요 점 A에서 점에 B.이 결정에 관하여 어떤 점 B는 them-- 중 최고입니다 1, 2 또는 3이 경우. 

그래서 여부를 결정 어떻게 3, 2, 1로 이동? 어떤 힘이 블랙 박스, 너무 말, 내부에 일을 할 수? 이것도 또 다른 예입니다 추상화의 컴퓨터 과학. 말 그대로로드 밸런서를 그린 검정 잉크의 블랙 박스로, 내부 그 중 몇 가지 흥미로운입니다 논리, 또는 마법도, 그 중 가야합니다 decision-- 1, 2 또는 3. 상기 입력은 A.이고 

청중 : [들리지] DAVID 마란 : 미안 해요? 청중 : [들리지] DAVID 마란 : 좋아, 어떻게 우리가 수도 거래의 유형을 분류 이리? 

청중 : 웹 페이지를보기 데이터베이스 쿼리 대. DAVID 마란 : OK, 그건 좋다. 그래서 어쩌면이 사용자 A 웹 페이지를 표시하려고합니다. 그리고 어쩌면, 심지어 정적 콘텐츠입니다 어느 경우 거의 변경되지 않는 뭔가. 그리고는 것 같아 아주 간단한 조작. 그래서 어쩌면 우리가 임의로거야, 하지만 합리적으로, 말 서버 (1)는, 인생에서 자신의 목적이다 정적 인 컨텐츠를 제공하기 위해, 파일이 드물게 경우 적 변화. 아마 페이지의 이미지이다. 어쩌면 그것은 페이지의 텍스트 나 재미 물건 등의 종류, 트랜잭션 아무것도, 동적 아무것도. 

반대로, 검사 사용자 A이면 자신의 쇼핑 카트의 밖으로 그 데이터베이스를 필요로 곳은 저장하기 잘, 그 거래를 기억 어쩌면 요청 서버 2로 이동합니다. 그래서 좋다. 그래서 우리는 균형을 기반으로로드 할 수 있습니다 요청의 유형에 대한. 우리는 이것을 어떻게 다른 할 수 있는가? 다른 것이라면 무엇 

대상 : 서버의 바탕으로 활용 및 용량. DAVID 마란 : 오른쪽, OK. 그래서 당신은, 카림을 그 앞에서 언급. 그래서 우리는 몇 가지 입력을 무엇을 제공하는 경우 서버 1, 2 중 [들리지]에, 3 그래서이 부하 분산에 그들은 단지 지속적으로 알리는 것 자신의 상태가 무엇인지 부하 분산? 이봐, 마찬가지로, 부하 분산, 나는 50 %의 사용률입니다. 즉, 내가 가진 절반 많은 사용자 사실 지금 ​​처리 할 수​​있다. 이봐, 부하 분산, 난 100 % 활용에서. 이봐, 부하 분산, 0 % 활용. 로드 밸런서, 그것의 경우 방법으로 설계된 것을 그 의견에 걸릴 수있다 입력으로서, 그 다음 수 결정, 우, 숫자 2는 100 %입니다. 내가 그에게 미래의 요청을 보내 보자 사용자가 아닌 이미 연결되어 있습니다. 이 사람은 0 %에 있어요. 의 그에게 많은 트래픽을 보낼 수 있습니다. 이 사람은 그가 50 % 말했습니다. 의 그에게 약간의 트래픽을 보낼 수 있습니다. 

그래서, 성분이 될 그 것 우리는 계정에 부하가 걸릴 수 있습니다. 그리고 시간이 지남에 따라 변경하는 것입니다. 그래서 결정이 변경됩니다. 그래서 정말 좋은 기술이다, 일반적으로 사용되는 하나. 우리는 다른 무엇을 할 수 있습니까? 그리고 이제 실제로 그냥 여기 요약 할 수 있습니다. 그래서 결정은 여기에있을 수 트래픽의 유형으로, 내가 전화 할게. 이는 부하에 기초 할 수있다. 어디 보자 경우 우리는 할 수 없습니다 몇 가지 다른 마련. 

청중 : [들리지] DAVID 마란 : 위치. 그래서 좋은 하나입니다. 그래서 당신은 어떻게 할 수 location-- 그 정보를 활용? 

청중 : [들리지] 

DAVID 마란 : 아, 좋다. 약 몇 밀리 초 그것은으로 감소 것 우리가 이것을보고 내용을 기반으로 아침, 당신은 말할 것? 

청중 : [들리지] 

DAVID 마란 : 음, 기반 추적 노선 우리는 단지, 이는 이전에보고 무언가의 거친 측정, 적어도 얼마나 오래 걸리는 데이터가 A에서 B로 취득하는 ,이었다 지역 아무것도처럼 무엇을 느낀다 74 밀리 초와 같은 줄 또는 걸릴? 그리고 아무것도 100 플러스, 200 플러스는 해외 아마이었다. 그리고 그 형에 기초 가정하는 것이 합리적 보인다 그 미국에있는 사용자에 대한 유럽​​ 서버에 액세스하기 두 번 또는 세 번 걸릴 수 있습니다 한, 심지어 밀리 초, 그것은 그 경우 수행하는 것보다 서버가 여기에 있었다 지리적으로, 또는 그 반대의 경우도 마찬가지. 그래서 내가 제안하는 경우 일찍 특히 당신이 한 번이 200 밀리 초를 건너 임계 값을 제공하거나 가지고, 인간은 주목하기 시작 않습니다. 그리고 추적 경로는 그냥 원시, 재미 데이터를 가정. 당신은 웹 사이트가있는 경우에이 이미지 나 동영상을 다운로드하는 사용자를 얻을 수 파일, 텍스트의 제비, 후속 요청. 우리가 방문했을 때 우리가보고, 무엇을했다 그것은, 페이스 북 또는 이전 아마존, 물건의 전체 많아요 즉, 다운로드 할 필요가있다. 그래서 추가 할거야. 그래서 다중 초 수도 무리하지. 그래서 좋은, 지리 한 성분이다. 같은 사실을 회사에 따라서 아카 마이, 당신이 그들을 들어 본 적이 있다면, 또는 다른 사람은 긴 촬영 한 계정에 지리. 그리고 그것은 밝혀 있다는 자연으로 IP 주소, 랩탑의 IP 주소, 당신은 약간의 확률로, 추론 할 수있다 당신은 세계 어디에. 그리고 사실에있다 타사 서비스 당신에게 데이터베이스를 유지 누가 지불 할 수 있습니다 IP 주소와 지역의 높은 신뢰성이 될 것와 그 사실 어디 세계에서 물었을 때 이 IP 주소는? 

그리고 사실 어떤 다른 기업이 사용합니까? 당신은 훌루 또는 넷플릭스, 만약이있는 경우 혹시, 해외 여행을했습니다 당신은 뭔가를보고 시도 훌루, 당신은 미국에서하지 않은, 당신은 메시지가 표시 될 수 있습니다 하지 미국에서 말. 죄송합니다, 당신은이 콘텐츠를 볼 수 없습니다. 

청중 : [들리지] 

DAVID 마란 : 오, 정말? 그러나 네, 그래서 실제로입니다 완벽한 응용 프로그램 매우 기술적 인 뭔가 실제 문제. 당신은 VPN에 있다면 유럽​​이나 아시아 또는 어디서나 기업의 세계 뉴욕에 본사를 당신이 어디에 있든 또는, 당신은있어 모양을 만들 것 외부 웹 사이트에 그 당신은 뉴욕에서 실제로있어 심지어 당신이있어 비록 물리적으로 아주 멀리. 

이제 사용자는 가고있다 당신이 떨어져 분명히 거 알아. 하지만 당신도 있기 때문에 그것을 느낄거야 이러한 추가 시간 (밀리 초). 추가적인 거리 및 VPN을에서 일어나고있는 암호화 일을 천천히 것입니다. 그래서 수도 있고하지 않을 수 좋은 경험이 될. 그러나 훌루와 넷플릭스 볼거야 당신은, 뉴욕에서 어딘가에 앉아 당신은 명확하게 수집 한있다. 그에게 완벽한 무엇 솔루션입니다. 

좋아, 그래서 지리학 한 결정이다. 또 우리는 방법을 결정하는 데 사용할 수 있습니다 A, B, 그리고 C에서 트래픽을 라우팅 1, 2 및 3에 다시 넣어 에 엔지니어링 모자? 이것은 모든 매우 복잡 소리. 어, 난 어디 모르겠어요 그 구현을 시작합니다. 나에게 간단 뭔가를 제공합니다. 무엇 간단한 방법 이 결정을 만드는 방법? 

대상 : 서버가 사용할 수 있습니까? 

DAVID 마란 : 서버가 사용할 수 있습니까? 그래서 나쁘지 않다. 그게 좋다. 즉, 부하의 nuancing의 일종입니다. 그럼 부하 범주에 해당을 유지 할 수 있습니다. 사용 가능한 경우, 그냥 해요 이 데이터를 전송하는 것. 하지만 신속하게 역화 할 수있다. 내가 그 논리를 사용하는 경우 때문에, 나는 경우 항상 일이 당신이있는 질문에 당신이 있습니다, 대답은 '예 항상 경우에 있으며, 나는 트래픽의 100 %를 보낼거야 다른 사람에 그에게, 0 %. 그리고 어떤 점에서, 우리는 칠거야 이 둔화 또는 사이트를 사용할 수 없습니다. 그렇다면보다 약간 낫다 그 그러나 아주 간단 여전히 모든 촬영만큼 영리하지 계정에 이러한 추가 데이터? 

대상 : 서버 당 비용. DAVID 마란 : 서버 당 비용. 좋아, 그럼 내가 있음을 던져 보자 너무 부하 범주입니다. 당신이 확인할 수있는 것들 때문에 회사는 너무 ... 당신의 경우 서버를 업그레이드 시간이 지남에 이상을 구입, 정확히 얻을 수 없을 수도 있습니다 동일한 하드웨어 버전. 이 최신이 떨어지는 때문입니다. 당신은 더 이상 살 수 없다. 가격이 변경됩니다. 

그래서 당신은 서로 다른 서버가있을 수 있습니다 클러스터에서, 말하자면. 즉, 완전히 괜찮아요. 그러나 내년의 하드웨어 두 배 빠른 수 있습니다, 올해의 두 배 수. 그래서 우리는 그것을 던져 수 있습니다 부하 범주에. 1 사이의 피드백 루프, 로드 밸런서에서 2, 3 확실히 말할 수있는, 이봐, 나는 50 %의 용량입니다. 하지만 방법에 의해, 또한 I 두 배 많은 코어를 가지고있다. 이 정보를 사용합니다. 심지어 simpler--이는 것입니다 컴퓨터 과학의 테마가 될 수 있습니다. 의심하거나 간단한을 할 때 때 일반적으로 잘 작동 솔루션 시간이 지남에 따라, 같은를 선택하지 마십시오 서버의 모든 시간,하지만 choose-- 

청중 : 임의의 하나? DAVID 마란 : --a 임의의 서버입니다. 네, 둘 중 하나를 선택합니다. 그래서 랜덤은 실제로 이 매우 강력한 성분 컴퓨터 과학, 및 엔지니어링에 더 많은 일반적으로, 특히 당신이 원하는 경우 빠르고 간단한 결정을 내릴 모든으로 복잡하지 이러한 매우 영리하지만,의 필요로 매우 영리 솔루션 더욱 공학, 모든 더 많은 생각, 때 정말, 내가 왜하지 단지 종류의 동전을 플립, 또는 셋이 경우 동전 양면 1, 2, 3으로 이동할지 결정? 

즉, 확률 역화 수 있습니다 하지만 가능성 등 많은 다시 머리를 내리고 및 다시 또 다시 다시 다시 가능하다 reality-- 슈퍼, 슈퍼 가능성. 그래서 시간이 지남에, 확률은 그냥 무작위로 사용자에게 전송 1, 2, 3에가는 완벽하게 잘 해결. 그리고 이것이 기술이다 일반적으로 라운드 로빈으로 알려져 있습니다. 

아니면 실제로 그 라운드 로빈 아니다. 이는 임의의 방법이 될 것이다. 그리고 당신은 심지어 수 있도록하려면 보다 약간 단순 라운드 로빈은 첫 번째 사람이가는 일 것이다 1, 두 번째 사람 2, 세 번째 사람 3, 4 번째 1. 그리고 거기에 라운드 로빈있다. 당신은 종류의 사이클에서 주변에 이동합니다. 

지금, 당신은 그것에 대해 스마트해야합니다. 당신은 맹목적에 사용자를 보내지한다 서버 수의 경우 어떤 경우 하나? 그것은 최대 용량의 경우, 또는 더 이상 그냥 반응 없습니다. 그래서 이상적으로 당신은 몇 가지를 원한다 피드백 루프의 종류. 그렇지 않으면, 당신은 모든 전송 막 다른 골목에 사용자의. 그러나 역시 고려 될 수있다. 

그래서 아래의 가치를 인정하지 않아 단지 자주 인, 임의성 이러한 종류의 문제에 대한 해결책. 그리고 우리는 라운드 로빈을 쓸 것이다. 그래서 일부 기업 구현 어떻게 라운드 로빈 또는 임의성 또는 이러한 결정의? 그런데 불행하게도, 그들은 이 같은 일을. 내가 다른 빠른 스크린 샷을 올려 보자. 

사실,의​​ 두 가지 작업을 수행 할 수 있습니다. 나는 우리가 왜 왔는지 모른다 이 요리를 모두 받고. 그것은 매우 이상하다. 좋아, 내가 정말 원하는는 스크린 샷입니다. 그 이상이다. 좋아, 그래서 나는이를 스푸핑 할 수 있습니다. 나는 얼마나 멀리 모르겠어요 나는 스크롤을 유지하려는. 

그래서 매우 일반적으로, 당신은 자신을 찾을 수 있습니다 www.2.acme.com 같은 주소, 아마 www.3 또는 4-5. 그리고 이것에 대한 눈을 유지. 당신은 자주 볼 수 없습니다. 당신이 할 때, 그것의 종류에 경향 더 큰, 나이, stodgier 회사 수 기술적으로 정말 그렇지 않은 그들이 무슨 일을하는지 아는 것 같다. 그리고 당신은 기술 회사에서이 참조 때때로, 오래된 것. 

그래서 그들은거야? 그들은 어떻게 구현하는 로드 밸런싱, 그것은 것 같다? 당신은 자신을 찾을 경우 사용자 입력 www.something.com, 갑자기 당신에있어 www.2.something.com, 어떻게 자신의 부하가 균형은 아마 다? 청중 : [들리지] 

DAVID 마란 : 네, 그래서 로드 밸런서는 아마도입니다 중 하나에 기초하여 결정을 내리기 processes-- 제작이 결정 정말 어떤 문제가되지 않습니다. 하지만 같은 많은 그려진 한 여기 보드 번호, 서버는 없습니다 1, 2, 3을했다. 그들은 아마도라는거야 www1, 웹 사이트는 LaCie의 공식 웹 사이트, www3. 그리고 그 내부를 밝혀 HTTP 요청이 특징이다. 그리고 난 갈거야 다음과 같이이 문제를 시뮬레이션 할 수 있습니다. 

나는 그 같은을 열거야 다만 이전과 개발자 네트워크 탭 그래서 우리는 무슨 일이 일어나고 있는지 볼 수 있습니다 후드 아래에. 나는 화면을 취소하겠습니다. 그리고,하자 갈거야 , http://harvard.edu을 말한다. 지금 무엇을위한 사업상의 이유로, 하버드 많은 같이 결정했다, 많은 다른 웹 사이트, 표준화하기 위해 www.harvard.edu에 웹 사이트 두 기술에 대한 마케팅 이유. 이 글은 종류의 단지 유행은 www가있을 수 있습니다. 

그래서 하버드 서버가있다 어떻게 든 사용자를 리디렉션합니다, 나는에서 자꾸으로 다른 하나의 URL. 그것은 어떻게 작동합니까? 글쎄, 내가 가서 Enter 키를 누르십시오 수 있습니다. 그리고 실제로 빠르게 URL을 통지 www.harvard.edu로 변경되었습니다. 이 다시 스크롤 나를 보자 역사와이 디버그를 클릭 진단 정보, 당신이됩니다. 내 요청 살펴 보자. 

그래서 여기에 내가 만든 요청입니다. 그리고 그것은 종류와 일치의 발견 의 내가 전에 페이스 북 만든 요청합니다. 그러나, 응답을 통지. 무엇에 달라 응답이 시간? 

청중 : [들리지] 

데이비드 마란 : 네, 그래서는 200 OK 아니다. 그것은 아니에요 찾을 수 없음 404. 그것은 영구 이동 301의 어떤 말의 재미 방법의 종류, 하버드 올렸 및 이동 다른 곳에서 www.harvard.edu합니다. 301을 의미하는 이 리디렉션입니다. 어디해야 사용자에게 분명히 리디렉션? 의 추가 재미있는 이야기가있다 그 봉투 안에 정보를 제공합니다. 그리고이 라인의 각 지금 것 HTTP 헤더를 호출 시작합니다. 헤더는 키 값입니다 뭔가 대장 뭔가를 pair--. 그것은 정보의 조각입니다. 어디 새를해야 위치는 분명히있을? 마지막 줄을 주목하라 모든 헤더 중. 

청중 : [들리지] 

DAVID 마란 : 네, 그래서 거기에 추가 정보. 내가 강조했던 첫 번째 줄 301 영구적으로 이동했다. 음, 어디는 이동? 마지막 line-- 그들은하지 않습니다 이 순서로 갖는다. 그것은 임의의 수 있습니다. 위치 콜론 이봐, 의미 브라우저는, 대신에이 URL로 이동합니다. 

그래서 브라우저는 HTTP 리디렉션 이해합니다. 그리고 이것은 매우, 매우이다 수신 거부의 일반적인 방법 다른 한 곳에서 사용자. 예를 들어, 당신은 이제까지 시도했다 경우 당신이하지 않은 웹 사이트를 방문 에 로그인, 당신은 갑자기 찾을 수 있습니다 새로운 URL에 자신을 완전히 되 로그인하라는 메시지가 나타납니다. 

그것은 어떻게 작동합니까? 서버는 아마 (301)를 전송한다. 다른 숫자처럼,도있다 의미에서 다소 차이가 302, 그것은 또 다른 URL에 당신을 보낼 수 있습니다. 그리고 서버, 당신이 로그인 한 후, 위치로 다시 보내드립니다 당신은 실제로 의도. 

그래서, 다음, 가난 무엇인가 조작 된 웹 사이트는거야? 때 당신이 방문 www.acme.com하고, 단지 그들이 자신의 서버 이름 한 일이 www1, 웹 사이트는 LaCie의 공식 웹 사이트, www3, 등, 그들은 매우 simply-- 있습니다 이는 공정이지만, 매우 종류의 당신을 리디렉션 foolishly-- 실제로 다른 이름 서버. 그리고 그것은 완벽하게 잘 작동합니다. 그것은 좋은 쉽다. 

우리는 그것이 될 방법을 살펴 보았다 후드 아래에 수행 가상 봉투입니다. 그러나 왜이 틀림없이 나쁜 엔지니어링 결정? 그리고 왜 내가 일종의 생색입니다 이 특정 기술을 향해 접근? 이 나쁜 이유를 주장한다. 벤? 청중 : [들리지] DAVID 마란 : 각 서버에해야 웹 사이트의 중복 사본을 가지고있다. 나는 그와 함께 OK입니다. 그리고 사실, 그 난 무엇을 이 모든 이야기에 대한 가정하면, 우리가 잘 wanted-- 경우 이후 실제로, 댄의 이전을 제외하고 제안, 당신이 다른 경우 서버는 다른 일을 어쩌면 그들은 실제로 수 기능적으로 다른 일을. 

하지만 그렇다하더라도, 어떤 점에서, 당신의 데이터베이스는 오버로드받을 것입니다. 정적 자산 서버 오버로드받을 것입니다. 어떤 점에서 그래서, 우리는있어 다시이 이야기에서 우리가 어디 같은 일의 여러 사본이 필요합니다. 그래서 나는 그와 OK입니다. 청중 : [들리지] 

DAVID 마란 : OK, 그래서 일부 페이지 불균형 인기가있을 수 있습니다. 그래서 하나의 주소에 집착 반드시 가장 좋은 것은 아니다. [알아들을 수 없는]? 

청중 : [들리지] 

DAVID 마란 : 당신이 무엇을 의미합니까? 청중 : [들리지] 

DAVID 마란 : 네, 정확히. 그래서 당신은하고 싶지 않아 반드시 확실히 당신을 잔 마셔요 사용자가 싶지 않아 수동으로 www1 또는 웹 사이트는 LaCie의 공식 웹 사이트에 입력. 브랜딩 관점에서, 그것을 조금 우스운 보인다. 당신은 단지의 종류를 원하는 경우 깨끗하고 우아한 경험, 무작위의 이러한 종류를 갖는 번호 URL은 정말 좋지 않다. 다음 사용자가 확실하기 때문에 복사 및 붙여 넣을 것 이메일이나 인스턴트 메시지로. 

이제 그들은 전파하고 있습니다. 지금 당신은 종류의 당신을 혼동하고 적은 기술 관객들은 누가 생각 웹 주소는 www2.something.com입니다. 그에게 더 강력한 의미가 없습니다. 단지 기본을 될 일이 당신이했습니다 것을 기술적 세부 사항 이 방법으로 서버를 번호. 

그리고 더 나쁜 아직, 만약에, 예를 들어, 아마 크리스마스 시간 때 주위에 사업은 정말 호황을 누리고있다, 당신은 www99을 통해 www1있어 하지만 1 월과 2 월과 이후, 당신은 그 절반을 해제 그래서 당신은 www50을 통해 www1가? 암시는 지금 무엇입니까 매우 합리적인 비즈니스 의사 결정? 청중 : [들리지] DAVID 마란 : 당신은 필요 아직도 그 모두를 관리 할 수​​ 있습니다. 청중 : [들리지] DAVID 마란 : 맞아요. 즉,이 캐치의 종류입니다. 당신의 고객의 습관에있는 경우 북마크 것들, 그냥 그들에게 이메일을 보내 어딘가에 URL을 저장하거나 그것은 그들의 자동차에 그냥 경우 그들이있어, 그래서 자신의 브라우저에서 완료 정말 의도적으로 입력하지, 단지, 그들은 수도, 무슨 일이 일어나고 올해 중 11개월에 대한 효과적으로 막 다른 골목에 도달한다. 그리고 단지 가장 예리한 사용자는 실현 것입니다 어쩌면 내가 수동으로해야 이 번호를 제거합니다. 나는 그냥 일어나지 않을거야, 의미 비즈니스를위한 그렇게 나쁘지 많은 사용자와, 현명한 나쁜 구현 기술. 

그래서 다행히도, 그것도 필요는 없습니다. 그것은 무엇을 밝혀 부하 분산을 수행 할 수 있습니다 대신 때, 말을하다 request--가 헤이, 1로 이동합니다. 즉, 대신에 그 리디렉션을 전송 등이이 단계 하나 과정은 여기에 이​​동입니다 그는 다음 다른 곳으로 이동하라고한다. 그래서 그는 다른 곳에서 진행, 세 가지가 단계. 

대신에, 경로에 계속 그 용어를 사용하여 A의 모든 데이터를 유지 로드 밸런서를 통해 그 그래서 그는 결코 접촉 한 직접 2 또는 3. 모든 트래픽을 얻을 않는다 "전달" 로드 밸런서에 의해 자체. 그래서 지금 우리는 일종의있어 의도적으로 라인을 흐리게 이러한 다양한 장치들 사이. 로드 밸런서는 경로 데이터를 할 수 있습니다. 그것은 가지고 단지 함수이다. 

그래서 부하 분산도, 그건 실제로 소프​​트웨어 조각. 그리고 라우터 소프트웨어의 일부이다. 그리고 당신은 절대적으로 할 수 있습니다 소프트웨어의 두 가지 내부 하나의 물리적 컴퓨터 때문에 부하의 밸런서는 이러한 여러 작업을 수행 할 수 있습니다. 

그래서 하나의 다른 방법이 이는 실제로,이 작업을 수행하는 첫 번째 원칙의 종류로 돌아갑니다 우리가 이야기 DNS의 휴식 시간 전에. DNS는 도메인 이름 시스템이었다. 당신이 할 수있는 것을 기억 어떤이의 DNS 서버를 물어 의 IP 어드레스 google.com, facebook.com을? 

그리고 우리는 실제로이 작업을 수행 할 수 있습니다. 우리가 이전에 사용하지 않은 도구입니다 다만 접근로의 하나, 이름 서버 조회에, nslookup을했다. 그리고 난 그냥 facebook.com을 입력하겠습니다. 그리고 볼이 페이스 북의 IP 주소는 분명히있다. 내가 가서 복사하자 즉, 브라우저로 이동 하고 http 이동 : // 그 및 IP 주소를 입력했다. 그리고 과연, 그것을 작동하는 것 같다. 

이제 거꾸로 작업 것이었다 가상 봉투의 내부 페이스 북은 때와 반응하는 것이 나는 IP를 직접 해결 방문한? 통지 있기 때문에, 어디 지금은 무엇입니까? 어디에서, 지금 주소는 무엇입니까? 

청중 : [들리지] 

DAVID 마란 : 보안 버전에서, 그리고 www.facebook.com에서. 그래서 다만 아니다 보안 IP 주소를 입력합니다. 페이스 북은 자체적으로 그것을 촬영하고있다 이 말도 말할 수 있습니다. 우리는 당신을 유지하지 않을거야 숫자의 추한 찾고 URL. 우리는 당신에게 HTTP를 보낼거야 동일한 헤더로서 리디렉션 우리는 before-- 보았다 위치 결장 뭔가. 

그리고 이것은 단순히 아래 의미 후드는 여전히 IP 주소입니다. 인터넷에있는 모든 컴퓨터 IP 주소를 가지고, 그것은 보인다. 하지만 당신은 필요가 없습니다 사용자에게 그 노출합니다. 그리고 많은 일 다시 같은 존재 1-800-COLLECT, 1-800-C-O-L-L-E-C-T이었다 미국에서, 수집 만드는 방법이었다 아주 쉽게 기억에 남는 전화를 통해 호출 번호 또는 1-800-매트리스, 침대를 구입 유사한 니모닉은 당신도 볼이 전화에 가지 종류의 여전히 문자는 숫자에 매핑있다. 

이제, 그 이유는 무엇입니까? 음, 기억하기 훨씬 쉽다 1-800-매트리스 또는 대신 1-800-COLLECT 1-800 뭔가 뭔가 뭔가 뭔가 뭔가 뭔가 뭔가 여기서 각 이들의 숫자입니다. 마찬가지로, 세상은 배운 신속하게 우리가하지 말아야 사람들이 IP 주소를 기억해야합니다. 즉, 어리석은 것입니다. 우리는 대신 이름을 사용하는 것입니다. DNS가 태어난 이유입니다. 

좋아, 그와 그래서는 점에서 말했다 로드 밸런싱의,의는 yahoo.com을 시도 할 수 있습니다. 글쎄, 그건 재미있다. 야후는 세 개의 IP를 반환 할 것으로 보인다. 그래서에서 추론, 당신이 할 수 있다면, 무엇이다 우리가 구현할 수있는 또 다른 방법 로드 밸런싱의이 개념 어쩌면 물리적를 사용하지 않고 장치, 새로운 물리적 장치? 

즉, 나는 멀리 걸릴 수 있습니다 당신은 부하 분산을 위해이 자금 일부 기존를 사용하는 당신에게 하드웨어의 조각 구현 로드 밸런싱의이 개념? 그리고 스포일러이며, 네,하지만 무엇을, 또는 어떻게? 야후는 아마 여기에 무엇을하고 있나요? 카림? OK, 크리스? 청중 : [들리지] DAVID 마란 : 그래, 그 작업의 세 가지. 랜덤 그래서, 라운드 로빈, location-- 당신은 할 수 있습니다 퍼즐의 기존 작품을 활용 우리는 DNS의 이전에 대해 얘기하는 것이 시스템 단순히 때 처음 말 오늘의 사용자는 yahoo.com 요청, 그들에게 첫 번째 IP 주소를 제공, 가 최대 45로 끝나는 것과 같은. 그리고 다음에, 사용자 요청 yahoo.com의 IP 어드레스 어딘가에 세계에서, 그들에게 두 번째 IP를 제공, 다음, 세 번째 IP 후 제 IP 후 초. 아니면 그것에 대해 현명하게 그래픽으로 그것을 할. 아니면 무작위뿐 아니라합니까 이 방식은 라운드 로빈. 

이 경우, 다음 우리는 심지어 필요가 없습니다 이 블랙을 소개합니다 우리의 그림으로 상자. 우리는 새로운 장치가 필요하지 않습니다. 우리는 단순히 컴퓨터를 말하는 거 직접 서버로 이동합니다, 효과적으로 아니지만 이름의 방법으로. 그들은 이름을 알아야 할 필요가 없습니다. 그들은 단지 yahoo.com 있다고 말했다되고있어 이 IP 주소 중 하나에 매핑. 

그래서 똑같은 요청을 보냅니다. 그러나 외부에 봉투, 그것을 단순히 이 통보 된 IP를 넣습니다. 이런 방법도있을 우리는 요청의 부하를 분산 단지에 봉투를 보내 야후의 자신의 서버 중 하나는 다른? 

우리가 파고를 유지한다면, 우리는 볼 수 있습니다 더와 아마 다른 회사. CNN은이 공개적으로 노출하고있다. 우리는 다시 이렇게 실제로 경우 비록 및 again-- cnn.com-- 당신은 볼 수 있습니다 그들은 실제로, 순서를 변경하고 있습니다. 그래서 메커니즘입니다 CNN 사용, 분명히? 

청중 : 랜덤. DAVID 마란 : 음, 그것은 비록 임의의 수 앞뒤로 순환 것으로 보인다. 그래서 라운드 로빈 곳 아마 그들은 단지 순서 때문에 전환하고 나는 아마도 첫 번째 걸릴거야. 내 컴퓨터가 소요됩니다 마다 제. 그래서 부하 분산입니다. 그리고 그것은 궁극적으로 우리를 수 데이터 또는지도 요청을 매핑, 여러 서버에. 의 그래서 어떤 종류의 문제는 지금 여전히 존재? 그것은 정말 우리 같은 느낌 좋은 문제를 해결했다. 우리는 서로 다른 서버로 사용자를 얻었다. 오하지만 ..., 크리스,했다 당신은 전에 질문이? 

청중 : [들리지] 

데이비드 마란은 : 모두 따라 달라집니다. 그래서 여기에 무슨 일이 일어나고 있는지? 그리고 우리는 실제로 볼 수 있습니다. 그럼 야후의 시도 할 수 있습니다. 사실,의​​ 페이스 북에 가자. 우리는 하나가 작동하는지 알고 있기 때문에. 그래서 복사거야 해당 IP 주소를 다시. 나는이 모든 탭을 닫으려고하고있다. 나는 열려 갈거야 여기 아래 특별 네트워크 탭을 선택합니다. // : 그리고는 HTTP를 방문거야. 그리고 지금은 Enter 키를 누르거야. 그리고 이제 무슨 일이 있었는지 보자. 

나는 그 요청 통지를 보면 그 거니 페이스 북은 나쁜 예입니다. 그들이 가지고 있기 때문에 슈퍼 멋진 기술 그것은 우리에게 그 내용을 숨 깁니다. 나 야후를 사용하자 instead-- HTTP : 그 IP //. 의 우리의 네트워크를 열어 보자 탭, 로그를 유지합니다. 그리고 여기에 우리가 간다, 입력합니다. 그거 웃기 네요. OK, 그래서 여기에 유명한 404 메시지입니다. 여기에서 재미 것은 그들이 아마 다시 없을 것이다 않습니다. 아마 거기 때문에 그 자체로 잘못하지 뭔가. 그들은 단지 신중해야 지원하지 않기로 결정 자신의 주소의 숫자 형식. 

그래서 우리가 실제로에서보고있는 네트워크 탭, 내가 여기를 당겨 경우, 내가 말하는대로, 유명한 404입니다 나는 응답 헤더를 보면, 이것은 내가 here-- 404 찾을 수 없음 얻었다 것입니다. 그럼 다른 하나를 시도 할 수 있습니다. CNN이 우리와 함께 협력하는 경우 보자. 나는 CNN의 IP 주소 중 하나를 잡아합니다 이, HTTP, DAH, DAH, DAH, DAH을 취소합니다. 그래서 크리스의에 대답 질문 하나 일했다. 

그리고의 응답 헤더에 가자. 사실 아니, 모든 권리, 나는 작업 예를 찾기 위해 고군분투. CNN이 결정했다 그래서, 우리는 당신을 떠날거야 어떤 주소에 실제로 방문 옆으로 브랜딩 문제. 그러나이 경우, 일이되지 않을 것이다 우리는 페이스 북의 경우에서 볼 수 우리는 (301)는 이동 얻을 것입니다 영구적으로, 대부분, 인 내부 위치 :은 https : //www.facebook.com. 그리고 확률은 www.facebook.com가입니다입니다 동일한 서버 우리 단지에 대한 별칭 에 갔다. 

그래서 조금 역효과입니다. 우리는 문자 그대로 서버를 방문하고 있습니다. 서버가 다음 우리를 말하고, 멀리 이동합니다. 이 다른 주소로 이동합니다. 그러나 우리는 너무 될 일이 다시 같은 서버에 대한 것. 그러나 아마도 우리는 지금에 남아 이 앞뒤로없이 서버. 지금 때문에 우리는 이름을 사용하는 사이트가 아닌 숫자의 버전. 좋은 질문. 

OK, 그래서 만약 우리가 지금 우리를 assume-- 로드 밸런싱을 해결했다. 우리는 지금 메커니즘을 가지고, 이 DNS를 통해 여부, 여부가 있는지,이 블랙 박스를 통해입니다 이들 기술 중 하나를 사용하고. 우리가 사용자의 요청을 수 이는 서버 1, 2 또는 3으로 알아낼 그 또는 그녀를 보낼 수 있습니다. 

무엇이 우리의 웹 사이트에 대한 침입하기 시작? 즉, 우리가 가진 사업을 구축하는 하나의 서버에 이전했다. 이제 사업 실행 여러 서버에. 가정의 어떤 종류의, 어떤 디자인 결정의 종류, 지금 파괴 할 수 있는가? 

이것은 덜 명백하다. 그러나 우리는 넣을 수없는 경우 보자 우리 우리가했습니다 문제의 일부에 손가락 자신을 위해 만들었습니다. 다시 말하지만, 그것은 들고 같은 종류의 호스에서 누수 아래로. 그리고 지금 새로운 문제 여기에 팝업있다. 

청중 : [들리지] DAVID 마란 : OK, 그래서 우리는해야 우리의 하드 디스크 공간을 성장 유지. 나는 지금 그와 OK입니다. 내가 생각하기 때문에 내가 할 수있는 수평 규모. 내가 부족 해요 경우처럼, 난 그냥거야 네 번째 서버, 아마 다섯 번째 서버, 다음 우리의 능력을 증대 30 % 또는 50 % 이것 저것 다른 의해. 그래서 적어도 지금은, 그와 OK입니다. 청중 : [들리지] 데이비드 마란은 : OK, 그래서 좋은 지적입니다. 그래서 서버를 가정 동일하지 않다. 그리고 고객 서비스 또는 이메일 동등한 사용자로부터 어떤 메시지를 받고있다 말씀이 바로 작동하지 않습니다. 그것은 때로는 매우 가능 어쩌면 하나 이상의 서버 조금 틀려서 작용하는 것이 아니라, 다른 확실히 할 수 어렵게 문제를 추격 할 수 있습니다. 여러 장소를 볼 수도 있습니다. 

즉 표현이다 버그의 또 다른 종류의, 이는 당신이 아마해야입니다 귀하의 인프라를 설계했다 모든 것이 진정으로 동일하다. 그러나 새로운 문제를 공개하지 우리는 전에하지 않았다. 그 밖의 무엇? 청중 : [들리지] 

DAVID 마란 : 네, 더 복잡성이있다. 물리적으로 더 선이있다. 다른 장치가있다. 사실, 근본적인를 도입했습니다 개념 및 여기에 근본적인 문제 단일 지점으로 알려진 실패의, 어떤, 심지어 당신이 들어 본 적이없는 경우 문구, 당신은 아마 수 지금은 거꾸로 일을하고 그것을 알아낼. 그것은 내가 하나를 가지고 무엇을 의미 하는가 내 건축의 실패의 포인트? 그리고 아키텍처로, 나는 단지 그것의 위상을 의미한다. 

청중 : [들리지] 

DAVID 마란 : 그래, 만약에 로드 밸런서 내려갑니다? 나는 그의이 중간 남자를 삽입 한 삶의 목적은이 문제를 해결하는 것이다. 하지만 새로운 문제를 도입했습니다. 새로운 누수가 호스에 나타 났있다. 때문에 지금의 경우로드 밸런서 , 휴식 또는 misfunctions 또는 사망 지금은에 액세스 할 수 없게 내 서버의 세 가지. 그리고 전에, 나는하지 않았다 이 중개인이 있습니다. 그리고 이것은 틀림없이, 새로운 문제입니다. 우리는 다시 올 것이다 우리는 그 문제를 해결하는 방법. 

청중 : [들리지] 데이비드 마란 : 그건 하나의 방법이 될 것입니다. 네, 그래서이 꽤 될 것입니다 쥐의 구멍은 우리가 내려 가서 시작합니다. 그러나 이제 다시 오게 그냥 순간에 그. 다른 어떤 문제 우리가 만든? 

그래서 댄 전에 데이터베이스를 언급했다. 그리고 당신이하지 않은 경우에도 너무 익숙한 기술적으로, 데이터베이스는 서버 곳이다 데이터를 변경하는 것은 일반적으로 저장되고 아마 주문 누군가는 배치했다, 사용자 프로필, 이름, 당신의 이메일 주소 일 수도 입력 또는 시간이 지남에 따라 변경 될 수있다. 

이전에는 내 데이터베이스에 있었다 내 웹 서버와 같은 서버. 난 그냥 하나를 가지고 있기 때문에 웹 호스팅 계정. 모든 것은 모두 같은 장소에 있었다. 어디서 데이터베이스를 넣어야한다 이제, 서버 1, 2 또는 3? 

청중 : 네. 

DAVID 마란 : 4, OK, 모든 바로, 그래서 거기에 갈 수 있습니다. 그래서 넣어 갈거야 내 database-- 및하자 이 www를, www가, www가 레이블을 시작합니다. 그리고 나는 말할거야 이 네 번째입니다. 그리고 데이터베이스에 대한 DB를 말할 것이다. OK, 나는 이것을 좋아한다. 어떤 라인 내가해야 아마도 여기에 그리기 수? 

청중 : [들리지] 

DAVID 마란 : 네, 코드가 너무 우리는 내일 논의 되겠지만, 아마도 동일 세 개의 서버. 하지만 지금에하지 연결해야 데이터베이스는 로컬하지만 다른 곳에서 실행. 그리고 괜찮아요. 우리는 데이터베이스 a를 제공 할 수 있습니다 우리가 가지고있는, 이름 또는 번호. 그리고 모두가 잘 작동하는지. 그러나 우리는 무슨 짓을? 우리는 수평함으로써 확장 한 세 개의 서버가 아닌 한, 어떤 좋은 것입니다. 지금 우리가 처리 할 수​​ 있기 때문에 많은 부하 3 배. 

그리고 더 나은 아직, 하나 또는 두 개의 경우 그 서버로는 내려갑니다 내 사업은 계속 작동 할 수 있습니다. 난 아직도 난 경우에도, 하나를 가지고 있기 때문에 가지 성능 현명한 따라 파행. 그러나 어떤 새로운 문제 I가 데이터베이스를 이동시킴으로써 도입 이 별도의 서버에 대신에 1, 2, 3에서의? 

청중 : [들리지] DAVID 마란 : 그래, 그래서 지금 내가 가진 실패의 또 다른 하나의 포인트. 내 데이터베이스가 사망하거나 할 필요가있는 경우 업그레이드 또는 확인 지금 무엇 이건, 수, 내 웹 사이트가 온라인 상태입니다. 그리고, 정적 역할을 할 수 변하지 않는 콘텐츠입니다. 하지만 사용자가 변경 또는 로그인 할 수 없습니다 더 나쁜 아직 아무것도 또는 주문 아무것도. (4)가 오프라인 인 경우 때문에, 다음 1, 2, 3 정말 정의하여 이야기 할 수 없습니다. 

OK 그래서 그래, 그래서 이것은 왜 나는이를 그릴 주저하고있다. 그래서 다시 그에게 올 수 있습니다. 나는 당신을 밀어 유지하는 것을 의미하지 않습니다. 하지만 그림은 매우입니다 빨리 스트레스를받을 것. 당신은 시작해야하기 때문에 모든 것을이 데. 사실, 당신이 이제까지 본 적이있는 경우 영화 연락 몇 년 전 조디 Foster-- 아니? 

OK, 그래서 두에 대한 연락을 보았다 우리, 관계가 어디있어 그들이 기본적으로 어떤 두 구입 오히려보다,이기는하지만 두 번 가격. 그래서 일종의 장난이었다 영화에서 언급. 그것은 종류의이 관련이 있어요. 우리는 절대적으로 그렇게 할 수 있습니다. 그리고 당신은 비용을했습니다 우리 두 배나 많은 돈. 그러나 우리는 다시 그에게 올 것이다. 

그래서 우리는이 문제를 해결했습니다. 그래서 당신은 무엇인지? 이 미끄러운 경사 같다. 나는 갖는 대처하지 않으 중복 데이터베이스가 있습니다. 그것은 너무 많은 돈이다. 당신 그거 알아? 내 데이터베이스를 갖고 싶어 단지 버전 일처럼 여기서 각 서버가 자신의 로컬 데이터베이스. 그래서 난 그냥 갈거야 이들 각각에 DB를 그립니다. 

그래서 지금 각 웹 서버 지금까지 동일하다 은 동일한 코드를 갖는 한 동일 고정 자산, 같은 그림과 텍스트 기타 등등. 그리고 각각의 자체 데이터베이스를 보유하고 있습니다. 나는 하나의 지점을 고정 고장 문제. 지금은 데이터베이스가 있습니다. 아무리되는 이들의 2 종 한 일이 하나 왼쪽은 항상 거기에, 죽는다. 그러나 어떤 새로운 문제를 내가 만든이 댄의 솔루션은 피할 수 있다고? 

청중 : [들리지] 

DAVID 마란 : 네, 오른쪽을 동기화 할 수 있나요? 하나 나는 동기화해야하기 때문에 누가, 즉 where--거야 앨리스 내를 방문하는 경우 사이트, 그녀와 무슨 일이 있었 무작위 또는 라운드 로빈에 도착 또는 서버 번호 하나에 무엇이든, 그 후 나는 항상에있다 서버 하나에 그녀를 보낼 수 있습니다. 왜? 내가 그녀를 보내는 경우 때문에 서버 (2), 그것은거야 그녀가 존재하지 않는 모양입니다. 

나는 그녀의 주문 내역을해야 할 것 아니에요. 내가 거기에 자신의 프로필을해야 할 것 아니에요. 그리고 그것은 단지 같은 느낌 그 문제를 초대있다. 그리고 밥은 내가 방문 할 때 항상 그를 보낼 수있다 동일한 서버, 2, 중에 하나, 세번째와 찰리, 일관. 하지만 이것은 부당하지 않습니다. 이 호출된다 데이터베이스를 분할. 그리고 사실이 무엇인지 페이스 북은 초기에했다. 

당신의 역사를 따라하는 경우 페이스 북, 그것은 캠퍼스에서 여기 시작 www.thefacebook.com있다. 그런 다음 한 번 진화 마크 시작 다른 캠퍼스로 확산 할 수 harvard.thefacebook.com 및 mit.thefacebook.com, 아마 bu.thefacebook.com 등. 그리고 그 때문이었다 초기에, 나는 생각하지 않는다 당신은 캠퍼스에서 친구를 가질 수있다. 하지만 괜찮아요. 하버드에서 누구 때문에 이 서버로 전송 받았습니다. BU에서 사람이 서버로 전송 받았습니다. MIT에서 누구나 전송있어 이론이 server--합니다. 나는 확실히 모든 몰라 기본이되는 구현 세부 사항. 그러나 그는 아마도에 의해 사람을 분할 네트워크이었다 자신의 캠퍼스. 

그래서이 시점까지 좋은 당신은 하버드 두 개의 서버를 필요로하는 곳에 또는 하버드를위한 세 개의 서버. 그리고 그 단순함 종류의 고장. 그러나 그것은 합리적인 접근 방식이다. 의 항상 앨리스를 보내 보자 같은 장소에, 항상 같은 장소에 밥을 보냅니다. 하지만 앨리스의 경우 발생 서버가 오프라인 상태가? 밥과 찰리는 여전히 살 수있다 사물과는 사이트에 로그인합니다. 그러나 앨리스는 할 수 없습니다. 그래서 당신은 세 번째를 잃었습니다 사용자 기반의. 어쩌면 100 %보다 낫다? 우리가 할 수 있다면하지만 어쩌면 그것은 좋은 것 여전히 우리의 사용자의 100 %를 지원 때에도의 제 우리 서버가 오프라인 상태가됩니다. 

그래서 우리는 무엇을 동기화 할 수 있을까? 아니 사용자, 그 자체지만, 모든 서버에서 데이터베이스. 그래서 지금 우리는 종류의 어떤 필요 상호 연결의 종류 여기에 있기 때문에 서버 자체 무리하지 sync-- 수 있습니다. 사실,이 기술은 존재한다. 데이터베이스의 세계에서, 거기에 마스터 - 슬레이브 데이터베이스의 개념, 또는 차 보조, 여기서 기능 중 데이터를 저장하는 데뿐만 아니라 데이터로 응답, 뿐만 아니라 단지 지속적으로 서로 동기화 할 수 있습니다. 그래서 언제든지 당신이 작성하거나 저장 이 데이터베이스에 뭔가, 즉시 "복제"도착 뿐만 아니라 다른 데이터베이스에. 

그리고 당신이 그것을 읽을 언제든지, 당신이 어디에 그것은 중요하지 않습니다. 때문에 이론의 경우 그들은 모두 당신이있어, 동기화 한 데이터의 동일한보기를 얻을 것. 그래서이 완벽 소리. 캐치있을거야. 캐치는 무엇을 할 수 있는가? 

청중 : [들리지] 

DAVID 마란 : 네, 그렇게 세 번 많은 물건이 잘못 될 수 있습니다. 그게 현실이다. 그것은 모든 정신에 따라 변경 될 수 있습니다. 하지만 누군가가이를 구성 할 필요가있다. 더 높은 가능성이있다 그 뭔가 잘못 갈 것입니다. 그냥 당신이 된 조합 오류가하는 경향이 더 많은 물건. 또 어떤 잠재적으로 나쁜? 청중 : [들리지] 

DAVID 마란 : 네, 그래서 동기화는 나쁜 될 수 있습니다. 비록 당신이 알고있을로 백업에서와 같은 그냥 맹목적으로하고 있습니다 경우 뭔가가 무엇을하면 백업, 하나의 데이터베이스에 잘못? 당신은 당신이 안 뭔가를 삭제합니다. 즉시 복제했습니다 다른 곳에 그 문제. 그래서 빅토리아 talking-- 백업했다 여기에 좋은 일이 될 것입니다. 그래서 우리는 다시 그에게 얻을 수 있습니다. 그리고 분명히, 우리는 얘기 하지 여기에 백업에 대한 자체. 우리는 진정한 복제에 대해 얘기하고 또는 서버에서 동기화. 그들은 모두 라이브입니다. 그들은을 의미하지 않는 백업에 사용 될 수있다. 

청중 : [들리지] DAVID 마란 : 무엇입니까? 청중 : Higher-- DAVID 마란 : 높은 비용. 우리는 비용을 세 겹으로 한 물론,하지만 적어도 측면에서 하드웨어. 데이터베이스이기 때문에 소프트웨어의 단지 조각. 그리고 웹 서버는 소프트웨어의 일부이다. 우리가 사용하는 경우 그것은 아마 무료 오픈 소스 것들의 수. 하지만 우리가 사용하는 경우 오라클과 같은, 우리는 당 오라클 더 많은 돈을 지불하고 액세스 라이센스 또는 Microsoft. 여기에 몇 가지 다른 잡을 수있을거야. 그것은이 간단 할 수 없습니다. 

당신의 지점 그래서, 나는 생각 카림, 아니 지리 earlier-- 나에 대한, 가정 geography--에 대한 로마, 그것을했다 우리는 이것에 대해 스마트되고 있다는 것을, 우리는, 우리의 서버 중 하나를 가하고있어 미국에있는 우리의 데이터베이스를 설정에서, 유럽​​에있는 다른, 또 다른 남미, 아프리카의 또 다른, 아시아의 다른 어디서나 우리 전세계 할 수 있습니다. 우리는 이미 우리의 추적 알고 노선이 점 A와 점 B, 그들은 더 멀리 떨어져 있다면, 시간이 더 걸릴 것입니다. 

그리고 일부 사용한 경우 페이스 북이나 트위터 같은 도구, 또는이 사이트의 요즘 그 끊임없이 때문에 사용자의 변화 생성 된 데이터, 때로는 경우 새로 고침을 치거나 같은 페이지를 엽니 다 다른 브라우저에서, 당신은 볼 다른 버전, 거의. 당신은 다른 사람의 상태를 볼 수 있습니다 여기에 여기에 있지만 업데이트 다음은 다시로드하고, 나타납니다, 당신은 다시 다시로드 그것은 사라집니다. 환언에서, 유지 이것에 대한 눈을 밖으로, 적어도 소셜 사용하는 경우 특히 네트워킹. 

다시 말하지만, 그냥 때문에 데이터가 너무 빨리 변화 때로는 서버는 동기화받을 수 있나요. 그리고 어쩌면 슈퍼 작은 창입니다. 아마 그러나 200 밀리 초, 그것의 that--보다 더 일부 비 제로 시간이 걸릴 것 이러한 데이터베이스가 동기화 할 시간. 그리고 우리는 아니에요 하나의 요청에 대해 얘기. 회사는 수천이있는 경우 사용자는 동시에 그것을 사용 그들은 버퍼 수 있습니다. 즉,이 힘은 큐 또는 대기 줄 수 그 데이터베이스의 모든 이전 쿼리는 동기화 얻을 수 있습니다. 그래서 아마 실제로는 몇 초입니다. 

그리고 실제로 이것이 사실 난 생각 페이스 북, 이에이 일에 그들은에서 동기화 할 때 웨스트 코스트 이스트 코스트, 그것은 비 단순있다 전파 지연, 말하자면 당신은 단지 종류의 용납 할 필요가있다. 그리고 그것은 너무 많은 아니에요 그와 같은 버그는 현실이다 사용자가 볼 수 있음 적어도에 대한 올바른 데이터 몇 초. 

나는 많은 트위터에이 참조 실제로 어디 때때로 나는거야 하나의 창에서 트윗에 다른 열 다음 실제로 그것을 확인하는 볼 올라 갔다, 그리고 아직 없습니다. 그리고 난 종류의 다시로드해야합니다, 오 reload--, 거기가, 다시로드합니다. 이 저장되지 않았기 때문에 그게 아니다. 그것은 단지 전파되지 않았습니다 다른 서버에. 

그래서 트레이드 오프, 너무 ... 정말 당신을 위험에 자신을 노출 할 사용자가 자신의 순서로 진행하는 역사, 아직 사실이 아니다? 나는 특정 은행이를 참조하십시오. 때 항상, 하나, 잘, 날 귀찮게 당신은 다시 육개월 같이 갈 수있다 일부 은행에서 은행 문에서, 심지어 이론적으로 그들이해야하지만 온라인으로 모든 것을 가질 수. 그들은 단지 가끔 물건을 오프라인으로. 때때로, 그것은 어떤 웹 사이트입니다 너무 ...? 그것에서 GoDaddy의, 오 one--있다, 나는 생각한다. 에서 GoDaddy는 때 체크 아웃 도메인 이름 또는 뭔가를 구입, 그들은 종종 당신에게 줄 것이다 영수증에 대한 링크. 그리고 당신은 그 링크를 오른쪽 클릭하면 멀리, 종종 작동하지 않습니다. 그냥 막, 여기에 아무것도 말했다. 

그리고 너무의의 때문에 이러한 전달 지연. 때문에 어떤 이유로, 그들은 약간의 시간을 복용 실제로을 생성합니다. 그래서 이것은 당신이 원하는의 같은 종류입니다 어떤 시점에서 당신의 머리를 잡아 당깁니다. 모든 때문에 당신은에 노력하고 이렇게 간단한 문제를 해결하는 것이다. 그리고 우리는 새로운 만들고 유지 자신에 대한 문제. 그래서이 있는지 확인하자 우리 종류의이 취소 할 수 있습니다. 

그것은 결합 밝혀 웹 서버의 모든 데이터베이스에 정말 가장 좋은 방법입니다. 일반적으로, 어떤 엔지니어 수행하거나 시스템 설계자 것, 다른이하는 것 서버의 계층. 그리고 단지 공간을 위하여, 나는거야 여기에 자신의 데이터베이스를 그립니다. 

우리는 데이터베이스가있을 수 있습니다 및 서버 네 번째 여기 그 연결을 가지고있다 여기에 이​​러한 서버의 각. 그래서 이것은 우리 앞에 수 있습니다 사람들이 말하는 것처럼, 계층을 종료. 그리고 이것은 우리의 백엔드 계층이 될 것이다. 그리고는 것을 의미한다 이것들은 사용자에 직면한다. 그리고 데이터베이스는 사용자에 직면하지 않습니다. 없음 사용자가 직접 할 수 데이터베이스에 액세스 할 수 있습니다. 

그래서 지금은 아마 아래로 가자 경로 빅토리아 제안했다. 이것은 단일 장애 지점이다. 그 날이 불편합니다. 그래서 아마도입니다 가장 확실한 해결책? 청중 : [들리지] 데이비드 마란은 : 죄송합니다, 다시 말한다. 청중 : [들리지] DAVID 마란 : 비 프로덕션 서버. 당신은 무엇을 의미합니까? 

청중 : [들리지] 

DAVID 마란 : 아, OK, 백업 그래서. OK, 그래서 우리는 확실히 그렇게 할 수 있습니다. 그리고 실제로는 매우 일반적으로 수행됩니다. 이 데이터베이스 번호 오 수 있습니다. 그러나 단지이다 네 번째로 연결되어 있습니다. 그리고 당신은 핫 스페어를 호출 할 수 있습니다. 이러한 두 개의 데이터베이스가 구성 될 수있다 다만 지속적으로 동기화 서로. 그리고이 기계에 대해, 죽으면 하드 드라이브 reason-- 바보 어떤 사람이 걸려 넘어, 사망 코드는 일부 소프트웨어는 결함이 및 시스템 중단 또는 crashes-- 당신은 문자 그대로 인간을 가질 수 벽에서이 일을 뽑습니다 대신이 하나를 연결합니다. 그리고 이내의가하는 말을하자 몇 분, 아마 반 시간, 당신은 다시 온라인 상태입니다. 

그것은 위대한 아니지만 또한 끔찍한 아니다. 그리고 당신은 걱정할 필요가 없습니다 어떤 동기화 문제에 대한. 모든 이미 있기 때문에. 당신은 완벽했기 때문에 갈 준비 백업. 

당신은 조금 될 수 있습니다 이 약 애호가, 어떤 사람들은 종종처럼, 어디를 여기에 데이터베이스 네 번째가있을 수 있습니다, 데이터베이스 번호 오 여기, 즉, 서로 말하고있다. 그러나 당신이이 가지 arrangement-- 그리고 의도적으로 , 지저분 해 보이는 그것 때문에 is-- 곳의 모든 프런트 엔드 서버 수 백 엔드 서버의 모든 이야기. 이 데이터베이스는하지 않도록 경우 이 프런트 엔드 서버가 있고, 응답 프로그래밍을 가지고 말한다 그들의 코드, 당신은을하지 않는 경우 이 데이터베이스에 연결, 기본이 즉시 시작 보조 얘기. 

하지만 지금 밀어 코드에 복잡성. 이제 개발자, 소프트웨어 개발자들은 이것에 대해 알아야합니다. 그리고 당신은 종류의 코드를 묶는하고 그 당신은 당신의 실제 백 엔드에 작성하는 구현 세부 사항 이는 어렵게 만든다, 특히 더 큰를의 회사 또는 큰 웹 사이트, 여기서 당신이 필요하지 않습니다 프로그래머가 갖고 싶어 방법 데이터베이스를 알고 엔지니어들은 작업을하고있다. 당신은 그 역할을 계속 할 수 있습니다 일종의 기능적으로 구별 그래서 이 레이어가 있음 둘 사이의 추상화입니다. 

그래서 우리는 어떻게이 문제를 해결할 수 있는가? 음, 우리는 가지 해결 한 번 전에이 문제를 해결합니다. 왜 우리는의를 넣지 마십시오 여기에 이​​런 일 이 네 번째에 다시 이야기하고 다섯 프론트 엔드 웹 서버의 모든 이 중개인에게 이야기하고, 턴 경로 데이터에서 중개인? 사실, 무엇을 할 수있는 이 일을 위해 좋은 이름은? 

청중 : [들리지] DAVID 마란 : OK, 데이터베이스 관리. 그러나이 용어는 그가 무엇인지 우리는이 장치에 대해 다시 사용할 수 있을까? 우리는 균형을하고 있습니다. 그래, 그래서 사실, 난 여기 공평하지. 그래서로드 밸런서는 것을 의미 것 우리는 앞뒤로 여기 전환하고 이는 실제로 경우 일 필요는 없다. 그래서 우리는이 작업을 수행 할 수있는 몇 가지 방법이있다. 

이러한로드 밸런서 사실이면 이야기는 정확히 이전과 동일합니다. 요청 중 일부는 4로 이동합니다. 그들 중 일부는 5로 이동합니다. 그리고 그것은 좋다. 지금 우리가 처리 할 수​​ 있기 때문에 두 배의 처리량. 그러나이 연결 여기에 슈퍼 중요하다. 그들은 지속적으로 유지해야 동기화 희망 있다 없다 지리적으로 너무 멀리 떨어져 있으므로 동기화는 본질적으로 그 동시에 일어나는. 그렇지 않으면 우리는 문제가있을 수 있습니다. 

그래서 나쁜입니다. 그러나 다시, 우리는했습니다 새로운 문제를 소개했다. 어떤 문제 난 그냥 다시 한? 단일 장애 지점. 그래서에 대한 해결책은 무엇인가? 빅토리아의 돈을 지출하기를 좋아 있도록 우리는이 사람을 가지고이 작업을 수행 할 수 있습니다. 그리고 난 그냥 갈거야 여기에 충분한 공간을 이동합니다. 그리고 좀 지저분 할 것입니다. 나는 그리기 선을 유지하겠습니다. 모든한다고 가정 그 라인 모두에 가서? 

매우 일반적인 기술은 여기에있을 것입니다 하트 비트라는 기술을 사용 이에 의해 각 장치, 왼쪽과 오른쪽 부하 분산, 또는 우리가 전화를 원하는, 끊임없이 말하고, 나는, 살아있어 난 살아있어, 난 살아있어, 살아있어. 그 중 하나 기본적으로 기본 역할을합니다. 그래서 모든 트래픽을 라우팅되고 왼쪽에있는 하나의 예를 들면, 기본적으로, 임의로. 

그러나 곧 오른쪽에있는 사람으로 더 이상 왼쪽 사람의 의견을하지 않습니다, 오른쪽에 하나는 프로그래밍 자동으로, 예를 들면, IP 주소를 인계 왼쪽에 하나, 따라서 일차되고, 아마도 이메일 또는 문자 메시지를 보내 인간에, 헤이, 대답 왼쪽 기본은 오프라인 상태입니다. 나는 지금은 기본이 될 것입니다. 그래서 부사장된다 대통령은, 말하자면. 그리고 누군가가 저장 가고있다 대통령, 당신이 원하는 경우. 지금 우리는 임시을 가지고 있기 때문에 단일 장애 지점. 

그래서 복잡하거나 스트레스 이 것을 시작 보일 수 있습니다, 이것은 당신이 이러한 문제를 해결하는 방법입니다. 당신은 돈을 던져 않습니다. 당신은 그것을 하드웨어를 던져. 하지만 불행하게도에게 그것을 위해 복잡성을 추가합니다. 그러나 그 결과는 궁극적 있다는 는 이론적으로 훨씬 더 가지고 강력한 아키텍처. 아직 완벽하지 않습니다. 우리가 잔 마셔요 경우에도 우리가 수 있기 때문에 단일 장애 지점이 없습니다. 우리는 지금 실패의 듀얼 포인트가 있습니다. 그러나 두 가지 문제점이 있으면, 이는 절대적으로 수, 우리는 여전히 오프라인 것입니다. 

그리고에서 매우 매우 일반적인 업계는 설명하는 것입니다 화려 측면에서 최대 시간입니다. 그리고 목표의 종류 99.999 %를 열망하는 시간의 사이트가 온라인 상태입니다. 또는 더 나은하는 추가 그에게 몇 가지 더 화려하게. 불행하게도,이 화려은 매우 비싸다. 그리고 이제 실제로을 할 수 있습니다. 그래서 나는 다시 내 큰 계산기를 열 경우, 1 년 365 일 하루 24 시간, 한 시간 60 분, 분 60 초 그 얼마나 많은 초입니다 1 년 나는 제대로 이런 짓을합니다. 우리는 시간이 0.99999로한다면, 그건 얼마나 많은 시간을 우리는에 갈망하고 싶다. 그 의미 그래서 우리는 당신이 최대해야한다 년 동안이 초. 내가 지금 빼기한다면 원래 값, 또는 오히려 로부터이 새로운 값 316초을 first--, 물론 이는 5 분입니다. 

귀하의 웹 사이트 그렇다면하거나 회사입니다 당신이있어 이에 "오 화려을"주장 시간의 99.99 %까지, 즉, 더 나은 서비스를 의미합니다 똑똑하고 신속하게되었습니다 충분한 자원 충분히 세척 서버는 오프라인 있음 올해의 5 분 동안. 그것은 비싼이고 어려운 일이에 갈망합니다. 

그래서, 너무 무역 오프입니다. 시간의 99.999 %가 예쁜 이놈의 하드 비싼. 다섯이 거의 얻을 수 minutes-- 서버에 물리적으로 교체 잘못된 사라 졌어요 뭔가. 우리가 배선을 시작하는 이유입니다 더 복잡 함께 일 선험적되도록 컴퓨터 일종의 자신을 해결할 수 있습니다. 네. 

청중 : [들리지] DAVID 마란 : 문제는 수 장소의 수에. 그리고 fact--에서 

청중 : [들리지] DAVID 마란 : 물론, 절대적으로. 그리고 그림은 그대로 더 복잡해지고 그것은 웹 서버 수 있습니다. 이 건물의 전원을 수 있습니다. 이 같은 물리적 뭔가 될 수 있습니다 케이블이 마모 또는 추방를 받았습니다. 이 데이터베이스 수 응답하지 않습니다. 그것은 그들의 운영을 업데이트 할 수 시스템에 뭔가가 걸려있다. 그래서 다른 많은 움직이는 부분이 있습니다. 그리고 공학의 많은 즉,이 뒤에 가야 정말 얼마나처럼 오프를 거래한다 많은 시간, 실제로 얼마나 많은 돈이다 가치와 위협은 무엇인가 당신은 정말 걱정? 예를 들어,의 내가 하버드에서 가르치는 과정, 우리는 클라우드 컴퓨팅을 많이 사용하는 우리는 지금에 모습을 복용 시작합니다 사실, 우리는 어디에 사용 아마존 웹 서비스. 그냥 그게 왜냐하면 하나는 우리가 시작되었다. 그러나 더욱 요즘있다 구글과 마이크로 소프트와 다른 사람. 그리고 우리는 의식적으로 모든 넣어 선택 우리의 과정 '가상 머신, 그들이라는 것 같이, 내가 생각 그것은 서양 버지니아 데이터 센터입니다. 학생들의 대부분 미국에서 될 일이, 확실히 있기는하지만 일부 국제적으로. 

그러나 현실은 그냥이다 간단하고 그것은 우리를 위해 저렴 우리의 계란을 모두 넣어 버지니아 바구니, 심지어 내가 뭔가 알고 있지만 버지니아 잘못, 이 같은 가끔 같은 happened-- 허리케인 또는 일부 날씨가 있다면 그런 이벤트가 있다면 어떤 전력 계통 문제 나 모든 이렇게 ... 우리의 과정의 데이터는 오프라인 있습니다 몇 분 또는 몇 시간의 일부 번호 또는 이상. 

그러나 복잡도의 양 그이 요구된다, 돈의 양 및 그 것 모든 것을 작동, 필요 유럽​​이나 캘리포니아에서 병렬 너무 많은 이해가되지 않습니다. 그래서 합리적인 무역의 하지만 고통스러운 일 해제 당신은 실제로있을 때 그 중단 시간을 갖는. 

음, 지금까지의에게 전환하자 클라우드 기반 솔루션의 일부 이러한 문제의 일부이다. 다 우리가 봤는데 지금까지 논의 이 문제의 종류이다 몇 시간 동안 우리와 함께, 당신은 자신이 있는지 여부 회사의 서버, 당신은 공동 위치로 이동 여부 데이터 센터 및 공유와 같은 배치 다른 사람과 공간, 또는 현재 클라우드한다. 

그리고에 대한 좋은거야 구름이 모든 것입니다 난 이런 것들을 물리적 객체로 그리기 이제 고려 될 수있다 가상 객체의 종류 있는 구름에 소프트웨어 시뮬레이션. 즉, 컴퓨터 오늘날 서버 오늘은 Dell의 그림처럼 나는, 그래서 빠르다 이전했다 너무 많은 RAM, 너무 많은 CPU, 너무 많은 디스크 사람들이 쓴 것을 공간, 가상 파티션 소프트웨어 그것의 환상에 하나의 서버까지 그래서, 두 개의 서버, 200 서버 인 고객이 우리 각자가 데의 환상을 가지고 일부 웹뿐만 아니라 계정 호스트, 그러나 우리는 우리 자신의 기계를하고 있는지 다른 사람에서 임대. 

하지만 가상 머신에서의 지금까지 한 델 서버로, 그것은 다시들로 분할 될 수 있습니다 두 개 또는 200 개 이상의 가상 머신, 이는 모든 행정 누군가를 제공 액세스,하지만 방법으로 어디에 우리의 없음 알고 또는 가상 다른 액세스 할 수 있습니다 동일한 하드웨어 시스템. 그래서 오늘의 슬라이드에 그림을 그릴 수 있습니다, 나는이 웹 사이트에서 여기에 촬영 한 도커했다. 

그래서이 조금 더 세부 사항 우리가 실제로 필요한 것보다. 그러나 당신은이를 볼 경우 당신의 infrastructure-- 그래서 그냥 하드웨어 자신, 서버, 랙, 데이터 센터 및 모든 that--의 당신은 것 일반적으로, 호스트 운영 체제를 실행. 그래서 뭔가는 윈도우 될 수있다 이렇게 .... 그것은 맥 OS하지 않을 것입니다. 그건 정말 아니니까 기업 요즘. 그래서 리눅스 또는 Solaris 것 유닉스 나 BSD 또는 FreeBSD의 또는 다른 운영 체제의 수 또는 무료 또는 상업적 중 하나입니다 그. 

그리고 당신은 실행 프로그램, 특별 프로그램, 하이퍼 바이저라고, 또는 가상 머신 모니터, VMM. 당신이 있다면 그리고이 제품은 있습니다 VM웨어 나 버추얼 같은 친숙한 가상 PC 등을 사용하거나. 그리고 어떻게 그 프로그램이하는 일은 정확히 이 기능은 내가 이전에 설명했다. 그것은 환상을 만듭니다 하나의 물리적 시스템이 여러 가상 시스템이 될 수 있습니다. 

그리고 상단까지 이러한 다채로운 상자입니다 다음의 그림을 그림. 이 하이퍼 바이저이 소프트웨어의 조각, 호출 VM웨어는, 다른 실행 운영 체제는, 리눅스 호출 환상을 만드는 그 이 물리적 컴퓨터는 실제로 하나, 둘, 세 개의 가상 컴퓨터. 그래서 나는 지금의 소유자로, 구입했습니다 이 하드웨어, 하나의 물리적 컴퓨터. 그리고 지금은 임대 해요 그것은 세 고객. 

그리고 그 세 고객은 모든 생각 그들은 전용 가상 머신을 가지고있다. 그리고 그것은 미끼 및 스위치 아니에요. 그것은 더 공개의 그 당신은 가상 머신을 사용하고 있습니다. 그러나 기술적으로, 우리 모두 전체 관리 제어 할 수 있습니다 그 손님의 각 이상 , 시스템을 한 수 운영 운영 체제의 숫자. 

내가 원하는 무엇이든 설치할 수 있습니다. 내가 원하는 나는 그것을 업그레이드 할 수 있습니다. 내가 알지도 필요가 없습니다 또는 다른 운영에 관심 해당 컴퓨터 시스템, 다른 가상 머신, 이 모든 회색의 소유자 않는 물건은 조금 욕심이되고 있습니다 그리고 자신의 자원을 지나치게된다. 

당신이 하나를 복용하는 경우 그래서 물리적 시스템과 판매 하지 200 만 400 어떤 점에서 고객, 우리는 사람들로 여행거야 이전과 같은 성능 문제. 당신은 단지 유한이 있기 때문에 등 디스크 및 RAM과 양. 그리고 가상 머신 의 프로그램은 그냥 을 척 전체 본격적인 컴퓨터. 그래서 당신은 당신이 지불하는 무슨을 얻는다. 

당신이 온라인으로 찾을 수 있도록 당신은 지불 할 수 믿을만한 회사 어쩌면 $ 100 달 자신의 가상 머신, 또는 자신의 가상 사설 서버, 어떤 이는 또 다른 용어입니다. 아니면 의해 약간의 비행을 찾을 수 있습니다 밤 당신은 $ 5.99 한 달에 지불하는 경우 자신의 가상 머신. 그러나 확률은 거의하지 않아도됩니다 사용 가능한만큼 성능, 그들은 그것을 지나치게했습니다 때문에 그래서보다 당신이 더 높은 때와 서비스 계층 또는 더 나은 공급 업체. 

그래서이 사실은 우리에게 무엇을 의미 하는가? 그래서 날이 가자. 나는 aws.amazon.com에 갈거야. 그냥 그들이 가지고 있기 때문에 옵션의 좋은 메뉴. 그러나이 같은 교훈은 적용 다른 클라우드 공급 업체의 전체 무리입니다. 불행하게도, 그것은 종종 더 마케팅은 무엇보다 말한다. 그리고이 변화 유지합니다. 그래서 당신은이 같은 웹 사이트로 이동합니다. 그리고 이것은 정말하지 않습니다 아무것도 당신이 훨씬 말한다. 

나는이에서 보면 그리고 심지어는하지 않습니다 정말 이런 일 어떤 하나를 알고 나는 다이빙 할 때까지 반드시 않습니다. 그러나의 왼쪽, 계산에 시작하자. 그리고 나는 이것을 클릭거야. 이제 아마존은 솔직히있다 서비스의 압도적 인 수 요즈음. 그러나 아마존 EC2는 아마도 간단합니다. 

아마존 EC2는 정확히 우리를 위해 만들어집니다 사진은 우리가 잠시 전에 보았다. 그것은 그들이 많이 만드는 방법 클라우드에서 자신의 돈. 분명히 넷플릭스 등 그들과 함께 구름에 있습니다. 이것은 모든 전형적 무성 마케팅 말한다. 그래서 내가하고 싶은 것은 Pricing--로 이동하다 또는 오히려의이 인스턴스에 가자 첫번째 그냥이의 그림을 그릴 수 있습니다. 

그래서 이것은 공급 업체가 다를 수 있습니다. 그리고 우리는 너무 깊이 들어갈 필요가 없습니다 여기에 방법이 모든 작품의 잡초. 그러나이 방법은 아마존, 예를 들면, 당신에게 가상 컴퓨터 또는 서버를 임대 클라우드에 그들이 가지고있다 재미있는 이름의이 종류, 작은 의미 t2.nano 등 큰 의미 또는 t2.large. 그들 각각은 하나를 제공합니다 하나 또는 두 개의 가상 CPU. 

왜 가상 CPU입니까? 음, 물리적 시스템은 수도 64 개 이상의 실제 CPU를 가지고있다. 그러나 다시, 소프트웨어를 통해, 그들은 환상을 만들 그 하나의 시스템이 될 수 있음 여러 명의 사용자를 divvied. 그래서 우리는 다음과 같이 생각할 수 있습니다 하나의 인텔 CPU 또는 두 개의 데. hour-- 나는 것 당 CPU 크레딧 작은 글씨를 읽을 필요 이 실제로 무엇을 의미하는지에있다. 그것은 기계의 정도를 의미한다 당신이 마주 시간당 사용할 수 있습니다 하드웨어에 다른 고객. 

여기에 얼마나 많은 RAM 또는 메모리 당신입니다 이거나 먹어 중 절반 기가 바이트, 또는 (500) 메가 바이트 또는 1 기가 바이트 2. 그리고 저장 단지를 말한다 디스크의 종류 그들은 당신을 제공합니다. 다른 스토리지가있다 그들이 제공하는 기술. 그러나 이것보다 더 흥미로운 다음 가격 일 수 있습니다. 

당신이 CTO 또는 경우에 따라서 하지 않는 엔지니어 에 서버를 실행하려는 사무실, 어떤 이유, 그리고 그것은 너무 방법 복잡하거나 비싼 서버를 구입하고이를 공동-찾을 수 및 일부 물리적 케이지 공간에 임대료를 지불 somewhere-- 그냥 앉아서 할 노트북에서 늦은 밤, 신용 카드 정보를 입력 및 cloud-- 아니라 임대 서버, 우리는 여기에서 그것을 할 수 있습니다. 리눅스 이러시면 내려 갈거야 대중적인 운영 시스템이다. 그리고 그냥 물건의 감각을 얻을 수 있습니다. 너무 큰 Whoops--. 

그래서 자신의 가장 작은 살펴 보자 갖고있는 것 같아요 가상 머신, 우리의 목적을 위해, 하나의 CPU 와 RAM의 500메가바이트. 즉, 아주 작은입니다. 하지만 솔직히, 웹 서버는하지 않습니다 모든 많이 할 필요가있다. 당신은 당신의 노트북에 더 좋은 사양을 가지고있다. 하지만 당신은 그 필요하지 않습니다 사양 것들에 대한 요즘. 당신은 시간당 $ 0.0065을 지불 할 것입니다. 

그래서 보자. 이 경우 하루에 24 시간, 그리고 우리는 시간 당이 정도를 지불하고 것을 임대 당신에게 $ 0.15 비용을 부담해야 클라우드에서 특정 서버. 그리고는 하루입니다. 우리는이 365-- $ 57를 할 경우 특정 서버를 임대. 그래서 슈퍼 싼 소리가 난다. 

그것은 또한 매우 낮은 성능입니다. 그래서 우리는 과정에 대해 나는 경향이 있고, 여기에 가르쳐 내가 t2.smalls 또는 t2.mediums 생각 사​​용할 수 있습니다. 그리고 우리는 수백이있을 수 있습니다 사용자, 몇 천 사용자, 총. 그것은 꽤 겸손입니다. 그럼이 비용이 무엇인지 살펴 보자. 그래서 나는이 비용 시간을 할 경우 (24) 시간 시간 365이 하나의 $ (225). 그리고 코스 나는 우리가 일반적으로 가르쳐 에 대한 모든 것을 두 가지를 실행 중복도 성능. 그래서 우리는 따라서 지출 있습니다, 서버에 대한 $ (500) 것을 우리는 매년해야 할 수도 있습니다. 

지금, 당신이 더 필요한 경우 performance-- 의 메모리를 살펴 보자. 우리는 메모리에 대해 꽤 얘기했습니다. 그리고 당신은 더 필요 않은 경우 memory-- 및 64기가바이트 내가 mentioning-- 유지 수입니다 이 시간 당 약 $ 1입니다. 그리고 당신은 매우 신속하게 위치를 볼 수 있습니다 이 때문에 24시간 시간 365 goes--. 그래서 지금은 연간 $ 8​​,000입니다 꽤 괜찮은 서버. 

어떤 점에서 그래서, 거기에 이 변곡점 우리는 $ 6,000 보낼 수있는 곳 해주기 아마 그 같은 기계를 구입 그리고, 아마 둘 이상 비용을 상환 3 년 기계의 수명. 하지만 당신을 무엇을 밀어 수 있습니다 선호 또는 임대의 눈 밖에 남 이 같은 클라우드 기계? 다시 말하지만, 이것은 아마 비슷 이러한 델의 서버 중 하나에 우리는 조금 전에 사진 보았다. 

청중 : [들리지] 

데이비드 마란 : 네, 그 엄청난 상승이다. 우리가 구입하지 않는 때문에 기계, 우리는 그것을 언 박싱 할 필요가 없습니다. 우리는 그것을 들어 올릴 필요가 없습니다. 우리는 우리의 랙에 연결 할 필요가 없습니다. 우리는 그것을 연결 할 필요가 없습니다. 우리는 지불 할 필요가 없습니다 전기 요금. 

우리는 설정하지 않아도 에 에어컨. 하드 드라이브가 죽었을 때, 우리는이 없습니다 한밤중에에서 구동하기 문제를 해결할 수 있습니다. 우리는 모니터링을 설정할 필요가 없습니다. 목록은 계속 이러시면 우리는이 없습니다 과의 물리적 사물의 모든 당신이 할 필요가 없습니다 의 때문에 "구름." 

그리고 명확하게하기 위해, 클라우드 컴퓨팅 바로이 남용되는 용어이다. 그것은 정말 사람을 지불 수단 당신을 위해 서버를 실행하는 다른, 또는 공간을 임대 누군가 다른 사람의 서버. 그래서 용어는 "클라우드 컴퓨팅"의 새로운 기능입니다. 아이디어는 수십 년 오래되었습니다. 그래서 꽤 설득력있다. 

그리고 당신은 더 무엇을 얻을 수 있습니까? 글쎄, 당신은 또한 능력을 얻을 집에서 노트북에 최선을 다할. 즉,의 모두 난 그냥 drawing-- 된 사진 그리고 그 오래 전 그조차하지 않았다 나는 서버 바닥에 주위에 크롤링 된 용의 케이블을 연결 당신이 볼 수있는 라인의 각, 운영을 업그레이드 주변 시스템 및 변경 드라이브. 많은의가있다 그 모든 물성. 

그러나 가상에 대한 아름다운거야 기계, 이름이 가지에서 알 수 있듯이, 이제 웹 기반 있습니다 인터페이스된다 당신은 동등한를 원하는 경우 이 서버에서 라인의 다른 단지 입력, 유형, 유형, 클릭 및 드래그, 제출을 클릭하고, 짜잔, 당신은 사실상 최대 유선 있습니다. 이 모든 소프트웨어에서 수행 있기 때문에. 그리고 그 이유는 그것이 이루어집니다 소프트웨어가 다시 인에 우리는 너무 너무 많은 RAM 등을 가지고 있기 때문에 요즘 우리에게 가능한 많은 CPU, 심지어 모든하지만 그 물건은 시간이 걸립니다 이 일을 실행하는 속도가 느린입니다 하드웨어보다 소프트웨어, 이 기계를 사용하는 느린 그냥 같이 RAM 이상 하드 드라이브와 같은 장치, 순수하게 전자 뭔가. 우리는 너무 많은 자원이 우리에게 사용할 수 있습니다. 우리 인간은 일종의 가변되지 느리다. 그래서 지금은 기계가 할 수있는 단위 시간당 훨씬 더. 우리는이 능력을 가지고 실질적으로 일을 할 수 있습니다. 

그리고 난 코스 말할 것이다 나는 여기에, 예를 들어, 가르쳐 우리가 약 아마 다스 가상 머신 그래서 총 그 특정 실행 등 시간 프런트 엔드 물건을, 최종 물건을 다시하고. 우리는 우리의 기억을 모두 가지고있다. 그래서 어떤 동영상을 포함하여 일 이런 식으로 우리가 촬영하는 것을, 우리는 클라우드에 넣고 끝. 아마존은 아마존 S3라는 서비스를 제공하고 있습니다 그들의 간단한 스토리지 서비스, 어떤 바로 클라우드에서 디스크 공간 같다. 그들은 뭔가를 라는 CloudFront를, 어떤 는 CDN 서비스, 컨텐츠입니다 배달 네트워크 서비스하는 그들이 가지고 의미 모든 파일 및 당신은 자동적으로 그것을 복제에 대한 세계 각국. 

그래서 그들은 선제을하지 않습니다. 그러나 처음 사람 인도 파일을 요청에, 그들은 잠재적으로 로컬로 캐시됩니다. 중국의 첫 번째 시간은 일 브라질에서 처음으로, 그들은 로컬 캐싱을 시작합니다. 그리고 당신은 그 중 하나를 수행 할 필요가 없습니다. 그리고 그렇게 믿을 수 없을만큼이다 물건을 이동 요즘 경쟁력 클라우드로. 당신은 말 그대로이 능력을 가지고 있기 때문에 인간만큼 거의 일을하지합니다 작업. 그리고 당신은 말 그대로 많은 필요하지 않습니다 인간이 이러한 작업을 수행 anymore-- 더 이상 "작전"또는 운영 역할. 당신은 정말 필요 개발자와 적은 수의 엔지니어 사람은 실제로 일을 할 수 있습니다. 사실, 그냥주는 당신이 감각, 나를 위해 가격에 가자 여기에 다른 제품. 이제 CDN S3 같은 것을 볼 수 있습니다. 그래서 이것은 본질적이고 클라우드에서 가상 하드 드라이브. 우리가 아래로 스크롤 경우 pricing--하기 그래서 기가 바이트 당 $ 0.007이다. 어떻게 that's-- 우리는이 작업을 수행합니까? 그게 한달 생각합니다. 

그래서 month-- 당 또는 하루에 있다면? 단,이 하루인가? 이것은 OK, 한달이다. 그래서이 month-- 당 경우 죄송합니다, 그것은 달 당 $ 0.03입니다. 올해 중 12개월이있다. 그래서 얼마나 많은 데이터가 수도 당신은 클라우드에 저장? 기가 바이트는 거대한 아니지만, 1 테라 바이트처럼, 모르는, 그래서 그 중 1,000 등을들 수있다. 즉, 모든 훨씬 아니다. 이 테라 바이트를 저장하는 $ (368)의 아마존의 클라우드 데이터의. 그래서 일부 무엇인가 무역 오프, 다음? 그것은 모든 좋은 수 없습니다. 오늘 우리가 이야기 한 아무것도 없다 종류의 캐치 또는 비용없이. 그래서 이동에 대한 나쁜거야 클라우드에 모든 것을? 청중 : 보안. DAVID 마란 : OK, 당신은 무엇을 의미합니까? 청중 : [들리지] DAVID 마란 : 그래, 맞아. 그리고 당신이 정말로 원하는 수행 어떤 임의의 엔지니어 아마존에서 만약 당신이 가진 충족하지 않을거야 해당 컴퓨터에 물리적으로 액세스, 그들이 만약 정말로 가상 액세스를 원? 심지어에서 비록 이론은 잘 software-- 암호화는 절대적으로 수 이로부터 사용자를 보호합니다. 그래서 당신이있어 어떤 경우 서버에 저장 우려의 적은 encrypted--된다. 

그러나 곧 인간의 신체가로 컴퓨터에 대한 액세스, 옆으로 암호화, 모든 베팅은 일종의 꺼져 있습니다. 당신은 작년 알고 있습니다 PC에 그 특히, 당신은 그 일을했다하더라도 소위 "BIOS 암호" 바탕 화면이 부팅 할 때였다 당신은 암호를 입력하라는 메시지가 줄 그 함께 할 수 없다 윈도우, 일반적으로 수 단지의 섀시를 엽니 다 기계는 작은 작은 핀을 발견, 와라는 것을 사용 점퍼 바로 연결 대한 초 두 전선, 하여 회로를 완료한다. 그리고 그 암호를 제거하는 것입니다. 

그래서 당신은에 물리적으로 액세스 할 때 장치, 당신은 그런 일을 할 수 있습니다. 당신은 하드 드라이브를 제거 할 수 있습니다. 당신은 그런 식으로 액세스 할 수 있습니다. 그리고이에, 왜 드롭 박스의 경우, 예를 들어, 약간의 우려뿐만 아니라 그들이 할 것을 는, 비록 데이터가 암호화, 또한 키가있다. 다른 걱정? 

청중 : [들리지] 데이비드 마란 : 네, 아주이다 구글을 true--, 사과, 세계의 마이크로 소프트. 그리고 사실, 시간이 당신을 위해 당신의 아이폰을했다? 그래, 제공 또는 걸릴. 청중 : [들리지] DAVID 마란 : 미안 해요? 당신은 그 사이에있어 사람 아이폰, 오른쪽이? 청중 : 네. DAVID 마란 : 얼마나 오래 당신은 당신의 아이폰이 있었다? 청중 : [들리지] DAVID 마란 : OK, 그래서 애플은 문자 그대로 알고 당신의 모든 시간에 어디 있었는지 지난 5 년의 일. 

청중 : [들리지] DAVID 마란 :입니다 멋진 기능입니다. 청중 : [들리지] DAVID 마란 : 그래,하지만 확실히 트레이드 오프 (trade off). 청중 : [들리지] 

데이비드 마란 : 네, 그것은 매우 간단합니다. 청중 : [들리지] DAVID 마란 : 다른 단점? 청중 : [들리지] DAVID 마란 : Absolutely-- 기술적으로, 경제적으로, 그것은 꽤 설득력있어 일종의 규모의이 경제를 얻을 과에 모든 것을 이동 소위 구름. 하지만 당신은 아마 하시겠습니까 가장 큰 일부 이동 물고기, 아마존은 구글의 Microsofts-- 랙 스페이스는 꽤 big--입니다 그리고 몇 가지 다른, 그리고 반드시 밤 사람들에 의해 비행 누구를 위해 그것은 할 매우 쉽게 요즘 기술의이 종류. 그리고 그 누구 당신이 할 수 있어요 에 달 당 $ 5.99을 지불해야합니다. 하지만 당신은 확실히거야 당신이 돈을받을. 

당신이 [들리지] 말할 때, 그 때의 이 다섯 화려 같은 일들이 올 이에도 기술적 경우 우리가 정말, 99.999을 보장 할 수 없습니다 우리는 단지 어떤 종류의 구축합니다 계약에 대한 처벌 그래서 그 적어도, 일이없는 경우 우리에게 어떤 비용, 공급 업체가있다. 그리고 그것은 당신이 일반적으로 것입니다 그들을 점점에 동의한다. 

청중 : [들리지] 

DAVID 마란 : 그리고 축복의 한 종류 우리는 들어 있음을 내려 갈 경우에도 예, 또는 특정 회사, 현실은, 아마존입니다 예를 들어, 많은이 이놈 고객, 잘 알려진 고객, 특정 데이터 센터에서 운영 뭔가 정말 잘못 때, 하나님과 날씨 등의 행위처럼, 실버 라이닝의 어떤 종류가 있는지, 그것은 당신이 아주 좋은 회사에 걸입니다. 당신의 웹 사이트는 오프라인 상태 일 수 있습니다. 그러나 정도의 같은 반이다 인기있는 인터넷. 그리고 그것은 틀림없이 조금의 고객에게 더 맛 그것은 인터넷의 더 있다면 acme.com 것보다 일. 하지만 그 속임수의 비트입니다. 

, 보는 다른 것들의 관점에서 그래서 단지, 우리가 다른 사람을 배제하지 않도록 당신은 마이크로 소프트 애저로 이동하는 경우, 그들은 리눅스와 윈도우의 물건을 모두 가지고 그 아마존의 비교입니다. 당신이 구글 컴퓨 트 엔진으로 이동하는 경우, 그들은 비슷한뿐만 아니라 있습니다. 그리고 단지 완성하기 이러한 클라우드 제공, 나는 한 가지 언급을 할 수 있습니다. 이 인기있는 웹 사이트입니다 그 대표이다 기술의 클래스. 우리가 이야기하는 사람 약, 아마존, IaaS의 것, 서비스,​​ 당신으로 인프라 서비스로 물리적 하드웨어의 종류. SAAS이있다. 사실, 내가 이것들을 적어 보자. 

IAAS-- 인프라 서비스로, SaaS는, 그리고 PAAS, 매우 혼란 약어 세 가지를 설명 않는다 물건의 종류. 그리고 글자 자체 정말 문제가되지 않습니다. 이는 클라우드 물건을 모두이다 우리는 그냥 얘기를했습니다 낮은 수준의 물건은 하드웨어 및 스토리지 가상화 소위 구름, 그것은 여부 아마존, 마이크로 소프트, 구글, 또는 다른. 

service--로 소프트웨어 우리 모두는 종류의이을 사용합니다. 당신은 Google Apps를 사용하는 경우 Gmail 또는 캘린더를 들어, 이러한 웹 기반의 응용 프로그램이 십년 전에 우리 두 번 클릭 아이콘이 것 우리의 바탕 화면, 서비스로서의 소프트웨어 이제 정말 웹 응용 프로그램입니다. 그리고 플랫폼으로 서비스의 종류의 따라 달라집니다. 

그리고 하나의 예 나는 당신을 줄 것이다 클라우드 computing--의 맥락에서 아주의 한 회사가있다 인기있는 요즘, Heroku를. 그리고 그들은 서비스입니다, 플랫폼, 만약에 당신, 그 위에서 실행 아마존의 인프라를 제공합니다. 그리고 그들은 단지 그것을 더 쉽게 만들 개발자 및 엔지니어 온라인 웹 기반 응용 프로그램을 얻을 수 있습니다. 

이것은 통증, 초기에 사용하는 아마존 웹 서비스와 다른 것. 실제로이 때문에 알고 이해 데이터베이스 및 웹 서버와 약 로드 밸런서 모든 물건 난 그냥 이야기. 아마존이 수행 한 모든 아니기 때문에 이러한 설계 과제를 숨겨. 그들은 단지를 가상화 한 그리고, 브라우저로 이동 대신 하드웨어의 소프트웨어에. 

그러나 Heroku를 다른 같은 회사 PAAS 제공자, 서비스로서의 플랫폼, 그들은 그 베어 기초를 사용 우리가 이야기하는 것이, 그들은보다 쉽게​​ 구축 그 위에 소프트웨어를 사용하여 당신이 얻을하려는 경우 웹 기반 있도록 응용 프로그램 온라인 요즘, 당신은 확실히에있다 프로그램하는 방법을 알고있다. 당신은 자바 나 파이썬이나 PHP를 알아야합니다 루비 또는 다른 언어의 무리 나. 

하지만 당신은 또한 그것을 놓을 곳이 필요합니다. 그리고 우리는에 대해 이전 이야기 웹 호스팅 회사를 받고. 즉, 같은 2000 년대 중반의 일종 온라인 무언가를 얻기에 접근. 요즘 대신 사람을 지불 할 수 Heroku를 같은 몇 달러 한 달. 그리고 본질적으로, 한 번 당신은했습니다 일부 초기 구성을 완료, 귀하의 웹 사이트를 업데이트하려면 그냥 창에 명령을 입력합니다. 그리고 어떤 코드가 작성했습니다 여기에 노트북에 즉시 숫자에 배포됩니다 클라우드 서버. 

그리고 Heroku를가 처리한다 복잡성의 모든. 그들은 모든 데이터베이스를 파악 물건, 모든로드 밸런싱, 우리가했습니다 두통의 모든 그냥 보드에 작성, 당신을 위해 그 모두를 숨 깁니다. 그리고 답례로, 당신 단지 조금 더를 지불합니다. 그래서 당신은 이러한 인프라 등이 서비스,​​ 서비스로 플랫폼, 다음 서비스로 소프트웨어. 그것은이 다시이야 추상화 또는 레이어. 

클라우드에 대한 질문이나 자신의 인프라를 구축? 좋아, 그 많은이었다. 왜 우리가 가서하지 않습니다 여기에 우리로 15 분 휴식을 취할. 우리는 몇 가지 새로운 개념 돌아올거야 그리고 약간의 실습 기회 전에 저녁 끝났습니다. 