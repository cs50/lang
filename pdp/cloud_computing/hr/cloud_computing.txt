DAVID Malan: U redu, dobrodošao natrag. Prije nego što zaronite u cloud computing, Mislio sam da ću pauzu Ako postoje bilo kakve nepodmirene pitanja ili teme koje su došle za vrijeme ručka da je sada mogla biti od interesa. PUBLIKA: [nečujan] 

DAVID Malan: U redu. Oh, u redu. PUBLIKA: [nečujan] 

DAVID Malan: Ne, naravno. OK, dobro, nadamo se sve svoje Problemi se javljaju u sljedećih nekoliko sati a sutra pogotovo. Ali neka je pogledati, a zatim, na kojoj posljednja rasprava o postavljanju website vodi, općenito kada je riječ o cloud computing, postavljanje arhitekture servera, vrste odluka da inženjeri i programeri i voditelji trebate napraviti kada je u pitanju da radi više nego samo prijave za 10 $ mjesečno web host kada zapravo žele izgraditi vlastite infrastrukture. A mi ćemo pokušati vezati ovo natrag, na primjer, i drugi ispuštanje poput njih. 

Pa krenimo u obzir Koji problemi nastaju kao posao dobiva dobar i nastaju dobre problema. Tako je u vrlo najjednostavnijem slučaju da ima neka tvrtka koja ima web server, možda imate, recimo, poslužitelj koji mi ćemo samo izvući da izgleda ovako. A ovih dana, većina servers-- i neka zapravo staviti sliku na ovo samo tako da je malo manje nebulozna. 

Dakle, Dell stalak server-- natrag u dan, tu su mainframe računala koji je preuzeo cijeli sobe. Ovih dana, ako su dobiti server ga, može izgledati malo nešto ovako. Serveri se mjere u onome što nazivaju rack jedinice, ili Rus. I jedan RU je 1,5 inča, koji je industrijski standard. Dakle, ovo izgleda kao dva RU poslužitelja. Dakle, to je 3 inča visok. I oni su u pravilu širok 19 inča, što znači da sve ove vrste stvari standardiziran. 

Dakle, ako ste u potrazi u center-- podataka a ne samo na jednom poslužitelju, ali neka je pogledajte na Google-a podatkovni centar i vidjeti ako mi vidjeti lijepu sliku u Google Images. To je puno bolje svijetli od vas bi obično naći, i još mnogo seksi izgleda kao rezultat. Ali to je ono što izgleda kao par sto poslužitelji sve o toj istoj veličini, Zapravo, u stalku nakon stalak nakon stalak nakon stalak u podatkovnom centru. 

Nešto kao učinimo, to može dobro biti Google-a, budući da sam googled Google-a. No, to bi mogao biti reprezentativan više općenito podatkovni centar u koji su mnogi tvrtke su obično co-nalazi. A ko-nalazi obično znači da idete na mjesta kao što Equinix ili druge tvrtke koje imaju veliki skladišta koji imaju puno snage, puno hlađenje, nadajmo se puno sigurnosti, i pojedinačne kaveze zatvaranje stalci poslužitelji, a ni iznajmiti regala ili donijeti stalci u. 

I pojedina poduzeća, startups posebno, će imati neku vrstu biometrije da se u njihov kavez, ili ključem, ili ključ kartice. Ti otvori vrata. I iznutra postoji samo trg snimke otisak da ste plaćati za, unutar koji možete staviti sve što želite. 

A ti obično platiti za vlast. A ti platiti za otiske. A onda ćete platiti sami za servere da ste dovođenja u tom prostoru. I što onda imaju mogućnost učiniti je platiti nekome za Vaše internet usluga povezivanja. Možete platiti bilo koji broj od dobavljača, od kojih su svi obično dolaze u taj podatkovnom centru. 

No, pravi zanimljivo je pitanje, što zapravo ide u tim policama? Možda su sve vrlo dobro izgledaju kao što smo upravo vidjeli. Ali oni obavljaju različite funkcije a možda ćete morati raditi različite stvari. I neka je doista motivirati ovu raspravu s pitanjem, što problema počinje se mogu pojaviti ako ste uspješni? 

Dakle, imaš web stranicu koje ste izgradili. A možda ga prodaje widgete ili tako nešto. A što ste radili jako dobro s prodajom od widgeta online. I počnete neke simptome, vaše web stranice. Ono što bi moglo biti neke tehničke simptomi da korisnici izvješćuju kako je posao raste i cvate i vaše web stranice je korist od toga? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, točno. Dakle, možete imati Usporavanje vaše web stranice. A zašto bi to dogoditi? Pa, ako pretpostavimo, za Radi rasprave upravo sada, da ste na jednoj od ovih komercijalnih web domaćini da smo razgovarali o prije ručka, da plaćate neki broj dolara da mjesečno, a već ste platili za godišnju cijenu svoje domene ime, da je web host je vjerojatno overselling svoje resurse donekle. Tako možete imati korisničko ime i lozinku na njihovom serveru. No, kako bi mogli nekoliko drugih, ili više desetak drugih, ili možda čak i više stotinu drugih, korisnici. 

A web stranice živjeti fizički na istom poslužitelju. Zašto je to moguće? Pa ovih dana, serveri ovako obično imaju više tvrdih diskova, možda čak šest ili više tvrdih diskova, od kojih svaki može biti toliko kao 4 terabajta ovih dana. Tako možete imati 24 terabajta prostora u samo jednom malom poslužitelja kao što je ovaj. 

A čak i ako ukrade neki od tog prostora za otpremnine, za rezervne svrhe, to je još uvijek jako puno prostora. I svakako, tipični web stranice ne treba tu puno prostora. Samo registracije korisnika i skladištenje trupaca narudžbi ne uzima sve što je mnogo prostora. Tako da ga možete particionirati sasvim malo i dati svakom korisniku samo mali dio toga. 

U međuvremenu, računalo ovako ovih dana obično ima više CPUs-- ne samo jednom, možda dva, možda i četiri, možda 16, ili čak i više. A svaki od tih procesora ima nešto što se zove jezgra, koja je vrsta kao mozak unutar mozga. Dakle, u stvari, većina je svatko ovdje s moderni laptop ima vjerojatno dual core ili quad core CPU-- i vjerojatno jedini jedan CPU unutar laptop ovih dana. Ali stolna računala i rack računala kao to bi moglo imati vrlo malo više CPU, a zauzvrat jezgri. 

I iskreno, čak iu našim Macove i računala od Danas, ti stvarno ne trebaju dual jezgri ili quad jezgre za provjeru e-pošte. Ako postoji bilo usko grlo kada je riječ o korištenju računala, što je ljudski su vjerojatno Najsporiji stvar o tom računalu. I nećeš biti u stanju provjerite svoj e-mail bilo brže ako se imaju četiri puta više procesora ili jezgri. 

No, isto je vrsta od istina poslužitelju. Samo jedan website ne bi mogli nužno je potrebno više od jednog Procesor ili core, jedan mali mozak unutra radi sve od razmišljanja i obrade. Tako proizvođači imaju sličan počeo narezati te resurse tako da možda vaše web stranice dobiva jedno core, vaše web stranice dobiva jednu jezgru, ili možda mi dijelimo jednu takvu jezgru. Mi smo također dijele prostor na disku. I mi smo također dijele RAM-a, ili memorija sa slobodnim pristupom od prije, od kojih tu je i konačan iznos. 

I to je ključ. Bez obzira koliko skupo računalo je, postoji još konačnih iznos sredstava u njemu. I tako je sve više i više vas pokušati konzumirati te resurse, na sporije stvari mogu postati. Ali zašto? Zašto bi se stvari usporiti kao simptom poslužitelju previše opterećen? Što se događa? 

PUBLIKA: [nečujan] DAVID Malan: Da, točno. predložio sam ranije da RAM je vrsta memorije. To je nestabilno, pri čemu je to gdje aplikacije i podaci pohranjeni kada oni koriste. I tako, dakle postoji samo konačan broj stvari koje očito može učiniti odjednom. I to je također brže, što je dobra stvar. No, to je i skuplji, koja je loša stvar. I to je također zato prisutan u nižim količinama nego disku, tvrdi disk Prostor, koji teži da bude jeftinije. 

Drugim riječima, vi Možda ima 4 terabajta prostora na disku na vašem računalu. No, možda imate 4 gigabajta ili 64 gigabajta, redu veličine, faktor 1.000 manje RAM-a na računalu. Dakle, što se računalo učiniti? Pa, recimo da vas nemam 64 gigabajta RAM na poslužitelju kao što je ovaj, koji bilo bi sasvim uobičajeno, ako ne i niska ovih dana. No, pretpostavimo da imate toliko korisnici rade toliko stvari da ti vrsta vrsta potrebno 65 gigabajta memorije da obrađuju sve to istodobna uporaba? 

Pa, ti samo mogu reći: Žao nam je, neki broj korisnika jednostavno ne mogu pristupiti stranici. I to je mjera u krajnjoj nuždi, svakako. Ili, kao operativni sustava, kao što je Windows ili Mac OS ili Linux ili Solaris ili bilo Niz drugih OS-evima na tom poslužitelju, može samo odlučiti, znate što? Imam samo 64 gigabajta RAM-a. Nekako mi je potrebno 65. Dakle, znate što? Idem uzeti 1 gigabajt u vrijednosti od podataka u RAM-a koji je najmanji u zadnje vrijeme pristupa i samo ga premjestiti na disk privremeno, doslovno kopirati iz posta sjećanje na sporiji memorije tako da ja onda mogu nositi kako 65. gigabajt potrebe za pamćenje, napraviti neki izračun na njega. Onda kada sam učinio radi toga, Ja ću samo potez koji na disk, potez koji drugi RAM sam privremeno stavio na disku natrag u stvarni hardver tako da sam vrsta zadataka. 

Tako sam nekako stavljanjem stvari privremeno u ovom sporijem prostoru pa sam stvoriti privid rukovanje svima. No, tu je usporavanje. Zašto? Pa, unutar njih teško diskova ovih dana je što? Umjesto toga, ono što čini teško voziti se razlikuje od RAM-a najbolje što znam sada? 

PUBLIKA: [nečujan] 

DAVID Malan: OK, istina. PUBLIKA: [nečujan] 

DAVID Malan: Dakle, vrlo istinito. I to je nuspojava ili značajku činjenice da RAM doista brže. I zato što želite koristiti ga za trenutnu upotrebu. A disk je sporije. No, to je trajan, ili stalna. Tako da ga koristiti za dugotrajno skladištenje. No, u pogledu provedba, ako pogledam gore ono što se naziva DIMM, Memorija Dual Inline Modul, to je ono komad RAM Možda obično izgledaju. 

Dakle, unutar našeg Mac-- to je bug. Unutar naših Mac i PC, naš desktop Računala će imati štapićima memorije, kao što bi ih nazvati, ili DIMM-a, ili SIMM-ovi nazad u dan, bez memorije da izgleda ovako. Naša prijenosna računala vjerojatno imati stvari koje su trećine veličine ili upola. Oni su malo manji, ali isto idea-- malo komada zelene silicija hostija ili plastika koja ima male crne pločice na njih s puno žica međusobno povezivanje sve. Možda imate hrpu to unutar vašeg računala. Ali takeaway ovdje to je sasvim elektronički. Postoji samo elektroni teče na ovom uređaju. S druge strane, ako gledamo unutrašnjost hard disk i podići sliku Ovdje, te će umjesto toga vidi ovako, koja ima struju prolazi kroz njega u konačnici. No, ono što je također iskoči na vama o ovome? PUBLIKA: [nečujan] DAVID Malan: Da, tu je očito pokretnih dijelova. To je vrsta kao što je stari rekord igrač ili fonograf igrača. A to prilično košta. To je malo raskošnije nego that-- dok je phonograph igrač koristi utori u zapisnik, to zapravo koristi sićušne male magnetske čestice da ne možemo baš vidjeti. Ali ako malo magnetske čestice izgleda ovako, to se smatra 1. A ako to izgleda ovako sjever-jug, umjesto jug-sjever, to bi moglo biti 0. A vidjet ćemo sutra kako možemo izgraditi od onog na više zanimljivih stvari. 

No, sve što je dobio fizički kretati je sigurno ići sporije od brzine svjetlosti, što u teoriji je što jedan elektron može teći u, iako realno ne sasvim. Dakle, mehanički devices-- puno sporije. No, oni su jeftiniji. A ti može stati toliko više podataka unutar njih. Dakle, činjenica da postoji postoji u svijetu nešto zove virtualna memorija, koristeći tvrdi disk kao što je ovaj kao da je RAM transparentno za korisnika, jednostavnim pomicanjem podataka iz RAM-a na tvrdi disk, a zatim ga se kreće natrag kada je potrebno opet, stvara usporavanje. Zato što doslovno morati kopirajte ga s jednog mjesta na drugo. A stvar koju kopirati ga na i s je zapravo sporiji od RAM gdje želite da bude. 

Alternativa here-- rješenje ako vam se ne sviđa da se uspori, i vaša virtualna memorija vrsta se preopterećeno, što je još jedan rješenje za ovaj problem? 

PUBLIKA: [nečujan] DAVID Malan: Pa, povećanje virtualne memorije bi neka nam to učiniti na još veći razmjera. Mogli bismo nositi 66 gigabajta u vrijednosti memorijskih potreba, ili 67 gigabajta. No, pretpostavimo mi se ne sviđa to usporiti, zapravo Želim isključiti virtualni memorije, ako je to uopće moguće, što drugo sam mogla baciti na taj problem riješiti, gdje želim nositi više korisnika i više memorijske zahtjeve nego sam fizički su u ovom trenutku? 

PUBLIKA: [nečujan] 

DAVID Malan: Nažalost ne. Dakle, CPU i jezgre su oni u su konačni resurs. I nema analogni u tom kontekstu. Dobro pitanje, ipak. Samo da bude jasno, previše, ako unutar toga računalo, recimo, stick RAM-a koji izgleda kao što učinimo, i tako ćemo nazvati ovu RAM-a. I ovdje je tvrdi disk. A ja ću samo izvući ovo slikovno kao mali krug. Ima 0 a i 1 je u oba these-- podataka, mi ćemo ga generalizirati kao. 

A u biti, ako je korisnik izvršavanje aplikacije kao što su, recimo, web stranicu koja to zahtijeva koliko RAM-a po korisniku, što ti predlaže, putem ove stvari zove virtualna memorija, je da se samo privremeno premjestiti da ovdje, tako da sada možete premjestiti sjećanje tuđe Zahtjevi tamo. I onda kada je to učinio, Ja mogu kopirati ovaj natrag preko i to ide ovdje, čime se kreće ono što sam htjela tu negdje drugdje uopce. 

Dakle, postoji samo puno switcheroo, je takeaway ovdje. Dakle, ako vam se ne sviđa ovaj, a vi ne želim staviti nešto na tvrdom disku, što je vrsta očigledan rješenje za poslovno osobe na problem, ili inženjer-a rješenje, što se toga tiče, previše? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, mislim doslovno bacati novac na problem. I doista, ovo je savršeno prikazali neke od višu razinu rasprave o cloud computing. Jer puno je motivirana financijskih odluka, ne nužno tehnološki. Ako 64 nastupa RAM-a je premalo, dobro, zašto ne dobiti 128 gigabajta RAM-a? Zašto ne dobiti 256 gigabajta RAM-a? Pa, zašto ne? 

PUBLIKA: [nečujan] DAVID Malan: Pa, to košta više novaca, sigurno. A ako već imate rezervni prostora na tvrdom disku, učinkovito, ili ekvivalentno, na tvrdom disku tako mnogo jeftinije možda i koristiti ga. Pa opet, tu je ovaj trade off da što smo vidjeli i ranije tog jutra, tamo gdje stvarno nije nužno točan odgovor, postoji samo bolje ili lošije odgovor na temelju onoga što je zapravo stalo. 

Dakle, tu je i tehnološke stvarnosti. Ja ne mogu kupiti računalo, prema mojim saznanjima, s bilijun gigabajta RAM odmah. To jednostavno fizički ne postoji. Dakle, postoji neka gornja granica. Ali, ako ste ikada čak i kupac za potrošača Mac ili PC, također, općenito postoji ova krivulja značajki tamo gdje bi moglo biti dobro, bolji, a najbolji računalo. 

I granične vraća na svom dolara za kupnju najbolji računalo u odnosu na bolje računalo možda neće biti gotovo kao visok kao što je proveo malo više novca i dobivanje bolje računalo nad dobrom računalu. Drugim riječima, da ste plaćati premium da biste dobili vrhu liniju. 

A što ćemo vidjeti u Rasprava o cloud computing je li to ono što je vrlo uobičajena ovih dana, a što tvrtke poput Googlea rano popularizirao, ne plaćam za te zgrade stvarno fancy, skuplji souped do računala s puno i puno svega, već kupnje ili izgradnje lijepa Skromne računala, ali puno njih, i korištenjem nešto što je općenito zove horizontalni skaliranje umjesto vertikalnog skaliranja. 

Dakle, vertikalna skaliranje značilo bi dobili više RAM-a, više diska, više od svega, i vrsta ulagati vertikalno u vašem hardveru tako da ste samo dobivanje najbolje od najboljih od najboljih, ali ste plaćati za to. Horizontalna skaliranje vrsta je od dobiti donji tier stvari je dobar model, ili čak i gore modela, ali se puno od njih. No, čim ste dobili puno them-- na primjer, u ovom slučaju, web poslužitelji, ako je to jedan server ili jedan web host je nedovoljna, onda samo intuitivno je Rješenje ovog problema opterećenja ili preopterećenja na svojim serverima je bilo dobiti veći server ili, što ja predlaganje ovdje, umjesto od skaliranje vertikalno tako kažemo, će biti, znate što? Samo se drugi jedan od njih. Ili možda čak i dobiti treći. No, sada smo izradili problem za inženjering po prirodi ovom poslu ili financijskih odluka. Što je inženjerski problem je sada? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, kako što ih spojiti and-- žao? 

PUBLIKA: [nečujan] DAVID Malan: U redu, jer sam još have-- ako me ponovo uvesti u tu sliku, ako je to moj laptop negdje na internetu, koja je sada između ja i društvo govorimo o, Sada moram shvatiti, na koji poslužitelj mogu poslati ovu posebnu korisnik? A ako postoji drugi korisnici, kao što su to, i onda je to jedna ovdje, a možda je to korisnik A, ovaj je korisnik B, to je user C, i to je server 1, 2 i 3-- sada intuitivno odgovor može ovdje biti samo, poslat ćemo korisniku na 1 i B do 2, i C do 3. I možemo nositi 3 puta što većem broju korisnika. 

Ali to je preveliko pojednostavljivanje. Kako ste se odlučili za koga poslati gdje? Tako ćemo pokušati urazumiti kroz ovo. Dakle, pretpostavimo da računala A, B, C i D su kupci, i poslužitelji 1, 2 i 3 su vodoravno umanjena poslužiteljima. Dakle, oni su na neki način isti. Sve što oni prikazuju isti softver. I svi oni mogu učiniti istu stvar. No, razlog zbog kojeg smo se Tri od njih je tako da se može nositi tri puta više ljudi odjednom. 

Dakle, mi znamo iz Rasprava prije ručka da postoji hardver između laptop i poslužiteljima. No, mi ćemo samo vrsta generalizirati da je sada što su internet ili oblaka. Ali mi znamo da je u mojoj kući, tu je vjerojatno doma router. U blizini serverima, tu je vjerojatno router, DNS poslužitelj, DHCP. Tu može biti ništa želimo u ovoj priči. 

Pa kako ćemo početi odlučivati, kada korisnik A ide na something.com, koji server na relaciji korisniku? Kako bismo mogli početi ispričati ovu priču? PUBLIKA: Balansiranje opterećenja? DAVID Malan: Balansiranje opterećenja. Što želiš reći time? 

PUBLIKA: Vraćanje gdje je većina korištenje je a koji ima većina raspoložive resurse. DAVID Malan: OK, pa me pustiti uvesti novu vrstu hardvera da još nismo raspravljali, što je upravo to, balansiranje opterećenja. I to samo mogao biti poslužitelj. To bi moglo izgledati točno kao onaj koji smo vidjeli maloprije. Tovar napona stvarno samo komad softvera koje rade na komad hardvera. 

Ili možete platiti dobavljača, kao što je Citrix ili drugi, Cisco ili netko drugi. Možete platiti za svoje hardver, koja je hardverski balansiranje opterećenja. No, to samo oni znači unaprijed instaliran na uravnoteženje opterećenja softver na njihov hardver i prodao sve vas zajedno. Dakle, samo mi ćemo ga izvući kao pravokutnik za naše potrebe. 

Kako sada mogu provesti ujednačavanje opterećenja? Drugim riječima, kada korisnik A želi posjetite moj site, njihov zahtjev nekako ili drugi, vjerojatno putem onih usmjerivači smo razgovarali ranije, će na kraju doći ovo balansiranje opterećenja, koji je tada ubacuje usmjeravanje nalik odluku. No, to je usmjeravanje za vrste o višoj svrsi sada. To je ne samo o dobivanju od točke A do točke B. Riječ je o odlučivanju o tome koji točka B je najbolji među them-- 1, 2, ili 3, u ovom slučaju. 

Pa kako sam odlučiti hoće li ići na 1, 2, 3 do? Kakva bi to bila crna kutija, tako da se govoriti, raditi na unutarnjoj strani? I to je još jedan primjer u informatika apstrakcije. Ja doslovno nacrtana ujednačavanje opterećenja kao crne kutije u crnom tintom, unutar od kojih su neki zanimljivi logika ili magija, čak, od čega treba doći decision-- 1, 2 ili 3, A ulaz je samo A. 

PUBLIKA: [nečujan] DAVID Malan: Žao mi je što? PUBLIKA: [nečujan] DAVID Malan: U redu, kako bismo mogli kategorizirati vrste transakcija ovdje? 

PUBLIKA: Pregled web stranicu u odnosu na upite bazu podataka. DAVID Malan: OK, to je dobro. Dakle, možda je to korisnik A želi vidjeti web-stranicu. A možda je to čak i statički sadržaj, nešto što mijenja se rijetko, ako ikada. I to izgleda kao prilično jednostavna operacija. Dakle, možda ćemo samo proizvoljno, ali razumno, recimo, server 1, njegova svrha u životu samo služiti se statički sadržaj, datoteke koje se rijetko, ako ikada, promjena. Možda je to slika na stranici. Možda je tekst na stranici ili drugo, kao neka vrsta nezanimljivih stvari, ništa transakcijski, ništa dinamičan. 

S druge strane, ako korisnik A provjerava iz njegovog košaricu koja zahtijeva baze podataka, negdje pohraniti i sjetite se da transakciju, dobro možda da je zahtjev treba ići na serveru 2. Dakle, to je dobro. Tako možemo učitati ravnotežu temelji o vrsti zahtjeva. Kako bi inače mogli smo to učinili? Što other-- 

PUBLIKA: Na temelju server-a korištenje i kapaciteta. DAVID Malan: U redu, U redu. Tako da je spomenuo da je ranije, Kareem. Pa što ako mi daju neki ulaz na [nečujan] među poslužiteljima 1, 2, i 3. ovoga balansiranje opterećenja, tako da oni su samo stalno informiranje opterećenje balansiranje što je njihov status? Kao, hej, balansiranje opterećenja, Ja sam na korištenje 50%. Drugim riječima, imam pol kao mnogi korisnici kao što sam ja zapravo mogu nositi odmah. Hej, balansiranje opterećenja, ja sam na 100% iskoristivosti. Hej, balansiranje opterećenja, 0% iskorištenosti. Balansiranje opterećenja, ako je to dizajniran na način da se može uzeti u tim komentarima kao ulaz, može onda odlučiti, ooh, broj 2 je na 100%. Pusti me poslati bez buduće zahtjeve prema njemu osim korisnika već povezani. Ovaj tip je na 0%. Neka je poslati puno prometa na njemu. Ovaj tip je rekao da je na 50%. Idemo poslati neki promet na njega. 

Dakle, to bi bio jedan sastojak, koji bismo mogli uzeti teret u obzir. I to će se s vremenom promijeniti. Dakle, odluke će se promijeniti. Dakle, to je jako dobra tehnika, onaj koji se obično koristi. Što još možemo učiniti? I neka je zapravo samo ukratko ovdje. Dakle, odluke ovdje bi moglo biti prema vrstama prometa, ja ću ga nazvati. Može se ovisno o opterećenju. Da vidimo, ako ne možemo se s nekoliko drugih. 

PUBLIKA: [nečujan] DAVID Malan: Location. Dakle, to je dobra. Dakle mjesto-- kako možda iskoristiti tu informaciju? 

PUBLIKA: [nečujan] 

DAVID Malan: Oh, to je dobro. A o tome koliko milisekundi će se smanjiti za na temelju onoga što smo to vidjeli jutro bi rekao? 

PUBLIKA: [nečujan] 

DAVID Malan: Pa, na temelju Na putevima u tragovima što smo vidjeli ranije, što je samo gruba mjera za nešto, barem koliko je potrebno za podatke dobiti od A do B osjeća kao i sve lokalne bilo, što, kao 74 milisekundi, dati ili uzeti? A onda sve sto plus, 200 plus je vjerojatno u inozemstvu. I tako na temelju toga sam, čini se razumnim pretpostaviti koji je za korisnika u SAD-u za pristup europski server može trajati dva ili tri puta dokle, čak iu milisekundi, nego što bi se, ako to server se nalazi ovdje geografski, ili obrnuto. Dakle, kada sam predložio ranije da posebno jednom prijeđete tu 200 milisekunda Prag, dati ili uzeti, ljudi počnu primjećivati. A Trace Route je samo uz pretpostavku sirovo, nezanimljiv podatke. Kad imate web stranicu, morate dobili korisniku preuzimanje slike ili filma datoteke, puno teksta, sljedeći zahtjevi. Vidjeli smo kad smo posjetili, što je to, Facebook ili Amazon ranije, postoji cijeli niz stvari koji treba preuzeti. Tako da će se zbrojiti. Dakle, multi-sekunda možda ne može biti nerazuman. Pa dobro, geografija je jedan sastojak. Dakle, u stvari tvrtki kao što su Akamai, ako ste čuli za njih, ili netko drugi već odavno uzeti zemljopis u obzir. I ispada da je po prirodi nekog IP adresa, moj laptop je IP adresa, možete zaključiti, s nekim vjerojatnosti, gdje ste u svijetu. A u stvari postoji usluge trećih osoba kojima mogu platiti tko održavanje baze podataka IP adresa i geografija da se s velikom sigurnošću će biti istina kada je pitao, gdje u svijetu je to IP adresa? 

I tako, u stvari ono druge tvrtke koriste ovo? Ako imate Hulu i Netflix, ukoliko ste ikad bili na putovanju u inozemstvu, a vi pokušajte gledati nešto na Hulu, a ti nisi u SAD-u, možda vidjeti poruku govoreći, ne u SAD-u. Žao nam je, ne možete pregledati ovaj sadržaj. 

PUBLIKA: [nečujan] 

DAVID Malan: Oh, stvarno? Ali da, pa zapravo to je savršena aplikacija nešto vrlo tehnički na stvarni problem. Ako ste bili na VPN iz Europi ili Aziji ili bilo gdje u svijetu na svoju poslovnu sjedištem u New Yorku ili gdje god se nalazili, vi ste će stvoriti izgled na vanjskim web stranice koje ti si zapravo u New Yorku, čak i ako ste fizički prilično daleko. 

Sada korisnik će znam da si očito daleko. Ali, također ćeš to osjetiti, jer tih dodatnih milisekundi. Taj dodatni udaljenost i šifriranja koji se događa u VPN će usporiti stvari. Dakle, to može i ne mora biti veliko iskustvo. No, Hulu i Netflix su idući u vidjeti ti kao sjedi negdje u New Yorku, kao što ste jasno iščitati. Kakvo savršeno rješenje za to. 

U redu, geografija je jedno rješenje. Što drugo može se koristiti kako bi odlučili kako na relaciji promet od A, B i C 1, 2, i 3, opet, stavlja inženjering šešir na? Sve to zvuči vrlo komplicirano. Uh, ja čak i ne znam gdje za početak provedbe tih. Daj mi nešto što je jednostavnije. Koji je najjednostavniji način donijeti ovu odluku? 

PUBLIKA: Jeli poslužitelja dostupna? 

DAVID Malan: Jeli poslužitelja dostupna? Pa nije loše. To je dobro. To je neka vrsta nuancing opterećenja. Tako ćemo zadržati u kategoriji opterećenja. Ako ste na raspolaganju, samo sam će poslati podatke tamo. Ali to može vrlo brzo obiti o glavu. Jer, ako sam koristiti tu logiku, i ako ja uvijek pitati jednom, jesi li dalje, ti na, jesi li dalje, ako je odgovor uvijek da, Idem poslati 100% prometa s njim, 0% do svih ostalih. I u nekom trenutku, idemo pogoditi da usporavanje ili web nedostupna. Dakle, što je nešto bolje od da, ali još uvijek prilično jednostavan a nije ni približno pametan kao da sve te dodatne podatke u obzir? 

PUBLIKA: Cijena po poslužitelju. DAVID Malan: Cijena po poslužitelju. OK, neka mi bacanje koje u kategoriji opterećenja, previše. Jer ono što ćete naći u tvrtka, too-- da ako nadograditi svoje servere tijekom vremena ili kupiti više, možda neće biti u mogućnosti da biste dobili upravo iste verzije hardvera. Zato što pada zastario. Ne možete ga kupiti više. Cijene promijeniti. 

Tako možete imati međusobno različite servere u svoj klaster, da tako kažemo. To je potpuno u redu. No, iduće godine hardvera može biti dvostruko brže, dva puta sposobni kao ove godine. Tako možemo bacanje koje u kategoriji opterećenja. Ova petlja povratne veze između 1, 2 i 3 u balansiranje opterećenja sigurno mogao reći, hej, ja sam na 50% kapaciteta. No, usput, ja također imaju dvostruko više jezgri. Koristite tu informaciju. Čak simpler-- a to se događa da bude tema u računarstvu. Kada su u nedoumici, ili kada želite jednostavan rješenje koje se općenito dobro radi tijekom vremena, ne biraju isti server cijelo vrijeme, ali choose-- 

PUBLIKA: Slučajni jedan? DAVID Malan: -A random server. Da, izaberite jedno ili drugo. Dakle, slučajnost je zapravo Ovo je vrlo snažan sastojak u računalnoj znanosti, te u inženjerstvu više općenito, pogotovo kada želite napraviti jednostavnu odluku brzo bez kompliciranja sa svima od njih vrlo pametan, ali i vrlo pametan, rješenja koja zahtijevaju sve više inženjering, sve više misao, kad Stvarno, zašto ne bih samo vrsta flip novčić, ili tri sided novac u ovom slučaju, i odlučiti da li da ide 1, 2, 3? 

To bi moglo obiti o glavu probabilistically, ali baš kao i izgledi ponovnog okretanja glave i opet i opet i opet i opet i opet je moguće u reality-- super, super malo vjerojatno. Dakle, tijekom vremena, vjerojatno samo slanjem korisnike nasumično do 1, 2, i 3 ide raditi savršeno u redu. A to je tehnika općenito poznat kao razigravanje. 

Ili zapravo, to nije razigravanje. To bi bio slučajan pristup. A ako želite da se još malo jednostavnije od toga, razigravanje će biti prva osoba ide 1, druga osoba koja je dva, treća osoba na 3, četvrta osoba do 1. I u tome leži okrugli robin. Vi samo vrsta ići okolo u krug. 

Sada biste trebali biti pametan o tome. Vi ne bi trebali slijepo poslati korisniku poslužitelj broj jedan, ako što je to slučaj? Ako je na max kapaciteta, ili to je samo više ne reagiraju. Dakle, idealno želite neke vrsta povratne petlje. Inače, samo poslati sve svojih korisnika u slijepu ulicu. Ali to se može uzeti u obzir, previše. 

Dakle, ne pod cijeniti vrijednost samo slučajnost, što je vrlo često rješenje za ove vrste problema. A mi ćemo zapisati Round Robin. Pa kako su neke tvrtke provoditi razigravanje ili slučajnost ili bilo koji od ovih rješenja? Pa, nažalost, oni raditi stvari kao što je ovaj. Dopustite mi podići još jedan brzi zaslona. 

Zapravo, neka je učiniti dvije. Ne znam zašto smo uzimajući sve ove jela. To je vrlo čudno. U redu, što ja stvarno želim je screenshot. To je čudno. U redu, tako da mogu lažirati ovo. Ne znam koliko je sve dalje Želim zadržati pomicanje. 

Dakle, vrlo često ćete naći sebe na adresu kao što je www.2.acme.com, možda www.3 ili 4 ili 5. I pripazi na to. Ne vidim da se često. Ali kada to učinite, to nekako sklon biti veći, stariji, stodgier tvrtke koji tehnološki ne stvarno Čini se da znaju što rade. A vidite ovo na tech tvrtki ponekad, stariji. 

Dakle, ono što su oni radili? Kako su provedbu balansiranje opterećenja, to će se činiti? Ako se nađete kao Korisnik tipkanje www.something.com, i odjednom ste na www.2.something.com, ono ima svoj teret napona vjerojatno učinio? PUBLIKA: [nečujan] 

DAVID Malan: Da, tako da je balansiranje opterećenja je vjerojatno donošenja odluke temelji se na jednoj od ovi odlučivanja processes-- zapravo ne smeta što. No, baš kao što sam nacrtan Brojevi na brodu ovdje, poslužitelji su ne samo zove 1, 2 i 3. Vjerojatno se zove www1, www2, www3. I ispada da je unutrašnjost HTTP zahtjev je ova značajka. A ja ću simulaciju na sljedeći način. 

Idem otvoriti taj isti razvijanje mreže kartica kao i prije samo tako da možemo vidjeti što se događa na ispod haube. Idem za brisanje zaslona. I ja ću ići, neka je kažu, http://harvard.edu. Sada za sve poslovni razlozi, Harvard odlučio je, poput mnogih, mnoge druge web stranice, standardizirati njegova web stranica na www.harvard.edu i za tehničku i marketinških razloga. To je samo vrsta u Vogue imati www. 

Tako je server na Harvardu ima nekako preusmjeriti korisnika, kao što sam zadržati govoreći, od jedan URL na drugu. Kako to rade? Pa, dopustite mi ići naprijed i pritisnite Enter. A primijetiti URL doista brzo promijenjen u www.harvard.edu. Pusti me pomicanje natrag u tome povijest i kliknite na ove ispravljanje dijagnostičke informacije, ako hoćete. Dopustite mi da pogledate moj zahtjev. 

Dakle ovdje je zahtjev sam napravio. I primijetiti da je u skladu s vrstom zahtjeva sam Facebooka prije. Ali primijetiti odgovor. Što je drugačije u odgovor ovaj put? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, pa to nije 200 OK. To nije 404 nije pronađen. To je 301 trajno, što je vrsta smiješan način kaže, Harvard je povećao i preselio drugdje www.harvard.edu. 301 označava da ovo je preusmjeravanje. A gdje bi korisniku očito biti preusmjeren? Tu je dodatni tidbit Informacije unutar tog okvira. A svaki od tih linija će se sada početak poziva HTTP zaglavlja. Zaglavlje je samo ključ vrijednost pair-- nešto debelo nešto. To je dio informacija. Gdje bi nova Lokacija očito biti? Obavijest posljednja linija među svim tim zaglavlja. 

PUBLIKA: [nečujan] 

DAVID Malan: Da, tako je dodatne informacije. Prva linija koje sam istaknuo kaže 301 trajno. Pa, gdje je on preselio? Posljednji line--, a oni ne moraju biti u tom redoslijedu. To može biti slučajan. debelog Lokacija znači, hej preglednik, idite na ovaj URL umjesto. 

Dakle preglednici razumjeti HTTP preusmjeravanja. A to je vrlo, vrlo čest način odskakanje Korisnik s jednog mjesta na drugo. Na primjer, ako ste ikad pokušali posjetiti web-mjesto koje niste prijavljeni, možda iznenada naći sebi i na novoj URL uopce se zatražiti da se prijavite. 

Kako to rade? Poslužitelj je vjerojatno poslati 301. Tu je i drugi brojevi, kao što su 302, nešto drugačiji u smislu, koji vam poslati na drugi URL. A onda je server, nakon što ste se prijavili, će vas poslati natrag do mjesta gdje što zapravo namjerava. 

Pa što su onda slabo projektirana web stranice rade? Prilikom posjeta www.acme.com, a oni samo dogoditi da su nazvali svoje servere www1, www2, www3, i tako dalje, oni su vrlo simply-- što je fer, ali vrlo vrsta foolishly-- vas preusmjeriti na zapravo drugačije nazive poslužitelja. I to radi savršeno u redu. To je lijepo i jednostavno. 

Vidjeli smo kako će to biti obavlja ispod haube u virtualnom omotnici. Ali zašto je to nedvojbeno loša inženjering odluka? A zašto sam ja na neki način snishodljiv prema ovom inženjering pristup? Raspravljati zašto je to loše. Ben? PUBLIKA: [nečujan] DAVID Malan: Svaki poslužitelj bi morao imaju duplikat web stranice. Ja sam u redu s tim. A u stvari, to je ono što sam misleći na cijelu ovu priču, jer ako mi wanted-- dobro Zapravo, osim za Dan ranije prijedlog, u kojem, ako imate drugačije serveri rade različite stvari, a onda možda oni zapravo mogli biti funkcionalno rade različite stvari. 

No, čak i tada, u nekom trenutku, vaš Baza podataka će dobiti preopterećen. Vaš poslužitelj statična imovina će dobiti preopterećen. Dakle, u nekom trenutku, mi smo natrag na ovu priču, gdje smo potrebno više kopija iste stvari. Dakle, ja sam u redu s tim. PUBLIKA: [nečujan] 

DAVID Malan: U redu, tako neke stranice možda neproporcionalno popularan. I tako fiksacijsku na jednoj adresi nije nužno najbolja stvar. [NEČUJAN]? 

PUBLIKA: [nečujan] 

DAVID Malan: Što misliš pod tim? PUBLIKA: [nečujan] 

DAVID Malan: Da, točno. Tako da ne želite nužno vas have-- sigurno ne žele imati svoje korisnike ručno upisivati ​​u www1 ili www2. Iz brandinga perspektive, to samo izgleda malo smiješno. Ako želite samo neka vrsta čist, elegantan iskustvo, ima tih vrsta nasumično numerirane URL-ovi stvarno nije dobro. Jer tada su korisnici sigurno će kopirati i zalijepiti ih u e-poštu ili instant poruka. 

Sada su za razmnožavanje. Sada ste nekako konfuzno svoj blog manje tehnički publika, koja misli Vaša web adresa www2.something.com. Nema uvjerljivih semantika u to. To se događa samo da se u podlozi tehnički detalj koji ste numerirani svoje servere na ovaj način. 

I što je još gore, što ako, na primjer, možda oko Božića vrijeme kada je poslovni stvarno cvate, imaš www1 kroz www99, ali u siječnju i veljači, nadalje, isključite polovina onih tako da imate samo www1 kroz www50? Što je sada implikacija za to vrlo razumna poslovna odluka? PUBLIKA: [nečujan] DAVID Malan: Morate upravljanje svim onima koji i dalje. PUBLIKA: [nečujan] DAVID Malan: Upravo tako. To je vrsta ulova tamo. Ako vaši klijenti su u naviku bookmark stvari, slanje e-ih, samo Ušteda URL negdje, ili ako je samo u njihovoj auto završiti u pregledniku tako da su oni stvarno ne namjerno ga upišete, to je samo događa, možda, 11 mjeseci u godini učinkovito, doći u slijepu ulicu. I samo najlukaviji od Korisnici će se ostvariti, možda sam ručno trebao ukloniti taj broj. Mislim, to je samo neće dogoditi s više korisnika, tako loše za posao, loša provedba inženjering mudar. 

Dakle, srećom, to nije ni potrebno. Ispada da je ono što ujednačavanje opterećenja može učiniti je, umjesto da se kaže, kada je čini request-- hej A, idi na 1. Drugim riječima, umjesto slanja koje preusmjeravaju tako da jedan korak u tom Proces je ići ovdje On je tada rekao da ide negdje drugdje. I tako korak tri je, on ide negdje drugdje. 

Umjesto toga možete nastaviti put, da se nastaviti koristiti taj izraz, sve je podacima kroz balansiranje opterećenja, tako da on nikada kontakti 1, 2, ili 3 izravno. Sve prometa ne dobiti "preusmjeren" opterećenjem sama napona. I tako sad smo na neki način zamagljuju granice među tim različitim uređajima. Tovar napona može podatke o ruti. To je samo funkcija koja ima. 

Dakle, balansiranje opterećenja, također, da je komad softvera, stvarno. A router je komad softvera. A ti apsolutno može imati dva komada softvera unutar od jednom fizičkom računalu tako opterećenjem napona može učiniti te više stvari. 

Dakle, postoji jedan drugi način to učiniti, što zapravo seže do kakve prvih načela DNS, koji smo govorili prije pauze. DNS je Domain Name System. Imajte na umu da možete pitati DNS poslužitelj, što je IP adresu google.com, facebook.com? 

A zapravo možemo učiniti. Alat nismo koristili ranije je onaj koji je jednako dostupan, pozvao nslookup, za ime poslužitelja pretraživanja. I Samo ću upisati facebook.com. A vidim da Facebookov IP Adresa je očito ovo. Pusti me naprijed i kopiranje da, otići u pregledniku i idite na http: // i da IP adresa i pritisnite Enter. I doista, čini se da radi. 

Sada radi unatrag, što je unutar virtualnog omotnice da Facebook odgovorila kada Posjetio sam tu IP adresu izravno? Zbog obavijesti, gdje sam sada? Gdje sam sada, adresa? 

PUBLIKA: [nečujan] 

DAVID Malan: Na sigurnom verziji, a na www.facebook.com. Dakle, to nije ni jednostavno sigurna IP adresa. Facebook je preuzela na sebe reći, ovo je smiješno. Nećemo da bi vas na to ružno izgleda URL koji je numerički. Mi ćemo vam poslati HTTP preusmjeriti preko tog istog napadača što smo vidjeli before-- Lokacija debelog nešto. 

I tako to jednostavno znači da je ispod napa je i dalje to IP adresa. Svako računalo na Internetu ima IP adresu, to će činiti. Ali ne moraju nužno izložiti da je za korisnika. I baš kao i natrag u dan, tu Bio 1-800-prikupljanje, 1-800-OO-L-L-E-C-T, u SAD-u, bio je način izrade prikupiti poziva putem vrlo lako za pamćenje telefon broj, ili 1-800 madrac kupiti krevet, i slični mnemotehnika da čak i vidjeti na telefon vrsta vrsta ipak, da slova preslikati na broju. 

Sada, zašto je to tako? Pa, to je puno lakše zapamtiti 1-800-madrac ili 1-800-PRIKUPLJAMO umjesto od 1-800 nešto nešto nešto nešto nešto nešto nešto, gdje je svaki od onih koji je znamenka. Isto tako, svijet saznao brzo, da ne bismo trebali ima ljudi pamtiti IP adrese. To bi bilo glupo. Mi ćemo koristiti imena umjesto. I to je razlog zašto DNS je rođen. 

U redu, tako da s tim rekao, u smislu balansiranje opterećenja, pokušajmo yahoo.com. Pa, to je zanimljivo. Yahoo čini se da se vraća tri IP adrese. Dakle zaključiti iz toga, ako bi mogli, što je još jedan način da bismo mogli provesti taj pojam balansiranje opterećenja možda čak i bez korištenja fizičke uređaj, ovaj novi fizički uređaj? 

Drugim riječima, mogu li uzeti daleko financiranje imate za balansiranje opterećenja i reći vam da koristite neki postojeći komad hardvera za provedbu taj pojam balansiranje opterećenja? I spojler je, da, ali ono, ili kako? Što je Yahoo možda radi ovdje? Kareem? OK, Chris? PUBLIKA: [nečujan] DAVID Malan: Da, sve Tri od tih djela. Dakle, slučajnosti, razigravanje, mjesto-- možete samo iskoristiti postojeći komadić slagalice da smo razgovarali o ranije od DNS sustava i jednostavno reći, kada je prvi Korisnik od dana zahtjeva yahoo.com, dati im prvu IP adresu, poput onog koji je završio u 45 gore. I sljedeći put kada korisnik zatraži IP adresa yahoo.com od negdje u svijetu, dati im drugu IP, u tom slučaju treća IP, potom Prvi IP, onda drugi. Ili biti pametan o tome i to grafički. Ili je to slučajno, a ne samo raditi to razigravanje na ovaj način. 

I u ovom slučaju, onda mi ni ne treba uvesti ova crna kutiju u našoj slici. Ne treba nam novi uređaj. Mi jednostavno reći računala ići na poslužiteljima, učinkovito, ali ne putem svoje ime. Oni nikada ne treba znati ime. Oni su samo rekli da yahoo.com Karte na bilo kojem od tih IP adresa. 

Tako da šalje isti zahtjev. Ali na vanjskom dijelu kuverta, to jednostavno stavlja IP da je to dojavio. I na taj način, također, može mi učitati uravnotežiti zahtjeve samo po slanjem omotnicu do drugačiji Yahoo vlastite poslužitelje? 

A ako ćemo držati kopanje, vidjet ćemo vjerojatno druge tvrtke s više. CNN je dva javno izloženi. Iako zapravo, ako ćemo to učiniti opet i again-- cnn.com-- možete vidjeti oni mijenjaju poredak, zapravo. Dakle, što je mehanizam CNN koristi, očito? 

PUBLIKA: Random. DAVID Malan: Pa, to može biti slučajna, iako to Čini se da je biciklizam natrag i naprijed. Dakle, to je vjerojatno razigravanje gdje oni su samo prebacivanje naloga kako da ću vjerojatno uzeti prvi. Moj računalo će se Prvi svaki put. Dakle, to je balansiranje opterećenja. I to nam omogućuje, u konačnici, za mapiranje podataka, ili zahtjeve karata, na više poslužitelja. Pa što vrste problemi sada još uvijek postoji? To se osjeća kao da smo samo jako riješiti dobar problem. Imamo korisnika na različitim poslužiteljima. But-- oh, i Chris, je li imate pitanje prije? 

PUBLIKA: [nečujan] 

DAVID Malan: Totalno ovisi. Dakle, ono što se ovdje događa? A zapravo možemo vidjeti. Dakle, pokušajmo Yahoo. Zapravo, idemo na Facebook. Jer znamo da radi. Zato ću kopirati da IP adresa ponovo. Idem zatvoriti sve te kartice. Ja ću ići otvoreno da posebna mreža tab ovdje. I ja ću posjetiti samo http: //. A sada idem pritisnite Enter. I da vidimo što se dogodilo. 

Ako sam pogled na taj zahtjev, obavijest da my-- Facebook je loš primjer. Jer oni imaju super fantazija tehnika koji skriva taj detalj od nas. Dopusti mi da koristite Yahoo instead-- http: // tu IP. Otvorimo našu mrežu Kartica sačuvati zapisnik. I evo, Enter. To je zabavno. OK, ovdje je glasoviti 404 poruka. Što je tu čudno je da su vjerojatno nikada neće vratiti. Budući da je vjerojatno nije nešto u redu samo po sebi. Oni imaju samo namjerno Ne odlučio podržati numerička oblik njihovu adresu. 

Dakle, ono što mi zapravo vidimo u Kartica Network, ako sam povući ovu ovdje, je, kao što sam rekao, glasoviti 404, gdje ako sam pogled na zaglavlja odgovora, to je ono što sam dobio here-- 404 nije pronađen. Tako ćemo probati jedan drugi. Da vidimo je li CNN surađuje s nama. Ja ću zgrabiti jedan od CNN-a IP adresa, jasno ovo, http, Dah, dah, Dah, dah. Tako je u odgovoru na Chrisa pitanje, da je jedan radio. 

I idemo zaglavlja odgovora. Zapravo ne, u redu, ja sam pokušava pronaći radni primjer. Dakle, CNN je odlučio, samo ću vas ostaviti bez obzira na adresu koju zapravo posjećuju, branding pitanja u stranu. No, ono što se ne bi trebalo događati, ako mogli smo ga vidjeti u Facebooka slučaju, je da će dobiti 301 Premješteno Trajno, najvjerojatnije, unutar kojeg je Lokacija: https: //www.facebook.com. A izgledi su www.facebook.com je alias za isti server mi samo otišao. 

Dakle, to je malo kontraproduktivno. Mi smo doslovno posjetite poslužitelj. Poslužitelj tada nam govori, otići. Idi na ovoj drugoj adresi. Ali mi samo tako dogoditi da se ide natrag na tom istom poslužitelju. Ali valjda smo sada ostati na tome poslužitelj bez ovog naprijed i natrag. Jer sada upotrebljavamo imenovani verzija stranice, a ne numeričke. Dobro pitanje. 

U redu, tako da ako mi sada assume-- mi su riješili uravnoteženje opterećenja. Sada imamo mehanizam, da li je preko DNS, bilo da je putem ove crne kutije, bilo to je korištenjem bilo koje od tih tehnika. Možemo uzeti zahtjev korisnikov i shvatiti da koji server, 1, 2 ili 3, za njega ili nju poslati. 

Ono što počinje break o našoj web stranici? Drugim riječima, mi smo izgradili tvrtku koja je prethodno na jednom poslužitelju. Now da se posao radi na više poslužitelja. Koje vrste pretpostavki, Kakve dizajnerske odluke, Sada bi moglo biti razbijanje? 

To je manje očita. No, da vidimo, ako ne možemo staviti naše prst na neke od problema koje smo stvorio za sebe. Opet, to je vrsta kao holding niz curenje iz crijeva. I sad neki novi problem je iskočio ovamo. 

PUBLIKA: [nečujan] DAVID Malan: OK, tako da moramo držati raste naš prostor na tvrdom disku. Ja sam u redu s tim sada. Zato mislim da mogu vodoravno razmjera. Kao i ako sam nizak, ja ću samo dobiti četvrtina poslužitelj, možda petina poslužitelja, a zatim povećati naše kapacitete od dodatnih 30% ili 50% ili sitnica. Dakle, ja sam u redu s tim, barem za sada. PUBLIKA: [nečujan] DAVID Malan: OK, to je dobra stvar. Dakle, pretpostavimo poslužiteljima nisu identične. I usluga korisnicima ili e-ekvivalent dobiva neku poruku od korisnika govoreći, to se ne radi u redu. To je vrlo moguće, ponekad, da je možda jedan ili više poslužitelja djeluje malo naopako, ali ne drugi, koji se može sigurno čine ga teže loviti niz problema. Možda ćete morati pogledati više mjesta. 

To je manifestacija druge vrste kukca, a to je da vjerojatno bi trebao Osmislili svoju infrastrukturu, tako da je sve zaista identični. No, to ne otkrivaju novi problem da nismo imali prije. Što drugo? PUBLIKA: [nečujan] 

DAVID Malan: Da, postoji više složenosti. Postoji fizički više žica. Postoji još jedan uređaj. U stvari, ja sam uveo temeljno Pojam i temeljni je problem ovdje poznat kao jednu točku neuspjeha, koji je, čak i ako nikada niste čuli fraza, vjerojatno možete sada raditi unatrag i to shvatiti. Što znači da imam samo jedan točka neuspjeha u mojoj arhitekturi? I arhitektura, samo sam znači topologije od toga. 

PUBLIKA: [nečujan] 

DAVID Malan: Da, što ako opterećenje balansiranje ide dolje? Ja sam umetnuta ovaj srednji čovjek čiji svrha u životu je da se riješi problem. Ali ja sam uvela novi problem. Novi curenja je pri piću u crijevu. Jer sada, ako je balansiranje opterećenja umre ili lomova ni misfunctions, Sada sam izgubio pristup sve tri od mojih poslužitelja. I prije, nisam imati taj posrednik. I tako je to novi problem, nedvojbeno. Mi ćemo se vratiti kako bismo mogli popraviti. 

PUBLIKA: [nečujan] DAVID Malan: To će biti jedan pristup. Da, pa to će biti vrlo Rupa štakora počnemo ići dolje. Ali neka se vratiti da je u samo jednom trenutku. Ono što drugi problemi su stvorili smo? 

Dakle Dan prije spomenuto baze podataka. Pa čak i ako niste previše upoznat tehnički, baza podataka je samo server gdje promjene podataka obično se sprema, možda red je netko stavio, Vaš korisnički profil, vaše ime i prezime, vaša adresa e-pošte, stvari koje bi mogle unijeti ili mijenjati tijekom vremena. 

Prije toga, moja baza podataka je bio na istom poslužitelju kao i moj web poslužitelja. Jer upravo sam imao jedan web hosting korisnički račun. Sve je bilo sve na istom mjestu. Gdje da stavim svoju bazu podataka Sada, na serveru 1, 2 ili 3? 

PUBLIKA: 4. 

DAVID Malan: 4, OK, sve U redu, idemo tamo. Zato ću staviti moj database-- i neka početi obilježavanje ove www, www, www. A ja ću reći, ovo je broj četiri. A ja ću reći DB za bazu podataka. OK, sviđa mi se ovo. Što linija bih vjerojatno biti crtež ovdje? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, tako je kod, kao što ćemo raspravljati sutra, vjerojatno je isti na sva tri poslužitelja. Ali to sada treba povezati a ne na baza podataka radi na lokalnoj razini, ali i drugdje. I to je u redu. Mi samo možemo dati bazu podataka ime, kao što smo, ili broj. I to sve radi u redu. Ali što smo učinili? Mi smo vodoravno skalirati tako da Tri servera umjesto jednog, koji dobro je. Budući da sada možemo nositi tri puta više tereta. 

I još bolje, ako se jedan ili dva od tih servera ide dolje, moja tvrtka može nastaviti s radom. Budući da još uvijek imam jedan, čak i ako sam vrsta šepajući uz pametna izvedba. No, ono što novi problem što sam uveo pomicanjem baze podataka ovom posebnom poslužitelju umjesto na 1, 2, i 3? 

PUBLIKA: [nečujan] DAVID Malan: Da, tako da sada imam još jednu točku kvara. Ako je moja baza podataka umre, ili treba se nadograditi, ili kako god, sad sigurno, moja web stranica je online. I mogu poslužiti statična, nepromjenjiv sadržaj. Ali ne mogu dopustiti korisnik prijaviti ili promjene ništa ili nalog bilo još gore. Jer, ako 4 je odsutan, onda 1, 2, i 3 stvarno ne mogu razgovarati s njim po definiciji. 

U redu, tako da, pa to je razlog zašto Ja sam neodlučan izvući ovo. Tako ćemo se vratiti na to. Ne mislim da bi pritom off. No, slika je vrlo brzo će postati stresan. Zato što je potrebno za početak ima dva od svega. U stvari, ako ste ikada vidjeli Film Kontaktirajte prije nekoliko godina s Jodie Foster-- ne? 

U redu, tako da za dvoje nas koji smo vidjeli kontakt, postoji veza tamo gdje su u biti kupio dva od nečega umjesto jedne, iako dvostruko cijenu. Dakle, to je vrsta razigran komentar u filmu. To je vrsta vezana uz to. Mi apsolutno mogao učiniti. I upravo ste cijenu nas dvostruko više novca. No, mi ćemo se vratiti na to. 

Tako smo riješili ovaj. Dakle, znate što? To je kao sklizak padini. Ne želim da se bave imaju da imaju duple baze podataka. To je previše novaca. Znaš što? Želim da moj baze podataka baš kao u verziji jednom gdje svaki server ima vlastite lokalne baze podataka. Dakle, ja sam samo ide izvući db na svakom od njih. 

Tako sada svaki web server je identičan u dosad jer ima isti broj, isti statički imovina, iste slike i tekst i tako dalje. I svaki od njih ima svoju vlastitu bazu podataka. ispravio sam jednu točku neuspjeha. Sada imam bazu podataka. Bez obzira na to što su dva ili jedan od tih stvari umiru, uvijek postoji jedna lijeva. No, ono što novi problem sam stvorio da je Dan rješenje izbjeći? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, i ja ih sinkronizirati, zar ne? Jer, bilo mi je potrebno za sinkronizaciju tko će where-- drugim riječima, ako Alice posjećuje moj stranica, a ona se dogodilo da se slučajno ili okrugli robined ili bilo što drugo, da server broj jedan, nakon toga moram uvijek pošalji ju na server 1. Zašto? Jer, ako sam joj poslati na server 2, to će da izgleda kao da ne postoji tamo. 

Neću da joj povijest narudžbi. Neću da joj profil tamo. I to samo osjeća kao to je pozivajući problema. A kad je Bob posjećuje, ja morate ga poslati uvijek na istom poslužitelju, 2, ili što god jedan, a Charlie se treći, i dosljedno. To nije nerazuman, ipak. To se naziva podjeli svoje baze podataka. A u stvari, to je ono što Facebook nije rano. 

Ako ste pratili povijest Facebook je počeo ovdje na kampusu kao www.thefacebook.com. Tada se razvila nakon što je Mark započeo širenja u druge kampusa biti harvard.thefacebook.com i mit.thefacebook.com, a vjerojatno bu.thefacebook.com i slično. A to je zato što rano, mislim da ne možete imati prijatelja u kampusima. No, to je u redu. Budući da svatko s Harvarda dobio je poslao na ovaj poslužitelj. Svatko od BU dobio poslana na ovom poslužitelju. Svatko od MIT-a dobio je poslao na ovaj server-- u teoriji. Ja ne znam točno sve temeljne pojedinosti provedbe. No, vjerojatno je podijeljen ljude njihov kampus, gdje je njihova mreža bila. 

Dakle, to je dobro sve do točke gdje vam je potrebno dva poslužitelja za Harvard, ili tri poslužitelja za Harvard. I onda da jednostavnost vrsta razgrađuje. Ali to je razuman pristup. Neka je uvijek poslati Alice na istom mjestu, Uvijek poslati Bob na isto mjesto. Ali što se događa ako Alice je poslužitelj odlazi offline? Bob i Charlie još uvijek mogu kupiti stvari i prijaviti na stranice. Ali Alice ne mogu. Tako ste izgubili i treći Vaše korisničke baze. Možda je bolje od 100%? No, možda bi bilo lijepo kad bismo mogli dalje podržavati 100% naših korisnika čak i kada je trećina našeg Poslužitelji ide offline. 

Tako smo mogli sinkronizirati što? Ne korisnici, per se, ali baza podataka u svim ovim serverima. Dakle, sada smo vrsta trebate neke vrsta međupovezivanja ovdje tako da su sami poslužitelji može sync-- nije nerazuman. A u stvari, ova tehnologija postoji. U svijetu baza podataka, tu je pojam master-slave baze podataka, ili primarne sekundarne, gdje je među značajkama nije samo za pohranu podataka i odgovoriti s podacima, ali samo da bi se stalno sinkronizirati s drugim. Dakle, svaki put kad pišu ili spremanje nešto ove baze podataka, odmah biva "replicirati" s drugim bazama podataka, kao dobro. 

I svaki put kad pročitate od nje, nije važno gdje si. Jer, ako u teoriji Svi su sinkronizirane, ti si će dobiti isti prikaz podataka. Dakle, to zvuči savršeno. Mora biti kvaka. Ono što bi moglo ulov biti? 

PUBLIKA: [nečujan] 

DAVID Malan: Da, tako tri puta koliko stvari može poći po zlu. To je stvarnost. Sve je moglo biti isto u duhu. Ali netko treba konfigurirati tih. Postoji veća vjerojatnost da nešto će poći krivo. Samo kombinacijski imate više stvari skloni pogreškama. Što je još loše potencijalno? PUBLIKA: [nečujan] 

DAVID Malan: Da, tako sinkronizacija može biti loše. Čak i kao što možda znate iz backupa i takav, ako se samo slijepo čine sigurnosna kopija, što ako se nešto ne pogriješiti na jednoj bazi podataka? Vi izbrisati nešto što ne bi trebalo. Odmah sam replicirao da je problem svugdje drugdje. Dakle, Victoria je bila talking-- kopija će to biti dobra stvar ovdje. I tako ćemo se vratiti na to. I da bude jasno, govorimo Ne radi se o sigurnosnim kopijama ovdje sam po sebi. Govorimo o istinskom replikacije ili sinkronizacije preko servera. Oni su svi živi. Nisu trebali se koristiti za sigurnosne kopije. 

PUBLIKA: [nečujan] DAVID Malan: Što je to? PUBLIKA: Higher-- DAVID Malan: veći troškovi. Mi smo utrostručio troškove za sigurni, iako barem u smislu hardvera. Budući da je baza podataka samo komad softvera. I web poslužitelj je komad softvera. Vjerojatno je besplatno, ako koristimo bilo koji broj open source stvari. Ali, ako smo pomoću nešto kao što su Oracle, mi smo plaćati Oracle više novca po licence, ili Microsoft za pristup. Mora postojati neki drugi ulov ovdje. To ne može biti tako jednostavan. 

Dakle, na svom mjestu, mislim da je to bilo Kareem, geografije earlier-- ili ne, Roman je to, za geography-- pretpostavimo da smo se pametni o tome, a mi smo stavljajući jednu od naših poslužitelja, i okrenuti baze podataka, u SAD-u, i drugi u Europi, drugi u Južna Amerika, još u Africi, drugi u Aziji, gdje smo možda žele širom svijeta. Mi već znamo iz našeg traga rute koje točke A i točke B, ako su udaljeniji, se događa da se više vremena. 

A ako neki od vas su koristili alata, kao što su Facebook ili Twitter ili bilo koji od tih stranica ovih dana da se stalno mijenja zbog korisnika stvorene podataka, ponekad, ako hit Reload ili otvorite na istoj stranici u nekom drugom pregledniku, vidjet ćete različite verzije, gotovo. Možda ćete vidjeti nečiji status ažurirati ovdje, ali ne ovdje, a onda ponovno učitati, a zatim ga Čini se, a ti opet ponovno učitavanje, i ona će nestati. Drugim riječima, zadržati oko za to, barem Ako koristite socijalne umrežavanje posebno. 

Opet, samo zato što je Podaci se mijenja tako brzo, ponekad poslužitelji ne izaći iz sync. A možda je to super mali prozor. Ali 200 milisekundi, možda čak i više nego that-- je će potrajati neko od nule iznos vremena za ove baze podataka za sinkronizaciju. I mi smo ne samo govorimo o jednom zahtjevu. Ako tvrtka ima tisuće Korisnici ga koristite istovremeno, oni mogu učitavati. Drugim riječima, da bi moglo biti red ili čekati liniju prije svega onih baze podataka Upiti se mogu sinkronizirati. Dakle, možda je to zapravo nekoliko sekundi. 

I doista ovo je istina mislim da čak i do danas s Facebooka, pri čemu kad se uskladiti s East Coast na Zapadnoj obali, ima ne-trivijalan kašnjenje propagacije, da tako kažemo, da samo vrsta morati trpjeti. I tako da nije toliko bug kao što je to stvarnost da korisnici ne bi mogli vidjeti ispravne podatke za najmanje nekoliko sekundi. 

Vidim to na Twitteru puno zapravo, gdje ponekad ću cvrkut u jednom prozoru, otvori drugi za zatim ga vidim kako bi potvrdili da se doista ode gore, a to ne postoji još. I moram nekako ponovno učitavanje, reload, reload-- oh, tu je. I to ne zato što nije spremljen. To jednostavno nije propagirao drugim poslužiteljima. 

Dakle, ovaj trade-off, too-- vi stvarno želi izložiti riziku da ako korisnik odlazi na njihov red povijest, to nije zapravo ima još? Vidim to na nekim bankama. Uvijek me iritira kada se, dobro, za jedan, možete ići samo kao šest mjeseci unatrag u bankovnim izvještajima u nekim bankama, iako u teoriji bi trebale biti u mogućnosti da imaju sve na internetu. Oni samo uzeti stvari offline ponekad. Ponekad, too-- što website je to? Postoji one-- oh, to je GoDaddy, mislim. GoDaddy, kada check out kupnju naziv domene ili nešto, oni često će vam dati link na svom računu. A ako kliknete tu vezu pravo daleko, to često ne radi. To samo govori, slijepa ulica, ništa ovdje. 

I to je previše, jer ove razmnožavanje kašnjenja. Budući da iz bilo kojeg razloga, oni uzimanje malo vremena zapravo generiranje to. Dakle, ovo je nešto kao što želite povući svoju kosu u nekom trenutku. Budući da su svi pokušavate učiniti je riješiti jednostavan problem. I čuvamo stvaranju novih Problemi za sebe. Tako ćemo vidjeti ako mi može nekako poništiti. 

Ispostavilo se da kombiniranje baze podataka o svim svojim web servera nije baš najbolje prakse. Općenito, što je inženjer će učiniti, ili sustavi arhitekt, bi imati različit redovi poslužitelja. I samo zbog prostora je, ja ću crpe svoju bazu podataka ovdje. 

Možda ćemo imati bazu podataka i poslužitelj broj četiri ovdje da ima veze s svaki od tih poslužitelja ovdje. Dakle, to bi moglo biti naš front krajnji sloj, kako bi ljudi rekli. I to bi bio naš stražnji red. A to samo znači da to lice korisnika. A baze podataka ne lice korisnika. Ne korisnik može izravno pristup bazi podataka. 

Tako ćemo sada možda ići dolje ruta Victoria predložio. To je jednu točku kvara. To me čini neugodno. Dakle, ono što je možda Najočitiji rješenje? PUBLIKA: [nečujan] DAVID Malan: Žao nam je, reći da je opet. PUBLIKA: [nečujan] DAVID Malan: Non-produkcija poslužitelja. Kako to misliš? 

PUBLIKA: [nečujan] 

DAVID Malan: Oh, u redu, tako da sigurnosne kopije. U redu, tako da smo mogli učiniti, svakako. I zapravo to je vrlo često obavlja. To bi moglo biti baza broj pet. Ali to je samo spojeni na četvrtom. A možda ga zovu hot spare. Ove dvije baze podataka može biti konfiguriran samo stalno usklađivati međusobno. I tako, ako ovaj stroj umre, za god glupo reason-- tvrdom disku umre, netko putovanja preko kabel, neki softver je manjkav a stroj smrzne ili crashes-- možete imati čovjeka doslovno isključite ovu iz zida i umjesto toga priključiti ovaj jedan u. A onda u roku od, recimo, A Nekoliko minuta, možda pola sata, vi ste na mreži. 

To nije velika, ali to je također nije strašno. I ne morate brinuti o svim pitanjima sinkronizacije. Jer sve je već tamo. Zato što je imao savršen backup spremni otići. 

Ti bi mogao biti malo ljubitelj o tome, kao što neki ljudi često rade, gdje vas možda baze broj četiri ovdje, Baza broj pet mjesta, koji su međusobno razgovarali. Ali imate i ovo vrsta arrangement-- i to namjerno izgleda neuredno, jer to is-- gdje su svi Prednji kraj poslužitelji mogu razgovarati sa svim sporednim serverima. I tako, ako ova baza ne odgovoriti, ovi prednji kraj poslužitelji imaju imati programiranje kod u onima koji kaže: ako ne dobiti Veza na ovu bazu podataka, primarni odmah počinje u razgovoru s sekundarni. 

No, to je sada gura složenosti koda. A sada svojim razvojnim programerima, softver programeri, moraju znati o tome. A ti si neka vrsta vezivanja kod koji pišete na svoj stvarni leđa kraj pojedinosti provedbe, što ga čini teže, osobito u veći tvrtka ili veća web stranice, gdje se ne moraju nužno Želite programeri imati znati kako baze podataka inženjeri rade svoj posao. Možda želite zadržati one uloge vrsta funkcionalno različita, tako da je to sloj apstrakcija između dva. 

Pa kako bismo mogli popraviti? Pa, mi nekako riješiti ovaj problem jednom prije. Zašto ne staviti jedan od te stvari ovdje gdje to govori pak da se broj četiri i pet, svi front end web poslužitelja razgovarati s tim posrednika, a posrednik zauzvrat pravcima njihovih podataka? U stvari, što bi moglo biti dobro ime za ovu stvar? 

PUBLIKA: [nečujan] DAVID Malan: OK, upravitelj baze podataka. No, ono što bi moglo termin biti da bismo mogli ponovno koristiti za ovaj uređaj? Mi balansiranje. Da, pa zapravo, ja sam ne bude fer ovdje. Dakle, balansiranje opterećenja bi značilo da mi smo prebacivanjem naprijed-natrag ovdje koji ne moraju zapravo biti slučaj. Dakle, postoji nekoliko načina da se to moglo učiniti. 

Ako je to u stvari balansiranje opterećenja je Priča je točno isto kao i prije. Neki od zahtjeva otići do 4. Neki od njih idu do 5. I to je dobro. Budući da sada možemo nositi dvostruko više propusnost. No, ova veza Ovdje je super važno. Oni moraju ostati stalno sinkronizirani i nadamo nisu geografski predaleko tako da je sinkronizacija je u suštini trenutna. Inače bismo mogli imati problema. 

Dakle, to nije loše. Ali opet, mi smo uveden je novi problem. Ono što je problem što sam upravo ponovo? Jednu točku kvara. Dakle, što je rješenje za to? Dakle, kao što je Victoria je volio trošiti novac, možemo uzeti tog tipa van i učiniti. A ja sam samo ide premjestiti ovdje dovoljno mjesta. I to će biti malo neuredan. Idem da crtanje linije. Pretpostavimo da su svi ta linija ide u oboje? 

Vrlo uobičajena tehnika ovdje bi se koristiti tehnike nazvane srca pri čemu svaka od tih uređaja, Lijeva i desna balanseri opterećenja, ili što god želimo ih nazvati, stalno govoriti: 'Ja sam živ, Ja sam živ, ja sam živ, ja sam živ. Jedan od njih po defaultu djeluje kao primarni. Dakle, sav promet se preusmjerava onaj na lijevoj strani, na primjer, po defaultu, proizvoljno. 

Ali čim momka na desnoj strani ne čuje s lijeve tipa više, onaj na desnoj strani je programiran automatski, na primjer, preuzeti IP adresu od onog na lijevoj strani, i zbog toga postati primarni i možda poslati e-mail ili SMS poruku s ljudima reći, hej, lijevo primarni je odsutan. Postat ću primarno za sada. Dakle, potpredsjednik postaje predsjednik, da se tako izrazim. A netko mora ići spasiti predsjednik, ako želite. Zato sada imamo privremeni jednu točku kvara. 

Dakle, kao što je komplicirano ili stresno kao To se može činiti početi biti, to je, kako se riješiti te probleme. Vi ne bacati novac na njega. Vi bacati hardver na njega. No, nažalost dodaj složenosti za to. No, rezultat, na kraju, da je imate mnogo više, u teoriji, robustan arhitekture. To je još uvijek nije savršen. Jer čak i kada smo have-- smo mogli ne imati jednu točku kvara. Sada imamo dvostruke točke neuspjeha. No, ako su dvije stvari krenu krivo, koji apsolutno mogu, mi smo još uvijek će biti odsutan. 

I tako vrlo često u industrija je opisati Vaš se vrijeme u smislu devetke. I na neki način u cilju težiti je 99,999% vremena vaš site je online. Ili još bolje, dodajte još nekoliko devetke i tome. Nažalost, ovi devetke su vrlo skupi. I neka je zapravo to van. Dakle, ako sam opet otvoriti moj veliki kalkulator, 365 dana u godini, 24 sata u jednom danu, 60 minuta u jednom satu, a 60 sekundi u minuti, to je koliko sekundi postoje u godinu dana, ako sam to učinio ispravno. Dakle, ako smo puta tako .99999, to je koliko vremena želimo težiti. Dakle, to znači da bi trebao biti spreman to mnogi sekundi tijekom godine. Dakle, ako ja sada oduzimati izvorna vrijednost, odnosno ova nova vrijednost od first-- 316 sekundi, što je naravno pet minuta. 

Dakle, ako vaše web stranice ili vaša tvrtka tvrdeći "pet devetke", pri čemu si ti do 99,99% vremena, to vam znači bolje su bili dovoljno pametni i brzi dovoljno i dovoljno u ravnini s resursima da su vaši poslužitelji su samo offline pet minuta u godini. To je skup i Teško je stvar da težimo. 

Tako da je trade off, previše. 99,999% vremena je prilično prokleto teško i skupo. Pet minutes-- se jedva može dobiti poslužitelju fizički zamijeniti nešto što je pošlo krivo. I to je razlog zašto smo počeli ožičenje stvari zajedno složeniji apriori tako da računala može nekako popraviti sami. Da. 

PUBLIKA: [nečujan] DAVID Malan: Problem bi mogao biti u bilo kojem broju mjesta. A u fact-- 

PUBLIKA: [nečujan] DAVID Malan: Apsolutno, apsolutno. I kao što je slika uzimajući složeniji, to bi mogao biti web poslužitelja. To bi mogla biti snaga na zgradu. To bi moglo biti nešto fizički, kao što su kablovi dobio izlizane ili izbačen. To bi mogla biti baza podataka ne reagira. Moglo bi se oni ažuriraju svoje operativne sustava i nešto visi. Dakle, postoji toliko mnogo drugih pokretnih dijelova. I tako puno inženjering da mora ići iza toga je zapravo samo trgovina off, kao i kako koliko vremena, koliko novca je to zapravo vrijedi, i što su prijetnje ste stvarno zabrinuti? Na primjer, u tečajevi učim na Harvardu, koristimo puno cloud computing, što ćemo početi uzimanje pogled na aukciji, u stvari, gdje ćemo koristiti Amazon Web Services. Samo zato što je to jednom smo počeli. No, tu je još više ovih dana od Googlea i Microsofta i drugih. I svjesno odabrati da stavi sve virtualnih strojeva našim tečajevima ", nakon što se zove, u mislim to je Zapadna Virginia podatkovni centar. Većina naših studenata dogoditi da se iz SAD-a, iako sigurno postoje neki u inozemstvo. 

No, realnost je da je to samo jednostavnije i jeftinije je za nas staviti sve naše jaja u Virginia koš, iako znam da je nešto pođe krivo u Virginiji, što je povremeno happened-- kao ako postoji uragan ili neka vrijeme događaj kao što je to, ako postoji neki električnu mrežu problem ili da bismo mogli sve data Naši tečajevi "može ići offline za neki broj minuta ili sati ili čak i duže. 

No, količina složenosti koja će biti potrebna, i iznos novca koji bi biti potrebno, da rade sve paralelno u Europi ili u Kaliforniji Samo ne čini toliko smisla. Tako da je racionalna trgovina off, ali liječničkom osoblju jedan kad ste zapravo da taj stanke. 

Pa, neka je prijelaz upravo sada neke od rješenja cloud-based neke od tih problema. Sve što smo bili raspravlja do sada je vrsta problema koje imaju je s nama već neko vrijeme, da li imate svoj vlastiti poslužitelji u vašoj tvrtki, da li ići ko-lokaciji postavite kao podatkovni centar i udio Prostor s nekim drugim, ili danas u oblaku. 

I što je lijepo o oblak je da je sve od tih stvari sam sam crtež kao fizičkih objekata Sada se može shvatiti kao vrsta virtualnih objekata u oblaku koji su simulirani sa softverom. Drugim riječima, računala i danas, poslužitelji i danas, kao što su Dell slici Sam pokazao ranije, tako brzo, imaju toliko RAM-a, toliko CPU, toliko disk prostor, da su ljudi zapisano Softver za gotovo particiji jedan poslužitelj gore u iluziji njega kao dva poslužitelja, ili 200 servera, tako da da svatko od nas kupaca ima iluziju imaju ne samo račun na nekom webu domaćin, ali naš vlastiti stroj koji smo najam od nekog drugog. 

No, to je virtualni stroj u tako daleko na jednom Dell server, opet može biti podijeljen se u dva ili 200 ili više virtualnih strojeva, svi koji daju nekome upravni pristup, ali na način u kojem nitko od nas zna ili koristiti druge virtualne strojevi na istom hardveru. Dakle, slikati sliku u današnjim slajdova, Ja sam ovaj pucao ovdje sa stranica zove Docker. 

Dakle, ovo je malo više detalj nego što zapravo trebate. Ali, ako ste vidjeli ovo kao vaš infrastructure-- pa samo hardver svoje, svojih poslužitelja, stalci, podaci centar, i that-- sve što bi obično pokrenuti domaćin operativni sustav. Dakle, nešto volimo-članovima bi to moglo biti Windows. To ne bi bilo Mac OS. Budući da to nije stvarno poduzeća ovih dana. Dakle, to bi bilo Linux ili Solaris ili Unix ili BSD ili FreeBSD ili bilo koji broj drugih operativnih sustava koji su ili besplatni ili komercijalni. 

A onda pokrenuti programa, poseban program, zove hipervizoru ili Virtual Machine Monitor, VMM. A ovo su proizvodi, ako ste poznato, kao što su VMware ili VirtualBox ili Virtual PC ili netko drugi. I što su ti programi učiniti je točno taj lik sam opisao ranije. To stvara iluziju da jednom fizičkom stroju može biti više virtualnih strojeva. 

I tako te šarene kutije do vrha je slikanje od sljedećeg. To hipervizor, ovaj komad softvera, zovu ga VMware, radi na nekim drugim operativni sustav, pozvati ga Linux, stvara iluziju da ovo fizičko računalo je zapravo jedan, dva, tri virtualnih računala. Dakle, sada sam kupio, kao vlasnik takav hardver, jednom fizičkom računalu. I sada sam iznajmljivanje to su tri kupaca. 

A ta tri kupci svi misle oni imaju namjenski virtualni stroj. I to nije mamac i prebaciti. To je više činjenica da je koju koristite virtualni stroj. No, tehnološki, svi smo imaju potpunu administrativnu kontrolu preko svake od tih gostiju operativni sustav, koji bi mogao biti bilo koji broj operativnih sustava. 

Mogu instalirati sve što želim. Mogu ga nadograditi što želim. A ja ni ne moraju znati ili brigu o drugim operativnim Sustavi na tom računalu, drugi virtualni strojevi, osim ako je vlasnik svega toga siva stvari se se malo pohlepni a overselling svoje resurse. 

Dakle, ako ste uzimajući jedan fizički stroj i prodaje da ne 200 nego 400 kupci, u nekom trenutku idemo na izlet u onima Ista pitanja performansi kao i prije. Budući da imate samo ograničen Količina diska i RAM-a i tako dalje. A virtualni stroj je samo jedan program koji je praveći se da je punopravnog računalo. Tako ćete dobiti ono što plaćate ovdje. 

Tako ćete naći na internetu možete platiti ugledna tvrtka možda 100 $ mjesečno za vlastiti virtualni stroj, ili svoj vlastiti virtualni privatni poslužitelj, što je još jedan termin za to. Ili možda naći neki lete noć u kojoj ćete platiti 5,99 $ mjesečno za svoj vlastiti virtualni stroj. No, izgledi su nemate gotovo koliko performanse koje su Vam dostupne, zato što su ga overselling na taj način, nego što bi se sa većim tier usluga ili bolje dobavljač. 

Dakle, što to zapravo znači za nas? Zato me pusti na to. Ja ću ići na aws.amazon.com. Samo zato što imaju lijep izbornik mogućnosti. No, ti isti lekcije se primijeniti na cijela hrpa drugih oblaka dobavljači. Nažalost, to je često više Marketing govoriti nego ništa. I to se stalno mijenja. Dakle, idete na web stranice kao što je ovaj. I to zaista nije reći da gotovo ništa. 

Pa čak i ja, kao što sam pogled na to, zar ne znam što bilo koji od tih stvari nužno učiniti sve dok ronim u. No, krenimo na lijevoj strani, Izračunaj. A ja ću kliknite ovaj. A sada Amazon ima iskreno neodoljiv broj usluga ovih dana. Ali Amazon EC2 je možda najjednostavniji. 

Amazon EC2 će se stvoriti za nas upravo slika vidjeli smo prije nekoliko trenutaka. To je kako oni čine mnogo njihov novac u oblaku. Očigledno Netflix i drugima u oblaku s njima. To je sve uobičajeno pahuljasto marketinga govoriti. Dakle, ono što želim učiniti je otići na Pricing-- ili radije idemo na slučajeve Prvo samo da sliku o tome. 

Dakle, to će se razlikovati od dobavljača. A mi ne trebaju se previše duboko u korov ovdje od kako to sve radi. No, način na Amazon, na primjer, iznajmljuje vam virtualni stroj ili poslužitelja u oblaku se da ste je dobio tih vrsta smiješnih imena, kao t2.nano, što znači mali, ili t2.large, što znači velika. Svaki od njih daje vam bilo jedan ili dva virtualna procesora. 

Zašto je to virtualni CPU? Pa, fizički stroj možda imaju 64 ili više stvarne CPU. Ali opet, putem softvera, oni stvaraju iluziju da je jedan stroj može biti divvied do više korisnika. Tako možemo razmišljati o tome kako je ima jedan Intelov procesor ili dva. CPU kredita po hour-- bih pročitati fine print kao što to zapravo znači. To znači koliko stroja možete koristiti po satu vis-a-vis drugi kupci na tom hardveru. 

Evo koliko RAM-a ili memorije get-- bilo pola gigabajta, odnosno 500 megabajta, ili 1 GB ili 2. A onda je za pohranu jednostavno se odnosi na kakav diskova oni vam dati. Tu je drugačiji za pohranu Tehnologije koje oni nude. No, zanimljivije od toga onda bi mogao biti cijena. 

Dakle, ako ste CTO ili inženjer koji ne želite pokrenuti poslužitelj u vašoj ured, iz bilo kojeg razloga, i to je način previše komplicirano ili skupo kupiti poslužitelje i co-smjestiti ih i plaćati najam u nekom fizičkom kavezu prostora somewhere-- želite samo sjediti na svoj laptop kasno u noć, upisati podatke o kreditnoj kartici, i najam poslužitelja u cloud-- dobro, možemo to učiniti ovdje. Ja ću ići dolje to-- Linux je popularan operativni sustav. I neka je samo dobiti osjećaj za stvari. Whoops-- prevelika. 

Pa pogledajmo njihovu najsitnijeg virtualni stroj, koji izgleda kao da ima, za naše potrebe, jedan CPU i 500 megabajta RAM-a. To je prilično mala. Ali iskreno, web poslužitelji ne potrebno učiniti sve što je puno. Imate bolje naočale u prijenosnom računalu. No, ne morate onih naočale ovih dana za stvari. Ti si idući u platiti 0,0065 $ po satu. 

Tako ćemo vidjeti. Ako postoje 24 sata u jednom danu, a mi smo plaćati toliko po satu, to će vas koštati 0,15 $ za iznajmljivanje koje Posebno poslužitelja u oblaku. A to je samo jedan dan. Ako ćemo to učiniti 365-- $ 57 do najam uglatim poslužitelj. Dakle, to zvuči super jeftini. 

To je također super niske performanse. Tako smo, za tečajeve i naučiti ovdje, imaju tendenciju koristiti Mislim t2.smalls ili t2.mediums. I mi bi mogli imati nekoliko stotina Korisnici, nekoliko tisuća korisnika, ukupno. To je prilično skroman. Tako ćemo vidjeti što će to koštati. Dakle, ako sam to učiniti trošak puta 24 radno vrijeme 365, ovo je $ 225. A za tečajeve Učim, općenito pokrenuti dva svemu, redundancije i za izvedbu. Tako smo mogli potrošiti, dakle, $ 500 za servere da bismo mogli trebati godišnje. 

Sada, ako vam treba više performance-- neka je pogledati memorije. Razgovarali smo o memoriji vrlo malo. A ako trebate više memory-- i 64 gigabajta je broj stalno sam mentioning-- to je gotovo 1 $ po satu. A ti prilično brzo vidjeti gdje ovo goes-- tako 24 sata puta 365. Dakle, sada je 8000 $ godišnje za pristojan server. 

Dakle, u nekom trenutku, postoji ova točka infleksije gdje sada smo mogli potrošiti 6000 $ Vjerojatno i kupiti stroj kao što je to i amortizirati svoju cijenu više možda dva, tri godine, život stroja. Ali, što bi moglo gurnuti u prednost ili nemilosti iznajmljivanje stroj u oblaku kao što je ovaj? Opet, to je usporedivo, vjerojatno, u jedan od tih Dell servere smo vidjeli na slici malo prije. 

PUBLIKA: [nečujan] 

DAVID Malan: Da, to je ogroman naopako. Jer mi ne kupujete Stroj, nemamo ga unbox. Ne morate ga podići. Ne morate ga priključiti u našu policu. Nemamo ga priključiti. Mi ne moraju plaćati električni zakona. 

Nemamo okrenuti klima uređaj uključen. Kad tvrdi disk umre, nemamo voziti se u usred noći to popraviti. Nemamo postaviti nadzor. Nemamo to-- lista ide dalje a na svih fizičkih stvari ne morate učiniti zbog "oblaka". 

I da bude jasno, cloud computing je to vrlo prekomjerno pojam. To zapravo samo znači plaćati nekoga drugi za pokretanje poslužitelja za vas, ili najam prostora na Netko drugi poslužitelji. Dakle, pojam "cloud computing" je nova. Ideja je desetljećima staro. Dakle, to je prilično uvjerljiv. 

A što vam više dobiti? Pa, možete također dobiti mogućnost da učiniti sve što je na laptop kod kuće. Drugim riječima, sve od Slike Samo sam drawing-- a to nije bilo tako davno da ni Bio sam puzeći okolo na server katu uključivanjem kablove u za svaka od linija koje vidite, i nadogradnju radom sustava i mijenjanje diskova okolo. Postoji mnogo fizikalnosti na sve to. 

No, ono što je lijepo o virtualnom strojevi, kao što ime sugerira vrsta, sada postoje na web-u sučelja pri čemu se poželjni Ako želite ekvivalent od linije s ovog poslužitelja na drugo, samo upišite, vrsta, tip, kliknite i povucite, kliknite Pošalji, i voila, ste ga ožičen gotovo. Budući da je sve to učinjeno u softver. A razlog što je učinio u softver je opet jer imamo toliko RAM-a i na taj način mnogo CPU na raspolaganju nam je ovih dana, iako sve da stvari treba vremena, to je sporije pokrenuti stvari u softver od hardvera, baš kao što je sporije koristiti mehanička Uređaj kao što je tvrdi disk od RAM-a, nešto čisto elektronički. Imamo toliko resursa nam na raspolaganju. Mi ljudi smo vrsta invariantly sporo. I tako sada strojevi mogu učiniti tako mnogo više po jedinici vremena. Imamo te sposobnosti raditi stvari gotovo. 

A ja ću reći za tečajeve Učim, na primjer, ovdje, imamo o možda desetak ili tako da ukupni virtualnih strojeva kao što je to trčanje u bilo kojem Vrijeme radi prednji kraj stvari, radi stražnjem kraju stvari. Imamo sve naše pohranu. Dakle, bilo videa, uključujući i stvari ovako da snimate, ćemo završiti stavljanjem u oblak. Amazon ima uslugu pod nazivom Amazon S3, njihova jednostavna servis za pohranu, što je baš kao i prostor na disku u oblaku. Oni imaju nešto zove CloudFront, što je CDN usluga, sadržaj Isporuka mreža usluga, koja znači da se sve datoteke i ti se automatski ga ponoviti oko svijeta. 

Dakle, oni ne to učiniti preventivno. No, prvi put kad netko u Indiji traži datoteku, oni potencijalno će to predmemorija na lokalnoj razini. Prvi put u Kini, Prvi put u Brazilu se to dogodi, oni će početi caching na lokalnoj razini. I ne morate učiniti bilo što od toga. I tako je to tako nevjerojatno uvjerljiv ovih dana preseliti stvari u oblak. Budući da imate tu sposobnost doslovno da nisu ljudi rade gotovo jednako raditi. A ti doslovno ne treba onoliko ljudi rade te poslove anymore-- "ops" ili operativne uloge, više. Vi stvarno samo trebate programeri i inženjeri manje koji samo mogu učiniti stvari gotovo. U stvari, samo kako bi li osjećaj za to, Pusti me da se cijene za jedan drugi proizvod ovdje. Da vidimo nešto poput CDN S3. Dakle, to je bitno virtualni tvrdi disk u oblaku. A ako ćemo pomaknite se dolje do pricing-- tako da je $ 0,007 po gigabajt. I that's-- kako ćemo to učiniti? Mislim da je to mjesečno. 

Dakle, ako je to po month-- ili po danu? Dan, je li to po danu? To je mjesečno, OK. Dakle, ako je to po month-- Žao mi je, to je 0,03 $ mjesečno. Ima 12 mjeseci u godini. Pa koliko podaci mogu pohranjujete u oblaku? Gigabajt nije ogroman, ali ja Ne znam, kao 1 terabajt, pa kao 1.000 onih. To nije sve što je mnogo. To je 368 $ za pohranu terabajt podataka u Amazon oblaka. Pa što su neke od trgovinski me, onda? Ne može sve biti dobro. Ništa mi smo razgovarali o danas je vrsta bez ulova ili troškom. Pa što je loše u vezi s preseljenjem sve u oblak? PUBLIKA: Sigurnost. DAVID Malan: OK, što misliš? PUBLIKA: [nečujan] DAVID Malan: Da, u pravu. A da li vi stvarno želite neki slučajan inženjeri na Amazonu koje nikada nećete zadovoljiti potrebe fizički pristup tim računalima, A ako su stvarno htio, virtualni pristup? I premda u Teorija softverskoj dobro, šifriranje apsolutno mogu zaštititi vas od toga. Dakle, ako je ono što si spremanje na svojim serverima je encrypted-- ne predstavlja problem. 

No, čim čovjek ima fizičko pristup stroju, šifriranje stranu, sve oklade su vrsta off. Možda znate iz prošlih vremena da računala posebno, čak i ako je ono pod nazivom "Lozinke za BIOS" bili kada vaš desktop dignete, da bih se zatraži lozinku pomoću koje nema nikakve veze s Windows, možete se obično samo otvoriti šasije stroj, naći sitne male igle, i koristiti nešto što se zove skakač i samo povezivanje te dvije žice za oko sekundu, čime popunjavanju krug. A to bi se uklonili lozinku. 

Dakle, kada ste fizički pristup uređaj, možete to učiniti takve stvari. Možete ukloniti pogon tvrdog diska. Možete dobiti pristup do njega na taj način. I tako je to razlog zašto, u slučaj Dropbox, Na primjer, to je malo zabrinjavajuće da ne samo da su imaju podatke, iako je kodiran, oni također imaju ključ. Ostali brige? 

PUBLIKA: [nečujan] DAVID Malan: Da, to je vrlo true-- na Googleove, jabuke, su Microsofts svijeta. A u stvari, koliko dugo su ste imali svoj iPhone za? Da, više ili manje. PUBLIKA: [nečujan] DAVID Malan: Žao mi je što? Ti si među onima koji ima iPhone, zar ne? PUBLIKA: Da. DAVID Malan: Koliko ste imali svoj iPhone? PUBLIKA: [nečujan] DAVID Malan: OK, Apple doslovno zna gdje si bio svaki sat dan za posljednjih pet godina. 

PUBLIKA: [nečujan] DAVID Malan: Koji je divna osobina. PUBLIKA: [nečujan] DAVID Malan: Da, ali trade off sigurno. PUBLIKA: [nečujan] 

DAVID Malan: Da, to je vrlo lako. PUBLIKA: [nečujan] DAVID Malan: Ostale mane? PUBLIKA: [nečujan] DAVID Malan: Absolutely-- tehnološki, ekonomski, to je prilično uvjerljiv na vrsta dobile ove ekonomije razmjera i premjestiti sve na svoje tzv oblak. No, vjerojatno ne želite ići s nekim od najvećih riba, Amazonke je Googleova je Microsofts-- Rackspace je prilično big-- i još nekoliko osoba, a ne nužno letjeti po noći ljudi za koga je vrlo lako za napraviti ova vrsta tehnike danas. I to je koga možete platiti 5,99 $ po mjesecu. No, sigurno ćete dobijete ono što plaćate za. 

Kada reći [nečujan], to je kad stvari poput ovih pet devetke smisliti, pri čemu čak i ako je tehnološki ne možemo jamčiti 99.999, ćemo samo graditi u nekoj vrsti kazne ugovoru tako da, ako to ne dogodi, barem postoji neki trošak za nas, dobavljač. I to je ono što obično bi biti uzimajući ih da pristanu na. 

PUBLIKA: [nečujan] 

DAVID Malan: I jedna vrsta blagoslova je da čak i kad idemo dolje, za Primjerice, ili čak i neke tvrtke, stvarnost je Amazon, primjerice, ima toliko prokleto kupci, poznati kupci, djelovanje iz određenih podatkovnih centara da kad nešto stvarno krene po zlu, kao višu silu i vrijeme i slično, ako postoji bilo kakav srebrne obloge, to je da ste u vrlo dobrom društvu. Vaše web stranice mogu biti offline. No, tako je kao polovica popularni internet. I to je vjerojatno malo ukusnijim za svoje klijente ako je to više od interneta stvar nego acme.com stvar. Ali to je malo prevariti. 

Tako je u odnosu na druge stvari za pogledati, Samo tako da mi ne isključuju druge, ako idete na Microsoft Azure, oni imati i Linux i Windows stvari To je usporedivo s Amazon je. Ako idete na Google Compute Engine, oni imaju nešto slično kao dobro. I samo da zaokružuju ove cloud ponude, Ja ću spomenuti jednu drugu stvar. To je popularan website to je predstavnik klase tehnologija. Oni samo smo razgovarali o, Amazon će biti IAAS, Infrastruktura kao usluga, gdje vas vrsta fizičkog hardvera kao uslugu. Postoji SaaS. Zapravo, neka mi točkica ove dolje. 

IAAS-- Infrastruktura Kao servis, SaaS, i PaaS, koji su nevjerojatno zbunjujuće akronimi da ne opisuju tri različite vrste stvari. I sami akronimi stvarno ne smeta. To je sve od oblaka stvari upravo smo razgovarali o tome, nižoj razini stvari je virtualizacije hardvera i skladištenja u takozvanom oblaka, da li je Amazon, Microsoft, Google ili neki drugi. 

Softver kao service-- svi mi nekako upotrijebiti. Ako koristite Google Apps za Gmail ili kalendara, bilo koji od ovih web-based Prije aplikacije koje 10 godina smo će imati dvostruko kliknuli ikone na naš desktop, softver kao usluga Sada je stvarno web aplikacija. I platformi kao Usluga vrsta ovisi. 

I jedan primjer ću ti dati ovdje u kontekstu oblaka computing-- postoji jedna tvrtka koja je sasvim popularne ovih dana, Heroku. I oni su usluge, platforma, ako hoćete, koji radi na vrh Amazon je infrastruktura. I oni su samo još više olakšati za programere i inženjere da se web-based aplikacije online. 

To je bol, u početku, koristiti Amazon Web Services i drugih stvari. Zato što zapravo imaju znati i razumjeti o bazama podataka i web servera i ujednačavanje opterećenja i sve stvari Upravo sam govorio o tome. Budući da su svi Amazon je učinio nije skrivena one dizajna izazovima. Upravo su ih virtualizirao i premjestiti ih u pregledniku u softver umjesto hardvera. 

No, tvrtke poput Heroku i drugi PaaS usluga, Platforma kao usluga, oni koriste one Barebone osnove da smo upravo razgovarali, a oni grade lakše koristiti softver na vrhu tako da ako želite da biste dobili web-based aplikacija online ovih dana, svakako moraju znam kako programirati. Morate znati Java ili Python ili PHP ili Ruby, ili hrpa drugih jezika. 

Ali, također je potrebno mjesto za staviti ga. I razgovarali smo ranije o uzimajući web hosting tvrtku. To je vrsta od poput sredine 2000-ih pristup uzimajući nešto na internetu. Danas možda umjesto platiti nekome kao Heroku nekoliko dolara mjesečno. A u biti, nakon što ste učiniti neke početne konfiguracije, ažurirati svoju web stranicu, samo upišite naredbu u prozoru. I što god broj što ste napisali Ovdje na prijenosnom računalu odmah dobiva distribuirati na bilo koji broj poslužitelja u oblaku. 

I Heroku brine sve složenosti. Oni shvatiti sve baze podataka stvari, sve balansiranje opterećenja, sve od glavobolje koje smo upravo napisao na ploči, i sakriti sve to za vas. A za uzvrat, samo platiti ih malo više. Tako da su ove infrastrukture kao usluge, platforme kao usluge, a zatim softver kao uslugu. To je, opet, to voda ili raslojavanje. 

Bilo kakva pitanja o oblaku ili izgradnju vlastite infrastrukture? U redu, to je puno. Zašto ne idemo naprijed i uzeti naše 15 minuta pauze ovdje. Mi ćemo se vratiti s nekoliko novih koncepata i malo ruke na mogućnost Prije večer je gotova. 