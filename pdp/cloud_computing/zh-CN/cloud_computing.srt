1
00:00:00,000 --> 00:00:00,629

2
00:00:00,629 --> 00:00:02,170
DAVID MALAN：好的，欢迎回来。

3
00:00:02,170 --> 00:00:06,520
在我们进入云计算，
我想我停顿了一会儿

4
00:00:06,520 --> 00:00:11,740
如果有任何悬而未决的问题
或午餐时想出了主题

5
00:00:11,740 --> 00:00:13,834
现在可能是感兴趣的。

6
00:00:13,834 --> 00:00:18,470

7
00:00:18,470 --> 00:00:21,410
>> 听众：[听不清]

8
00:00:21,410 --> 00:00:22,090
>> DAVID MALAN：OK。

9
00:00:22,090 --> 00:00:23,555
哦，好的。

10
00:00:23,555 --> 00:00:24,430
听众：[听不清]

11
00:00:24,430 --> 00:00:29,880

12
00:00:29,880 --> 00:00:31,420
>> DAVID MALAN：不，当然。

13
00:00:31,420 --> 00:00:35,180
OK，好希望所有的
在接下来的几个小时内出现的问题

14
00:00:35,180 --> 00:00:36,410
明天更是如此。

15
00:00:36,410 --> 00:00:42,700
但是，让我们来看看，然后在那里
有关设置的最后讨论

16
00:00:42,700 --> 00:00:45,730
网站线索，更普遍
当涉及到云计算，

17
00:00:45,730 --> 00:00:48,210
设置服务器的体系结构，
种决定

18
00:00:48,210 --> 00:00:50,800
工程师和
开发者和管理者

19
00:00:50,800 --> 00:00:53,210
需要做，当谈到
在做多只

20
00:00:53,210 --> 00:00:56,550
报名参加每月的虚拟主机$ 10
当你真正想打造出来的

21
00:00:56,550 --> 00:00:57,550
你自己的基础设施。

22
00:00:57,550 --> 00:01:00,400
我们会尽力来把这些背，
例如，到收存箱和其他

23
00:01:00,400 --> 00:01:01,350
像他们。

24
00:01:01,350 --> 00:01:06,250
>> 因此，让我们开始考虑
有什么问题出现业务

25
00:01:06,250 --> 00:01:09,390
取得了良好的和好出现的问题。

26
00:01:09,390 --> 00:01:14,720
所以在具有的非常简单的情况下
一些公司，有一个网络服务器，

27
00:01:14,720 --> 00:01:21,470
你可能有，比方说，一个服务器
我们就得出如下。

28
00:01:21,470 --> 00:01:25,620
这几天，最servers--让我们
居然把一个图片，这只是如此

29
00:01:25,620 --> 00:01:27,680
这是一个有点不太模糊的。

30
00:01:27,680 --> 00:01:31,510
>> 因此戴尔机架server--
早在一天，有

31
00:01:31,510 --> 00:01:33,730
是大型计算机
这占去了整个房间。

32
00:01:33,730 --> 00:01:35,710
这些天来，如果你是
得到一个服务器，它

33
00:01:35,710 --> 00:01:38,520
可能看起来有点像这样。

34
00:01:38,520 --> 00:01:41,760
服务器在衡量什么
被称为机架单元，或者替换单元。

35
00:01:41,760 --> 00:01:45,280
一RU为1.5英寸，
这是一个行业标准。

36
00:01:45,280 --> 00:01:49,300
因此，这看起来就像一个两RU服务器。

37
00:01:49,300 --> 00:01:51,240
因此，它的3个英寸高。

38
00:01:51,240 --> 00:01:54,430
而且他们一般是19英寸宽，
这意味着所有这些东西的

39
00:01:54,430 --> 00:01:55,160
标准化。

40
00:01:55,160 --> 00:01:59,420
>> 所以，如果你在一个数据center--看
不只是在一台服务器，但让我们

41
00:01:59,420 --> 00:02:02,110
看看谷歌的
数据中心，看看我们

42
00:02:02,110 --> 00:02:04,280
看到谷歌图片漂亮的图片。

43
00:02:04,280 --> 00:02:09,090
这是比你更好亮
通常会发现，等等

44
00:02:09,090 --> 00:02:14,900
性感看作为一个结果。但
这是什么样子的一对夫妇

45
00:02:14,900 --> 00:02:17,380
100个服务器全部
大约相同的大小，

46
00:02:17,380 --> 00:02:21,450
实际上，在机架机架后后
在数据中心的机架后架。

47
00:02:21,450 --> 00:02:26,150
>> 像this--这很可能
是谷歌的，因为我用Google搜索谷歌的。

48
00:02:26,150 --> 00:02:28,330
但它可能是代表
更普遍

49
00:02:28,330 --> 00:02:31,480
数据中心，其中许多
公司通常共同位于。

50
00:02:31,480 --> 00:02:34,940
和同位通常意味着
你去像Equinix的地方

51
00:02:34,940 --> 00:02:40,280
或其他供应商具有较大
有大量的权力仓库，

52
00:02:40,280 --> 00:02:42,950
大量的冷却，希望
大量的安全性，

53
00:02:42,950 --> 00:02:47,910
和单独的笼子围成衣架
服务器和你要么租架

54
00:02:47,910 --> 00:02:49,150
或者您带来的机架。

55
00:02:49,150 --> 00:02:51,420
>> 而个别公司，
尤其是初创公司，

56
00:02:51,420 --> 00:02:54,820
将具有某种生物识别技术
要进入他们的笼子，或钥匙，

57
00:02:54,820 --> 00:02:55,640
或钥匙卡。

58
00:02:55,640 --> 00:02:56,990
你打开门。

59
00:02:56,990 --> 00:03:00,354
而且里面有刚
平方英尺的足迹

60
00:03:00,354 --> 00:03:03,270
那你付出的，里面
你可以把你想要的任何东西。

61
00:03:03,270 --> 00:03:04,770
>> 而且您通常会支付能力。

62
00:03:04,770 --> 00:03:06,920
而你付出的足迹。

63
00:03:06,920 --> 00:03:08,770
然后你支付
自己的服务器

64
00:03:08,770 --> 00:03:10,560
您所带进的空间。

65
00:03:10,560 --> 00:03:12,850
和你再有
选择做的是花钱找人

66
00:03:12,850 --> 00:03:15,120
您的Internet服务的连接。

67
00:03:15,120 --> 00:03:17,240
您可以支付任何数量
供应商，所有的人

68
00:03:17,240 --> 00:03:19,210
通常进入数据中心。

69
00:03:19,210 --> 00:03:22,740
>> 但真正有趣的问题是，
究竟这些机架去？

70
00:03:22,740 --> 00:03:25,020
他们可能都很好
像我们刚才看到的。

71
00:03:25,020 --> 00:03:27,870
但是他们执行不同的功能
并可能需要做不同的事情。

72
00:03:27,870 --> 00:03:29,661
让我们实际
激励这个讨论

73
00:03:29,661 --> 00:03:35,370
有问题，什么问题
到开始出现，如果你成功了吗？

74
00:03:35,370 --> 00:03:37,900
>> 所以，你有一个网站
你已经建立。

75
00:03:37,900 --> 00:03:40,450
也许它的售价小部件
或类似的东西。

76
00:03:40,450 --> 00:03:43,620
而你已经做得很好
销售小部件联机。

77
00:03:43,620 --> 00:03:48,490
你开始体验
一些症状，你的网站。

78
00:03:48,490 --> 00:03:51,070
什么可能是一些
技术症状

79
00:03:51,070 --> 00:03:54,040
用户报告业务
增长和蓬勃发展

80
00:03:54,040 --> 00:03:59,482
和你的网站是
受益呢？

81
00:03:59,482 --> 00:04:02,690
>> 听众：[听不清]

82
00:04:02,690 --> 00:04:05,910

83
00:04:05,910 --> 00:04:07,050
>> DAVID MALAN：是的，没错。

84
00:04:07,050 --> 00:04:10,040
所以，你可能有一个
您的网站的放缓。

85
00:04:10,040 --> 00:04:11,240
又为什么会发生呢？

86
00:04:11,240 --> 00:04:12,660
那么，如果我们假设，
就事论事

87
00:04:12,660 --> 00:04:15,160
现在，你是在一个
这些商业网站主机

88
00:04:15,160 --> 00:04:17,860
我们午餐前谈论，
你付出的美元一定数量

89
00:04:17,860 --> 00:04:20,859
每月，并且您已经支付
为您的域名每年费用

90
00:04:20,859 --> 00:04:25,300
名，虚拟主机是可能
超卖他们的资源

91
00:04:25,300 --> 00:04:26,050
在某种程度上。

92
00:04:26,050 --> 00:04:29,000
所以，你可能有一个用户名
和他们的服务器上的密码。

93
00:04:29,000 --> 00:04:32,410
但是，这样可能其他几家，或几个
十多种，甚至可能数

94
00:04:32,410 --> 00:04:33,980
其他一百，用户。

95
00:04:33,980 --> 00:04:37,190
>> 和网站实际生活
在同一台服务器上。

96
00:04:37,190 --> 00:04:38,340
为什么这可能吗？

97
00:04:38,340 --> 00:04:40,680
好了，这些天，服务器
像这样的典型

98
00:04:40,680 --> 00:04:44,610
有多个硬盘，也许
多达六个以上的硬盘，

99
00:04:44,610 --> 00:04:47,665
其中每一个可能是尽可能多的
因为4 TB的这些天。

100
00:04:47,665 --> 00:04:52,140
所以，你可能有空间24万亿字节
在短短的一个这样的小服务器。

101
00:04:52,140 --> 00:04:55,710
>> 即使你偷一些空间
冗余，备份的目的，

102
00:04:55,710 --> 00:04:57,110
它仍然是相当多的空间。

103
00:04:57,110 --> 00:05:00,070
当然，一个典型的网站
并不需要那么多的空间。

104
00:05:00,070 --> 00:05:03,100
只需注册用户
和存储订单日志

105
00:05:03,100 --> 00:05:04,640
并不需要那么多的空间。

106
00:05:04,640 --> 00:05:07,550
所以，你可以很分区呢
了一下，让每个用户

107
00:05:07,550 --> 00:05:08,980
只是其中一小片。

108
00:05:08,980 --> 00:05:11,310
>> 同时，一台计算机
这样，这些天

109
00:05:11,310 --> 00:05:16,370
通常有多个CPUs--不仅仅是
之一，也许两个，也许四，也许16，

110
00:05:16,370 --> 00:05:17,149
甚至更多。

111
00:05:17,149 --> 00:05:18,940
而且每个CPU的
有一种叫

112
00:05:18,940 --> 00:05:22,230
一个核心，这是一种像
脑的内部的大脑。

113
00:05:22,230 --> 00:05:26,800
因此，在这里其实大多数人
现代笔记本电脑有可能是双核

114
00:05:26,800 --> 00:05:32,030
或四核CPU--和可能只
一台笔记本电脑，这些天里一个CPU。

115
00:05:32,030 --> 00:05:35,030
但是，台式电脑
和机架像电脑

116
00:05:35,030 --> 00:05:39,000
这可能有不少
更多的CPU，并依次芯。

117
00:05:39,000 --> 00:05:44,180
>> 坦率地说，即使是在我们的Mac和个人电脑的
今天，你并不真的需要双核心

118
00:05:44,180 --> 00:05:46,550
或四核处理器，以检查你的电子邮件。

119
00:05:46,550 --> 00:05:49,090
如果有任何的瓶颈时，
它涉及到使用计算机，

120
00:05:49,090 --> 00:05:51,925
你人很可能是
关于电脑最慢的事情。

121
00:05:51,925 --> 00:05:54,800
而你不会是能够
检查你的电子邮件的速度更快，如果你

122
00:05:54,800 --> 00:05:57,170
有四倍多CPU或内核。

123
00:05:57,170 --> 00:05:59,700
>> 但是，同样是一种
真正的服务器。

124
00:05:59,700 --> 00:06:02,970
一个单一的网站可能不
一定需要一个以上的

125
00:06:02,970 --> 00:06:05,756
CPU或一个核心，人们
里面做小的大脑

126
00:06:05,756 --> 00:06:07,380
所有的思维和处理。

127
00:06:07,380 --> 00:06:10,561
因此，制造商有类似的
开始切片这些资源

128
00:06:10,561 --> 00:06:13,435
所以，也许你的网站得到一份
核心，你的网站得到一个核心，

129
00:06:13,435 --> 00:06:15,290
也许我们正在分享一个这样的核心。

130
00:06:15,290 --> 00:06:16,820
我们也共享磁盘空间。

131
00:06:16,820 --> 00:06:20,000
而且我们也共享RAM，
或随机存取存储器

132
00:06:20,000 --> 00:06:22,520
从之前，其中
还有一个有限的数量。

133
00:06:22,520 --> 00:06:23,420
>> 这是关键。

134
00:06:23,420 --> 00:06:25,960
无论多么昂贵
计算机是，

135
00:06:25,960 --> 00:06:28,440
还是有有限
在它的资源的量。

136
00:06:28,440 --> 00:06:31,360
这样一来，越来越多的你
尝试使用这些资源，

137
00:06:31,360 --> 00:06:32,850
较慢的事情可能会变得。

138
00:06:32,850 --> 00:06:34,646
但为什么？

139
00:06:34,646 --> 00:06:39,352
为什么事情慢下来作为
服务器症状过载？

140
00:06:39,352 --> 00:06:40,060
发生了什么？

141
00:06:40,060 --> 00:06:42,895

142
00:06:42,895 --> 00:06:46,388
>> 听众：[听不清]

143
00:06:46,388 --> 00:06:54,036

144
00:06:54,036 --> 00:06:55,160
DAVID MALAN：是的，没错。

145
00:06:55,160 --> 00:06:57,730
我建议早些时候
RAM是一类型的存储器。

146
00:06:57,730 --> 00:07:00,290
这是易挥发，因此这是
其中，应用程序和数据

147
00:07:00,290 --> 00:07:01,890
正在被使用时，它们被存储。

148
00:07:01,890 --> 00:07:03,990
等于是有
只有有限数量的

149
00:07:03,990 --> 00:07:05,790
事情可以做显然是一次。

150
00:07:05,790 --> 00:07:07,740
而且它的速度也更快，
这是一件好事。

151
00:07:07,740 --> 00:07:09,990
但它也比较昂贵，
这是一件坏事。

152
00:07:09,990 --> 00:07:15,376
而且它也是因此在目前较低
数量比磁盘空间，硬盘

153
00:07:15,376 --> 00:07:16,750
空间，这往往要便宜。

154
00:07:16,750 --> 00:07:18,830
>> 换句话说，就
可能有4兆兆字节

155
00:07:18,830 --> 00:07:20,440
在您的计算机的磁盘空间。

156
00:07:20,440 --> 00:07:24,300
但你可能有4个
千兆字节或64千兆字节，

157
00:07:24,300 --> 00:07:29,180
在大小的一个因素秩序
1000在您的计算机内存少。

158
00:07:29,180 --> 00:07:30,320
那么什么是一台电脑吗？

159
00:07:30,320 --> 00:07:32,236
好吧，假设你
确实有64千兆字节

160
00:07:32,236 --> 00:07:35,110
在这样的服务器，其中RAM
将是相当普遍的，如果不低

161
00:07:35,110 --> 00:07:36,140
这些天。

162
00:07:36,140 --> 00:07:39,220
但是，假设你有这么多
用户做这么多的事情

163
00:07:39,220 --> 00:07:42,480
你那种类型的
需要的存储器65千兆字节

164
00:07:42,480 --> 00:07:44,960
处理所有的那
同时使用？

165
00:07:44,960 --> 00:07:47,580
>> 嗯，你可以只是说，
很抱歉，有些用户数

166
00:07:47,580 --> 00:07:48,840
只是无法访问该网站。

167
00:07:48,840 --> 00:07:51,410
那就是衡量
不得已，肯定。

168
00:07:51,410 --> 00:07:55,570
或者你，作为操作
系统，如Windows或Mac

169
00:07:55,570 --> 00:07:59,480
OS或Linux或Solaris或任何
该服务器上其他操作系统的数量，

170
00:07:59,480 --> 00:08:01,280
可能只是决定，你知道吗？

171
00:08:01,280 --> 00:08:03,780
我只有RAM的64千兆字节。

172
00:08:03,780 --> 00:08:05,440
我有点需要65。

173
00:08:05,440 --> 00:08:06,210
所以，你知道吗？

174
00:08:06,210 --> 00:08:10,030
我要取1千兆字节
值得在RAM中的数据的

175
00:08:10,030 --> 00:08:15,240
这是最近最少访问
，只是将其移动到磁盘临时，

176
00:08:15,240 --> 00:08:19,050
从字面上它从快速复制
存储器的较慢存储器

177
00:08:19,050 --> 00:08:24,000
这样我就可以搞定
65千兆字节需要的内存，

178
00:08:24,000 --> 00:08:25,650
做一些关于它的计算。

179
00:08:25,650 --> 00:08:28,580
然后，当我做这样做，
我只是动议到磁盘上，

180
00:08:28,580 --> 00:08:35,030
移动其他的RAM我暂时放下
在磁盘上回的实际硬件

181
00:08:35,030 --> 00:08:37,280
让我有点多任务。

182
00:08:37,280 --> 00:08:41,190
>> 所以我那种把东西
暂时在这个空间更慢

183
00:08:41,190 --> 00:08:44,159
所以我创造的幻觉
处理每一个人。

184
00:08:44,159 --> 00:08:45,290
但是有一个放缓。

185
00:08:45,290 --> 00:08:45,790
为什么？

186
00:08:45,790 --> 00:08:49,380
那么，这里面的辛苦
磁盘这些天是什么？

187
00:08:49,380 --> 00:08:52,030
相反，是什么使一个硬
开车从RAM不同

188
00:08:52,030 --> 00:08:53,495
作为最好的，你现在知道吗？

189
00:08:53,495 --> 00:08:56,750
>> 听众：[听不清]

190
00:08:56,750 --> 00:08:59,540

191
00:08:59,540 --> 00:09:01,445
>> DAVID MALAN：好的，真的。

192
00:09:01,445 --> 00:09:02,320
听众：[听不清]

193
00:09:02,320 --> 00:09:05,440

194
00:09:05,440 --> 00:09:06,750
>> DAVID MALAN：做的很真实。

195
00:09:06,750 --> 00:09:13,709
这是一个副作用或功能
的事实，即RAM是确实更快。

196
00:09:13,709 --> 00:09:15,750
因此，要
使用它的当前使用。

197
00:09:15,750 --> 00:09:17,290
和盘较慢。

198
00:09:17,290 --> 00:09:19,630
但它是永久性的，或非易失性。

199
00:09:19,630 --> 00:09:21,480
所以，你用它来长期存储。

200
00:09:21,480 --> 00:09:25,160
但在以下方面
实现中，如果我仰望

201
00:09:25,160 --> 00:09:29,297
什么叫做DIMM，双列直插式内存
模块，这是一块RAM

202
00:09:29,297 --> 00:09:30,380
通常可能的样子。

203
00:09:30,380 --> 00:09:35,050
>> 因此，我们Mac--这是一个错误的内部。

204
00:09:35,050 --> 00:09:41,080
我们内部Mac和PC，我们的台式机
电脑将有记忆棒，

205
00:09:41,080 --> 00:09:43,220
你会打电话给他们，
或多根DIMM，或背部的SIMM

206
00:09:43,220 --> 00:09:44,970
在一天中，存储器
看起来是这样的。

207
00:09:44,970 --> 00:09:47,900
我们的笔记本电脑可能有事情，
是第三尺寸或半尺寸。

208
00:09:47,900 --> 00:09:50,066
他们是小了一点，
但相同的idea--小

209
00:09:50,066 --> 00:09:52,110
绿碳化硅块
晶片或塑料

210
00:09:52,110 --> 00:09:56,237
对他们的黑色小芯片有很多
导线互连的一切。

211
00:09:56,237 --> 00:09:58,820
你可能有一大堆
这里面您的计算机。

212
00:09:58,820 --> 00:10:00,903
但外卖这里
它完全电子化。

213
00:10:00,903 --> 00:10:03,130
这里还有电子
流动在此设备上。

214
00:10:03,130 --> 00:10:08,170
相反，如果我们看一下
硬盘驱动器的内部

215
00:10:08,170 --> 00:10:10,760
拉起一张图片
在这里，你会代替

216
00:10:10,760 --> 00:10:16,600
看到这样的事情，
里面确实有电

217
00:10:16,600 --> 00:10:17,950
通过它去大势所趋。

218
00:10:17,950 --> 00:10:20,265
但也跳出
你这个东西？

219
00:10:20,265 --> 00:10:21,140
听众：[听不清]

220
00:10:21,140 --> 00:10:22,710
DAVID MALAN：是的，有
显然运动部件。

221
00:10:22,710 --> 00:10:25,210
这有点像一个旧纪录
播放机或唱机。

222
00:10:25,210 --> 00:10:26,200
而且它几乎是。

223
00:10:26,200 --> 00:10:28,950
它比that--票友一点点
而使用唱机

224
00:10:28,950 --> 00:10:33,150
槽记录中，这其实
采用微小的磁性粒子

225
00:10:33,150 --> 00:10:34,550
我们不能完全看到。

226
00:10:34,550 --> 00:10:38,520
但是，如果一个小磁粉
看起来是这样的，它被认为是1。

227
00:10:38,520 --> 00:10:41,230
而如果它看起来像这样，
南北代替南北，

228
00:10:41,230 --> 00:10:42,252
这可能是一个0。

229
00:10:42,252 --> 00:10:45,460
我们会看到明天我们如何建立
从更有趣的事情。

230
00:10:45,460 --> 00:10:47,590
>> 但是，任何的
得到了实际移动

231
00:10:47,590 --> 00:10:51,010
是肯定要去慢
比光的速度，

232
00:10:51,010 --> 00:10:53,250
这在理论上是
电子流可能在，

233
00:10:53,250 --> 00:10:54,620
尽管现实不完全是。

234
00:10:54,620 --> 00:10:56,900
所以机械devices--慢得多。

235
00:10:56,900 --> 00:10:58,320
但他们更便宜。

236
00:10:58,320 --> 00:11:00,944
而且你能适应这么多
他们的内部更多的数据。

237
00:11:00,944 --> 00:11:03,110
这样的事实，有
存在于世界的东西

238
00:11:03,110 --> 00:11:06,840
称为虚拟存储器，
使用硬盘这样

239
00:11:06,840 --> 00:11:10,160
就好像是RAM
对用户透明，

240
00:11:10,160 --> 00:11:15,320
仅仅通过移动数据
从RAM到硬盘，

241
00:11:15,320 --> 00:11:18,714
然后移动它回来时，你需要
再次，造成经济放缓。

242
00:11:18,714 --> 00:11:21,380
因为你从字面上有
从一个地方到另一个地方复制。

243
00:11:21,380 --> 00:11:25,100
而事情你将其复制并
从实际上比RAM慢

244
00:11:25,100 --> 00:11:26,150
你希望它是。

245
00:11:26,150 --> 00:11:29,030
>> 在另一种解决方案这里 - 
如果你不喜欢慢下来，

246
00:11:29,030 --> 00:11:32,014
和你的虚拟内存
那种被负担过重，

247
00:11:32,014 --> 00:11:33,680
什么是另一种解决这个问题？

248
00:11:33,680 --> 00:11:35,260
>> 听众：[听不清]

249
00:11:35,260 --> 00:11:37,260
DAVID MALAN：嗯，
增加虚拟存储器

250
00:11:37,260 --> 00:11:39,135
先给大家做这在
一个更大的规模。

251
00:11:39,135 --> 00:11:43,540
我们可以处理66千兆字节的价值
内存的需求，或67千兆字节。

252
00:11:43,540 --> 00:11:45,830
但是，假如我不喜欢
这种缓慢下来，其实

253
00:11:45,830 --> 00:11:49,380
我想关闭虚拟
内存如果这甚至有可能，

254
00:11:49,380 --> 00:11:52,350
还有什么我可以扔
这个问题解决了，

255
00:11:52,350 --> 00:11:56,900
在这里我要处理更多用户
和更大的内存需求

256
00:11:56,900 --> 00:11:59,100
比我实际拥有的那一刻？

257
00:11:59,100 --> 00:12:02,600
>> 听众：[听不清]

258
00:12:02,600 --> 00:12:04,800

259
00:12:04,800 --> 00:12:06,140
>> DAVID MALAN：不幸的是没有。

260
00:12:06,140 --> 00:12:09,850
所以CPU和它们的芯
在是一种有限的资源。

261
00:12:09,850 --> 00:12:13,280
还有的在这方面没有模拟。

262
00:12:13,280 --> 00:12:14,990
好问题，但。

263
00:12:14,990 --> 00:12:19,270
所以，仅仅是明确的，也是如此，如果
里面的这台电脑，

264
00:12:19,270 --> 00:12:24,510
让我们说，内存棒，看起来
像this--所以我们就叫这个RAM。

265
00:12:24,510 --> 00:12:27,070
而在这里是硬盘驱动器。

266
00:12:27,070 --> 00:12:30,130
而我就这样画
形象地作为一个小圆圈。

267
00:12:30,130 --> 00:12:33,740
有0和1的两种的
these--数据，我们将其概括为。

268
00:12:33,740 --> 00:12:38,030
>> 并且基本上，如果用户是
运行的应用程序等，

269
00:12:38,030 --> 00:12:46,070
比方说，一个网站，这需要
每个用户的RAM，什么我提议，

270
00:12:46,070 --> 00:12:48,380
通过这件事情的方式
称为虚拟存储器，

271
00:12:48,380 --> 00:12:53,990
是只暂时将
那在这里让我现在

272
00:12:53,990 --> 00:12:57,810
可以移动别人的存储器
那边的要求。

273
00:12:57,810 --> 00:13:00,420
然后当这样做了，
我可以通过复制此背

274
00:13:00,420 --> 00:13:04,550
而这个放在这里，从而移动
我想在那里别的地方

275
00:13:04,550 --> 00:13:05,050
共。

276
00:13:05,050 --> 00:13:07,820
>> 因此，有只是很多
switcheroo，是这里的外卖。

277
00:13:07,820 --> 00:13:12,380
所以，如果你不喜欢这一点，你不
希望把任何东西在硬盘上，

278
00:13:12,380 --> 00:13:16,440
有什么样的明显
商务人士的解决方案

279
00:13:16,440 --> 00:13:19,684
的问题，或在工程师的
解决方案，对于这个问题，太？

280
00:13:19,684 --> 00:13:21,950
>> 听众：[听不清]

281
00:13:21,950 --> 00:13:24,750
>> DAVID MALAN：是的，我的意思是字面上
这个问题投钱。

282
00:13:24,750 --> 00:13:27,541
而实际上，这是一个完美
原因请看一些上级

283
00:13:27,541 --> 00:13:28,870
云计算的讨论。

284
00:13:28,870 --> 00:13:31,390
因为很多是激励
通过财务决策，

285
00:13:31,390 --> 00:13:33,040
甚至不一定技术。

286
00:13:33,040 --> 00:13:37,830
如果RAM 64演出太少了，好了，
为什么不内存128千兆字节？

287
00:13:37,830 --> 00:13:40,440
为什么不给的RAM 256千兆字节？

288
00:13:40,440 --> 00:13:41,732
那么，为什么不呢？

289
00:13:41,732 --> 00:13:42,608
>> 听众：[听不清]

290
00:13:42,608 --> 00:13:44,482
DAVID MALAN：嗯，
花费更多的钱，肯定。

291
00:13:44,482 --> 00:13:46,970
如果你已经有了备用
硬盘空间，有效，

292
00:13:46,970 --> 00:13:51,407
或者等价地，硬盘空间，以便
便宜多了，你还不如用它。

293
00:13:51,407 --> 00:13:54,490
如此反复，有这种权衡的
我们甚至看到了前面今天上午，

294
00:13:54,490 --> 00:13:56,656
那里真的没有
一定是正确的答案，

295
00:13:56,656 --> 00:14:01,360
有只是一个或好或坏的答案
根据你真正关心。

296
00:14:01,360 --> 00:14:04,500
>> 因此，有也是技术的现实。

297
00:14:04,500 --> 00:14:06,870
我不能买电脑，
据我所知，

298
00:14:06,870 --> 00:14:09,490
有一万亿千兆字节
内存现在。

299
00:14:09,490 --> 00:14:11,540
它只是身体不存在。

300
00:14:11,540 --> 00:14:13,240
因此，有一些上限。

301
00:14:13,240 --> 00:14:15,990
但是，如果你曾经逛过连
对于消费者Mac或PC，

302
00:14:15,990 --> 00:14:20,180
太一般有
特点这条曲线

303
00:14:20,180 --> 00:14:23,410
那里可能是一个很好的，
一个更好的和最好的电脑。

304
00:14:23,410 --> 00:14:25,730
>> 而边际收益
你的美元买盘

305
00:14:25,730 --> 00:14:30,227
最好的电脑与
较好的计算机

306
00:14:30,227 --> 00:14:32,560
可能不会差不多高
作为花更多一点钱

307
00:14:32,560 --> 00:14:35,599
并获得较好的计算机
在良好的电脑。

308
00:14:35,599 --> 00:14:38,390
换句话说，你付出一
溢价来获得该行的顶部。

309
00:14:38,390 --> 00:14:40,790
>> 而我们将在看到
云计算的讨论

310
00:14:40,790 --> 00:14:44,940
是什么是很常见的这些
天，什么谷歌等公司

311
00:14:44,940 --> 00:14:50,560
早期普及，并没有支付
并建立真正看中的，价格昂贵

312
00:14:50,560 --> 00:14:53,540
与改装成了电脑
很多很多的一切，

313
00:14:53,540 --> 00:15:00,140
而购买或建造漂亮
适度的计算机，但他们很多，

314
00:15:00,140 --> 00:15:03,280
并利用东西是一般
所谓横向扩展，而不是

315
00:15:03,280 --> 00:15:04,320
垂直缩放。

316
00:15:04,320 --> 00:15:08,115
>> 因此，垂直缩放将意味着得到更多的
RAM，更多的磁盘，更多的东西，

317
00:15:08,115 --> 00:15:10,187
和排序的投资
垂直于硬件

318
00:15:10,187 --> 00:15:12,520
所以你刚开
最好的最好的最好的，

319
00:15:12,520 --> 00:15:13,650
但你为它付出。

320
00:15:13,650 --> 00:15:17,580
水平缩放排序得到
底层的东西，好的模式，

321
00:15:17,580 --> 00:15:19,922
甚至更坏的模式，
但得到很多很多。

322
00:15:19,922 --> 00:15:22,630
但是，一旦你得到很多
them--例如，在这种情况下，

323
00:15:22,630 --> 00:15:27,330
Web服务器，如果这一个服务器
或者一个虚拟主机是不够的，

324
00:15:27,330 --> 00:15:32,310
然后只是直观上，
溶液到负载的这个问题

325
00:15:32,310 --> 00:15:36,460
或您的服务器过载
要么是获得更大的服务器

326
00:15:36,460 --> 00:15:40,770
或者什么，我不是在这里提出
缩放垂直这么说，

327
00:15:40,770 --> 00:15:41,920
会是这样，你知道吗？

328
00:15:41,920 --> 00:15:43,580
刚刚获得它们的第二个。

329
00:15:43,580 --> 00:15:46,560
或者，也许连得三分。

330
00:15:46,560 --> 00:15:48,900
但现在我们已经创建
一个工程问题

331
00:15:48,900 --> 00:15:51,920
本业务性质
或财务决策。

332
00:15:51,920 --> 00:15:54,312
现在，什么是工程问题？

333
00:15:54,312 --> 00:15:56,040
>> 听众：[听不清]

334
00:15:56,040 --> 00:15:59,740
>> DAVID MALAN：是啊，怎么办
您连接它们还有 - 对不起？

335
00:15:59,740 --> 00:16:00,651
>> 听众：[听不清]

336
00:16:00,651 --> 00:16:02,400
DAVID MALAN：对，
因为我还have--

337
00:16:02,400 --> 00:16:07,280
如果我再介绍我到这个画面，
如果这是我的笔记本电脑的地方

338
00:16:07,280 --> 00:16:12,400
互联网，这是现在的上
我和我们谈论了公司，

339
00:16:12,400 --> 00:16:17,960
现在我要弄清楚，到
服务器我发这个特定的用户？

340
00:16:17,960 --> 00:16:25,090
如果有其他用户一样，
这一点，然后这一个在这里，

341
00:16:25,090 --> 00:16:28,850
也许这是用户A，此
是用户B，这是用户C，

342
00:16:28,850 --> 00:16:34,720
这是服务器1，2和3--现在
一个直观的答案可能在这里只是，

343
00:16:34,720 --> 00:16:37,460
我们会发送用户A 1
和B 2和C 3。

344
00:16:37,460 --> 00:16:39,900
我们可以处理3倍多的用户。

345
00:16:39,900 --> 00:16:41,360
>> 但是，这是一个过于简单化。

346
00:16:41,360 --> 00:16:44,480
你如何决定谁送哪里？

347
00:16:44,480 --> 00:16:46,400
所以，让我们尝试通过这个道理。

348
00:16:46,400 --> 00:16:50,110
因此，假设电脑
A，B和C是客户，

349
00:16:50,110 --> 00:16:53,972
和服务器1，2和3是
横向扩展的服务器。

350
00:16:53,972 --> 00:16:55,180
因此，他们是那种相同。

351
00:16:55,180 --> 00:16:57,200
他们都运行相同的软件。

352
00:16:57,200 --> 00:16:59,770
而且他们都可以做同样的事情。

353
00:16:59,770 --> 00:17:01,520
但是，我们之所以有
他们三个人是如此

354
00:17:01,520 --> 00:17:04,710
我们可以处理3
倍一下子很多人。

355
00:17:04,710 --> 00:17:07,960
>> 所以我们知道我们的
之前午餐讨论

356
00:17:07,960 --> 00:17:11,460
有硬件之间
笔记本电脑和服务器。

357
00:17:11,460 --> 00:17:14,920
但是，我们将只是有点一概而论
现在随着互联网或云。

358
00:17:14,920 --> 00:17:18,707
但我们知道，在我的家乡，
可能有一个家用路由器。

359
00:17:18,707 --> 00:17:21,290
服务器附近，有可能是
路由器，DNS服务器，DHCP。

360
00:17:21,290 --> 00:17:24,780
可以有任何
我们希望在这个故事。

361
00:17:24,780 --> 00:17:33,360
>> 那么，我们如何开始来决定，
当用户A去something.com，

362
00:17:33,360 --> 00:17:36,630
哪个服务器来路由用户？

363
00:17:36,630 --> 00:17:39,409
我们怎么可能会开始讲这个故事？

364
00:17:39,409 --> 00:17:40,450
听众：负载均衡？

365
00:17:40,450 --> 00:17:41,120
DAVID MALAN：负载均衡。

366
00:17:41,120 --> 00:17:42,502
你是什​​么意思？

367
00:17:42,502 --> 00:17:44,660
>> 听众：返回
其中最使用率

368
00:17:44,660 --> 00:17:47,472
和哪一个具有
最可用的资源。

369
00:17:47,472 --> 00:17:49,930
DAVID MALAN：OK，所以让我
引入新的硬件类型

370
00:17:49,930 --> 00:17:53,627
我们还没有讨论，这
正是，负载平衡器。

371
00:17:53,627 --> 00:17:54,960
这也可能仅仅是一个服务器。

372
00:17:54,960 --> 00:17:58,130
它可能看起来就像
一个我们看到刚才。

373
00:17:58,130 --> 00:18:01,000
负载平衡器真的是
只是一个软件

374
00:18:01,000 --> 00:18:02,660
您在一个硬件上运行。

375
00:18:02,660 --> 00:18:07,310
>> 或者，你可以支付供应商，如
Citrix或他人，思科或其它。

376
00:18:07,310 --> 00:18:10,465
您可以支付自己的硬件，
其是硬件负载平衡器。

377
00:18:10,465 --> 00:18:12,840
但是，这只是意味着，他们
预先安装的负载平衡

378
00:18:12,840 --> 00:18:15,580
在其硬件和软件
把它卖给你们在一起。

379
00:18:15,580 --> 00:18:18,670
所以我们就绘制成
矩形为我们的宗旨。

380
00:18:18,670 --> 00:18:22,040
>> 怎么现在我实现负载均衡？

381
00:18:22,040 --> 00:18:28,150
换句话说，当用户A想
访问我的网站，他们的要求莫名其妙

382
00:18:28,150 --> 00:18:31,070
或其他，可能是由那些方式
我们前面谈到的路由器，

383
00:18:31,070 --> 00:18:33,750
是要最终达成
这个负载均衡器，那么谁

384
00:18:33,750 --> 00:18:36,210
需要做出路由样决定。

385
00:18:36,210 --> 00:18:38,320
但它的路由进行排序
更高的目标了。

386
00:18:38,320 --> 00:18:40,361
这不只是让
从点A到点

387
00:18:40,361 --> 00:18:44,730
B.这是关于决定哪些
点B是其中them--最好

388
00:18:44,730 --> 00:18:46,660
1，2，或在这种情况下，3。

389
00:18:46,660 --> 00:18:51,000
>> 那么，如何判断是否
去1，2，3→

390
00:18:51,000 --> 00:18:55,180
可能是什么这个黑盒子，所以
说话，做在里面？

391
00:18:55,180 --> 00:18:57,880
这也是在另一示例
抽象的计算机科学。

392
00:18:57,880 --> 00:19:02,410
我从字面上绘制的负载平衡器
在黑色墨水一个黑盒子，里面

393
00:19:02,410 --> 00:19:05,300
这是一些有趣的
逻辑或魔偶，

394
00:19:05,300 --> 00:19:07,840
外面需要来
一个decision-- 1，2或3。

395
00:19:07,840 --> 00:19:12,220
且输入是刚刚A.

396
00:19:12,220 --> 00:19:13,442
>> 听众：[听不清]

397
00:19:13,442 --> 00:19:14,400
DAVID MALAN：对不起？

398
00:19:14,400 --> 00:19:14,770
听众：[听不清]

399
00:19:14,770 --> 00:19:18,310
DAVID MALAN：好吧，我们怎样才能
分类交易类型

400
00:19:18,310 --> 00:19:19,095
这里？

401
00:19:19,095 --> 00:19:23,772
>> 听众：查看网页
与查询数据库。

402
00:19:23,772 --> 00:19:24,980
DAVID MALAN：OK，这是很好的。

403
00:19:24,980 --> 00:19:29,210
因此，也许这个用户A
想要查看网页。

404
00:19:29,210 --> 00:19:32,954
也许它甚至静态内容，
东西很少改变，如果有的话。

405
00:19:32,954 --> 00:19:34,870
这似乎是一个
操作非常简单。

406
00:19:34,870 --> 00:19:38,260
因此，也许我们只是随意，
但合理的，说，

407
00:19:38,260 --> 00:19:42,750
服务器1，他的人生目标是
只提供静态内容，

408
00:19:42,750 --> 00:19:45,150
文件很少，如果有的话，变化。

409
00:19:45,150 --> 00:19:46,870
也许这是在页上的图像。

410
00:19:46,870 --> 00:19:50,180
也许这是网页上的文字或
其他类似种类的无趣的事情，

411
00:19:50,180 --> 00:19:52,460
没有交易，没有什么动态。

412
00:19:52,460 --> 00:19:57,000
>> 相比之下，如果用户A正在检查
他的或她的购物车的那

413
00:19:57,000 --> 00:20:00,972
需要一个数据库，某个地方来存储
并记住，交易，以及

414
00:20:00,972 --> 00:20:02,680
也许这要求
应到服务器2。

415
00:20:02,680 --> 00:20:03,610
所以这是很好的。

416
00:20:03,610 --> 00:20:07,010
因此，我们可以根据负载平衡
的请求的类型。

417
00:20:07,010 --> 00:20:08,278
我们怎么可以这样做？

418
00:20:08,278 --> 00:20:13,690

419
00:20:13,690 --> 00:20:14,686
还有别的 - 

420
00:20:14,686 --> 00:20:17,382
>> 听众：基于服务器的
利用率和容量。

421
00:20:17,382 --> 00:20:18,340
DAVID MALAN：对，确定。

422
00:20:18,340 --> 00:20:19,950
所以你提到前，卡里姆。

423
00:20:19,950 --> 00:20:26,850
因此，如果我们提供什么样的一些输入
在[听不清]服务器1，2中，

424
00:20:26,850 --> 00:20:32,070
和3至这个负载平衡器，以便
他们只是不断地通知

425
00:20:32,070 --> 00:20:36,420
负载平衡器他们的状态是什么？

426
00:20:36,420 --> 00:20:39,842
就像，嘿嘿，负载均衡，
我在50％的利用率。

427
00:20:39,842 --> 00:20:41,550
换句话说，我有
一半的用户

428
00:20:41,550 --> 00:20:43,520
因为其实我可以马上处理。

429
00:20:43,520 --> 00:20:45,480
嘿，负载平衡器，我
在100％的利用率。

430
00:20:45,480 --> 00:20:47,929
嘿，负载均衡，0％的利用率。

431
00:20:47,929 --> 00:20:49,970
负载平衡器，如果它是
设计的方式，

432
00:20:49,970 --> 00:20:53,990
可以在这些意见
作为输入，它可以再

433
00:20:53,990 --> 00:20:57,420
决定，哦，2号为100％。

434
00:20:57,420 --> 00:21:01,440
让我不发送将来的请求给他
比其他用户已连接。

435
00:21:01,440 --> 00:21:02,360
这家伙是0％。

436
00:21:02,360 --> 00:21:03,940
我们大量的流量发送给他。

437
00:21:03,940 --> 00:21:05,480
这家伙说，他是在50％。

438
00:21:05,480 --> 00:21:08,080
让我们把一些交通给他。

439
00:21:08,080 --> 00:21:12,012
>> 因此，这将是一种成分，即
我们可以采取负荷考虑。

440
00:21:12,012 --> 00:21:13,470
而且它会随时间而改变。

441
00:21:13,470 --> 00:21:14,678
因此，决定将发生变化。

442
00:21:14,678 --> 00:21:17,350
所以这是一个很好的技术，
一个的常用。

443
00:21:17,350 --> 00:21:18,410
还有什么可以做什么？

444
00:21:18,410 --> 00:21:20,380
而且，我们实际上只是总结在这里。

445
00:21:20,380 --> 00:21:29,510
所以决定在这里可能是
按业务类型，我会打电话给它。

446
00:21:29,510 --> 00:21:32,220
它可以基于负载。

447
00:21:32,220 --> 00:21:34,692
让我们来看看，如果我们不能
想出一些其他的。

448
00:21:34,692 --> 00:21:35,934
>> 听众：[听不清]

449
00:21:35,934 --> 00:21:36,850
DAVID MALAN：位置。

450
00:21:36,850 --> 00:21:37,724
所以这是一个很好的一个。

451
00:21:37,724 --> 00:21:40,880
因此location--怎么可能你
利用这些信息？

452
00:21:40,880 --> 00:21:44,317
>> 听众：[听不清]

453
00:21:44,317 --> 00:21:54,140

454
00:21:54,140 --> 00:21:57,040
>> DAVID MALAN：哦，那是很好的。

455
00:21:57,040 --> 00:21:59,450
大约多少毫秒
它会通过减少

456
00:21:59,450 --> 00:22:02,466
基于我们所看到的这
早上，你会说什么？

457
00:22:02,466 --> 00:22:04,330
>> 听众：[听不清]

458
00:22:04,330 --> 00:22:06,550
>> DAVID MALAN：嗯，根据
在跟踪路线

459
00:22:06,550 --> 00:22:09,070
我们前面看到的，这仅仅是
东西粗略衡量，

460
00:22:09,070 --> 00:22:11,800
至少需要多长时间
数据从A到B

461
00:22:11,800 --> 00:22:16,140
感觉像什么地方是什么，
像74毫秒，给予或采取？

462
00:22:16,140 --> 00:22:19,200
然后什么100加，
200多可能是在国外。

463
00:22:19,200 --> 00:22:22,110
所以基于这样独自一人，
似乎合理的假设

464
00:22:22,110 --> 00:22:25,310
对于在美国的用户
访问欧洲服务器

465
00:22:25,310 --> 00:22:28,900
可能需要两次或三次
长，即使以毫秒为单位

466
00:22:28,900 --> 00:22:31,280
比它可能需要如果这
服务器在这里设

467
00:22:31,280 --> 00:22:33,370
地理上，反之亦然。

468
00:22:33,370 --> 00:22:35,120
所以，当我提出
早些时候，尤其是

469
00:22:35,120 --> 00:22:37,880
一旦你越过这200毫秒
门槛，给予或采取，

470
00:22:37,880 --> 00:22:39,210
人类也开始注意到。

471
00:22:39,210 --> 00:22:42,960
和路由跟踪只是
假设原始的，无趣的数据。

472
00:22:42,960 --> 00:22:46,570
当你有一个网站，你必须
得到了用户下载图像或电影

473
00:22:46,570 --> 00:22:49,150
文件，大量的文字，
后续的请求。

474
00:22:49,150 --> 00:22:53,116
我们参观的时候我们看到，究竟是什么
它，Facebook或亚马逊更早，

475
00:22:53,116 --> 00:22:55,490
还有一大堆的东西
需要被下载。

476
00:22:55,490 --> 00:22:56,573
所以，这将增加。

477
00:22:56,573 --> 00:23:00,259
所以多秒的可能
并非不合理。

478
00:23:00,259 --> 00:23:01,800
那么好，地理是一种成分。

479
00:23:01,800 --> 00:23:05,920
所以事实上公司，如
Akamai的，如果你听说过他们，

480
00:23:05,920 --> 00:23:10,000
或其他人很早就采取了
地理考虑。

481
00:23:10,000 --> 00:23:14,170
而事实证明，通过的性质
IP地址，我的笔记本电脑的IP地址，

482
00:23:14,170 --> 00:23:18,277
可以推断，具有一定的概率，
你在哪里在世界上。

483
00:23:18,277 --> 00:23:20,110
而事实上，有
第三方服务您

484
00:23:20,110 --> 00:23:24,480
可以付谁维护数据库
IP地址和地区的

485
00:23:24,480 --> 00:23:28,660
与高可信度会
真当记者问，在世界何处

486
00:23:28,660 --> 00:23:30,090
这是IP地址？

487
00:23:30,090 --> 00:23:32,130
>> 所以其实什么
其他公司使用它？

488
00:23:32,130 --> 00:23:35,900
如果你有葫芦或Netflix的，如果
你曾经出国旅游，

489
00:23:35,900 --> 00:23:38,640
和您尝试观看的东西
葫芦，你是不是在美国，

490
00:23:38,640 --> 00:23:41,280
您可能会看到一条消息
说，不是在美国。

491
00:23:41,280 --> 00:23:43,208
对不起，您无法浏览该内容。

492
00:23:43,208 --> 00:23:44,420
>> 听众：[听不清]

493
00:23:44,420 --> 00:23:46,020
>> DAVID MALAN：哦，真的吗？

494
00:23:46,020 --> 00:23:48,480
但是，是的，所以实际上这是
一个完美的应用

495
00:23:48,480 --> 00:23:51,060
的东西很技术
一个实际的问题。

496
00:23:51,060 --> 00:23:55,100
如果从有到VPN
欧洲或亚洲或任何

497
00:23:55,100 --> 00:23:57,950
在世界上你的企业
总部设在纽约

498
00:23:57,950 --> 00:24:00,670
或者无论你在哪里，你
要创建的外观

499
00:24:00,670 --> 00:24:03,580
外网站
你实际上是在纽约，

500
00:24:03,580 --> 00:24:05,660
即使你
身体很远。

501
00:24:05,660 --> 00:24:08,057
>> 现在，你的用户要
知道你显然走。

502
00:24:08,057 --> 00:24:11,140
但你也要去感受它，因为
这些额外的毫秒。

503
00:24:11,140 --> 00:24:14,510
额外的距离和
这是发生在VPN加密

504
00:24:14,510 --> 00:24:15,760
是要慢下来。

505
00:24:15,760 --> 00:24:17,680
所以它可能会或可能不会
是一个很好的经验。

506
00:24:17,680 --> 00:24:21,050
但Hulu和Netflix公司会看到
你坐着的地方在纽约，

507
00:24:21,050 --> 00:24:23,817
因为你已经清楚地收集。

508
00:24:23,817 --> 00:24:25,150
什么是完美的解决了这一点。

509
00:24:25,150 --> 00:24:28,490
>> 好吧，地理学是一项决定。

510
00:24:28,490 --> 00:24:32,290
我们还有什么可以用它来决定如何
从A，B和C路由流量

511
00:24:32,290 --> 00:24:37,040
为1，2，和3中，再次，把
对工程的帽子？

512
00:24:37,040 --> 00:24:38,850
这听起来很复杂。

513
00:24:38,850 --> 00:24:41,490
呃，我甚至不知道在哪里
开始实施的。

514
00:24:41,490 --> 00:24:44,450
给我的东西，更简单。

515
00:24:44,450 --> 00:24:48,160
什么是最简单的方法
做出这个决定？

516
00:24:48,160 --> 00:24:49,840
>> 听众：是服务器可用？

517
00:24:49,840 --> 00:24:51,650
>> DAVID MALAN：是服务器可用？

518
00:24:51,650 --> 00:24:53,970
所以不坏。

519
00:24:53,970 --> 00:24:54,470
那很好。

520
00:24:54,470 --> 00:24:56,260
这就是那种负载的nuancing的。

521
00:24:56,260 --> 00:24:58,070
因此，让我们记住这负载类别。

522
00:24:58,070 --> 00:25:00,010
如果你用，我只是
去那里的数据发送。

523
00:25:00,010 --> 00:25:01,343
但是，这可能很快适得其反。

524
00:25:01,343 --> 00:25:05,720
因为如果我用这个逻辑，如果我
总是问1，你就上你，

525
00:25:05,720 --> 00:25:08,970
是你，如果答案是肯定的始终，
我要去送流量的100％

526
00:25:08,970 --> 00:25:11,060
他说，0％到其他人。

527
00:25:11,060 --> 00:25:14,430
在某些时候，我们会打
经济放慢或网站无法使用。

528
00:25:14,430 --> 00:25:17,630
那么，有什么比略好
这不过还是很简单

529
00:25:17,630 --> 00:25:22,412
，几乎没有聪明的采取一切
这些额外的数据考虑在内？

530
00:25:22,412 --> 00:25:23,992
>> 听众：每台服务器的成本。

531
00:25:23,992 --> 00:25:25,200
DAVID MALAN：每台服务器的成本。

532
00:25:25,200 --> 00:25:28,010
好了，让我折腾了
在负载类，太。

533
00:25:28,010 --> 00:25:30,790
因为你会发现在
一个公司，太...如果你

534
00:25:30,790 --> 00:25:32,790
升级服务器
随着时间的推移或购买更多，

535
00:25:32,790 --> 00:25:36,242
你可能不能够得到完全
相同版本的硬件。

536
00:25:36,242 --> 00:25:37,450
因为它属于过时。

537
00:25:37,450 --> 00:25:38,491
你可以不买它了。

538
00:25:38,491 --> 00:25:39,360
价格的变化。

539
00:25:39,360 --> 00:25:42,500
>> 所以，你可能有不同的服务器
在群集中，可以这么说。

540
00:25:42,500 --> 00:25:43,890
这是完全正常。

541
00:25:43,890 --> 00:25:47,100
但是，明年的硬件
可能快两倍，

542
00:25:47,100 --> 00:25:49,390
两倍，能够为今年的。

543
00:25:49,390 --> 00:25:51,500
因此，我们就可以抛弃
到负载类别。

544
00:25:51,500 --> 00:25:54,260
1之间的反馈回路，
2，和3中的负载平衡器

545
00:25:54,260 --> 00:25:57,650
当然可以告诉你，
哎，我在50％的容量。

546
00:25:57,650 --> 00:26:00,100
不过顺便说一句，我也
有两倍多的内核。

547
00:26:00,100 --> 00:26:02,319
使用这些信息。

548
00:26:02,319 --> 00:26:05,110
即使simpler--，这是怎么回事
要在计算机科学的一个主题。

549
00:26:05,110 --> 00:26:08,990
如果有疑问，或者您想要一个简单的
解决方案通常运作良好

550
00:26:08,990 --> 00:26:12,730
随着时间的推移，不要选择相同
服务器中的所有时间，但choose--

551
00:26:12,730 --> 00:26:14,039
>> 听众：一个随机？

552
00:26:14,039 --> 00:26:15,330
DAVID MALAN：--a随机服务器。

553
00:26:15,330 --> 00:26:16,780
是的，选择一个或其他。

554
00:26:16,780 --> 00:26:21,160
所以随意性实际上是
这个非常强大的成分

555
00:26:21,160 --> 00:26:23,170
在计算机科学，
在工程更多

556
00:26:23,170 --> 00:26:27,160
一般，尤其是当你想
做一个简单的决定迅速

557
00:26:27,160 --> 00:26:30,480
没有与所有它复杂
这些非常聪明，也

558
00:26:30,480 --> 00:26:34,330
很巧，解决方案需要
所有的更多的工程，所有的

559
00:26:34,330 --> 00:26:36,220
在更多的思考，当
说真的，我为什么不

560
00:26:36,220 --> 00:26:39,200
正中下怀抛硬币，或
三个这种情况下片面硬币，

561
00:26:39,200 --> 00:26:41,690
并决定是否去1，2，3→

562
00:26:41,690 --> 00:26:45,610
>> 这可能概率事与愿违，
但是很像赔率

563
00:26:45,610 --> 00:26:48,860
再次翻转头和
再，再而三

564
00:26:48,860 --> 00:26:53,870
一次又一次是可能的
reality--超好，不太可能。

565
00:26:53,870 --> 00:26:58,170
所以，随着时间的推移，赔率是
只是向用户发送随机

566
00:26:58,170 --> 00:27:00,660
为1，2和3是要
制定出完美的罚款。

567
00:27:00,660 --> 00:27:03,380
这是一种技术
一般被称为循环赛。

568
00:27:03,380 --> 00:27:05,160
>> 或者实际上，这不是循环赛。

569
00:27:05,160 --> 00:27:06,980
这将是随机的方法。

570
00:27:06,980 --> 00:27:09,250
如果你想成为连
比简单一些，

571
00:27:09,250 --> 00:27:12,820
循环赛会，第一人称去
为1，第二个人2，第三人

572
00:27:12,820 --> 00:27:16,056
为3，第四人1。

573
00:27:16,056 --> 00:27:17,430
就在这里循环赛。

574
00:27:17,430 --> 00:27:19,580
你刚才那种到处在一个周期。

575
00:27:19,580 --> 00:27:21,300
>> 现在，你应该聪明一点。

576
00:27:21,300 --> 00:27:26,490
你不应该盲目地发送用户
服务器排名第一的，如果有什么情况？

577
00:27:26,490 --> 00:27:30,060

578
00:27:30,060 --> 00:27:32,870
如果是在最大容量，或
它只是不再响应。

579
00:27:32,870 --> 00:27:35,270
所以，理想情况下，你想要一些
一种反馈回路。

580
00:27:35,270 --> 00:27:38,040
否则，你只是把所有
你的用户到了穷途末路。

581
00:27:38,040 --> 00:27:40,790
但是，可以考虑到，也。

582
00:27:40,790 --> 00:27:46,520
>> 所以不要下欣赏价值
只是随机性，这是相当频繁

583
00:27:46,520 --> 00:27:48,970
解决这类问题。

584
00:27:48,970 --> 00:27:51,580
我们会写下循环赛。

585
00:27:51,580 --> 00:27:55,090
那么，如何做一些公司实施
循环赛或随机性

586
00:27:55,090 --> 00:27:56,840
或者这些决定的？

587
00:27:56,840 --> 00:28:01,840
好可惜，他们
做这样的事情。

588
00:28:01,840 --> 00:28:03,660
让我拉了另一个快速截图。

589
00:28:03,660 --> 00:28:13,052

590
00:28:13,052 --> 00:28:14,470
>> 其实，让我们做两。

591
00:28:14,470 --> 00:28:17,420

592
00:28:17,420 --> 00:28:21,370
我不知道为什么我们
让所有的这些菜。

593
00:28:21,370 --> 00:28:22,280
这是很奇怪的。

594
00:28:22,280 --> 00:28:31,714

595
00:28:31,714 --> 00:28:33,630
好吧，我真的
要的是一个屏幕截图。

596
00:28:33,630 --> 00:28:36,990

597
00:28:36,990 --> 00:28:40,100
这很奇怪。

598
00:28:40,100 --> 00:28:42,930
好吧，这样我就可以欺骗这一点。

599
00:28:42,930 --> 00:28:46,080
我不知道有多少远
我想继续滚动。

600
00:28:46,080 --> 00:28:53,220
>> 所以非常普遍，你会发现自己
在像www.2.acme.com一个地址，

601
00:28:53,220 --> 00:28:56,030
也许www.3或4或5。

602
00:28:56,030 --> 00:28:57,424
并密切关注这一点。

603
00:28:57,424 --> 00:28:58,590
你没有看到它经常。

604
00:28:58,590 --> 00:29:02,621
但是，当你这样做，它那种容易
更大，年纪大了，stodgier公司

605
00:29:02,621 --> 00:29:05,370
该技术真的不
似乎知道他们在做什么。

606
00:29:05,370 --> 00:29:08,150
你瞧，这对高科技公司
有时，老的。

607
00:29:08,150 --> 00:29:09,270
>> 所以他们在做什么？

608
00:29:09,270 --> 00:29:11,890
他们是如何实施
负载平衡，这似乎？

609
00:29:11,890 --> 00:29:15,986
如果你发现自己的
用户打字www.something.com，

610
00:29:15,986 --> 00:29:19,760
突然你在
www.2.something.com，

611
00:29:19,760 --> 00:29:21,866
什么都有自己的负载
平衡器大概做了什么？

612
00:29:21,866 --> 00:29:22,741
听众：[听不清]

613
00:29:22,741 --> 00:29:28,210

614
00:29:28,210 --> 00:29:31,079
>> DAVID MALAN：是的，所以
负载平衡器可以认为是

615
00:29:31,079 --> 00:29:33,870
使得基于一个一个决定
这些决策processes--

616
00:29:33,870 --> 00:29:35,210
其实并不重要哪。

617
00:29:35,210 --> 00:29:38,650
但是，就像我画的
在黑板上的数字在这里，

618
00:29:38,650 --> 00:29:40,650
服务器不只是
称为1，2，和3。

619
00:29:40,650 --> 00:29:43,870
他们大概叫
WWW1，WWW2，www3。

620
00:29:43,870 --> 00:29:47,200
而事实证明那里面
HTTP请求是此功能。

621
00:29:47,200 --> 00:29:48,950
而我要去
模拟这种如下。

622
00:29:48,950 --> 00:29:53,230
>> 我要去开拓相同
开发者网络选项卡，只是之前

623
00:29:53,230 --> 00:29:55,560
所以我们可以看到这是怎么回事
上罩下方。

624
00:29:55,560 --> 00:29:57,130
我要清除屏幕。

625
00:29:57,130 --> 00:30:03,420
而我会去，让我们
说，http://harvard.edu。

626
00:30:03,420 --> 00:30:06,560
现在不管是什么
商业上的原因，哈佛

627
00:30:06,560 --> 00:30:08,930
已经决定，许多人一样，
许多其他网站，

628
00:30:08,930 --> 00:30:12,712
标准化其
网站上www.harvard.edu

629
00:30:12,712 --> 00:30:14,420
出于技术
和市场的原因。

630
00:30:14,420 --> 00:30:16,326
这只是一种在
时尚有WWW。

631
00:30:16,326 --> 00:30:20,500
>> 因此，在哈佛的服务器
以某种方式将用户重定向，

632
00:30:20,500 --> 00:30:23,830
就像我一直说，从
一个网址到另一个。

633
00:30:23,830 --> 00:30:24,670
这是如何工作的？

634
00:30:24,670 --> 00:30:26,740
好吧，让我先走，然后按Enter。

635
00:30:26,740 --> 00:30:30,830
的确很快注意到网址
改为www.harvard.edu。

636
00:30:30,830 --> 00:30:35,560
让我们回来了，这我滚动
历史和点击这个调试

637
00:30:35,560 --> 00:30:37,650
诊断信息，如果你愿意。

638
00:30:37,650 --> 00:30:39,170
让我看看我的要求。

639
00:30:39,170 --> 00:30:41,020
>> 因此，这里是我提出的要求。

640
00:30:41,020 --> 00:30:44,870
并注意它与实物相符
的要求我之前所做的Facebook。

641
00:30:44,870 --> 00:30:48,010
但是要注意的响应。

642
00:30:48,010 --> 00:30:50,430
有什么不同
响应这个时间呢？

643
00:30:50,430 --> 00:30:51,890
>> 听众：[听不清]

644
00:30:51,890 --> 00:30:54,290
>> DAVID MALAN：是的，所以它不是一个200 OK。

645
00:30:54,290 --> 00:30:56,130
这不是一个404未找​​到。

646
00:30:56,130 --> 00:31:00,150
这是一个301永久移动，这
是那种说法的一种有趣的方式，

647
00:31:00,150 --> 00:31:05,270
哈佛调升和感动
别处www.harvard.edu。

648
00:31:05,270 --> 00:31:08,220
301意味着
这是一个重定向。

649
00:31:08,220 --> 00:31:12,812
并应该在哪里用户
显然被重定向？

650
00:31:12,812 --> 00:31:15,520
还有一个额外的珍闻
那个信封里面的信息。

651
00:31:15,520 --> 00:31:19,650
而这些线路将现
开始调用一个HTTP头。

652
00:31:19,650 --> 00:31:23,620
标题仅仅是一个键值
pair--东西结肠东西。

653
00:31:23,620 --> 00:31:24,850
这是一条信息。

654
00:31:24,850 --> 00:31:27,131
应该在哪里新
显然的位置呢？

655
00:31:27,131 --> 00:31:31,120

656
00:31:31,120 --> 00:31:33,692
通知的最后一行
所有这些报头中。

657
00:31:33,692 --> 00:31:34,940
>> 听众：[听不清]

658
00:31:34,940 --> 00:31:37,148
>> DAVID MALAN：是啊，所以有
附加信息。

659
00:31:37,148 --> 00:31:40,120
我已经强调的第一线
说301永久移动。

660
00:31:40,120 --> 00:31:42,820
好了，在那里有它感动？

661
00:31:42,820 --> 00:31:45,340
最后line--和他们不这样做
必须是在这个顺序。

662
00:31:45,340 --> 00:31:47,020
它可以是随机的。

663
00:31:47,020 --> 00:31:52,120
结肠定位手段，嘿嘿
浏览器访问这个URL来代替。

664
00:31:52,120 --> 00:31:55,180
>> 所以，浏览器理解HTTP重定向。

665
00:31:55,180 --> 00:31:57,540
这是一个非常，非常
弹跳的常见方式

666
00:31:57,540 --> 00:31:59,680
从一个地方到另一个用户。

667
00:31:59,680 --> 00:32:02,660
举例来说，如果你曾经尝试
访问一个网站，你不

668
00:32:02,660 --> 00:32:06,360
登录，你可能会突然发现
在自己一个新的URL被完全

669
00:32:06,360 --> 00:32:07,530
提示登录。

670
00:32:07,530 --> 00:32:08,400
>> 这是如何工作的？

671
00:32:08,400 --> 00:32:10,920
该服务器可能发送301。

672
00:32:10,920 --> 00:32:14,510
还有其他号码，如
302，在意义上有些不同，

673
00:32:14,510 --> 00:32:16,490
那送你到另一个URL。

674
00:32:16,490 --> 00:32:18,770
然后服务器，
一旦你登录，

675
00:32:18,770 --> 00:32:22,000
会送你回哪里
你真的打算。

676
00:32:22,000 --> 00:32:27,700
>> 还等什么，然后，是很差
设计的网站在做什么？

677
00:32:27,700 --> 00:32:31,340
当您访问
www.acme.com，他们只是

678
00:32:31,340 --> 00:32:35,490
碰巧命名他们的服务器
WWW1，WWW2，www3，等等，

679
00:32:35,490 --> 00:32:39,100
他们是非常simply--
这是公平的，但很

680
00:32:39,100 --> 00:32:46,080
诸如此类的foolishly--重定向你
实际上一个不同名称的服务器。

681
00:32:46,080 --> 00:32:48,650
和它的作品完美的罚款。

682
00:32:48,650 --> 00:32:49,930
这是不错的和容易。

683
00:32:49,930 --> 00:32:52,200
>> 我们已经看到了它会怎样
引擎盖下完成

684
00:32:52,200 --> 00:32:53,490
在虚拟包络线。

685
00:32:53,490 --> 00:32:56,450
但是，为什么这是一个可以说是
坏工程的决定吗？

686
00:32:56,450 --> 00:33:00,345
我为什么要那种居高临下
对这个特殊工程

687
00:33:00,345 --> 00:33:00,845
进场？

688
00:33:00,845 --> 00:33:06,420

689
00:33:06,420 --> 00:33:07,850
争论为什么这是不好的。

690
00:33:07,850 --> 00:33:09,375
本？

691
00:33:09,375 --> 00:33:10,250
听众：[听不清]

692
00:33:10,250 --> 00:33:12,864

693
00:33:12,864 --> 00:33:16,030
DAVID MALAN：每个服务器将不得不
有网站的副本。

694
00:33:16,030 --> 00:33:16,738
我与该确定。

695
00:33:16,738 --> 00:33:19,490
而事实上，这就是我什么
假设这个整个故事，

696
00:33:19,490 --> 00:33:22,104
因为如果我们wanted--好
实际上，除了丹的前面

697
00:33:22,104 --> 00:33:25,270
建议，在那里，如果你有不同的
服务器做不同的事情，然后

698
00:33:25,270 --> 00:33:27,740
也许他们实际上可能
功能上做不同的事情。

699
00:33:27,740 --> 00:33:30,698
>> 但即使这样，在某些时候，您的
数据库是要超载。

700
00:33:30,698 --> 00:33:33,030
你的静态资产的服务器
将会超载。

701
00:33:33,030 --> 00:33:34,850
所以，在某些时候，我们
回到这个故事，在那里我们

702
00:33:34,850 --> 00:33:36,475
需要的一样的东西多个副本。

703
00:33:36,475 --> 00:33:37,395
因此，我与该确定。

704
00:33:37,395 --> 00:33:38,270
听众：[听不清]

705
00:33:38,270 --> 00:33:42,340

706
00:33:42,340 --> 00:33:45,350
>> DAVID MALAN：OK，所以有些页面
可能是不成比例的流行。

707
00:33:45,350 --> 00:33:50,460
等行了吧上的一个地址
不一定是最好的事情。

708
00:33:50,460 --> 00:33:51,110
[听不清]？

709
00:33:51,110 --> 00:33:51,985
>> 听众：[听不清]

710
00:33:51,985 --> 00:33:54,770

711
00:33:54,770 --> 00:33:57,623
>> DAVID MALAN：你是什么意思？

712
00:33:57,623 --> 00:33:58,498
听众：[听不清]

713
00:33:58,498 --> 00:34:03,820

714
00:34:03,820 --> 00:34:05,072
>> DAVID MALAN：是的，没错。

715
00:34:05,072 --> 00:34:07,280
所以，你不想要
一定have--你肯定

716
00:34:07,280 --> 00:34:11,370
不想让你的用户
在WWW1或www2手动输入。

717
00:34:11,370 --> 00:34:14,550
从品牌的角度来看，
只是看起来有点可笑。

718
00:34:14,550 --> 00:34:17,340
如果你只是想排序的
简洁，优雅的经验，

719
00:34:17,340 --> 00:34:20,364
有这些类型的随机
编号的网址确实是不好的。

720
00:34:20,364 --> 00:34:22,780
因为这时用户肯定
要复制并粘贴

721
00:34:22,780 --> 00:34:24,449
到电子邮件或即时消息。

722
00:34:24,449 --> 00:34:25,659
>> 现在，他们正在传播。

723
00:34:25,659 --> 00:34:28,600
现在你那种混淆你的
少技术的观众，谁认为

724
00:34:28,600 --> 00:34:32,239
您的网络地址是www2.something.com。

725
00:34:32,239 --> 00:34:35,434
有没有令人信服的语义来表示。

726
00:34:35,434 --> 00:34:38,100
这恰好是一个潜在的
技术细节，你已经

727
00:34:38,100 --> 00:34:40,190
编号为您的服务器以这种方式。

728
00:34:40,190 --> 00:34:45,760
>> 而更糟糕的是，如果，例如，
也许到了圣诞节的时候

729
00:34:45,760 --> 00:34:50,090
生意兴隆真的，
你已经通过了www99 WWW1，

730
00:34:50,090 --> 00:34:53,530
但在一月和二月和
开始，关闭那些一半

731
00:34:53,530 --> 00:34:56,440
所以你只能通过www50有WWW1？

732
00:34:56,440 --> 00:35:01,963
现在所寓意为
非常合理的业务决策？

733
00:35:01,963 --> 00:35:02,838
听众：[听不清]

734
00:35:02,838 --> 00:35:05,628

735
00:35:05,628 --> 00:35:07,752
DAVID MALAN：您需要
还是管理所有这些的。

736
00:35:07,752 --> 00:35:10,515
听众：[听不清]

737
00:35:10,515 --> 00:35:11,390
DAVID MALAN：没错。

738
00:35:11,390 --> 00:35:12,681
这是一种渔获那里。

739
00:35:12,681 --> 00:35:16,800
如果您的客户在习惯
书签的东西，向他们发送电子邮件，只

740
00:35:16,800 --> 00:35:19,351
保存URL的地方，或
如果它只是在他们的汽车

741
00:35:19,351 --> 00:35:22,350
完成他们的浏览器所以他们
不是真的故意键入它，

742
00:35:22,350 --> 00:35:25,560
它只是发生的事情，搞不好，
11个月的一年中

743
00:35:25,560 --> 00:35:27,190
有效，达到了死胡同。

744
00:35:27,190 --> 00:35:30,100
而只有最精明
用户将要实现，

745
00:35:30,100 --> 00:35:32,040
也许我应该手动
删除这个号码。

746
00:35:32,040 --> 00:35:35,610
我的意思是，它只是不会发生
拥有众多用户，因此对企业不利，

747
00:35:35,610 --> 00:35:37,750
坏实施工程明智的。

748
00:35:37,750 --> 00:35:40,230
>> 所以幸运的是，它甚至没有必要的。

749
00:35:40,230 --> 00:35:43,120
事实证明，什么
负载均衡器可以做

750
00:35:43,120 --> 00:35:48,130
是不是说，当A
使得request--哎A，去1。

751
00:35:48,130 --> 00:35:50,280
换言之，代替
发送该重定向

752
00:35:50,280 --> 00:35:53,540
这样的步骤之一，这
过程是这里的旅途中，

753
00:35:53,540 --> 00:35:55,280
他再叫到别处去。

754
00:35:55,280 --> 00:35:57,530
所以，一步三是，他去别的地方。

755
00:35:57,530 --> 00:36:04,600
>> 您可以代替继续路线，
继续使用这个词，所有的数据

756
00:36:04,600 --> 00:36:10,590
通过负载平衡器，以便他
从未触点1，2或3直接。

757
00:36:10,590 --> 00:36:15,150
所有的流量并获得“全军覆没”
通过负载均衡器本身。

758
00:36:15,150 --> 00:36:17,524
所以现在我们的排序
故意模糊线

759
00:36:17,524 --> 00:36:18,690
这些不同的设备之间。

760
00:36:18,690 --> 00:36:20,930
负载均衡器可以路由的数据。

761
00:36:20,930 --> 00:36:22,435
它只是它具有这样的功能。

762
00:36:22,435 --> 00:36:25,420
>> 这样一个负载平衡器也一样，它的
一个软件，真的。

763
00:36:25,420 --> 00:36:27,130
和路由器是一个软件。

764
00:36:27,130 --> 00:36:29,660
你绝对可以有
两个软件内

765
00:36:29,660 --> 00:36:34,000
在一台物理计算机，以便负载的
平衡器可以做这些事情多。

766
00:36:34,000 --> 00:36:36,130
>> 因此，有另外一种方法
要做到这一点，这实际上

767
00:36:36,130 --> 00:36:39,670
追溯到排序第一的原则
DNS，这是我们谈到的

768
00:36:39,670 --> 00:36:40,230
休息前。

769
00:36:40,230 --> 00:36:41,634
DNS是域名系统。

770
00:36:41,634 --> 00:36:43,550
记住，你可以
问一个DNS服务器，什么是

771
00:36:43,550 --> 00:36:46,460
的IP地址
google.com，facebook.com？

772
00:36:46,460 --> 00:36:48,250
>> 我们可以真正做到这一点。

773
00:36:48,250 --> 00:36:51,940
我们没有使用较早的工具是
一个只是为访问，

774
00:36:51,940 --> 00:36:55,510
所谓NSLOOKUP，对于名称服务器查找。

775
00:36:55,510 --> 00:36:57,410
而我只是要输入facebook.com。

776
00:36:57,410 --> 00:37:02,500
而我看​​到Facebook的IP
地址显然这。

777
00:37:02,500 --> 00:37:05,520
让我继续和复制
如此，去一个浏览器，

778
00:37:05,520 --> 00:37:11,690
访问http：//和
IP地址，然后按Enter。

779
00:37:11,690 --> 00:37:14,140
果然，这似乎工作。

780
00:37:14,140 --> 00:37:18,610
>> 现在向后工作，究竟是什么
虚拟信封中

781
00:37:18,610 --> 00:37:25,454
，Facebook的回应时，
我访问的IP直接解决？

782
00:37:25,454 --> 00:37:26,745
由于通知，我现在在哪里？

783
00:37:26,745 --> 00:37:29,250

784
00:37:29,250 --> 00:37:32,484
我现在在哪里，地址？

785
00:37:32,484 --> 00:37:33,450
>> 听众：[听不清]

786
00:37:33,450 --> 00:37:36,116
>> DAVID MALAN：在安全的版本，
并在www.facebook.com。

787
00:37:36,116 --> 00:37:38,520
因此，它甚至不仅
安全IP地址。

788
00:37:38,520 --> 00:37:42,650
Facebook已经采取它在自身
说，这是荒谬的。

789
00:37:42,650 --> 00:37:45,710
我们不会让你在这个
难看网址的数字。

790
00:37:45,710 --> 00:37:50,120
我们要送你一个HTTP
通过相同的标题的方式重定向

791
00:37:50,120 --> 00:37:53,010
我们看到before--
位置结肠癌的东西。

792
00:37:53,010 --> 00:37:56,340
>> 所以，这只是意味着下方
引擎盖仍是这个IP地址。

793
00:37:56,340 --> 00:37:59,010
在互联网上的每台计算机
有IP地址，这似乎。

794
00:37:59,010 --> 00:38:01,480
但是，你不一定非得
以暴露给用户。

795
00:38:01,480 --> 00:38:07,190
并且很像在天后面，有
是1-800-收集，1-800-C-O-L-L-E-C-T，

796
00:38:07,190 --> 00:38:11,700
在美国，是使收集的一个方法
通过一个非常容易令人难忘的通话费

797
00:38:11,700 --> 00:38:17,140
号码或1-800-床垫买床，
和类似的助记符，你甚至可以看到

798
00:38:17,140 --> 00:38:20,460
在电话里那种类型的
不过，这字母映射到数字。

799
00:38:20,460 --> 00:38:21,470
>> 现在，这是为什么？

800
00:38:21,470 --> 00:38:26,080
嗯，这是一个更容易记忆
而不是1-800-床垫或1-800-COLLECT

801
00:38:26,080 --> 00:38:29,100
1-800什么东西的东西
什么东西的东西

802
00:38:29,100 --> 00:38:31,030
东西，其中每个
那些是一个数字。

803
00:38:31,030 --> 00:38:34,390
同样，世界上了解到
很快，我们不应该

804
00:38:34,390 --> 00:38:35,940
让人们记住的IP地址。

805
00:38:35,940 --> 00:38:36,826
这将是愚蠢的。

806
00:38:36,826 --> 00:38:38,200
我们要改用的名字。

807
00:38:38,200 --> 00:38:40,420
这就是为什么DNS诞生了。

808
00:38:40,420 --> 00:38:45,510
>> 好吧，这么说，在条件
负载均衡，让我们尝试yahoo.com。

809
00:38:45,510 --> 00:38:47,030
嗯，这很有意思。

810
00:38:47,030 --> 00:38:51,464
雅虎似乎返回三条记录。

811
00:38:51,464 --> 00:38:53,940
所以从这个推断，
如果可以的话，是什么

812
00:38:53,940 --> 00:38:58,600
我们可以实现另一种方式
这个概念负载均衡

813
00:38:58,600 --> 00:39:04,310
也许甚至不使用物理
装置中，这种新的物理设备？

814
00:39:04,310 --> 00:39:08,070
>> 换句话说，我可以带走
资助您对负载平衡器

815
00:39:08,070 --> 00:39:10,990
并告诉你使用一些现有的
硬件来实现

816
00:39:10,990 --> 00:39:12,680
这个概念负载均衡？

817
00:39:12,680 --> 00:39:18,870

818
00:39:18,870 --> 00:39:22,510
和扰流板，
是的，但什么，或者怎么样？

819
00:39:22,510 --> 00:39:27,605
什么是雅虎也许是在这里做什么？

820
00:39:27,605 --> 00:39:29,200
卡里姆？

821
00:39:29,200 --> 00:39:30,635
好吧，克里斯？

822
00:39:30,635 --> 00:39:31,510
听众：[听不清]

823
00:39:31,510 --> 00:39:35,119

824
00:39:35,119 --> 00:39:36,910
DAVID MALAN：是的，所有的
其中三个工作。

825
00:39:36,910 --> 00:39:39,890
所以随机性，循环赛，
location--你可以

826
00:39:39,890 --> 00:39:44,160
充分利用现有的一块拼图
我们前面谈到的DNS的

827
00:39:44,160 --> 00:39:49,580
系统并简单地说，当第一
一天中的用户请求yahoo.com，

828
00:39:49,580 --> 00:39:52,970
给他们的第一个IP地址，
像45在那里结束的那个。

829
00:39:52,970 --> 00:39:55,762
而下一次用户请求
yahoo.com的IP地址

830
00:39:55,762 --> 00:39:57,970
从世界的某个地方，
给他们第二个IP，

831
00:39:57,970 --> 00:39:59,920
然后第三个IP，则
第一IP，那么第二。

832
00:39:59,920 --> 00:40:01,850
或者是聪明一点
并做到这一点图形。

833
00:40:01,850 --> 00:40:05,200
或者，它随机而不是仅仅做
它循环赛以这种方式。

834
00:40:05,200 --> 00:40:07,580
>> 在这种情况下，然后
我们甚至不需要

835
00:40:07,580 --> 00:40:10,190
要介绍的这款黑
盒子放到我们的图片。

836
00:40:10,190 --> 00:40:11,690
我们不需要新的设备。

837
00:40:11,690 --> 00:40:16,930
我们只是告诉电脑
直接去服务器，

838
00:40:16,930 --> 00:40:18,680
有效，但不
他们的名字的方式。

839
00:40:18,680 --> 00:40:20,054
他们永远不需要知道这个名字。

840
00:40:20,054 --> 00:40:25,690
他们只是被告知，yahoo.com
映射到这些IP地址中的任何一个。

841
00:40:25,690 --> 00:40:28,180
>> 所以它发送完全相同的请求。

842
00:40:28,180 --> 00:40:30,100
但上的外
信封，它简单地

843
00:40:30,100 --> 00:40:32,740
把它获悉的IP地址。

844
00:40:32,740 --> 00:40:35,590
并以这种方式，也可以
我们负载平衡的要求

845
00:40:35,590 --> 00:40:39,330
只需发送信封一个
不同的雅虎自己的服务器呢？

846
00:40:39,330 --> 00:40:42,390
>> 如果我们继续挖掘，我们拭目以待
可能是其他公司更多。

847
00:40:42,390 --> 00:40:44,380
CNN已经两个公开曝光。

848
00:40:44,380 --> 00:40:49,610
尽管实际上，如果我们再这样做
和again-- cnn.com--你可以看到

849
00:40:49,610 --> 00:40:51,730
他们正在改变秩序，其实。

850
00:40:51,730 --> 00:40:56,680
那么，什么是机制
使用CNN，显然？

851
00:40:56,680 --> 00:40:57,440
>> 听众：随机。

852
00:40:57,440 --> 00:40:59,440
DAVID MALAN：嗯，
可以是随机的，尽管它

853
00:40:59,440 --> 00:41:01,110
似乎是循环来回。

854
00:41:01,110 --> 00:41:04,380
因此，它可能是循环赛，其中
他们只是切换顺序，使

855
00:41:04,380 --> 00:41:05,880
我大概会拿第一。

856
00:41:05,880 --> 00:41:08,860
我的电脑将采取
每次第一个。

857
00:41:08,860 --> 00:41:10,490
所以这就是负载均衡。

858
00:41:10,490 --> 00:41:18,450
这使我们最终
地图数据，地图或请求，

859
00:41:18,450 --> 00:41:21,240
在多台服务器。

860
00:41:21,240 --> 00:41:24,226
那么什么样的
现在的问题还存在吗？

861
00:41:24,226 --> 00:41:26,350
这感觉就像我们刚才真的
解决了一个很好的问题。

862
00:41:26,350 --> 00:41:28,740
我们得到了用户在不同的服务器。

863
00:41:28,740 --> 00:41:31,420
但是 - 哦，和克里斯，做
你有前一个问题吗？

864
00:41:31,420 --> 00:41:34,378
>> 听众：[听不清]

865
00:41:34,378 --> 00:41:43,670

866
00:41:43,670 --> 00:41:45,120
>> DAVID MALAN：完全依赖。

867
00:41:45,120 --> 00:41:47,042
那么，什么是怎么回事？

868
00:41:47,042 --> 00:41:48,250
我们可以清楚地看到这一点。

869
00:41:48,250 --> 00:41:51,649
所以让我们试试雅虎的。

870
00:41:51,649 --> 00:41:52,940
其实，让我们去到Facebook。

871
00:41:52,940 --> 00:41:54,520
因为我们知道，一件作品。

872
00:41:54,520 --> 00:41:56,545
所以我要去复制
再次该IP地址。

873
00:41:56,545 --> 00:41:58,820
我将关闭所有这些选项卡。

874
00:41:58,820 --> 00:42:03,800
我要去打开
到这里特殊的网络选项卡。

875
00:42:03,800 --> 00:42:07,800
我要去拜访只有HTTP：//。

876
00:42:07,800 --> 00:42:10,694
而现在我要敲回车。

877
00:42:10,694 --> 00:42:11,860
让我们看看发生了什么。

878
00:42:11,860 --> 00:42:20,662
>> 如果我看这一请求，通知
这my-- Facebook是一个坏榜样。

879
00:42:20,662 --> 00:42:22,370
因为它们具有
超级花式技巧

880
00:42:22,370 --> 00:42:25,960
隐藏的细节，从我们。

881
00:42:25,960 --> 00:42:30,690
让我用雅虎
instead--的http：//该IP。

882
00:42:30,690 --> 00:42:36,030
让我们打开我们的网络
标签，保存日志。

883
00:42:36,030 --> 00:42:37,945
在这里，我们走了，回车。

884
00:42:37,945 --> 00:42:40,669

885
00:42:40,669 --> 00:42:41,210
那很好笑。

886
00:42:41,210 --> 00:42:44,480
好了，这里是著名的404消息。

887
00:42:44,480 --> 00:42:48,500
什么是有趣这里是他们
可能永远不会回来的。

888
00:42:48,500 --> 00:42:51,430
因为有可能
不是错误本身。

889
00:42:51,430 --> 00:42:54,050
他们刚刚故意
决定不支持

890
00:42:54,050 --> 00:42:56,250
数字形式的地址。

891
00:42:56,250 --> 00:43:00,270
>> 那么，我们实际上看到的
网络选项卡，如果我拉这个在这里，

892
00:43:00,270 --> 00:43:06,140
是，正如我所说，著名的404，在那里
如果我看响应报头，

893
00:43:06,140 --> 00:43:09,070
这是我得到了这里 -  404未找​​到。

894
00:43:09,070 --> 00:43:11,360
所以让我们尝试另外一个。

895
00:43:11,360 --> 00:43:13,180
让我们看看CNN与我们合作。

896
00:43:13,180 --> 00:43:19,440
我会抓住CNN的IP地址之一，
清除此，HTTP，大新，大新，大新，大新。

897
00:43:19,440 --> 00:43:21,620
所以在回答克里斯的
问题，一个工作。

898
00:43:21,620 --> 00:43:24,140

899
00:43:24,140 --> 00:43:26,255
>> 让我们去响应头。

900
00:43:26,255 --> 00:43:30,810

901
00:43:30,810 --> 00:43:33,640
其实也没什么，没事，我
在努力寻找工作的例子。

902
00:43:33,640 --> 00:43:38,270
所以，CNN已经决定，我们就离开你
在任何地址，你实际访问，

903
00:43:38,270 --> 00:43:40,359
品牌问题放在一边。

904
00:43:40,359 --> 00:43:43,275
但是，什么不会发生，如果
我们可以看到它在Facebook的情况下，

905
00:43:43,275 --> 00:43:46,700
是我们会得到一个301移动
永久，最有可能的，

906
00:43:46,700 --> 00:43:54,420
的是内部
位置：HTTPS：//www.facebook.com。

907
00:43:54,420 --> 00:44:01,210
赔率是www.facebook.com是
别名完全相同的服务器我们只是

908
00:44:01,210 --> 00:44:01,710
去了。

909
00:44:01,710 --> 00:44:03,500
>> 所以这是一个有点适得其反。

910
00:44:03,500 --> 00:44:05,170
我们从字面上访问服务器。

911
00:44:05,170 --> 00:44:07,040
然后，服务器告诉我们，走开。

912
00:44:07,040 --> 00:44:08,320
去这个地址等。

913
00:44:08,320 --> 00:44:10,870
但是，我们只是这么碰巧是
回到同一服务器。

914
00:44:10,870 --> 00:44:14,550
但据推测，我们现在住上
服务器没有这个来回。

915
00:44:14,550 --> 00:44:18,600
因为现在我们正在使用的命名
版本的网站，而不是数字的。

916
00:44:18,600 --> 00:44:20,060
好问题。

917
00:44:20,060 --> 00:44:23,690
>> 好了，如果我们现在assume--我们
解决了负载均衡。

918
00:44:23,690 --> 00:44:25,894
我们现在有一个机制，
无论通过DNS的，

919
00:44:25,894 --> 00:44:29,060
无论是通过这个黑盒子是，无论是
它使用任何这些技术。

920
00:44:29,060 --> 00:44:33,810
我们可以采取用户的请求并
找出哪个服务器，1，2，或3，

921
00:44:33,810 --> 00:44:35,420
送他或她。

922
00:44:35,420 --> 00:44:39,180
>> 什么开始打破我们的网站？

923
00:44:39,180 --> 00:44:41,160
换句话说，我们有
建一个企业，

924
00:44:41,160 --> 00:44:43,480
以前一个单一的服务器上。

925
00:44:43,480 --> 00:44:46,870
现在，企业正在运行
在多台服务器。

926
00:44:46,870 --> 00:44:51,770
什么样的假设，
什么样的设计决策，

927
00:44:51,770 --> 00:44:54,870
现在可能打破？

928
00:44:54,870 --> 00:44:55,745
>> 这是不太明显的。

929
00:44:55,745 --> 00:44:58,620
但是让我们看看如果我们不能把我们的
手指上的一些我们已经问题

930
00:44:58,620 --> 00:44:59,780
为自己创建的。

931
00:44:59,780 --> 00:45:02,750
再次，它有点像持有
倒在软管的泄漏。

932
00:45:02,750 --> 00:45:05,094
而现在一些新的问题
弹起在这里。

933
00:45:05,094 --> 00:45:07,880

934
00:45:07,880 --> 00:45:11,380
>> 听众：[听不清]

935
00:45:11,380 --> 00:45:16,574

936
00:45:16,574 --> 00:45:19,240
DAVID MALAN：OK，所以我们要
保持增长我们的硬盘空间。

937
00:45:19,240 --> 00:45:20,450
我现在正与确定。

938
00:45:20,450 --> 00:45:23,212
因为我觉得我可以
横向规模。

939
00:45:23,212 --> 00:45:26,420
就像如果我所剩无几，我就把
第四个服务器，也许第五服务器，

940
00:45:26,420 --> 00:45:30,820
然后提高我们的能力
由另外30％或50％，或诸如此类的东西。

941
00:45:30,820 --> 00:45:32,759
所以我确定这一说法，至少现在是这样。

942
00:45:32,759 --> 00:45:33,634
听众：[听不清]

943
00:45:33,634 --> 00:45:37,314

944
00:45:37,314 --> 00:45:38,980
DAVID MALAN：OK，所以这是一个很好的点。

945
00:45:38,980 --> 00:45:42,340
因此，假设服务器
是不相同的。

946
00:45:42,340 --> 00:45:45,260
和客户服务
或电子邮件等同

947
00:45:45,260 --> 00:45:48,690
从用户获得一些信息
他说，这是不工作的权利。

948
00:45:48,690 --> 00:45:52,070
这是非常可能的，有时，
也许一个或多个服务器

949
00:45:52,070 --> 00:45:55,000
演戏是有点歪，但不
其他人，肯定可以

950
00:45:55,000 --> 00:45:57,096
使其难以追下去的问题。

951
00:45:57,096 --> 00:45:58,720
您可能需要看多个地方。

952
00:45:58,720 --> 00:46:00,960
>> 这就是表现
另一种错误的，

953
00:46:00,960 --> 00:46:03,950
这是你可能应该
设计了您的基础架构，

954
00:46:03,950 --> 00:46:06,200
这一切都是真的一样。

955
00:46:06,200 --> 00:46:10,390
但它确实揭示了新的问题
我们以前是没有的。

956
00:46:10,390 --> 00:46:11,715
还有什么？

957
00:46:11,715 --> 00:46:12,590
听众：[听不清]

958
00:46:12,590 --> 00:46:16,390

959
00:46:16,390 --> 00:46:19,500
>> DAVID MALAN：是啊，
还有更多的复杂性。

960
00:46:19,500 --> 00:46:20,792
还有更实际的电线。

961
00:46:20,792 --> 00:46:21,750
还有另一种设备。

962
00:46:21,750 --> 00:46:26,310
事实上，我已经介绍了一个基本
概念，这里的一个根本问题

963
00:46:26,310 --> 00:46:28,300
称为单点
失败的，对此，

964
00:46:28,300 --> 00:46:30,110
即使你从来没有听说过
这句话，你也许可以

965
00:46:30,110 --> 00:46:31,780
现在向后工作，并弄明白。

966
00:46:31,780 --> 00:46:35,560
是什么意思，我有一个
故障点在我的建筑？

967
00:46:35,560 --> 00:46:39,694
并通过建筑的，我只是
意味着它的拓扑结构。

968
00:46:39,694 --> 00:46:40,610
>> 听众：[听不清]

969
00:46:40,610 --> 00:46:42,901
>> DAVID MALAN：是的，如果有什么
负载均衡器出现故障？

970
00:46:42,901 --> 00:46:46,290
我已经插入这个中间人的
生活目的是为了解决问题。

971
00:46:46,290 --> 00:46:47,740
但我引入了一个新的问题。

972
00:46:47,740 --> 00:46:49,350
一个新的泄漏已如雨后春笋般涌现的软管。

973
00:46:49,350 --> 00:46:53,500
因为现在如果负载平衡器
死亡或休息或misfunctions，

974
00:46:53,500 --> 00:46:56,350
我现在无法访问
我的三个服务器。

975
00:46:56,350 --> 00:46:58,880
而在这之前，我没有
有这样的中间人。

976
00:46:58,880 --> 00:47:03,020
所以这是一个新的问题，可以说是。

977
00:47:03,020 --> 00:47:05,245
我们会回来的
我们如何解决这个问题。

978
00:47:05,245 --> 00:47:06,734
>> 听众：[听不清]

979
00:47:06,734 --> 00:47:08,400
DAVID MALAN：这将是一个方法。

980
00:47:08,400 --> 00:47:13,926
是啊，所以这将是相当
老鼠的洞，我们开始往下走。

981
00:47:13,926 --> 00:47:15,800
但是，让我们回过头来
在短短的时刻。

982
00:47:15,800 --> 00:47:17,299
我们已经创建了什么其他的问题？

983
00:47:17,299 --> 00:47:25,540

984
00:47:25,540 --> 00:47:27,470
>> 因此，丹前面提到的数据库。

985
00:47:27,470 --> 00:47:29,500
而且，即使你不
太熟悉技术上，

986
00:47:29,500 --> 00:47:33,220
数据库只是一个服务器里
变化的数据通常存储，

987
00:47:33,220 --> 00:47:36,430
也许订单有人放置，
您的用户配置文件，您的姓名，

988
00:47:36,430 --> 00:47:40,810
您的电子邮件地址，事情可能
要输入或随时间而变化。

989
00:47:40,810 --> 00:47:44,599
>> 在此之前，我的数据库是在
在同一台服务器作为我的Web服务器。

990
00:47:44,599 --> 00:47:46,390
因为我有一个
网络托管帐户。

991
00:47:46,390 --> 00:47:48,480
一切都没有在同一个地方。

992
00:47:48,480 --> 00:47:54,200
我应该在哪里把我的数据库
现在，在服务器1，2或3？

993
00:47:54,200 --> 00:47:55,100
>> 听众：4。

994
00:47:55,100 --> 00:47:58,070
>> DAVID MALAN：4，OK，一切
好吧，让我们去那里。

995
00:47:58,070 --> 00:48:01,650
所以我打算把我的
数据库 - 让我们

996
00:48:01,650 --> 00:48:06,520
开始标注这些万维网，万维网，万维网。

997
00:48:06,520 --> 00:48:08,780
而我要说，
这是第四。

998
00:48:08,780 --> 00:48:11,270
我会说的数据库DB。

999
00:48:11,270 --> 00:48:12,870
好吧，我喜欢这个。

1000
00:48:12,870 --> 00:48:17,021
什么线我应该
想必可以借鉴吗？

1001
00:48:17,021 --> 00:48:18,850
>> 听众：[听不清]

1002
00:48:18,850 --> 00:48:22,740
>> DAVID MALAN：是啊，所以代码，
正如我们将要讨论的明天，

1003
00:48:22,740 --> 00:48:24,900
想必是相同的
在所有三个服务器上。

1004
00:48:24,900 --> 00:48:28,374
但现在需要无法连接到
数据库在本地但在其他地方运行。

1005
00:48:28,374 --> 00:48:29,040
这很好。

1006
00:48:29,040 --> 00:48:31,623
我们可以只给一个数据库
命名，因为我们有，或一个数字。

1007
00:48:31,623 --> 00:48:33,930
而这一切工作正常。

1008
00:48:33,930 --> 00:48:35,820
但是，我们做了什么？

1009
00:48:35,820 --> 00:48:40,640
我们已经通过水平缩放有
三个服务器，而不是一个，这

1010
00:48:40,640 --> 00:48:41,140
很好。

1011
00:48:41,140 --> 00:48:44,240
因为现在我们可以处理
三倍负载。

1012
00:48:44,240 --> 00:48:47,710
>> 更好的是，如果一个或两个
这些服务器出现故障，

1013
00:48:47,710 --> 00:48:49,350
我的生意可以继续操作。

1014
00:48:49,350 --> 00:48:53,960
因为我还有一个，即使我
沿着性能明智的那种举步维艰。

1015
00:48:53,960 --> 00:49:01,020
但是，新的问题我有
通过移动数据库介绍

1016
00:49:01,020 --> 00:49:04,350
这个单独的服务器
而不是在1，2，和3'

1017
00:49:04,350 --> 00:49:05,412
>> 听众：[听不清]

1018
00:49:05,412 --> 00:49:08,120
DAVID MALAN：是啊，所以现在我有
另一个单点故障。

1019
00:49:08,120 --> 00:49:12,330
如果我的数据库死了，或者需要
升级，或什么的，现在肯定的是，

1020
00:49:12,330 --> 00:49:13,610
我的网站在线。

1021
00:49:13,610 --> 00:49:16,270
我可以提供静态，
不变的内容。

1022
00:49:16,270 --> 00:49:21,210
但我不能让用户登录或改变
任何事或任何秩序，更糟糕的是。

1023
00:49:21,210 --> 00:49:24,120
因为如果4处于脱机状态，
然后1，2，和3

1024
00:49:24,120 --> 00:49:27,710
真的无法定义它对话。

1025
00:49:27,710 --> 00:49:31,560
>> 行，所以，是的，所以这就是为什么
我犹豫着要画这个。

1026
00:49:31,560 --> 00:49:32,690
因此，让我们回来了。

1027
00:49:32,690 --> 00:49:33,700
我不是说要继续推动你。

1028
00:49:33,700 --> 00:49:36,030
但画面非常
赶紧去弄压力。

1029
00:49:36,030 --> 00:49:38,620
因为你需要开始
有两个一切。

1030
00:49:38,620 --> 00:49:41,850
事实上，如果你见过
电影跟几年前

1031
00:49:41,850 --> 00:49:45,310
与朱迪Foster--没有？

1032
00:49:45,310 --> 00:49:47,410
>> OK，所以对于两
我们谁见过联系，

1033
00:49:47,410 --> 00:49:50,800
有一个关系，有他们的地方
本质上买了两个东西

1034
00:49:50,800 --> 00:49:53,250
而不是一个，尽管
以两倍的价格。

1035
00:49:53,250 --> 00:49:55,922
因此，它是那种俏皮
在电影发表评论。

1036
00:49:55,922 --> 00:49:57,130
这是一种与此有关。

1037
00:49:57,130 --> 00:49:58,290
我们可以完全做到这一点。

1038
00:49:58,290 --> 00:50:00,123
你只不过是成本
我们两倍的钱。

1039
00:50:00,123 --> 00:50:01,300
但是，我们会回来这一点。

1040
00:50:01,300 --> 00:50:02,400
>> 因此，我们已经解决了这个。

1041
00:50:02,400 --> 00:50:03,108
所以，你知道吗？

1042
00:50:03,108 --> 00:50:04,450
这就像一个光滑的斜坡。

1043
00:50:04,450 --> 00:50:07,033
我不想处理有
有重复的数据库。

1044
00:50:07,033 --> 00:50:08,037
这是钱太多。

1045
00:50:08,037 --> 00:50:08,620
你知道吗？

1046
00:50:08,620 --> 00:50:12,880
我想有我的数据库
就像在的一个版本

1047
00:50:12,880 --> 00:50:17,450
其中每个服务器都有
其自己的本地数据库。

1048
00:50:17,450 --> 00:50:19,480
所以我只是要
吸取每一项分贝。

1049
00:50:19,480 --> 00:50:22,240
>> 所以，现在每个Web服务器
是迄今为止相同

1050
00:50:22,240 --> 00:50:25,650
因为它具有相同的代码，在相同
静态资产，同样的图片和文字

1051
00:50:25,650 --> 00:50:26,720
等等。

1052
00:50:26,720 --> 00:50:29,580
而且每个都有自己的数据库。

1053
00:50:29,580 --> 00:50:31,450
我定的单点
故障问题。

1054
00:50:31,450 --> 00:50:32,570
现在我有一个数据库。

1055
00:50:32,570 --> 00:50:36,210
不管其中两个或其中的一个
死的东西，总是有一个了。

1056
00:50:36,210 --> 00:50:41,156
但是，新的问题有我创建
丹的解决方案避免？

1057
00:50:41,156 --> 00:50:42,470
>> 听众：[听不清]

1058
00:50:42,470 --> 00:50:44,386
>> DAVID MALAN：是的，我
必须同步他们的，对不对？

1059
00:50:44,386 --> 00:50:47,860
因为无论我需要同步
谁去where--换句话说，

1060
00:50:47,860 --> 00:50:50,570
如果Alice访问我的
现场，她恰巧

1061
00:50:50,570 --> 00:50:55,070
获得随机或圆形robined
也好，服务器排名第一，

1062
00:50:55,070 --> 00:50:58,770
此后我不得不总是
送她到服务器1。

1063
00:50:58,770 --> 00:50:59,420
为什么？

1064
00:50:59,420 --> 00:51:01,540
因为如果我送她
到服务器2，这将

1065
00:51:01,540 --> 00:51:03,140
看起来像不存在有她。

1066
00:51:03,140 --> 00:51:04,450
>> 我不会让她订单历史记录。

1067
00:51:04,450 --> 00:51:06,300
我不会让她的个人资料在那里。

1068
00:51:06,300 --> 00:51:09,360
这感觉就像
它邀请的问题。

1069
00:51:09,360 --> 00:51:11,400
而当Bob访问，我
要常送他

1070
00:51:11,400 --> 00:51:14,800
到相同的服务器，2，或取
之一，查理到第三之一，

1071
00:51:14,800 --> 00:51:15,797
和一致。

1072
00:51:15,797 --> 00:51:17,130
这不是没有道理的，虽然。

1073
00:51:17,130 --> 00:51:19,270
这就是所谓的
分区数据库。

1074
00:51:19,270 --> 00:51:21,270
而事实上，这是什么
Facebook的做早期。

1075
00:51:21,270 --> 00:51:24,020
>> 如果按照历史
脸谱，它开始在这里的校园

1076
00:51:24,020 --> 00:51:25,770
作为www.thefacebook.com。

1077
00:51:25,770 --> 00:51:29,260
然后它演变一次马克开始
蔓延到其他校园

1078
00:51:29,260 --> 00:51:34,450
要harvard.thefacebook.com和
mit.thefacebook.com，而且可能

1079
00:51:34,450 --> 00:51:37,027
bu.thefacebook.com，和类似物。

1080
00:51:37,027 --> 00:51:38,860
这是因为
在早期，我不认为

1081
00:51:38,860 --> 00:51:40,484
你可以有不同校园里的朋友。

1082
00:51:40,484 --> 00:51:41,410
但是，这很好。

1083
00:51:41,410 --> 00:51:43,930
因为从哈佛人
得到发送到该服务器。

1084
00:51:43,930 --> 00:51:45,744
任何人BU被罚到这台服务器。

1085
00:51:45,744 --> 00:51:47,910
任何人从MIT被罚
这个server--在理论上。

1086
00:51:47,910 --> 00:51:50,540
我不太知道所有的
底层的实现细节。

1087
00:51:50,540 --> 00:51:55,610
但他大概划分由人
他们的校园，在那里他们的网络了。

1088
00:51:55,610 --> 00:51:58,772
>> 所以这是很好的，直到点
你需要哈佛两台服务器，

1089
00:51:58,772 --> 00:51:59,980
或哈佛的三个服务器。

1090
00:51:59,980 --> 00:52:01,800
然后这种简单
那种分解。

1091
00:52:01,800 --> 00:52:03,174
但是，这是一个合理的方法。

1092
00:52:03,174 --> 00:52:04,950
让我们总是发送爱丽丝
同一个地方，

1093
00:52:04,950 --> 00:52:06,366
总是发送鲍勃同一个地方。

1094
00:52:06,366 --> 00:52:09,680
但是，如果Alice的会发生什么
服务器离线？

1095
00:52:09,680 --> 00:52:12,300
鲍勃和查理仍然可以买到
事情并登录到该网站。

1096
00:52:12,300 --> 00:52:13,462
但是爱丽丝不能。

1097
00:52:13,462 --> 00:52:15,170
所以，你已经失去了三分之一
你的用户群。

1098
00:52:15,170 --> 00:52:16,980
也许这是超过100％的好？

1099
00:52:16,980 --> 00:52:20,580
但也许它会如果我们能很好
还支持我们的用户100％

1100
00:52:20,580 --> 00:52:23,470
即使当第三我们
服务器脱机。

1101
00:52:23,470 --> 00:52:24,760
>> 因此，我们可以同步呢？

1102
00:52:24,760 --> 00:52:29,250
不是用户本身，但
在所有这些服务器数据库。

1103
00:52:29,250 --> 00:52:33,350
所以，现在我们种需要一些
一种互连

1104
00:52:33,350 --> 00:52:37,880
在这里，使服务器本身
可以sync--也不无道理。

1105
00:52:37,880 --> 00:52:40,090
而事实上，这种技术的存在。

1106
00:52:40,090 --> 00:52:45,550
在数据库的世界里，有
主从数据库的概念，

1107
00:52:45,550 --> 00:52:48,240
或主次，
特点之一，其中

1108
00:52:48,240 --> 00:52:51,050
不仅存储数据
与数据进行响应，

1109
00:52:51,050 --> 00:52:53,375
也只是不断
相互同步。

1110
00:52:53,375 --> 00:52:56,480
所以，任何时候你写或保存
事情到此数据库，

1111
00:52:56,480 --> 00:53:00,040
它立刻被“复制”
到其他数据库为好。

1112
00:53:00,040 --> 00:53:02,870
>> 而你从中读取任何时候，
不要紧，你在哪里。

1113
00:53:02,870 --> 00:53:05,170
因为如果在理论
他们都同步，你

1114
00:53:05,170 --> 00:53:07,710
将得到的数据相同的观点。

1115
00:53:07,710 --> 00:53:10,800
因此，这听起来很完美。

1116
00:53:10,800 --> 00:53:11,883
这里一定是一个陷阱。

1117
00:53:11,883 --> 00:53:15,200

1118
00:53:15,200 --> 00:53:18,990
什么可能抓呢？

1119
00:53:18,990 --> 00:53:21,790
>> 听众：[听不清]

1120
00:53:21,790 --> 00:53:25,830
>> DAVID MALAN：是啊，如此三次
尽可能多的东西可以去错了。

1121
00:53:25,830 --> 00:53:26,930
这是一个现实。

1122
00:53:26,930 --> 00:53:28,480
这可能全部是在精神上是相同的。

1123
00:53:28,480 --> 00:53:30,404
但需要有人来配置这些。

1124
00:53:30,404 --> 00:53:33,070
有一个更高的概率
有什么地方会出错。

1125
00:53:33,070 --> 00:53:38,130
只需用组合有
更多的东西容易出错。

1126
00:53:38,130 --> 00:53:40,505
还有什么是坏的可能？

1127
00:53:40,505 --> 00:53:41,380
听众：[听不清]

1128
00:53:41,380 --> 00:53:44,100

1129
00:53:44,100 --> 00:53:46,180
>> DAVID MALAN：是啊，所以
同步可不好。

1130
00:53:46,180 --> 00:53:48,110
即使你可能知道
从备份和这样的，

1131
00:53:48,110 --> 00:53:50,520
如果你只是一味做
备份，如果有什么东西呢

1132
00:53:50,520 --> 00:53:51,560
去错了一个数据库？

1133
00:53:51,560 --> 00:53:53,018
你删除的东西你不应该。

1134
00:53:53,018 --> 00:53:56,299
你立即复制
这个问题在其他地方。

1135
00:53:56,299 --> 00:53:58,840
所以维多利亚talking--备份
会在这里是一件好事。

1136
00:53:58,840 --> 00:54:00,549
因此，我们会回来这一点。

1137
00:54:00,549 --> 00:54:03,090
并且要清楚，我们谈论
不是在这里备份本身。

1138
00:54:03,090 --> 00:54:08,240
我们谈论的是真实的复制
或跨服务器同步。

1139
00:54:08,240 --> 00:54:09,110
他们都是活的。

1140
00:54:09,110 --> 00:54:12,074
他们不打算
用于备份。

1141
00:54:12,074 --> 00:54:13,294
>> 听众：[听不清]

1142
00:54:13,294 --> 00:54:14,335
DAVID MALAN：那是什么？

1143
00:54:14,335 --> 00:54:14,710
听众：Higher--

1144
00:54:14,710 --> 00:54:15,751
DAVID MALAN：成本较高。

1145
00:54:15,751 --> 00:54:20,180
我们已经为三倍的费用
肯定的是，虽然至少条款

1146
00:54:20,180 --> 00:54:21,100
的硬件。

1147
00:54:21,100 --> 00:54:23,200
因为数据库
只是一个软件。

1148
00:54:23,200 --> 00:54:25,189
和Web服务器是一个软件。

1149
00:54:25,189 --> 00:54:27,980
这也可能是免费的，如果我们使用
任何数量的开源的东西。

1150
00:54:27,980 --> 00:54:30,480
但是，如果我们使用的是
像甲骨文，

1151
00:54:30,480 --> 00:54:36,574
我们每支付甲骨文更多的钱
许可证或Microsoft访问。

1152
00:54:36,574 --> 00:54:38,240
我们有了一些其他的抓在这里。

1153
00:54:38,240 --> 00:54:39,240
它不能被这个简单的。

1154
00:54:39,240 --> 00:54:42,990

1155
00:54:42,990 --> 00:54:47,300
>> 因此，为了你的观点，我认为这是
贾巴尔，地理学或先前已经没有，

1156
00:54:47,300 --> 00:54:50,870
罗马，是它，因为geography--假设
我们正在聪明这一点，

1157
00:54:50,870 --> 00:54:54,080
我们正在把我们的服务器之一，
并且在把我们的数据库中，在美国，

1158
00:54:54,080 --> 00:54:56,910
和另一个在欧洲，另一个在
南美洲，还有一个非洲，

1159
00:54:56,910 --> 00:55:00,290
另外在亚洲，我们的任何地方
可能要在世界各地。

1160
00:55:00,290 --> 00:55:04,220
我们已经从我们的跟踪了解
路线点A和点

1161
00:55:04,220 --> 00:55:06,910
B，如果他们相隔较远，
将采取更多的时间。

1162
00:55:06,910 --> 00:55:10,312
>> 如果你们中的一些已经使用
工具，如Facebook或Twitter

1163
00:55:10,312 --> 00:55:13,520
或任意站点的这些天，
是不断变化的，因为用户

1164
00:55:13,520 --> 00:55:16,880
创建的数据，有时如果你
打刷新或打开同一个页面

1165
00:55:16,880 --> 00:55:20,270
在另一个浏览器，你看
不同的版本差不多。

1166
00:55:20,270 --> 00:55:22,875
您可能会看到一个人的地位
更新在这里而不是在这里，

1167
00:55:22,875 --> 00:55:25,500
然后重装，然后将其
出现了，你再重装，

1168
00:55:25,500 --> 00:55:26,640
和消失。

1169
00:55:26,640 --> 00:55:29,076
换句话说，保持一个
留意这一点，至少

1170
00:55:29,076 --> 00:55:30,950
如果你正在使用社交
网络更是如此。

1171
00:55:30,950 --> 00:55:33,320
>> 再次，只是因为
数据变化如此之快，

1172
00:55:33,320 --> 00:55:35,710
有时服务器做不同步。

1173
00:55:35,710 --> 00:55:37,230
也许这是一个超级小窗口。

1174
00:55:37,230 --> 00:55:39,970
但200毫秒，也许
甚至超过that--它

1175
00:55:39,970 --> 00:55:43,415
要采取一些非零量
时间对这些数据库进行同步。

1176
00:55:43,415 --> 00:55:45,290
而且我们不只是
谈论一个请求。

1177
00:55:45,290 --> 00:55:48,540
如果一家公司拥有上千
用户同时使用它，

1178
00:55:48,540 --> 00:55:49,460
他们可能会缓冲。

1179
00:55:49,460 --> 00:55:52,240
换句话说，有可能
是队列或等待线

1180
00:55:52,240 --> 00:55:54,950
之前所有的数据库
查询可以得到同步。

1181
00:55:54,950 --> 00:55:56,610
因此，也许它实际上是一个几秒钟。

1182
00:55:56,610 --> 00:55:59,820
>> 这确实是真的我想即使
这一天与Facebook，借此

1183
00:55:59,820 --> 00:56:02,010
当他们从同步
东海岸到西海岸，

1184
00:56:02,010 --> 00:56:06,026
它具有一个非平凡
传播延迟，可以这么说，

1185
00:56:06,026 --> 00:56:07,650
您刚才那种不得不忍受。

1186
00:56:07,650 --> 00:56:11,210
所以它不是这么多
作为一个bug是一个现实

1187
00:56:11,210 --> 00:56:14,230
您的用户可能看不到
至少在正确的数据

1188
00:56:14,230 --> 00:56:14,970
几秒钟。

1189
00:56:14,970 --> 00:56:17,410
>> 我看到这在Twitter上有很多
其实在这里有时我会

1190
00:56:17,410 --> 00:56:21,227
推特在一个窗口中打开另一个
然后看看它的确确认它

1191
00:56:21,227 --> 00:56:22,560
上升，它的还没有。

1192
00:56:22,560 --> 00:56:25,340
我不得不那种重装，
重装，reload--哦，它就在那里。

1193
00:56:25,340 --> 00:56:27,150
而这并不是因为它没有保存。

1194
00:56:27,150 --> 00:56:29,850
它只是没有传播
到其他服务器。

1195
00:56:29,850 --> 00:56:33,120
>> 所以，这种权衡，太...你真的
想自己暴露在风险

1196
00:56:33,120 --> 00:56:37,254
如果用户转到他们的订单
历史上，它实际上不是到了吗？

1197
00:56:37,254 --> 00:56:38,420
我看到这对某些银行。

1198
00:56:38,420 --> 00:56:42,100
它总是在苦恼我，好为一体，
你只能去喜欢6个月回

1199
00:56:42,100 --> 00:56:45,160
在一些银行的银行对账单，
尽管在理论上他们应该

1200
00:56:45,160 --> 00:56:46,576
可以在网上拥有的一切。

1201
00:56:46,576 --> 00:56:48,630
他们只是拿东西有时下线。

1202
00:56:48,630 --> 00:56:51,430
有时候，太...什么网站呢？

1203
00:56:51,430 --> 00:56:53,570
有one--哦，这是GoDaddy的，我想。

1204
00:56:53,570 --> 00:56:56,620
GoDaddy的，当你看看
购买域名或什么的，

1205
00:56:56,620 --> 00:56:58,630
他们会经常给你
链接到您的收据。

1206
00:56:58,630 --> 00:57:01,470
如果你点击该链接右边
走，它往往不起作用。

1207
00:57:01,470 --> 00:57:03,290
它只是说，穷途末路，没有在这里。

1208
00:57:03,290 --> 00:57:05,450
>> 而这也是因为
这些传播延迟。

1209
00:57:05,450 --> 00:57:08,290
因为无论出于何种原因，它们
正在服用的时间一点点

1210
00:57:08,290 --> 00:57:09,670
实际产生。

1211
00:57:09,670 --> 00:57:12,070
因此，这是有点像你想
拉你的头发，在某些时候。

1212
00:57:12,070 --> 00:57:14,486
因为所有你想
做的是解决一个简单的问题。

1213
00:57:14,486 --> 00:57:16,590
我们不断创造新的
问题占为己有。

1214
00:57:16,590 --> 00:57:18,770
让我们看看，如果我们
可以种撤消。

1215
00:57:18,770 --> 00:57:22,730
>> 事实证明，结合
在所有Web服务器的数据库

1216
00:57:22,730 --> 00:57:25,090
是不是真的最好的做法。

1217
00:57:25,090 --> 00:57:27,950
一般情况下，是什么工程师
会做，或者系统架构师，

1218
00:57:27,950 --> 00:57:30,340
将具有不同的
服务器层。

1219
00:57:30,340 --> 00:57:33,160
而刚刚空间的缘故，我会
吸引他们的数据库在这里。

1220
00:57:33,160 --> 00:57:38,060
>> 我们可能有数据库和
服务器排名第四的位置

1221
00:57:38,060 --> 00:57:42,430
这确实有联系
这里每一个这些服务器。

1222
00:57:42,430 --> 00:57:45,400
因此，这可能是我们前面
最后一层，人们会说。

1223
00:57:45,400 --> 00:57:47,770
而这将是我们的后端层。

1224
00:57:47,770 --> 00:57:50,580
而这只是意味着
这些面对用户。

1225
00:57:50,580 --> 00:57:53,010
和数据库不面对用户。

1226
00:57:53,010 --> 00:57:55,480
没有用户可以直接
访问数据库。

1227
00:57:55,480 --> 00:57:59,280
>> 现在让我们说不定下去
路线维多利亚建议。

1228
00:57:59,280 --> 00:58:00,940
这是单个故障点。

1229
00:58:00,940 --> 00:58:02,290
这让我不舒服。

1230
00:58:02,290 --> 00:58:05,790
那么，什么是可能的
最明显的解决方案？

1231
00:58:05,790 --> 00:58:06,665
听众：[听不清]

1232
00:58:06,665 --> 00:58:09,979

1233
00:58:09,979 --> 00:58:11,437
DAVID MALAN：对不起，再说一遍。

1234
00:58:11,437 --> 00:58:12,352
听众：[听不清]

1235
00:58:12,352 --> 00:58:13,810
DAVID MALAN：非生产服务器。

1236
00:58:13,810 --> 00:58:15,364
你什么意思？

1237
00:58:15,364 --> 00:58:17,120
>> 听众：[听不清]

1238
00:58:17,120 --> 00:58:19,120
>> DAVID MALAN：哦，好的，那么备份。

1239
00:58:19,120 --> 00:58:21,110
好了，我们可以做到这一点，当然可以。

1240
00:58:21,110 --> 00:58:23,790
而其实这是很常见的做。

1241
00:58:23,790 --> 00:58:26,470
这可能是数据库排名第五。

1242
00:58:26,470 --> 00:58:28,510
但是，这只是
连接到四个号码。

1243
00:58:28,510 --> 00:58:31,110
你可以称之为一个热备用。

1244
00:58:31,110 --> 00:58:35,080
这两个数据库可被配置
只是不断地同步

1245
00:58:35,080 --> 00:58:35,850
彼此。

1246
00:58:35,850 --> 00:58:39,010
所以，如果这台机器模具，为
无论愚蠢reason--硬盘

1247
00:58:39,010 --> 00:58:42,100
死了，有人绊倒了
线，有些软件是有缺陷

1248
00:58:42,100 --> 00:58:46,560
和机器挂起或crashes--
你可以有一个人从字面上

1249
00:58:46,560 --> 00:58:51,090
拔掉这一个从墙上
而是堵塞这个1英寸

1250
00:58:51,090 --> 00:58:56,340
然后内，比方说，一个
几分钟，说不定半小时，

1251
00:58:56,340 --> 00:58:57,210
你重新联机。

1252
00:58:57,210 --> 00:58:59,259
>> 这不是很大，但
它也并不可怕。

1253
00:58:59,259 --> 00:59:01,800
而且你不必担心
任何同步问题。

1254
00:59:01,800 --> 00:59:03,080
因为一切都已经存在。

1255
00:59:03,080 --> 00:59:05,000
因为你有一个完美的
备份准备就绪。

1256
00:59:05,000 --> 00:59:07,100
>> 你可能会有点
票友这一点，

1257
00:59:07,100 --> 00:59:12,990
有些人经常做，你在哪里
可能包括数据库排名第四的位置，

1258
00:59:12,990 --> 00:59:17,480
数据库排名第五的位置，
正在互相交谈。

1259
00:59:17,480 --> 00:59:24,120
但你也有这样的
那种arrangement--

1260
00:59:24,120 --> 00:59:27,440
它故意
看起来凌乱，因为它

1261
00:59:27,440 --> 00:59:30,220
is--，所有的
前端服务器可以

1262
00:59:30,220 --> 00:59:32,870
跟所有的后端服务器。

1263
00:59:32,870 --> 00:59:38,130
因此，如果此数据库不
应对这些前端服务器有

1264
00:59:38,130 --> 00:59:40,212
有编程
代码他们说，

1265
00:59:40,212 --> 00:59:42,170
如果你没有得到
连接到该数据库，

1266
00:59:42,170 --> 00:59:45,830
主立即启动
交谈二次。

1267
00:59:45,830 --> 00:59:48,310
>> 但是，这现在推
复杂的代码。

1268
00:59:48,310 --> 00:59:52,070
现在你的开发人员，你的软件
开发人员，必须了解这一点。

1269
00:59:52,070 --> 00:59:56,454
而你有种追平代码
你写你的实际后端

1270
00:59:56,454 --> 00:59:58,370
实施细则，
这使得它更难，

1271
00:59:58,370 --> 01:00:00,670
尤其是在一个更大的
公司或更大的网站，

1272
01:00:00,670 --> 01:00:05,020
在这里，你不一定
希望程序员有

1273
01:00:05,020 --> 01:00:10,890
知道如何数据库
工程师们做他们的工作。

1274
01:00:10,890 --> 01:00:13,810
你可能想保留这些角色
排序功能不同等等

1275
01:00:13,810 --> 01:00:16,810
那有这层
两者之间的抽象。

1276
01:00:16,810 --> 01:00:17,940
>> 那么我们如何解决这个问题？

1277
01:00:17,940 --> 01:00:20,290
好了，我们种解决
这个问题之前曾经。

1278
01:00:20,290 --> 01:00:25,680
我们为什么不把一
在这儿，这些东西

1279
01:00:25,680 --> 01:00:30,947
它反过来会谈四个号码，
五，所有的前端Web服务器

1280
01:00:30,947 --> 01:00:33,780
跟这个中间人，和
中间人又将路线他们的数据？

1281
01:00:33,780 --> 01:00:38,494
事实上，可能是什么一个
好名字为这件事？

1282
01:00:38,494 --> 01:00:39,704
>> 听众：[听不清]

1283
01:00:39,704 --> 01:00:41,120
DAVID MALAN：OK，数据库管理器。

1284
01:00:41,120 --> 01:00:48,030
但是，可能一个术语是
我们可以重复使用这个设备？

1285
01:00:48,030 --> 01:00:49,760
我们平衡。

1286
01:00:49,760 --> 01:00:52,480
是啊，所以实际上，我
不公平在这里。

1287
01:00:52,480 --> 01:00:56,760
这样一个负载平衡器将意味着
我们来回切换的烦恼在这里，

1288
01:00:56,760 --> 01:00:58,836
这实际上不需要是这种情况。

1289
01:00:58,836 --> 01:01:00,460
因此，有几个方法，我们可以做到这一点。

1290
01:01:00,460 --> 01:01:03,920
>> 如果这是在实际上负载平衡器，该
故事是完全和以前一样。

1291
01:01:03,920 --> 01:01:05,230
一些请求转至4。

1292
01:01:05,230 --> 01:01:06,150
他们中有些人去5。

1293
01:01:06,150 --> 01:01:06,710
这是很好的。

1294
01:01:06,710 --> 01:01:08,835
因为现在我们可以处理
两倍的吞吐量。

1295
01:01:08,835 --> 01:01:11,120
但是这种连接
这里是超级重要的。

1296
01:01:11,120 --> 01:01:14,050
他们必须保持不断
同步和希望

1297
01:01:14,050 --> 01:01:17,670
不是地理上相隔太远等等
该同步是基本上

1298
01:01:17,670 --> 01:01:18,520
瞬间。

1299
01:01:18,520 --> 01:01:20,410
否则，我们可能有问题。

1300
01:01:20,410 --> 01:01:21,330
>> 所以这是不坏。

1301
01:01:21,330 --> 01:01:25,132
但同样，我们已经
引入了一个新的问题。

1302
01:01:25,132 --> 01:01:26,590
什么问题都我只是重现？

1303
01:01:26,590 --> 01:01:30,000

1304
01:01:30,000 --> 01:01:31,020
单点故障。

1305
01:01:31,020 --> 01:01:32,390
那么，有什么解决方案呢？

1306
01:01:32,390 --> 01:01:39,270
因此，作为维多利亚的爱花钱，
我们可以把这个家伙出来，做到这一点。

1307
01:01:39,270 --> 01:01:41,731
而我只是要
移动这里足够的空间。

1308
01:01:41,731 --> 01:01:43,230
而且这将是一个有点乱。

1309
01:01:43,230 --> 01:01:44,563
我会继续画线。

1310
01:01:44,563 --> 01:01:47,080
假设所有的
这些线路进入这两个？

1311
01:01:47,080 --> 01:01:52,670
>> 这里一个很常见的技术将是
使用一种叫做心跳技术

1312
01:01:52,670 --> 01:01:57,390
由此每个这些设备，
左和右负载平衡器，

1313
01:01:57,390 --> 01:02:00,740
或任何我们想给他们打电话，
在不断地说，我还活着，

1314
01:02:00,740 --> 01:02:03,220
我还活着，我还活着，我还活着。

1315
01:02:03,220 --> 01:02:05,910
其中之一由默认
作为主。

1316
01:02:05,910 --> 01:02:09,620
因此，所有的流量是通过路由
在一个在左边，例如

1317
01:02:09,620 --> 01:02:11,260
默认情况下，随意。

1318
01:02:11,260 --> 01:02:16,890
>> 但只要在右边的家伙
不从左侧的人听到了，

1319
01:02:16,890 --> 01:02:20,440
右边的一个被编程
以自动，例如，

1320
01:02:20,440 --> 01:02:24,110
接管IP地址
在一个在左边的，

1321
01:02:24,110 --> 01:02:28,240
因此成为主，并
也许发送电子邮件或短信

1322
01:02:28,240 --> 01:02:31,570
对人类说，哎，
左主要处于脱机状态。

1323
01:02:31,570 --> 01:02:33,310
我会为现在成为首要。

1324
01:02:33,310 --> 01:02:35,760
因此，副总统成为
会长，可以这么说。

1325
01:02:35,760 --> 01:02:38,180
而有人去拯救
总统，如果你想。

1326
01:02:38,180 --> 01:02:41,090
因为现在我们有一个暂时的
单点故障。

1327
01:02:41,090 --> 01:02:45,020
>> 因此，作为复杂或压力作为
这似乎开始之中，

1328
01:02:45,020 --> 01:02:46,990
你这是怎么解决这些问题。

1329
01:02:46,990 --> 01:02:48,190
你做它投钱。

1330
01:02:48,190 --> 01:02:49,370
你把一切硬件。

1331
01:02:49,370 --> 01:02:52,170
但不幸的是你
它增加了复杂性。

1332
01:02:52,170 --> 01:02:56,450
但结果，最终是
有一个更，理论上

1333
01:02:56,450 --> 01:02:57,670
健壮的架构。

1334
01:02:57,670 --> 01:02:58,850
这还不够完善。

1335
01:02:58,850 --> 01:03:02,470
因为即使我们have--我们可能
没有单一故障点。

1336
01:03:02,470 --> 01:03:05,240
我们现在有失败的双重积分。

1337
01:03:05,240 --> 01:03:07,630
但是，如果有两个不如意的事情，
这绝对可以，

1338
01:03:07,630 --> 01:03:09,030
我们仍然将是脱机。

1339
01:03:09,030 --> 01:03:11,660
>> 并因此在非常普遍的
业是描述

1340
01:03:11,660 --> 01:03:14,000
你的时间在九方面。

1341
01:03:14,000 --> 01:03:18,610
和排序的目标
立志要为99.999％

1342
01:03:18,610 --> 01:03:21,580
时间您的网站是在线。

1343
01:03:21,580 --> 01:03:24,170
甚至更好，加
几个花枝招展了这一点。

1344
01:03:24,170 --> 01:03:28,159
不幸的是，这些
九是非常昂贵的。

1345
01:03:28,159 --> 01:03:29,450
让我们真正做到了这一点。

1346
01:03:29,450 --> 01:03:35,510
所以，如果我再次打开了我的大计算器，
365天一年，一天24小时，

1347
01:03:35,510 --> 01:03:44,780
在一小时60分钟，并
60秒在一分钟内，

1348
01:03:44,780 --> 01:03:48,690
这就是多少秒有
在一年内，如果我正确地这样做。

1349
01:03:48,690 --> 01:03:55,740
因此，如果我们这个时代所.99999，这是
我们有多少时间要向往。

1350
01:03:55,740 --> 01:04:00,600
因此，这意味着我们应该起来
在这一年这么多秒。

1351
01:04:00,600 --> 01:04:03,920
所以，如果我现在减去
原始值，或相当

1352
01:04:03,920 --> 01:04:07,480
从这一新值
序曲一316秒，

1353
01:04:07,480 --> 01:04:09,640
这当然是五分钟。

1354
01:04:09,640 --> 01:04:13,770
>> 所以，如果您的网站或公司
自称“五个九”，即你

1355
01:04:13,770 --> 01:04:17,050
向上的99.99％的时间，
这意味着你更好

1356
01:04:17,050 --> 01:04:23,470
已经足够聪明和快速
足够和足够的资源平齐

1357
01:04:23,470 --> 01:04:27,890
你的服务器是唯一的下线
5分钟内未能一年。

1358
01:04:27,890 --> 01:04:29,980
这是一个昂贵的，
辛苦的事情向往。

1359
01:04:29,980 --> 01:04:31,430
>> 所以这是一个权衡了。

1360
01:04:31,430 --> 01:04:35,866
时间99.999％，是相当
织补硬和昂贵的。

1361
01:04:35,866 --> 01:04:38,740
五minutes--可以勉强得到
到服务器的物理上取代

1362
01:04:38,740 --> 01:04:40,040
东西是出了问题。

1363
01:04:40,040 --> 01:04:42,810
这就是为什么我们开始布线
东西放在一起比较复杂

1364
01:04:42,810 --> 01:04:48,240
先验使得计算机
可以排序的自我修复。

1365
01:04:48,240 --> 01:04:49,446
是啊。

1366
01:04:49,446 --> 01:04:52,344
>> 听众：[听不清]

1367
01:04:52,344 --> 01:05:02,014

1368
01:05:02,014 --> 01:05:04,430
DAVID MALAN：这个问题可能
在任何数量的位置。

1369
01:05:04,430 --> 01:05:05,090
而在fact--

1370
01:05:05,090 --> 01:05:07,101
>> 听众：[听不清]

1371
01:05:07,101 --> 01:05:08,600
DAVID MALAN：绝对，绝对。

1372
01:05:08,600 --> 01:05:10,720
并作为画面
越来越复杂，

1373
01:05:10,720 --> 01:05:12,110
它可以是Web服务器。

1374
01:05:12,110 --> 01:05:14,690
它可以是将电源的建筑物。

1375
01:05:14,690 --> 01:05:17,900
它可以是物理的东西，像
电缆得到了磨损或踢出。

1376
01:05:17,900 --> 01:05:19,879
它可以是数据库中
没有响应。

1377
01:05:19,879 --> 01:05:22,920
它可以被他们更新了自己的工作
系统和东西挂。

1378
01:05:22,920 --> 01:05:24,634
因此，有许多其他运动部件。

1379
01:05:24,634 --> 01:05:27,050
所以很多工程
该已去这背后

1380
01:05:27,050 --> 01:05:30,431
其实只是权衡，怎么样
多少时间，多少钱是实际

1381
01:05:30,431 --> 01:05:32,930
值得一，什么是威胁
你真的很担心？

1382
01:05:32,930 --> 01:05:35,471
例如，在
课程我在哈佛任教，

1383
01:05:35,471 --> 01:05:38,470
我们使用了很多云计算，这
我们会在现在就开始考虑看看，

1384
01:05:38,470 --> 01:05:41,107
事实上，在这里，我们使用
亚马逊网络服务。

1385
01:05:41,107 --> 01:05:42,940
仅仅因为这是
一个大家开始。

1386
01:05:42,940 --> 01:05:45,856
但是，有越来越这些天
从谷歌和微软等。

1387
01:05:45,856 --> 01:05:50,030
我们有意识地选择把所有
我们的课程'的虚拟机，

1388
01:05:50,030 --> 01:05:55,400
因为他们是所谓，在我认为
这是西弗吉尼亚数据中心。

1389
01:05:55,400 --> 01:05:57,560
我们的大部分学生
碰巧是来自美国，

1390
01:05:57,560 --> 01:05:59,820
虽然肯定有
一些国际。

1391
01:05:59,820 --> 01:06:02,630
>> 但现实是，它只是
简单，这对我们来说更便宜

1392
01:06:02,630 --> 01:06:05,540
把我们所有的鸡蛋
在弗吉尼亚州的篮子里，

1393
01:06:05,540 --> 01:06:08,050
尽管我知道如果事情
在弗吉尼亚州顺心，

1394
01:06:08,050 --> 01:06:12,760
作为偶尔happened--像
如果有一个飓风或某些天气

1395
01:06:12,760 --> 01:06:15,890
事件一样，如果有一些
电网问题或like--所有

1396
01:06:15,890 --> 01:06:20,240
我们的课程“数据可能下线
对于一些数目的分钟或小时

1397
01:06:20,240 --> 01:06:21,600
甚至更长。

1398
01:06:21,600 --> 01:06:24,020
>> 但复杂的量
这将是需要的，

1399
01:06:24,020 --> 01:06:26,895
与货币量那会
需要，操作一切

1400
01:06:26,895 --> 01:06:31,420
在欧洲或在美国加州并行
只是没有那么多的意义。

1401
01:06:31,420 --> 01:06:35,080
所以这是一个合理的贸易
关闭，但一个痛苦

1402
01:06:35,080 --> 01:06:37,740
当你真正是
具有停机。

1403
01:06:37,740 --> 01:06:41,830
>> 好了，现在让过渡
一些基于云的解决方案

1404
01:06:41,830 --> 01:06:43,320
对其中的一些问题。

1405
01:06:43,320 --> 01:06:45,040
一切我们已经
讨论迄今

1406
01:06:45,040 --> 01:06:47,527
是一种有问题
一直和我们在一起一段时间，

1407
01:06:47,527 --> 01:06:49,610
你是否有自己的
在你的公司的服务器，

1408
01:06:49,610 --> 01:06:52,740
无论你去到一个共同的位置
像放置在数据中心和共享

1409
01:06:52,740 --> 01:06:55,110
与别人的空间，
时下还是在云中。

1410
01:06:55,110 --> 01:06:57,040
>> 什么是关于好的
云的是，所有

1411
01:06:57,040 --> 01:06:59,540
这些东西我
作为绘制物理对象

1412
01:06:59,540 --> 01:07:02,400
现在可以被认为是
那种虚拟物体

1413
01:07:02,400 --> 01:07:04,659
在属于云
模拟软件。

1414
01:07:04,659 --> 01:07:07,700
换句话说，今天的计算机，
今天的服务器，如戴尔图片

1415
01:07:07,700 --> 01:07:11,720
我之前展示，是如此之快，有
这么多的RAM，如此多的CPU，这么多的磁盘

1416
01:07:11,720 --> 01:07:16,140
空间，是人都写
软件几乎分区

1417
01:07:16,140 --> 01:07:21,130
一台服务器成它的错觉
是两台服务器或200台服务器，所以

1418
01:07:21,130 --> 01:07:24,150
我们每个客户
具有的错觉

1419
01:07:24,150 --> 01:07:29,110
不仅仅是一些网站上的帐户
主机，但我们自己的机器，我们是

1420
01:07:29,110 --> 01:07:30,490
从别人那里租。

1421
01:07:30,490 --> 01:07:34,140
>> 但它是一个虚拟机
只要一台Dell服务器上，

1422
01:07:34,140 --> 01:07:39,160
再次可能会被划分成
两个或200或多个虚拟机，

1423
01:07:39,160 --> 01:07:43,770
所有这一切给别人管理
访问，但在某种程度上，其中我们谁也没

1424
01:07:43,770 --> 01:07:48,040
知道或可以访问其他的虚拟
在相同的硬件的机器。

1425
01:07:48,040 --> 01:07:53,430
因此，要画一幅画在今天的幻灯片，
我有这个在这里拍摄从网站

1426
01:07:53,430 --> 01:07:54,160
所谓的码头工人。

1427
01:07:54,160 --> 01:07:56,970
>> 因此，这是多一点
细节比我们实际需要的。

1428
01:07:56,970 --> 01:07:59,830
但是，如果你认为这是
您infrastructure--

1429
01:07:59,830 --> 01:08:02,910
所以只是硬件你自己的，
您的服务器，机架，数据

1430
01:08:02,910 --> 01:08:06,480
中心，以及所有that--，你会
通常运行一个主机操作系统。

1431
01:08:06,480 --> 01:08:08,275
因此，一些like--它可能是Windows操作系统。

1432
01:08:08,275 --> 01:08:09,430
它不会是的Mac OS。

1433
01:08:09,430 --> 01:08:11,430
因为这是不是真的
企业的这些日子。

1434
01:08:11,430 --> 01:08:15,670
因此，这将是Linux或Solaris
或Unix或者BSD或FreeBSD

1435
01:08:15,670 --> 01:08:19,779
或任何数目的其他操作系统的
是免费或商业的。

1436
01:08:19,779 --> 01:08:22,120
>> 然后你运行
节目，特别节目，

1437
01:08:22,120 --> 01:08:26,479
一个名为hypervisor，或
虚拟机监视器，VMM。

1438
01:08:26,479 --> 01:08:31,649
而这些产品，如果你是
熟悉的，像VMware或VirtualBox的

1439
01:08:31,649 --> 01:08:34,080
或虚拟PC或其他人。

1440
01:08:34,080 --> 01:08:38,430
以及这些方案做的是完全
该功能我前面描述。

1441
01:08:38,430 --> 01:08:41,779
它创造的幻觉
一个物理机

1442
01:08:41,779 --> 01:08:44,550
可以是多个虚拟机。

1443
01:08:44,550 --> 01:08:48,260
>> 所以，这些五颜六色的盒子向上顶是
画以下的图片。

1444
01:08:48,260 --> 01:08:50,260
这个管理程序，这
的软件，把它

1445
01:08:50,260 --> 01:08:54,090
VMware的，在运行一些其他的
操作系统，调用它的Linux，

1446
01:08:54,090 --> 01:08:56,910
正在创建假象
这种物理计算机实际上是

1447
01:08:56,910 --> 01:09:00,149
一个，两个，三个虚拟计算机。

1448
01:09:00,149 --> 01:09:04,270
所以，现在我已经买了，作为主人
此硬件，一台物理计算机。

1449
01:09:04,270 --> 01:09:06,200
现在我租
这三个客户。

1450
01:09:06,200 --> 01:09:09,731
>> 而这三个客户都认为
它们有一个专门的虚拟机。

1451
01:09:09,731 --> 01:09:10,939
而且它不是偷梁换柱。

1452
01:09:10,939 --> 01:09:13,750
它更多的披露
您使用的是虚拟机。

1453
01:09:13,750 --> 01:09:17,589
但技术上，我们都
拥有完全的管理控制

1454
01:09:17,589 --> 01:09:19,880
在每个那些客人
操作系统，这可能

1455
01:09:19,880 --> 01:09:21,370
是任何数目的操作系统。

1456
01:09:21,370 --> 01:09:23,029
>> 我可以安装任何我想要的。

1457
01:09:23,029 --> 01:09:24,640
因为我想我可以升级它。

1458
01:09:24,640 --> 01:09:27,470
我甚至不有知道或
关心的其他操作系统

1459
01:09:27,470 --> 01:09:29,678
该计算机上的系统，
其他虚拟机，

1460
01:09:29,678 --> 01:09:35,290
除非这一切灰色的主人
东西正在一点点贪婪

1461
01:09:35,290 --> 01:09:37,540
并且过头他或她的资源。

1462
01:09:37,540 --> 01:09:40,800
>> 因此，如果你拍摄一张
物理机和卖它

1463
01:09:40,800 --> 01:09:44,399
不200，但400
客户，在某些时候

1464
01:09:44,399 --> 01:09:47,270
我们要跳闸进入这些
相同的性能问题之前。

1465
01:09:47,270 --> 01:09:50,460
因为你只有有限的
磁盘和RAM等的量。

1466
01:09:50,460 --> 01:09:53,450
和一个虚拟机
仅仅是一个程序，它是

1467
01:09:53,450 --> 01:09:56,140
假装是一个
羽翼丰满的计算机。

1468
01:09:56,140 --> 01:09:58,040
所以，你得到你所支付在这里。

1469
01:09:58,040 --> 01:10:02,150
>> 所以你会在网上找到你可能会付出
有信誉的公司每月也许$ 100

1470
01:10:02,150 --> 01:10:05,660
为你自己的虚拟机，或者
你自己的虚拟专用服务器，

1471
01:10:05,660 --> 01:10:07,090
这是它的另一种说法。

1472
01:10:07,090 --> 01:10:10,400
或者，你可能会发现一些飞
晚上，你每月支付$ 5.99

1473
01:10:10,400 --> 01:10:12,080
为自己的虚拟机。

1474
01:10:12,080 --> 01:10:15,614
但可能你没有近
为您提供尽可能多的性能，

1475
01:10:15,614 --> 01:10:18,530
因为他们已经超卖它
因此，比你的高

1476
01:10:18,530 --> 01:10:22,340
服务层或更好的供应商。

1477
01:10:22,340 --> 01:10:24,590
>> 那么，这实际上意味着我们呢？

1478
01:10:24,590 --> 01:10:26,110
因此，让我去这个。

1479
01:10:26,110 --> 01:10:29,580
我打算去aws.amazon.com。

1480
01:10:29,580 --> 01:10:31,590
正因为他们有
选项​​一个漂亮的菜单。

1481
01:10:31,590 --> 01:10:34,700
但是，这些相同的经验教训应用到
一大堆其他云供应商。

1482
01:10:34,700 --> 01:10:38,201
不幸的是，往往更
营销比什么都讲。

1483
01:10:38,201 --> 01:10:39,200
而这种不断变化。

1484
01:10:39,200 --> 01:10:41,820
所以，你去一个这样的网站。

1485
01:10:41,820 --> 01:10:44,560
这确实不
告诉你任何东西。

1486
01:10:44,560 --> 01:10:47,780
>> 就连我，我看看这个，不
真的知道任何这些东西

1487
01:10:47,780 --> 01:10:49,334
不一定做，直到我在潜水。

1488
01:10:49,334 --> 01:10:50,875
但是，让我们开始在左边，计算。

1489
01:10:50,875 --> 01:10:52,980
而我要去点击这里。

1490
01:10:52,980 --> 01:10:56,960
而现在亚马逊有一个坦然
绝大多数服务

1491
01:10:56,960 --> 01:10:57,960
这些天。

1492
01:10:57,960 --> 01:11:01,040
但亚马逊EC2可能是最简单的。

1493
01:11:01,040 --> 01:11:05,840
>> 在Amazon EC2会为我们创造准确
图片我们看到刚才。

1494
01:11:05,840 --> 01:11:10,240
这是他们如何赚了很多
其在云中的钱。

1495
01:11:10,240 --> 01:11:12,910
显然，Netflix和其他
在与他们的云。

1496
01:11:12,910 --> 01:11:16,260
这是典型的全部
蓬松的营销说话。

1497
01:11:16,260 --> 01:11:19,720
所以我想要做的就是去Pricing--
或者说让我们去实例

1498
01:11:19,720 --> 01:11:23,790
最初只是画的这个图片。

1499
01:11:23,790 --> 01:11:25,800
>> 因此，这会因供应商不同而不同。

1500
01:11:25,800 --> 01:11:29,590
而且我们也不需要太深入
在这里这一切是如何工作的杂草。

1501
01:11:29,590 --> 01:11:34,720
但亚马逊方式，例如，
租你的虚拟机或服务器

1502
01:11:34,720 --> 01:11:37,200
在云中，他们已经得到了
这些排序搞笑的名字，

1503
01:11:37,200 --> 01:11:41,000
像t2.nano，这意味着小，
或t2.large，这意味着大。

1504
01:11:41,000 --> 01:11:43,970
他们每个人都为您提供了两种
一个或两个虚拟CPU。

1505
01:11:43,970 --> 01:11:45,470
>> 为什么它是一个虚拟的CPU？

1506
01:11:45,470 --> 01:11:49,440
好吧，物理机可能
有64个或更多的实际CPU。

1507
01:11:49,440 --> 01:11:52,125
但同样，通过软件，
他们创造的幻觉

1508
01:11:52,125 --> 01:11:55,410
这是一台机器可
瓜分给多个用户。

1509
01:11:55,410 --> 01:11:58,765
因此，我们可以认为这是
有一个英特尔CPU或两个。

1510
01:11:58,765 --> 01:12:01,290
每hour--我将CPU学分
要读小字

1511
01:12:01,290 --> 01:12:02,581
至于什么这实际上意味着。

1512
01:12:02,581 --> 01:12:05,850
这意味着有多少的机器
你可以每小时面对面的人使用

1513
01:12:05,850 --> 01:12:07,730
其他客户在该硬件。

1514
01:12:07,730 --> 01:12:11,560
>> 这里有多少RAM或存储您
get--任一半千兆字节，或500

1515
01:12:11,560 --> 01:12:14,120
兆字节，或1千兆字节，或2。

1516
01:12:14,120 --> 01:12:17,390
然后，存储只是指
什么样的磁盘，他们给你。

1517
01:12:17,390 --> 01:12:19,950
有不同的存储
技术，他们提供。

1518
01:12:19,950 --> 01:12:22,870
但比这更有趣
那么可能是定价。

1519
01:12:22,870 --> 01:12:25,860
>> 所以，如果你是CTO或
工程师谁不

1520
01:12:25,860 --> 01:12:28,420
要在运行服务器的
办公室，无论出于何种原因，

1521
01:12:28,420 --> 01:12:30,230
和它的方式太
复杂或昂贵

1522
01:12:30,230 --> 01:12:33,930
购买服务器和共同找到他们，
在某些物理空间笼付房租

1523
01:12:33,930 --> 01:12:36,670
somewhere--你刚要坐下来
在你的笔记本电脑在深夜，

1524
01:12:36,670 --> 01:12:40,480
输入您的信用卡信息，
而在租金服务器cloud--好，

1525
01:12:40,480 --> 01:12:41,920
在这里我们可以做到这一点。

1526
01:12:41,920 --> 01:12:45,769
我要下去中场休息的Linux
是一款流行的操作系统。

1527
01:12:45,769 --> 01:12:47,310
让我们刚刚得到的东西的感觉。

1528
01:12:47,310 --> 01:12:48,990
Whoops--太大。

1529
01:12:48,990 --> 01:12:53,670
>> 因此，让我们看看他们的微小
虚拟机，里面好像有，

1530
01:12:53,670 --> 01:12:57,440
对我们而言，一个CPU
和RAM 500兆字节。

1531
01:12:57,440 --> 01:12:58,440
这是相当小的。

1532
01:12:58,440 --> 01:13:00,820
但坦率地说，Web服务器不
需要做的所有的东西。

1533
01:13:00,820 --> 01:13:02,630
你有你的笔记本电脑更好的规格。

1534
01:13:02,630 --> 01:13:04,990
但你并不需要这些
规范这些天的事情。

1535
01:13:04,990 --> 01:13:11,490
你要支付每小时$ 0.0065。

1536
01:13:11,490 --> 01:13:12,080
>> 因此，让我们来看看。

1537
01:13:12,080 --> 01:13:15,970
如果在一天24小时，和
我们付出这么多每小时，

1538
01:13:15,970 --> 01:13:20,680
它会花费你$ 0.15到租的
在云中特定的服务器。

1539
01:13:20,680 --> 01:13:22,210
而这仅仅是一天。

1540
01:13:22,210 --> 01:13:27,050
如果我们这样做365-- $ 57
租用特定的服务器。

1541
01:13:27,050 --> 01:13:28,420
这样听起来超低价。

1542
01:13:28,420 --> 01:13:31,100
>> 这也是超级低性能。

1543
01:13:31,100 --> 01:13:37,169
因此，我们，对于课程教我在这里，往往
用我认为t2.smalls或t2.mediums。

1544
01:13:37,169 --> 01:13:39,960
我们可能有几百个
用户，几千个用户，总。

1545
01:13:39,960 --> 01:13:40,900
这是非常温和的。

1546
01:13:40,900 --> 01:13:42,360
因此，让我们看看这将花费。

1547
01:13:42,360 --> 01:13:49,260
所以，如果我这样做的成本24倍
小时365次，这其中的$ 225

1548
01:13:49,260 --> 01:13:51,160
而对于课程
我教的，我们一般

1549
01:13:51,160 --> 01:13:54,970
运行两个一切，对于
冗余和也对性能。

1550
01:13:54,970 --> 01:13:59,230
因此，我们可能会花，因此，
对于服务器$ 500

1551
01:13:59,230 --> 01:14:00,860
我们可能需要一年。

1552
01:14:00,860 --> 01:14:05,210
>> 现在，如果你需要更多的到性能
让我们来看看内存。

1553
01:14:05,210 --> 01:14:06,810
我们已经谈到内存颇有几分。

1554
01:14:06,810 --> 01:14:09,330
而如果你需要更多的
memory--和64千兆字节

1555
01:14:09,330 --> 01:14:12,310
是我一直mentioning--数
这几乎是1 $每小时。

1556
01:14:12,310 --> 01:14:16,180
而且你可以很快看到
这goes--所以24小时次365。

1557
01:14:16,180 --> 01:14:20,580
所以，现在是$ 8,000每年
对于一个相当不错的服务器。

1558
01:14:20,580 --> 01:14:23,010
>> 所以在某些时候，有
这个拐点

1559
01:14:23,010 --> 01:14:29,510
现在在哪里，我们可以花$ 6000名
可能和购买一台机器一样，

1560
01:14:29,510 --> 01:14:33,800
和摊销成本超过也许两个，
三年，机器的寿命。

1561
01:14:33,800 --> 01:14:38,880
但是，可能会推你
赞成或租用的失宠

1562
01:14:38,880 --> 01:14:41,230
在这样的云计算一台机器？

1563
01:14:41,230 --> 01:14:44,110
再次，这是可比，也许
这些戴尔服务器之一

1564
01:14:44,110 --> 01:14:47,208
我们看到了一个位前合照。

1565
01:14:47,208 --> 01:14:51,016
>> 听众：[听不清]

1566
01:14:51,016 --> 01:14:54,350

1567
01:14:54,350 --> 01:14:56,190
>> DAVID MALAN：是的，这是一个巨大的上涨空间。

1568
01:14:56,190 --> 01:14:58,640
因为我们不买
机，我们不必拆箱它。

1569
01:14:58,640 --> 01:14:59,600
我们不必提起。

1570
01:14:59,600 --> 01:15:01,110
我们没有把它插入到我们的机架中。

1571
01:15:01,110 --> 01:15:02,080
我们没有插上。

1572
01:15:02,080 --> 01:15:03,140
我们没有支付
电费。

1573
01:15:03,140 --> 01:15:05,120
>> 我们没有转
对空调。

1574
01:15:05,120 --> 01:15:07,620
当一个硬盘驱动器模具，我们没有
开车在半夜

1575
01:15:07,620 --> 01:15:08,172
要修复它。

1576
01:15:08,172 --> 01:15:09,630
我们没有设置监控。

1577
01:15:09,630 --> 01:15:13,750
我们没有中场休息，不胜枚举
和所有的物理的东西

1578
01:15:13,750 --> 01:15:15,810
你不需要做
因为“云”。

1579
01:15:15,810 --> 01:15:18,620
>> 并且要清楚，云计算
这是非常滥用的术语。

1580
01:15:18,620 --> 01:15:22,790
这真的只是意味着支付人
别人为你运行的服务器，

1581
01:15:22,790 --> 01:15:25,300
或租用空间
别人的服务器上。

1582
01:15:25,300 --> 01:15:27,110
所以说，“云计算”是新的。

1583
01:15:27,110 --> 01:15:30,260
这个想法是几十年的历史。

1584
01:15:30,260 --> 01:15:32,070
所以这是非常引人注目的。

1585
01:15:32,070 --> 01:15:33,960
>> 而你得到什么呢？

1586
01:15:33,960 --> 01:15:38,287
那么，您还可以获得能力
做家里的笔记本电脑的一切。

1587
01:15:38,287 --> 01:15:40,620
换言之，所有的
图片我只是drawing--

1588
01:15:40,620 --> 01:15:44,010
，这是不是很久以前，即使
我爬来爬去的服务器地板

1589
01:15:44,010 --> 01:15:46,680
堵塞在用于电缆
每次你看到的线，

1590
01:15:46,680 --> 01:15:49,590
升级工作
系统，以及不断变化的驱动器周围。

1591
01:15:49,590 --> 01:15:51,610
有很多的
肉体来了这一切。

1592
01:15:51,610 --> 01:15:55,300
>> 但是，什么是美丽的有关虚拟
机，作为名称一种暗示，

1593
01:15:55,300 --> 01:15:57,600
现在有基于网络的
接口即

1594
01:15:57,600 --> 01:15:59,900
如果你想等价
从该服务器一行

1595
01:15:59,900 --> 01:16:03,959
另一个，只需键入，类型，类型，
单击并拖动，点击提交，瞧，

1596
01:16:03,959 --> 01:16:05,250
你有它接线无形中。

1597
01:16:05,250 --> 01:16:07,235
因为它在软件全部完成。

1598
01:16:07,235 --> 01:16:09,110
其原因，它的完成
在软件又是

1599
01:16:09,110 --> 01:16:12,650
因为我们有这么多的RAM等
多CPU提供给我们这些天，

1600
01:16:12,650 --> 01:16:14,880
即使所有的
这些东西需要时间，

1601
01:16:14,880 --> 01:16:18,450
它是运行缓慢的事情
在软件比硬件，

1602
01:16:18,450 --> 01:16:23,710
只是因为它是较慢的使用机械
设备，如硬盘驱动器比RAM，

1603
01:16:23,710 --> 01:16:25,190
一些纯电子。

1604
01:16:25,190 --> 01:16:27,490
我们有这么多的资源
提供给我们。

1605
01:16:27,490 --> 01:16:29,920
我们人类是那种慢目不暇接。

1606
01:16:29,920 --> 01:16:33,840
所以现在的机器能做到
每单位时间更多。

1607
01:16:33,840 --> 01:16:36,640
我们有这些能力
做的事情几乎。

1608
01:16:36,640 --> 01:16:39,120
>> 我会说的课程
我教，例如，在这里，

1609
01:16:39,120 --> 01:16:43,464
我们对大约一打或
所以总的虚拟机的

1610
01:16:43,464 --> 01:16:45,880
这样运行在任何给定
时间做前端的东西，

1611
01:16:45,880 --> 01:16:47,620
做后端的东西。

1612
01:16:47,620 --> 01:16:50,237
我们有我们所有的存储。

1613
01:16:50,237 --> 01:16:52,820
因此，任何视频，包括事
这样，我们正在拍摄，

1614
01:16:52,820 --> 01:16:54,330
我们最终将入云。

1615
01:16:54,330 --> 01:16:58,710
亚马逊的服务叫做Amazon S3的，
其简单的存储服务，

1616
01:16:58,710 --> 01:17:00,397
就像在云中的磁盘空间。

1617
01:17:00,397 --> 01:17:02,230
他们有话
所谓CloudFront的，这

1618
01:17:02,230 --> 01:17:06,040
是CDN服务，内容
交付网络服务，

1619
01:17:06,040 --> 01:17:10,190
意味着他们把所有的文件和
为你自动地复制它

1620
01:17:10,190 --> 01:17:11,290
世界各地。

1621
01:17:11,290 --> 01:17:12,780
>> 因此，他们不这样做先发制人。

1622
01:17:12,780 --> 01:17:15,159
但是，第一次有人
在印度的请求文件，

1623
01:17:15,159 --> 01:17:16,700
他们将有可能缓存在本地。

1624
01:17:16,700 --> 01:17:19,325
第一次在中国，
第一次在巴西发生这种情况，

1625
01:17:19,325 --> 01:17:20,880
他们将开始在本地缓存它。

1626
01:17:20,880 --> 01:17:22,730
而你并不需要做任何的。

1627
01:17:22,730 --> 01:17:26,710
因此，这是如此令人难以置信
引人注目的这几天搬东西

1628
01:17:26,710 --> 01:17:27,890
入云。

1629
01:17:27,890 --> 01:17:31,890
因为你有这个能力从字面上
到没有人在做几乎一样多

1630
01:17:31,890 --> 01:17:32,390
工作。

1631
01:17:32,390 --> 01:17:35,930
你从字面上并不需要尽可能多的
人在做这些工作anymore--

1632
01:17:35,930 --> 01:17:38,450
“OPS”，或者操作角色，不再。

1633
01:17:38,450 --> 01:17:43,150
你真的只需要
开发人员和工程师少

1634
01:17:43,150 --> 01:17:44,840
谁可以做的事情几乎。

1635
01:17:44,840 --> 01:17:46,590
事实上，只给
你的这种感觉，

1636
01:17:46,590 --> 01:17:51,800
让我去定价
另外一个产品在这里。

1637
01:17:51,800 --> 01:17:58,170
让我们来看看像CDN S3。

1638
01:17:58,170 --> 01:18:01,140
因此，这基本上是一个
虚拟硬盘驱动器在云中。

1639
01:18:01,140 --> 01:18:14,360
如果我们向下滚动pricing--
所以它的$ 0.007每GB。

1640
01:18:14,360 --> 01:18:16,300
而that's--我们怎么办呢？

1641
01:18:16,300 --> 01:18:17,410
我觉得每月这就是。

1642
01:18:17,410 --> 01:18:21,530
>> 所以，如果这是每month--或每天？

1643
01:18:21,530 --> 01:18:23,200
丹，这是每天？

1644
01:18:23,200 --> 01:18:24,700
这是每月确定。

1645
01:18:24,700 --> 01:18:28,280
因此，如果这是每month--
对不起，这是0.03每月$。

1646
01:18:28,280 --> 01:18:29,820
有12个月份按一年。

1647
01:18:29,820 --> 01:18:32,250
因此，有多少数据可能
你在云存储？

1648
01:18:32,250 --> 01:18:37,410
1千兆不是很大，但我
不知道，像1 TB的，

1649
01:18:37,410 --> 01:18:38,460
所以像那些1000。

1650
01:18:38,460 --> 01:18:39,501
这不是所有的东西。

1651
01:18:39,501 --> 01:18:44,382
这是$ 368存储TB级
在亚马逊的云数据。

1652
01:18:44,382 --> 01:18:46,090
那么，什么是一些
在权衡呢？

1653
01:18:46,090 --> 01:18:47,970
它不可能都不错。

1654
01:18:47,970 --> 01:18:52,260
我们今天讲没有什么是
那种没有catch或成本。

1655
01:18:52,260 --> 01:18:55,269
那么，什么是坏的关于移动
一切到云？

1656
01:18:55,269 --> 01:18:56,060
听众：安全。

1657
01:18:56,060 --> 01:18:57,721
DAVID MALAN：OK，你是什么意思？

1658
01:18:57,721 --> 01:18:58,596
听众：[听不清]

1659
01:18:58,596 --> 01:19:01,589

1660
01:19:01,589 --> 01:19:02,630
DAVID MALAN：对，没错。

1661
01:19:02,630 --> 01:19:05,130
而你真的想
一些随机工程师

1662
01:19:05,130 --> 01:19:08,750
在亚马逊，你永远不会有满足
这些计算机的物理访问，

1663
01:19:08,750 --> 01:19:11,010
如果他们真的
不曾想，虚接？

1664
01:19:11,010 --> 01:19:15,070
并且即使在
论软件 - 好了，

1665
01:19:15,070 --> 01:19:17,442
加密可以绝对
保护您免受此。

1666
01:19:17,442 --> 01:19:19,150
所以，如果你在做什么
存储在服务器上

1667
01:19:19,150 --> 01:19:21,470
是encrypted--较少关注。

1668
01:19:21,470 --> 01:19:25,010
>> 但只要一个人具有物理
访问一台机器，加密之外，

1669
01:19:25,010 --> 01:19:26,100
所有的赌注都之类的了。

1670
01:19:26,100 --> 01:19:28,240
你可能知道从昔日的
PC上网用户特别是，

1671
01:19:28,240 --> 01:19:30,360
即使你有那些事
所谓的“BIOS密码”

1672
01:19:30,360 --> 01:19:33,360
当被你的桌面启动了，
你会用密码的提示

1673
01:19:33,360 --> 01:19:35,980
有无关
Windows中，通常可以

1674
01:19:35,980 --> 01:19:39,750
刚打开的机箱
机，发现小小的别针，

1675
01:19:39,750 --> 01:19:42,240
并使用一种叫
跳线和只需连接

1676
01:19:42,240 --> 01:19:45,690
这两条线约1秒钟，
从而完成一个电路。

1677
01:19:45,690 --> 01:19:47,360
这将消除密码。

1678
01:19:47,360 --> 01:19:49,800
>> 所以，当你有一个物理访问
设备，你可以做这样的事情。

1679
01:19:49,800 --> 01:19:51,110
您可以删除硬盘驱动器。

1680
01:19:51,110 --> 01:19:53,060
您可以访问这种方式。

1681
01:19:53,060 --> 01:19:55,442
所以这就是为什么在
收存箱的情况下，

1682
01:19:55,442 --> 01:19:57,900
例如，它是一个小
令人担心的是他们不仅

1683
01:19:57,900 --> 01:20:02,860
有数据时，即使它是
加密，它们也有钥匙。

1684
01:20:02,860 --> 01:20:04,993
其他的顾虑？

1685
01:20:04,993 --> 01:20:08,430
>> 听众：[听不清]

1686
01:20:08,430 --> 01:20:27,740

1687
01:20:27,740 --> 01:20:30,240
DAVID MALAN：是的，这是非常
true--的谷歌，苹果，

1688
01:20:30,240 --> 01:20:31,406
世界的微软。

1689
01:20:31,406 --> 01:20:34,400
而事实上，有多久
你有你的iPhone呢？

1690
01:20:34,400 --> 01:20:35,885
是的，给予或采取。

1691
01:20:35,885 --> 01:20:36,760
听众：[听不清]

1692
01:20:36,760 --> 01:20:37,780
DAVID MALAN：对不起？

1693
01:20:37,780 --> 01:20:39,667
你是那些中谁
有一个iPhone，对不对？

1694
01:20:39,667 --> 01:20:40,250
听众：是的。

1695
01:20:40,250 --> 01:20:42,208
DAVID MALAN多久
你有过你的iPhone？

1696
01:20:42,208 --> 01:20:43,372
听众：[听不清]

1697
01:20:43,372 --> 01:20:45,080
DAVID MALAN：好吧，
苹果从字面上知道

1698
01:20:45,080 --> 01:20:49,030
你去过的地方，每时每刻
当天在过去五年。

1699
01:20:49,030 --> 01:20:51,112
>> 听众：[听不清]

1700
01:20:51,112 --> 01:20:54,626

1701
01:20:54,626 --> 01:20:56,375
DAVID MALAN：这是
一个奇妙的功能。

1702
01:20:56,375 --> 01:20:57,860
听众：[听不清]

1703
01:20:57,860 --> 01:21:00,875
DAVID MALAN：是的，但
权衡是肯定的。

1704
01:21:00,875 --> 01:21:01,750
听众：[听不清]

1705
01:21:01,750 --> 01:21:04,720

1706
01:21:04,720 --> 01:21:07,813
>> DAVID MALAN：是的，这很容易。

1707
01:21:07,813 --> 01:21:08,688
听众：[听不清]

1708
01:21:08,688 --> 01:21:12,040

1709
01:21:12,040 --> 01:21:13,248
DAVID MALAN：其他方面的不足？

1710
01:21:13,248 --> 01:21:16,995
听众：[听不清]

1711
01:21:16,995 --> 01:21:26,151

1712
01:21:26,151 --> 01:21:27,900
DAVID MALAN：Absolutely--
技术上，

1713
01:21:27,900 --> 01:21:31,550
在经济上，它是相当的吸引力，
那种获得规模这些经济体

1714
01:21:31,550 --> 01:21:33,579
并移动到的一切
所谓的云。

1715
01:21:33,579 --> 01:21:35,870
但是，你也许想
去与一些最大的

1716
01:21:35,870 --> 01:21:39,380
鱼，亚马逊，谷歌的，在
Microsofts-- Rackspace公司是非常big--

1717
01:21:39,380 --> 01:21:42,200
和其他几个人，而不是
一定是由夜间飞行乡亲

1718
01:21:42,200 --> 01:21:45,640
对他们来说，这是很容易做到的
这种时下技术。

1719
01:21:45,640 --> 01:21:49,140
而这其中，你可以
每月支付$ 5.99。

1720
01:21:49,140 --> 01:21:50,890
但你肯定会
得到你所支付的。

1721
01:21:50,890 --> 01:21:54,014
>> 当你说[听不清]，这时候
这样的事情五个九上来，

1722
01:21:54,014 --> 01:21:58,017
因此即使技术上
我们不能真正保证99.999，

1723
01:21:58,017 --> 01:22:00,350
我们只建立在某种
点球合同

1724
01:22:00,350 --> 01:22:03,910
这样，如果该确实发生，至少
有一些费用给我们，供应商。

1725
01:22:03,910 --> 01:22:07,950
这就是你通常会
可以让他们同意。

1726
01:22:07,950 --> 01:22:09,590
>> 听众：[听不清]

1727
01:22:09,590 --> 01:22:12,290
>> DAVID MALAN：和
某种类型的祝福

1728
01:22:12,290 --> 01:22:15,630
是，即使我们往下走，对于
例如，甚至某些公司，

1729
01:22:15,630 --> 01:22:17,800
现实的情况是亚马逊，
举例来说，有这么多

1730
01:22:17,800 --> 01:22:21,780
织补客户，知名客户，
经营出某些数据中心

1731
01:22:21,780 --> 01:22:26,224
当东西真的出了问题，
像神以及天气和这样的行为，

1732
01:22:26,224 --> 01:22:29,390
如果有任何形式的一线希望的，
它是你非常好的公司是。

1733
01:22:29,390 --> 01:22:30,680
您的网站可能处于脱机状态。

1734
01:22:30,680 --> 01:22:32,750
但这样是像半
流行的互联网。

1735
01:22:32,750 --> 01:22:36,230
因此，这可以说是一个小
更得人心你的客户

1736
01:22:36,230 --> 01:22:38,780
如果它是更大的互联网
事情不是acme.com的事情。

1737
01:22:38,780 --> 01:22:41,780
但是，这是一个有点欺骗的。

1738
01:22:41,780 --> 01:22:46,740
>> 因此，在其他的事情来看待而言，
只是让我们不排除他人，

1739
01:22:46,740 --> 01:22:51,210
如果你去微软的Azure，他们
同时拥有Linux和Windows的东西

1740
01:22:51,210 --> 01:22:53,190
这相当于亚马逊的。

1741
01:22:53,190 --> 01:22:57,540
如果你去谷歌计算引擎，
它们具有类似的为好。

1742
01:22:57,540 --> 01:23:00,500
而只是为了圆了
这些云产品，

1743
01:23:00,500 --> 01:23:02,762
我会做的一件事提。

1744
01:23:02,762 --> 01:23:04,720
这是一个受欢迎的网站
这是代表

1745
01:23:04,720 --> 01:23:08,590
的一类技术。

1746
01:23:08,590 --> 01:23:12,350
我们刚才讲的那些
约，亚马逊，是IAAS，

1747
01:23:12,350 --> 01:23:17,150
基础设施即服务，你在哪里
排序物理硬件作为服务的。

1748
01:23:17,150 --> 01:23:18,757
还有的SaaS。

1749
01:23:18,757 --> 01:23:20,090
其实，让我记下这些内容，。

1750
01:23:20,090 --> 01:23:23,290

1751
01:23:23,290 --> 01:23:28,190
>> IAAS--基础设施
作为一种服务，SAAS，

1752
01:23:28,190 --> 01:23:31,870
和聚丙烯酸钠，这是
非常混乱的缩写

1753
01:23:31,870 --> 01:23:34,400
那些描述三种
不同类型的东西。

1754
01:23:34,400 --> 01:23:36,400
和自己的缩略语
其实并不重要。

1755
01:23:36,400 --> 01:23:38,360
这是所有的东西，云
我们刚刚一直在讲，

1756
01:23:38,360 --> 01:23:41,570
低层次的东西，在
硬件和存储的虚拟化

1757
01:23:41,570 --> 01:23:44,890
在所谓的云，无论是
亚马逊，微软，谷歌或其他。

1758
01:23:44,890 --> 01:23:47,270
>> 软件作为service--
我们所有人的一种使用。

1759
01:23:47,270 --> 01:23:49,810
如果你使用谷歌企业应用套件
对于Gmail或日历，

1760
01:23:49,810 --> 01:23:52,530
这些基于网络的
应用程序，10年前我们

1761
01:23:52,530 --> 01:23:55,560
会对双点击图标
我们的桌面，软件即服务

1762
01:23:55,560 --> 01:23:57,400
现在真正的Web应用程序。

1763
01:23:57,400 --> 01:24:00,110
和平台即
服务种类的依赖。

1764
01:24:00,110 --> 01:24:03,140
>> 其中的一个例子我在这里给你
在云computing--的上下文

1765
01:24:03,140 --> 01:24:06,250
有一家公司是相当
受追捧，Heroku的。

1766
01:24:06,250 --> 01:24:08,940
而且他们是一个服务，
一个平台，如果你愿意，

1767
01:24:08,940 --> 01:24:11,730
运行上的顶部
亚马逊的基础设施。

1768
01:24:11,730 --> 01:24:15,800
他们只是使其更容易
对于开发人员和工程师

1769
01:24:15,800 --> 01:24:18,330
获得基于Web的应用程序在线。

1770
01:24:18,330 --> 01:24:22,170
>> 这是一个痛苦，最初，使用
亚马逊网络服务和其他东西。

1771
01:24:22,170 --> 01:24:24,170
因为你确实有
认识和了解

1772
01:24:24,170 --> 01:24:27,617
有关数据库和Web服务器和
负载平衡器和所有的东西

1773
01:24:27,617 --> 01:24:28,450
我刚才讲的。

1774
01:24:28,450 --> 01:24:32,780
由于亚马逊已经做不
隐藏这些设计挑战。

1775
01:24:32,780 --> 01:24:35,790
他们刚刚他们虚拟化
然后将它们移动到浏览器中，

1776
01:24:35,790 --> 01:24:37,770
到软件，而不是硬件。

1777
01:24:37,770 --> 01:24:43,020
>> 但是，像Heroku和其他公司
PAAS提供商，平台即服务，

1778
01:24:43,020 --> 01:24:46,900
他们利用这些基本面准系统
我们刚才讲了，

1779
01:24:46,900 --> 01:24:50,340
和他们建立更容易
在它的上面使用的软件

1780
01:24:50,340 --> 01:24:54,241
因此，如果你想获得一个基于网络的
在线申请这些天，

1781
01:24:54,241 --> 01:24:55,990
你肯定要
知道如何编程。

1782
01:24:55,990 --> 01:25:00,280
你需要知道Java或Python或PHP
或Ruby或一群其他语言。

1783
01:25:00,280 --> 01:25:02,180
>> 但你也需要把它放在一个地方。

1784
01:25:02,180 --> 01:25:04,790
而我们前面谈到
得到一个网络托管公司。

1785
01:25:04,790 --> 01:25:08,630
这有点类似2000年代中期的
方法在网上得到的东西。

1786
01:25:08,630 --> 01:25:12,140
现在你可能会改为雇人
像Heroku的几元钱一个月。

1787
01:25:12,140 --> 01:25:15,370
而实际上，一旦你
做了一些初始配置，

1788
01:25:15,370 --> 01:25:18,704
更新你的网站，你
只是在一个窗口中键入的命令。

1789
01:25:18,704 --> 01:25:21,370
而且不管你的代码已经写
在这里你的笔记本电脑立刻

1790
01:25:21,370 --> 01:25:24,350
被分配给任何数目的
在云服务器。

1791
01:25:24,350 --> 01:25:26,440
>> 和Heroku的需要照顾
所有的复杂性。

1792
01:25:26,440 --> 01:25:28,930
他们的身影所有数据库
的东西，所有的负载均衡，

1793
01:25:28,930 --> 01:25:31,480
所有我们所头痛的
只是写在黑板上，

1794
01:25:31,480 --> 01:25:33,320
并隐藏所有的你们。

1795
01:25:33,320 --> 01:25:36,170
作为回报，你只
他们支付多一点。

1796
01:25:36,170 --> 01:25:39,810
所以，你有这些基础设施为
一个服务，平台作为服务，

1797
01:25:39,810 --> 01:25:41,400
然后软件即服务。

1798
01:25:41,400 --> 01:25:45,390
它是，再次，这
抽象或分层。

1799
01:25:45,390 --> 01:25:51,187
>> 云上的任何问题或
建设自己的基础设施？

1800
01:25:51,187 --> 01:25:52,270
好吧，这是一个很大。

1801
01:25:52,270 --> 01:25:54,200
我们为什么不继续前进，
在这里把我们休息15分钟。

1802
01:25:54,200 --> 01:25:57,241
我们会回来的几个新概念
和一点动手的机会

1803
01:25:57,241 --> 01:25:59,110
前晚上结束。

1804
01:25:59,110 --> 01:26:00,332

