1
00:00:00,000 --> 00:00:00,629

2
00:00:00,629 --> 00:00:02,170
DAVID Malan: Baiklah, selamat datang kembali.

3
00:00:02,170 --> 00:00:06,520
Sebelum kita menyelam ke komputasi awan,
Saya pikir saya akan berhenti sejenak

4
00:00:06,520 --> 00:00:11,740
jika ada pertanyaan yang beredar
atau topik yang muncul saat makan siang

5
00:00:11,740 --> 00:00:13,834
yang sekarang mungkin menarik.

6
00:00:13,834 --> 00:00:18,470

7
00:00:18,470 --> 00:00:21,410
>> AUDIENCE: [tidak terdengar]

8
00:00:21,410 --> 00:00:22,090
>> DAVID Malan: OK.

9
00:00:22,090 --> 00:00:23,555
Oh oke.

10
00:00:23,555 --> 00:00:24,430
AUDIENCE: [tidak terdengar]

11
00:00:24,430 --> 00:00:29,880

12
00:00:29,880 --> 00:00:31,420
>> DAVID Malan: Tidak, tentu saja.

13
00:00:31,420 --> 00:00:35,180
OK, baik mudah-mudahan semua Anda
masalah timbul dalam beberapa jam ke depan

14
00:00:35,180 --> 00:00:36,410
dan besok terutama.

15
00:00:36,410 --> 00:00:42,700
Tapi mari kita lihat, kemudian, di mana
diskusi terakhir tentang pengaturan

16
00:00:42,700 --> 00:00:45,730
website memimpin, lebih umum
ketika datang ke komputasi awan,

17
00:00:45,730 --> 00:00:48,210
menyiapkan arsitektur server,
jenis keputusan

18
00:00:48,210 --> 00:00:50,800
bahwa insinyur dan
pengembang dan manajer

19
00:00:50,800 --> 00:00:53,210
perlu membuat ketika datang
untuk melakukan lebih dari sekedar

20
00:00:53,210 --> 00:00:56,550
mendaftar untuk $ 10 per web host bulan
ketika Anda benar-benar ingin membangun

21
00:00:56,550 --> 00:00:57,550
infrastruktur sendiri.

22
00:00:57,550 --> 00:01:00,400
Dan kami akan mencoba untuk mengikat kembali ini,
misalnya, untuk Dropbox dan lain-lain

23
00:01:00,400 --> 00:01:01,350
seperti mereka.

24
00:01:01,350 --> 00:01:06,250
>> Jadi mari kita mulai untuk mempertimbangkan
masalah apa yang timbul sebagai bisnis

25
00:01:06,250 --> 00:01:09,390
mendapat baik dan masalah yang baik timbul.

26
00:01:09,390 --> 00:01:14,720
Jadi dalam kasus yang sangat sederhana memiliki
beberapa perusahaan yang memiliki web server,

27
00:01:14,720 --> 00:01:21,470
Anda mungkin memiliki, katakanlah, server yang
kami hanya akan menarik yang terlihat seperti ini.

28
00:01:21,470 --> 00:01:25,620
Dan hari ini, paling servers-- dan mari
benar-benar menempatkan gambar untuk ini hanya begitu

29
00:01:25,620 --> 00:01:27,680
bahwa itu sedikit kurang samar-samar.

30
00:01:27,680 --> 00:01:31,510
>> Jadi rak Dell server--
kembali pada hari, ada

31
00:01:31,510 --> 00:01:33,730
yang komputer mainframe
yang mengambil seluruh kamar.

32
00:01:33,730 --> 00:01:35,710
Hari-hari ini, jika Anda
untuk mendapatkan server, itu

33
00:01:35,710 --> 00:01:38,520
mungkin terlihat sedikit sesuatu seperti ini.

34
00:01:38,520 --> 00:01:41,760
Server diukur dalam apa
disebut unit rak, atau Rus.

35
00:01:41,760 --> 00:01:45,280
Dan satu RU adalah 1,5 inci,
yang merupakan standar industri.

36
00:01:45,280 --> 00:01:49,300
Jadi ini terlihat seperti server dua RU.

37
00:01:49,300 --> 00:01:51,240
Jadi 3 inci.

38
00:01:51,240 --> 00:01:54,430
Dan mereka umumnya 19 inci,
yang berarti semua hal semacam ini

39
00:01:54,430 --> 00:01:55,160
distandarisasi.

40
00:01:55,160 --> 00:01:59,420
>> Jadi jika Anda melihat di center-- Data
tidak hanya pada satu server, tetapi mari kita

41
00:01:59,420 --> 00:02:02,110
lihatlah Google
pusat data dan melihat apakah kita

42
00:02:02,110 --> 00:02:04,280
melihat gambar yang bagus di Google Images.

43
00:02:04,280 --> 00:02:09,090
Hal ini jauh lebih baik menyala dari Anda
biasanya akan menemukan, dan banyak

44
00:02:09,090 --> 00:02:14,900
seksi mencari sebagai hasilnya. Tapi
ini adalah apa yang tampak seperti pasangan

45
00:02:14,900 --> 00:02:17,380
ratus server semua
tentang itu ukuran yang sama,

46
00:02:17,380 --> 00:02:21,450
sebenarnya, di rak setelah rak setelah
rak setelah rak di pusat data.

47
00:02:21,450 --> 00:02:26,150
>> Sesuatu seperti ini-- ini mungkin juga
menjadi Google, karena saya googled Google.

48
00:02:26,150 --> 00:02:28,330
Tapi bisa menjadi wakil
lebih umum

49
00:02:28,330 --> 00:02:31,480
sebuah pusat data di mana banyak
perusahaan biasanya co-terletak.

50
00:02:31,480 --> 00:02:34,940
Dan co-terletak umumnya berarti
bahwa Anda pergi ke tempat seperti Equinix

51
00:02:34,940 --> 00:02:40,280
atau vendor lain yang memiliki besar
gudang yang memiliki banyak kekuasaan,

52
00:02:40,280 --> 00:02:42,950
banyak pendinginan, mudah-mudahan
banyak keamanan,

53
00:02:42,950 --> 00:02:47,910
dan kandang individu melampirkan rak
server, dan Anda baik menyewa rak

54
00:02:47,910 --> 00:02:49,150
atau Anda membawa rak di.

55
00:02:49,150 --> 00:02:51,420
>> Dan masing-masing perusahaan,
startups terutama,

56
00:02:51,420 --> 00:02:54,820
akan memiliki beberapa jenis biometrik
untuk masuk ke kandang mereka, atau kunci,

57
00:02:54,820 --> 00:02:55,640
atau kartu kunci.

58
00:02:55,640 --> 00:02:56,990
Anda membuka pintu.

59
00:02:56,990 --> 00:03:00,354
Dan dalam hanya ada
cuplikan jejak persegi

60
00:03:00,354 --> 00:03:03,270
bahwa Anda membayar untuk, dalam
yang Anda dapat menempatkan apa pun yang Anda inginkan.

61
00:03:03,270 --> 00:03:04,770
>> Dan Anda biasanya membayar untuk kekuasaan.

62
00:03:04,770 --> 00:03:06,920
Dan Anda membayar untuk jejak kaki.

63
00:03:06,920 --> 00:03:08,770
Dan kemudian Anda membayar
diri untuk server

64
00:03:08,770 --> 00:03:10,560
bahwa Anda membawa ke ruang angkasa itu.

65
00:03:10,560 --> 00:03:12,850
Dan apa yang kemudian Anda memiliki
pilihan untuk lakukan adalah membayar seseorang

66
00:03:12,850 --> 00:03:15,120
untuk konektivitas layanan internet Anda.

67
00:03:15,120 --> 00:03:17,240
Anda dapat membayar sejumlah
vendor, semuanya

68
00:03:17,240 --> 00:03:19,210
biasanya datang ke dalam pusat data.

69
00:03:19,210 --> 00:03:22,740
>> Namun pertanyaan menarik sebenarnya adalah,
apa yang sebenarnya terjadi di rak mereka?

70
00:03:22,740 --> 00:03:25,020
mungkin mereka semua sangat baik
terlihat seperti apa yang kami lihat.

71
00:03:25,020 --> 00:03:27,870
Tapi mereka melakukan fungsi yang berbeda
dan mungkin perlu melakukan hal yang berbeda.

72
00:03:27,870 --> 00:03:29,661
Dan mari kita sebenarnya
memotivasi diskusi ini

73
00:03:29,661 --> 00:03:35,370
dengan pertanyaan, apa masalahnya
mulai muncul jika Anda berhasil?

74
00:03:35,370 --> 00:03:37,900
>> Jadi Anda punya website
bahwa Anda telah membangun.

75
00:03:37,900 --> 00:03:40,450
Dan mungkin itu menjual widget
atau semacam itu.

76
00:03:40,450 --> 00:03:43,620
Dan Anda telah melakukan dengan sangat baik
dengan penjualan widget online.

77
00:03:43,620 --> 00:03:48,490
Dan Anda mulai mengalami
beberapa gejala, website Anda.

78
00:03:48,490 --> 00:03:51,070
Apa mungkin beberapa
gejala teknis

79
00:03:51,070 --> 00:03:54,040
yang pengguna melaporkan sebagai bisnis
tumbuh dan berkembang pesat

80
00:03:54,040 --> 00:03:59,482
dan website Anda adalah
manfaat dari itu?

81
00:03:59,482 --> 00:04:02,690
>> AUDIENCE: [tidak terdengar]

82
00:04:02,690 --> 00:04:05,910

83
00:04:05,910 --> 00:04:07,050
>> DAVID Malan: Ya, persis.

84
00:04:07,050 --> 00:04:10,040
Jadi Anda mungkin memiliki
perlambatan dari situs Anda.

85
00:04:10,040 --> 00:04:11,240
Dan mengapa yang mungkin terjadi?

86
00:04:11,240 --> 00:04:12,660
Nah, jika kita asumsikan, untuk
kepentingan diskusi

87
00:04:12,660 --> 00:04:15,160
sekarang, bahwa Anda berada di salah satu
ini web host komersial

88
00:04:15,160 --> 00:04:17,860
yang kita bicarakan sebelum makan siang,
bahwa Anda membayar beberapa jumlah dolar

89
00:04:17,860 --> 00:04:20,859
untuk bulan per, dan Anda sudah dibayar
untuk biaya tahunan domain Anda

90
00:04:20,859 --> 00:04:25,300
nama, bahwa web host mungkin
overselling sumber daya mereka

91
00:04:25,300 --> 00:04:26,050
sampai batas tertentu.

92
00:04:26,050 --> 00:04:29,000
Jadi Anda mungkin memiliki username
dan password pada server mereka.

93
00:04:29,000 --> 00:04:32,410
Tapi begitu mungkin beberapa lainnya, atau beberapa
selusin lainnya, atau bahkan mungkin beberapa

94
00:04:32,410 --> 00:04:33,980
ratus lainnya, pengguna.

95
00:04:33,980 --> 00:04:37,190
>> Dan situs hidup secara fisik
pada server yang sama.

96
00:04:37,190 --> 00:04:38,340
Mengapa ini mungkin?

97
00:04:38,340 --> 00:04:40,680
Nah ini hari, server
seperti ini biasanya

98
00:04:40,680 --> 00:04:44,610
memiliki beberapa hard drive, mungkin
sebanyak enam atau lebih hard drive,

99
00:04:44,610 --> 00:04:47,665
masing-masing yang mungkin sebanyak
sebagai 4 terabyte hari ini.

100
00:04:47,665 --> 00:04:52,140
Jadi Anda mungkin memiliki 24 terabyte ruang
hanya satu server kecil seperti ini.

101
00:04:52,140 --> 00:04:55,710
>> Dan bahkan jika Anda mencuri beberapa ruang yang
untuk redundansi, untuk tujuan backup,

102
00:04:55,710 --> 00:04:57,110
itu masih cukup banyak ruang.

103
00:04:57,110 --> 00:05:00,070
Dan tentu saja, sebuah situs web yang khas
tidak membutuhkan banyak ruang.

104
00:05:00,070 --> 00:05:03,100
Hanya mendaftar pengguna
dan menyimpan log dari perintah

105
00:05:03,100 --> 00:05:04,640
tidak mengambil semua yang banyak ruang.

106
00:05:04,640 --> 00:05:07,550
Jadi Anda dapat melakukan partisi cukup
sedikit dan memberikan setiap pengguna

107
00:05:07,550 --> 00:05:08,980
hanya sepotong kecil dari itu.

108
00:05:08,980 --> 00:05:11,310
>> Sementara itu, komputer
seperti ini hari ini

109
00:05:11,310 --> 00:05:16,370
biasanya memiliki beberapa CPUs-- bukan hanya
satu, mungkin dua, mungkin empat, mungkin 16,

110
00:05:16,370 --> 00:05:17,149
atau bahkan lebih.

111
00:05:17,149 --> 00:05:18,940
Dan masing-masing CPU
memiliki sesuatu yang disebut

112
00:05:18,940 --> 00:05:22,230
inti, yang merupakan jenis seperti
otak dalam otak.

113
00:05:22,230 --> 00:05:26,800
Jadi sebenarnya yang paling semua orang di sini dengan
laptop modern memiliki mungkin dual core

114
00:05:26,800 --> 00:05:32,030
atau CPU-- quad core dan mungkin hanya
salah satu CPU dalam sebuah laptop hari ini.

115
00:05:32,030 --> 00:05:35,030
Tapi komputer desktop
dan komputer rak seperti

116
00:05:35,030 --> 00:05:39,000
ini mungkin memiliki beberapa
lebih CPU, dan pada gilirannya core.

117
00:05:39,000 --> 00:05:44,180
>> Dan terus terang, bahkan di Mac dan PC dari kami
hari ini, Anda tidak benar-benar membutuhkan dual core

118
00:05:44,180 --> 00:05:46,550
atau quad core untuk memeriksa email Anda.

119
00:05:46,550 --> 00:05:49,090
Apakah ada hambatan saat
datang untuk menggunakan komputer,

120
00:05:49,090 --> 00:05:51,925
Anda manusia mungkin adalah
Hal paling lambat tentang komputer itu.

121
00:05:51,925 --> 00:05:54,800
Dan Anda tidak akan dapat
periksa email Anda lebih cepat jika Anda

122
00:05:54,800 --> 00:05:57,170
memiliki empat kali lebih banyak CPU atau core.

123
00:05:57,170 --> 00:05:59,700
>> Tapi sama jenis
dari sejati server.

124
00:05:59,700 --> 00:06:02,970
Salah satu situs web tunggal mungkin tidak
tentu membutuhkan lebih dari satu

125
00:06:02,970 --> 00:06:05,756
CPU atau satu inti, satu
otak kecil di dalam melakukan

126
00:06:05,756 --> 00:06:07,380
semua pemikiran dan pengolahan.

127
00:06:07,380 --> 00:06:10,561
Sehingga produsen harus sama
mulai mengiris sumber daya

128
00:06:10,561 --> 00:06:13,435
sehingga mungkin website Anda mendapat satu
inti, situs Web Anda mendapatkan satu inti,

129
00:06:13,435 --> 00:06:15,290
atau mungkin kita berbagi satu inti tersebut.

130
00:06:15,290 --> 00:06:16,820
Kami juga berbagi ruang disk.

131
00:06:16,820 --> 00:06:20,000
Dan kami juga sedang berbagi RAM,
atau Random Access Memory

132
00:06:20,000 --> 00:06:22,520
dari sebelumnya, yang
ada juga sejumlah terbatas.

133
00:06:22,520 --> 00:06:23,420
>> Dan itulah kuncinya.

134
00:06:23,420 --> 00:06:25,960
Tidak peduli seberapa mahal
komputer itu,

135
00:06:25,960 --> 00:06:28,440
masih ada yang terbatas
jumlah sumber daya di dalamnya.

136
00:06:28,440 --> 00:06:31,360
Dan jadi lebih dan lebih Anda
mencoba untuk mengkonsumsi sumber daya,

137
00:06:31,360 --> 00:06:32,850
hal-hal yang lebih lambat mungkin menjadi.

138
00:06:32,850 --> 00:06:34,646
Tapi kenapa?

139
00:06:34,646 --> 00:06:39,352
Mengapa hal akan melambat sebagai
gejala server yang kelebihan beban?

140
00:06:39,352 --> 00:06:40,060
Apa yang terjadi?

141
00:06:40,060 --> 00:06:42,895

142
00:06:42,895 --> 00:06:46,388
>> AUDIENCE: [tidak terdengar]

143
00:06:46,388 --> 00:06:54,036

144
00:06:54,036 --> 00:06:55,160
DAVID Malan: Ya, persis.

145
00:06:55,160 --> 00:06:57,730
Saya mengusulkan sebelumnya bahwa
RAM adalah jenis memori.

146
00:06:57,730 --> 00:07:00,290
Ini volatile, dimana itu
dimana aplikasi dan data

147
00:07:00,290 --> 00:07:01,890
disimpan ketika mereka sedang digunakan.

148
00:07:01,890 --> 00:07:03,990
Dan jadi karena ada
hanya sejumlah terbatas

149
00:07:03,990 --> 00:07:05,790
hal yang tampaknya dapat lakukan sekaligus.

150
00:07:05,790 --> 00:07:07,740
Dan itu juga lebih cepat,
yang merupakan hal yang baik.

151
00:07:07,740 --> 00:07:09,990
Tapi itu juga lebih mahal,
yang merupakan hal yang buruk.

152
00:07:09,990 --> 00:07:15,376
Dan itu juga karena hadir di bawah
jumlah dari ruang disk, hard disk

153
00:07:15,376 --> 00:07:16,750
ruang, yang cenderung lebih murah.

154
00:07:16,750 --> 00:07:18,830
>> Dengan kata lain, Anda
mungkin memiliki 4 terabyte

155
00:07:18,830 --> 00:07:20,440
ruang disk di komputer Anda.

156
00:07:20,440 --> 00:07:24,300
Tapi Anda mungkin memiliki 4
gigabyte, atau 64 gigabyte,

157
00:07:24,300 --> 00:07:29,180
di urutan besarnya, faktor
1.000 kurang, RAM di komputer Anda.

158
00:07:29,180 --> 00:07:30,320
Jadi, apa komputer lakukan?

159
00:07:30,320 --> 00:07:32,236
Nah, anggaplah bahwa Anda
miliki 64 gigabyte

160
00:07:32,236 --> 00:07:35,110
RAM di server seperti ini, yang
akan cukup umum, jika tidak rendah

161
00:07:35,110 --> 00:07:36,140
hari ini.

162
00:07:36,140 --> 00:07:39,220
Tapi anggaplah Anda memiliki begitu banyak
pengguna melakukan begitu banyak hal

163
00:07:39,220 --> 00:07:42,480
bahwa Anda jenis jenis
perlu 65 gigabyte memori

164
00:07:42,480 --> 00:07:44,960
untuk menangani semua itu
penggunaan simultan?

165
00:07:44,960 --> 00:07:47,580
>> Nah, Anda hanya bisa mengatakan,
Maaf, beberapa jumlah pengguna

166
00:07:47,580 --> 00:07:48,840
tidak bisa mengakses situs tersebut.

167
00:07:48,840 --> 00:07:51,410
Dan itu adalah mengukur
of last resort, tentu.

168
00:07:51,410 --> 00:07:55,570
Atau Anda, sebagai operasi
sistem, seperti Windows atau Mac

169
00:07:55,570 --> 00:07:59,480
OS atau Linux atau Solaris atau
jumlah OS lainnya di server itu,

170
00:07:59,480 --> 00:08:01,280
hanya bisa memutuskan, Anda tahu apa?

171
00:08:01,280 --> 00:08:03,780
Saya hanya memiliki 64 gigabyte RAM.

172
00:08:03,780 --> 00:08:05,440
Saya jenis perlu 65.

173
00:08:05,440 --> 00:08:06,210
Sehingga Anda tahu apa?

174
00:08:06,210 --> 00:08:10,030
Aku akan mengambil 1 gigabyte
senilai data di RAM

175
00:08:10,030 --> 00:08:15,240
yang paling baru diakses
dan hanya memindahkannya ke disk sementara,

176
00:08:15,240 --> 00:08:19,050
harfiah menyalin dari puasa
memori ke memori yang lebih lambat

177
00:08:19,050 --> 00:08:24,000
sehingga saya kemudian bisa mengatasinya
65 gigabyte kebutuhan memori,

178
00:08:24,000 --> 00:08:25,650
melakukan beberapa perhitungan di atasnya.

179
00:08:25,650 --> 00:08:28,580
Kemudian ketika aku sudah selesai melakukan hal itu,
Aku hanya akan bergerak pada disk,

180
00:08:28,580 --> 00:08:35,030
bergerak yang RAM lain saya sementara menempatkan
pada disk kembali ke dalam perangkat keras yang sebenarnya

181
00:08:35,030 --> 00:08:37,280
sehingga aku agak multitasking.

182
00:08:37,280 --> 00:08:41,190
>> Jadi aku semacam meletakkan hal-hal
sementara di ruang lambat ini

183
00:08:41,190 --> 00:08:44,159
jadi saya menciptakan ilusi
penanganan semua orang.

184
00:08:44,159 --> 00:08:45,290
Tapi ada perlambatan.

185
00:08:45,290 --> 00:08:45,790
Mengapa?

186
00:08:45,790 --> 00:08:49,380
Nah, di dalam hard ini
disk hari ini adalah apa?

187
00:08:49,380 --> 00:08:52,030
Sebaliknya, apa yang membuat hard
berkendara yang berbeda dari RAM

188
00:08:52,030 --> 00:08:53,495
sebaik Anda tahu sekarang?

189
00:08:53,495 --> 00:08:56,750
>> AUDIENCE: [tidak terdengar]

190
00:08:56,750 --> 00:08:59,540

191
00:08:59,540 --> 00:09:01,445
>> DAVID Malan: OK, benar.

192
00:09:01,445 --> 00:09:02,320
AUDIENCE: [tidak terdengar]

193
00:09:02,320 --> 00:09:05,440

194
00:09:05,440 --> 00:09:06,750
>> DAVID Malan: Jadi sangat benar.

195
00:09:06,750 --> 00:09:13,709
Dan itu adalah efek samping atau fitur
fakta RAM yang memang lebih cepat.

196
00:09:13,709 --> 00:09:15,750
Dan karena itu Anda ingin
menggunakannya untuk digunakan saat ini.

197
00:09:15,750 --> 00:09:17,290
Dan disk lebih lambat.

198
00:09:17,290 --> 00:09:19,630
Tapi itu permanen, atau nonvolatile.

199
00:09:19,630 --> 00:09:21,480
Jadi Anda menggunakannya untuk penyimpanan jangka panjang.

200
00:09:21,480 --> 00:09:25,160
Tapi dalam hal
pelaksanaan, jika saya melihat ke atas

201
00:09:25,160 --> 00:09:29,297
apa yang disebut DIMM, Dual Inline Memory
Modul, ini adalah apa yang sepotong RAM

202
00:09:29,297 --> 00:09:30,380
mungkin biasanya terlihat seperti.

203
00:09:30,380 --> 00:09:35,050
>> Jadi dalam Mac-- kami itu bug.

204
00:09:35,050 --> 00:09:41,080
Dalam Mac dan PC, desktop kita
komputer akan memiliki batang memori,

205
00:09:41,080 --> 00:09:43,220
Anda akan memanggil mereka,
atau DIMM, atau SIMM kembali

206
00:09:43,220 --> 00:09:44,970
hari, memori
yang terlihat seperti ini.

207
00:09:44,970 --> 00:09:47,900
laptop kita mungkin memiliki hal-hal yang
adalah sepertiga ukuran atau setengah ukuran.

208
00:09:47,900 --> 00:09:50,066
Mereka sedikit lebih kecil,
tapi sedikit idea-- yang sama

209
00:09:50,066 --> 00:09:52,110
potongan silikon hijau
wafer atau plastik yang

210
00:09:52,110 --> 00:09:56,237
memiliki sedikit chip hitam pada mereka dengan banyak
kabel interkoneksi segalanya.

211
00:09:56,237 --> 00:09:58,820
Anda mungkin memiliki sejumlah besar
dalam ini dari komputer Anda.

212
00:09:58,820 --> 00:10:00,903
Tapi takeaway di sini adalah
itu sepenuhnya elektronik.

213
00:10:00,903 --> 00:10:03,130
Hanya ada elektron
mengalir pada perangkat ini.

214
00:10:03,130 --> 00:10:08,170
Sebaliknya, jika kita melihat
bagian dalam hard drive

215
00:10:08,170 --> 00:10:10,760
dan menarik gambar
di sini, Anda akan sebaliknya

216
00:10:10,760 --> 00:10:16,600
melihat sesuatu seperti ini,
yang tidak memiliki listrik

217
00:10:16,600 --> 00:10:17,950
akan melalui itu akhirnya.

218
00:10:17,950 --> 00:10:20,265
Tapi apa juga melompat keluar
pada Anda tentang hal ini?

219
00:10:20,265 --> 00:10:21,140
AUDIENCE: [tidak terdengar]

220
00:10:21,140 --> 00:10:22,710
DAVID Malan: Ya, ada
Rupanya bagian yang bergerak.

221
00:10:22,710 --> 00:10:25,210
Ini semacam seperti rekor lama
player atau pemain phonograph.

222
00:10:25,210 --> 00:10:26,200
Dan itu cukup banyak adalah.

223
00:10:26,200 --> 00:10:28,950
Ini sedikit lebih menarik daripada itu--
sedangkan pemain fonograf digunakan

224
00:10:28,950 --> 00:10:33,150
alur dalam catatan, ini benar-benar
menggunakan partikel magnetik kecil kecil

225
00:10:33,150 --> 00:10:34,550
bahwa kita tidak bisa melihat.

226
00:10:34,550 --> 00:10:38,520
Tetapi jika partikel magnetik kecil
terlihat seperti ini, itu dianggap sebagai 1.

227
00:10:38,520 --> 00:10:41,230
Dan jika terlihat seperti ini,
utara-selatan bukan selatan-utara,

228
00:10:41,230 --> 00:10:42,252
itu mungkin 0.

229
00:10:42,252 --> 00:10:45,460
Dan kita akan lihat besok bagaimana kita bisa membangun
dari itu untuk hal-hal yang lebih menarik.

230
00:10:45,460 --> 00:10:47,590
>> Tapi apa pun itu
harus secara fisik bergerak

231
00:10:47,590 --> 00:10:51,010
adalah pasti akan pergi lebih lambat
dari kecepatan cahaya,

232
00:10:51,010 --> 00:10:53,250
yang dalam teori adalah apa
elektron mungkin mengalir pada,

233
00:10:53,250 --> 00:10:54,620
meskipun realistis tidak cukup.

234
00:10:54,620 --> 00:10:56,900
perangkat-- jadi mekanik jauh lebih lambat.

235
00:10:56,900 --> 00:10:58,320
Tapi mereka lebih murah.

236
00:10:58,320 --> 00:11:00,944
Dan Anda bisa muat begitu banyak
Data lebih dalam diri mereka.

237
00:11:00,944 --> 00:11:03,110
Jadi fakta bahwa ada
ada di sesuatu dunia

238
00:11:03,110 --> 00:11:06,840
disebut memori virtual,
menggunakan hard disk seperti ini

239
00:11:06,840 --> 00:11:10,160
seolah-olah RAM
transparan kepada pengguna,

240
00:11:10,160 --> 00:11:15,320
hanya dengan memindahkan data
dari RAM ke hard disk,

241
00:11:15,320 --> 00:11:18,714
kemudian bergerak kembali ketika Anda membutuhkannya
lagi, menciptakan perlambatan.

242
00:11:18,714 --> 00:11:21,380
Karena Anda benar-benar harus
menyalin dari satu tempat ke tempat lain.

243
00:11:21,380 --> 00:11:25,100
Dan hal yang Anda menyalin ke dan
dari sebenarnya lebih lambat dari RAM

244
00:11:25,100 --> 00:11:26,150
di mana Anda ingin menjadi.

245
00:11:26,150 --> 00:11:29,030
>> Alternatif solusi di sini-
jika Anda tidak seperti itu melambat,

246
00:11:29,030 --> 00:11:32,014
dan memori virtual Anda
semacam sedang overtaxed,

247
00:11:32,014 --> 00:11:33,680
apa solusi lain untuk masalah ini?

248
00:11:33,680 --> 00:11:35,260
>> AUDIENCE: [tidak terdengar]

249
00:11:35,260 --> 00:11:37,260
DAVID Malan: Yah,
meningkatkan memori virtual

250
00:11:37,260 --> 00:11:39,135
akan membiarkan kami melakukan ini pada
skala yang lebih besar.

251
00:11:39,135 --> 00:11:43,540
Kami bisa menangani 66 gigabyte layak
kebutuhan memori, atau 67 gigabyte.

252
00:11:43,540 --> 00:11:45,830
Tapi kira saya tidak suka
turun lambat ini, pada kenyataannya

253
00:11:45,830 --> 00:11:49,380
Saya ingin mematikan maya
memori jika yang bahkan mungkin,

254
00:11:49,380 --> 00:11:52,350
apa lagi yang bisa saya melemparkan
masalah ini untuk mengatasinya,

255
00:11:52,350 --> 00:11:56,900
di mana saya ingin menangani lebih banyak pengguna
dan persyaratan memori lebih

256
00:11:56,900 --> 00:11:59,100
dari saya secara fisik miliki saat ini?

257
00:11:59,100 --> 00:12:02,600
>> AUDIENCE: [tidak terdengar]

258
00:12:02,600 --> 00:12:04,800

259
00:12:04,800 --> 00:12:06,140
>> DAVID Malan: Sayangnya tidak ada.

260
00:12:06,140 --> 00:12:09,850
Jadi CPU dan core mereka
dalam adalah sumber daya yang terbatas.

261
00:12:09,850 --> 00:12:13,280
Dan tidak ada analog dalam konteks itu.

262
00:12:13,280 --> 00:12:14,990
Pertanyaan bagus, meskipun.

263
00:12:14,990 --> 00:12:19,270
Jadi hanya untuk menjadi jelas, juga, jika
dalam komputer ini,

264
00:12:19,270 --> 00:12:24,510
katakanlah, tongkat RAM yang terlihat
seperti ini-- dan jadi kita sebut RAM ini.

265
00:12:24,510 --> 00:12:27,070
Dan di sini adalah hard disk drive.

266
00:12:27,070 --> 00:12:30,130
Dan aku hanya akan menarik ini
pictorially sebagai lingkaran kecil.

267
00:12:30,130 --> 00:12:33,740
Ada 0 dan 1 di kedua
Data these--, kami akan generalisasi sebagai.

268
00:12:33,740 --> 00:12:38,030
>> Dan pada dasarnya, jika pengguna
menjalankan aplikasi seperti,

269
00:12:38,030 --> 00:12:46,070
katakanlah, sebuah situs web yang membutuhkan ini
banyak RAM per pengguna, apa yang saya usulkan,

270
00:12:46,070 --> 00:12:48,380
dengan cara hal ini
disebut memori virtual,

271
00:12:48,380 --> 00:12:53,990
adalah untuk bergerak hanya sementara
yang di sini sehingga sekarang saya

272
00:12:53,990 --> 00:12:57,810
dapat memindahkan memori orang lain
persyaratan di sana.

273
00:12:57,810 --> 00:13:00,420
Dan kemudian ketika itu selesai,
Saya dapat menyalin ini kembali atas

274
00:13:00,420 --> 00:13:04,550
dan ini berlaku di sini, sehingga bergerak
apa yang saya inginkan di sana tempat lain

275
00:13:04,550 --> 00:13:05,050
sama sekali.

276
00:13:05,050 --> 00:13:07,820
>> Jadi hanya ada banyak
switcheroo, adalah takeaway di sini.

277
00:13:07,820 --> 00:13:12,380
Jadi, jika Anda tidak suka ini, dan Anda tidak
ingin menempatkan sesuatu pada hard drive,

278
00:13:12,380 --> 00:13:16,440
apa semacam jelas
solusi bisnis seseorang

279
00:13:16,440 --> 00:13:19,684
untuk masalah, atau insinyur
solusi, hal itu juga?

280
00:13:19,684 --> 00:13:21,950
>> AUDIENCE: [tidak terdengar]

281
00:13:21,950 --> 00:13:24,750
>> DAVID Malan: Ya, maksudku benar
membuang uang pada masalah.

282
00:13:24,750 --> 00:13:27,541
Dan sebenarnya, ini adalah sempurna
Segue ke beberapa tingkat yang lebih tinggi

283
00:13:27,541 --> 00:13:28,870
diskusi komputasi awan.

284
00:13:28,870 --> 00:13:31,390
Karena banyak itu dimotivasi
oleh keputusan keuangan,

285
00:13:31,390 --> 00:13:33,040
bahkan tidak perlu teknologi.

286
00:13:33,040 --> 00:13:37,830
Jika 64 gigs RAM terlalu sedikit, baik,
mengapa tidak mendapatkan 128 gigabyte RAM?

287
00:13:37,830 --> 00:13:40,440
Mengapa tidak mendapatkan 256 gigabyte RAM?

288
00:13:40,440 --> 00:13:41,732
Nah, mengapa tidak?

289
00:13:41,732 --> 00:13:42,608
>> AUDIENCE: [tidak terdengar]

290
00:13:42,608 --> 00:13:44,482
DAVID Malan: Yah, itu
biaya lebih banyak uang, yakin.

291
00:13:44,482 --> 00:13:46,970
Dan jika Anda sudah memiliki cadangan
ruang hard disk, efektif,

292
00:13:46,970 --> 00:13:51,407
atau ekuivalen, ruang hard disk begitu
jauh lebih murah Anda mungkin juga menggunakannya.

293
00:13:51,407 --> 00:13:54,490
Jadi sekali lagi, ada trade off ini yang
kami melihat bahkan lebih awal pada pagi ini,

294
00:13:54,490 --> 00:13:56,656
di mana ada benar-benar tidak
tentu jawaban yang benar,

295
00:13:56,656 --> 00:14:01,360
hanya ada jawaban yang lebih baik atau lebih buruk
berdasarkan apa yang sebenarnya Anda peduli.

296
00:14:01,360 --> 00:14:04,500
>> Jadi ada juga realitas teknologi.

297
00:14:04,500 --> 00:14:06,870
Saya tidak bisa membeli komputer,
Setahu saya,

298
00:14:06,870 --> 00:14:09,490
dengan satu triliun gigabyte
RAM sekarang.

299
00:14:09,490 --> 00:14:11,540
Itu hanya secara fisik tidak ada.

300
00:14:11,540 --> 00:14:13,240
Jadi ada beberapa batas atas.

301
00:14:13,240 --> 00:14:15,990
Tetapi jika Anda pernah bahkan berbelanja
untuk Mac konsumen atau PC,

302
00:14:15,990 --> 00:14:20,180
juga, umumnya ada
kurva ini fitur

303
00:14:20,180 --> 00:14:23,410
mana mungkin ada yang baik,
lebih baik, dan komputer terbaik.

304
00:14:23,410 --> 00:14:25,730
>> Dan keuntungan marginal
pada pembelian dolar Anda

305
00:14:25,730 --> 00:14:30,227
komputer terbaik dibandingkan
komputer yang lebih baik

306
00:14:30,227 --> 00:14:32,560
mungkin tidak hampir setinggi
sebagai menghabiskan sedikit lebih banyak uang

307
00:14:32,560 --> 00:14:35,599
dan mendapatkan komputer yang lebih baik
atas komputer yang baik.

308
00:14:35,599 --> 00:14:38,390
Dengan kata lain, Anda membayar
premium untuk mendapatkan atas baris.

309
00:14:38,390 --> 00:14:40,790
>> Dan apa yang akan kita lihat dalam
diskusi komputasi awan

310
00:14:40,790 --> 00:14:44,940
adalah bahwa apa yang sangat umum ini
hari, dan apa yang perusahaan seperti Google

311
00:14:44,940 --> 00:14:50,560
awal dipopulerkan, tidak membayar
untuk dan bangunan benar-benar mewah, mahal

312
00:14:50,560 --> 00:14:53,540
souped up komputer dengan
banyak dan banyak dari segala sesuatu,

313
00:14:53,540 --> 00:15:00,140
melainkan membeli atau membangun cukup
komputer sederhana tapi banyak dari mereka,

314
00:15:00,140 --> 00:15:03,280
dan menggunakan sesuatu yang umumnya
disebut skala horisontal bukan

315
00:15:03,280 --> 00:15:04,320
dari skala vertikal.

316
00:15:04,320 --> 00:15:08,115
>> Jadi skala vertikal berarti mendapatkan lebih banyak
RAM, disk lebih banyak, lebih dari segala sesuatu,

317
00:15:08,115 --> 00:15:10,187
dan semacam berinvestasi
vertikal di hardware Anda

318
00:15:10,187 --> 00:15:12,520
sehingga Anda hanya mendapatkan
terbaik dari yang terbaik dari yang terbaik,

319
00:15:12,520 --> 00:15:13,650
tapi Anda membayar untuk itu.

320
00:15:13,650 --> 00:15:17,580
Horisontal scaling semacam dapatkan
bawah lapis hal, model yang baik,

321
00:15:17,580 --> 00:15:19,922
atau bahkan model yang lebih buruk,
tapi mendapatkan banyak dari mereka.

322
00:15:19,922 --> 00:15:22,630
Tapi segera setelah Anda mendapatkan banyak
mengujinya-- misalnya, dalam kasus ini,

323
00:15:22,630 --> 00:15:27,330
server web, jika server yang satu ini
atau salah satu web host tidak cukup,

324
00:15:27,330 --> 00:15:32,310
kemudian hanya intuitif, yang
solusi untuk masalah ini beban

325
00:15:32,310 --> 00:15:36,460
atau overload pada server Anda
adalah baik mendapatkan server yang lebih besar

326
00:15:36,460 --> 00:15:40,770
atau, apa yang saya usulkan di sini sebagai gantinya
dari skala vertikal sehingga untuk berbicara,

327
00:15:40,770 --> 00:15:41,920
akan, kau tahu apa?

328
00:15:41,920 --> 00:15:43,580
Hanya mendapatkan kedua ini.

329
00:15:43,580 --> 00:15:46,560
Atau mungkin bahkan mendapatkan ketiga.

330
00:15:46,560 --> 00:15:48,900
Tapi sekarang kita buat
masalah rekayasa

331
00:15:48,900 --> 00:15:51,920
oleh sifat bisnis ini
atau keputusan keuangan.

332
00:15:51,920 --> 00:15:54,312
Apa masalahnya rekayasa sekarang?

333
00:15:54,312 --> 00:15:56,040
>> AUDIENCE: [tidak terdengar]

334
00:15:56,040 --> 00:15:59,740
>> DAVID Malan: Ya, bagaimana
Anda menghubungkan mereka dan-- maaf?

335
00:15:59,740 --> 00:16:00,651
>> AUDIENCE: [tidak terdengar]

336
00:16:00,651 --> 00:16:02,400
DAVID Malan: Benar,
karena saya masih have--

337
00:16:02,400 --> 00:16:07,280
jika saya memperkenalkan kembali saya ke dalam gambar ini,
jika ini adalah laptop saya di suatu tempat

338
00:16:07,280 --> 00:16:12,400
di internet, yang sekarang antara
saya dan perusahaan yang sedang kita bicarakan,

339
00:16:12,400 --> 00:16:17,960
sekarang saya harus mencari tahu, yang
Server cara mengirim pengguna tertentu?

340
00:16:17,960 --> 00:16:25,090
Dan jika ada pengguna lain, seperti
ini, dan kemudian satu ini di sini,

341
00:16:25,090 --> 00:16:28,850
dan mungkin ini adalah pengguna A, ini
adalah pengguna B, ini adalah pengguna C,

342
00:16:28,850 --> 00:16:34,720
dan ini adalah server 1, 2, dan 3-- sekarang
jawaban intuitif mungkin di sini hanya,

343
00:16:34,720 --> 00:16:37,460
kami akan mengirimkan pengguna A ke 1
dan B untuk 2 dan C 3.

344
00:16:37,460 --> 00:16:39,900
Dan kita dapat menangani 3 kali lebih banyak pengguna.

345
00:16:39,900 --> 00:16:41,360
>> Tapi itu terlalu menyederhanakan.

346
00:16:41,360 --> 00:16:44,480
Bagaimana Anda memutuskan siapa untuk mengirim mana?

347
00:16:44,480 --> 00:16:46,400
Jadi mari kita coba untuk alasan melalui ini.

348
00:16:46,400 --> 00:16:50,110
Jadi misalkan bahwa komputer
A, B, dan C adalah pelanggan,

349
00:16:50,110 --> 00:16:53,972
dan server 1, 2, dan 3 adalah
berskala horizontal server.

350
00:16:53,972 --> 00:16:55,180
Jadi mereka semacam identik.

351
00:16:55,180 --> 00:16:57,200
Mereka semua menjalankan software yang sama.

352
00:16:57,200 --> 00:16:59,770
Dan mereka semua bisa melakukan hal yang sama.

353
00:16:59,770 --> 00:17:01,520
Tapi alasan yang kita miliki
tiga dari mereka begitu

354
00:17:01,520 --> 00:17:04,710
bahwa kita dapat menangani tiga
kali lebih banyak orang sekaligus.

355
00:17:04,710 --> 00:17:07,960
>> Jadi kita tahu dari kami
diskusi sebelum makan siang

356
00:17:07,960 --> 00:17:11,460
bahwa ada hardware di antara
laptop dan server.

357
00:17:11,460 --> 00:17:14,920
Tapi kita akan hanya semacam generalisasi
yang sekarang sebagai internet atau awan.

358
00:17:14,920 --> 00:17:18,707
Tapi kita tahu bahwa di rumah saya,
mungkin ada router rumah.

359
00:17:18,707 --> 00:17:21,290
Dekat server, mungkin ada
router, DNS server, DHCP.

360
00:17:21,290 --> 00:17:24,780
Ada bisa apa saja
kita inginkan dalam cerita ini.

361
00:17:24,780 --> 00:17:33,360
>> Jadi bagaimana kita mulai untuk memutuskan,
ketika pengguna A pergi ke something.com,

362
00:17:33,360 --> 00:17:36,630
yang server untuk rute pengguna untuk?

363
00:17:36,630 --> 00:17:39,409
Bagaimana mungkin kita mulai menceritakan kisah ini?

364
00:17:39,409 --> 00:17:40,450
AUDIENCE: Load balancing?

365
00:17:40,450 --> 00:17:41,120
DAVID Malan: Load balancing.

366
00:17:41,120 --> 00:17:42,502
Bagaimana apanya?

367
00:17:42,502 --> 00:17:44,660
>> AUDIENCE: Kembali
mana yang paling penggunaan adalah

368
00:17:44,660 --> 00:17:47,472
dan mana yang memiliki
kebanyakan sumber daya yang tersedia.

369
00:17:47,472 --> 00:17:49,930
DAVID Malan: OK, jadi biar
memperkenalkan tipe baru hardware

370
00:17:49,930 --> 00:17:53,627
bahwa kita belum dibahas, yang
adalah persis seperti itu, beban penyeimbang.

371
00:17:53,627 --> 00:17:54,960
Hal ini juga bisa menjadi server.

372
00:17:54,960 --> 00:17:58,130
Ini bisa terlihat persis seperti
salah satu yang kita lihat saat yang lalu.

373
00:17:58,130 --> 00:18:01,000
Sebuah penyeimbang beban benar-benar
hanya sepotong software

374
00:18:01,000 --> 00:18:02,660
yang Anda jalankan pada perangkat keras.

375
00:18:02,660 --> 00:18:07,310
>> Atau Anda dapat membayar vendor, seperti
Citrix atau orang lain, Cisco atau orang lain.

376
00:18:07,310 --> 00:18:10,465
Anda dapat membayar untuk hardware mereka sendiri,
yang merupakan penyeimbang beban hardware.

377
00:18:10,465 --> 00:18:12,840
Tapi itu hanya berarti mereka
pra-instal load balancing

378
00:18:12,840 --> 00:18:15,580
perangkat lunak pada perangkat keras mereka dan
menjualnya kepada Anda semua bersama-sama.

379
00:18:15,580 --> 00:18:18,670
Jadi kita hanya akan menarik sebagai
persegi panjang untuk tujuan kita.

380
00:18:18,670 --> 00:18:22,040
>> Bagaimana sekarang cara menerapkan penyeimbang beban?

381
00:18:22,040 --> 00:18:28,150
Dengan kata lain, ketika pengguna A ingin
kunjungi situs saya, permintaan mereka entah bagaimana

382
00:18:28,150 --> 00:18:31,070
atau lainnya, mungkin dengan cara yang
router kita bicarakan sebelumnya,

383
00:18:31,070 --> 00:18:33,750
akan akhirnya mencapai
load balancer ini, yang kemudian

384
00:18:33,750 --> 00:18:36,210
perlu membuat keputusan routing seperti.

385
00:18:36,210 --> 00:18:38,320
Tapi itu routing untuk semacam
dari tujuan yang lebih tinggi sekarang.

386
00:18:38,320 --> 00:18:40,361
Ini bukan hanya tentang mendapatkan
dari titik A ke titik

387
00:18:40,361 --> 00:18:44,730
B. Ini tentang memutuskan
Titik B adalah yang terbaik di antara mengujinya--

388
00:18:44,730 --> 00:18:46,660
1, 2, atau 3 dalam hal ini.

389
00:18:46,660 --> 00:18:51,000
>> Jadi bagaimana saya memutuskan apakah
untuk pergi ke 1, ke 2, ke 3?

390
00:18:51,000 --> 00:18:55,180
Apa mungkin kotak hitam ini, sehingga untuk
berbicara, menjadi melakukan di dalam?

391
00:18:55,180 --> 00:18:57,880
Ini juga merupakan contoh lain di
ilmu komputer abstraksi.

392
00:18:57,880 --> 00:19:02,410
Saya telah benar-benar diambil penyeimbang beban
sebagai kotak hitam dengan tinta hitam, di dalam

393
00:19:02,410 --> 00:19:05,300
dari yang beberapa menarik
logika, atau sihir bahkan,

394
00:19:05,300 --> 00:19:07,840
dari yang perlu datang
a decision-- 1, 2, atau 3.

395
00:19:07,840 --> 00:19:12,220
Dan input hanya A.

396
00:19:12,220 --> 00:19:13,442
>> AUDIENCE: [tidak terdengar]

397
00:19:13,442 --> 00:19:14,400
DAVID Malan: Maaf?

398
00:19:14,400 --> 00:19:14,770
AUDIENCE: [tidak terdengar]

399
00:19:14,770 --> 00:19:18,310
DAVID Malan: Baiklah, bagaimana mungkin kita
mengkategorikan jenis transaksi

400
00:19:18,310 --> 00:19:19,095
sini?

401
00:19:19,095 --> 00:19:23,772
>> AUDIENCE: Melihat halaman web
dibandingkan query database.

402
00:19:23,772 --> 00:19:24,980
DAVID Malan: OK, itu bagus.

403
00:19:24,980 --> 00:19:29,210
Jadi mungkin pengguna ini A
ingin melihat halaman web.

404
00:19:29,210 --> 00:19:32,954
Dan mungkin itu bahkan konten statis,
sesuatu yang mengubah jarang, jika pernah.

405
00:19:32,954 --> 00:19:34,870
Dan yang tampaknya seperti
operasi cukup sederhana.

406
00:19:34,870 --> 00:19:38,260
Jadi mungkin kita hanya akan sewenang-wenang,
tapi cukup, mengatakan,

407
00:19:38,260 --> 00:19:42,750
server 1, tujuan hidupnya adalah
hanya melayani sampai konten statis,

408
00:19:42,750 --> 00:19:45,150
file yang jarang, jika pernah, perubahan.

409
00:19:45,150 --> 00:19:46,870
Mungkin itu gambar pada halaman.

410
00:19:46,870 --> 00:19:50,180
Mungkin itu teks pada halaman atau
semacam seperti lain hal tidak menarik,

411
00:19:50,180 --> 00:19:52,460
tidak ada transaksional, tidak dinamis.

412
00:19:52,460 --> 00:19:57,000
>> Sebaliknya, jika pengguna A adalah memeriksa
dari keranjang belanja nya yang

413
00:19:57,000 --> 00:20:00,972
membutuhkan database, tempat untuk menyimpan
dan ingat transaksi itu, juga

414
00:20:00,972 --> 00:20:02,680
mungkin permintaan itu
harus pergi ke server 2.

415
00:20:02,680 --> 00:20:03,610
Jadi itu bagus.

416
00:20:03,610 --> 00:20:07,010
Jadi kita bisa memuat keseimbangan berdasarkan
pada jenis permintaan.

417
00:20:07,010 --> 00:20:08,278
Bagaimana lagi kita bisa melakukan ini?

418
00:20:08,278 --> 00:20:13,690

419
00:20:13,690 --> 00:20:14,686
apa other--

420
00:20:14,686 --> 00:20:17,382
>> AUDIENCE: Berdasarkan server
utilisasi dan kapasitas.

421
00:20:17,382 --> 00:20:18,340
DAVID Malan: Benar, OK.

422
00:20:18,340 --> 00:20:19,950
Jadi Anda menyebutkan bahwa sebelumnya, Kareem.

423
00:20:19,950 --> 00:20:26,850
Jadi bagaimana jika kita memberikan beberapa masukan
pada [tidak terdengar] antara server 1, 2,

424
00:20:26,850 --> 00:20:32,070
dan 3 untuk beban ini penyeimbang sehingga
mereka hanya terus menginformasikan

425
00:20:32,070 --> 00:20:36,420
penyeimbang beban apa status mereka?

426
00:20:36,420 --> 00:20:39,842
Seperti, hey, penyeimbang beban,
Aku di pemanfaatan 50%.

427
00:20:39,842 --> 00:20:41,550
Dengan kata lain, saya harus
setengah banyak pengguna

428
00:20:41,550 --> 00:20:43,520
karena saya benar-benar dapat menangani sekarang.

429
00:20:43,520 --> 00:20:45,480
Hei, load balancer, aku
pada pemanfaatan 100%.

430
00:20:45,480 --> 00:20:47,929
Hei, load balancer, pemanfaatan 0%.

431
00:20:47,929 --> 00:20:49,970
Penyeimbang beban, jika itu
dirancang dengan cara yang

432
00:20:49,970 --> 00:20:53,990
dapat mengambil pada mereka komentar
sebagai masukan, itu kemudian dapat

433
00:20:53,990 --> 00:20:57,420
memutuskan, ooh, nomor 2 adalah 100%.

434
00:20:57,420 --> 00:21:01,440
Mari saya kirim tidak ada permintaan masa depan untuk dirinya
selain pengguna sudah terhubung.

435
00:21:01,440 --> 00:21:02,360
Orang ini pada 0%.

436
00:21:02,360 --> 00:21:03,940
Mari kita mengirim banyak lalu lintas ke dia.

437
00:21:03,940 --> 00:21:05,480
Orang ini mengatakan dia pada 50%.

438
00:21:05,480 --> 00:21:08,080
Mari kita mengirim beberapa lalu lintas kepadanya.

439
00:21:08,080 --> 00:21:12,012
>> Sehingga akan menjadi bahan, yang
kita bisa mengambil beban ke rekening.

440
00:21:12,012 --> 00:21:13,470
Dan itu akan berubah dari waktu ke waktu.

441
00:21:13,470 --> 00:21:14,678
Jadi keputusan akan berubah.

442
00:21:14,678 --> 00:21:17,350
Jadi itulah teknik yang benar-benar baik,
salah satu yang umum digunakan.

443
00:21:17,350 --> 00:21:18,410
Apa lagi yang bisa kita lakukan?

444
00:21:18,410 --> 00:21:20,380
Dan mari kita sebenarnya hanya meringkas di sini.

445
00:21:20,380 --> 00:21:29,510
Jadi keputusan di sini bisa
berdasarkan jenis lalu lintas, saya akan menyebutnya.

446
00:21:29,510 --> 00:21:32,220
Hal ini dapat didasarkan pada beban.

447
00:21:32,220 --> 00:21:34,692
Mari kita lihat apakah kita tidak bisa
datang dengan beberapa lainnya.

448
00:21:34,692 --> 00:21:35,934
>> AUDIENCE: [tidak terdengar]

449
00:21:35,934 --> 00:21:36,850
DAVID Malan: Location.

450
00:21:36,850 --> 00:21:37,724
Jadi itu bagus.

451
00:21:37,724 --> 00:21:40,880
Jadi yang lokasi bagaimana mungkin Anda
memanfaatkan informasi itu?

452
00:21:40,880 --> 00:21:44,317
>> AUDIENCE: [tidak terdengar]

453
00:21:44,317 --> 00:21:54,140

454
00:21:54,140 --> 00:21:57,040
>> DAVID Malan: Oh, itu bagus.

455
00:21:57,040 --> 00:21:59,450
Dan tentang berapa milidetik
akan itu menurun

456
00:21:59,450 --> 00:22:02,466
berdasarkan apa yang kita lihat ini
pagi, akan Anda katakan?

457
00:22:02,466 --> 00:22:04,330
>> AUDIENCE: [tidak terdengar]

458
00:22:04,330 --> 00:22:06,550
>> DAVID Malan: Nah, berdasarkan
pada rute jejak

459
00:22:06,550 --> 00:22:09,070
kita lihat sebelumnya, yang hanya
ukuran kasar sesuatu,

460
00:22:09,070 --> 00:22:11,800
setidaknya berapa lama
untuk data untuk mendapatkan dari A ke B

461
00:22:11,800 --> 00:22:16,140
terasa seperti sesuatu yang lokal, apa,
seperti 74 milidetik, memberi atau mengambil?

462
00:22:16,140 --> 00:22:19,200
Dan kemudian apa-apa 100 ditambah,
200 plus mungkin di luar negeri.

463
00:22:19,200 --> 00:22:22,110
Dan berdasarkan itu saja,
tampaknya masuk akal untuk mengasumsikan

464
00:22:22,110 --> 00:22:25,310
bahwa untuk pengguna di AS
untuk mengakses server Eropa

465
00:22:25,310 --> 00:22:28,900
mungkin mengambil dua kali atau tiga kali
selama, bahkan dalam milidetik,

466
00:22:28,900 --> 00:22:31,280
daripada mungkin mengambil jika itu
Server berada di sini

467
00:22:31,280 --> 00:22:33,370
geografis, atau sebaliknya.

468
00:22:33,370 --> 00:22:35,120
Jadi ketika saya mengusulkan
sebelumnya bahwa terutama

469
00:22:35,120 --> 00:22:37,880
setelah Anda melewati bahwa 200 milidetik
ambang batas, memberi atau mengambil,

470
00:22:37,880 --> 00:22:39,210
manusia yang mulai memperhatikan.

471
00:22:39,210 --> 00:22:42,960
Dan rute jejak hanya
asumsi mentah, data yang tidak menarik.

472
00:22:42,960 --> 00:22:46,570
Bila Anda memiliki sebuah situs web, Anda harus
dapatkan pengguna men-download gambar atau film

473
00:22:46,570 --> 00:22:49,150
file, banyak teks,
permintaan berikutnya.

474
00:22:49,150 --> 00:22:53,116
Kami melihat ketika kami mengunjungi, apa yang
itu, Facebook atau Amazon sebelumnya,

475
00:22:53,116 --> 00:22:55,490
ada seluruh banyak hal
yang perlu di-download.

476
00:22:55,490 --> 00:22:56,573
Sehingga akan bertambah.

477
00:22:56,573 --> 00:23:00,259
Jadi multi-detik mungkin
tidak masuk akal.

478
00:23:00,259 --> 00:23:01,800
Jadi baik, geografi merupakan salah satu bahan.

479
00:23:01,800 --> 00:23:05,920
Jadi di perusahaan sebenarnya seperti
Akamai, jika Anda pernah mendengar tentang mereka,

480
00:23:05,920 --> 00:23:10,000
atau orang lain telah lama mengambil
geografi ke rekening.

481
00:23:10,000 --> 00:23:14,170
Dan ternyata bahwa dengan sifat suatu
alamat IP, laptop saya alamat IP,

482
00:23:14,170 --> 00:23:18,277
Anda dapat menyimpulkan, dengan beberapa kemungkinan,
di mana Anda berada di dunia.

483
00:23:18,277 --> 00:23:20,110
Dan sebenarnya ada
layanan pihak ketiga yang

484
00:23:20,110 --> 00:23:24,480
dapat membayar yang memelihara database
alamat IP dan geografi

485
00:23:24,480 --> 00:23:28,660
yang dengan percaya diri yang tinggi akan
benar ketika ditanya, di mana di dunia

486
00:23:28,660 --> 00:23:30,090
adalah alamat IP ini?

487
00:23:30,090 --> 00:23:32,130
>> Dan sebenarnya apa
perusahaan lain menggunakan ini?

488
00:23:32,130 --> 00:23:35,900
Jika Anda memiliki Hulu atau Netflix, jika
Anda pernah bepergian ke luar negeri,

489
00:23:35,900 --> 00:23:38,640
dan Anda mencoba untuk menonton sesuatu di
Hulu, dan Anda tidak di AS,

490
00:23:38,640 --> 00:23:41,280
Anda mungkin melihat pesan
mengatakan, tidak di Amerika Serikat.

491
00:23:41,280 --> 00:23:43,208
Maaf, Anda tidak dapat melihat konten ini.

492
00:23:43,208 --> 00:23:44,420
>> AUDIENCE: [tidak terdengar]

493
00:23:44,420 --> 00:23:46,020
>> DAVID Malan: Oh, benar-benar?

494
00:23:46,020 --> 00:23:48,480
Tapi ya, jadi sebenarnya itu
aplikasi yang sempurna

495
00:23:48,480 --> 00:23:51,060
dari sesuatu yang sangat teknis
untuk masalah yang sebenarnya.

496
00:23:51,060 --> 00:23:55,100
Jika Anda adalah untuk VPN dari
Eropa atau Asia atau di mana saja

497
00:23:55,100 --> 00:23:57,950
di dunia untuk perusahaan Anda
kantor pusat di New York

498
00:23:57,950 --> 00:24:00,670
atau di mana pun Anda berada, Anda
akan membuat penampilan

499
00:24:00,670 --> 00:24:03,580
ke situs web luar yang
Anda benar-benar di New York,

500
00:24:03,580 --> 00:24:05,660
meskipun Anda
secara fisik cukup jauh.

501
00:24:05,660 --> 00:24:08,057
>> Sekarang Anda pengguna akan
tahu kau jelas jauh.

502
00:24:08,057 --> 00:24:11,140
Tapi kau juga akan merasakannya karena
dari mereka milidetik tambahan.

503
00:24:11,140 --> 00:24:14,510
Bahwa tambahan jarak dan
enkripsi yang terjadi di VPN

504
00:24:14,510 --> 00:24:15,760
akan memperlambat segalanya.

505
00:24:15,760 --> 00:24:17,680
Jadi mungkin atau mungkin tidak
menjadi pengalaman yang hebat.

506
00:24:17,680 --> 00:24:21,050
Tapi Hulu dan Netflix akan melihat
Anda sebagai duduk di suatu tempat di New York,

507
00:24:21,050 --> 00:24:23,817
Anda sudah jelas dikumpulkan.

508
00:24:23,817 --> 00:24:25,150
Apa yang sempurna solusi untuk itu.

509
00:24:25,150 --> 00:24:28,490
>> Baiklah, sehingga geografi adalah salah satu keputusan.

510
00:24:28,490 --> 00:24:32,290
Apa lagi yang bisa kita gunakan untuk memutuskan bagaimana
untuk rute lalu lintas dari A, B, dan C

511
00:24:32,290 --> 00:24:37,040
1, 2, dan 3, sekali lagi, menempatkan
topi rekayasa pada?

512
00:24:37,040 --> 00:24:38,850
Ini semua terdengar sangat rumit.

513
00:24:38,850 --> 00:24:41,490
Uh, aku bahkan tidak tahu di mana
untuk mulai menerapkan mereka.

514
00:24:41,490 --> 00:24:44,450
Beri aku sesuatu yang sederhana.

515
00:24:44,450 --> 00:24:48,160
Apa cara paling sederhana
untuk membuat keputusan ini?

516
00:24:48,160 --> 00:24:49,840
>> AUDIENCE: Apakah tersedia server?

517
00:24:49,840 --> 00:24:51,650
>> DAVID Malan: Apakah tersedia server?

518
00:24:51,650 --> 00:24:53,970
Jadi tidak buruk.

519
00:24:53,970 --> 00:24:54,470
Itu bagus.

520
00:24:54,470 --> 00:24:56,260
Itu semacam nuancing beban.

521
00:24:56,260 --> 00:24:58,070
Jadi mari kita ingat-kategori beban.

522
00:24:58,070 --> 00:25:00,010
Jika Anda tersedia, aku hanya
akan mengirim data ke sana.

523
00:25:00,010 --> 00:25:01,343
Tapi itu bisa menjadi bumerang cepat.

524
00:25:01,343 --> 00:25:05,720
Karena jika saya menggunakan logika itu, dan jika saya
selalu bertanya 1, yang Anda pada, yang Anda pada,

525
00:25:05,720 --> 00:25:08,970
kau, jika jawabannya selalu ya,
Aku akan mengirim 100% dari lalu lintas

526
00:25:08,970 --> 00:25:11,060
dia, 0% untuk orang lain.

527
00:25:11,060 --> 00:25:14,430
Dan di beberapa titik, kita akan memukul
bahwa perlambatan atau situs tidak tersedia.

528
00:25:14,430 --> 00:25:17,630
Jadi apa yang sedikit lebih baik dari
itu tapi masih cukup sederhana

529
00:25:17,630 --> 00:25:22,412
dan hampir tidak sepintar mengambil semua
ini data tambahan ke rekening?

530
00:25:22,412 --> 00:25:23,992
>> AUDIENCE: Biaya per server.

531
00:25:23,992 --> 00:25:25,200
DAVID Malan: Biaya per server.

532
00:25:25,200 --> 00:25:28,010
OK, jadi biar melemparkan bahwa
dalam kategori beban, juga.

533
00:25:28,010 --> 00:25:30,790
Karena apa yang akan Anda temukan di
perusahaan, too-- bahwa jika Anda

534
00:25:30,790 --> 00:25:32,790
meng-upgrade server Anda
dari waktu ke waktu atau membeli lebih banyak,

535
00:25:32,790 --> 00:25:36,242
Anda mungkin tidak bisa mendapatkan persis
versi yang sama dari perangkat keras.

536
00:25:36,242 --> 00:25:37,450
Karena jatuh dari tanggal.

537
00:25:37,450 --> 00:25:38,491
Anda tidak bisa membelinya lagi.

538
00:25:38,491 --> 00:25:39,360
Harga berubah.

539
00:25:39,360 --> 00:25:42,500
>> Jadi, Anda mungkin memiliki server yang berbeda
di cluster Anda, sehingga untuk berbicara.

540
00:25:42,500 --> 00:25:43,890
Itu benar-benar baik-baik saja.

541
00:25:43,890 --> 00:25:47,100
Tapi hardware tahun depan
mungkin dua kali lebih cepat,

542
00:25:47,100 --> 00:25:49,390
dua kali mampu seperti tahun ini.

543
00:25:49,390 --> 00:25:51,500
Jadi kita dapat melemparkan bahwa
ke dalam kategori beban.

544
00:25:51,500 --> 00:25:54,260
Umpan balik ini lingkaran antara 1,
2, dan 3 di penyeimbang beban

545
00:25:54,260 --> 00:25:57,650
tentu bisa mengatakan itu,
hey, aku pada kapasitas 50%.

546
00:25:57,650 --> 00:26:00,100
Tapi omong-omong, saya juga
memiliki dua kali lebih banyak core.

547
00:26:00,100 --> 00:26:02,319
Menggunakan informasi tersebut.

548
00:26:02,319 --> 00:26:05,110
Bahkan simpler-- dan ini akan
menjadi tema dalam ilmu komputer.

549
00:26:05,110 --> 00:26:08,990
Jika ragu, atau ketika Anda ingin sederhana
solusi yang umumnya bekerja dengan baik

550
00:26:08,990 --> 00:26:12,730
dari waktu ke waktu, tidak memilih sama
Server sepanjang waktu, tetapi choose--

551
00:26:12,730 --> 00:26:14,039
>> AUDIENCE: A satu random?

552
00:26:14,039 --> 00:26:15,330
DAVID Malan: -sebuah Server acak.

553
00:26:15,330 --> 00:26:16,780
Ya, memilih satu atau yang lain.

554
00:26:16,780 --> 00:26:21,160
Jadi keacakan sebenarnya
bahan yang sangat kuat ini

555
00:26:21,160 --> 00:26:23,170
dalam ilmu komputer,
dan dalam rekayasa lebih

556
00:26:23,170 --> 00:26:27,160
umumnya, terutama ketika Anda ingin
untuk membuat keputusan sederhana cepat

557
00:26:27,160 --> 00:26:30,480
tanpa rumit dengan semua
ini sangat pintar, tetapi juga

558
00:26:30,480 --> 00:26:34,330
sangat cerdas, solusi yang membutuhkan
semua lebih rekayasa, semua

559
00:26:34,330 --> 00:26:36,220
yang lebih berpikir, ketika
benar-benar, mengapa tidak saya

560
00:26:36,220 --> 00:26:39,200
hanya jenis melempar koin, atau
tiga sisi koin dalam kasus ini,

561
00:26:39,200 --> 00:26:41,690
dan memutuskan apakah akan pergi 1, 2, 3?

562
00:26:41,690 --> 00:26:45,610
>> Yang mungkin menjadi bumerang probabilistically,
tapi banyak seperti kemungkinan

563
00:26:45,610 --> 00:26:48,860
membalik kepala lagi dan
lagi dan lagi dan lagi

564
00:26:48,860 --> 00:26:53,870
dan lagi dan lagi mungkin di
Super reality--, super tidak mungkin.

565
00:26:53,870 --> 00:26:58,170
Jadi dari waktu ke waktu, kemungkinan besar
hanya mengirim pengguna secara acak

566
00:26:58,170 --> 00:27:00,660
1, 2, dan 3 akan
bekerja baik-baik saja.

567
00:27:00,660 --> 00:27:03,380
Dan ini adalah teknik
umumnya dikenal sebagai round robin.

568
00:27:03,380 --> 00:27:05,160
>> Atau sebenarnya, itu tidak round robin.

569
00:27:05,160 --> 00:27:06,980
Ini akan menjadi pendekatan acak.

570
00:27:06,980 --> 00:27:09,250
Dan jika Anda ingin menjadi lebih
sedikit lebih sederhana dari itu,

571
00:27:09,250 --> 00:27:12,820
round robin akan, orang pertama berjalan
1, orang kedua untuk 2, orang ketiga

572
00:27:12,820 --> 00:27:16,056
3, orang keempat untuk 1.

573
00:27:16,056 --> 00:27:17,430
Dan di situlah letak round robin.

574
00:27:17,430 --> 00:27:19,580
Anda hanya jenis pergi sekitar dalam satu siklus.

575
00:27:19,580 --> 00:27:21,300
>> Sekarang, Anda harus pintar tentang hal itu.

576
00:27:21,300 --> 00:27:26,490
Anda tidak harus membabi buta mengirim pengguna ke
Server nomor satu jika apa yang terjadi?

577
00:27:26,490 --> 00:27:30,060

578
00:27:30,060 --> 00:27:32,870
Jika itu pada kapasitas max, atau
itu hanya tidak lagi responsif.

579
00:27:32,870 --> 00:27:35,270
Jadi idealnya Anda ingin beberapa
jenis umpan balik.

580
00:27:35,270 --> 00:27:38,040
Jika tidak, Anda hanya mengirim semua
pengguna Anda ke jalan buntu.

581
00:27:38,040 --> 00:27:40,790
Tapi itu bisa diperhitungkan juga.

582
00:27:40,790 --> 00:27:46,520
>> Jadi jangan di bawah menghargai nilai
hanya keacakan, yang cukup sering

583
00:27:46,520 --> 00:27:48,970
solusi untuk jenis-jenis masalah.

584
00:27:48,970 --> 00:27:51,580
Dan kami akan menuliskan round robin.

585
00:27:51,580 --> 00:27:55,090
Jadi bagaimana beberapa perusahaan menerapkan
round robin atau keacakan

586
00:27:55,090 --> 00:27:56,840
atau dari keputusan ini?

587
00:27:56,840 --> 00:28:01,840
Nah sayangnya, mereka
melakukan hal-hal seperti ini.

588
00:28:01,840 --> 00:28:03,660
Mari saya menarik screenshot cepat lagi.

589
00:28:03,660 --> 00:28:13,052

590
00:28:13,052 --> 00:28:14,470
>> Sebenarnya, mari kita lakukan dua.

591
00:28:14,470 --> 00:28:17,420

592
00:28:17,420 --> 00:28:21,370
Aku tidak tahu mengapa kita
mendapatkan semua hidangan ini.

593
00:28:21,370 --> 00:28:22,280
Itu sangat aneh.

594
00:28:22,280 --> 00:28:31,714

595
00:28:31,714 --> 00:28:33,630
Baiklah, apa yang saya benar-benar
inginkan adalah screenshot.

596
00:28:33,630 --> 00:28:36,990

597
00:28:36,990 --> 00:28:40,100
Itu aneh.

598
00:28:40,100 --> 00:28:42,930
Baiklah, jadi saya bisa spoof ini.

599
00:28:42,930 --> 00:28:46,080
Saya tidak tahu berapa jauh lagi
Saya ingin terus bergulir.

600
00:28:46,080 --> 00:28:53,220
>> Jadi sangat umum, Anda akan menemukan diri Anda
di alamat seperti www.2.acme.com,

601
00:28:53,220 --> 00:28:56,030
mungkin www.3 atau 4 atau 5.

602
00:28:56,030 --> 00:28:57,424
Dan mengawasi untuk ini.

603
00:28:57,424 --> 00:28:58,590
Anda tidak melihat itu yang sering.

604
00:28:58,590 --> 00:29:02,621
Tetapi ketika Anda melakukannya, itu jenis cenderung
lebih besar, lebih tua, perusahaan stodgier

605
00:29:02,621 --> 00:29:05,370
bahwa teknologi tidak benar-benar
tampaknya tahu apa yang mereka lakukan.

606
00:29:05,370 --> 00:29:08,150
Dan Anda lihat ini pada perusahaan teknologi
kadang-kadang, orang-orang yang lebih tua.

607
00:29:08,150 --> 00:29:09,270
>> Jadi apa yang mereka lakukan?

608
00:29:09,270 --> 00:29:11,890
Bagaimana mereka menerapkan
load balancing, akan tampak?

609
00:29:11,890 --> 00:29:15,986
Jika Anda menemukan diri Anda sebagai
pengguna mengetik www.something.com,

610
00:29:15,986 --> 00:29:19,760
dan tiba-tiba Anda berada di
www.2.something.com,

611
00:29:19,760 --> 00:29:21,866
apa yang memiliki beban mereka
penyeimbang mungkin dilakukan?

612
00:29:21,866 --> 00:29:22,741
AUDIENCE: [tidak terdengar]

613
00:29:22,741 --> 00:29:28,210

614
00:29:28,210 --> 00:29:31,079
>> DAVID Malan: Yeah, sehingga
penyeimbang beban diduga

615
00:29:31,079 --> 00:29:33,870
membuat keputusan berdasarkan salah satu
Keputusan ini membuat processes--

616
00:29:33,870 --> 00:29:35,210
tidak terlalu penting yang.

617
00:29:35,210 --> 00:29:38,650
Tapi seperti saya sudah ditarik
nomor di papan sini,

618
00:29:38,650 --> 00:29:40,650
server tidak hanya
disebut 1, 2, dan 3.

619
00:29:40,650 --> 00:29:43,870
Mereka mungkin sedang disebut
www1, www2, www3.

620
00:29:43,870 --> 00:29:47,200
Dan ternyata dalam
permintaan HTTP adalah fitur ini.

621
00:29:47,200 --> 00:29:48,950
Dan aku akan
mensimulasikan ini sebagai berikut.

622
00:29:48,950 --> 00:29:53,230
>> Aku akan membuka yang sama
tab jaringan pengembang seperti sebelumnya hanya

623
00:29:53,230 --> 00:29:55,560
sehingga kita bisa melihat apa yang terjadi
di bawah kap mesin.

624
00:29:55,560 --> 00:29:57,130
Aku akan membersihkan layar.

625
00:29:57,130 --> 00:30:03,420
Dan aku akan pergi ke, mari kita
mengatakan, http://harvard.edu.

626
00:30:03,420 --> 00:30:06,560
Sekarang untuk apa pun
alasan bisnis, Harvard

627
00:30:06,560 --> 00:30:08,930
telah memutuskan, seperti banyak,
banyak situs-situs lain,

628
00:30:08,930 --> 00:30:12,712
standarisasi yang
website di www.harvard.edu

629
00:30:12,712 --> 00:30:14,420
untuk kedua teknis
dan alasan pemasaran.

630
00:30:14,420 --> 00:30:16,326
Itu hanya jenis di
vogue memiliki www.

631
00:30:16,326 --> 00:30:20,500
>> Jadi server di Harvard memiliki
entah bagaimana mengarahkan pengguna,

632
00:30:20,500 --> 00:30:23,830
seperti yang saya selalu mengatakan, dari
salah satu URL ke yang lain.

633
00:30:23,830 --> 00:30:24,670
Bagaimana cara kerjanya?

634
00:30:24,670 --> 00:30:26,740
Nah, biarkan aku pergi ke depan dan tekan Enter.

635
00:30:26,740 --> 00:30:30,830
Dan melihat URL memang cepat
diubah menjadi www.harvard.edu.

636
00:30:30,830 --> 00:30:35,560
Mari saya gulir kembali ini
sejarah dan klik debug

637
00:30:35,560 --> 00:30:37,650
informasi diagnostik, jika Anda mau.

638
00:30:37,650 --> 00:30:39,170
Biarkan aku melihat permintaan saya.

639
00:30:39,170 --> 00:30:41,020
>> Jadi, inilah permintaan saya buat.

640
00:30:41,020 --> 00:30:44,870
Dan perhatikan itu konsisten dengan jenis yang
dari meminta saya terbuat dari Facebook sebelumnya.

641
00:30:44,870 --> 00:30:48,010
Tapi perhatikan respon.

642
00:30:48,010 --> 00:30:50,430
Apa yang berbeda di
respon kali ini?

643
00:30:50,430 --> 00:30:51,890
>> AUDIENCE: [tidak terdengar]

644
00:30:51,890 --> 00:30:54,290
>> DAVID Malan: Ya, jadi itu bukan 200 OK.

645
00:30:54,290 --> 00:30:56,130
Ini bukan 404 Not Found.

646
00:30:56,130 --> 00:31:00,150
Ini adalah 301 Moved Permanently, yang
adalah jenis cara yang lucu untuk mengatakan,

647
00:31:00,150 --> 00:31:05,270
Harvard telah menaikkan dan pindah
tempat lain untuk www.harvard.edu.

648
00:31:05,270 --> 00:31:08,220
301 menandakan bahwa
ini adalah redirect.

649
00:31:08,220 --> 00:31:12,812
Dan ke tempat seharusnya pengguna
tampaknya diarahkan?

650
00:31:12,812 --> 00:31:15,520
Ada berita menarik tambahan
informasi di dalam amplop itu.

651
00:31:15,520 --> 00:31:19,650
Dan masing-masing baris ini sekarang akan
mulai menelepon header HTTP.

652
00:31:19,650 --> 00:31:23,620
Header hanya nilai kunci
pair-- sesuatu usus sesuatu.

653
00:31:23,620 --> 00:31:24,850
Ini sepotong informasi.

654
00:31:24,850 --> 00:31:27,131
Di mana seharusnya baru
Lokasi tampaknya menjadi?

655
00:31:27,131 --> 00:31:31,120

656
00:31:31,120 --> 00:31:33,692
Perhatikan baris terakhir
di antara semua header tersebut.

657
00:31:33,692 --> 00:31:34,940
>> AUDIENCE: [tidak terdengar]

658
00:31:34,940 --> 00:31:37,148
>> DAVID Malan: Ya, jadi ada
informasi tambahan.

659
00:31:37,148 --> 00:31:40,120
Baris pertama yang saya disorot
mengatakan 301 Moved Permanently.

660
00:31:40,120 --> 00:31:42,820
Nah, di mana telah pindah?

661
00:31:42,820 --> 00:31:45,340
The line-- lalu dan mereka tidak
harus dalam urutan ini.

662
00:31:45,340 --> 00:31:47,020
Hal ini dapat acak.

663
00:31:47,020 --> 00:31:52,120
Lokasi usus berarti, hey
Browser, pergi ke URL ini sebagai gantinya.

664
00:31:52,120 --> 00:31:55,180
>> Jadi browser memahami HTTP pengalihan.

665
00:31:55,180 --> 00:31:57,540
Dan ini adalah sangat, sangat
cara yang umum memantul

666
00:31:57,540 --> 00:31:59,680
pengguna dari satu tempat ke tempat lain.

667
00:31:59,680 --> 00:32:02,660
Misalnya, jika Anda sudah pernah mencoba
untuk mengunjungi situs web yang Anda tidak

668
00:32:02,660 --> 00:32:06,360
login ke, Anda mungkin tiba-tiba menemukan
sendiri di URL baru sama sekali menjadi

669
00:32:06,360 --> 00:32:07,530
diminta untuk log in.

670
00:32:07,530 --> 00:32:08,400
>> Bagaimana cara kerjanya?

671
00:32:08,400 --> 00:32:10,920
Server mungkin mengirimkan 301.

672
00:32:10,920 --> 00:32:14,510
Ada juga nomor lain, seperti
302, agak berbeda dalam arti,

673
00:32:14,510 --> 00:32:16,490
yang mengirimkan Anda ke URL lain.

674
00:32:16,490 --> 00:32:18,770
Dan kemudian server,
setelah Anda login,

675
00:32:18,770 --> 00:32:22,000
akan mengirimkan kembali ke tempat
Anda benar-benar dimaksudkan.

676
00:32:22,000 --> 00:32:27,700
>> Jadi apa, kemudian, adalah buruk
website direkayasa lakukan?

677
00:32:27,700 --> 00:32:31,340
Ketika Anda mengunjungi
www.acme.com, dan mereka hanya

678
00:32:31,340 --> 00:32:35,490
kebetulan memiliki nama server mereka
www1, www2, www3, dan sebagainya,

679
00:32:35,490 --> 00:32:39,100
mereka sangat simply--
yang adil, tapi sangat

680
00:32:39,100 --> 00:32:46,080
semacam foolishly-- mengarahkan Anda ke
server sebenarnya berbeda bernama.

681
00:32:46,080 --> 00:32:48,650
Dan bekerja baik-baik saja.

682
00:32:48,650 --> 00:32:49,930
Sangat menyenangkan dan mudah.

683
00:32:49,930 --> 00:32:52,200
>> Kita telah melihat bagaimana itu akan
dilakukan di bawah tenda

684
00:32:52,200 --> 00:32:53,490
dalam amplop virtual.

685
00:32:53,490 --> 00:32:56,450
Tapi mengapa ini bisa dibilang
Keputusan rekayasa buruk?

686
00:32:56,450 --> 00:33:00,345
Dan mengapa aku semacam merendahkan
menuju rekayasa tertentu

687
00:33:00,345 --> 00:33:00,845
pendekatan?

688
00:33:00,845 --> 00:33:06,420

689
00:33:06,420 --> 00:33:07,850
Berpendapat mengapa hal ini buruk.

690
00:33:07,850 --> 00:33:09,375
Ben?

691
00:33:09,375 --> 00:33:10,250
AUDIENCE: [tidak terdengar]

692
00:33:10,250 --> 00:33:12,864

693
00:33:12,864 --> 00:33:16,030
DAVID Malan: Setiap server harus
memiliki duplikat salinan website.

694
00:33:16,030 --> 00:33:16,738
Aku OK dengan itu.

695
00:33:16,738 --> 00:33:19,490
Dan pada kenyataannya, itulah yang aku
seandainya untuk seluruh cerita ini,

696
00:33:19,490 --> 00:33:22,104
karena jika kita wanted-- baik
sebenarnya, kecuali Dan sebelumnya

697
00:33:22,104 --> 00:33:25,270
saran, di mana jika Anda memiliki yang berbeda
server melakukan hal-hal yang berbeda, maka

698
00:33:25,270 --> 00:33:27,740
mungkin mereka benar-benar bisa
fungsional melakukan hal yang berbeda.

699
00:33:27,740 --> 00:33:30,698
>> Tapi meskipun begitu, di beberapa titik, Anda
database akan mendapatkan kelebihan beban.

700
00:33:30,698 --> 00:33:33,030
Server aset statis Anda
akan mendapatkan kelebihan beban.

701
00:33:33,030 --> 00:33:34,850
Jadi di beberapa titik, kami
kembali pada cerita ini, di mana kita

702
00:33:34,850 --> 00:33:36,475
perlu beberapa salinan dari hal yang sama.

703
00:33:36,475 --> 00:33:37,395
Jadi aku OK dengan itu.

704
00:33:37,395 --> 00:33:38,270
AUDIENCE: [tidak terdengar]

705
00:33:38,270 --> 00:33:42,340

706
00:33:42,340 --> 00:33:45,350
>> DAVID Malan: OK, sehingga beberapa halaman
mungkin tidak proporsional populer.

707
00:33:45,350 --> 00:33:50,460
Dan sebagainya terpaku pada satu alamat
belum tentu yang terbaik.

708
00:33:50,460 --> 00:33:51,110
[Tidak terdengar]?

709
00:33:51,110 --> 00:33:51,985
>> AUDIENCE: [tidak terdengar]

710
00:33:51,985 --> 00:33:54,770

711
00:33:54,770 --> 00:33:57,623
>> DAVID Malan: Apa yang Anda maksud dengan itu?

712
00:33:57,623 --> 00:33:58,498
AUDIENCE: [tidak terdengar]

713
00:33:58,498 --> 00:34:03,820

714
00:34:03,820 --> 00:34:05,072
>> DAVID Malan: Ya, persis.

715
00:34:05,072 --> 00:34:07,280
Jadi Anda tidak ingin
tentu have-- Anda pasti

716
00:34:07,280 --> 00:34:11,370
tidak ingin memiliki pengguna Anda
manual mengetik di www1 atau www2.

717
00:34:11,370 --> 00:34:14,550
Dari perspektif branding, itu
hanya terlihat sedikit konyol.

718
00:34:14,550 --> 00:34:17,340
Jika Anda hanya ingin semacam
bersih, pengalaman elegan,

719
00:34:17,340 --> 00:34:20,364
memiliki semacam ini secara acak
URL bernomor benar-benar tidak baik.

720
00:34:20,364 --> 00:34:22,780
Karena itu pengguna yang pasti
akan copy dan paste

721
00:34:22,780 --> 00:34:24,449
dalam email atau pesan instan.

722
00:34:24,449 --> 00:34:25,659
>> Sekarang mereka menyebarkan.

723
00:34:25,659 --> 00:34:28,600
Sekarang Anda semacam membingungkan Anda
kurang penonton teknis, yang berpikir

724
00:34:28,600 --> 00:34:32,239
alamat web Anda www2.something.com.

725
00:34:32,239 --> 00:34:35,434
Tidak ada semantik menarik untuk itu.

726
00:34:35,434 --> 00:34:38,100
Itu hanya terjadi menjadi mendasari
rinci teknis yang telah Anda

727
00:34:38,100 --> 00:34:40,190
nomor server Anda dengan cara ini.

728
00:34:40,190 --> 00:34:45,760
>> Dan lebih buruk lagi, bagaimana jika, misalnya,
mungkin sekitar waktu Natal ketika

729
00:34:45,760 --> 00:34:50,090
bisnis benar-benar booming,
Anda punya www1 melalui www99,

730
00:34:50,090 --> 00:34:53,530
namun pada bulan Januari dan Februari dan
seterusnya, Anda mematikan setengah dari mereka

731
00:34:53,530 --> 00:34:56,440
sehingga Anda hanya memiliki www1 melalui www50?

732
00:34:56,440 --> 00:35:01,963
Apa implikasinya sekarang untuk itu
keputusan bisnis yang sangat wajar?

733
00:35:01,963 --> 00:35:02,838
AUDIENCE: [tidak terdengar]

734
00:35:02,838 --> 00:35:05,628

735
00:35:05,628 --> 00:35:07,752
DAVID Malan: Anda perlu
mengelola semua mereka yang masih.

736
00:35:07,752 --> 00:35:10,515
AUDIENCE: [tidak terdengar]

737
00:35:10,515 --> 00:35:11,390
DAVID Malan: Tepat.

738
00:35:11,390 --> 00:35:12,681
Itu semacam menangkap ada.

739
00:35:12,681 --> 00:35:16,800
Jika pelanggan Anda dalam kebiasaan
bookmark hal, email mereka, hanya

740
00:35:16,800 --> 00:35:19,351
menyimpan URL di suatu tempat, atau
apakah itu hanya di auto mereka

741
00:35:19,351 --> 00:35:22,350
menyelesaikan di browser mereka sehingga mereka
tidak benar-benar sengaja mengetik,

742
00:35:22,350 --> 00:35:25,560
itu hanya terjadi, mereka mungkin,
selama 11 bulan dalam setahun

743
00:35:25,560 --> 00:35:27,190
efektif, mencapai jalan buntu.

744
00:35:27,190 --> 00:35:30,100
Dan hanya yang paling cerdik dari
pengguna akan menyadari,

745
00:35:30,100 --> 00:35:32,040
mungkin aku harus secara manual
menghapus nomor ini.

746
00:35:32,040 --> 00:35:35,610
Maksudku, itu hanya tidak akan terjadi
dengan banyak pengguna, sehingga buruk bagi bisnis,

747
00:35:35,610 --> 00:35:37,750
buruk rekayasa pelaksanaan bijaksana.

748
00:35:37,750 --> 00:35:40,230
>> Jadi untungnya, itu bahkan tidak diperlukan.

749
00:35:40,230 --> 00:35:43,120
Ternyata apa yang
beban balancers dapat melakukan

750
00:35:43,120 --> 00:35:48,130
adalah bukannya mengatakan, ketika A
membuat request-- sebuah hey A, pergi ke 1.

751
00:35:48,130 --> 00:35:50,280
Dengan kata lain, bukan
mengirim redirect yang

752
00:35:50,280 --> 00:35:53,540
sehingga langkah satu di ini
Proses adalah pergi di sini,

753
00:35:53,540 --> 00:35:55,280
ia kemudian diperintahkan untuk pergi ke tempat lain.

754
00:35:55,280 --> 00:35:57,530
Dan langkah ketiga adalah, dia pergi ke tempat lain.

755
00:35:57,530 --> 00:36:04,600
>> Anda malah bisa terus rute, untuk
tetap menggunakan istilah itu, semua data A

756
00:36:04,600 --> 00:36:10,590
melalui penyeimbang beban sehingga ia
tidak pernah kontak 1, 2, atau 3 langsung.

757
00:36:10,590 --> 00:36:15,150
Semua lalu lintas tidak mendapatkan "diarahkan"
oleh beban balancer itu sendiri.

758
00:36:15,150 --> 00:36:17,524
Dan sekarang kita semacam
sengaja mengaburkan garis

759
00:36:17,524 --> 00:36:18,690
antara berbagai perangkat.

760
00:36:18,690 --> 00:36:20,930
Sebuah penyeimbang beban dapat data rute.

761
00:36:20,930 --> 00:36:22,435
Ini hanya sebuah fungsi yang memiliki.

762
00:36:22,435 --> 00:36:25,420
>> Jadi penyeimbang beban, juga, itu
software, benar-benar.

763
00:36:25,420 --> 00:36:27,130
Dan router adalah bagian dari perangkat lunak.

764
00:36:27,130 --> 00:36:29,660
Dan Anda benar-benar dapat memiliki
dua buah perangkat lunak dalam

765
00:36:29,660 --> 00:36:34,000
dari satu komputer fisik sehingga beban
penyeimbang dapat melakukan ini beberapa hal.

766
00:36:34,000 --> 00:36:36,130
>> Jadi ada satu cara lain
untuk melakukan hal ini, yang sebenarnya

767
00:36:36,130 --> 00:36:39,670
kembali ke semacam prinsip-prinsip pertama
dari DNS, yang kita bicarakan

768
00:36:39,670 --> 00:36:40,230
sebelum istirahat.

769
00:36:40,230 --> 00:36:41,634
DNS adalah Domain Name System.

770
00:36:41,634 --> 00:36:43,550
Ingat bahwa Anda dapat
meminta server DNS, apa

771
00:36:43,550 --> 00:36:46,460
alamat IP dari
google.com, facebook.com?

772
00:36:46,460 --> 00:36:48,250
>> Dan kita benar-benar bisa melakukan ini.

773
00:36:48,250 --> 00:36:51,940
Sebuah alat kita tidak menggunakan sebelumnya adalah
satu itu hanya sebagai diakses,

774
00:36:51,940 --> 00:36:55,510
disebut nslookup, untuk server nama lookup.

775
00:36:55,510 --> 00:36:57,410
Dan aku hanya akan mengetik facebook.com.

776
00:36:57,410 --> 00:37:02,500
Dan saya melihat bahwa IP Facebook
alamat rupanya ini.

777
00:37:02,500 --> 00:37:05,520
Biarkan aku pergi ke depan dan menyalin
itu, pergi ke browser,

778
00:37:05,520 --> 00:37:11,690
dan pergi ke http: // dan yang
alamat IP dan tekan Enter.

779
00:37:11,690 --> 00:37:14,140
Dan benar saja, tampaknya bekerja.

780
00:37:14,140 --> 00:37:18,610
>> Sekarang bekerja mundur, apa yang
dalam amplop maya

781
00:37:18,610 --> 00:37:25,454
bahwa Facebook menanggapi dengan saat
Saya mengunjungi yang menangani IP langsung?

782
00:37:25,454 --> 00:37:26,745
Karena pemberitahuan, di mana aku sekarang?

783
00:37:26,745 --> 00:37:29,250

784
00:37:29,250 --> 00:37:32,484
Di mana aku sekarang, alamat?

785
00:37:32,484 --> 00:37:33,450
>> AUDIENCE: [tidak terdengar]

786
00:37:33,450 --> 00:37:36,116
>> DAVID Malan: Pada versi aman,
dan di www.facebook.com itu.

787
00:37:36,116 --> 00:37:38,520
Jadi bukan bahkan hanya
alamat IP yang aman.

788
00:37:38,520 --> 00:37:42,650
Facebook telah diambil itu pada dirinya sendiri
mengatakan, ini konyol.

789
00:37:42,650 --> 00:37:45,710
Kami tidak akan membuat Anda di ini
mencari URL jelek itu numerik.

790
00:37:45,710 --> 00:37:50,120
Kami akan mengirimkan HTTP
mengarahkan dengan cara yang tajuk yang sama

791
00:37:50,120 --> 00:37:53,010
yang kami lihat before--
Lokasi usus sesuatu.

792
00:37:53,010 --> 00:37:56,340
>> Dan ini berarti bahwa di bawah
hood masih alamat IP ini.

793
00:37:56,340 --> 00:37:59,010
Setiap komputer di internet
memiliki alamat IP, akan terlihat.

794
00:37:59,010 --> 00:38:01,480
Tapi Anda tidak perlu harus
untuk mengekspos bahwa untuk pengguna.

795
00:38:01,480 --> 00:38:07,190
Dan banyak seperti kembali pada hari, ada
adalah 1-800-mengumpulkan, 1-800-C-O-L-L-E-C-T,

796
00:38:07,190 --> 00:38:11,700
di AS, adalah cara membuat collect
panggilan melalui telepon yang sangat mudah diingat

797
00:38:11,700 --> 00:38:17,140
nomor, atau 1-800-MATTRESS untuk membeli tempat tidur,
dan mnemonik serupa yang bahkan Anda lihat

798
00:38:17,140 --> 00:38:20,460
di telepon jenis jenis
masih, bahwa surat-surat peta ke nomor.

799
00:38:20,460 --> 00:38:21,470
>> Sekarang, kenapa begitu?

800
00:38:21,470 --> 00:38:26,080
Nah, itu jauh lebih mudah untuk menghafal
1-800-MATTRESS atau 1-800-KUMPULKAN bukan

801
00:38:26,080 --> 00:38:29,100
dari 1-800 sesuatu sesuatu sesuatu
sesuatu sesuatu sesuatu

802
00:38:29,100 --> 00:38:31,030
sesuatu, di mana masing-masing
dari mereka adalah digit.

803
00:38:31,030 --> 00:38:34,390
Demikian pula, dunia belajar
cepat bahwa kita tidak boleh

804
00:38:34,390 --> 00:38:35,940
memiliki orang-orang menghafal alamat IP.

805
00:38:35,940 --> 00:38:36,826
Itu akan konyol.

806
00:38:36,826 --> 00:38:38,200
Kita akan menggunakan nama sebagai gantinya.

807
00:38:38,200 --> 00:38:40,420
Dan itulah mengapa DNS lahir.

808
00:38:40,420 --> 00:38:45,510
>> Baiklah, jadi dengan mengatakan bahwa, dalam hal
load balancing, mari kita coba yahoo.com.

809
00:38:45,510 --> 00:38:47,030
Nah, itulah yang menarik.

810
00:38:47,030 --> 00:38:51,464
Yahoo tampaknya akan kembali tiga IP.

811
00:38:51,464 --> 00:38:53,940
Jadi kesimpulan dari ini,
jika Anda bisa, apa yang

812
00:38:53,940 --> 00:38:58,600
cara lain bahwa kita bisa menerapkan
Gagasan ini load balancing

813
00:38:58,600 --> 00:39:04,310
mungkin tanpa menggunakan fisik
perangkat, perangkat fisik baru ini?

814
00:39:04,310 --> 00:39:08,070
>> Dengan kata lain, dapat saya menghilangkan
pendanaan yang Anda miliki untuk penyeimbang beban

815
00:39:08,070 --> 00:39:10,990
dan memberitahu Anda untuk menggunakan beberapa ada
hardware untuk melaksanakan

816
00:39:10,990 --> 00:39:12,680
Gagasan ini load balancing?

817
00:39:12,680 --> 00:39:18,870

818
00:39:18,870 --> 00:39:22,510
Dan spoiler adalah,
ya, tapi apa, atau bagaimana?

819
00:39:22,510 --> 00:39:27,605
Apa Yahoo mungkin lakukan di sini?

820
00:39:27,605 --> 00:39:29,200
Kareem?

821
00:39:29,200 --> 00:39:30,635
OK, Chris?

822
00:39:30,635 --> 00:39:31,510
AUDIENCE: [tidak terdengar]

823
00:39:31,510 --> 00:39:35,119

824
00:39:35,119 --> 00:39:36,910
DAVID Malan: Ya, semua
tiga dari mereka yang bekerja.

825
00:39:36,910 --> 00:39:39,890
Jadi keacakan, round robin,
yang lokasi Anda hanya bisa

826
00:39:39,890 --> 00:39:44,160
memanfaatkan potongan yang ada dari teka-teki
yang kita bicarakan sebelumnya dari DNS

827
00:39:44,160 --> 00:39:49,580
Sistem dan hanya mengatakan, ketika pertama
pengguna dari hari permintaan yahoo.com,

828
00:39:49,580 --> 00:39:52,970
memberi mereka alamat IP pertama,
seperti yang berakhir di 45 sana.

829
00:39:52,970 --> 00:39:55,762
Dan waktu berikutnya permintaan pengguna
alamat IP dari yahoo.com

830
00:39:55,762 --> 00:39:57,970
dari suatu tempat di dunia,
memberi mereka IP kedua,

831
00:39:57,970 --> 00:39:59,920
maka ketiga IP, maka
pertama IP, kemudian yang kedua.

832
00:39:59,920 --> 00:40:01,850
Atau menjadi pintar tentang hal itu
dan melakukannya secara grafis.

833
00:40:01,850 --> 00:40:05,200
Atau apakah itu secara acak dan tidak hanya melakukan
itu round robin dengan cara ini.

834
00:40:05,200 --> 00:40:07,580
>> Dan dalam hal ini, maka
kita bahkan tidak perlu

835
00:40:07,580 --> 00:40:10,190
untuk memperkenalkan hitam ini
kotak ke dalam gambar kami.

836
00:40:10,190 --> 00:40:11,690
Kita tidak perlu perangkat baru.

837
00:40:11,690 --> 00:40:16,930
Kami hanya mengatakan komputer
untuk pergi ke server secara langsung,

838
00:40:16,930 --> 00:40:18,680
efektif, tetapi tidak
dengan cara nama mereka.

839
00:40:18,680 --> 00:40:20,054
Mereka tidak perlu tahu nama.

840
00:40:20,054 --> 00:40:25,690
Mereka hanya diberitahu bahwa yahoo.com
peta ke salah satu dari alamat IP tersebut.

841
00:40:25,690 --> 00:40:28,180
>> Sehingga mengirimkan permintaan yang sama persis.

842
00:40:28,180 --> 00:40:30,100
Tapi di luar
amplop, itu hanya

843
00:40:30,100 --> 00:40:32,740
menempatkan IP yang diberitahu.

844
00:40:32,740 --> 00:40:35,590
Dan dengan cara ini, juga, bisa
kami memuat menyeimbangkan permintaan

845
00:40:35,590 --> 00:40:39,330
dengan hanya mengirimkan amplop ke
yang berbeda salah satu server Yahoo sendiri?

846
00:40:39,330 --> 00:40:42,390
>> Dan jika kita terus menggali, kita akan melihat
Mungkin perusahaan lain dengan lebih.

847
00:40:42,390 --> 00:40:44,380
CNN telah dua terekspos publik.

848
00:40:44,380 --> 00:40:49,610
Meskipun sebenarnya jika kita melakukan ini lagi
dan again-- cnn.com-- Anda dapat melihat

849
00:40:49,610 --> 00:40:51,730
mereka mengubah urutan, sebenarnya.

850
00:40:51,730 --> 00:40:56,680
Jadi mekanisme apa yang
CNN menggunakan, rupanya?

851
00:40:56,680 --> 00:40:57,440
>> AUDIENCE: Random.

852
00:40:57,440 --> 00:40:59,440
DAVID Malan: Yah, itu
bisa acak, meskipun

853
00:40:59,440 --> 00:41:01,110
tampaknya bersepeda bolak-balik.

854
00:41:01,110 --> 00:41:04,380
Jadi mungkin round robin di mana
mereka hanya beralih urutan sehingga

855
00:41:04,380 --> 00:41:05,880
bahwa saya mungkin akan mengambil yang pertama.

856
00:41:05,880 --> 00:41:08,860
komputer saya akan mengambil
pertama setiap kali.

857
00:41:08,860 --> 00:41:10,490
Jadi itu load balancing.

858
00:41:10,490 --> 00:41:18,450
Dan yang memungkinkan kita, pada akhirnya,
untuk memetakan data, atau permintaan peta,

859
00:41:18,450 --> 00:41:21,240
di beberapa server.

860
00:41:21,240 --> 00:41:24,226
Jadi apa jenis
masalah sekarang masih ada?

861
00:41:24,226 --> 00:41:26,350
Rasanya seperti kami hanya benar-benar
memecahkan masalah yang baik.

862
00:41:26,350 --> 00:41:28,740
Kami mendapat pengguna ke server yang berbeda.

863
00:41:28,740 --> 00:41:31,420
Tapi-- oh, dan Chris, melakukan
Anda memiliki pertanyaan sebelumnya?

864
00:41:31,420 --> 00:41:34,378
>> AUDIENCE: [tidak terdengar]

865
00:41:34,378 --> 00:41:43,670

866
00:41:43,670 --> 00:41:45,120
>> DAVID Malan: Benar-benar tergantung.

867
00:41:45,120 --> 00:41:47,042
Jadi apa yang terjadi di sini?

868
00:41:47,042 --> 00:41:48,250
Dan kita benar-benar dapat melihat ini.

869
00:41:48,250 --> 00:41:51,649
Jadi mari kita coba Yahoo.

870
00:41:51,649 --> 00:41:52,940
Sebenarnya, mari kita pergi ke Facebook.

871
00:41:52,940 --> 00:41:54,520
Karena kita tahu bahwa salah satu bekerja.

872
00:41:54,520 --> 00:41:56,545
Jadi aku akan menyalin
alamat IP lagi.

873
00:41:56,545 --> 00:41:58,820
Aku akan menutup semua tab ini.

874
00:41:58,820 --> 00:42:03,800
Aku akan pergi terbuka yang
tab jaringan khusus di sini.

875
00:42:03,800 --> 00:42:07,800
Dan aku akan mengunjungi hanya http: //.

876
00:42:07,800 --> 00:42:10,694
Dan sekarang aku akan tekan Enter.

877
00:42:10,694 --> 00:42:11,860
Dan mari kita lihat apa yang terjadi.

878
00:42:11,860 --> 00:42:20,662
>> Jika saya melihat bahwa permintaan, pemberitahuan
bahwa Facebook my-- adalah contoh buruk.

879
00:42:20,662 --> 00:42:22,370
Karena mereka memiliki
Teknik super mewah

880
00:42:22,370 --> 00:42:25,960
yang menyembunyikan detail yang dari kami.

881
00:42:25,960 --> 00:42:30,690
Membiarkan saya menggunakan Yahoo
instead-- http: // IP itu.

882
00:42:30,690 --> 00:42:36,030
Mari kita membuka jaringan kami
tab, melestarikan log.

883
00:42:36,030 --> 00:42:37,945
Dan di sini kita pergi, Enter.

884
00:42:37,945 --> 00:42:40,669

885
00:42:40,669 --> 00:42:41,210
Itu lucu.

886
00:42:41,210 --> 00:42:44,480
OK, jadi di sini adalah terkenal 404 pesan.

887
00:42:44,480 --> 00:42:48,500
Apa yang lucu di sini adalah bahwa mereka
mungkin tidak akan kembali.

888
00:42:48,500 --> 00:42:51,430
Karena mungkin ada
bukan sesuatu yang salah per se.

889
00:42:51,430 --> 00:42:54,050
Mereka baru saja sengaja
memutuskan untuk tidak mendukung

890
00:42:54,050 --> 00:42:56,250
bentuk numerik dari alamat mereka.

891
00:42:56,250 --> 00:43:00,270
>> Jadi apa yang kita benar-benar melihat di
tab jaringan, jika saya melakukan ini di sini,

892
00:43:00,270 --> 00:43:06,140
adalah, seperti yang saya katakan, yang terkenal 404, di mana
jika saya melihat header respon,

893
00:43:06,140 --> 00:43:09,070
ini adalah apa yang saya dapatkan di sini-404 Not Found.

894
00:43:09,070 --> 00:43:11,360
Jadi mari kita coba yang lain.

895
00:43:11,360 --> 00:43:13,180
Mari kita lihat apakah CNN bekerja sama dengan kami.

896
00:43:13,180 --> 00:43:19,440
Saya akan ambil salah satu alamat IP CNN,
jelas ini, http, dah, dah, dah, dah.

897
00:43:19,440 --> 00:43:21,620
Jadi untuk menjawab Chris
pertanyaan, salah satu yang bekerja.

898
00:43:21,620 --> 00:43:24,140

899
00:43:24,140 --> 00:43:26,255
>> Dan mari kita pergi ke header respon.

900
00:43:26,255 --> 00:43:30,810

901
00:43:30,810 --> 00:43:33,640
Sebenarnya tidak ada, baiklah, saya
berjuang untuk menemukan contoh kerja.

902
00:43:33,640 --> 00:43:38,270
Jadi CNN telah memutuskan, kami hanya akan meninggalkan Anda
di alamat apa pun yang Anda benar-benar mengunjungi,

903
00:43:38,270 --> 00:43:40,359
masalah branding samping.

904
00:43:40,359 --> 00:43:43,275
Tapi apa yang tidak akan terjadi, jika
kita bisa melihat dalam kasus Facebook,

905
00:43:43,275 --> 00:43:46,700
adalah kita akan mendapatkan 301 Dipindahkan
Permanen, kemungkinan besar,

906
00:43:46,700 --> 00:43:54,420
dalam yang
Lokasi: https: //www.facebook.com.

907
00:43:54,420 --> 00:44:01,210
Dan kemungkinan besar www.facebook.com adalah
alias untuk tepat server yang sama kita hanya

908
00:44:01,210 --> 00:44:01,710
pergi ke.

909
00:44:01,710 --> 00:44:03,500
>> Jadi itu adalah kontraproduktif sedikit.

910
00:44:03,500 --> 00:44:05,170
Kami benar-benar mengunjungi server.

911
00:44:05,170 --> 00:44:07,040
server kemudian mengatakan kepada kita, pergi.

912
00:44:07,040 --> 00:44:08,320
Pergi ke alamat lain ini.

913
00:44:08,320 --> 00:44:10,870
Tapi kami hanya begitu kebetulan
akan kembali ke server yang sama.

914
00:44:10,870 --> 00:44:14,550
Tapi mungkin kita sekarang tetap di
Server tanpa kembali dan sebagainya.

915
00:44:14,550 --> 00:44:18,600
Karena sekarang kita menggunakan bernama
versi situs, bukan numerik.

916
00:44:18,600 --> 00:44:20,060
Pertanyaan bagus.

917
00:44:20,060 --> 00:44:23,690
>> OK, jadi jika kita sekarang assume-- kami
telah memecahkan load balancing.

918
00:44:23,690 --> 00:44:25,894
Kami sekarang memiliki mekanisme,
apakah itu melalui DNS,

919
00:44:25,894 --> 00:44:29,060
apakah itu melalui kotak hitam ini, apakah
itu menggunakan teknik ini.

920
00:44:29,060 --> 00:44:33,810
Kita bisa mengambil permintaan pengguna dan
mencari tahu ke server yang, 1, 2, atau 3,

921
00:44:33,810 --> 00:44:35,420
untuk mengirim dia.

922
00:44:35,420 --> 00:44:39,180
>> Apa yang mulai pecah sekitar website kami?

923
00:44:39,180 --> 00:44:41,160
Dengan kata lain, kita memiliki
membangun sebuah bisnis yang

924
00:44:41,160 --> 00:44:43,480
sebelumnya pada satu server tunggal.

925
00:44:43,480 --> 00:44:46,870
Sekarang bisnis yang sedang berjalan
di beberapa server.

926
00:44:46,870 --> 00:44:51,770
Apa jenis asumsi,
apa jenis keputusan desain,

927
00:44:51,770 --> 00:44:54,870
sekarang mungkin melanggar?

928
00:44:54,870 --> 00:44:55,745
>> Ini kurang jelas.

929
00:44:55,745 --> 00:44:58,620
Tapi mari kita lihat apakah kita tidak dapat menempatkan kami
jari pada beberapa masalah yang kita punya

930
00:44:58,620 --> 00:44:59,780
dibuat untuk diri kita sendiri.

931
00:44:59,780 --> 00:45:02,750
Sekali lagi, itu jenis seperti memegang
menuruni kebocoran di selang.

932
00:45:02,750 --> 00:45:05,094
Dan sekarang beberapa masalah baru
telah muncul di sini.

933
00:45:05,094 --> 00:45:07,880

934
00:45:07,880 --> 00:45:11,380
>> AUDIENCE: [tidak terdengar]

935
00:45:11,380 --> 00:45:16,574

936
00:45:16,574 --> 00:45:19,240
DAVID Malan: OK, jadi kita harus
terus tumbuh ruang hard disk kita.

937
00:45:19,240 --> 00:45:20,450
Aku OK dengan itu sekarang.

938
00:45:20,450 --> 00:45:23,212
Karena saya pikir saya bisa
skala horizontal.

939
00:45:23,212 --> 00:45:26,420
Seperti jika saya sedang menjalankan rendah, saya hanya akan mendapatkan
server keempat, mungkin server kelima,

940
00:45:26,420 --> 00:45:30,820
dan kemudian meningkatkan kapasitas kami
oleh lain 30% atau 50% atau entah apa lagi.

941
00:45:30,820 --> 00:45:32,759
Jadi aku OK dengan itu, setidaknya untuk saat ini.

942
00:45:32,759 --> 00:45:33,634
AUDIENCE: [tidak terdengar]

943
00:45:33,634 --> 00:45:37,314

944
00:45:37,314 --> 00:45:38,980
DAVID Malan: OK, jadi itu titik yang baik.

945
00:45:38,980 --> 00:45:42,340
Jadi misalkan server
tidak identik.

946
00:45:42,340 --> 00:45:45,260
Dan layanan pelanggan
atau setara email

947
00:45:45,260 --> 00:45:48,690
adalah mendapatkan beberapa pesan dari pengguna
mengatakan, ini tidak bekerja dengan baik.

948
00:45:48,690 --> 00:45:52,070
Ini sangat mungkin, kadang-kadang,
bahwa mungkin satu atau lebih server

949
00:45:52,070 --> 00:45:55,000
bertindak sedikit kacau, tapi tidak
yang lain, yang pasti bisa

950
00:45:55,000 --> 00:45:57,096
membuat lebih sulit untuk mengejar masalah ini.

951
00:45:57,096 --> 00:45:58,720
Anda mungkin harus melihat beberapa tempat.

952
00:45:58,720 --> 00:46:00,960
>> Itu adalah manifestasi
dari jenis lain dari bug,

953
00:46:00,960 --> 00:46:03,950
yang adalah bahwa Anda mungkin harus
telah merancang infrastruktur sehingga

954
00:46:03,950 --> 00:46:06,200
bahwa segala sesuatu yang benar-benar identik.

955
00:46:06,200 --> 00:46:10,390
Tapi itu tidak mengungkapkan masalah baru
bahwa kita tidak memiliki sebelumnya.

956
00:46:10,390 --> 00:46:11,715
Apa lagi?

957
00:46:11,715 --> 00:46:12,590
AUDIENCE: [tidak terdengar]

958
00:46:12,590 --> 00:46:16,390

959
00:46:16,390 --> 00:46:19,500
>> DAVID Malan: Ya,
ada kompleksitas.

960
00:46:19,500 --> 00:46:20,792
Ada secara fisik lebih kabel.

961
00:46:20,792 --> 00:46:21,750
Ada perangkat lain.

962
00:46:21,750 --> 00:46:26,310
Bahkan, saya telah memperkenalkan mendasar
konsep dan masalah mendasar di sini

963
00:46:26,310 --> 00:46:28,300
dikenal sebagai satu titik
kegagalan, yang,

964
00:46:28,300 --> 00:46:30,110
bahkan jika Anda belum pernah mendengar
frase, Anda mungkin bisa

965
00:46:30,110 --> 00:46:31,780
sekarang bekerja mundur dan mencari tahu.

966
00:46:31,780 --> 00:46:35,560
Apa artinya bahwa saya memiliki satu
titik kegagalan dalam arsitektur saya?

967
00:46:35,560 --> 00:46:39,694
Dan oleh arsitektur, saya hanya
berarti topologi itu.

968
00:46:39,694 --> 00:46:40,610
>> AUDIENCE: [tidak terdengar]

969
00:46:40,610 --> 00:46:42,901
>> DAVID Malan: Ya, bagaimana jika
penyeimbang beban turun?

970
00:46:42,901 --> 00:46:46,290
Aku sudah dimasukkan orang tengah ini yang
tujuan hidup adalah untuk memecahkan masalah.

971
00:46:46,290 --> 00:46:47,740
Tapi aku sudah memperkenalkan masalah baru.

972
00:46:47,740 --> 00:46:49,350
Kebocoran baru telah bermunculan di selang.

973
00:46:49,350 --> 00:46:53,500
Karena jika penyeimbang beban
meninggal atau istirahat atau misfunctions,

974
00:46:53,500 --> 00:46:56,350
sekarang saya kehilangan akses ke
ketiga server saya.

975
00:46:56,350 --> 00:46:58,880
Dan sebelumnya, saya tidak
memiliki perantara ini.

976
00:46:58,880 --> 00:47:03,020
Dan jadi ini adalah masalah baru, bisa dibilang.

977
00:47:03,020 --> 00:47:05,245
Kami akan kembali ke
bagaimana kita bisa memperbaikinya.

978
00:47:05,245 --> 00:47:06,734
>> AUDIENCE: [tidak terdengar]

979
00:47:06,734 --> 00:47:08,400
DAVID Malan: Itu akan menjadi salah satu pendekatan.

980
00:47:08,400 --> 00:47:13,926
Ya, dan jadi ini akan menjadi cukup
lubang tikus kita mulai turun.

981
00:47:13,926 --> 00:47:15,800
Tapi mari kita kembali ke
yang hanya dalam beberapa saat.

982
00:47:15,800 --> 00:47:17,299
Apa masalah lain yang telah kita buat?

983
00:47:17,299 --> 00:47:25,540

984
00:47:25,540 --> 00:47:27,470
>> Jadi Dan disebutkan basis data sebelumnya.

985
00:47:27,470 --> 00:47:29,500
Dan bahkan jika Anda tidak
terlalu akrab teknis,

986
00:47:29,500 --> 00:47:33,220
database hanya server mana
mengubah data biasanya disimpan,

987
00:47:33,220 --> 00:47:36,430
mungkin perintah seseorang telah ditempatkan,
profil pengguna Anda, nama Anda,

988
00:47:36,430 --> 00:47:40,810
alamat email Anda, hal-hal yang mungkin
akan diinput atau diubah dari waktu ke waktu.

989
00:47:40,810 --> 00:47:44,599
>> Sebelumnya, database saya berada di
server yang sama sebagai server web saya.

990
00:47:44,599 --> 00:47:46,390
Karena saya hanya punya satu
web hosting account.

991
00:47:46,390 --> 00:47:48,480
Semuanya adalah semua di tempat yang sama.

992
00:47:48,480 --> 00:47:54,200
Di mana saya harus menempatkan database saya
sekarang, di server 1, 2, atau 3?

993
00:47:54,200 --> 00:47:55,100
>> AUDIENCE: 4.

994
00:47:55,100 --> 00:47:58,070
>> DAVID Malan: 4, OK, semua
benar, jadi mari kita pergi ke sana.

995
00:47:58,070 --> 00:48:01,650
Jadi aku akan menempatkan saya
database-- dan mari

996
00:48:01,650 --> 00:48:06,520
mulai label ini www, www, www.

997
00:48:06,520 --> 00:48:08,780
Dan aku akan mengatakan,
ini adalah nomor empat.

998
00:48:08,780 --> 00:48:11,270
Dan saya akan mengatakan db untuk database.

999
00:48:11,270 --> 00:48:12,870
OK, saya suka ini.

1000
00:48:12,870 --> 00:48:17,021
Apa yang harus saya garis
mungkin akan menggambar di sini?

1001
00:48:17,021 --> 00:48:18,850
>> AUDIENCE: [tidak terdengar]

1002
00:48:18,850 --> 00:48:22,740
>> DAVID Malan: Ya, jadi kode,
seperti yang akan kita bahas besok,

1003
00:48:22,740 --> 00:48:24,900
mungkin adalah sama
pada semua tiga server.

1004
00:48:24,900 --> 00:48:28,374
Tapi sekarang perlu untuk menghubungkan tidak ke
database berjalan secara lokal tetapi di tempat lain.

1005
00:48:28,374 --> 00:48:29,040
Dan itu baik-baik saja.

1006
00:48:29,040 --> 00:48:31,623
Kami hanya bisa memberikan database
nama, seperti yang telah kita, atau nomor.

1007
00:48:31,623 --> 00:48:33,930
Dan bahwa semua bekerja dengan baik.

1008
00:48:33,930 --> 00:48:35,820
Tapi apa yang telah kita lakukan?

1009
00:48:35,820 --> 00:48:40,640
Kami sudah berskala horizontal dengan memiliki
tiga server, bukan satu, yang

1010
00:48:40,640 --> 00:48:41,140
baik.

1011
00:48:41,140 --> 00:48:44,240
Karena sekarang kita dapat menangani
tiga kali lebih banyak beban.

1012
00:48:44,240 --> 00:48:47,710
>> Dan lebih baik lagi, jika satu atau dua
dari server tersebut turun,

1013
00:48:47,710 --> 00:48:49,350
bisnis saya bisa terus beroperasi.

1014
00:48:49,350 --> 00:48:53,960
Karena saya masih memiliki satu, bahkan jika saya
jenis tertatih-tatih kinerja-bijaksana.

1015
00:48:53,960 --> 00:49:01,020
Tapi apa masalah baru yang harus saya
diperkenalkan dengan memindahkan database

1016
00:49:01,020 --> 00:49:04,350
ke server terpisah ini
bukan pada 1, 2, dan 3?

1017
00:49:04,350 --> 00:49:05,412
>> AUDIENCE: [tidak terdengar]

1018
00:49:05,412 --> 00:49:08,120
DAVID Malan: Ya, jadi sekarang aku punya
lagi satu titik kegagalan.

1019
00:49:08,120 --> 00:49:12,330
Jika database saya meninggal, atau perlu
ditingkatkan, atau apa pun, sekarang yakin,

1020
00:49:12,330 --> 00:49:13,610
website saya adalah online.

1021
00:49:13,610 --> 00:49:16,270
Dan aku dapat melayani statis,
konten tidak berubah.

1022
00:49:16,270 --> 00:49:21,210
Tapi aku tidak bisa membiarkan pengguna login atau perubahan
sesuatu atau perintah apapun, lebih buruk lagi.

1023
00:49:21,210 --> 00:49:24,120
Karena jika 4 offline,
kemudian 1, 2, dan 3

1024
00:49:24,120 --> 00:49:27,710
benar-benar tidak dapat berbicara dengan dengan definisi.

1025
00:49:27,710 --> 00:49:31,560
>> OK jadi ya, dan jadi ini adalah mengapa
Aku ragu-ragu untuk menarik ini.

1026
00:49:31,560 --> 00:49:32,690
Jadi mari kita kembali ke itu.

1027
00:49:32,690 --> 00:49:33,700
Saya tidak bermaksud untuk terus mendorong Anda off.

1028
00:49:33,700 --> 00:49:36,030
Tapi gambar yang sangat
cepat akan mendapatkan stres.

1029
00:49:36,030 --> 00:49:38,620
Karena Anda perlu mulai
memiliki dua dari segala sesuatu.

1030
00:49:38,620 --> 00:49:41,850
Bahkan, jika Anda pernah melihat
Film kontak beberapa tahun yang lalu

1031
00:49:41,850 --> 00:49:45,310
dengan Jodie Foster-- ada?

1032
00:49:45,310 --> 00:49:47,410
>> OK, jadi untuk dua
kita yang pernah melihat kontak,

1033
00:49:47,410 --> 00:49:50,800
ada hubungan sana di mana mereka
dasarnya membeli dua dari sesuatu

1034
00:49:50,800 --> 00:49:53,250
bukan dari satu, meskipun
harga dua kali.

1035
00:49:53,250 --> 00:49:55,922
Jadi itu semacam main-main
komentar dalam film.

1036
00:49:55,922 --> 00:49:57,130
Ini jenis yang berkaitan dengan ini.

1037
00:49:57,130 --> 00:49:58,290
Kami benar-benar bisa melakukan itu.

1038
00:49:58,290 --> 00:50:00,123
Dan Anda baru saja biaya
kami dua kali lebih banyak uang.

1039
00:50:00,123 --> 00:50:01,300
Tapi kita akan kembali ke itu.

1040
00:50:01,300 --> 00:50:02,400
>> Jadi kami telah dipecahkan ini.

1041
00:50:02,400 --> 00:50:03,108
Sehingga Anda tahu apa?

1042
00:50:03,108 --> 00:50:04,450
Ini seperti lereng licin.

1043
00:50:04,450 --> 00:50:07,033
Saya tidak ingin berurusan dengan memiliki
memiliki duplikat basis data.

1044
00:50:07,033 --> 00:50:08,037
Ini terlalu banyak uang.

1045
00:50:08,037 --> 00:50:08,620
Kamu tahu apa?

1046
00:50:08,620 --> 00:50:12,880
Saya ingin memiliki database saya
seperti di versi satu

1047
00:50:12,880 --> 00:50:17,450
di mana setiap server memiliki
database lokal sendiri.

1048
00:50:17,450 --> 00:50:19,480
Jadi aku hanya akan
menggambar db pada masing-masing.

1049
00:50:19,480 --> 00:50:22,240
>> Jadi sekarang setiap web server
identik sejauh

1050
00:50:22,240 --> 00:50:25,650
karena memiliki kode yang sama, sama
aset statis, gambar dan teks yang sama

1051
00:50:25,650 --> 00:50:26,720
dan seterusnya.

1052
00:50:26,720 --> 00:50:29,580
Dan masing-masing memiliki database sendiri.

1053
00:50:29,580 --> 00:50:31,450
Saya tetap satu titik
masalah kegagalan.

1054
00:50:31,450 --> 00:50:32,570
Sekarang aku punya database.

1055
00:50:32,570 --> 00:50:36,210
Tidak peduli yang dua atau salah satu dari ini
hal mati, selalu ada satu kiri.

1056
00:50:36,210 --> 00:50:41,156
Tapi apa masalah baru yang harus saya buat
bahwa solusi Dan ini dihindari?

1057
00:50:41,156 --> 00:50:42,470
>> AUDIENCE: [tidak terdengar]

1058
00:50:42,470 --> 00:50:44,386
>> DAVID Malan: Ya, saya
harus sync mereka, kan?

1059
00:50:44,386 --> 00:50:47,860
Karena baik saya perlu untuk melakukan sinkronisasi
siapa yang akan where-- dengan kata lain,

1060
00:50:47,860 --> 00:50:50,570
jika Alice mengunjungi saya
situs, dan dia terjadi

1061
00:50:50,570 --> 00:50:55,070
untuk mendapatkan secara acak atau bulat robined
atau apa pun, ke server nomor satu,

1062
00:50:55,070 --> 00:50:58,770
setelah itu saya harus selalu
mengirimnya ke server 1.

1063
00:50:58,770 --> 00:50:59,420
Mengapa?

1064
00:50:59,420 --> 00:51:01,540
Karena jika saya mengirim dia
ke server 2, itu akan

1065
00:51:01,540 --> 00:51:03,140
terlihat seperti dia tidak ada di sana.

1066
00:51:03,140 --> 00:51:04,450
>> Aku tidak akan memiliki sejarah pesanannya.

1067
00:51:04,450 --> 00:51:06,300
Aku tidak akan memiliki profil di sana.

1068
00:51:06,300 --> 00:51:09,360
Dan itu hanya terasa seperti
itu mengundang masalah.

1069
00:51:09,360 --> 00:51:11,400
Dan ketika Bob mengunjungi, saya
harus mengirim dia selalu

1070
00:51:11,400 --> 00:51:14,800
ke server yang sama, 2, atau mana
satu, dan Charlie untuk yang ketiga,

1071
00:51:14,800 --> 00:51:15,797
dan konsisten.

1072
00:51:15,797 --> 00:51:17,130
Ini tidak masuk akal, meskipun.

1073
00:51:17,130 --> 00:51:19,270
Ini disebut
partisi database Anda.

1074
00:51:19,270 --> 00:51:21,270
Dan sebenarnya ini adalah apa yang
Facebook melakukan awal.

1075
00:51:21,270 --> 00:51:24,020
>> Jika Anda mengikuti sejarah
Facebook, mulai di sini di kampus

1076
00:51:24,020 --> 00:51:25,770
sebagai www.thefacebook.com.

1077
00:51:25,770 --> 00:51:29,260
Kemudian berkembang setelah Mark mulai
menyebar ke kampus lain

1078
00:51:29,260 --> 00:51:34,450
menjadi harvard.thefacebook.com dan
mit.thefacebook.com, dan mungkin

1079
00:51:34,450 --> 00:51:37,027
bu.thefacebook.com, dan sejenisnya.

1080
00:51:37,027 --> 00:51:38,860
Dan itu karena
sejak awal, saya tidak berpikir

1081
00:51:38,860 --> 00:51:40,484
Anda bisa memiliki teman-teman di kampus.

1082
00:51:40,484 --> 00:51:41,410
Tapi itu baik-baik saja.

1083
00:51:41,410 --> 00:51:43,930
Karena siapa pun dari Harvard
harus dikirim ke server ini.

1084
00:51:43,930 --> 00:51:45,744
Siapa saja dari BU harus dikirim ke server ini.

1085
00:51:45,744 --> 00:51:47,910
Siapa saja dari MIT harus dikirim
untuk server-- ini dalam teori.

1086
00:51:47,910 --> 00:51:50,540
Aku tak tahu semua
mendasari rincian implementasi.

1087
00:51:50,540 --> 00:51:55,610
Tapi dia mungkin dipartisi orang dengan
kampus mereka, di mana jaringan mereka.

1088
00:51:55,610 --> 00:51:58,772
>> Jadi itu bagus sampai titik
di mana Anda memerlukan dua server untuk Harvard,

1089
00:51:58,772 --> 00:51:59,980
atau tiga server untuk Harvard.

1090
00:51:59,980 --> 00:52:01,800
Dan kemudian kesederhanaan yang
jenis rusak.

1091
00:52:01,800 --> 00:52:03,174
Tapi itu pendekatan yang masuk akal.

1092
00:52:03,174 --> 00:52:04,950
Mari kita selalu mengirim Alice
ke tempat yang sama,

1093
00:52:04,950 --> 00:52:06,366
selalu mengirim Bob ke tempat yang sama.

1094
00:52:06,366 --> 00:52:09,680
Tapi apa yang terjadi jika Alice
Server pergi offline?

1095
00:52:09,680 --> 00:52:12,300
Bob dan Charlie masih bisa membeli
hal dan login ke situs.

1096
00:52:12,300 --> 00:52:13,462
Tapi Alice tidak bisa.

1097
00:52:13,462 --> 00:52:15,170
Jadi Anda sudah kehilangan sepertiga
dari basis pengguna Anda.

1098
00:52:15,170 --> 00:52:16,980
Mungkin itu lebih baik dari 100%?

1099
00:52:16,980 --> 00:52:20,580
Tapi mungkin itu akan baik jika kita bisa
masih mendukung 100% dari pengguna kami

1100
00:52:20,580 --> 00:52:23,470
bahkan ketika sepertiga dari kami
server berjalan offline.

1101
00:52:23,470 --> 00:52:24,760
>> Jadi kita bisa sync apa?

1102
00:52:24,760 --> 00:52:29,250
Tidak pengguna, per se, tetapi
Database di semua server ini.

1103
00:52:29,250 --> 00:52:33,350
Jadi sekarang kita jenis membutuhkan
jenis interkoneksi

1104
00:52:33,350 --> 00:52:37,880
sini sehingga server sendiri
dapat sync-- tidak masuk akal.

1105
00:52:37,880 --> 00:52:40,090
Dan pada kenyataannya, teknologi ini ada.

1106
00:52:40,090 --> 00:52:45,550
Dalam dunia database, ada
gagasan database master-budak,

1107
00:52:45,550 --> 00:52:48,240
atau primer-sekunder,
mana di antara fitur

1108
00:52:48,240 --> 00:52:51,050
tidak hanya untuk menyimpan data
dan menanggapi dengan data,

1109
00:52:51,050 --> 00:52:53,375
tetapi juga hanya untuk terus
sinkron dengan satu sama lain.

1110
00:52:53,375 --> 00:52:56,480
Jadi setiap kali Anda menulis atau menyimpan
sesuatu untuk database ini,

1111
00:52:56,480 --> 00:53:00,040
segera akan "direplikasi"
ke database lain juga.

1112
00:53:00,040 --> 00:53:02,870
>> Dan setiap kali Anda membaca dari itu,
tidak peduli di mana Anda berada.

1113
00:53:02,870 --> 00:53:05,170
Karena jika dalam teori
mereka semua sudah disinkronkan, Anda

1114
00:53:05,170 --> 00:53:07,710
akan mendapatkan pandangan yang sama dari data.

1115
00:53:07,710 --> 00:53:10,800
Jadi ini terdengar sempurna.

1116
00:53:10,800 --> 00:53:11,883
Ada harus menjadi menangkap.

1117
00:53:11,883 --> 00:53:15,200

1118
00:53:15,200 --> 00:53:18,990
Apa yang mungkin menangkap itu?

1119
00:53:18,990 --> 00:53:21,790
>> AUDIENCE: [tidak terdengar]

1120
00:53:21,790 --> 00:53:25,830
>> DAVID Malan: Ya, jadi tiga kali
sebanyak hal yang bisa salah.

1121
00:53:25,830 --> 00:53:26,930
Itu kenyataan.

1122
00:53:26,930 --> 00:53:28,480
Itu semua mungkin sama dalam roh.

1123
00:53:28,480 --> 00:53:30,404
Tetapi seseorang perlu untuk mengkonfigurasi ini.

1124
00:53:30,404 --> 00:53:33,070
Ada kemungkinan lebih tinggi bahwa
sesuatu akan salah.

1125
00:53:33,070 --> 00:53:38,130
Hanya combinatorially Anda memiliki
lebih banyak barang rentan terhadap kesalahan.

1126
00:53:38,130 --> 00:53:40,505
Apa lagi yang buruk berpotensi?

1127
00:53:40,505 --> 00:53:41,380
AUDIENCE: [tidak terdengar]

1128
00:53:41,380 --> 00:53:44,100

1129
00:53:44,100 --> 00:53:46,180
>> DAVID Malan: Ya, jadi
syncing dapat buruk.

1130
00:53:46,180 --> 00:53:48,110
Bahkan seperti yang Anda mungkin tahu
dari backup dan semacamnya,

1131
00:53:48,110 --> 00:53:50,520
jika Anda hanya secara membuta membuat
backup, bagaimana jika sesuatu tidak

1132
00:53:50,520 --> 00:53:51,560
salah pada satu database?

1133
00:53:51,560 --> 00:53:53,018
Anda menghapus sesuatu yang tidak seharusnya.

1134
00:53:53,018 --> 00:53:56,299
Anda segera direplikasi
bahwa masalah di tempat lain.

1135
00:53:56,299 --> 00:53:58,840
Jadi Victoria adalah backup talking--
akan menjadi hal yang baik di sini.

1136
00:53:58,840 --> 00:54:00,549
Dan jadi kita akan kembali ke itu.

1137
00:54:00,549 --> 00:54:03,090
Dan harus jelas, kita sedang berbicara
bukan tentang backup sini per se.

1138
00:54:03,090 --> 00:54:08,240
Kita bicara tentang replikasi benar
atau sinkronisasi di server.

1139
00:54:08,240 --> 00:54:09,110
Mereka semua hidup.

1140
00:54:09,110 --> 00:54:12,074
Mereka tidak dimaksudkan untuk
digunakan untuk backup.

1141
00:54:12,074 --> 00:54:13,294
>> AUDIENCE: [tidak terdengar]

1142
00:54:13,294 --> 00:54:14,335
DAVID Malan: Apa itu?

1143
00:54:14,335 --> 00:54:14,710
AUDIENCE: Higher--

1144
00:54:14,710 --> 00:54:15,751
DAVID Malan: biaya yang lebih tinggi.

1145
00:54:15,751 --> 00:54:20,180
Kami telah tiga kali lipat biaya untuk
yakin, meskipun setidaknya dalam hal

1146
00:54:20,180 --> 00:54:21,100
perangkat keras.

1147
00:54:21,100 --> 00:54:23,200
Karena database adalah
hanya bagian dari perangkat lunak.

1148
00:54:23,200 --> 00:54:25,189
Dan web server adalah bagian dari perangkat lunak.

1149
00:54:25,189 --> 00:54:27,980
Ini mungkin gratis jika kita menggunakan
sejumlah terbuka hal sumber.

1150
00:54:27,980 --> 00:54:30,480
Tetapi jika kita menggunakan
sesuatu seperti Oracle,

1151
00:54:30,480 --> 00:54:36,574
kita membayar Oracle lebih banyak uang per
lisensi, atau Microsoft untuk akses.

1152
00:54:36,574 --> 00:54:38,240
Ada harus ada beberapa tangkapan lain di sini.

1153
00:54:38,240 --> 00:54:39,240
Hal ini tidak bisa sederhana.

1154
00:54:39,240 --> 00:54:42,990

1155
00:54:42,990 --> 00:54:47,300
>> Jadi untuk titik Anda, saya pikir itu
Kareem, untuk geografi earlier-- atau tidak,

1156
00:54:47,300 --> 00:54:50,870
Roman, apakah itu, untuk geography-- kira
bahwa kita menjadi pintar tentang hal ini,

1157
00:54:50,870 --> 00:54:54,080
dan kami menempatkan salah satu server kami,
dan pada gilirannya database kami, di Amerika Serikat,

1158
00:54:54,080 --> 00:54:56,910
dan satu lagi di Eropa, yang lain di
Amerika Selatan, yang lain di Afrika,

1159
00:54:56,910 --> 00:55:00,290
lain di Asia, di mana saja kami
mungkin ingin seluruh dunia.

1160
00:55:00,290 --> 00:55:04,220
Kita sudah tahu dari jejak kami
rute yang titik A dan titik

1161
00:55:04,220 --> 00:55:06,910
B, jika mereka jauh terpisah,
akan mengambil lebih banyak waktu.

1162
00:55:06,910 --> 00:55:10,312
>> Dan jika beberapa dari Anda telah menggunakan
alat, seperti Facebook atau Twitter

1163
00:55:10,312 --> 00:55:13,520
atau situs-situs ini hari ini yang
terus berubah karena pengguna

1164
00:55:13,520 --> 00:55:16,880
data yang dibuat, kadang-kadang jika Anda
hit Reload atau membuka halaman yang sama

1165
00:55:16,880 --> 00:55:20,270
di browser lain, Anda melihat
versi yang berbeda, hampir.

1166
00:55:20,270 --> 00:55:22,875
Anda mungkin melihat status seseorang
informasi di sini tapi tidak di sini,

1167
00:55:22,875 --> 00:55:25,500
dan kemudian Anda kembali, dan kemudian
muncul, dan Anda kembali lagi,

1168
00:55:25,500 --> 00:55:26,640
dan menghilang.

1169
00:55:26,640 --> 00:55:29,076
Dengan kata lain, menjaga
mata keluar untuk ini, setidaknya

1170
00:55:29,076 --> 00:55:30,950
jika Anda menggunakan sosial
jaringan terutama.

1171
00:55:30,950 --> 00:55:33,320
>> Sekali lagi, hanya karena
Data berubah begitu cepat,

1172
00:55:33,320 --> 00:55:35,710
kadang-kadang server yang keluar dari sinkronisasi.

1173
00:55:35,710 --> 00:55:37,230
Dan mungkin itu jendela super kecil.

1174
00:55:37,230 --> 00:55:39,970
Tapi 200 milidetik, mungkin
bahkan lebih dari itu-- itu

1175
00:55:39,970 --> 00:55:43,415
akan mengambil beberapa non-nol jumlah
waktu untuk database ini untuk melakukan sinkronisasi.

1176
00:55:43,415 --> 00:55:45,290
Dan kita tidak hanya
berbicara tentang satu permintaan.

1177
00:55:45,290 --> 00:55:48,540
Jika sebuah perusahaan memiliki ribuan
pengguna menggunakannya secara bersamaan,

1178
00:55:48,540 --> 00:55:49,460
mereka mungkin penyangga.

1179
00:55:49,460 --> 00:55:52,240
Dengan kata lain, mungkin ada
menjadi antrian atau baris menunggu

1180
00:55:52,240 --> 00:55:54,950
sebelum semua database mereka
query dapat disinkronkan.

1181
00:55:54,950 --> 00:55:56,610
Jadi mungkin itu sebenarnya beberapa detik.

1182
00:55:56,610 --> 00:55:59,820
>> Dan memang ini benar saya pikir bahkan
sampai hari ini dengan Facebook, dimana

1183
00:55:59,820 --> 00:56:02,010
ketika mereka melakukan sinkronisasi dari
East Coast to Coast Barat,

1184
00:56:02,010 --> 00:56:06,026
memiliki non-sepele
propagasi delay, sehingga untuk berbicara,

1185
00:56:06,026 --> 00:56:07,650
bahwa Anda hanya semacam harus mentolerir.

1186
00:56:07,650 --> 00:56:11,210
Dan sehingga tidak begitu banyak
bug seperti itu kenyataan

1187
00:56:11,210 --> 00:56:14,230
bahwa pengguna Anda mungkin tidak melihat
data yang benar untuk setidaknya

1188
00:56:14,230 --> 00:56:14,970
beberapa detik.

1189
00:56:14,970 --> 00:56:17,410
>> Saya melihat ini di Twitter banyak
sebenarnya di mana kadang-kadang aku akan

1190
00:56:17,410 --> 00:56:21,227
-tweet dalam satu jendela, membuka lain untuk
kemudian melihatnya untuk mengkonfirmasi bahwa itu memang

1191
00:56:21,227 --> 00:56:22,560
naik, dan itu belum ada di sana.

1192
00:56:22,560 --> 00:56:25,340
Dan saya harus jenis ulang,
ulang, reload-- oh, itu dia.

1193
00:56:25,340 --> 00:56:27,150
Dan itu bukan karena tidak disimpan.

1194
00:56:27,150 --> 00:56:29,850
Hanya belum disebarkan
ke server lain.

1195
00:56:29,850 --> 00:56:33,120
>> Jadi ini trade-off, too-- apakah Anda benar-benar
ingin mengekspos diri Anda untuk risiko

1196
00:56:33,120 --> 00:56:37,254
bahwa jika pengguna pergi ke pesanan mereka
sejarah, itu tidak benar-benar ada belum?

1197
00:56:37,254 --> 00:56:38,420
Saya melihat ini di bank-bank tertentu.

1198
00:56:38,420 --> 00:56:42,100
Itu selalu mengganggu saya ketika, baik, untuk satu,
Anda hanya bisa pergi seperti enam bulan kembali

1199
00:56:42,100 --> 00:56:45,160
dalam laporan bank Anda di beberapa bank,
meskipun dalam teori mereka harus

1200
00:56:45,160 --> 00:56:46,576
dapat memiliki semuanya secara online.

1201
00:56:46,576 --> 00:56:48,630
Mereka hanya mengambil barang-barang secara offline kadang-kadang.

1202
00:56:48,630 --> 00:56:51,430
Kadang-kadang, too-- apa website itu?

1203
00:56:51,430 --> 00:56:53,570
Ada satu-- oh, itu GoDaddy, saya pikir.

1204
00:56:53,570 --> 00:56:56,620
GoDaddy, ketika Anda check out
membeli nama domain atau sesuatu,

1205
00:56:56,620 --> 00:56:58,630
mereka akan sering memberikan
link ke tanda terima.

1206
00:56:58,630 --> 00:57:01,470
Dan jika Anda mengklik link yang tepat
pergi, itu sering tidak bekerja.

1207
00:57:01,470 --> 00:57:03,290
Ia hanya mengatakan, buntu, tidak ada di sini.

1208
00:57:03,290 --> 00:57:05,450
>> Dan itu juga karena
penundaan propagasi ini.

1209
00:57:05,450 --> 00:57:08,290
Karena untuk alasan apa pun, mereka
mengambil sedikit waktu

1210
00:57:08,290 --> 00:57:09,670
untuk benar-benar menghasilkan itu.

1211
00:57:09,670 --> 00:57:12,070
Jadi ini adalah semacam seperti Anda ingin
menarik rambut Anda keluar di beberapa titik.

1212
00:57:12,070 --> 00:57:14,486
Karena semua yang Anda coba
lakukan adalah memecahkan masalah sederhana.

1213
00:57:14,486 --> 00:57:16,590
Dan kami terus menciptakan baru
masalah bagi diri kita sendiri.

1214
00:57:16,590 --> 00:57:18,770
Jadi mari kita lihat apakah kita
dapat jenis membatalkan ini.

1215
00:57:18,770 --> 00:57:22,730
>> Ternyata menggabungkan
database pada semua server web Anda

1216
00:57:22,730 --> 00:57:25,090
adalah praktik tidak benar-benar terbaik.

1217
00:57:25,090 --> 00:57:27,950
Umumnya, apa yang seorang insinyur
akan melakukan, atau sistem arsitek,

1218
00:57:27,950 --> 00:57:30,340
akan memiliki yang berbeda
tingkatan server.

1219
00:57:30,340 --> 00:57:33,160
Dan hanya demi ruang ini, aku akan
menggambar database mereka di sini.

1220
00:57:33,160 --> 00:57:38,060
>> Kita mungkin memiliki database dan
Server nomor empat di sini

1221
00:57:38,060 --> 00:57:42,430
yang tidak memiliki hubungan dengan
masing-masing server ini di sini.

1222
00:57:42,430 --> 00:57:45,400
Jadi ini mungkin depan kami
berakhir tier, sebagai orang-orang akan mengatakan.

1223
00:57:45,400 --> 00:57:47,770
Dan ini akan kembali akhir tingkat kami.

1224
00:57:47,770 --> 00:57:50,580
Dan itu hanya berarti bahwa
ini menghadapi pengguna.

1225
00:57:50,580 --> 00:57:53,010
Dan database tidak menghadapi pengguna.

1226
00:57:53,010 --> 00:57:55,480
Tidak ada pengguna langsung bisa
mengakses database.

1227
00:57:55,480 --> 00:57:59,280
>> Jadi mari kita sekarang mungkin turun
rute Victoria diusulkan.

1228
00:57:59,280 --> 00:58:00,940
Ini adalah titik kegagalan.

1229
00:58:00,940 --> 00:58:02,290
Yang membuat saya tidak nyaman.

1230
00:58:02,290 --> 00:58:05,790
Jadi apa yang mungkin
kebanyakan solusi yang jelas?

1231
00:58:05,790 --> 00:58:06,665
AUDIENCE: [tidak terdengar]

1232
00:58:06,665 --> 00:58:09,979

1233
00:58:09,979 --> 00:58:11,437
DAVID Malan: Maaf, mengatakan bahwa lagi.

1234
00:58:11,437 --> 00:58:12,352
AUDIENCE: [tidak terdengar]

1235
00:58:12,352 --> 00:58:13,810
DAVID Malan: Server Non-produksi.

1236
00:58:13,810 --> 00:58:15,364
Apa maksudmu?

1237
00:58:15,364 --> 00:58:17,120
>> AUDIENCE: [tidak terdengar]

1238
00:58:17,120 --> 00:58:19,120
>> DAVID Malan: Oh, OK, jadi backup.

1239
00:58:19,120 --> 00:58:21,110
OK, jadi kita bisa melakukan itu, tentu.

1240
00:58:21,110 --> 00:58:23,790
Dan sebenarnya ini sangat lazim dilakukan.

1241
00:58:23,790 --> 00:58:26,470
Ini mungkin basis data nomor lima.

1242
00:58:26,470 --> 00:58:28,510
Tapi itu hanya
terhubung ke nomor empat.

1243
00:58:28,510 --> 00:58:31,110
Dan Anda mungkin menyebutnya cadangan panas.

1244
00:58:31,110 --> 00:58:35,080
Kedua database dapat dikonfigurasi
hanya terus melakukan sinkronisasi

1245
00:58:35,080 --> 00:58:35,850
satu sama lain.

1246
00:58:35,850 --> 00:58:39,010
Dan jadi jika mesin ini mati, untuk
apapun bodoh reason-- hard drive

1247
00:58:39,010 --> 00:58:42,100
meninggal, seseorang perjalanan selama
kabel, beberapa perangkat lunak cacat

1248
00:58:42,100 --> 00:58:46,560
dan hang mesin atau crashes--
Anda bisa memiliki manusia secara harfiah

1249
00:58:46,560 --> 00:58:51,090
cabut satu ini dari dinding
dan bukannya pasang satu ini di.

1250
00:58:51,090 --> 00:58:56,340
Dan kemudian dalam, katakanlah, sebuah
beberapa menit, mungkin setengah jam,

1251
00:58:56,340 --> 00:58:57,210
Anda kembali online.

1252
00:58:57,210 --> 00:58:59,259
>> Itu tidak besar, tapi
itu juga tidak mengerikan.

1253
00:58:59,259 --> 00:59:01,800
Dan Anda tidak perlu khawatir
tentang masalah sinkronisasi.

1254
00:59:01,800 --> 00:59:03,080
Karena semuanya sudah ada.

1255
00:59:03,080 --> 00:59:05,000
Karena Anda memiliki sempurna
backup siap untuk pergi.

1256
00:59:05,000 --> 00:59:07,100
>> Anda bisa sedikit
pelamun tentang hal ini,

1257
00:59:07,100 --> 00:59:12,990
karena beberapa orang sering lakukan, di mana Anda
mungkin memiliki jumlah database yang empat di sini,

1258
00:59:12,990 --> 00:59:17,480
jumlah database yang lima di sini,
yang berbicara satu sama lain.

1259
00:59:17,480 --> 00:59:24,120
Tapi Anda juga memiliki ini
jenis arrangement--

1260
00:59:24,120 --> 00:59:27,440
dan itu sengaja
terlihat berantakan, karena

1261
00:59:27,440 --> 00:59:30,220
is-- mana semua
server front end bisa

1262
00:59:30,220 --> 00:59:32,870
berbicara dengan semua server back end.

1263
00:59:32,870 --> 00:59:38,130
Dan jadi jika database ini tidak
menanggapi, server ini front end memiliki

1264
00:59:38,130 --> 00:59:40,212
untuk memiliki pemrograman
kode di dalamnya yang mengatakan,

1265
00:59:40,212 --> 00:59:42,170
jika Anda tidak mendapatkan
koneksi ke database ini,

1266
00:59:42,170 --> 00:59:45,830
primer segera dimulai
berbicara ke sekunder.

1267
00:59:45,830 --> 00:59:48,310
>> Tapi ini sekarang mendorong
kompleksitas kode.

1268
00:59:48,310 --> 00:59:52,070
Dan sekarang pengembang Anda, perangkat lunak Anda
pengembang, harus tahu tentang hal ini.

1269
00:59:52,070 --> 00:59:56,454
Dan kau jenis mengikat kode yang
Anda sedang menulis ke aktual back end Anda

1270
00:59:56,454 --> 00:59:58,370
rincian implementasi,
yang membuat lebih sulit,

1271
00:59:58,370 --> 01:00:00,670
terutama dalam lebih besar
perusahaan atau website yang lebih besar,

1272
01:00:00,670 --> 01:00:05,020
di mana Anda tidak perlu
ingin programmer untuk memiliki

1273
01:00:05,020 --> 01:00:10,890
untuk mengetahui bagaimana database
insinyur melakukan pekerjaan mereka.

1274
01:00:10,890 --> 01:00:13,810
Anda mungkin ingin menyimpan peran-peran
semacam fungsional yang berbeda sehingga

1275
01:00:13,810 --> 01:00:16,810
bahwa ada lapisan ini
abstraksi antara keduanya.

1276
01:00:16,810 --> 01:00:17,940
>> Jadi bagaimana mungkin kita memperbaiki ini?

1277
01:00:17,940 --> 01:00:20,290
Yah, kita jenis dipecahkan
masalah ini sekali sebelumnya.

1278
01:00:20,290 --> 01:00:25,680
Mengapa kita tidak menempatkan salah satu
hal ini di sini di mana

1279
01:00:25,680 --> 01:00:30,947
itu berbicara pada gilirannya untuk nomor empat dan
lima, semua server web front end

1280
01:00:30,947 --> 01:00:33,780
berbicara dengan perantara ini, dan
perantara pada gilirannya rute data mereka?

1281
01:00:33,780 --> 01:00:38,494
Bahkan, apa yang mungkin menjadi
nama yang bagus untuk hal ini?

1282
01:00:38,494 --> 01:00:39,704
>> AUDIENCE: [tidak terdengar]

1283
01:00:39,704 --> 01:00:41,120
DAVID Malan: OK, manajer database.

1284
01:00:41,120 --> 01:00:48,030
Tapi apa mungkin istilah bahwa
kita bisa menggunakan kembali untuk perangkat ini?

1285
01:00:48,030 --> 01:00:49,760
Kami menyeimbangkan.

1286
01:00:49,760 --> 01:00:52,480
Ya, jadi sebenarnya, aku
tidak adil di sini.

1287
01:00:52,480 --> 01:00:56,760
Jadi penyeimbang beban akan berarti bahwa
kita Toggling bolak-balik di sini,

1288
01:00:56,760 --> 01:00:58,836
yang tidak perlu benar-benar terjadi.

1289
01:00:58,836 --> 01:01:00,460
Jadi ada beberapa cara kita bisa melakukan ini.

1290
01:01:00,460 --> 01:01:03,920
>> Jika ini sebenarnya penyeimbang beban, yang
Cerita ini persis sama seperti sebelumnya.

1291
01:01:03,920 --> 01:01:05,230
Beberapa permintaan pergi ke 4.

1292
01:01:05,230 --> 01:01:06,150
Beberapa dari mereka pergi ke 5.

1293
01:01:06,150 --> 01:01:06,710
Dan itu bagus.

1294
01:01:06,710 --> 01:01:08,835
Karena sekarang kita dapat menangani
dua kali lebih banyak throughput yang.

1295
01:01:08,835 --> 01:01:11,120
Tapi hubungan ini
di sini adalah super penting.

1296
01:01:11,120 --> 01:01:14,050
Mereka harus tinggal terus
disinkronisasi dan mudah-mudahan

1297
01:01:14,050 --> 01:01:17,670
tidak geografis terlalu jauh sehingga
sinkronisasi pada dasarnya

1298
01:01:17,670 --> 01:01:18,520
seketika.

1299
01:01:18,520 --> 01:01:20,410
Kalau tidak, kita mungkin memiliki masalah.

1300
01:01:20,410 --> 01:01:21,330
>> Jadi itu tidak buruk.

1301
01:01:21,330 --> 01:01:25,132
Tapi sekali lagi, kami telah
memperkenalkan masalah baru.

1302
01:01:25,132 --> 01:01:26,590
Masalah apa yang telah saya hanya diciptakan?

1303
01:01:26,590 --> 01:01:30,000

1304
01:01:30,000 --> 01:01:31,020
Titik kegagalan.

1305
01:01:31,020 --> 01:01:32,390
Jadi apa solusi untuk itu?

1306
01:01:32,390 --> 01:01:39,270
Jadi sebagai Victoria gemar menghabiskan uang,
kita bisa mengambil orang ini keluar dan melakukan ini.

1307
01:01:39,270 --> 01:01:41,731
Dan aku hanya akan
pindah ke sini cukup ruang.

1308
01:01:41,731 --> 01:01:43,230
Dan itu akan menjadi sedikit berantakan.

1309
01:01:43,230 --> 01:01:44,563
Aku akan terus menggambar garis.

1310
01:01:44,563 --> 01:01:47,080
Misalkan semua
garis masuk ke kedua?

1311
01:01:47,080 --> 01:01:52,670
>> Sebuah teknik yang sangat umum di sini akan
menggunakan teknik yang disebut detak jantung

1312
01:01:52,670 --> 01:01:57,390
dimana masing-masing perangkat ini,
balancers beban kiri dan kanan,

1313
01:01:57,390 --> 01:02:00,740
atau apa pun yang kita ingin memanggil mereka,
terus berkata, aku masih hidup,

1314
01:02:00,740 --> 01:02:03,220
Aku masih hidup, aku masih hidup, aku masih hidup.

1315
01:02:03,220 --> 01:02:05,910
Salah satunya secara default
bertindak sebagai primer.

1316
01:02:05,910 --> 01:02:09,620
Jadi semua lalu lintas sedang dialihkan melalui
satu di sebelah kiri, misalnya,

1317
01:02:09,620 --> 01:02:11,260
secara default, sewenang-wenang.

1318
01:02:11,260 --> 01:02:16,890
>> Tapi begitu pria di sebelah kanan
tidak mendengar dari orang kiri lagi,

1319
01:02:16,890 --> 01:02:20,440
satu di sebelah kanan diprogram
untuk secara otomatis, misalnya,

1320
01:02:20,440 --> 01:02:24,110
mengambil alih alamat IP
dari satu di sebelah kiri,

1321
01:02:24,110 --> 01:02:28,240
dan karena itu menjadi primer, dan
mungkin mengirim email atau pesan teks

1322
01:02:28,240 --> 01:02:31,570
ke manusia mengatakan, hey,
primer meninggalkan offline.

1323
01:02:31,570 --> 01:02:33,310
Aku akan menjadi utama untuk saat ini.

1324
01:02:33,310 --> 01:02:35,760
Jadi wakil presiden menjadi
Presiden, sehingga untuk berbicara.

1325
01:02:35,760 --> 01:02:38,180
Dan seseorang harus pergi menyelamatkan
presiden, jika Anda ingin.

1326
01:02:38,180 --> 01:02:41,090
Karena sekarang kita memiliki sementara
titik kegagalan.

1327
01:02:41,090 --> 01:02:45,020
>> Sehingga rumit atau stres sebagai
ini mungkin tampaknya mulai menjadi,

1328
01:02:45,020 --> 01:02:46,990
ini adalah bagaimana Anda memecahkan masalah ini.

1329
01:02:46,990 --> 01:02:48,190
Anda membuang uang itu.

1330
01:02:48,190 --> 01:02:49,370
Anda melemparkan hardware itu.

1331
01:02:49,370 --> 01:02:52,170
Tapi sayangnya Anda
menambah kompleksitas untuk itu.

1332
01:02:52,170 --> 01:02:56,450
Tapi hasilnya, akhirnya, adalah bahwa
Anda memiliki lebih banyak, dalam teori,

1333
01:02:56,450 --> 01:02:57,670
arsitektur yang kuat.

1334
01:02:57,670 --> 01:02:58,850
Ini masih belum sempurna.

1335
01:02:58,850 --> 01:03:02,470
Karena bahkan ketika kita have-- kami mungkin
tidak memiliki satu titik kegagalan.

1336
01:03:02,470 --> 01:03:05,240
Kami sekarang memiliki poin ganda kegagalan.

1337
01:03:05,240 --> 01:03:07,630
Tetapi jika dua hal yang salah,
yang benar-benar bisa,

1338
01:03:07,630 --> 01:03:09,030
kami masih akan menjadi offline.

1339
01:03:09,030 --> 01:03:11,660
>> Dan sangat umum di
industri adalah untuk menggambarkan

1340
01:03:11,660 --> 01:03:14,000
waktu sampai Anda dalam hal sembilan.

1341
01:03:14,000 --> 01:03:18,610
Dan semacam tujuan
untuk bercita-cita adalah 99,999%

1342
01:03:18,610 --> 01:03:21,580
waktu situs Anda secara online.

1343
01:03:21,580 --> 01:03:24,170
Atau bahkan lebih baik, tambahkan
beberapa kali sembilan lebih untuk itu.

1344
01:03:24,170 --> 01:03:28,159
Sayangnya, ini
sembilan yang sangat mahal.

1345
01:03:28,159 --> 01:03:29,450
Dan mari kita benar-benar melakukan hal ini.

1346
01:03:29,450 --> 01:03:35,510
Jadi jika saya membuka kalkulator besar lagi,
365 hari dalam setahun, 24 jam dalam sehari,

1347
01:03:35,510 --> 01:03:44,780
60 menit dalam satu jam, dan
60 detik dalam satu menit,

1348
01:03:44,780 --> 01:03:48,690
itu berapa detik ada
dalam setahun jika saya melakukan ini dengan benar.

1349
01:03:48,690 --> 01:03:55,740
Jadi jika kita kali ini dengan 0,99999, itu
berapa banyak waktu yang kita ingin bercita-cita untuk.

1350
01:03:55,740 --> 01:04:00,600
Jadi itu berarti kita harus sampai
ini banyak detik sepanjang tahun.

1351
01:04:00,600 --> 01:04:03,920
Jadi jika saya sekarang kurangi
nilai asli, atau lebih tepatnya

1352
01:04:03,920 --> 01:04:07,480
nilai baru ini dari
first-- 316 detik,

1353
01:04:07,480 --> 01:04:09,640
yang tentu saja lima menit.

1354
01:04:09,640 --> 01:04:13,770
>> Jadi jika website Anda atau perusahaan Anda adalah
mengklaim "lima sembilan," dimana kau

1355
01:04:13,770 --> 01:04:17,050
up 99,99% dari waktu,
itu berarti Anda lebih baik

1356
01:04:17,050 --> 01:04:23,470
sudah cukup cerdas dan cepat
cukup dan cukup siram dengan sumber

1357
01:04:23,470 --> 01:04:27,890
bahwa server Anda hanya secara offline
lima menit keluar tahun ini.

1358
01:04:27,890 --> 01:04:29,980
Ini adalah mahal dan
hal yang sulit untuk bercita-cita.

1359
01:04:29,980 --> 01:04:31,430
>> Jadi itu adalah trade off, juga.

1360
01:04:31,430 --> 01:04:35,866
99,999% dari waktu cukup
darn sulit dan mahal.

1361
01:04:35,866 --> 01:04:38,740
Lima minutes-- Anda hampir tidak bisa mendapatkan
ke server secara fisik mengganti

1362
01:04:38,740 --> 01:04:40,040
sesuatu yang tidak beres.

1363
01:04:40,040 --> 01:04:42,810
Dan itu sebabnya kami mulai kabel
hal bersama-sama lebih rumit

1364
01:04:42,810 --> 01:04:48,240
apriori sehingga komputer
dapat semacam memperbaiki diri.

1365
01:04:48,240 --> 01:04:49,446
Ya.

1366
01:04:49,446 --> 01:04:52,344
>> AUDIENCE: [tidak terdengar]

1367
01:04:52,344 --> 01:05:02,014

1368
01:05:02,014 --> 01:05:04,430
DAVID Malan: Masalahnya bisa
berada di sejumlah tempat.

1369
01:05:04,430 --> 01:05:05,090
Dan di fact--

1370
01:05:05,090 --> 01:05:07,101
>> AUDIENCE: [tidak terdengar]

1371
01:05:07,101 --> 01:05:08,600
DAVID Malan: Absolutely, benar-benar.

1372
01:05:08,600 --> 01:05:10,720
Dan seperti gambar ini
mendapatkan lebih rumit,

1373
01:05:10,720 --> 01:05:12,110
itu bisa menjadi server web.

1374
01:05:12,110 --> 01:05:14,690
Ini bisa menjadi kekuatan untuk bangunan.

1375
01:05:14,690 --> 01:05:17,900
Ini bisa menjadi sesuatu yang bersifat fisik, seperti
kabel mendapat usang atau ditendang keluar.

1376
01:05:17,900 --> 01:05:19,879
Ini bisa menjadi database
tidak merespons.

1377
01:05:19,879 --> 01:05:22,920
Hal ini dapat mereka diperbarui operasi mereka
Sistem dan sesuatu yang tergantung.

1378
01:05:22,920 --> 01:05:24,634
Jadi ada begitu banyak bagian yang bergerak lainnya.

1379
01:05:24,634 --> 01:05:27,050
Dan begitu banyak rekayasa
yang harus pergi di balik ini

1380
01:05:27,050 --> 01:05:30,431
benar-benar hanya perdagangan off, seperti bagaimana
banyak waktu, berapa banyak uang yang sebenarnya

1381
01:05:30,431 --> 01:05:32,930
layak, dan apa ancaman
Anda benar-benar khawatir tentang?

1382
01:05:32,930 --> 01:05:35,471
Misalnya, di
Program saya mengajar di Harvard,

1383
01:05:35,471 --> 01:05:38,470
kami menggunakan banyak komputasi awan, yang
kita akan mulai mengambil melihat sekarang,

1384
01:05:38,470 --> 01:05:41,107
pada kenyataannya, di mana kita menggunakan
Layanan Web Amazon.

1385
01:05:41,107 --> 01:05:42,940
Hanya karena itulah
salah satu yang kita mulai dengan.

1386
01:05:42,940 --> 01:05:45,856
Tapi ada yang lebih hari ini
dari Google dan Microsoft dan lain-lain.

1387
01:05:45,856 --> 01:05:50,030
Dan kami sadar memilih untuk menempatkan semua
mesin virtual kursus kami ',

1388
01:05:50,030 --> 01:05:55,400
sebagai mereka disebut, di saya pikir
itu Western data center Virginia.

1389
01:05:55,400 --> 01:05:57,560
Sebagian besar siswa kami
kebetulan dari AS,

1390
01:05:57,560 --> 01:05:59,820
meskipun ada pasti
beberapa internasional.

1391
01:05:59,820 --> 01:06:02,630
>> Tetapi kenyataannya adalah itu hanya
sederhana dan lebih murah untuk kita

1392
01:06:02,630 --> 01:06:05,540
untuk menempatkan semua telur
di Virginia keranjang,

1393
01:06:05,540 --> 01:06:08,050
meskipun aku tahu apakah sesuatu
beres di Virginia,

1394
01:06:08,050 --> 01:06:12,760
sebagai memiliki sesekali happened-- seperti
jika ada badai atau beberapa cuaca

1395
01:06:12,760 --> 01:06:15,890
acara seperti itu, jika ada beberapa
jaringan listrik masalah atau like-- semua

1396
01:06:15,890 --> 01:06:20,240
data kursus kami 'mungkin offline
untuk beberapa jumlah menit atau jam

1397
01:06:20,240 --> 01:06:21,600
atau bahkan lebih lama.

1398
01:06:21,600 --> 01:06:24,020
>> Tetapi jumlah kompleksitas
yang akan diperlukan,

1399
01:06:24,020 --> 01:06:26,895
dan jumlah uang yang akan
diperlukan, untuk mengoperasikan semua

1400
01:06:26,895 --> 01:06:31,420
secara paralel di Eropa atau di California
hanya tidak membuat begitu banyak akal.

1401
01:06:31,420 --> 01:06:35,080
Jadi itu adalah perdagangan yang rasional
off, tapi satu yang menyakitkan

1402
01:06:35,080 --> 01:06:37,740
ketika Anda benar-benar
memiliki downtime itu.

1403
01:06:37,740 --> 01:06:41,830
>> Nah, mari kita transisi sekarang untuk
beberapa solusi berbasis cloud

1404
01:06:41,830 --> 01:06:43,320
untuk beberapa masalah ini.

1405
01:06:43,320 --> 01:06:45,040
Segala sesuatu yang kita sudah
membahas sejauh

1406
01:06:45,040 --> 01:06:47,527
adalah jenis masalah yang memiliki
telah bersama kami selama beberapa waktu,

1407
01:06:47,527 --> 01:06:49,610
apakah Anda memiliki Anda sendiri
server di perusahaan Anda,

1408
01:06:49,610 --> 01:06:52,740
apakah Anda pergi ke co-lokasi
tempat seperti pusat data dan berbagi

1409
01:06:52,740 --> 01:06:55,110
ruang dengan orang lain,
atau saat di awan.

1410
01:06:55,110 --> 01:06:57,040
>> Dan apa yang baik tentang
awan adalah bahwa semua

1411
01:06:57,040 --> 01:06:59,540
hal ini saya
menggambar sebagai objek fisik

1412
01:06:59,540 --> 01:07:02,400
sekarang dapat dianggap sebagai
semacam benda-benda virtual

1413
01:07:02,400 --> 01:07:04,659
di awan yang
simulasi dengan software.

1414
01:07:04,659 --> 01:07:07,700
Dengan kata lain, komputer saat ini,
server saat ini, seperti gambar Dell

1415
01:07:07,700 --> 01:07:11,720
Aku menunjukkan sebelumnya, begitu cepat, memiliki
begitu banyak RAM, begitu banyak CPU, begitu banyak disk yang

1416
01:07:11,720 --> 01:07:16,140
ruang, bahwa orang-orang telah menulis
software untuk partisi hampir

1417
01:07:16,140 --> 01:07:21,130
satu server menjadi ilusi itu
menjadi dua server, atau 200 server, sehingga

1418
01:07:21,130 --> 01:07:24,150
bahwa kita masing-masing pelanggan
memiliki ilusi memiliki

1419
01:07:24,150 --> 01:07:29,110
bukan hanya account di beberapa web
tuan rumah, tapi mesin kita sendiri bahwa kita

1420
01:07:29,110 --> 01:07:30,490
menyewa dari orang lain.

1421
01:07:30,490 --> 01:07:34,140
>> Tapi itu mesin virtual di
sejauh pada satu server Dell,

1422
01:07:34,140 --> 01:07:39,160
lagi mungkin dipartisi menjadi
dua atau 200 atau lebih mesin virtual,

1423
01:07:39,160 --> 01:07:43,770
semua yang memberikan seseorang administrasi
akses, tapi dengan cara di mana tak satu pun dari kita

1424
01:07:43,770 --> 01:07:48,040
tahu atau dapat mengakses lainnya maya
mesin pada hardware yang sama.

1425
01:07:48,040 --> 01:07:53,430
Jadi untuk melukis gambar di slide hari ini,
Saya telah ini ditembak di sini dari sebuah situs web

1426
01:07:53,430 --> 01:07:54,160
disebut Docker.

1427
01:07:54,160 --> 01:07:56,970
>> Jadi ini sedikit lebih
rinci dari yang kita benar-benar perlu.

1428
01:07:56,970 --> 01:07:59,830
Tetapi jika Anda melihat ini sebagai
infrastructure-- Anda

1429
01:07:59,830 --> 01:08:02,910
jadi hanya perangkat keras Anda sendiri,
server Anda, rak, data

1430
01:08:02,910 --> 01:08:06,480
pusat, dan semua itu-- yang akan Anda
biasanya menjalankan sistem operasi host.

1431
01:08:06,480 --> 01:08:08,275
Jadi sesuatu like-- bisa Windows.

1432
01:08:08,275 --> 01:08:09,430
Itu tidak akan Mac OS.

1433
01:08:09,430 --> 01:08:11,430
Karena itu tidak benar-benar
perusahaan hari ini.

1434
01:08:11,430 --> 01:08:15,670
Jadi akan Linux atau Solaris
atau Unix atau BSD atau FreeBSD

1435
01:08:15,670 --> 01:08:19,779
atau sejumlah sistem operasi lain
yang baik gratis atau komersial.

1436
01:08:19,779 --> 01:08:22,120
>> Dan kemudian Anda menjalankan
Program, program khusus,

1437
01:08:22,120 --> 01:08:26,479
disebut hypervisor, atau
monitor mesin virtual, VMM.

1438
01:08:26,479 --> 01:08:31,649
Dan ini adalah produk, jika Anda
familiar, seperti VMware atau VirtualBox

1439
01:08:31,649 --> 01:08:34,080
atau Virtual PC atau orang lain.

1440
01:08:34,080 --> 01:08:38,430
Dan apa program-program lakukan adalah persis
fitur yang saya jelaskan sebelumnya.

1441
01:08:38,430 --> 01:08:41,779
Ini menciptakan ilusi
bahwa salah satu mesin fisik

1442
01:08:41,779 --> 01:08:44,550
dapat beberapa mesin virtual.

1443
01:08:44,550 --> 01:08:48,260
>> Dan kotak-kotak berwarna-warni di bagian atas adalah
lukisan gambar berikut ini.

1444
01:08:48,260 --> 01:08:50,260
hypervisor ini, ini
software, menyebutnya

1445
01:08:50,260 --> 01:08:54,090
VMware, berjalan pada beberapa lainnya
sistem operasi, menyebutnya Linux,

1446
01:08:54,090 --> 01:08:56,910
adalah menciptakan ilusi bahwa
komputer fisik ini sebenarnya

1447
01:08:56,910 --> 01:09:00,149
satu, dua, tiga komputer virtual.

1448
01:09:00,149 --> 01:09:04,270
Jadi sekarang saya sudah membeli, sebagai pemilik
perangkat ini, satu komputer fisik.

1449
01:09:04,270 --> 01:09:06,200
Dan sekarang aku menyewa
untuk tiga pelanggan.

1450
01:09:06,200 --> 01:09:09,731
>> Dan tiga pelanggan semua berpikir
mereka memiliki mesin virtual dedicated.

1451
01:09:09,731 --> 01:09:10,939
Dan itu tidak umpan dan beralih.

1452
01:09:10,939 --> 01:09:13,750
Ini lebih pengungkapan yang
Anda menggunakan mesin virtual.

1453
01:09:13,750 --> 01:09:17,589
Tapi teknologi, kita semua
memiliki kontrol administratif penuh

1454
01:09:17,589 --> 01:09:19,880
lebih dari masing-masing tamu mereka
sistem operasi, yang bisa

1455
01:09:19,880 --> 01:09:21,370
menjadi sejumlah sistem operasi.

1456
01:09:21,370 --> 01:09:23,029
>> Saya dapat menginstal apapun yang saya inginkan.

1457
01:09:23,029 --> 01:09:24,640
Saya dapat meng-upgrade itu seperti yang saya inginkan.

1458
01:09:24,640 --> 01:09:27,470
Dan aku bahkan tidak tahu atau
peduli dengan operasi lain

1459
01:09:27,470 --> 01:09:29,678
sistem di komputer itu,
mesin virtual lain,

1460
01:09:29,678 --> 01:09:35,290
kecuali pemilik semua abu-abu ini
hal ini menjadi sedikit serakah

1461
01:09:35,290 --> 01:09:37,540
dan overselling nya sumber.

1462
01:09:37,540 --> 01:09:40,800
>> Jadi jika Anda mengambil satu
mesin fisik dan menjualnya

1463
01:09:40,800 --> 01:09:44,399
tidak 200 tapi 400
pelanggan, di beberapa titik

1464
01:09:44,399 --> 01:09:47,270
kita akan perjalanan ke mereka
masalah kinerja yang sama seperti sebelumnya.

1465
01:09:47,270 --> 01:09:50,460
Karena Anda hanya memiliki terbatas
jumlah disk dan RAM dan sebagainya.

1466
01:09:50,460 --> 01:09:53,450
Dan mesin virtual
hanya sebuah program yang

1467
01:09:53,450 --> 01:09:56,140
berpura-pura menjadi
penuh komputer matang.

1468
01:09:56,140 --> 01:09:58,040
Jadi Anda mendapatkan apa yang Anda bayar untuk di sini.

1469
01:09:58,040 --> 01:10:02,150
>> Jadi Anda akan menemukan secara online Anda mungkin membayar
perusahaan terkemuka mungkin $ 100 per bulan

1470
01:10:02,150 --> 01:10:05,660
untuk mesin virtual Anda sendiri, atau
sendiri server virtual pribadi Anda,

1471
01:10:05,660 --> 01:10:07,090
yang merupakan istilah lain untuk itu.

1472
01:10:07,090 --> 01:10:10,400
Atau Anda mungkin menemukan beberapa fly by
malam di mana Anda membayar $ 5,99 per bulan

1473
01:10:10,400 --> 01:10:12,080
untuk mesin virtual Anda sendiri.

1474
01:10:12,080 --> 01:10:15,614
Tapi kemungkinan besar Anda tidak memiliki hampir
sebanyak kinerja tersedia untuk Anda,

1475
01:10:15,614 --> 01:10:18,530
karena mereka telah overselling itu
jadi, daripada Anda akan dengan tinggi

1476
01:10:18,530 --> 01:10:22,340
tingkat layanan atau vendor yang lebih baik.

1477
01:10:22,340 --> 01:10:24,590
>> Jadi, apa ini benar-benar berarti bagi kita?

1478
01:10:24,590 --> 01:10:26,110
Jadi biarkan aku pergi ke ini.

1479
01:10:26,110 --> 01:10:29,580
Aku akan pergi ke aws.amazon.com.

1480
01:10:29,580 --> 01:10:31,590
Hanya karena mereka memiliki
bagus menu pilihan.

1481
01:10:31,590 --> 01:10:34,700
Tapi ini pelajaran yang sama berlaku untuk
sejumlah vendor cloud lainnya.

1482
01:10:34,700 --> 01:10:38,201
Sayangnya, sering kali lebih
pemasaran berbicara dari apa pun.

1483
01:10:38,201 --> 01:10:39,200
Dan ini terus berubah.

1484
01:10:39,200 --> 01:10:41,820
Jadi Anda pergi ke sebuah situs seperti ini.

1485
01:10:41,820 --> 01:10:44,560
Dan ini benar-benar tidak
memberitahu Anda apa-apa.

1486
01:10:44,560 --> 01:10:47,780
>> Dan bahkan aku, seperti yang saya lihat ini, tidak
benar-benar tahu apa yang salah hal ini

1487
01:10:47,780 --> 01:10:49,334
perlu melakukan sampai aku menyelam di.

1488
01:10:49,334 --> 01:10:50,875
Tapi mari kita mulai dari kiri, Compute.

1489
01:10:50,875 --> 01:10:52,980
Dan aku akan klik ini.

1490
01:10:52,980 --> 01:10:56,960
Dan sekarang Amazon memiliki terus terang
Sejumlah besar layanan

1491
01:10:56,960 --> 01:10:57,960
hari ini.

1492
01:10:57,960 --> 01:11:01,040
Tapi Amazon EC2 mungkin yang paling sederhana.

1493
01:11:01,040 --> 01:11:05,840
>> Amazon EC2 akan menciptakan bagi kita persis
gambar yang kita lihat saat yang lalu.

1494
01:11:05,840 --> 01:11:10,240
Begitulah cara mereka membuat banyak
uang mereka di awan.

1495
01:11:10,240 --> 01:11:12,910
Rupanya Netflix dan lain-lain
berada di awan dengan mereka.

1496
01:11:12,910 --> 01:11:16,260
Ini semua biasanya
berbulu berbicara marketing.

1497
01:11:16,260 --> 01:11:19,720
Jadi apa yang saya ingin lakukan adalah pergi ke Pricing--
atau lebih tepatnya mari kita pergi ke Contoh

1498
01:11:19,720 --> 01:11:23,790
pertama hanya untuk melukis gambar ini.

1499
01:11:23,790 --> 01:11:25,800
>> Jadi ini akan bervariasi oleh vendor.

1500
01:11:25,800 --> 01:11:29,590
Dan kita tidak perlu terlalu jauh ke dalam
gulma di sini tentang bagaimana semua ini bekerja.

1501
01:11:29,590 --> 01:11:34,720
Namun cara Amazon, misalnya,
sewa Anda mesin virtual atau server

1502
01:11:34,720 --> 01:11:37,200
di awan yang mereka punya
semacam ini nama-nama lucu,

1503
01:11:37,200 --> 01:11:41,000
seperti t2.nano, yang berarti kecil,
atau t2.large, yang berarti besar.

1504
01:11:41,000 --> 01:11:43,970
Masing-masing dari mereka memberi Anda baik
satu atau dua CPU virtual.

1505
01:11:43,970 --> 01:11:45,470
>> Mengapa CPU virtual?

1506
01:11:45,470 --> 01:11:49,440
Nah, mesin fisik mungkin
memiliki 64 atau lebih CPU yang sebenarnya.

1507
01:11:49,440 --> 01:11:52,125
Tapi sekali lagi, melalui perangkat lunak,
mereka menciptakan ilusi

1508
01:11:52,125 --> 01:11:55,410
bahwa satu mesin dapat
divvied hingga beberapa pengguna.

1509
01:11:55,410 --> 01:11:58,765
Jadi kita bisa menganggap ini sebagai
memiliki satu CPU Intel atau dua.

1510
01:11:58,765 --> 01:12:01,290
kredit CPU per hour-- saya akan
harus membaca baik cetak

1511
01:12:01,290 --> 01:12:02,581
seperti apa ini sebenarnya berarti.

1512
01:12:02,581 --> 01:12:05,850
Ini berarti berapa banyak dari mesin
Anda dapat menggunakan per jam vis-a-vis

1513
01:12:05,850 --> 01:12:07,730
pelanggan lain pada perangkat keras itu.

1514
01:12:07,730 --> 01:12:11,560
>> Berikut ini berapa banyak RAM atau memori Anda
get-- baik setengah gigabyte, atau 500

1515
01:12:11,560 --> 01:12:14,120
megabyte, atau 1 gigabyte, atau 2.

1516
01:12:14,120 --> 01:12:17,390
Dan kemudian penyimpanan hanya mengacu
apa jenis disk mereka memberi Anda.

1517
01:12:17,390 --> 01:12:19,950
Ada penyimpanan yang berbeda
teknologi yang mereka tawarkan.

1518
01:12:19,950 --> 01:12:22,870
Tapi yang lebih menarik dari ini
maka mungkin harga.

1519
01:12:22,870 --> 01:12:25,860
>> Jadi jika Anda adalah CTO atau
seorang insinyur yang tidak

1520
01:12:25,860 --> 01:12:28,420
ingin menjalankan server di Anda
kantor, untuk alasan apa pun,

1521
01:12:28,420 --> 01:12:30,230
dan itu terlalu
rumit atau mahal

1522
01:12:30,230 --> 01:12:33,930
untuk membeli server dan co-menemukan mereka dan
membayar sewa di beberapa ruang kandang fisik

1523
01:12:33,930 --> 01:12:36,670
somewhere-- Anda hanya ingin duduk
di laptop Anda larut malam,

1524
01:12:36,670 --> 01:12:40,480
ketik informasi kartu kredit Anda,
dan sewa server di cloud-- baik,

1525
01:12:40,480 --> 01:12:41,920
kita bisa melakukannya di sini.

1526
01:12:41,920 --> 01:12:45,769
Aku akan pergi ke to-- Linux
adalah sistem operasi yang populer.

1527
01:12:45,769 --> 01:12:47,310
Dan mari kita hanya mendapatkan rasa hal.

1528
01:12:47,310 --> 01:12:48,990
Whoops-- terlalu besar.

1529
01:12:48,990 --> 01:12:53,670
>> Jadi mari kita lihat terkecil mereka
mesin virtual, yang tampaknya memiliki,

1530
01:12:53,670 --> 01:12:57,440
untuk tujuan kita, satu CPU
dan 500 megabyte RAM.

1531
01:12:57,440 --> 01:12:58,440
Itu cukup kecil.

1532
01:12:58,440 --> 01:13:00,820
Tapi terus terang, server web tidak
perlu melakukan semua yang banyak.

1533
01:13:00,820 --> 01:13:02,630
Anda memiliki spesifikasi yang lebih baik di laptop Anda.

1534
01:13:02,630 --> 01:13:04,990
Tapi Anda tidak perlu orang-orang
spesifikasi hari ini untuk hal-hal.

1535
01:13:04,990 --> 01:13:11,490
Anda akan membayar $ 0,0065 per jam.

1536
01:13:11,490 --> 01:13:12,080
>> Jadi mari kita lihat.

1537
01:13:12,080 --> 01:13:15,970
Jika ada 24 jam dalam sehari, dan
kita membayar ini banyak per jam,

1538
01:13:15,970 --> 01:13:20,680
akan dikenakan biaya $ 0,15 untuk menyewa yang
server tertentu di awan.

1539
01:13:20,680 --> 01:13:22,210
Dan itu hanya untuk satu hari.

1540
01:13:22,210 --> 01:13:27,050
Jika kita melakukan ini 365-- $ 57 untuk
menyewa server tertentu.

1541
01:13:27,050 --> 01:13:28,420
Jadi kedengarannya super murah.

1542
01:13:28,420 --> 01:13:31,100
>> Itu juga kinerja super murah.

1543
01:13:31,100 --> 01:13:37,169
Jadi kami, untuk kursus saya mengajar di sini, cenderung
untuk menggunakan saya pikir t2.smalls atau t2.mediums.

1544
01:13:37,169 --> 01:13:39,960
Dan kita mungkin memiliki beberapa ratus
pengguna, beberapa ribu pengguna, jumlah.

1545
01:13:39,960 --> 01:13:40,900
Hal ini cukup sederhana.

1546
01:13:40,900 --> 01:13:42,360
Jadi mari kita lihat apa ini akan biaya.

1547
01:13:42,360 --> 01:13:49,260
Jadi jika saya melakukan ini kali biaya 24
jam kali 365, yang satu ini $ 225.

1548
01:13:49,260 --> 01:13:51,160
Dan untuk kursus
Saya mengajar, kita umumnya

1549
01:13:51,160 --> 01:13:54,970
menjalankan dua dari segala sesuatu, untuk
redundansi dan juga untuk kinerja.

1550
01:13:54,970 --> 01:13:59,230
Jadi kita mungkin menghabiskan, oleh karena itu,
$ 500 untuk server

1551
01:13:59,230 --> 01:14:00,860
bahwa kita mungkin perlu per tahun.

1552
01:14:00,860 --> 01:14:05,210
>> Sekarang, jika Anda membutuhkan lebih performance--
mari kita lihat memori.

1553
01:14:05,210 --> 01:14:06,810
Kami telah berbicara tentang memori cukup sedikit.

1554
01:14:06,810 --> 01:14:09,330
Dan jika Anda membutuhkan lebih banyak
memory-- dan 64 gigabyte

1555
01:14:09,330 --> 01:14:12,310
adalah nomor saya terus mentioning--
ini hampir $ 1 per jam.

1556
01:14:12,310 --> 01:14:16,180
Dan Anda cukup dapat dengan cepat melihat keberadaan
ini goes-- jadi 24 jam kali 365.

1557
01:14:16,180 --> 01:14:20,580
Jadi sekarang $ 8.000 per tahun
untuk server cukup baik.

1558
01:14:20,580 --> 01:14:23,010
>> Jadi di beberapa titik, ada
titik belok ini

1559
01:14:23,010 --> 01:14:29,510
di mana sekarang kita bisa menghabiskan $ 6.000
mungkin dan membeli mesin seperti itu

1560
01:14:29,510 --> 01:14:33,800
dan amortisasi biaya lebih mungkin dua,
tiga tahun, kehidupan mesin.

1561
01:14:33,800 --> 01:14:38,880
Tapi apa mungkin mendorong Anda di
mendukung atau tidak disukai dari sewa

1562
01:14:38,880 --> 01:14:41,230
mesin di awan seperti ini?

1563
01:14:41,230 --> 01:14:44,110
Sekali lagi, ini sebanding, mungkin,
ke salah satu server Dell

1564
01:14:44,110 --> 01:14:47,208
kita lihat digambarkan sedikit lalu.

1565
01:14:47,208 --> 01:14:51,016
>> AUDIENCE: [tidak terdengar]

1566
01:14:51,016 --> 01:14:54,350

1567
01:14:54,350 --> 01:14:56,190
>> DAVID Malan: Ya, itu terbalik besar.

1568
01:14:56,190 --> 01:14:58,640
Karena kita tidak membeli
mesin, kami tidak memiliki unbox itu.

1569
01:14:58,640 --> 01:14:59,600
Kami tidak perlu mengangkatnya.

1570
01:14:59,600 --> 01:15:01,110
Kami tidak perlu hubungkan ke rak kami.

1571
01:15:01,110 --> 01:15:02,080
Kami tidak perlu pasang.

1572
01:15:02,080 --> 01:15:03,140
Kami tidak perlu membayar
tagihan listrik.

1573
01:15:03,140 --> 01:15:05,120
>> Kami tidak perlu mengubah
AC di.

1574
01:15:05,120 --> 01:15:07,620
Ketika sebuah hard drive meninggal, kita tidak memiliki
mengemudi di di tengah malam

1575
01:15:07,620 --> 01:15:08,172
untuk memperbaikinya.

1576
01:15:08,172 --> 01:15:09,630
Kami tidak perlu mengatur pemantauan.

1577
01:15:09,630 --> 01:15:13,750
Kami tidak memiliki to-- daftar goes on
dan pada semua hal fisik

1578
01:15:13,750 --> 01:15:15,810
Anda tidak perlu melakukan
karena "awan."

1579
01:15:15,810 --> 01:15:18,620
>> Dan harus jelas, komputasi awan
adalah istilah yang sangat berlebihan ini.

1580
01:15:18,620 --> 01:15:22,790
Ini benar-benar hanya berarti membayar seseorang
lain untuk menjalankan server untuk Anda,

1581
01:15:22,790 --> 01:15:25,300
atau menyewa ruang di
server orang lain.

1582
01:15:25,300 --> 01:15:27,110
Jadi istilah "cloud computing" yang baru.

1583
01:15:27,110 --> 01:15:30,260
Idenya adalah dekade tua.

1584
01:15:30,260 --> 01:15:32,070
Jadi itu cukup menarik.

1585
01:15:32,070 --> 01:15:33,960
>> Dan apa lagi yang Anda dapatkan?

1586
01:15:33,960 --> 01:15:38,287
Nah, Anda juga mendapatkan kemampuan untuk
melakukan segala hal pada laptop di rumah.

1587
01:15:38,287 --> 01:15:40,620
Dengan kata lain, semua
gambar saya hanya drawing--

1588
01:15:40,620 --> 01:15:44,010
dan itu tidak lama yang lalu bahwa bahkan
Saya merangkak di lantai Server

1589
01:15:44,010 --> 01:15:46,680
mencolokkan kabel di untuk
setiap baris yang Anda lihat,

1590
01:15:46,680 --> 01:15:49,590
dan meningkatkan operasi
sistem, dan mengubah drive sekitar.

1591
01:15:49,590 --> 01:15:51,610
Ada banyak
fisik untuk semua itu.

1592
01:15:51,610 --> 01:15:55,300
>> Tapi apa yang indah tentang maya
mesin, sebagai nama jenis menunjukkan,

1593
01:15:55,300 --> 01:15:57,600
sekarang ada web berbasis
interface dimana

1594
01:15:57,600 --> 01:15:59,900
jika Anda ingin setara
dari garis dari server ini

1595
01:15:59,900 --> 01:16:03,959
ke yang lain, cukup ketik, jenis, tipe,
klik dan drag, klik Submit, dan voila,

1596
01:16:03,959 --> 01:16:05,250
Anda memilikinya kabel up virtual.

1597
01:16:05,250 --> 01:16:07,235
Karena itu semua dilakukan dalam perangkat lunak.

1598
01:16:07,235 --> 01:16:09,110
Dan alasan itu dilakukan
dalam perangkat lunak lagi

1599
01:16:09,110 --> 01:16:12,650
karena kami memiliki begitu banyak RAM dan begitu
banyak CPU tersedia untuk kita hari ini,

1600
01:16:12,650 --> 01:16:14,880
meskipun semua
bahwa hal membutuhkan waktu,

1601
01:16:14,880 --> 01:16:18,450
lebih lambat untuk menjalankan hal-hal
dalam perangkat lunak dari perangkat keras,

1602
01:16:18,450 --> 01:16:23,710
seperti itu lebih lambat untuk menggunakan mekanik
perangkat seperti hard drive dari RAM,

1603
01:16:23,710 --> 01:16:25,190
sesuatu yang murni elektronik.

1604
01:16:25,190 --> 01:16:27,490
Kami memiliki begitu banyak sumber daya
tersedia bagi kita.

1605
01:16:27,490 --> 01:16:29,920
Kita manusia semacam tanpa tergantung lambat.

1606
01:16:29,920 --> 01:16:33,840
Dan jadi sekarang mesin dapat melakukan
jauh lebih banyak per satuan waktu.

1607
01:16:33,840 --> 01:16:36,640
Kami memiliki kemampuan ini
untuk melakukan hal-hal secara virtual.

1608
01:16:36,640 --> 01:16:39,120
>> Dan saya akan mengatakan untuk kursus
Saya mengajar, misalnya, di sini,

1609
01:16:39,120 --> 01:16:43,464
kami memiliki sekitar mungkin selusin atau
sehingga total mesin virtual

1610
01:16:43,464 --> 01:16:45,880
seperti itu berjalan pada setiap diberikan
waktu melakukan hal-hal front end,

1611
01:16:45,880 --> 01:16:47,620
melakukan kembali hal-hal end.

1612
01:16:47,620 --> 01:16:50,237
Kami memiliki semua penyimpanan kami.

1613
01:16:50,237 --> 01:16:52,820
Jadi setiap video, termasuk hal-hal
seperti ini yang kita menembak,

1614
01:16:52,820 --> 01:16:54,330
kita akhirnya menempatkan ke awan.

1615
01:16:54,330 --> 01:16:58,710
Amazon memiliki layanan yang disebut Amazon S3,
layanan penyimpanan sederhana mereka, yang

1616
01:16:58,710 --> 01:17:00,397
adalah seperti ruang disk di awan.

1617
01:17:00,397 --> 01:17:02,230
Mereka memiliki sesuatu
disebut CloudFront, yang

1618
01:17:02,230 --> 01:17:06,040
adalah Content layanan CDN,
Layanan jaringan pengiriman, yang

1619
01:17:06,040 --> 01:17:10,190
berarti mereka mengambil semua file dan
untuk Anda otomatis meniru itu

1620
01:17:10,190 --> 01:17:11,290
keliling dunia.

1621
01:17:11,290 --> 01:17:12,780
>> Jadi mereka tidak melakukannya Terlebih Dahulu.

1622
01:17:12,780 --> 01:17:15,159
Tapi pertama kali seseorang
di India meminta file Anda,

1623
01:17:15,159 --> 01:17:16,700
mereka akan berpotensi cache secara lokal.

1624
01:17:16,700 --> 01:17:19,325
Pertama kali di Cina,
pertama kali di Brazil itu terjadi,

1625
01:17:19,325 --> 01:17:20,880
mereka akan mulai caching secara lokal.

1626
01:17:20,880 --> 01:17:22,730
Dan Anda tidak perlu melakukan semua itu.

1627
01:17:22,730 --> 01:17:26,710
Dan sehingga begitu sangat
menarik hari ini untuk memindahkan hal-hal

1628
01:17:26,710 --> 01:17:27,890
ke dalam awan.

1629
01:17:27,890 --> 01:17:31,890
Karena Anda memiliki kemampuan ini secara harfiah
untuk tidak memiliki manusia melakukan hampir sama banyak

1630
01:17:31,890 --> 01:17:32,390
kerja.

1631
01:17:32,390 --> 01:17:35,930
Dan Anda benar-benar tidak perlu banyak
manusia melakukan pekerjaan ini anymore--

1632
01:17:35,930 --> 01:17:38,450
"Ops," atau peran operasional, lagi.

1633
01:17:38,450 --> 01:17:43,150
Anda benar-benar hanya perlu
pengembang dan lebih sedikit insinyur

1634
01:17:43,150 --> 01:17:44,840
yang hanya bisa melakukan hal-hal secara virtual.

1635
01:17:44,840 --> 01:17:46,590
Bahkan, hanya untuk memberikan
Anda rasa ini,

1636
01:17:46,590 --> 01:17:51,800
biarkan aku pergi ke harga untuk
satu produk lain di sini.

1637
01:17:51,800 --> 01:17:58,170
Mari kita lihat sesuatu seperti CDN S3.

1638
01:17:58,170 --> 01:18:01,140
Jadi ini pada dasarnya adalah
virtual hard drive di awan.

1639
01:18:01,140 --> 01:18:14,360
Dan jika kita gulir ke bawah untuk pricing--
jadi $ 0,007 per gigabyte.

1640
01:18:14,360 --> 01:18:16,300
Dan that's-- bagaimana kita melakukan ini?

1641
01:18:16,300 --> 01:18:17,410
Saya pikir itu per bulan.

1642
01:18:17,410 --> 01:18:21,530
>> Jadi kalau itu per month-- atau per hari?

1643
01:18:21,530 --> 01:18:23,200
Dan, apakah ini per hari?

1644
01:18:23,200 --> 01:18:24,700
Ini per bulan, OK.

1645
01:18:24,700 --> 01:18:28,280
Jadi jika ini adalah per month--
maaf, itu adalah $ 0,03 per bulan.

1646
01:18:28,280 --> 01:18:29,820
Ada 12 bulan dalam setahun.

1647
01:18:29,820 --> 01:18:32,250
Jadi berapa banyak data mungkin
Anda menyimpan di awan?

1648
01:18:32,250 --> 01:18:37,410
Sebuah gigabyte tidak besar, tapi aku
tidak tahu, seperti 1 terabyte,

1649
01:18:37,410 --> 01:18:38,460
jadi seperti 1.000 dari mereka.

1650
01:18:38,460 --> 01:18:39,501
Itu tidak semua yang banyak.

1651
01:18:39,501 --> 01:18:44,382
Ini $ 368 untuk menyimpan terabyte sebuah
data di awan Amazon.

1652
01:18:44,382 --> 01:18:46,090
Jadi apa yang beberapa
perdagangan off, kemudian?

1653
01:18:46,090 --> 01:18:47,970
Hal ini tidak bisa semua menjadi baik.

1654
01:18:47,970 --> 01:18:52,260
Tidak ada yang kita bicarakan saat ini adalah
semacam tanpa menangkap atau biaya.

1655
01:18:52,260 --> 01:18:55,269
Jadi apa yang buruk tentang bergerak
segala sesuatu ke dalam awan?

1656
01:18:55,269 --> 01:18:56,060
AUDIENCE: Keamanan.

1657
01:18:56,060 --> 01:18:57,721
DAVID Malan: OK, apa maksudmu?

1658
01:18:57,721 --> 01:18:58,596
AUDIENCE: [tidak terdengar]

1659
01:18:58,596 --> 01:19:01,589

1660
01:19:01,589 --> 01:19:02,630
DAVID Malan: Ya, benar.

1661
01:19:02,630 --> 01:19:05,130
Dan apakah Anda benar-benar ingin
beberapa insinyur acak

1662
01:19:05,130 --> 01:19:08,750
di Amazon yang Anda tidak akan pernah bertemu memiliki
akses fisik ke komputer-komputer,

1663
01:19:08,750 --> 01:19:11,010
dan jika mereka benar-benar
ingin, akses virtual?

1664
01:19:11,010 --> 01:19:15,070
Dan meskipun di
Teori software-- baik,

1665
01:19:15,070 --> 01:19:17,442
enkripsi benar-benar bisa
melindungi Anda terhadap ini.

1666
01:19:17,442 --> 01:19:19,150
Jadi jika apa yang Anda
menyimpan di server Anda

1667
01:19:19,150 --> 01:19:21,470
adalah encrypted-- kurang perhatian.

1668
01:19:21,470 --> 01:19:25,010
>> Tapi begitu manusia memiliki fisik
akses ke mesin, enkripsi samping,

1669
01:19:25,010 --> 01:19:26,100
semua taruhan semacam off.

1670
01:19:26,100 --> 01:19:28,240
Anda mungkin tahu dari masa lampau
bahwa PC khususnya,

1671
01:19:28,240 --> 01:19:30,360
bahkan jika Anda memiliki hal-hal
disebut "BIOS password,"

1672
01:19:30,360 --> 01:19:33,360
adalah ketika desktop Anda boot up,
Anda akan diminta dengan password yang

1673
01:19:33,360 --> 01:19:35,980
tidak ada hubungannya dengan
Windows, Anda dapat biasanya

1674
01:19:35,980 --> 01:19:39,750
hanya membuka chassis dari
mesin, cari pin kecil kecil,

1675
01:19:39,750 --> 01:19:42,240
dan menggunakan sesuatu yang disebut
jumper dan hanya menghubungkan

1676
01:19:42,240 --> 01:19:45,690
dua kabel untuk sekitar satu detik,
dengan demikian menyelesaikan sirkuit.

1677
01:19:45,690 --> 01:19:47,360
Dan itu akan menghilangkan password.

1678
01:19:47,360 --> 01:19:49,800
>> Jadi, ketika Anda memiliki akses fisik ke
perangkat, Anda dapat melakukan hal-hal seperti itu.

1679
01:19:49,800 --> 01:19:51,110
Anda dapat menghapus hard drive.

1680
01:19:51,110 --> 01:19:53,060
Anda dapat memperoleh akses ke cara itu.

1681
01:19:53,060 --> 01:19:55,442
Dan jadi ini adalah mengapa, di
kasus Dropbox,

1682
01:19:55,442 --> 01:19:57,900
misalnya, itu sedikit
mengkhawatirkan bahwa mereka tidak hanya

1683
01:19:57,900 --> 01:20:02,860
memiliki data, meskipun itu
terenkripsi, mereka juga memiliki kunci.

1684
01:20:02,860 --> 01:20:04,993
kekhawatiran lainnya?

1685
01:20:04,993 --> 01:20:08,430
>> AUDIENCE: [tidak terdengar]

1686
01:20:08,430 --> 01:20:27,740

1687
01:20:27,740 --> 01:20:30,240
DAVID Malan: Ya, itu sangat
true-- yang Googles, Apel,

1688
01:20:30,240 --> 01:20:31,406
yang Microsofts dunia.

1689
01:20:31,406 --> 01:20:34,400
Dan pada kenyataannya, berapa lama
Anda memiliki iPhone Anda untuk?

1690
01:20:34,400 --> 01:20:35,885
Ya, memberi atau mengambil.

1691
01:20:35,885 --> 01:20:36,760
AUDIENCE: [tidak terdengar]

1692
01:20:36,760 --> 01:20:37,780
DAVID Malan: Maaf?

1693
01:20:37,780 --> 01:20:39,667
Anda termasuk orang yang
memiliki iPhone, kan?

1694
01:20:39,667 --> 01:20:40,250
AUDIENCE: Ya.

1695
01:20:40,250 --> 01:20:42,208
DAVID Malan: Berapa lama
Anda telah memiliki iPhone Anda?

1696
01:20:42,208 --> 01:20:43,372
AUDIENCE: [tidak terdengar]

1697
01:20:43,372 --> 01:20:45,080
DAVID Malan: OK, jadi
Apple harfiah tahu

1698
01:20:45,080 --> 01:20:49,030
di mana Anda sudah setiap jam
hari selama lima tahun terakhir.

1699
01:20:49,030 --> 01:20:51,112
>> AUDIENCE: [tidak terdengar]

1700
01:20:51,112 --> 01:20:54,626

1701
01:20:54,626 --> 01:20:56,375
DAVID Malan: Yang
fitur yang indah.

1702
01:20:56,375 --> 01:20:57,860
AUDIENCE: [tidak terdengar]

1703
01:20:57,860 --> 01:21:00,875
DAVID Malan: Ya, tapi
trade off pasti.

1704
01:21:00,875 --> 01:21:01,750
AUDIENCE: [tidak terdengar]

1705
01:21:01,750 --> 01:21:04,720

1706
01:21:04,720 --> 01:21:07,813
>> DAVID Malan: Ya, itu sangat mudah untuk.

1707
01:21:07,813 --> 01:21:08,688
AUDIENCE: [tidak terdengar]

1708
01:21:08,688 --> 01:21:12,040

1709
01:21:12,040 --> 01:21:13,248
DAVID Malan: Kerugian lain?

1710
01:21:13,248 --> 01:21:16,995
AUDIENCE: [tidak terdengar]

1711
01:21:16,995 --> 01:21:26,151

1712
01:21:26,151 --> 01:21:27,900
DAVID Malan: Absolutely--
teknologi,

1713
01:21:27,900 --> 01:21:31,550
ekonomi, itu cukup menarik untuk
semacam memperoleh skala ekonomis ini

1714
01:21:31,550 --> 01:21:33,579
dan pindah semuanya ke dalam
yang disebut awan.

1715
01:21:33,579 --> 01:21:35,870
Tapi Anda mungkin ingin
pergi dengan beberapa terbesar

1716
01:21:35,870 --> 01:21:39,380
ikan, Amazon, yang Googles, yang
Microsofts-- Rackspace cukup big--

1717
01:21:39,380 --> 01:21:42,200
dan beberapa orang lain, dan tidak
tentu terbang di malam hari orang-orang

1718
01:21:42,200 --> 01:21:45,640
untuk siapa itu sangat mudah dilakukan
jenis teknik saat ini.

1719
01:21:45,640 --> 01:21:49,140
Dan itulah yang Anda bisa
membayar $ 5,99 per bulan untuk.

1720
01:21:49,140 --> 01:21:50,890
Tapi Anda akan pasti
mendapatkan apa yang Anda bayar.

1721
01:21:50,890 --> 01:21:54,014
>> Ketika Anda mengatakan [tidak terdengar], saat itulah
hal-hal seperti lima sembilan ini datang,

1722
01:21:54,014 --> 01:21:58,017
dimana bahkan jika teknologi
kita tidak bisa benar-benar menjamin 99,999,

1723
01:21:58,017 --> 01:22:00,350
kami hanya akan membangun dalam beberapa jenis
hukuman untuk kontrak

1724
01:22:00,350 --> 01:22:03,910
sehingga jika itu tidak terjadi, setidaknya
ada beberapa biaya kepada kami, vendor.

1725
01:22:03,910 --> 01:22:07,950
Dan itulah yang akan Anda biasanya
mendapatkan mereka untuk menyetujui.

1726
01:22:07,950 --> 01:22:09,590
>> AUDIENCE: [tidak terdengar]

1727
01:22:09,590 --> 01:22:12,290
>> DAVID Malan: Dan
satu jenis berkat

1728
01:22:12,290 --> 01:22:15,630
adalah bahwa bahkan ketika kita turun, untuk
Misalnya, atau bahkan tertentu perusahaan,

1729
01:22:15,630 --> 01:22:17,800
kenyataannya adalah Amazon,
misalnya, memiliki begitu banyak

1730
01:22:17,800 --> 01:22:21,780
pelanggan menisik, pelanggan terkenal,
beroperasi dari pusat data tertentu

1731
01:22:21,780 --> 01:22:26,224
bahwa ketika sesuatu yang sangat tidak beres,
seperti tindakan Tuhan dan cuaca dan semacamnya,

1732
01:22:26,224 --> 01:22:29,390
apakah ada semacam lapisan perak,
itu bahwa Anda berada dalam perusahaan yang sangat baik.

1733
01:22:29,390 --> 01:22:30,680
website Anda mungkin offline.

1734
01:22:30,680 --> 01:22:32,750
Tapi begitu adalah seperti setengah dari
internet populer.

1735
01:22:32,750 --> 01:22:36,230
Dan itu bisa dibilang sedikit
lebih cocok untuk pelanggan Anda

1736
01:22:36,230 --> 01:22:38,780
jika lebih dari internet
Hal daripada hal acme.com.

1737
01:22:38,780 --> 01:22:41,780
Tapi itu sedikit curang.

1738
01:22:41,780 --> 01:22:46,740
>> Jadi dalam hal hal lain untuk melihat,
hanya agar kita tidak mengesampingkan orang lain,

1739
01:22:46,740 --> 01:22:51,210
jika Anda pergi ke Microsoft Azure, mereka
memiliki kedua Linux dan Windows barang

1740
01:22:51,210 --> 01:22:53,190
yang sebanding dengan Amazon.

1741
01:22:53,190 --> 01:22:57,540
Jika Anda pergi ke Google Compute Engine,
mereka memiliki sesuatu yang mirip juga.

1742
01:22:57,540 --> 01:23:00,500
Dan hanya untuk melengkapi
persembahan awan ini,

1743
01:23:00,500 --> 01:23:02,762
Aku akan membuat menyebutkan satu hal lainnya.

1744
01:23:02,762 --> 01:23:04,720
Ini adalah situs populer
itu perwakilan

1745
01:23:04,720 --> 01:23:08,590
dari kelas teknologi.

1746
01:23:08,590 --> 01:23:12,350
Yang kita hanya berbicara
tentang, Amazon, akan IAAS,

1747
01:23:12,350 --> 01:23:17,150
Infrastruktur Sebagai Layanan, di mana Anda
semacam perangkat keras fisik sebagai layanan.

1748
01:23:17,150 --> 01:23:18,757
Ada SAAS.

1749
01:23:18,757 --> 01:23:20,090
Sebenarnya, saya menuliskan ini turun.

1750
01:23:20,090 --> 01:23:23,290

1751
01:23:23,290 --> 01:23:28,190
>> Infrastruktur IAAS--
Sebagai Service, SAAS,

1752
01:23:28,190 --> 01:23:31,870
dan PAAS, yang
akronim sangat membingungkan

1753
01:23:31,870 --> 01:23:34,400
yang menggambarkan tiga
berbagai jenis hal.

1754
01:23:34,400 --> 01:23:36,400
Dan akronim sendiri
tidak benar-benar peduli.

1755
01:23:36,400 --> 01:23:38,360
Ini adalah semua hal-hal awan
kami baru saja bicarakan,

1756
01:23:38,360 --> 01:23:41,570
-hal tingkat yang lebih rendah, yang
virtualisasi perangkat keras dan penyimpanan

1757
01:23:41,570 --> 01:23:44,890
dalam apa yang disebut awan, apakah itu
Amazon, Microsoft, Google, atau lainnya.

1758
01:23:44,890 --> 01:23:47,270
>> Software sebagai service-- a
kita semua jenis menggunakan ini.

1759
01:23:47,270 --> 01:23:49,810
Jika Anda menggunakan Google Apps
untuk Gmail atau kalender,

1760
01:23:49,810 --> 01:23:52,530
salah berbasis web ini
aplikasi yang 10 tahun yang lalu kami

1761
01:23:52,530 --> 01:23:55,560
akan memiliki ikon mengklik ganda
desktop kita, perangkat lunak sebagai layanan

1762
01:23:55,560 --> 01:23:57,400
sekarang benar-benar aplikasi web.

1763
01:23:57,400 --> 01:24:00,110
Dan platform sebagai
Layanan jenis tergantung.

1764
01:24:00,110 --> 01:24:03,140
>> Dan salah satu contoh saya akan memberi Anda di sini
dalam konteks computing-- awan

1765
01:24:03,140 --> 01:24:06,250
ada satu perusahaan yang cukup
populer hari ini, Heroku.

1766
01:24:06,250 --> 01:24:08,940
Dan mereka layanan,
platform, jika Anda mau,

1767
01:24:08,940 --> 01:24:11,730
yang berjalan di atas
infrastruktur Amazon.

1768
01:24:11,730 --> 01:24:15,800
Dan mereka hanya membuatnya lebih mudah
untuk pengembang dan insinyur

1769
01:24:15,800 --> 01:24:18,330
untuk mendapatkan aplikasi berbasis web online.

1770
01:24:18,330 --> 01:24:22,170
>> Ini adalah rasa sakit, awalnya, untuk menggunakan
Layanan Web Amazon dan hal-hal lain.

1771
01:24:22,170 --> 01:24:24,170
Karena Anda benar-benar memiliki
untuk mengetahui dan memahami

1772
01:24:24,170 --> 01:24:27,617
tentang database dan server web dan
balancers beban dan semua hal

1773
01:24:27,617 --> 01:24:28,450
Saya hanya berbicara tentang.

1774
01:24:28,450 --> 01:24:32,780
Karena semua Amazon telah dilakukan tidak
tersembunyi tantangan-tantangan desain.

1775
01:24:32,780 --> 01:24:35,790
Mereka baru saja virtual mereka
dan memindahkan mereka ke dalam browser,

1776
01:24:35,790 --> 01:24:37,770
ke dalam perangkat lunak, bukan perangkat keras.

1777
01:24:37,770 --> 01:24:43,020
>> Tapi perusahaan seperti Heroku dan lainnya
penyedia PAAS, Landasan Sebagai Service,

1778
01:24:43,020 --> 01:24:46,900
mereka menggunakan mereka fundamental barebone
bahwa kita hanya berbicara tentang,

1779
01:24:46,900 --> 01:24:50,340
dan mereka membangun lebih mudah untuk
menggunakan perangkat lunak di atasnya

1780
01:24:50,340 --> 01:24:54,241
sehingga jika Anda ingin mendapatkan web berbasis
aplikasi online hari ini,

1781
01:24:54,241 --> 01:24:55,990
Anda tentu harus
tahu bagaimana program.

1782
01:24:55,990 --> 01:25:00,280
Anda perlu tahu Java atau Python atau PHP
atau Ruby atau sekelompok bahasa lain.

1783
01:25:00,280 --> 01:25:02,180
>> Tapi Anda juga perlu tempat untuk meletakkannya.

1784
01:25:02,180 --> 01:25:04,790
Dan kami berbicara sebelumnya tentang
mendapatkan sebuah perusahaan web hosting.

1785
01:25:04,790 --> 01:25:08,630
Itu semacam seperti pertengahan 2000-an
pendekatan untuk mendapatkan sesuatu secara online.

1786
01:25:08,630 --> 01:25:12,140
Saat ini Anda mungkin bukan membayar seseorang
seperti Heroku beberapa dolar per bulan.

1787
01:25:12,140 --> 01:25:15,370
Dan pada dasarnya, setelah Anda sudah
melakukan beberapa konfigurasi awal,

1788
01:25:15,370 --> 01:25:18,704
untuk memperbarui situs web Anda, Anda
ketik perintah di jendela.

1789
01:25:18,704 --> 01:25:21,370
Dan kode apa pun yang Anda sudah menulis
di sini pada laptop Anda segera

1790
01:25:21,370 --> 01:25:24,350
terdistribusi ke sejumlah
server di awan.

1791
01:25:24,350 --> 01:25:26,440
>> Dan Heroku mengurus
semua kompleksitas.

1792
01:25:26,440 --> 01:25:28,930
Mereka mencari semua database
hal, semua load balancing,

1793
01:25:28,930 --> 01:25:31,480
semua sakit kepala yang kita sudah
hanya ditulis di papan tulis,

1794
01:25:31,480 --> 01:25:33,320
dan menyembunyikan semua itu untuk Anda.

1795
01:25:33,320 --> 01:25:36,170
Dan sebagai imbalannya, Anda hanya
membayar mereka sedikit lebih.

1796
01:25:36,170 --> 01:25:39,810
Jadi Anda memiliki infrastruktur ini sebagai
layanan, platform sebagai layanan,

1797
01:25:39,810 --> 01:25:41,400
dan kemudian software sebagai layanan.

1798
01:25:41,400 --> 01:25:45,390
Ini, sekali lagi, ini
abstraksi atau layering.

1799
01:25:45,390 --> 01:25:51,187
>> Pertanyaan di atas awan atau
membangun infrastruktur sendiri?

1800
01:25:51,187 --> 01:25:52,270
Baiklah, itu banyak.

1801
01:25:52,270 --> 01:25:54,200
Mengapa kita tidak pergi ke depan dan
mengambil kami 15 menit istirahat di sini.

1802
01:25:54,200 --> 01:25:57,241
Kami akan kembali dengan konsep baru beberapa
dan sedikit tangan-peluang

1803
01:25:57,241 --> 01:25:59,110
sebelum malam berakhir.

1804
01:25:59,110 --> 01:26:00,332

