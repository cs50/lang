1
00:00:00,000 --> 00:00:00,629

2
00:00:00,629 --> 00:00:02,170
DAVID MALAN：好的，歡迎回來。

3
00:00:02,170 --> 00:00:06,520
在我們進入雲計算，
我想我停頓了一會兒

4
00:00:06,520 --> 00:00:11,740
如果有任何懸而未決的問題
或午餐時想出了主題

5
00:00:11,740 --> 00:00:13,834
現在可能是感興趣的。

6
00:00:13,834 --> 00:00:18,470

7
00:00:18,470 --> 00:00:21,410
>> 聽眾：[聽不清]

8
00:00:21,410 --> 00:00:22,090
>> DAVID MALAN：OK。

9
00:00:22,090 --> 00:00:23,555
哦，好的。

10
00:00:23,555 --> 00:00:24,430
聽眾：[聽不清]

11
00:00:24,430 --> 00:00:29,880

12
00:00:29,880 --> 00:00:31,420
>> DAVID MALAN：不，當然。

13
00:00:31,420 --> 00:00:35,180
OK，好希望所有的
在接下來的幾個小時內出現的問題

14
00:00:35,180 --> 00:00:36,410
明天更是如此。

15
00:00:36,410 --> 00:00:42,700
但是，讓我們來看看，然後在那裡
有關設置的最後討論

16
00:00:42,700 --> 00:00:45,730
網站線索，更普遍
當涉及到雲計算，

17
00:00:45,730 --> 00:00:48,210
設置服務器的體系結構，
種決定

18
00:00:48,210 --> 00:00:50,800
工程師和
開發者和管理者

19
00:00:50,800 --> 00:00:53,210
需要做，當談到
在做多只

20
00:00:53,210 --> 00:00:56,550
報名參加每月的虛擬主機$ 10
當你真正想打造出來的

21
00:00:56,550 --> 00:00:57,550
你自己的基礎設施。

22
00:00:57,550 --> 00:01:00,400
我們會盡力來把這些背，
例如，到收存箱和其他

23
00:01:00,400 --> 00:01:01,350
像他們。

24
00:01:01,350 --> 00:01:06,250
>> 因此，讓我們開始考慮
有什麼問題出現業務

25
00:01:06,250 --> 00:01:09,390
取得了良好的和好出現的問題。

26
00:01:09,390 --> 00:01:14,720
所以在具有的非常簡單的情況下
一些公司，有一個網絡服務器，

27
00:01:14,720 --> 00:01:21,470
你可能有，比方說，一個服務器
我們就得出如下。

28
00:01:21,470 --> 00:01:25,620
這幾天，最servers--讓我們
居然把一個圖片，這只是如此

29
00:01:25,620 --> 00:01:27,680
這是一個有點不太模糊的。

30
00:01:27,680 --> 00:01:31,510
>> 因此戴爾機架server--
早在一天，有

31
00:01:31,510 --> 00:01:33,730
是大型計算機
這佔去了整個房間。

32
00:01:33,730 --> 00:01:35,710
這些天來，如果你是
得到一個服務器，它

33
00:01:35,710 --> 00:01:38,520
可能看起來有點像這樣。

34
00:01:38,520 --> 00:01:41,760
服務器在衡量什麼
被稱為機架單元，或者替換單元。

35
00:01:41,760 --> 00:01:45,280
一RU為1.5英寸，
這是一個行業標準。

36
00:01:45,280 --> 00:01:49,300
因此，這看起來就像一個兩RU服務器。

37
00:01:49,300 --> 00:01:51,240
因此，它的3個英寸高。

38
00:01:51,240 --> 00:01:54,430
而且他們一般是19英寸寬，
這意味著所有這些東西的

39
00:01:54,430 --> 00:01:55,160
標準化。

40
00:01:55,160 --> 00:01:59,420
>> 所以，如果你在一個數據center--看
不只是在一台服務器，但讓我們

41
00:01:59,420 --> 00:02:02,110
看看谷歌的
數據中心，看看我們

42
00:02:02,110 --> 00:02:04,280
看到谷歌圖片漂亮的圖片。

43
00:02:04,280 --> 00:02:09,090
這是比你更好亮
通常會發現，等等

44
00:02:09,090 --> 00:02:14,900
性感看作為一個結果。但
這是什麼樣子的一對夫婦

45
00:02:14,900 --> 00:02:17,380
100個服務器全部
大約相同的大小，

46
00:02:17,380 --> 00:02:21,450
實際上，在機架機架後後
在數據中心的機架後架。

47
00:02:21,450 --> 00:02:26,150
>> 像this--這很可能
是谷歌的，因為我用Google搜索谷歌的。

48
00:02:26,150 --> 00:02:28,330
但它可能是代表
更普遍

49
00:02:28,330 --> 00:02:31,480
數據中心，其中許多
公司通常共同位於。

50
00:02:31,480 --> 00:02:34,940
和同位通常意味著
你去像Equinix的地方

51
00:02:34,940 --> 00:02:40,280
或其他供應商具有較大
有大量的權力倉庫，

52
00:02:40,280 --> 00:02:42,950
大量的冷卻，希望
大量的安全性，

53
00:02:42,950 --> 00:02:47,910
和單獨的籠子圍成衣架
服務器和你要么租架

54
00:02:47,910 --> 00:02:49,150
或者您帶來的機架。

55
00:02:49,150 --> 00:02:51,420
>> 而個別公司，
尤其是初創公司，

56
00:02:51,420 --> 00:02:54,820
將具有某種生物識別技術
要進入他們的籠子，或鑰匙，

57
00:02:54,820 --> 00:02:55,640
或鑰匙卡。

58
00:02:55,640 --> 00:02:56,990
你打開門。

59
00:02:56,990 --> 00:03:00,354
而且裡面有剛
平方英尺的足跡

60
00:03:00,354 --> 00:03:03,270
那你付出的，裡面
你可以把你想要的任何東西。

61
00:03:03,270 --> 00:03:04,770
>> 而且您通常會支付能力。

62
00:03:04,770 --> 00:03:06,920
而你付出的足跡。

63
00:03:06,920 --> 00:03:08,770
然後你支付
自己的服務器

64
00:03:08,770 --> 00:03:10,560
您所帶進的空間。

65
00:03:10,560 --> 00:03:12,850
和你再有
選擇做的是花錢找人

66
00:03:12,850 --> 00:03:15,120
您的Internet服務的連接。

67
00:03:15,120 --> 00:03:17,240
您可以支付任何數量
供應商，所有的人

68
00:03:17,240 --> 00:03:19,210
通常進入數據中心。

69
00:03:19,210 --> 00:03:22,740
>> 但真正有趣的問題是，
究竟這些機架去？

70
00:03:22,740 --> 00:03:25,020
他們可能都很好
像我們剛才看到的。

71
00:03:25,020 --> 00:03:27,870
但是他們執行不同的功能
並可能需要做不同的事情。

72
00:03:27,870 --> 00:03:29,661
讓我們實際
激勵這個討論

73
00:03:29,661 --> 00:03:35,370
有問題，什麼問題
到開始出現，如果你成功了嗎？

74
00:03:35,370 --> 00:03:37,900
>> 所以，你有一個網站
你已經建立。

75
00:03:37,900 --> 00:03:40,450
也許它的售價小部件
或類似的東西。

76
00:03:40,450 --> 00:03:43,620
而你已經做得很好
銷售小部件聯機。

77
00:03:43,620 --> 00:03:48,490
你開始體驗
一些症狀，你的網站。

78
00:03:48,490 --> 00:03:51,070
什麼可能是一些
技術症狀

79
00:03:51,070 --> 00:03:54,040
用戶報告業務
增長和蓬勃發展

80
00:03:54,040 --> 00:03:59,482
和你的網站是
受益呢？

81
00:03:59,482 --> 00:04:02,690
>> 聽眾：[聽不清]

82
00:04:02,690 --> 00:04:05,910

83
00:04:05,910 --> 00:04:07,050
>> DAVID MALAN：是的，沒錯。

84
00:04:07,050 --> 00:04:10,040
所以，你可能有一個
您的網站的放緩。

85
00:04:10,040 --> 00:04:11,240
又為什麼會發生呢？

86
00:04:11,240 --> 00:04:12,660
那麼，如果我們假設，
就事論事

87
00:04:12,660 --> 00:04:15,160
現在，你是在一個
這些商業網站主機

88
00:04:15,160 --> 00:04:17,860
我們午餐前談論，
你付出的美元一定數量

89
00:04:17,860 --> 00:04:20,859
每月，並且您已經支付
為您的域名每年費用

90
00:04:20,859 --> 00:04:25,300
名，虛擬主機是可能
超賣他們的資源

91
00:04:25,300 --> 00:04:26,050
在某種程度上。

92
00:04:26,050 --> 00:04:29,000
所以，你可能有一個用戶名
和他們的服務器上的密碼。

93
00:04:29,000 --> 00:04:32,410
但是，這樣可能其他幾家，或幾個
十多種，甚至可能數

94
00:04:32,410 --> 00:04:33,980
其他一百，用戶。

95
00:04:33,980 --> 00:04:37,190
>> 和網站實際生活
在同一台服務器上。

96
00:04:37,190 --> 00:04:38,340
為什麼這可能嗎？

97
00:04:38,340 --> 00:04:40,680
好了，這些天，服務器
像這樣的典型

98
00:04:40,680 --> 00:04:44,610
有多個硬盤，也許
多達六個以上的硬盤，

99
00:04:44,610 --> 00:04:47,665
其中每一個可能是盡可能多的
因為4 TB的這些天。

100
00:04:47,665 --> 00:04:52,140
所以，你可能有空間24萬億字節
在短短的一個這樣的小服務器。

101
00:04:52,140 --> 00:04:55,710
>> 即使你偷一些空間
冗餘，備份的目的，

102
00:04:55,710 --> 00:04:57,110
它仍然是相當多的空間。

103
00:04:57,110 --> 00:05:00,070
當然，一個典型的網站
並不需要那麼多的空間。

104
00:05:00,070 --> 00:05:03,100
只需註冊用戶
和存儲訂單日誌

105
00:05:03,100 --> 00:05:04,640
並不需要那麼多的空間。

106
00:05:04,640 --> 00:05:07,550
所以，你可以很分區呢
了一下，讓每個用戶

107
00:05:07,550 --> 00:05:08,980
只是其中一小片。

108
00:05:08,980 --> 00:05:11,310
>> 同時，一台計算機
這樣，這些天

109
00:05:11,310 --> 00:05:16,370
通常有多個CPUs--不僅僅是
之一，也許兩個，也許四，也許16，

110
00:05:16,370 --> 00:05:17,149
甚至更多。

111
00:05:17,149 --> 00:05:18,940
而且每個CPU的
有一種叫

112
00:05:18,940 --> 00:05:22,230
一個核心，這是一種像
腦的內部的大腦。

113
00:05:22,230 --> 00:05:26,800
因此，在這裡其實大多數人
現代筆記本電腦有可能是雙核

114
00:05:26,800 --> 00:05:32,030
或四核CPU--和可能只
一台筆記本電腦，這些天裡一個CPU。

115
00:05:32,030 --> 00:05:35,030
但是，台式電腦
和機架像電腦

116
00:05:35,030 --> 00:05:39,000
這可能有不少
更多的CPU，並依次芯。

117
00:05:39,000 --> 00:05:44,180
>> 坦率地說，即使是在我們的Mac和個人電腦的
今天，你並不真的需要雙核心

118
00:05:44,180 --> 00:05:46,550
或四核處理器，以檢查你的電子郵件。

119
00:05:46,550 --> 00:05:49,090
如果有任何的瓶頸時，
它涉及到使用計算機，

120
00:05:49,090 --> 00:05:51,925
你人很可能是
關於電腦最慢的事情。

121
00:05:51,925 --> 00:05:54,800
而你不會是能夠
檢查你的電子郵件的速度更快，如果你

122
00:05:54,800 --> 00:05:57,170
有四倍多CPU或內核。

123
00:05:57,170 --> 00:05:59,700
>> 但是，同樣是一種
真正的服務器。

124
00:05:59,700 --> 00:06:02,970
一個單一的網站可能不
一定需要一個以上的

125
00:06:02,970 --> 00:06:05,756
CPU或一個核心，人們
裡面做小的大腦

126
00:06:05,756 --> 00:06:07,380
所有的思維和處理。

127
00:06:07,380 --> 00:06:10,561
因此，製造商有類似的
開始切片這些資源

128
00:06:10,561 --> 00:06:13,435
所以，也許你的網站得到一份
核心，你的網站得到一個核心，

129
00:06:13,435 --> 00:06:15,290
也許我們正在分享一個這樣的核心。

130
00:06:15,290 --> 00:06:16,820
我們也共享磁盤空間。

131
00:06:16,820 --> 00:06:20,000
而且我們也共享RAM，
或隨機存取存儲器

132
00:06:20,000 --> 00:06:22,520
從之前，其中
還有一個有限的數量。

133
00:06:22,520 --> 00:06:23,420
>> 這是關鍵。

134
00:06:23,420 --> 00:06:25,960
無論多麼昂貴
計算機是，

135
00:06:25,960 --> 00:06:28,440
還是有有限
在它的資源的量。

136
00:06:28,440 --> 00:06:31,360
這樣一來，越來越多的你
嘗試使用這些資源，

137
00:06:31,360 --> 00:06:32,850
較慢的事情可能會變得。

138
00:06:32,850 --> 00:06:34,646
但為什麼？

139
00:06:34,646 --> 00:06:39,352
為什麼事情慢下來作為
服務器症狀過載？

140
00:06:39,352 --> 00:06:40,060
發生了什麼？

141
00:06:40,060 --> 00:06:42,895

142
00:06:42,895 --> 00:06:46,388
>> 聽眾：[聽不清]

143
00:06:46,388 --> 00:06:54,036

144
00:06:54,036 --> 00:06:55,160
DAVID MALAN：是的，沒錯。

145
00:06:55,160 --> 00:06:57,730
我建議早些時候
RAM是一類型的存儲器。

146
00:06:57,730 --> 00:07:00,290
這是易揮發，因此這是
其中，應用程序和數據

147
00:07:00,290 --> 00:07:01,890
正在被使用時，它們被存儲。

148
00:07:01,890 --> 00:07:03,990
等於是有
只有有限數量的

149
00:07:03,990 --> 00:07:05,790
事情可以做顯然是一次。

150
00:07:05,790 --> 00:07:07,740
而且它的速度也更快，
這是一件好事。

151
00:07:07,740 --> 00:07:09,990
但它也比較昂貴，
這是一件壞事。

152
00:07:09,990 --> 00:07:15,376
而且它也是因此在目前較低
數量比磁盤空間，硬盤

153
00:07:15,376 --> 00:07:16,750
空間，這往往要便宜。

154
00:07:16,750 --> 00:07:18,830
>> 換句話說，就
可能有4兆兆字節

155
00:07:18,830 --> 00:07:20,440
在您的計算機的磁盤空間。

156
00:07:20,440 --> 00:07:24,300
但你可能有4個
千兆字節或64千兆字節，

157
00:07:24,300 --> 00:07:29,180
在大小的一個因素秩序
1000在您的計算機內存少。

158
00:07:29,180 --> 00:07:30,320
那麼什麼是一台電腦嗎？

159
00:07:30,320 --> 00:07:32,236
好吧，假設你
確實有64千兆字節

160
00:07:32,236 --> 00:07:35,110
在這樣的服務器，其中RAM
將是相當普遍的，如果不低

161
00:07:35,110 --> 00:07:36,140
這些天。

162
00:07:36,140 --> 00:07:39,220
但是，假設你有這麼多
用戶做這麼多的事情

163
00:07:39,220 --> 00:07:42,480
你那種類型的
需要的存儲器65千兆字節

164
00:07:42,480 --> 00:07:44,960
處理所有的那
同時使用？

165
00:07:44,960 --> 00:07:47,580
>> 嗯，你可以只是說，
很抱歉，有些用戶數

166
00:07:47,580 --> 00:07:48,840
只是無法訪問該網站。

167
00:07:48,840 --> 00:07:51,410
那就是衡量
不得已，肯定。

168
00:07:51,410 --> 00:07:55,570
或者你，作為操作
系統，如Windows或Mac

169
00:07:55,570 --> 00:07:59,480
OS或Linux或Solaris或任何
該服務器上其他操作系統的數量，

170
00:07:59,480 --> 00:08:01,280
可能只是決定，你知道嗎？

171
00:08:01,280 --> 00:08:03,780
我只有RAM的64千兆字節。

172
00:08:03,780 --> 00:08:05,440
我有點需要65。

173
00:08:05,440 --> 00:08:06,210
所以，你知道嗎？

174
00:08:06,210 --> 00:08:10,030
我要取1千兆字節
值得在RAM中的數據的

175
00:08:10,030 --> 00:08:15,240
這是最近最少訪問
，只是將其移動到磁盤臨時，

176
00:08:15,240 --> 00:08:19,050
從字面上它從快速複製
存儲器的較慢存儲器

177
00:08:19,050 --> 00:08:24,000
這樣我就可以搞定
65千兆字節需要的內存，

178
00:08:24,000 --> 00:08:25,650
做一些關於它的計算。

179
00:08:25,650 --> 00:08:28,580
然後，當我做這樣做，
我只是動議到磁盤上，

180
00:08:28,580 --> 00:08:35,030
移動其他的RAM我暫時放下
在磁盤上回的實際硬件

181
00:08:35,030 --> 00:08:37,280
讓我有點多任務。

182
00:08:37,280 --> 00:08:41,190
>> 所以我那種把東西
暫時在這個空間更慢

183
00:08:41,190 --> 00:08:44,159
所以我創造的幻覺
處理每一個人。

184
00:08:44,159 --> 00:08:45,290
但是有一個放緩。

185
00:08:45,290 --> 00:08:45,790
為什麼？

186
00:08:45,790 --> 00:08:49,380
那麼，這裡面的辛苦
磁盤這些天是什麼？

187
00:08:49,380 --> 00:08:52,030
相反，是什麼使一個硬
開車從RAM不同

188
00:08:52,030 --> 00:08:53,495
作為最好的，你現在知道嗎？

189
00:08:53,495 --> 00:08:56,750
>> 聽眾：[聽不清]

190
00:08:56,750 --> 00:08:59,540

191
00:08:59,540 --> 00:09:01,445
>> DAVID MALAN：好的，真的。

192
00:09:01,445 --> 00:09:02,320
聽眾：[聽不清]

193
00:09:02,320 --> 00:09:05,440

194
00:09:05,440 --> 00:09:06,750
>> DAVID MALAN：做的很真實。

195
00:09:06,750 --> 00:09:13,709
這是一個副作用或功能
的事實，即RAM是確實更快。

196
00:09:13,709 --> 00:09:15,750
因此，要
使用它的當前使用。

197
00:09:15,750 --> 00:09:17,290
和盤較慢。

198
00:09:17,290 --> 00:09:19,630
但它是永久性的，或非易失性。

199
00:09:19,630 --> 00:09:21,480
所以，你用它來長期存儲。

200
00:09:21,480 --> 00:09:25,160
但在以下方面
實現中，如果我仰望

201
00:09:25,160 --> 00:09:29,297
什麼叫做DIMM，雙列直插式內存
模塊，這是一塊RAM

202
00:09:29,297 --> 00:09:30,380
通常可能的樣子。

203
00:09:30,380 --> 00:09:35,050
>> 因此，我們Mac--這是一個錯誤的內部。

204
00:09:35,050 --> 00:09:41,080
我們內部Mac和PC，我們的台式機
電腦將有記憶棒，

205
00:09:41,080 --> 00:09:43,220
你會打電話給他們，
或多根DIMM，或背部的SIMM

206
00:09:43,220 --> 00:09:44,970
在一天中，存儲器
看起來是這樣的。

207
00:09:44,970 --> 00:09:47,900
我們的筆記本電腦可能有事情，
是第三尺寸或半尺寸。

208
00:09:47,900 --> 00:09:50,066
他們是小了一點，
但相同的idea--小

209
00:09:50,066 --> 00:09:52,110
綠碳化矽塊
晶片或塑料

210
00:09:52,110 --> 00:09:56,237
對他們的黑色小芯片有很多
導線互連的一切。

211
00:09:56,237 --> 00:09:58,820
你可能有一大堆
這裡面您的計算機。

212
00:09:58,820 --> 00:10:00,903
但外賣這裡
它完全電子化。

213
00:10:00,903 --> 00:10:03,130
這裡還有電子
流動在此設備上。

214
00:10:03,130 --> 00:10:08,170
相反，如果我們看一下
硬盤驅動器的內部

215
00:10:08,170 --> 00:10:10,760
拉起一張圖片
在這裡，你會代替

216
00:10:10,760 --> 00:10:16,600
看到這樣的事情，
裡面確實有電

217
00:10:16,600 --> 00:10:17,950
通過它去大勢所趨。

218
00:10:17,950 --> 00:10:20,265
但也跳出
你這個東西？

219
00:10:20,265 --> 00:10:21,140
聽眾：[聽不清]

220
00:10:21,140 --> 00:10:22,710
DAVID MALAN：是的，有
顯然運動部件。

221
00:10:22,710 --> 00:10:25,210
這有點像一個舊紀錄
播放機或唱機。

222
00:10:25,210 --> 00:10:26,200
而且它幾乎是。

223
00:10:26,200 --> 00:10:28,950
它比that--票友一點點
而使用唱機

224
00:10:28,950 --> 00:10:33,150
槽記錄中，這其實
採用微小的磁性粒子

225
00:10:33,150 --> 00:10:34,550
我們不能完全看到。

226
00:10:34,550 --> 00:10:38,520
但是，如果一個小磁粉
看起來是這樣的，它被認為是1。

227
00:10:38,520 --> 00:10:41,230
而如果它看起來像這樣，
南北代替南北，

228
00:10:41,230 --> 00:10:42,252
這可能是一個0。

229
00:10:42,252 --> 00:10:45,460
我們會看到明天我們如何建立
從更有趣的事情。

230
00:10:45,460 --> 00:10:47,590
>> 但是，任何的
得到了實際移動

231
00:10:47,590 --> 00:10:51,010
是肯定要去慢
比光的速度，

232
00:10:51,010 --> 00:10:53,250
這在理論上是
電子流可能在，

233
00:10:53,250 --> 00:10:54,620
儘管現實不完全是。

234
00:10:54,620 --> 00:10:56,900
所以機械devices--慢得多。

235
00:10:56,900 --> 00:10:58,320
但他們更便宜。

236
00:10:58,320 --> 00:11:00,944
而且你能適應這麼多
他們的內部更多的數據。

237
00:11:00,944 --> 00:11:03,110
這樣的事實，有
存在於世界的東西

238
00:11:03,110 --> 00:11:06,840
稱為虛擬存儲器，
使用硬盤這樣

239
00:11:06,840 --> 00:11:10,160
就好像是RAM
對用戶透明，

240
00:11:10,160 --> 00:11:15,320
僅僅通過移動數據
從RAM到硬盤，

241
00:11:15,320 --> 00:11:18,714
然後移動它回來時，你需要
再次，造成經濟放緩。

242
00:11:18,714 --> 00:11:21,380
因為你從字面上有
從一個地方到另一個地方複製。

243
00:11:21,380 --> 00:11:25,100
而事情你將其複製並
從實際上比RAM慢

244
00:11:25,100 --> 00:11:26,150
你希望它是。

245
00:11:26,150 --> 00:11:29,030
>> 在另一種解決方案這裡 - 
如果你不喜歡慢下來，

246
00:11:29,030 --> 00:11:32,014
和你的虛擬內存
那種被負擔過重，

247
00:11:32,014 --> 00:11:33,680
什麼是另一種解決這個問題？

248
00:11:33,680 --> 00:11:35,260
>> 聽眾：[聽不清]

249
00:11:35,260 --> 00:11:37,260
DAVID MALAN：嗯，
增加虛擬存儲器

250
00:11:37,260 --> 00:11:39,135
先給大家做這在
一個更大的規模。

251
00:11:39,135 --> 00:11:43,540
我們可以處理66千兆字節的價值
內存的需求，或67千兆字節。

252
00:11:43,540 --> 00:11:45,830
但是，假如我不喜歡
這種緩慢下來，其實

253
00:11:45,830 --> 00:11:49,380
我想關閉虛擬
內存如果這甚至有可能，

254
00:11:49,380 --> 00:11:52,350
還有什麼我可以扔
這個問題解決了，

255
00:11:52,350 --> 00:11:56,900
在這裡我要處理更多用戶
和更大的內存需求

256
00:11:56,900 --> 00:11:59,100
比我實際擁有的那一刻？

257
00:11:59,100 --> 00:12:02,600
>> 聽眾：[聽不清]

258
00:12:02,600 --> 00:12:04,800

259
00:12:04,800 --> 00:12:06,140
>> DAVID MALAN：不幸的是沒有。

260
00:12:06,140 --> 00:12:09,850
所以CPU和它們的芯
在是一種有限的資源。

261
00:12:09,850 --> 00:12:13,280
還有的在這方面沒有模擬。

262
00:12:13,280 --> 00:12:14,990
好問題，但。

263
00:12:14,990 --> 00:12:19,270
所以，僅僅是明確的，也是如此，如果
裡面的這台電腦，

264
00:12:19,270 --> 00:12:24,510
讓我們說，內存棒，看起來
像this--所以我們就叫這個RAM。

265
00:12:24,510 --> 00:12:27,070
而在這裡是硬盤驅動器。

266
00:12:27,070 --> 00:12:30,130
而我就這樣畫
形象地作為一個小圓圈。

267
00:12:30,130 --> 00:12:33,740
有0和1的兩種的
these--數據，我們將其概括為。

268
00:12:33,740 --> 00:12:38,030
>> 並且基本上，如果用戶是
運行的應用程序等，

269
00:12:38,030 --> 00:12:46,070
比方說，一個網站，這需要
每個用戶的RAM，什麼我提議，

270
00:12:46,070 --> 00:12:48,380
通過這件事情的方式
稱為虛擬存儲器，

271
00:12:48,380 --> 00:12:53,990
是只暫時將
那在這裡讓我現在

272
00:12:53,990 --> 00:12:57,810
可以移動別人的存儲器
那邊的要求。

273
00:12:57,810 --> 00:13:00,420
然後當這樣做了，
我可以通過複製此背

274
00:13:00,420 --> 00:13:04,550
而這個放在這裡，從而移動
我想在那裡別的地方

275
00:13:04,550 --> 00:13:05,050
共。

276
00:13:05,050 --> 00:13:07,820
>> 因此，有只是很多
switcheroo，是這裡的外賣。

277
00:13:07,820 --> 00:13:12,380
所以，如果你不喜歡這一點，你不
希望把任何東西在硬盤上，

278
00:13:12,380 --> 00:13:16,440
有什麼樣的明顯
商務人士的解決方案

279
00:13:16,440 --> 00:13:19,684
的問題，或在工程師的
解決方案，對於這個問題，太？

280
00:13:19,684 --> 00:13:21,950
>> 聽眾：[聽不清]

281
00:13:21,950 --> 00:13:24,750
>> DAVID MALAN：是的，我的意思是字面上
這個問題投錢。

282
00:13:24,750 --> 00:13:27,541
而實際上，這是一個完美
原因請看一些上級

283
00:13:27,541 --> 00:13:28,870
雲計算的討論。

284
00:13:28,870 --> 00:13:31,390
因為很多是激勵
通過財務決策，

285
00:13:31,390 --> 00:13:33,040
甚至不一定技術。

286
00:13:33,040 --> 00:13:37,830
如果RAM 64演出太少了，好了，
為什麼不內存128千兆字節？

287
00:13:37,830 --> 00:13:40,440
為什麼不給的RAM 256千兆字節？

288
00:13:40,440 --> 00:13:41,732
那麼，為什麼不呢？

289
00:13:41,732 --> 00:13:42,608
>> 聽眾：[聽不清]

290
00:13:42,608 --> 00:13:44,482
DAVID MALAN：嗯，
花費更多的錢，肯定。

291
00:13:44,482 --> 00:13:46,970
如果你已經有了備用
硬盤空間，有效，

292
00:13:46,970 --> 00:13:51,407
或者等價地，硬盤空間，以便
便宜多了，你還不如用它。

293
00:13:51,407 --> 00:13:54,490
如此反复，有這種權衡的
我們甚至看到了前面今天上午，

294
00:13:54,490 --> 00:13:56,656
那裡真的沒有
一定是正確的答案，

295
00:13:56,656 --> 00:14:01,360
有只是一個或好或壞的答案
根據你真正關心。

296
00:14:01,360 --> 00:14:04,500
>> 因此，有也是技術的現實。

297
00:14:04,500 --> 00:14:06,870
我不能買電腦，
據我所知，

298
00:14:06,870 --> 00:14:09,490
有一萬億千兆字節
內存現在。

299
00:14:09,490 --> 00:14:11,540
它只是身體不存在。

300
00:14:11,540 --> 00:14:13,240
因此，有一些上限。

301
00:14:13,240 --> 00:14:15,990
但是，如果你曾經逛過連
對於消費者Mac或PC，

302
00:14:15,990 --> 00:14:20,180
太一般有
特點這條曲線

303
00:14:20,180 --> 00:14:23,410
那裡可能是一個很好的，
一個更好的和最好的電腦。

304
00:14:23,410 --> 00:14:25,730
>> 而邊際收益
你的美元買盤

305
00:14:25,730 --> 00:14:30,227
最好的電腦與
較好的計算機

306
00:14:30,227 --> 00:14:32,560
可能不會差不多高
作為花更多一點錢

307
00:14:32,560 --> 00:14:35,599
並獲得較好的計算機
在良好的電腦。

308
00:14:35,599 --> 00:14:38,390
換句話說，你付出一
溢價來獲得該行的頂部。

309
00:14:38,390 --> 00:14:40,790
>> 而我們將在看到
雲計算的討論

310
00:14:40,790 --> 00:14:44,940
是什麼是很常見的這些
天，什麼谷歌等公司

311
00:14:44,940 --> 00:14:50,560
早期普及，並沒有支付
並建立真正看中的，價格昂貴

312
00:14:50,560 --> 00:14:53,540
與改裝成了電腦
很多很多的一切，

313
00:14:53,540 --> 00:15:00,140
而購買或建造漂亮
適度的計算機，但他們很多，

314
00:15:00,140 --> 00:15:03,280
並利用東西是一般
所謂橫向擴展，而不是

315
00:15:03,280 --> 00:15:04,320
垂直縮放。

316
00:15:04,320 --> 00:15:08,115
>> 因此，垂直縮放將意味著得到更多的
RAM，更多的磁盤，更多的東西，

317
00:15:08,115 --> 00:15:10,187
和排序的投資
垂直於硬件

318
00:15:10,187 --> 00:15:12,520
所以你剛開
最好的最好的最好的，

319
00:15:12,520 --> 00:15:13,650
但你為它付出。

320
00:15:13,650 --> 00:15:17,580
水平縮放排序得到
底層的東西，好的模式，

321
00:15:17,580 --> 00:15:19,922
甚至更壞的模式，
但得到很多很多。

322
00:15:19,922 --> 00:15:22,630
但是，一旦你得到很多
them--例如，在這種情況下，

323
00:15:22,630 --> 00:15:27,330
Web服務器，如果這一個服務器
或者一個虛擬主機是不夠的，

324
00:15:27,330 --> 00:15:32,310
然後只是直觀上，
溶液到負載的這個問題

325
00:15:32,310 --> 00:15:36,460
或您的服務器過載
要么是獲得更大的服務器

326
00:15:36,460 --> 00:15:40,770
或者什麼，我不是在這裡提出
縮放垂直這麼說，

327
00:15:40,770 --> 00:15:41,920
會是這樣，你知道嗎？

328
00:15:41,920 --> 00:15:43,580
剛剛獲得它們的第二個。

329
00:15:43,580 --> 00:15:46,560
或者，也許連得三分。

330
00:15:46,560 --> 00:15:48,900
但現在我們已經創建
一個工程問題

331
00:15:48,900 --> 00:15:51,920
本業務性質
或財務決策。

332
00:15:51,920 --> 00:15:54,312
現在，什麼是工程問題？

333
00:15:54,312 --> 00:15:56,040
>> 聽眾：[聽不清]

334
00:15:56,040 --> 00:15:59,740
>> DAVID MALAN：是啊，怎麼辦
您連接它們還有 - 對不起？

335
00:15:59,740 --> 00:16:00,651
>> 聽眾：[聽不清]

336
00:16:00,651 --> 00:16:02,400
DAVID MALAN：對，
因為我還have--

337
00:16:02,400 --> 00:16:07,280
如果我再介紹我到這個畫面，
如果這是我的筆記本電腦的地方

338
00:16:07,280 --> 00:16:12,400
互聯網，這是現在的上
我和我們談論了公司，

339
00:16:12,400 --> 00:16:17,960
現在我要弄清楚，到
服務器我發這個特定的用戶？

340
00:16:17,960 --> 00:16:25,090
如果有其他用戶一樣，
這一點，然後這一個在這裡，

341
00:16:25,090 --> 00:16:28,850
也許這是用戶A，此
是用戶B，這是用戶C，

342
00:16:28,850 --> 00:16:34,720
這是服務器1，2和3--現在
一個直觀的答案可能在這裡只是，

343
00:16:34,720 --> 00:16:37,460
我們會發送用戶A 1
和B 2和C 3。

344
00:16:37,460 --> 00:16:39,900
我們可以處理3倍多的用戶。

345
00:16:39,900 --> 00:16:41,360
>> 但是，這是一個過於簡單化。

346
00:16:41,360 --> 00:16:44,480
你如何決定誰送哪裡？

347
00:16:44,480 --> 00:16:46,400
所以，讓我們嘗試通過這個道理。

348
00:16:46,400 --> 00:16:50,110
因此，假設電腦
A，B和C是客戶，

349
00:16:50,110 --> 00:16:53,972
和服務器1，2和3是
橫向擴展的服務器。

350
00:16:53,972 --> 00:16:55,180
因此，他們是那種相同。

351
00:16:55,180 --> 00:16:57,200
他們都運行相同的軟件。

352
00:16:57,200 --> 00:16:59,770
而且他們都可以做同樣的事情。

353
00:16:59,770 --> 00:17:01,520
但是，我們之所以有
他們三個人是如此

354
00:17:01,520 --> 00:17:04,710
我們可以處理3
倍一下子很多人。

355
00:17:04,710 --> 00:17:07,960
>> 所以我們知道我們的
之前午餐討論

356
00:17:07,960 --> 00:17:11,460
有硬件之間
筆記本電腦和服務器。

357
00:17:11,460 --> 00:17:14,920
但是，我們將只是有點一概而論
現在隨著互聯網或雲。

358
00:17:14,920 --> 00:17:18,707
但我們知道，在我的家鄉，
可能有一個家用路由器。

359
00:17:18,707 --> 00:17:21,290
服務器附近，有可能是
路由器，DNS服務器，DHCP。

360
00:17:21,290 --> 00:17:24,780
可以有任何
我們希望在這個故事。

361
00:17:24,780 --> 00:17:33,360
>> 那麼，我們如何開始來決定，
當用戶A去something.com，

362
00:17:33,360 --> 00:17:36,630
哪個服務器來路由用戶？

363
00:17:36,630 --> 00:17:39,409
我們怎麼可能會開始講這個故事？

364
00:17:39,409 --> 00:17:40,450
聽眾：負載均衡？

365
00:17:40,450 --> 00:17:41,120
DAVID MALAN：負載均衡。

366
00:17:41,120 --> 00:17:42,502
你是什​​麼意思？

367
00:17:42,502 --> 00:17:44,660
>> 聽眾：返回
其中最使用率

368
00:17:44,660 --> 00:17:47,472
和哪一個具有
最可用的資源。

369
00:17:47,472 --> 00:17:49,930
DAVID MALAN：OK，所以讓我
引入新的硬件類型

370
00:17:49,930 --> 00:17:53,627
我們還沒有討論，這
正是，負載平衡器。

371
00:17:53,627 --> 00:17:54,960
這也可能僅僅是一個服務器。

372
00:17:54,960 --> 00:17:58,130
它可能看起來就像
一個我們看到剛才。

373
00:17:58,130 --> 00:18:01,000
負載平衡器真的是
只是一個軟件

374
00:18:01,000 --> 00:18:02,660
您在一個硬件上運行。

375
00:18:02,660 --> 00:18:07,310
>> 或者，你可以支付供應商，如
Citrix或他人，思科或其它。

376
00:18:07,310 --> 00:18:10,465
您可以支付自己的硬件，
其是硬件負載平衡器。

377
00:18:10,465 --> 00:18:12,840
但是，這只是意味著，他們
預先安裝的負載平衡

378
00:18:12,840 --> 00:18:15,580
在其硬件和軟件
把它賣給​​你們在一起。

379
00:18:15,580 --> 00:18:18,670
所以我們就繪製成
矩形為我們的宗旨。

380
00:18:18,670 --> 00:18:22,040
>> 怎麼現在我實現負載均衡？

381
00:18:22,040 --> 00:18:28,150
換句話說，當用戶A想
訪問我的網站，他們的要求莫名其妙

382
00:18:28,150 --> 00:18:31,070
或其他，可能是由那些方式
我們前面談到的路由器，

383
00:18:31,070 --> 00:18:33,750
是要最終達成
這個負載均衡器，那麼誰

384
00:18:33,750 --> 00:18:36,210
需要做出路由樣決定。

385
00:18:36,210 --> 00:18:38,320
但它的路由進行排序
更高的目標了。

386
00:18:38,320 --> 00:18:40,361
這不只是讓
從點A到點

387
00:18:40,361 --> 00:18:44,730
B.這是關於決定哪些
點B是其中them--最好

388
00:18:44,730 --> 00:18:46,660
1，2，或在這種情況下，3。

389
00:18:46,660 --> 00:18:51,000
>> 那麼，如何判斷是否
去1，2，3→

390
00:18:51,000 --> 00:18:55,180
可能是什麼這個黑盒子，所以
說話，做在裡面？

391
00:18:55,180 --> 00:18:57,880
這也是在另一示例
抽象的計算機科學。

392
00:18:57,880 --> 00:19:02,410
我從字面上繪製的負載平衡器
在黑色墨水一個黑盒子，裡面

393
00:19:02,410 --> 00:19:05,300
這是一些有趣的
邏輯或魔偶，

394
00:19:05,300 --> 00:19:07,840
外面需要來
一個decision-- 1，2或3。

395
00:19:07,840 --> 00:19:12,220
且輸入是剛剛A.

396
00:19:12,220 --> 00:19:13,442
>> 聽眾：[聽不清]

397
00:19:13,442 --> 00:19:14,400
DAVID MALAN：對不起？

398
00:19:14,400 --> 00:19:14,770
聽眾：[聽不清]

399
00:19:14,770 --> 00:19:18,310
DAVID MALAN：好吧，我們怎樣才能
分類交易類型

400
00:19:18,310 --> 00:19:19,095
這裡？

401
00:19:19,095 --> 00:19:23,772
>> 聽眾：查看網頁
與查詢數據庫。

402
00:19:23,772 --> 00:19:24,980
DAVID MALAN：OK，這是很好的。

403
00:19:24,980 --> 00:19:29,210
因此，也許這個用戶A
想要查看網頁。

404
00:19:29,210 --> 00:19:32,954
也許它甚至靜態內容，
東西很少改變，如果有的話。

405
00:19:32,954 --> 00:19:34,870
這似乎是一個
操作非常簡單。

406
00:19:34,870 --> 00:19:38,260
因此，也許我們只是隨意，
但合理的，說，

407
00:19:38,260 --> 00:19:42,750
服務器1，他的人生目標是
只提供靜態內容，

408
00:19:42,750 --> 00:19:45,150
文件很少，如果有的話，變化。

409
00:19:45,150 --> 00:19:46,870
也許這是在頁上的圖像。

410
00:19:46,870 --> 00:19:50,180
也許這是網頁上的文字或
其他類似種類的無趣的事情，

411
00:19:50,180 --> 00:19:52,460
沒有交易，沒有什麼動態。

412
00:19:52,460 --> 00:19:57,000
>> 相比之下，如果用戶A正在檢查
他的或她的購物車的那

413
00:19:57,000 --> 00:20:00,972
需要一個數據庫，某個地方來存儲
並記住，交易，以及

414
00:20:00,972 --> 00:20:02,680
也許這要求
應到服務器2。

415
00:20:02,680 --> 00:20:03,610
所以這是很好的。

416
00:20:03,610 --> 00:20:07,010
因此，我們可以根據負載平衡
的請求的類型。

417
00:20:07,010 --> 00:20:08,278
我們怎麼可以這樣做？

418
00:20:08,278 --> 00:20:13,690

419
00:20:13,690 --> 00:20:14,686
還有別的 - 

420
00:20:14,686 --> 00:20:17,382
>> 聽眾：基於服務器的
利用率和容量。

421
00:20:17,382 --> 00:20:18,340
DAVID MALAN：對，確定。

422
00:20:18,340 --> 00:20:19,950
所以你提到前，卡里姆。

423
00:20:19,950 --> 00:20:26,850
因此，如果我們提供什麼樣的一些輸入
在[聽不清]服務器1，2中，

424
00:20:26,850 --> 00:20:32,070
和3至這個負載平衡器，以便
他們只是不斷地通知

425
00:20:32,070 --> 00:20:36,420
負載平衡器他們的狀態是什麼？

426
00:20:36,420 --> 00:20:39,842
就像，嘿嘿，負載均衡，
我在50％的利用率。

427
00:20:39,842 --> 00:20:41,550
換句話說，我有
一半的用戶

428
00:20:41,550 --> 00:20:43,520
因為其實我可以馬上處理。

429
00:20:43,520 --> 00:20:45,480
嘿，負載平衡器，我
在100％的利用率。

430
00:20:45,480 --> 00:20:47,929
嘿，負載均衡，0％的利用率。

431
00:20:47,929 --> 00:20:49,970
負載平衡器，如果它是
設計的方式，

432
00:20:49,970 --> 00:20:53,990
可以在這些意見
作為輸入，它可以再

433
00:20:53,990 --> 00:20:57,420
決定，哦，2號為100％。

434
00:20:57,420 --> 00:21:01,440
讓我不發送將來的請求給他
比其他用戶已連接。

435
00:21:01,440 --> 00:21:02,360
這傢伙是0％。

436
00:21:02,360 --> 00:21:03,940
我們大量的流量發送給他。

437
00:21:03,940 --> 00:21:05,480
這傢伙說，他是在50％。

438
00:21:05,480 --> 00:21:08,080
讓我們把一些交通給他。

439
00:21:08,080 --> 00:21:12,012
>> 因此，這將是一種成分，即
我們可以採取負荷考慮。

440
00:21:12,012 --> 00:21:13,470
而且它會隨時間而改變。

441
00:21:13,470 --> 00:21:14,678
因此，決定將發生變化。

442
00:21:14,678 --> 00:21:17,350
所以這是一個很好的技術，
一個的常用。

443
00:21:17,350 --> 00:21:18,410
還有什麼可以做什麼？

444
00:21:18,410 --> 00:21:20,380
而且，我們實際上只是總結在這裡。

445
00:21:20,380 --> 00:21:29,510
所以決定在這裡可能是
按業務類型，我會打電話給它。

446
00:21:29,510 --> 00:21:32,220
它可以基於負載。

447
00:21:32,220 --> 00:21:34,692
讓我們來看看，如果我們不能
想出一些其他的。

448
00:21:34,692 --> 00:21:35,934
>> 聽眾：[聽不清]

449
00:21:35,934 --> 00:21:36,850
DAVID MALAN：位置。

450
00:21:36,850 --> 00:21:37,724
所以這是一個很好的一個。

451
00:21:37,724 --> 00:21:40,880
因此location--怎麼可能你
利用這些信息？

452
00:21:40,880 --> 00:21:44,317
>> 聽眾：[聽不清]

453
00:21:44,317 --> 00:21:54,140

454
00:21:54,140 --> 00:21:57,040
>> DAVID MALAN：哦，那是很好的。

455
00:21:57,040 --> 00:21:59,450
大約多少毫秒
它會通過減少

456
00:21:59,450 --> 00:22:02,466
基於我們所看到的這
早上，你會說什麼？

457
00:22:02,466 --> 00:22:04,330
>> 聽眾：[聽不清]

458
00:22:04,330 --> 00:22:06,550
>> DAVID MALAN：嗯，根據
在跟踪路線

459
00:22:06,550 --> 00:22:09,070
我們前面看到的，這僅僅是
東西粗略衡量，

460
00:22:09,070 --> 00:22:11,800
至少需要多長時間
數據從A到B

461
00:22:11,800 --> 00:22:16,140
感覺像什麼地方是什麼，
像74毫秒，給予或採取？

462
00:22:16,140 --> 00:22:19,200
然後什麼100加，
200多可能是在國外。

463
00:22:19,200 --> 00:22:22,110
所以基於這樣獨自一人，
似乎合理的假設

464
00:22:22,110 --> 00:22:25,310
對於在美國的用戶
訪問歐洲服務器

465
00:22:25,310 --> 00:22:28,900
可能需要兩次或三次
長，即使以毫秒為單位

466
00:22:28,900 --> 00:22:31,280
比它可能需要如果這
服務器在這裡設

467
00:22:31,280 --> 00:22:33,370
地理上，反之亦然。

468
00:22:33,370 --> 00:22:35,120
所以，當我提出
早些時候，尤其是

469
00:22:35,120 --> 00:22:37,880
一旦你越過這200毫秒
門檻，給予或採取，

470
00:22:37,880 --> 00:22:39,210
人類也開始注意到。

471
00:22:39,210 --> 00:22:42,960
和路由跟踪只是
假設原始的，無趣的數據。

472
00:22:42,960 --> 00:22:46,570
當你有一個網站，你​​必須
得到了用戶下載圖像或電影

473
00:22:46,570 --> 00:22:49,150
文件，大量的文字，
後續的請求。

474
00:22:49,150 --> 00:22:53,116
我們參觀的時候我們看到，究竟是什麼
它，Facebook或亞馬遜更早，

475
00:22:53,116 --> 00:22:55,490
還有一大堆的東西
需要被下載。

476
00:22:55,490 --> 00:22:56,573
所以，這將增加。

477
00:22:56,573 --> 00:23:00,259
所以多秒的可能
並非不合理。

478
00:23:00,259 --> 00:23:01,800
那麼好，地理是一種成分。

479
00:23:01,800 --> 00:23:05,920
所以事實上公司，如
Akamai的，如果你聽說過他們，

480
00:23:05,920 --> 00:23:10,000
或其他人很早就採取了
地理考慮。

481
00:23:10,000 --> 00:23:14,170
而事實證明，通過的性質
IP地址，我的筆記本電腦的IP地址，

482
00:23:14,170 --> 00:23:18,277
可以推斷，具有一定的概率，
你在哪裡在世界上。

483
00:23:18,277 --> 00:23:20,110
而事實上，有
第三方服務您

484
00:23:20,110 --> 00:23:24,480
可以付誰維護數據庫
IP地址和地區的

485
00:23:24,480 --> 00:23:28,660
與高可信度會
真當記者問，在世界何處

486
00:23:28,660 --> 00:23:30,090
這是IP地址？

487
00:23:30,090 --> 00:23:32,130
>> 所以其實什麼
其他公司使用它？

488
00:23:32,130 --> 00:23:35,900
如果你有葫蘆或Netflix的，如果
你曾經出國旅遊，

489
00:23:35,900 --> 00:23:38,640
和您嘗試觀看的東西
葫蘆，你是不是在美國，

490
00:23:38,640 --> 00:23:41,280
您可能會看到一條消息
說，不是在美國。

491
00:23:41,280 --> 00:23:43,208
對不起，您無法瀏覽該內容。

492
00:23:43,208 --> 00:23:44,420
>> 聽眾：[聽不清]

493
00:23:44,420 --> 00:23:46,020
>> DAVID MALAN：哦，真的嗎？

494
00:23:46,020 --> 00:23:48,480
但是，是的，所以實際上這是
一個完美的應用

495
00:23:48,480 --> 00:23:51,060
的東西很技術
一個實際的問題。

496
00:23:51,060 --> 00:23:55,100
如果從有到VPN
歐洲或亞洲或任何

497
00:23:55,100 --> 00:23:57,950
在世界上你的企業
總部設在紐約

498
00:23:57,950 --> 00:24:00,670
或者無論你在哪裡，你
要創建的外觀

499
00:24:00,670 --> 00:24:03,580
外網站
你實際上是在紐約，

500
00:24:03,580 --> 00:24:05,660
即使你
身體很遠。

501
00:24:05,660 --> 00:24:08,057
>> 現在，你的用戶要
知道你顯然走。

502
00:24:08,057 --> 00:24:11,140
但你也要去感受它，因為
這些額外的毫秒。

503
00:24:11,140 --> 00:24:14,510
額外的距離和
這是發生在VPN加密

504
00:24:14,510 --> 00:24:15,760
是要慢下來。

505
00:24:15,760 --> 00:24:17,680
所以它可能會或可能不會
是一個很好的經驗。

506
00:24:17,680 --> 00:24:21,050
但Hulu和Netflix公司會看到
你坐著的地方在紐約，

507
00:24:21,050 --> 00:24:23,817
因為你已經清楚地收集。

508
00:24:23,817 --> 00:24:25,150
什麼是完美的解決了這一點。

509
00:24:25,150 --> 00:24:28,490
>> 好吧，地理學是一項決定。

510
00:24:28,490 --> 00:24:32,290
我們還有什麼可以用它來決定如何
從A，B和C路由流量

511
00:24:32,290 --> 00:24:37,040
為1，2，和3中，再次，把
對工程的帽子？

512
00:24:37,040 --> 00:24:38,850
這聽起來很複雜。

513
00:24:38,850 --> 00:24:41,490
呃，我甚至不知道在哪裡
開始實施的。

514
00:24:41,490 --> 00:24:44,450
給我的東西，更簡單。

515
00:24:44,450 --> 00:24:48,160
什麼是最簡單的方法
做出這個決定？

516
00:24:48,160 --> 00:24:49,840
>> 聽眾：是服務器可用？

517
00:24:49,840 --> 00:24:51,650
>> DAVID MALAN：是服務器可用？

518
00:24:51,650 --> 00:24:53,970
所以不壞。

519
00:24:53,970 --> 00:24:54,470
那很好。

520
00:24:54,470 --> 00:24:56,260
這就是那種負載的nuancing的。

521
00:24:56,260 --> 00:24:58,070
因此，讓我們記住這負載類別。

522
00:24:58,070 --> 00:25:00,010
如果你用，我只是
去那裡的數據發送。

523
00:25:00,010 --> 00:25:01,343
但是，這可能很快適得其反。

524
00:25:01,343 --> 00:25:05,720
因為如果我用這個邏輯，如果我
總是問1，你就上你，

525
00:25:05,720 --> 00:25:08,970
是你，如果答案是肯定的始終，
我要去送流量的100％

526
00:25:08,970 --> 00:25:11,060
他說，0％到其他人。

527
00:25:11,060 --> 00:25:14,430
在某些時候，我們會打
經濟放慢或網站無法使用。

528
00:25:14,430 --> 00:25:17,630
那麼，有什麼比略好
這不過還是很簡單

529
00:25:17,630 --> 00:25:22,412
，幾乎沒有聰明的採取一切
這些額外的數據考慮在內？

530
00:25:22,412 --> 00:25:23,992
>> 聽眾：每台服務器的成本。

531
00:25:23,992 --> 00:25:25,200
DAVID MALAN：每台服務器的成本。

532
00:25:25,200 --> 00:25:28,010
好了，讓我折騰了
在負載類，太。

533
00:25:28,010 --> 00:25:30,790
因為你會發現在
一個公司，太...如果你

534
00:25:30,790 --> 00:25:32,790
升級服務器
隨著時間的推移或購買更多，

535
00:25:32,790 --> 00:25:36,242
你可能不能夠得到完全
相同版本的硬件。

536
00:25:36,242 --> 00:25:37,450
因為它屬於過時。

537
00:25:37,450 --> 00:25:38,491
你可以不買它了。

538
00:25:38,491 --> 00:25:39,360
價格的變化。

539
00:25:39,360 --> 00:25:42,500
>> 所以，你可能有不同的服務器
在群集中，可以這麼說。

540
00:25:42,500 --> 00:25:43,890
這是完全正常。

541
00:25:43,890 --> 00:25:47,100
但是，明年的硬件
可能快兩倍，

542
00:25:47,100 --> 00:25:49,390
兩倍，能夠為今年的。

543
00:25:49,390 --> 00:25:51,500
因此，我們就可以拋棄
到負載類別。

544
00:25:51,500 --> 00:25:54,260
1之間的反饋迴路，
2，和3中的負載平衡器

545
00:25:54,260 --> 00:25:57,650
當然可以告訴你，
哎，我在50％的容量。

546
00:25:57,650 --> 00:26:00,100
不過順便說一句，我也
有兩倍多的內核。

547
00:26:00,100 --> 00:26:02,319
使用這些信息。

548
00:26:02,319 --> 00:26:05,110
即使simpler--，這是怎麼回事
要在計算機科學的一個主題。

549
00:26:05,110 --> 00:26:08,990
如果有疑問，或者您想要一個簡單的
解決方案通常運作良好

550
00:26:08,990 --> 00:26:12,730
隨著時間的推移，不要選擇相同
服務器中的所有時間，但choose--

551
00:26:12,730 --> 00:26:14,039
>> 聽眾：一個隨機？

552
00:26:14,039 --> 00:26:15,330
DAVID MALAN：--a隨機服務器。

553
00:26:15,330 --> 00:26:16,780
是的，選擇一個或其他。

554
00:26:16,780 --> 00:26:21,160
所以隨意性實際上是
這個非常強大的成分

555
00:26:21,160 --> 00:26:23,170
在計算機科學，
在工程更多

556
00:26:23,170 --> 00:26:27,160
一般，尤其是當你想
做一個簡單的決定迅速

557
00:26:27,160 --> 00:26:30,480
沒有與所有它複雜
這些非常聰明，也

558
00:26:30,480 --> 00:26:34,330
很巧，解決方案需要
所有的更多的工程，所有的

559
00:26:34,330 --> 00:26:36,220
在更多的思考，當
說真的，我為什麼不

560
00:26:36,220 --> 00:26:39,200
正中下懷拋硬幣，或
三個這種情況下片面硬幣，

561
00:26:39,200 --> 00:26:41,690
並決定是否去1，2，3→

562
00:26:41,690 --> 00:26:45,610
>> 這可能概率事與願違，
但是很像賠率

563
00:26:45,610 --> 00:26:48,860
再次翻轉頭和
再，再而三

564
00:26:48,860 --> 00:26:53,870
一次又一次是可能的
reality--超好，不太可能。

565
00:26:53,870 --> 00:26:58,170
所以，隨著時間的推移，賠率是
只是向用戶發送隨機

566
00:26:58,170 --> 00:27:00,660
為1，2和3是要
制定出完美的罰款。

567
00:27:00,660 --> 00:27:03,380
這是一種技術
一般被稱為循環賽。

568
00:27:03,380 --> 00:27:05,160
>> 或者實際上，這不是循環賽。

569
00:27:05,160 --> 00:27:06,980
這將是隨機的方法。

570
00:27:06,980 --> 00:27:09,250
如果你想成為連
比簡單一些，

571
00:27:09,250 --> 00:27:12,820
循環賽會，第一人稱去
為1，第二個人2，第三人

572
00:27:12,820 --> 00:27:16,056
為3，第四人1。

573
00:27:16,056 --> 00:27:17,430
就在這裡循環賽。

574
00:27:17,430 --> 00:27:19,580
你剛才那種到處在一個週期。

575
00:27:19,580 --> 00:27:21,300
>> 現在，你應該聰明一點。

576
00:27:21,300 --> 00:27:26,490
你不應該盲目地發送用戶
服務器排名第一的，如果有什麼情況？

577
00:27:26,490 --> 00:27:30,060

578
00:27:30,060 --> 00:27:32,870
如果是在最大容量，或
它只是不再響應。

579
00:27:32,870 --> 00:27:35,270
所以，理想情況下，你想要一些
一種反饋迴路。

580
00:27:35,270 --> 00:27:38,040
否則，你只是把所有
你的用戶到了窮途末路。

581
00:27:38,040 --> 00:27:40,790
但是，可以考慮到，也。

582
00:27:40,790 --> 00:27:46,520
>> 所以不要下欣賞價值
只是隨機性，這是相當頻繁

583
00:27:46,520 --> 00:27:48,970
解決這類問題。

584
00:27:48,970 --> 00:27:51,580
我們會寫下循環賽。

585
00:27:51,580 --> 00:27:55,090
那麼，如何做一些公司實施
循環賽或隨機性

586
00:27:55,090 --> 00:27:56,840
或者這些決定的？

587
00:27:56,840 --> 00:28:01,840
好可惜，他們
做這樣的事情。

588
00:28:01,840 --> 00:28:03,660
讓我拉了另一個快速截圖。

589
00:28:03,660 --> 00:28:13,052

590
00:28:13,052 --> 00:28:14,470
>> 其實，讓我們做兩。

591
00:28:14,470 --> 00:28:17,420

592
00:28:17,420 --> 00:28:21,370
我不知道為什麼我們
讓所有的這些菜。

593
00:28:21,370 --> 00:28:22,280
這是很奇怪的。

594
00:28:22,280 --> 00:28:31,714

595
00:28:31,714 --> 00:28:33,630
好吧，我真的
要的是一個屏幕截圖。

596
00:28:33,630 --> 00:28:36,990

597
00:28:36,990 --> 00:28:40,100
這很奇怪。

598
00:28:40,100 --> 00:28:42,930
好吧，這樣我就可以欺騙這一點。

599
00:28:42,930 --> 00:28:46,080
我不知道有多少遠
我想繼續滾動。

600
00:28:46,080 --> 00:28:53,220
>> 所以非常普遍，你會發現自己
在像www.2.acme.com一個地址，

601
00:28:53,220 --> 00:28:56,030
也許www.3或4或5。

602
00:28:56,030 --> 00:28:57,424
並密切關注這一點。

603
00:28:57,424 --> 00:28:58,590
你沒有看到它經常。

604
00:28:58,590 --> 00:29:02,621
但是，當你這樣做，它那種容易
更大，年紀大了，stodgier公司

605
00:29:02,621 --> 00:29:05,370
該技術真的不
似乎知道他們在做什麼。

606
00:29:05,370 --> 00:29:08,150
你瞧，這對高科技公司
有時，老的。

607
00:29:08,150 --> 00:29:09,270
>> 所以他們在做什麼？

608
00:29:09,270 --> 00:29:11,890
他們是如何實施
負載平衡，這似乎？

609
00:29:11,890 --> 00:29:15,986
如果你發現自己的
用戶打字www.something.com，

610
00:29:15,986 --> 00:29:19,760
突然你在
www.2.something.com，

611
00:29:19,760 --> 00:29:21,866
什麼都有自己的負載
平衡器大概做了什麼？

612
00:29:21,866 --> 00:29:22,741
聽眾：[聽不清]

613
00:29:22,741 --> 00:29:28,210

614
00:29:28,210 --> 00:29:31,079
>> DAVID MALAN：是的，所以
負載平衡器可以認為是

615
00:29:31,079 --> 00:29:33,870
使得基於一個一個決定
這些決策processes--

616
00:29:33,870 --> 00:29:35,210
其實並不重要哪。

617
00:29:35,210 --> 00:29:38,650
但是，就像我畫的
在黑板上的數字在這裡，

618
00:29:38,650 --> 00:29:40,650
服務器不只是
稱為1，2，和3。

619
00:29:40,650 --> 00:29:43,870
他們大概叫
WWW1，WWW2，www3。

620
00:29:43,870 --> 00:29:47,200
而事實證明那裡面
HTTP請求是此功能。

621
00:29:47,200 --> 00:29:48,950
而我要去
模擬這種如下。

622
00:29:48,950 --> 00:29:53,230
>> 我要去開拓相同
開發者網絡選項卡，只是之前

623
00:29:53,230 --> 00:29:55,560
所以我們可以看到這是怎麼回事
上罩下方。

624
00:29:55,560 --> 00:29:57,130
我要清除屏幕。

625
00:29:57,130 --> 00:30:03,420
而我會去，讓我們
說，http://harvard.edu。

626
00:30:03,420 --> 00:30:06,560
現在不管是什麼
商業上的原因，哈佛

627
00:30:06,560 --> 00:30:08,930
已經決定，許多人一樣，
許多其他網站，

628
00:30:08,930 --> 00:30:12,712
標準化其
網站上www.harvard.edu

629
00:30:12,712 --> 00:30:14,420
出於技術
和市場的原因。

630
00:30:14,420 --> 00:30:16,326
這只是一種在
時尚有WWW。

631
00:30:16,326 --> 00:30:20,500
>> 因此，在哈佛的服務器
以某種方式將用戶重定向，

632
00:30:20,500 --> 00:30:23,830
就像我一直說，從
一個網址到另一個。

633
00:30:23,830 --> 00:30:24,670
這是如何工作的？

634
00:30:24,670 --> 00:30:26,740
好吧，讓我先走，然後按Enter。

635
00:30:26,740 --> 00:30:30,830
的確很快注意到網址
改為www.harvard.edu。

636
00:30:30,830 --> 00:30:35,560
讓我們回來了，這我滾動
歷史和點擊這個調試

637
00:30:35,560 --> 00:30:37,650
診斷信息，如果你願意。

638
00:30:37,650 --> 00:30:39,170
讓我看看我的要求。

639
00:30:39,170 --> 00:30:41,020
>> 因此，這裡是我提出的要求。

640
00:30:41,020 --> 00:30:44,870
並注意它與實物​​相符
的要求我之前所做的Facebook。

641
00:30:44,870 --> 00:30:48,010
但是要注意的響應。

642
00:30:48,010 --> 00:30:50,430
有什麼不同
響應這個時間呢？

643
00:30:50,430 --> 00:30:51,890
>> 聽眾：[聽不清]

644
00:30:51,890 --> 00:30:54,290
>> DAVID MALAN：是的，所以它不是一個200 OK。

645
00:30:54,290 --> 00:30:56,130
這不是一個404未找​​到。

646
00:30:56,130 --> 00:31:00,150
這是一個301永久移動，這
是那種說法的一種有趣的方式，

647
00:31:00,150 --> 00:31:05,270
哈佛調升和感動
別處www.harvard.edu。

648
00:31:05,270 --> 00:31:08,220
301意味著
這是一個重定向。

649
00:31:08,220 --> 00:31:12,812
並應該在哪裡用戶
顯然被重定向？

650
00:31:12,812 --> 00:31:15,520
還有一個額外的珍聞
那個信封裡面的信息。

651
00:31:15,520 --> 00:31:19,650
而這些線路將現
開始調用一個HTTP頭。

652
00:31:19,650 --> 00:31:23,620
標題僅僅是一個鍵值
pair--東西結腸東西。

653
00:31:23,620 --> 00:31:24,850
這是一條信息。

654
00:31:24,850 --> 00:31:27,131
應該在哪裡新
顯然的位置呢？

655
00:31:27,131 --> 00:31:31,120

656
00:31:31,120 --> 00:31:33,692
通知的最後一行
所有這些報頭中。

657
00:31:33,692 --> 00:31:34,940
>> 聽眾：[聽不清]

658
00:31:34,940 --> 00:31:37,148
>> DAVID MALAN：是啊，所以有
附加信息。

659
00:31:37,148 --> 00:31:40,120
我已經強調的第一線
說301永久移動。

660
00:31:40,120 --> 00:31:42,820
好了，在那裡有它感動？

661
00:31:42,820 --> 00:31:45,340
最後line--和他們不這樣做
必須是在這個順序。

662
00:31:45,340 --> 00:31:47,020
它可以是隨機的。

663
00:31:47,020 --> 00:31:52,120
結腸定位手段，嘿嘿
瀏覽器訪問這個URL來代替。

664
00:31:52,120 --> 00:31:55,180
>> 所以，瀏覽器理解HTTP重定向。

665
00:31:55,180 --> 00:31:57,540
這是一個非常，非常
彈跳的常見方式

666
00:31:57,540 --> 00:31:59,680
從一個地方到另一個用戶。

667
00:31:59,680 --> 00:32:02,660
舉例來說，如果你曾經嘗試
訪問一個網站，你​​不

668
00:32:02,660 --> 00:32:06,360
登錄，你可能會突然發現
在自己一個新的URL被完全

669
00:32:06,360 --> 00:32:07,530
提示登錄。

670
00:32:07,530 --> 00:32:08,400
>> 這是如何工作的？

671
00:32:08,400 --> 00:32:10,920
該服務器可能發送301。

672
00:32:10,920 --> 00:32:14,510
還有其他號碼，如
302，在意義上有些不同，

673
00:32:14,510 --> 00:32:16,490
那送你到另一個URL。

674
00:32:16,490 --> 00:32:18,770
然後服務器，
一旦你登錄，

675
00:32:18,770 --> 00:32:22,000
會送你回哪裡
你真的打算。

676
00:32:22,000 --> 00:32:27,700
>> 還等什麼，然後，是很差
設計的網站在做什麼？

677
00:32:27,700 --> 00:32:31,340
當您訪問
www.acme.com，他們只是

678
00:32:31,340 --> 00:32:35,490
碰巧命名他們的服務器
WWW1，WWW2，www3，等等，

679
00:32:35,490 --> 00:32:39,100
他們是非常simply--
這是公平的，但很

680
00:32:39,100 --> 00:32:46,080
諸如此類的foolishly--重定向你
實際上一個不同名稱的服務器。

681
00:32:46,080 --> 00:32:48,650
和它的作品完美的罰款。

682
00:32:48,650 --> 00:32:49,930
這是不錯的和容易。

683
00:32:49,930 --> 00:32:52,200
>> 我們已經看到了它會怎樣
引擎蓋下完成

684
00:32:52,200 --> 00:32:53,490
在虛擬包絡線。

685
00:32:53,490 --> 00:32:56,450
但是，為什麼這是一個可以說是
壞工程的決定嗎？

686
00:32:56,450 --> 00:33:00,345
我為什麼要那種居高臨下
對這個特殊工程

687
00:33:00,345 --> 00:33:00,845
進場？

688
00:33:00,845 --> 00:33:06,420

689
00:33:06,420 --> 00:33:07,850
爭論為什麼這是不好的。

690
00:33:07,850 --> 00:33:09,375
本？

691
00:33:09,375 --> 00:33:10,250
聽眾：[聽不清]

692
00:33:10,250 --> 00:33:12,864

693
00:33:12,864 --> 00:33:16,030
DAVID MALAN：每個服務器將不得不
有網站的副本。

694
00:33:16,030 --> 00:33:16,738
我與該確定。

695
00:33:16,738 --> 00:33:19,490
而事實上，這就是我什麼
假設這個整個故事，

696
00:33:19,490 --> 00:33:22,104
因為如果我們wanted--好
實際上，除了丹的前面

697
00:33:22,104 --> 00:33:25,270
建議，在那裡，如果你有不同的
服務器做不同的事情，然後

698
00:33:25,270 --> 00:33:27,740
也許他們實際上可能
功能上做不同的事情。

699
00:33:27,740 --> 00:33:30,698
>> 但即使這樣，在某些時候，您的
數據庫是要超載。

700
00:33:30,698 --> 00:33:33,030
你的靜態資產的服務器
將會超載。

701
00:33:33,030 --> 00:33:34,850
所以，在某些時候，我們
回到這個故事，在那裡我們

702
00:33:34,850 --> 00:33:36,475
需要的一樣的東西多個副本。

703
00:33:36,475 --> 00:33:37,395
因此，我與該確定。

704
00:33:37,395 --> 00:33:38,270
聽眾：[聽不清]

705
00:33:38,270 --> 00:33:42,340

706
00:33:42,340 --> 00:33:45,350
>> DAVID MALAN：OK，所以有些頁面
可能是不成比例的流行。

707
00:33:45,350 --> 00:33:50,460
等行了吧上的一個地址
不一定是最好的事情。

708
00:33:50,460 --> 00:33:51,110
[聽不清]？

709
00:33:51,110 --> 00:33:51,985
>> 聽眾：[聽不清]

710
00:33:51,985 --> 00:33:54,770

711
00:33:54,770 --> 00:33:57,623
>> DAVID MALAN：你是什麼意思？

712
00:33:57,623 --> 00:33:58,498
聽眾：[聽不清]

713
00:33:58,498 --> 00:34:03,820

714
00:34:03,820 --> 00:34:05,072
>> DAVID MALAN：是的，沒錯。

715
00:34:05,072 --> 00:34:07,280
所以，你不想要
一定have--你肯定

716
00:34:07,280 --> 00:34:11,370
不想讓你的用戶
在WWW1或www2手動輸入。

717
00:34:11,370 --> 00:34:14,550
從品牌的角度來看，
只是看起來有點可笑。

718
00:34:14,550 --> 00:34:17,340
如果你只是想排序的
簡潔，優雅的經驗，

719
00:34:17,340 --> 00:34:20,364
有這些類型的隨機
編號的網址確實是不好的。

720
00:34:20,364 --> 00:34:22,780
因為這時用戶肯定
要複製並粘貼

721
00:34:22,780 --> 00:34:24,449
到電子郵件或即時消息。

722
00:34:24,449 --> 00:34:25,659
>> 現在，他們正在傳播。

723
00:34:25,659 --> 00:34:28,600
現在你那種混淆你的
少技術的觀眾，誰認為

724
00:34:28,600 --> 00:34:32,239
您的網絡地址是www2.something.com。

725
00:34:32,239 --> 00:34:35,434
有沒有令人信服的語義來表示。

726
00:34:35,434 --> 00:34:38,100
這恰好是一個潛在的
技術細節，你已經

727
00:34:38,100 --> 00:34:40,190
編號為您的服務器以這種方式。

728
00:34:40,190 --> 00:34:45,760
>> 而更糟糕的是，如果，例如，
也許到了聖誕節的時候

729
00:34:45,760 --> 00:34:50,090
生意興隆真的，
你已經通過了www99 WWW1，

730
00:34:50,090 --> 00:34:53,530
但在一月和二月和
開始，關閉那些一半

731
00:34:53,530 --> 00:34:56,440
所以你只能通過www50有WWW1？

732
00:34:56,440 --> 00:35:01,963
現在所寓意為
非常合理的業務決策？

733
00:35:01,963 --> 00:35:02,838
聽眾：[聽不清]

734
00:35:02,838 --> 00:35:05,628

735
00:35:05,628 --> 00:35:07,752
DAVID MALAN：您需要
還是管理所有這些的。

736
00:35:07,752 --> 00:35:10,515
聽眾：[聽不清]

737
00:35:10,515 --> 00:35:11,390
DAVID MALAN：沒錯。

738
00:35:11,390 --> 00:35:12,681
這是一種漁獲那裡。

739
00:35:12,681 --> 00:35:16,800
如果您的客戶在習慣
書籤的東西，向他們發送電子郵件，只

740
00:35:16,800 --> 00:35:19,351
保存URL的地方，或
如果它只是在他們的汽車

741
00:35:19,351 --> 00:35:22,350
完成他們的瀏覽器所以他們
不是真的故意鍵入它，

742
00:35:22,350 --> 00:35:25,560
它只是發生的事情，搞不好，
11個月的一年中

743
00:35:25,560 --> 00:35:27,190
有效，達到了死胡同。

744
00:35:27,190 --> 00:35:30,100
而只有最精明
用戶將要實現，

745
00:35:30,100 --> 00:35:32,040
也許我應該手動
刪除這個號碼。

746
00:35:32,040 --> 00:35:35,610
我的意思是，它只是不會發生
擁有眾多用戶，因此對企業不利，

747
00:35:35,610 --> 00:35:37,750
壞實施工程明智的。

748
00:35:37,750 --> 00:35:40,230
>> 所以幸運的是，它甚至沒有必要的。

749
00:35:40,230 --> 00:35:43,120
事實證明，什麼
負載均衡器可以做

750
00:35:43,120 --> 00:35:48,130
是不是說，當A
使得request--哎A，去1。

751
00:35:48,130 --> 00:35:50,280
換言之，代替
發送該重定向

752
00:35:50,280 --> 00:35:53,540
這樣的步驟之一，這
過程是這裡的旅途中，

753
00:35:53,540 --> 00:35:55,280
他再叫到別處去。

754
00:35:55,280 --> 00:35:57,530
所以，一步三是，他去別的地方。

755
00:35:57,530 --> 00:36:04,600
>> 您可以代替繼續路線，
繼續使用這個​​詞，所有的數據

756
00:36:04,600 --> 00:36:10,590
通過負載平衡器，以便他
從未觸點1，2或3直接。

757
00:36:10,590 --> 00:36:15,150
所有的流量並獲得“全軍覆沒”
通過負載均衡器本身。

758
00:36:15,150 --> 00:36:17,524
所以現在我們的排序
故意模糊線

759
00:36:17,524 --> 00:36:18,690
這些不同的設備之間。

760
00:36:18,690 --> 00:36:20,930
負載均衡器可以路由的數據。

761
00:36:20,930 --> 00:36:22,435
它只是它具有這樣的功能。

762
00:36:22,435 --> 00:36:25,420
>> 這樣一個負載平衡器也一樣，它的
一個軟件，真的。

763
00:36:25,420 --> 00:36:27,130
和路由器是一個軟件。

764
00:36:27,130 --> 00:36:29,660
你絕對可以有
兩個軟件內

765
00:36:29,660 --> 00:36:34,000
在一台物理計算機，以便負載的
平衡器可以做這些事情多。

766
00:36:34,000 --> 00:36:36,130
>> 因此，有另外一種方法
要做到這一點，這實際上

767
00:36:36,130 --> 00:36:39,670
追溯到排序第一的原則
DNS，這是我們談到的

768
00:36:39,670 --> 00:36:40,230
休息前。

769
00:36:40,230 --> 00:36:41,634
DNS是域名系統。

770
00:36:41,634 --> 00:36:43,550
記住，你可以
問一個DNS服務器，什麼是

771
00:36:43,550 --> 00:36:46,460
的IP地址
google.com，facebook.com？

772
00:36:46,460 --> 00:36:48,250
>> 我們可以真正做到這一點。

773
00:36:48,250 --> 00:36:51,940
我們沒有使用較早的工具是
一個只是為訪問，

774
00:36:51,940 --> 00:36:55,510
所謂NSLOOKUP，對於名稱服務器查找。

775
00:36:55,510 --> 00:36:57,410
而我只是要輸入facebook.com。

776
00:36:57,410 --> 00:37:02,500
而我看​​到Facebook的IP
地址顯然這。

777
00:37:02,500 --> 00:37:05,520
讓我繼續和複製
如此，去一個瀏覽器，

778
00:37:05,520 --> 00:37:11,690
訪問http：//和
IP地址，然後按Enter。

779
00:37:11,690 --> 00:37:14,140
果然，這似乎工作。

780
00:37:14,140 --> 00:37:18,610
>> 現在向後工作，究竟是什麼
虛擬信封中

781
00:37:18,610 --> 00:37:25,454
，Facebook的回應時，
我訪問的IP直接解決？

782
00:37:25,454 --> 00:37:26,745
由於通知，我現在在哪裡？

783
00:37:26,745 --> 00:37:29,250

784
00:37:29,250 --> 00:37:32,484
我現在在哪裡，地址？

785
00:37:32,484 --> 00:37:33,450
>> 聽眾：[聽不清]

786
00:37:33,450 --> 00:37:36,116
>> DAVID MALAN：在安全的版本，
並在www.facebook.com。

787
00:37:36,116 --> 00:37:38,520
因此，它甚至不僅
安全IP地址。

788
00:37:38,520 --> 00:37:42,650
Facebook已經採取它在自身
說，這是荒謬的。

789
00:37:42,650 --> 00:37:45,710
我們不會讓你在這個
難看網址的數字。

790
00:37:45,710 --> 00:37:50,120
我們要送你一個HTTP
通過相同的標題的方式重定向

791
00:37:50,120 --> 00:37:53,010
我們看到before--
位置結腸癌的東西。

792
00:37:53,010 --> 00:37:56,340
>> 所以，這只是意味著下方
引擎蓋仍是這個IP地址。

793
00:37:56,340 --> 00:37:59,010
在互聯網上的每台計算機
有IP地址，這似乎。

794
00:37:59,010 --> 00:38:01,480
但是，你不一定非得
以暴露給用戶。

795
00:38:01,480 --> 00:38:07,190
並且很像在天後面，有
是1-800-收集，1-800-C-O-L-L-E-C-T，

796
00:38:07,190 --> 00:38:11,700
在美國，是使收集的一個方法
通過一個非常容易令人難忘的通話費

797
00:38:11,700 --> 00:38:17,140
號碼或1-800-床墊買床，
和類似的助記符，你甚至可以看到

798
00:38:17,140 --> 00:38:20,460
在電話裡那種類型的
不過，這字母映射到數字。

799
00:38:20,460 --> 00:38:21,470
>> 現在，這是為什麼？

800
00:38:21,470 --> 00:38:26,080
嗯，這是一個更容易記憶
而不是1-800-床墊或1-800-COLLECT

801
00:38:26,080 --> 00:38:29,100
1-800什麼東西的東西
什麼東西的東西

802
00:38:29,100 --> 00:38:31,030
東西，其中每個
那些是一個數字。

803
00:38:31,030 --> 00:38:34,390
同樣，世界上了解到
很快，我們不應該

804
00:38:34,390 --> 00:38:35,940
讓人們記住的IP地址。

805
00:38:35,940 --> 00:38:36,826
這將是愚蠢的。

806
00:38:36,826 --> 00:38:38,200
我們要改用的名字。

807
00:38:38,200 --> 00:38:40,420
這就是為什麼DNS誕生了。

808
00:38:40,420 --> 00:38:45,510
>> 好吧，這麼說，在條件
負載均衡，讓我們嘗試yahoo.com。

809
00:38:45,510 --> 00:38:47,030
嗯，這很有意思。

810
00:38:47,030 --> 00:38:51,464
雅虎似乎返回三條記錄。

811
00:38:51,464 --> 00:38:53,940
所以從這個推斷，
如果可以的話，是什麼

812
00:38:53,940 --> 00:38:58,600
我們可以實現另一種方式
這個概念負載均衡

813
00:38:58,600 --> 00:39:04,310
也許甚至不使用物理
裝置中，這種新的物理設備？

814
00:39:04,310 --> 00:39:08,070
>> 換句話說，我可以帶走
資助您對負載平衡器

815
00:39:08,070 --> 00:39:10,990
並告訴你使用一些現有的
硬件來實現

816
00:39:10,990 --> 00:39:12,680
這個概念負載均衡？

817
00:39:12,680 --> 00:39:18,870

818
00:39:18,870 --> 00:39:22,510
和擾流板，
是的，但什麼，或者怎麼樣？

819
00:39:22,510 --> 00:39:27,605
什麼是雅虎也許是在這裡做什麼？

820
00:39:27,605 --> 00:39:29,200
卡里姆？

821
00:39:29,200 --> 00:39:30,635
好吧，克里斯？

822
00:39:30,635 --> 00:39:31,510
聽眾：[聽不清]

823
00:39:31,510 --> 00:39:35,119

824
00:39:35,119 --> 00:39:36,910
DAVID MALAN：是的，所有的
其中三個工作。

825
00:39:36,910 --> 00:39:39,890
所以隨機性，循環賽，
location--你可以

826
00:39:39,890 --> 00:39:44,160
充分利用現有的一塊拼圖
我們前面談到的DNS的

827
00:39:44,160 --> 00:39:49,580
系統並簡單地說，當第一
一天中的用戶請求yahoo.com，

828
00:39:49,580 --> 00:39:52,970
給他們的第一個IP地址，
像45在那裡結束的那個。

829
00:39:52,970 --> 00:39:55,762
而下一次用戶請求
yahoo.com的IP地址

830
00:39:55,762 --> 00:39:57,970
從世界的某個地方，
給他們第二個IP，

831
00:39:57,970 --> 00:39:59,920
然後第三個IP，則
第一IP，那麼第二。

832
00:39:59,920 --> 00:40:01,850
或者是聰明一點
並做到這一點圖形。

833
00:40:01,850 --> 00:40:05,200
或者，它隨機而不是僅僅做
它循環賽以這種方式。

834
00:40:05,200 --> 00:40:07,580
>> 在這種情況下，然後
我們甚至不需要

835
00:40:07,580 --> 00:40:10,190
要介紹的這款黑
盒子放到我們的圖片。

836
00:40:10,190 --> 00:40:11,690
我們不需要新的設備。

837
00:40:11,690 --> 00:40:16,930
我們只是告訴電腦
直接去服務器，

838
00:40:16,930 --> 00:40:18,680
有效，但不
他們的名字的方式。

839
00:40:18,680 --> 00:40:20,054
他們永遠不需要知道這個名字。

840
00:40:20,054 --> 00:40:25,690
他們只是被告知，yahoo.com
映射到這些IP地址中的任何一個。

841
00:40:25,690 --> 00:40:28,180
>> 所以它發送完全相同的請求。

842
00:40:28,180 --> 00:40:30,100
但上的外
信封，它簡單地

843
00:40:30,100 --> 00:40:32,740
把它獲悉的IP地址。

844
00:40:32,740 --> 00:40:35,590
並以這種方式，也可以
我們負載平衡的要求

845
00:40:35,590 --> 00:40:39,330
只需發送信封一個
不同的雅虎自己的服務器呢？

846
00:40:39,330 --> 00:40:42,390
>> 如果我們繼續挖掘，我們拭目以待
可能是其他公司更多。

847
00:40:42,390 --> 00:40:44,380
CNN已經兩個公開曝光。

848
00:40:44,380 --> 00:40:49,610
儘管實際上，如果我們再這樣做
和again-- cnn.com--你可以看到

849
00:40:49,610 --> 00:40:51,730
他們正在改變秩序，其實。

850
00:40:51,730 --> 00:40:56,680
那麼，什麼是機制
使用CNN，顯然？

851
00:40:56,680 --> 00:40:57,440
>> 聽眾：隨機。

852
00:40:57,440 --> 00:40:59,440
DAVID MALAN：嗯，
可以是隨機的，儘管它

853
00:40:59,440 --> 00:41:01,110
似乎是循環來回。

854
00:41:01,110 --> 00:41:04,380
因此，它可能是循環賽，其中
他們只是切換順序，使

855
00:41:04,380 --> 00:41:05,880
我大概會拿第一。

856
00:41:05,880 --> 00:41:08,860
我的電腦將採取
每次第一個。

857
00:41:08,860 --> 00:41:10,490
所以這就是負載均衡。

858
00:41:10,490 --> 00:41:18,450
這使我們最終
地圖數據，地圖或請求，

859
00:41:18,450 --> 00:41:21,240
在多台服務器。

860
00:41:21,240 --> 00:41:24,226
那麼什麼樣的
現在的問題還存在嗎？

861
00:41:24,226 --> 00:41:26,350
這感覺就像我們剛才真的
解決了一個很好的問題。

862
00:41:26,350 --> 00:41:28,740
我們得到了用戶在不同的服務器。

863
00:41:28,740 --> 00:41:31,420
但是 - 哦，和克里斯，做
你有前一個問題嗎？

864
00:41:31,420 --> 00:41:34,378
>> 聽眾：[聽不清]

865
00:41:34,378 --> 00:41:43,670

866
00:41:43,670 --> 00:41:45,120
>> DAVID MALAN：完全依賴。

867
00:41:45,120 --> 00:41:47,042
那麼，什麼是怎麼回事？

868
00:41:47,042 --> 00:41:48,250
我們可以清楚地看到這一點。

869
00:41:48,250 --> 00:41:51,649
所以讓我們試試雅虎的。

870
00:41:51,649 --> 00:41:52,940
其實，讓我們去到Facebook。

871
00:41:52,940 --> 00:41:54,520
因為我們知道，一件作品。

872
00:41:54,520 --> 00:41:56,545
所以我要去複製
再次該IP地址。

873
00:41:56,545 --> 00:41:58,820
我將關閉所有這些選項卡。

874
00:41:58,820 --> 00:42:03,800
我要去打開
到這裡特殊的網絡選項卡。

875
00:42:03,800 --> 00:42:07,800
我要去拜訪只有HTTP：//。

876
00:42:07,800 --> 00:42:10,694
而現在我要敲回車。

877
00:42:10,694 --> 00:42:11,860
讓我們看看發生了什麼。

878
00:42:11,860 --> 00:42:20,662
>> 如果我看這一請求，通知
這my-- Facebook是一個壞榜樣。

879
00:42:20,662 --> 00:42:22,370
因為它們具有
超級花式技巧

880
00:42:22,370 --> 00:42:25,960
隱藏的細節，從我們。

881
00:42:25,960 --> 00:42:30,690
讓我用雅虎
instead--的http：//該IP。

882
00:42:30,690 --> 00:42:36,030
讓我們打開我們的網絡
標籤，保存日誌。

883
00:42:36,030 --> 00:42:37,945
在這裡，我們走了，回車。

884
00:42:37,945 --> 00:42:40,669

885
00:42:40,669 --> 00:42:41,210
那很好笑。

886
00:42:41,210 --> 00:42:44,480
好了，這裡是著名的404消息。

887
00:42:44,480 --> 00:42:48,500
什麼是有趣這裡是他們
可能永遠不會回來的。

888
00:42:48,500 --> 00:42:51,430
因為有可能
不是錯誤本身。

889
00:42:51,430 --> 00:42:54,050
他們剛剛故意
決定不支持

890
00:42:54,050 --> 00:42:56,250
數字形式的地址。

891
00:42:56,250 --> 00:43:00,270
>> 那麼，我們實際上看到的
網絡選項卡，如果我拉這個在這裡，

892
00:43:00,270 --> 00:43:06,140
是，正如我所說，著名的404，在那裡
如果我看響應報頭，

893
00:43:06,140 --> 00:43:09,070
這是我得到了這裡 -  404未找​​到。

894
00:43:09,070 --> 00:43:11,360
所以讓我們嘗試另外一個。

895
00:43:11,360 --> 00:43:13,180
讓我們看看CNN與我們合作。

896
00:43:13,180 --> 00:43:19,440
我會抓住CNN的IP地址之一，
清除此，HTTP，大新，大新，大新，大新。

897
00:43:19,440 --> 00:43:21,620
所以在回答克里斯的
問題，一個工作。

898
00:43:21,620 --> 00:43:24,140

899
00:43:24,140 --> 00:43:26,255
>> 讓我們去響應頭。

900
00:43:26,255 --> 00:43:30,810

901
00:43:30,810 --> 00:43:33,640
其實也沒什麼，沒事，我
在努力尋找工作的例子。

902
00:43:33,640 --> 00:43:38,270
所以，CNN已經決定，我們就離開你
在任何地址，你實際訪問，

903
00:43:38,270 --> 00:43:40,359
品牌問題放在一邊。

904
00:43:40,359 --> 00:43:43,275
但是，什麼不會發生，如果
我們可以看到它在Facebook的情況下，

905
00:43:43,275 --> 00:43:46,700
是我們會得到一個301移動
永久，最有可能的，

906
00:43:46,700 --> 00:43:54,420
的是內部
位置：HTTPS：//www.facebook.com。

907
00:43:54,420 --> 00:44:01,210
賠率是www.facebook.com是
別名完全相同的服務器我們只是

908
00:44:01,210 --> 00:44:01,710
去了。

909
00:44:01,710 --> 00:44:03,500
>> 所以這是一個有點適得其反。

910
00:44:03,500 --> 00:44:05,170
我們從字面上訪問服務器。

911
00:44:05,170 --> 00:44:07,040
然後，服務器告訴我們，走開。

912
00:44:07,040 --> 00:44:08,320
去這個地址等。

913
00:44:08,320 --> 00:44:10,870
但是，我們只是這麼碰巧是
回到同一服務器。

914
00:44:10,870 --> 00:44:14,550
但據推測，我們現在住上
服務器沒有這個來回。

915
00:44:14,550 --> 00:44:18,600
因為現在我們正在使用的命名
版本的網站，而不是數字的。

916
00:44:18,600 --> 00:44:20,060
好問題。

917
00:44:20,060 --> 00:44:23,690
>> 好了，如果我們現在assume--我們
解決了負載均衡。

918
00:44:23,690 --> 00:44:25,894
我們現在有一個機制，
無論通過DNS的，

919
00:44:25,894 --> 00:44:29,060
無論是通過這個黑盒子是，無論是
它使用任何這些技術。

920
00:44:29,060 --> 00:44:33,810
我們可以採取用戶的請求並
找出哪個服務器，1，2，或3，

921
00:44:33,810 --> 00:44:35,420
送他或她。

922
00:44:35,420 --> 00:44:39,180
>> 什麼開始打破我們的網站？

923
00:44:39,180 --> 00:44:41,160
換句話說，我們有
建一個企業，

924
00:44:41,160 --> 00:44:43,480
以前一個單一的服務器上。

925
00:44:43,480 --> 00:44:46,870
現在，企業正在運行
在多台服務器。

926
00:44:46,870 --> 00:44:51,770
什麼樣的假設，
什麼樣的設計決策，

927
00:44:51,770 --> 00:44:54,870
現在可能打破？

928
00:44:54,870 --> 00:44:55,745
>> 這是不太明顯的。

929
00:44:55,745 --> 00:44:58,620
但是讓我們看看如果我們不能把我們的
手指上的一些我們已經問題

930
00:44:58,620 --> 00:44:59,780
為自己創建的。

931
00:44:59,780 --> 00:45:02,750
再次，它有點像持有
倒在軟管的洩漏。

932
00:45:02,750 --> 00:45:05,094
而現在一些新的問題
彈起在這裡。

933
00:45:05,094 --> 00:45:07,880

934
00:45:07,880 --> 00:45:11,380
>> 聽眾：[聽不清]

935
00:45:11,380 --> 00:45:16,574

936
00:45:16,574 --> 00:45:19,240
DAVID MALAN：OK，所以我們要
保持增長我們的硬盤空間。

937
00:45:19,240 --> 00:45:20,450
我現在正與確定。

938
00:45:20,450 --> 00:45:23,212
因為我覺得我可以
橫向規模。

939
00:45:23,212 --> 00:45:26,420
就像如果我所剩無幾，我就把
第四個服務器，也許第五服務器，

940
00:45:26,420 --> 00:45:30,820
然後提高我們的能力
由另外30％或50％，或諸如此類的東西。

941
00:45:30,820 --> 00:45:32,759
所以我確定這一說法，至少現在是這樣。

942
00:45:32,759 --> 00:45:33,634
聽眾：[聽不清]

943
00:45:33,634 --> 00:45:37,314

944
00:45:37,314 --> 00:45:38,980
DAVID MALAN：OK，所以這是一個很好的點。

945
00:45:38,980 --> 00:45:42,340
因此，假設服務器
是不相同的。

946
00:45:42,340 --> 00:45:45,260
和客戶服務
或電子郵件等同

947
00:45:45,260 --> 00:45:48,690
從用戶獲得一些信息
他說，這是不工作的權利。

948
00:45:48,690 --> 00:45:52,070
這是非常可能的，有時，
也許一個或多個服務器

949
00:45:52,070 --> 00:45:55,000
演戲是有點歪，但不
其他人，肯定可以

950
00:45:55,000 --> 00:45:57,096
使其難以追下去的問題。

951
00:45:57,096 --> 00:45:58,720
您可能需要看多個地方。

952
00:45:58,720 --> 00:46:00,960
>> 這就是表現
另一種錯誤的，

953
00:46:00,960 --> 00:46:03,950
這是你可能應該
設計了您的基礎架構，

954
00:46:03,950 --> 00:46:06,200
這一切都是真的一樣。

955
00:46:06,200 --> 00:46:10,390
但它確實揭示了新的問題
我們以前是沒有的。

956
00:46:10,390 --> 00:46:11,715
還有什麼？

957
00:46:11,715 --> 00:46:12,590
聽眾：[聽不清]

958
00:46:12,590 --> 00:46:16,390

959
00:46:16,390 --> 00:46:19,500
>> DAVID MALAN：是啊，
還有更多的複雜性。

960
00:46:19,500 --> 00:46:20,792
還有更實際的電線。

961
00:46:20,792 --> 00:46:21,750
還有另一種設備。

962
00:46:21,750 --> 00:46:26,310
事實上，我已經介紹了一個基本
概念，這裡的一個根本問題

963
00:46:26,310 --> 00:46:28,300
稱為單點
失敗的，對此，

964
00:46:28,300 --> 00:46:30,110
即使你從來沒有聽說過
這句話，你也許可以

965
00:46:30,110 --> 00:46:31,780
現在向後工作，並弄明白。

966
00:46:31,780 --> 00:46:35,560
是什麼意思，我有一個
故障點在我的建築？

967
00:46:35,560 --> 00:46:39,694
並通過建築的，我只是
意味著它的拓撲結構。

968
00:46:39,694 --> 00:46:40,610
>> 聽眾：[聽不清]

969
00:46:40,610 --> 00:46:42,901
>> DAVID MALAN：是的，如果有什麼
負載均衡器出現故障？

970
00:46:42,901 --> 00:46:46,290
我已經插入這個中間人的
生活目的是為了解決問題。

971
00:46:46,290 --> 00:46:47,740
但我引入了一個新的問題。

972
00:46:47,740 --> 00:46:49,350
一個新的洩漏已如雨後春筍般湧現的軟管。

973
00:46:49,350 --> 00:46:53,500
因為現在如果負載平衡器
死亡或休息或misfunctions，

974
00:46:53,500 --> 00:46:56,350
我現在無法訪問
我的三個服務器。

975
00:46:56,350 --> 00:46:58,880
而在這之前，我沒有
有這樣的中間人。

976
00:46:58,880 --> 00:47:03,020
所以這是一個新的問題，可以說是。

977
00:47:03,020 --> 00:47:05,245
我們會回來的
我們如何解決這個問題。

978
00:47:05,245 --> 00:47:06,734
>> 聽眾：[聽不清]

979
00:47:06,734 --> 00:47:08,400
DAVID MALAN：這將是一個方法。

980
00:47:08,400 --> 00:47:13,926
是啊，所以這將是相當
老鼠的洞，我們開始往下走。

981
00:47:13,926 --> 00:47:15,800
但是，讓我們回過頭來
在短短的時刻。

982
00:47:15,800 --> 00:47:17,299
我們已經創建了什麼其他的問題？

983
00:47:17,299 --> 00:47:25,540

984
00:47:25,540 --> 00:47:27,470
>> 因此，丹前面提到的數據庫。

985
00:47:27,470 --> 00:47:29,500
而且，即使你不
太熟悉技術上，

986
00:47:29,500 --> 00:47:33,220
數據庫只是一個服務器裡
變化的數據通常存儲，

987
00:47:33,220 --> 00:47:36,430
也許訂單有人放置，
您的用戶配置文件，您的姓名，

988
00:47:36,430 --> 00:47:40,810
您的電子郵件地址，事情可能
要輸入或隨時間而變化。

989
00:47:40,810 --> 00:47:44,599
>> 在此之前，我的數據庫是在
在同一台服務器作為我的Web服務器。

990
00:47:44,599 --> 00:47:46,390
因為我有一個
網絡託管帳戶。

991
00:47:46,390 --> 00:47:48,480
一切都沒有在同一個地方。

992
00:47:48,480 --> 00:47:54,200
我應該在哪裡把我​​的數據庫
現在，在服務器1，2或3？

993
00:47:54,200 --> 00:47:55,100
>> 聽眾：4。

994
00:47:55,100 --> 00:47:58,070
>> DAVID MALAN：4，OK，一切
好吧，讓我們去那裡。

995
00:47:58,070 --> 00:48:01,650
所以我打算把我的
數據庫 - 讓我們

996
00:48:01,650 --> 00:48:06,520
開始標註這些萬維網，萬維網，萬維網。

997
00:48:06,520 --> 00:48:08,780
而我要說，
這是第四。

998
00:48:08,780 --> 00:48:11,270
我會說的數據庫DB。

999
00:48:11,270 --> 00:48:12,870
好吧，我喜歡這個。

1000
00:48:12,870 --> 00:48:17,021
什麼線我應該
想必可以借鑒嗎？

1001
00:48:17,021 --> 00:48:18,850
>> 聽眾：[聽不清]

1002
00:48:18,850 --> 00:48:22,740
>> DAVID MALAN：是啊，所以代碼，
正如我們將要討論的明天，

1003
00:48:22,740 --> 00:48:24,900
想必是相同的
在所有三個服務器上。

1004
00:48:24,900 --> 00:48:28,374
但現在需要無法連接到
數據庫在本地但在其他地方運行。

1005
00:48:28,374 --> 00:48:29,040
這很好。

1006
00:48:29,040 --> 00:48:31,623
我們可以只給一個數據庫
命名，因為我們有，或一個數字。

1007
00:48:31,623 --> 00:48:33,930
而這一切工作正常。

1008
00:48:33,930 --> 00:48:35,820
但是，我們做了什麼？

1009
00:48:35,820 --> 00:48:40,640
我們已經通過水平縮放有
三個服務器，而不是一個，這

1010
00:48:40,640 --> 00:48:41,140
很好。

1011
00:48:41,140 --> 00:48:44,240
因為現在我們可以處理
三倍負載。

1012
00:48:44,240 --> 00:48:47,710
>> 更好的是，如果一個或兩個
這些服務器出現故障，

1013
00:48:47,710 --> 00:48:49,350
我的生意可以繼續操作。

1014
00:48:49,350 --> 00:48:53,960
因為我還有一個，即使我
沿著性能明智的那種舉步維艱。

1015
00:48:53,960 --> 00:49:01,020
但是，新的問題我有
通過移動數據庫介紹

1016
00:49:01,020 --> 00:49:04,350
這個單獨的服務器
而不是在1，2，和3'

1017
00:49:04,350 --> 00:49:05,412
>> 聽眾：[聽不清]

1018
00:49:05,412 --> 00:49:08,120
DAVID MALAN：是啊，所以現在我有
另一個單點故障。

1019
00:49:08,120 --> 00:49:12,330
如果我的數據庫死了，或者需要
升級，或什麼的，現在肯定的是，

1020
00:49:12,330 --> 00:49:13,610
我的網站在線。

1021
00:49:13,610 --> 00:49:16,270
我可以提供靜態，
不變的內容。

1022
00:49:16,270 --> 00:49:21,210
但我不能讓用戶登錄或改變
任何事或任何秩序，更糟糕的是。

1023
00:49:21,210 --> 00:49:24,120
因為如果4處於脫機狀態，
然後1，2，和3

1024
00:49:24,120 --> 00:49:27,710
真的無法定義它對話。

1025
00:49:27,710 --> 00:49:31,560
>> 行，所以，是的，所以這就是為什麼
我猶豫著要畫這個。

1026
00:49:31,560 --> 00:49:32,690
因此，讓我們回來了。

1027
00:49:32,690 --> 00:49:33,700
我不是說要繼續推動你。

1028
00:49:33,700 --> 00:49:36,030
但畫面非常
趕緊去弄壓力。

1029
00:49:36,030 --> 00:49:38,620
因為你需要開始
有兩個一切。

1030
00:49:38,620 --> 00:49:41,850
事實上，如果你見過
電影跟幾年前

1031
00:49:41,850 --> 00:49:45,310
與朱迪Foster--沒有？

1032
00:49:45,310 --> 00:49:47,410
>> OK，所以對於兩
我們誰見過聯繫，

1033
00:49:47,410 --> 00:49:50,800
有一個關係，有他們的地方
本質上買了兩個東西

1034
00:49:50,800 --> 00:49:53,250
而不是一個，儘管
以兩倍的價格。

1035
00:49:53,250 --> 00:49:55,922
因此，它是那種俏皮
在電影發表評論。

1036
00:49:55,922 --> 00:49:57,130
這是一種與此有關。

1037
00:49:57,130 --> 00:49:58,290
我們可以完全做到這一點。

1038
00:49:58,290 --> 00:50:00,123
你只不過是成本
我們兩倍的錢。

1039
00:50:00,123 --> 00:50:01,300
但是，我們會回來這一點。

1040
00:50:01,300 --> 00:50:02,400
>> 因此，我們已經解決了這個。

1041
00:50:02,400 --> 00:50:03,108
所以，你知道嗎？

1042
00:50:03,108 --> 00:50:04,450
這就像一個光滑的斜坡。

1043
00:50:04,450 --> 00:50:07,033
我不想處理有
有重複的數據庫。

1044
00:50:07,033 --> 00:50:08,037
這是錢太多。

1045
00:50:08,037 --> 00:50:08,620
你知道嗎？

1046
00:50:08,620 --> 00:50:12,880
我想有我的數據庫
就像在的一個版本

1047
00:50:12,880 --> 00:50:17,450
其中每個服務器都有
其自己的本地數據庫。

1048
00:50:17,450 --> 00:50:19,480
所以我只是要
吸取每一項分貝。

1049
00:50:19,480 --> 00:50:22,240
>> 所以，現在每個Web服務器
是迄今為止相同

1050
00:50:22,240 --> 00:50:25,650
因為它具有相同的代碼，在相同
靜態資產，同樣的圖片和文字

1051
00:50:25,650 --> 00:50:26,720
等等。

1052
00:50:26,720 --> 00:50:29,580
而且每個都有自己的數據庫。

1053
00:50:29,580 --> 00:50:31,450
我定的單點
故障問題。

1054
00:50:31,450 --> 00:50:32,570
現在我有一個數據庫。

1055
00:50:32,570 --> 00:50:36,210
不管其中兩個或其中的一個
死的東西，總是有一個了。

1056
00:50:36,210 --> 00:50:41,156
但是，新的問題有我創建
丹的解決方案避免？

1057
00:50:41,156 --> 00:50:42,470
>> 聽眾：[聽不清]

1058
00:50:42,470 --> 00:50:44,386
>> DAVID MALAN：是的，我
必須同步他們的，對不對？

1059
00:50:44,386 --> 00:50:47,860
因為無論我需要同步
誰去where--換句話說，

1060
00:50:47,860 --> 00:50:50,570
如果Alice訪問我的
現場，她恰巧

1061
00:50:50,570 --> 00:50:55,070
獲得隨機或圓形robined
也好，服務器排名第一，

1062
00:50:55,070 --> 00:50:58,770
此後我不得不總是
送她到服務器1。

1063
00:50:58,770 --> 00:50:59,420
為什麼？

1064
00:50:59,420 --> 00:51:01,540
因為如果我送她
到服務器2，這將

1065
00:51:01,540 --> 00:51:03,140
看起來像不存在有她。

1066
00:51:03,140 --> 00:51:04,450
>> 我不會讓她訂單歷史記錄。

1067
00:51:04,450 --> 00:51:06,300
我不會讓她的個人資料在那裡。

1068
00:51:06,300 --> 00:51:09,360
這感覺就像
它邀請的問題。

1069
00:51:09,360 --> 00:51:11,400
而當Bob訪問，我
要常送他

1070
00:51:11,400 --> 00:51:14,800
到相同的服務器，2，或取
之一，查理到第三之一，

1071
00:51:14,800 --> 00:51:15,797
和一致。

1072
00:51:15,797 --> 00:51:17,130
這不是沒有道理的，雖然。

1073
00:51:17,130 --> 00:51:19,270
這就是所謂的
分區數據庫。

1074
00:51:19,270 --> 00:51:21,270
而事實上，這是什麼
Facebook的做早期。

1075
00:51:21,270 --> 00:51:24,020
>> 如果按照歷史
臉譜，它開始在這裡的校園

1076
00:51:24,020 --> 00:51:25,770
作為www.thefacebook.com。

1077
00:51:25,770 --> 00:51:29,260
然後它演變一次馬克開始
蔓延到其他校園

1078
00:51:29,260 --> 00:51:34,450
要harvard.thefacebook.com和
mit.thefacebook.com，而且可能

1079
00:51:34,450 --> 00:51:37,027
bu.thefacebook.com，和類似物。

1080
00:51:37,027 --> 00:51:38,860
這是因為
在早期，我不認為

1081
00:51:38,860 --> 00:51:40,484
你可以有不同校園裡的朋友。

1082
00:51:40,484 --> 00:51:41,410
但是，這很好。

1083
00:51:41,410 --> 00:51:43,930
因為從哈佛人
得到發送到該服務器。

1084
00:51:43,930 --> 00:51:45,744
任何人BU被罰到這台服務器。

1085
00:51:45,744 --> 00:51:47,910
任何人從MIT被罰
這個server--在理論上。

1086
00:51:47,910 --> 00:51:50,540
我不太知道所有的
底層的實現細節。

1087
00:51:50,540 --> 00:51:55,610
但他大概劃分由人
他們的校園，在那裡他們的網絡了。

1088
00:51:55,610 --> 00:51:58,772
>> 所以這是很好的，直到點
你需要哈佛兩台服務器，

1089
00:51:58,772 --> 00:51:59,980
或哈佛的三個服務器。

1090
00:51:59,980 --> 00:52:01,800
然後這種簡單
那種分解。

1091
00:52:01,800 --> 00:52:03,174
但是，這是一個合理的方法。

1092
00:52:03,174 --> 00:52:04,950
讓我們總是發送愛麗絲
同一個地方，

1093
00:52:04,950 --> 00:52:06,366
總是發送鮑勃同一個地方。

1094
00:52:06,366 --> 00:52:09,680
但是，如果Alice的會發生什麼
服務器離線？

1095
00:52:09,680 --> 00:52:12,300
鮑勃和查理仍然可以買到
事情並登錄到該網站。

1096
00:52:12,300 --> 00:52:13,462
但是愛麗絲不能。

1097
00:52:13,462 --> 00:52:15,170
所以，你已經失去了三分之一
你的用戶群。

1098
00:52:15,170 --> 00:52:16,980
也許這是超過100％的好？

1099
00:52:16,980 --> 00:52:20,580
但也許它會如果我們能很好
還支持我們的用戶100％

1100
00:52:20,580 --> 00:52:23,470
即使當第三我們
服務器脫機。

1101
00:52:23,470 --> 00:52:24,760
>> 因此，我們可以同步呢？

1102
00:52:24,760 --> 00:52:29,250
不是用戶本身，但
在所有這些服務器數據庫。

1103
00:52:29,250 --> 00:52:33,350
所以，現在我們種需要一些
一種互連

1104
00:52:33,350 --> 00:52:37,880
在這裡，使服務器本身
可以sync--也不無道理。

1105
00:52:37,880 --> 00:52:40,090
而事實上，這種技術的存在。

1106
00:52:40,090 --> 00:52:45,550
在數據庫的世界裡，有
主從數據庫的概念，

1107
00:52:45,550 --> 00:52:48,240
或主次，
特點之一，其中

1108
00:52:48,240 --> 00:52:51,050
不僅存儲數據
與數據進行響應，

1109
00:52:51,050 --> 00:52:53,375
也只是不斷
相互同步。

1110
00:52:53,375 --> 00:52:56,480
所以，任何時候你寫或保存
事情到此數據庫，

1111
00:52:56,480 --> 00:53:00,040
它立刻被“複製”
到其他數據庫為好。

1112
00:53:00,040 --> 00:53:02,870
>> 而你從中讀取任何時候，
不要緊，你在哪裡。

1113
00:53:02,870 --> 00:53:05,170
因為如果在理論
他們都同步，你

1114
00:53:05,170 --> 00:53:07,710
將得到的數據相同的觀點。

1115
00:53:07,710 --> 00:53:10,800
因此，這聽起來很完美。

1116
00:53:10,800 --> 00:53:11,883
這裡一定是一個陷阱。

1117
00:53:11,883 --> 00:53:15,200

1118
00:53:15,200 --> 00:53:18,990
什麼可能抓​​呢？

1119
00:53:18,990 --> 00:53:21,790
>> 聽眾：[聽不清]

1120
00:53:21,790 --> 00:53:25,830
>> DAVID MALAN：是啊，如此三次
盡可能多的東西可以去錯了。

1121
00:53:25,830 --> 00:53:26,930
這是一個現實。

1122
00:53:26,930 --> 00:53:28,480
這可能全部是在精神上是相同的。

1123
00:53:28,480 --> 00:53:30,404
但需要有人來配置這些。

1124
00:53:30,404 --> 00:53:33,070
有一個更高的概率
有什麼地方會出錯。

1125
00:53:33,070 --> 00:53:38,130
只需用組合有
更多的東西容易出錯。

1126
00:53:38,130 --> 00:53:40,505
還有什麼是壞的可能？

1127
00:53:40,505 --> 00:53:41,380
聽眾：[聽不清]

1128
00:53:41,380 --> 00:53:44,100

1129
00:53:44,100 --> 00:53:46,180
>> DAVID MALAN：是啊，所以
同步可不好。

1130
00:53:46,180 --> 00:53:48,110
即使你可能知道
從備份和這樣的，

1131
00:53:48,110 --> 00:53:50,520
如果你只是一味做
備份，如果有什麼東西呢

1132
00:53:50,520 --> 00:53:51,560
去錯了一個數據庫？

1133
00:53:51,560 --> 00:53:53,018
你刪除的東西你不應該。

1134
00:53:53,018 --> 00:53:56,299
你立即複製
這個問題在其他地方。

1135
00:53:56,299 --> 00:53:58,840
所以維多利亞talking--備份
會在這裡是一件好事。

1136
00:53:58,840 --> 00:54:00,549
因此，我們會回來這一點。

1137
00:54:00,549 --> 00:54:03,090
並且要清楚，我們談論
不是在這裡備份本身。

1138
00:54:03,090 --> 00:54:08,240
我們談論的是真實的複製
或跨服務器同步。

1139
00:54:08,240 --> 00:54:09,110
他們都是活的。

1140
00:54:09,110 --> 00:54:12,074
他們不打算
用於備份。

1141
00:54:12,074 --> 00:54:13,294
>> 聽眾：[聽不清]

1142
00:54:13,294 --> 00:54:14,335
DAVID MALAN：那是什麼？

1143
00:54:14,335 --> 00:54:14,710
聽眾：Higher--

1144
00:54:14,710 --> 00:54:15,751
DAVID MALAN：成本較高。

1145
00:54:15,751 --> 00:54:20,180
我們已經為三倍的費用
肯定的是，雖然至少條款

1146
00:54:20,180 --> 00:54:21,100
的硬件。

1147
00:54:21,100 --> 00:54:23,200
因為數據庫
只是一個軟件。

1148
00:54:23,200 --> 00:54:25,189
和Web服務器是一個軟件。

1149
00:54:25,189 --> 00:54:27,980
這也可能是免費的，如果我們使用
任何數量的開源的東西。

1150
00:54:27,980 --> 00:54:30,480
但是，如果我們使用的是
像甲骨文，

1151
00:54:30,480 --> 00:54:36,574
我們每支付甲骨文更多的錢
許可證或Microsoft訪問。

1152
00:54:36,574 --> 00:54:38,240
我們有了一些其他的抓在這裡。

1153
00:54:38,240 --> 00:54:39,240
它不能被這個簡單的。

1154
00:54:39,240 --> 00:54:42,990

1155
00:54:42,990 --> 00:54:47,300
>> 因此，為了你的觀點，我認為這是
賈巴爾，地理學或先前已經沒有，

1156
00:54:47,300 --> 00:54:50,870
羅馬，是它，因為geography--假設
我們正在聰明這一點，

1157
00:54:50,870 --> 00:54:54,080
我們正在把我們的服務器之一，
並且在把我們的數據庫中，在美國，

1158
00:54:54,080 --> 00:54:56,910
和另一個在歐洲，另一個在
南美洲，還有一個非洲，

1159
00:54:56,910 --> 00:55:00,290
另外在亞洲，我們的任何地方
可能要在世界各地。

1160
00:55:00,290 --> 00:55:04,220
我們已經從我們的跟踪了解
路線點A和點

1161
00:55:04,220 --> 00:55:06,910
B，如果他們相隔較遠，
將採取更多的時間。

1162
00:55:06,910 --> 00:55:10,312
>> 如果你們中的一些已經使用
工具，如Facebook或Twitter

1163
00:55:10,312 --> 00:55:13,520
或任意站點的這些天，
是不斷變化的，因為用戶

1164
00:55:13,520 --> 00:55:16,880
創建的數據，有時如果你
打刷新或打開同一個頁面

1165
00:55:16,880 --> 00:55:20,270
在另一個瀏覽器，你看
不同的版本差不多。

1166
00:55:20,270 --> 00:55:22,875
您可能會看到一個人的地位
更新在這裡而不是在這裡，

1167
00:55:22,875 --> 00:55:25,500
然後重裝，然後將其
出現了，你再重裝，

1168
00:55:25,500 --> 00:55:26,640
和消失。

1169
00:55:26,640 --> 00:55:29,076
換句話說，保持一個
留意這一點，至少

1170
00:55:29,076 --> 00:55:30,950
如果你正在使用社交
網絡更是如此。

1171
00:55:30,950 --> 00:55:33,320
>> 再次，只是因為
數據變化如此之快，

1172
00:55:33,320 --> 00:55:35,710
有時服務器做不同步。

1173
00:55:35,710 --> 00:55:37,230
也許這是一個超級小窗口。

1174
00:55:37,230 --> 00:55:39,970
但200毫秒，也許
甚至超過that--它

1175
00:55:39,970 --> 00:55:43,415
要採取一些非零量
時間對這些數據庫進行同步。

1176
00:55:43,415 --> 00:55:45,290
而且我們不只是
談論一個請求。

1177
00:55:45,290 --> 00:55:48,540
如果一家公司擁有上千
用戶同時使用它，

1178
00:55:48,540 --> 00:55:49,460
他們可能會緩衝。

1179
00:55:49,460 --> 00:55:52,240
換句話說，有可能
是隊列或等待線

1180
00:55:52,240 --> 00:55:54,950
之前所有的數據庫
查詢可以得到同步。

1181
00:55:54,950 --> 00:55:56,610
因此，也許它實際上是一個幾秒鐘。

1182
00:55:56,610 --> 00:55:59,820
>> 這確實是真的我想即使
這一天與Facebook，藉此

1183
00:55:59,820 --> 00:56:02,010
當他們從同步
東海岸到西海岸，

1184
00:56:02,010 --> 00:56:06,026
它具有一個非平凡
傳播延遲，可以這麼說，

1185
00:56:06,026 --> 00:56:07,650
您剛才那種不得不忍受。

1186
00:56:07,650 --> 00:56:11,210
所以它不是這麼多
作為一個bug是一個現實

1187
00:56:11,210 --> 00:56:14,230
您的用戶可能看不到
至少在正確的數據

1188
00:56:14,230 --> 00:56:14,970
幾秒鐘。

1189
00:56:14,970 --> 00:56:17,410
>> 我看到這在Twitter上有很多
其實在這裡有時我會

1190
00:56:17,410 --> 00:56:21,227
推特在一個窗口中打開另一個
然後看看它的確確認它

1191
00:56:21,227 --> 00:56:22,560
上升，它的還沒有。

1192
00:56:22,560 --> 00:56:25,340
我不得不那種重裝，
重裝，reload--哦，它就在那裡。

1193
00:56:25,340 --> 00:56:27,150
而這並不是因為它沒有保存。

1194
00:56:27,150 --> 00:56:29,850
它只是沒有傳播
到其他服務器。

1195
00:56:29,850 --> 00:56:33,120
>> 所以，這種權衡，太...你真的
想自己暴露在風險

1196
00:56:33,120 --> 00:56:37,254
如果用戶轉到他們的訂單
歷史上，它實際上不是到了嗎？

1197
00:56:37,254 --> 00:56:38,420
我看到這對某些銀行。

1198
00:56:38,420 --> 00:56:42,100
它總是在苦惱我，好為一體，
你只能去喜歡6個月回

1199
00:56:42,100 --> 00:56:45,160
在一些銀行的銀行對賬單，
儘管在理論上他們應該

1200
00:56:45,160 --> 00:56:46,576
可以在網上擁有的一切。

1201
00:56:46,576 --> 00:56:48,630
他們只是拿東西有時下線。

1202
00:56:48,630 --> 00:56:51,430
有時候，太...什麼網站呢？

1203
00:56:51,430 --> 00:56:53,570
有one--哦，這是GoDaddy的，我想。

1204
00:56:53,570 --> 00:56:56,620
GoDaddy的，當你看看
購買域名或什麼的，

1205
00:56:56,620 --> 00:56:58,630
他們會經常給你
鏈接到您的收據。

1206
00:56:58,630 --> 00:57:01,470
如果你點擊該鏈接右邊
走，它往往不起作用。

1207
00:57:01,470 --> 00:57:03,290
它只是說，窮途末路，沒有在這裡。

1208
00:57:03,290 --> 00:57:05,450
>> 而這也是因為
這些傳播延遲。

1209
00:57:05,450 --> 00:57:08,290
因為無論出於何種原因，它們
正在服用的時間一點點

1210
00:57:08,290 --> 00:57:09,670
實際產生。

1211
00:57:09,670 --> 00:57:12,070
因此，這是有點像你想
拉你的頭髮，在某些時候。

1212
00:57:12,070 --> 00:57:14,486
因為所有你想
做的是解決一個簡單的問題。

1213
00:57:14,486 --> 00:57:16,590
我們不斷創造新的
問題佔為己有。

1214
00:57:16,590 --> 00:57:18,770
讓我們看看，如果我們
可以種撤消。

1215
00:57:18,770 --> 00:57:22,730
>> 事實證明，結合
在所有Web服務器的數據庫

1216
00:57:22,730 --> 00:57:25,090
是不是真的最好的做法。

1217
00:57:25,090 --> 00:57:27,950
一般情況下，是什麼工程師
會做，或者系統架構師，

1218
00:57:27,950 --> 00:57:30,340
將具有不同的
服務器層。

1219
00:57:30,340 --> 00:57:33,160
而剛剛空間的緣故，我會
吸引他們的數據庫在這裡。

1220
00:57:33,160 --> 00:57:38,060
>> 我們可能有數據庫和
服務器排名第四的位置

1221
00:57:38,060 --> 00:57:42,430
這確實有聯繫
這裡每一個這些服務器。

1222
00:57:42,430 --> 00:57:45,400
因此，這可能是我們前面
最後一層，人們會說。

1223
00:57:45,400 --> 00:57:47,770
而這將是我們的後端層。

1224
00:57:47,770 --> 00:57:50,580
而這只是意味著
這些面對用戶。

1225
00:57:50,580 --> 00:57:53,010
和數據庫不面對用戶。

1226
00:57:53,010 --> 00:57:55,480
沒有用戶可以直接
訪問數據庫。

1227
00:57:55,480 --> 00:57:59,280
>> 現在讓我們說不定下去
路線維多利亞建議。

1228
00:57:59,280 --> 00:58:00,940
這是單個故障點。

1229
00:58:00,940 --> 00:58:02,290
這讓我不舒服。

1230
00:58:02,290 --> 00:58:05,790
那麼，什麼是可能的
最明顯的解決方案？

1231
00:58:05,790 --> 00:58:06,665
聽眾：[聽不清]

1232
00:58:06,665 --> 00:58:09,979

1233
00:58:09,979 --> 00:58:11,437
DAVID MALAN：對不起，再說一遍。

1234
00:58:11,437 --> 00:58:12,352
聽眾：[聽不清]

1235
00:58:12,352 --> 00:58:13,810
DAVID MALAN：非生產服務器。

1236
00:58:13,810 --> 00:58:15,364
你什麼意思？

1237
00:58:15,364 --> 00:58:17,120
>> 聽眾：[聽不清]

1238
00:58:17,120 --> 00:58:19,120
>> DAVID MALAN：哦，好的，那麼備份。

1239
00:58:19,120 --> 00:58:21,110
好了，我們可以做到這一點，當然可以。

1240
00:58:21,110 --> 00:58:23,790
而其實這是很常見的做。

1241
00:58:23,790 --> 00:58:26,470
這可能是數據庫排名第五。

1242
00:58:26,470 --> 00:58:28,510
但是，這只是
連接到四個號碼。

1243
00:58:28,510 --> 00:58:31,110
你可以稱之為一個熱備用。

1244
00:58:31,110 --> 00:58:35,080
這兩個數據庫可被配置
只是不斷地同步

1245
00:58:35,080 --> 00:58:35,850
彼此。

1246
00:58:35,850 --> 00:58:39,010
所以，如果這台機器模具，為
無論愚蠢reason--硬盤

1247
00:58:39,010 --> 00:58:42,100
死了，有人絆倒了
線，有些軟件是有缺陷

1248
00:58:42,100 --> 00:58:46,560
和機器掛起或crashes--
你可以有一個人從字面上

1249
00:58:46,560 --> 00:58:51,090
拔掉這一個從牆上
而是堵塞這個1英寸

1250
00:58:51,090 --> 00:58:56,340
然後內，比方說，一個
幾分鐘，說不定半小時，

1251
00:58:56,340 --> 00:58:57,210
你重新聯機。

1252
00:58:57,210 --> 00:58:59,259
>> 這不是很大，但
它也並不可怕。

1253
00:58:59,259 --> 00:59:01,800
而且你不必擔心
任何同步問題。

1254
00:59:01,800 --> 00:59:03,080
因為一切都已經存在。

1255
00:59:03,080 --> 00:59:05,000
因為你有一個完美的
備份準備就緒。

1256
00:59:05,000 --> 00:59:07,100
>> 你可能會有點
票友這一點，

1257
00:59:07,100 --> 00:59:12,990
有些人經常做，你在哪裡
可能包括數據庫排名第四的位置，

1258
00:59:12,990 --> 00:59:17,480
數據庫排名第五的位置，
正在互相交談。

1259
00:59:17,480 --> 00:59:24,120
但你也有這樣的
那種arrangement--

1260
00:59:24,120 --> 00:59:27,440
它故意
看起來凌亂，因為它

1261
00:59:27,440 --> 00:59:30,220
is--，所有的
前端服務器可以

1262
00:59:30,220 --> 00:59:32,870
跟所有的後端服務器。

1263
00:59:32,870 --> 00:59:38,130
因此，如果此數據庫不
應對這些前端服務器有

1264
00:59:38,130 --> 00:59:40,212
有編程
代碼他們說，

1265
00:59:40,212 --> 00:59:42,170
如果你沒有得到
連接到該數據庫，

1266
00:59:42,170 --> 00:59:45,830
主立即啟動
交談二次。

1267
00:59:45,830 --> 00:59:48,310
>> 但是，這現在推
複雜的代碼。

1268
00:59:48,310 --> 00:59:52,070
現在你的開發人員，你的軟件
開發人員，必須了解這一點。

1269
00:59:52,070 --> 00:59:56,454
而你有種追平代碼
你寫你的實際後端

1270
00:59:56,454 --> 00:59:58,370
實施細則，
這使得它更難，

1271
00:59:58,370 --> 01:00:00,670
尤其是在一個更大的
公司或更大的網站，

1272
01:00:00,670 --> 01:00:05,020
在這裡，你不一定
希望程序員有

1273
01:00:05,020 --> 01:00:10,890
知道如何數據庫
工程師們做他們的工作。

1274
01:00:10,890 --> 01:00:13,810
你可能想保留這些角色
排序功能不同等等

1275
01:00:13,810 --> 01:00:16,810
那有這層
兩者之間的抽象。

1276
01:00:16,810 --> 01:00:17,940
>> 那麼我們如何解決這個問題？

1277
01:00:17,940 --> 01:00:20,290
好了，我們種解決
這個問題之前曾經。

1278
01:00:20,290 --> 01:00:25,680
我們為什麼不把一
在這兒，這些東西

1279
01:00:25,680 --> 01:00:30,947
它反過來會談四個號碼，
五，所有的前端Web服務器

1280
01:00:30,947 --> 01:00:33,780
跟這個中間人，和
中間人又將路線他們的數據？

1281
01:00:33,780 --> 01:00:38,494
事實上，可能是什麼一個
好名字為這件事？

1282
01:00:38,494 --> 01:00:39,704
>> 聽眾：[聽不清]

1283
01:00:39,704 --> 01:00:41,120
DAVID MALAN：OK，數據庫管理器。

1284
01:00:41,120 --> 01:00:48,030
但是，可能一個術語是
我們可以重複使用這個設備？

1285
01:00:48,030 --> 01:00:49,760
我們平衡。

1286
01:00:49,760 --> 01:00:52,480
是啊，所以實際上，我
不公平在這裡。

1287
01:00:52,480 --> 01:00:56,760
這樣一個負載平衡器將意味著
我們來回切換的煩惱在這裡，

1288
01:00:56,760 --> 01:00:58,836
這實際上不需要是這種情況。

1289
01:00:58,836 --> 01:01:00,460
因此，有幾個方法，我們可以做到這一點。

1290
01:01:00,460 --> 01:01:03,920
>> 如果這是在實際上負載平衡器，該
故事是完全和以前一樣。

1291
01:01:03,920 --> 01:01:05,230
一些請求轉至4。

1292
01:01:05,230 --> 01:01:06,150
他們中有些人去5。

1293
01:01:06,150 --> 01:01:06,710
這是很好的。

1294
01:01:06,710 --> 01:01:08,835
因為現在我們可以處理
兩倍的吞吐量。

1295
01:01:08,835 --> 01:01:11,120
但是這種連接
這裡是超級重要的。

1296
01:01:11,120 --> 01:01:14,050
他們必須保持不斷
同步和希望

1297
01:01:14,050 --> 01:01:17,670
不是地理上相隔太遠等等
該同步是基本上

1298
01:01:17,670 --> 01:01:18,520
瞬間。

1299
01:01:18,520 --> 01:01:20,410
否則，我們可能有問題。

1300
01:01:20,410 --> 01:01:21,330
>> 所以這是不壞。

1301
01:01:21,330 --> 01:01:25,132
但同樣，我們已經
引入了一個新的問題。

1302
01:01:25,132 --> 01:01:26,590
什麼問題都我只是重現？

1303
01:01:26,590 --> 01:01:30,000

1304
01:01:30,000 --> 01:01:31,020
單點故障。

1305
01:01:31,020 --> 01:01:32,390
那麼，有什麼解決方案呢？

1306
01:01:32,390 --> 01:01:39,270
因此，作為維多利亞的愛花錢，
我們可以把這個傢伙出來，做到這一點。

1307
01:01:39,270 --> 01:01:41,731
而我只是要
移動這裡足夠的空間。

1308
01:01:41,731 --> 01:01:43,230
而且這將是一個有點亂。

1309
01:01:43,230 --> 01:01:44,563
我會繼續畫線。

1310
01:01:44,563 --> 01:01:47,080
假設所有的
這些線路進入這兩個？

1311
01:01:47,080 --> 01:01:52,670
>> 這裡一個很常見的技術將是
使用一種叫做心跳技術

1312
01:01:52,670 --> 01:01:57,390
由此每個這些設備，
左和右負載平衡器，

1313
01:01:57,390 --> 01:02:00,740
或任何我們想給他們打電話，
在不斷地說，我還活著，

1314
01:02:00,740 --> 01:02:03,220
我還活著，我還活著，我還活著。

1315
01:02:03,220 --> 01:02:05,910
其中之一由默認
作為主。

1316
01:02:05,910 --> 01:02:09,620
因此，所有的流量是通過路由
在一個在左邊，例如

1317
01:02:09,620 --> 01:02:11,260
默認情況下，隨意。

1318
01:02:11,260 --> 01:02:16,890
>> 但只要在右邊的傢伙
不從左側的人聽到了，

1319
01:02:16,890 --> 01:02:20,440
右邊的一個被編程
以自動，例如，

1320
01:02:20,440 --> 01:02:24,110
接管IP地址
在一個在左邊的，

1321
01:02:24,110 --> 01:02:28,240
因此成為主，並
也許發送電子郵件或短信

1322
01:02:28,240 --> 01:02:31,570
對人類說，哎，
左主要處於脫機狀態。

1323
01:02:31,570 --> 01:02:33,310
我會為現在成為首要。

1324
01:02:33,310 --> 01:02:35,760
因此，副總統成為
會長，可以這麼說。

1325
01:02:35,760 --> 01:02:38,180
而有人去拯救
總統，如果你想。

1326
01:02:38,180 --> 01:02:41,090
因為現在我們有一個暫時的
單點故障。

1327
01:02:41,090 --> 01:02:45,020
>> 因此，作為複雜或壓力作為
這似乎開始之中，

1328
01:02:45,020 --> 01:02:46,990
你這是怎麼解決這些問題。

1329
01:02:46,990 --> 01:02:48,190
你做它投錢。

1330
01:02:48,190 --> 01:02:49,370
你把一切硬件。

1331
01:02:49,370 --> 01:02:52,170
但不幸的是你
它增加了複雜性。

1332
01:02:52,170 --> 01:02:56,450
但結果，最終是
有一個更，理論上

1333
01:02:56,450 --> 01:02:57,670
健壯的架構。

1334
01:02:57,670 --> 01:02:58,850
這還不夠完善。

1335
01:02:58,850 --> 01:03:02,470
因為即使我們have--我們可能
沒有單一故障點。

1336
01:03:02,470 --> 01:03:05,240
我們現在有失敗的雙重積分。

1337
01:03:05,240 --> 01:03:07,630
但是，如果有兩個不如意的事情，
這絕對可以，

1338
01:03:07,630 --> 01:03:09,030
我們仍然將是脫機。

1339
01:03:09,030 --> 01:03:11,660
>> 並因此在非常普遍的
業是描述

1340
01:03:11,660 --> 01:03:14,000
你的時間在九方面。

1341
01:03:14,000 --> 01:03:18,610
和排序的目標
立志要為99.999％

1342
01:03:18,610 --> 01:03:21,580
時間您的網站是在線。

1343
01:03:21,580 --> 01:03:24,170
甚至更好，加
幾個花枝招展了這一點。

1344
01:03:24,170 --> 01:03:28,159
不幸的是，這些
九是非常昂貴的。

1345
01:03:28,159 --> 01:03:29,450
讓我們真正做到了這一點。

1346
01:03:29,450 --> 01:03:35,510
所以，如果我再次打開了我的大計算器，
365天一年，一天24小時，

1347
01:03:35,510 --> 01:03:44,780
在一小時60分鐘，並
60秒在一分鐘內，

1348
01:03:44,780 --> 01:03:48,690
這就是多少秒有
在一年內，如果我正確地這樣做。

1349
01:03:48,690 --> 01:03:55,740
因此，如果我們這個時代所.99999，這是
我們有多少時間要嚮往。

1350
01:03:55,740 --> 01:04:00,600
因此，這意味著我們應該起來
在這一年這麼多秒。

1351
01:04:00,600 --> 01:04:03,920
所以，如果我現在減去
原始值，或相當

1352
01:04:03,920 --> 01:04:07,480
從這一新值
序曲一316秒，

1353
01:04:07,480 --> 01:04:09,640
這當然是五分鐘。

1354
01:04:09,640 --> 01:04:13,770
>> 所以，如果您的網站或公司
自稱“五個九”，即你

1355
01:04:13,770 --> 01:04:17,050
向上的99.99％的時間，
這意味著你更好

1356
01:04:17,050 --> 01:04:23,470
已經足夠聰明和快速
足夠和足夠的資源平齊

1357
01:04:23,470 --> 01:04:27,890
你的服務器是唯一的下線
5分鐘內未能一年。

1358
01:04:27,890 --> 01:04:29,980
這是一個昂貴的，
辛苦的事情嚮往。

1359
01:04:29,980 --> 01:04:31,430
>> 所以這是一個權衡了。

1360
01:04:31,430 --> 01:04:35,866
時間99.999％，是相當
織補硬和昂貴的。

1361
01:04:35,866 --> 01:04:38,740
五minutes--可以勉強得到
到服務器的物理上取代

1362
01:04:38,740 --> 01:04:40,040
東西是出了問題。

1363
01:04:40,040 --> 01:04:42,810
這就是為什麼我們開始佈線
東西放在一起比較複雜

1364
01:04:42,810 --> 01:04:48,240
先驗使得計算機
可以排序的自我修復。

1365
01:04:48,240 --> 01:04:49,446
是啊。

1366
01:04:49,446 --> 01:04:52,344
>> 聽眾：[聽不清]

1367
01:04:52,344 --> 01:05:02,014

1368
01:05:02,014 --> 01:05:04,430
DAVID MALAN：這個問題可能
在任何數量的位置。

1369
01:05:04,430 --> 01:05:05,090
而在fact--

1370
01:05:05,090 --> 01:05:07,101
>> 聽眾：[聽不清]

1371
01:05:07,101 --> 01:05:08,600
DAVID MALAN：絕對，絕對。

1372
01:05:08,600 --> 01:05:10,720
並作為畫面
越來越複雜，

1373
01:05:10,720 --> 01:05:12,110
它可以是Web服務器。

1374
01:05:12,110 --> 01:05:14,690
它可以是將電源的建築物。

1375
01:05:14,690 --> 01:05:17,900
它可以是物理的東西，像
電纜得到了磨損或踢出。

1376
01:05:17,900 --> 01:05:19,879
它可以是數據庫中
沒有響應。

1377
01:05:19,879 --> 01:05:22,920
它可以被他們更新了自己的工作
系統和東西掛。

1378
01:05:22,920 --> 01:05:24,634
因此，有許多其他運動部件。

1379
01:05:24,634 --> 01:05:27,050
所以很多工程
該已去這背後

1380
01:05:27,050 --> 01:05:30,431
其實只是權衡，怎麼樣
多少時間，多少錢是實際

1381
01:05:30,431 --> 01:05:32,930
值得一，什麼是威脅
你真的很擔心？

1382
01:05:32,930 --> 01:05:35,471
例如，在
課程我在哈佛任教，

1383
01:05:35,471 --> 01:05:38,470
我們使用了很多雲計算，這
我們會在現在就開始考慮看看，

1384
01:05:38,470 --> 01:05:41,107
事實上，在這裡，我們使用
亞馬遜網絡服務。

1385
01:05:41,107 --> 01:05:42,940
僅僅因為這是
一個大家開始。

1386
01:05:42,940 --> 01:05:45,856
但是，有越來越這些天
從谷歌和微軟等。

1387
01:05:45,856 --> 01:05:50,030
我們有意識地選擇把所有
我們的課程'的虛擬機，

1388
01:05:50,030 --> 01:05:55,400
因為他們是所謂，在我認為
這是西弗吉尼亞數據中心。

1389
01:05:55,400 --> 01:05:57,560
我們的大部分學生
碰巧是來自美國，

1390
01:05:57,560 --> 01:05:59,820
雖然肯定有
一些國際。

1391
01:05:59,820 --> 01:06:02,630
>> 但現實是，它只是
簡單，這對我們來說更便宜

1392
01:06:02,630 --> 01:06:05,540
把我們所有的雞蛋
在弗吉尼亞州的籃子裡，

1393
01:06:05,540 --> 01:06:08,050
儘管我知道如果事情
在弗吉尼亞州順心，

1394
01:06:08,050 --> 01:06:12,760
作為偶爾happened--像
如果有一個颶風或某些天氣

1395
01:06:12,760 --> 01:06:15,890
事件一樣，如果有一些
電網問題或like--所有

1396
01:06:15,890 --> 01:06:20,240
我們的課程“數據可能下線
對於一些數目的分鐘或小時

1397
01:06:20,240 --> 01:06:21,600
甚至更長。

1398
01:06:21,600 --> 01:06:24,020
>> 但複雜的量
這將是需要的，

1399
01:06:24,020 --> 01:06:26,895
與貨幣量那會
需要，操作一切

1400
01:06:26,895 --> 01:06:31,420
在歐洲或在美國加州並行
只是沒有那麼多的意義。

1401
01:06:31,420 --> 01:06:35,080
所以這是一個合理的貿易
關閉，但一個痛苦

1402
01:06:35,080 --> 01:06:37,740
當你真正是
具有停機。

1403
01:06:37,740 --> 01:06:41,830
>> 好了，現在讓過渡
一些基於雲的解決方案

1404
01:06:41,830 --> 01:06:43,320
對其中的一些問題。

1405
01:06:43,320 --> 01:06:45,040
一切我們已經
討論迄今

1406
01:06:45,040 --> 01:06:47,527
是一種有問題
一直和我們在一起一段時間，

1407
01:06:47,527 --> 01:06:49,610
你是否有自己的
在你的公司的服務器，

1408
01:06:49,610 --> 01:06:52,740
無論你去到一個共同的位置
像放置在數據中心和共享

1409
01:06:52,740 --> 01:06:55,110
與別人的空間，
時下還是在雲中。

1410
01:06:55,110 --> 01:06:57,040
>> 什麼是關於好的
雲的是，所有

1411
01:06:57,040 --> 01:06:59,540
這些東西我
作為繪製物理對象

1412
01:06:59,540 --> 01:07:02,400
現在可以被認為是
那種虛擬物體

1413
01:07:02,400 --> 01:07:04,659
在屬於雲
模擬軟件。

1414
01:07:04,659 --> 01:07:07,700
換句話說，今天的計算機，
今天的服務器，如戴爾圖片

1415
01:07:07,700 --> 01:07:11,720
我之前展示，是如此之快，有
這麼多的RAM，如此多的CPU，這麼多的磁盤

1416
01:07:11,720 --> 01:07:16,140
空間，是人都寫
軟件幾乎分區

1417
01:07:16,140 --> 01:07:21,130
一台服務器成它的錯覺
是兩台服務器或200台服務器，所以

1418
01:07:21,130 --> 01:07:24,150
我們每個客戶
具有的錯覺

1419
01:07:24,150 --> 01:07:29,110
不僅僅是一些網站上的帳戶
主機，但我們自己的機器，我們是

1420
01:07:29,110 --> 01:07:30,490
從別人那裡租。

1421
01:07:30,490 --> 01:07:34,140
>> 但它是一個虛擬機
只要一台Dell服務器上，

1422
01:07:34,140 --> 01:07:39,160
再次可能會被劃分成
兩個或200或多個虛擬機，

1423
01:07:39,160 --> 01:07:43,770
所有這一切給別人管理
訪問，但在某種程度上，其中我們誰也沒

1424
01:07:43,770 --> 01:07:48,040
知道或可以訪問其他的虛擬
在相同的硬件的機器。

1425
01:07:48,040 --> 01:07:53,430
因此，要畫一幅畫在今天的幻燈片，
我有這個在這裡拍攝從網站

1426
01:07:53,430 --> 01:07:54,160
所謂的碼頭工人。

1427
01:07:54,160 --> 01:07:56,970
>> 因此，這是多一點
細節比我們實際需要的。

1428
01:07:56,970 --> 01:07:59,830
但是，如果你認為這是
您infrastructure--

1429
01:07:59,830 --> 01:08:02,910
所以只是硬件你自己的，
您的服務器，機架，數據

1430
01:08:02,910 --> 01:08:06,480
中心，以及所有that--，你會
通常運行一個主機操作系統。

1431
01:08:06,480 --> 01:08:08,275
因此，一些like--它可能是Windows操作系統。

1432
01:08:08,275 --> 01:08:09,430
它不會是的Mac OS。

1433
01:08:09,430 --> 01:08:11,430
因為這是不是真的
企業的這些日子。

1434
01:08:11,430 --> 01:08:15,670
因此，這將是Linux或Solaris
或Unix或者BSD或FreeBSD

1435
01:08:15,670 --> 01:08:19,779
或任何數目的其他操作系統的
是免費或商業的。

1436
01:08:19,779 --> 01:08:22,120
>> 然後你運行
節目，特別節目，

1437
01:08:22,120 --> 01:08:26,479
一個名為hypervisor，或
虛擬機監視器，VMM。

1438
01:08:26,479 --> 01:08:31,649
而這些產品，如果你是
熟悉的，像VMware或VirtualBox的

1439
01:08:31,649 --> 01:08:34,080
或虛擬PC或其他人。

1440
01:08:34,080 --> 01:08:38,430
以及這些方案做的是完全
該功能我前面描述。

1441
01:08:38,430 --> 01:08:41,779
它創造的幻覺
一個物理機

1442
01:08:41,779 --> 01:08:44,550
可以是多個虛擬機。

1443
01:08:44,550 --> 01:08:48,260
>> 所以，這些五顏六色的盒子向上頂是
畫以下的圖片。

1444
01:08:48,260 --> 01:08:50,260
這個管理程序，這
的軟件，把它

1445
01:08:50,260 --> 01:08:54,090
VMware的，在運行一些其他的
操作系統，調用它的Linux，

1446
01:08:54,090 --> 01:08:56,910
正在創建假象
這種物理計算機實際上是

1447
01:08:56,910 --> 01:09:00,149
一個，兩個，三個虛擬計算機。

1448
01:09:00,149 --> 01:09:04,270
所以，現在我已經買了，作為主人
此硬件，一台物理計算機。

1449
01:09:04,270 --> 01:09:06,200
現在我租
這三個客戶。

1450
01:09:06,200 --> 01:09:09,731
>> 而這三個客戶都認為
它們有一個專門的虛擬機。

1451
01:09:09,731 --> 01:09:10,939
而且它不是偷梁換柱。

1452
01:09:10,939 --> 01:09:13,750
它更多的披露
您使用的是虛擬機。

1453
01:09:13,750 --> 01:09:17,589
但技術上，我們都
擁有完全的管理控制

1454
01:09:17,589 --> 01:09:19,880
在每個那些客人
操作系統，這可能

1455
01:09:19,880 --> 01:09:21,370
是任何數目的操作系統。

1456
01:09:21,370 --> 01:09:23,029
>> 我可以安裝任何我想要的。

1457
01:09:23,029 --> 01:09:24,640
因為我想我可以升級它。

1458
01:09:24,640 --> 01:09:27,470
我甚至不有知道或
關心的其他操作系統

1459
01:09:27,470 --> 01:09:29,678
該計算機上的系統，
其他虛擬機，

1460
01:09:29,678 --> 01:09:35,290
除非這一切灰色的主人
東西正在一點點貪婪

1461
01:09:35,290 --> 01:09:37,540
並且過頭他或她的資源。

1462
01:09:37,540 --> 01:09:40,800
>> 因此，如果你拍攝一張
物理機和賣它

1463
01:09:40,800 --> 01:09:44,399
不200，但400
客戶，在某些時候

1464
01:09:44,399 --> 01:09:47,270
我們要跳閘進入這些
相同的性能問題之前。

1465
01:09:47,270 --> 01:09:50,460
因為你只有有限的
磁盤和RAM等的量。

1466
01:09:50,460 --> 01:09:53,450
和一個虛擬機
僅僅是一個程序，它是

1467
01:09:53,450 --> 01:09:56,140
假裝是一個
羽翼豐滿的計算機。

1468
01:09:56,140 --> 01:09:58,040
所以，你得到你所支付在這裡。

1469
01:09:58,040 --> 01:10:02,150
>> 所以你會在網上找到你可能會付出
有信譽的公司每月也許$ 100

1470
01:10:02,150 --> 01:10:05,660
為你自己的虛擬機，或者
你自己的虛擬專用服務器，

1471
01:10:05,660 --> 01:10:07,090
這是它的另一種說法。

1472
01:10:07,090 --> 01:10:10,400
或者，你可能會發現一些飛
晚上，你每月支付$ 5.99

1473
01:10:10,400 --> 01:10:12,080
為自己的虛擬機。

1474
01:10:12,080 --> 01:10:15,614
但可能你沒有近
為您提供盡可能多的性能，

1475
01:10:15,614 --> 01:10:18,530
因為他們已經超賣它
因此，比你的高

1476
01:10:18,530 --> 01:10:22,340
服務層或更好的供應商。

1477
01:10:22,340 --> 01:10:24,590
>> 那麼，這實際上意味著我們呢？

1478
01:10:24,590 --> 01:10:26,110
因此，讓我去這個。

1479
01:10:26,110 --> 01:10:29,580
我打算去aws.amazon.com。

1480
01:10:29,580 --> 01:10:31,590
正因為他們有
選項一個漂亮的菜單。

1481
01:10:31,590 --> 01:10:34,700
但是，這些相同的經驗教訓應用到
一大堆其他雲供應商。

1482
01:10:34,700 --> 01:10:38,201
不幸的是，往往更
營銷比什麼都講。

1483
01:10:38,201 --> 01:10:39,200
而這種不斷變化。

1484
01:10:39,200 --> 01:10:41,820
所以，你去一個這樣的網站。

1485
01:10:41,820 --> 01:10:44,560
這確實不
告訴你任何東西。

1486
01:10:44,560 --> 01:10:47,780
>> 就連我，我看看這個，不
真的知道任何這些東西

1487
01:10:47,780 --> 01:10:49,334
不一定做，直到我在潛水。

1488
01:10:49,334 --> 01:10:50,875
但是，讓我們開始在左邊，計算。

1489
01:10:50,875 --> 01:10:52,980
而我要去點擊這裡。

1490
01:10:52,980 --> 01:10:56,960
而現在亞馬遜有一個坦然
絕大多數服務

1491
01:10:56,960 --> 01:10:57,960
這些天。

1492
01:10:57,960 --> 01:11:01,040
但亞馬遜EC2可能是最簡單的。

1493
01:11:01,040 --> 01:11:05,840
>> 在Amazon EC2會為我們創造準確
圖片我們看到剛才。

1494
01:11:05,840 --> 01:11:10,240
這是他們如何賺了很多
其在雲中的錢。

1495
01:11:10,240 --> 01:11:12,910
顯然，Netflix和其他
在與他們的雲。

1496
01:11:12,910 --> 01:11:16,260
這是典型的全部
蓬鬆的營銷說話。

1497
01:11:16,260 --> 01:11:19,720
所以我想要做的就是去Pricing--
或者說讓我們去實例

1498
01:11:19,720 --> 01:11:23,790
最初只是畫的這個圖片。

1499
01:11:23,790 --> 01:11:25,800
>> 因此，這會因供應商不同而不同。

1500
01:11:25,800 --> 01:11:29,590
而且我們也不需要太深入
在這裡這一切是如何工作的雜草。

1501
01:11:29,590 --> 01:11:34,720
但亞馬遜方式，例如，
租你的虛擬機或服務器

1502
01:11:34,720 --> 01:11:37,200
在雲中，他們已經得到了
這些排序搞笑的名字，

1503
01:11:37,200 --> 01:11:41,000
像t2.nano，這意味著小，
或t2.large，這意味著大。

1504
01:11:41,000 --> 01:11:43,970
他們每個人都為您提供了兩種
一個或兩個虛擬CPU。

1505
01:11:43,970 --> 01:11:45,470
>> 為什麼它是一個虛擬的CPU？

1506
01:11:45,470 --> 01:11:49,440
好吧，物理機可能
有64個或更多的實際CPU。

1507
01:11:49,440 --> 01:11:52,125
但同樣，通過軟件，
他們創造的幻覺

1508
01:11:52,125 --> 01:11:55,410
這是一台機器可
瓜分給多個用戶。

1509
01:11:55,410 --> 01:11:58,765
因此，我們可以認為這是
有一個英特爾CPU或兩個。

1510
01:11:58,765 --> 01:12:01,290
每hour--我將CPU學分
要讀小字

1511
01:12:01,290 --> 01:12:02,581
至於什麼這實際上意味著。

1512
01:12:02,581 --> 01:12:05,850
這意味著有多少的機器
你可以每小時面對面的人使用

1513
01:12:05,850 --> 01:12:07,730
其他客戶在該硬件。

1514
01:12:07,730 --> 01:12:11,560
>> 這裡有多少RAM或存儲您
get--任一半千兆字節，或500

1515
01:12:11,560 --> 01:12:14,120
兆字節，或1千兆字節，或2。

1516
01:12:14,120 --> 01:12:17,390
然後，存儲只是指
什麼樣的磁盤，他們給你。

1517
01:12:17,390 --> 01:12:19,950
有不同的存儲
技術，他們提供。

1518
01:12:19,950 --> 01:12:22,870
但比這更有趣
那麼可能是定價。

1519
01:12:22,870 --> 01:12:25,860
>> 所以，如果你是CTO或
工程師誰不

1520
01:12:25,860 --> 01:12:28,420
要在運行服務器的
辦公室，無論出於何種原因，

1521
01:12:28,420 --> 01:12:30,230
和它的方式太
複雜或昂貴

1522
01:12:30,230 --> 01:12:33,930
購買服務器和共同找到他們，
在某些物理空間籠付房租

1523
01:12:33,930 --> 01:12:36,670
somewhere--你剛要坐下來
在你的筆記本電腦在深夜，

1524
01:12:36,670 --> 01:12:40,480
輸入您的信用卡信息，
而在租金服務器cloud--好，

1525
01:12:40,480 --> 01:12:41,920
在這裡我們可以做到這一點。

1526
01:12:41,920 --> 01:12:45,769
我要下去中場休息的Linux
是一款流行的操作系統。

1527
01:12:45,769 --> 01:12:47,310
讓我們剛剛得到的東西的感覺。

1528
01:12:47,310 --> 01:12:48,990
Whoops--太大。

1529
01:12:48,990 --> 01:12:53,670
>> 因此，讓我們看看他們的微小
虛擬機，裡面好像有，

1530
01:12:53,670 --> 01:12:57,440
對我們而言，一個CPU
和RAM 500兆字節。

1531
01:12:57,440 --> 01:12:58,440
這是相當小的。

1532
01:12:58,440 --> 01:13:00,820
但坦率地說，Web服務器不
需要做的所有的東西。

1533
01:13:00,820 --> 01:13:02,630
你有你的筆記本電腦更好的規格。

1534
01:13:02,630 --> 01:13:04,990
但你並不需要這些
規範這些天的事情。

1535
01:13:04,990 --> 01:13:11,490
你要支付每小時$ 0.0065。

1536
01:13:11,490 --> 01:13:12,080
>> 因此，讓我們來看看。

1537
01:13:12,080 --> 01:13:15,970
如果在一天24小時，和
我們付出這麼多每小時，

1538
01:13:15,970 --> 01:13:20,680
它會花費你$ 0.15到租的
在雲中特定的服務器。

1539
01:13:20,680 --> 01:13:22,210
而這僅僅是一天。

1540
01:13:22,210 --> 01:13:27,050
如果我們這樣做365-- $ 57
租用特定的服務器。

1541
01:13:27,050 --> 01:13:28,420
這樣聽起來超低價。

1542
01:13:28,420 --> 01:13:31,100
>> 這也是超級低性能。

1543
01:13:31,100 --> 01:13:37,169
因此，我們，對於課程教我在這裡，往往
用我認為t2.smalls或t2.mediums。

1544
01:13:37,169 --> 01:13:39,960
我們可能有幾百個
用戶，幾千個用戶，總。

1545
01:13:39,960 --> 01:13:40,900
這是非常溫和的。

1546
01:13:40,900 --> 01:13:42,360
因此，讓我們看看這將花費。

1547
01:13:42,360 --> 01:13:49,260
所以，如果我這樣做的成本24倍
小時365次，這其中的$ 225

1548
01:13:49,260 --> 01:13:51,160
而對於課程
我教的，我們一般

1549
01:13:51,160 --> 01:13:54,970
運行兩個一切，對於
冗餘和也對性能。

1550
01:13:54,970 --> 01:13:59,230
因此，我們可能會花，因此，
對於服務器$ 500

1551
01:13:59,230 --> 01:14:00,860
我們可能需要一年。

1552
01:14:00,860 --> 01:14:05,210
>> 現在，如果你需要更多的到性能
讓我們來看看內存。

1553
01:14:05,210 --> 01:14:06,810
我們已經談到內存頗有幾分。

1554
01:14:06,810 --> 01:14:09,330
而如果你需要更多的
memory--和64千兆字節

1555
01:14:09,330 --> 01:14:12,310
是我一直mentioning--數
這幾乎是1 $每小時。

1556
01:14:12,310 --> 01:14:16,180
而且你可以很快看到
這goes--所以24小時次365。

1557
01:14:16,180 --> 01:14:20,580
所以，現在是$ 8,000每年
對於一個相當不錯的服務器。

1558
01:14:20,580 --> 01:14:23,010
>> 所以在某些時候，有
這個拐點

1559
01:14:23,010 --> 01:14:29,510
現在在哪裡，我們可以花$ 6000名
可能和購買一台機器一樣，

1560
01:14:29,510 --> 01:14:33,800
和攤銷成本超過也許兩個，
三年，機器的壽命。

1561
01:14:33,800 --> 01:14:38,880
但是，可能會推你
贊成或租用的失寵

1562
01:14:38,880 --> 01:14:41,230
在這樣的雲計算一台機器？

1563
01:14:41,230 --> 01:14:44,110
再次，這是可比，也許
這些戴爾服務器之一

1564
01:14:44,110 --> 01:14:47,208
我們看到了一個位前合照。

1565
01:14:47,208 --> 01:14:51,016
>> 聽眾：[聽不清]

1566
01:14:51,016 --> 01:14:54,350

1567
01:14:54,350 --> 01:14:56,190
>> DAVID MALAN：是的，這是一個巨大的上漲空間。

1568
01:14:56,190 --> 01:14:58,640
因為我們不買
機，我們不必拆箱它。

1569
01:14:58,640 --> 01:14:59,600
我們不必提起。

1570
01:14:59,600 --> 01:15:01,110
我們沒有把它插入到我們的機架中。

1571
01:15:01,110 --> 01:15:02,080
我們沒有插上。

1572
01:15:02,080 --> 01:15:03,140
我們沒有支付
電費。

1573
01:15:03,140 --> 01:15:05,120
>> 我們沒有轉
對空調。

1574
01:15:05,120 --> 01:15:07,620
當一個硬盤驅動器模具，我們沒有
開車在半夜

1575
01:15:07,620 --> 01:15:08,172
要修復它。

1576
01:15:08,172 --> 01:15:09,630
我們沒有設置監控。

1577
01:15:09,630 --> 01:15:13,750
我們沒有中場休息，不勝枚舉
和所有的物理的東西

1578
01:15:13,750 --> 01:15:15,810
你不需要做
因為“雲”。

1579
01:15:15,810 --> 01:15:18,620
>> 並且要清楚，雲計算
這是非常濫用的術語。

1580
01:15:18,620 --> 01:15:22,790
這真的只是意味著支付人
別人為你運行的服務器，

1581
01:15:22,790 --> 01:15:25,300
或租用空間
別人的服務器上。

1582
01:15:25,300 --> 01:15:27,110
所以說，“雲計算”是新的。

1583
01:15:27,110 --> 01:15:30,260
這個想法是幾十年的歷史。

1584
01:15:30,260 --> 01:15:32,070
所以這是非常引人注目的。

1585
01:15:32,070 --> 01:15:33,960
>> 而你得到什麼呢？

1586
01:15:33,960 --> 01:15:38,287
那麼，您還可以獲得能力
做家裡的筆記本電腦的一切。

1587
01:15:38,287 --> 01:15:40,620
換言之，所有的
圖片我只是drawing--

1588
01:15:40,620 --> 01:15:44,010
，這是不是很久以前，即使
我爬來爬去的服務器地板

1589
01:15:44,010 --> 01:15:46,680
堵塞在用於電纜
每次你看到的線，

1590
01:15:46,680 --> 01:15:49,590
升級工作
系統，以及不斷變化的驅動器周圍。

1591
01:15:49,590 --> 01:15:51,610
有很多的
肉體來了這一切。

1592
01:15:51,610 --> 01:15:55,300
>> 但是，什麼是美麗的有關虛擬
機，作為名稱一種暗示，

1593
01:15:55,300 --> 01:15:57,600
現在有基於網絡的
接口即

1594
01:15:57,600 --> 01:15:59,900
如果你想等價
從該服務器一行

1595
01:15:59,900 --> 01:16:03,959
另一個，只需鍵入，類型，類型，
單擊並拖動，點擊提交，瞧，

1596
01:16:03,959 --> 01:16:05,250
你有它接線無形中。

1597
01:16:05,250 --> 01:16:07,235
因為它在軟件全部完成。

1598
01:16:07,235 --> 01:16:09,110
其原因，它的完成
在軟件又是

1599
01:16:09,110 --> 01:16:12,650
因為我們有這麼多的RAM等
多CPU提供給我們這些天，

1600
01:16:12,650 --> 01:16:14,880
即使所有的
這些東西需要時間，

1601
01:16:14,880 --> 01:16:18,450
它是運行緩慢的事情
在軟件比硬件，

1602
01:16:18,450 --> 01:16:23,710
只是因為它是較慢的使用機械
設備，如硬盤驅動器比RAM，

1603
01:16:23,710 --> 01:16:25,190
一些純電子。

1604
01:16:25,190 --> 01:16:27,490
我們有這麼多的資源
提供給我們。

1605
01:16:27,490 --> 01:16:29,920
我們人類是那種慢目不暇接。

1606
01:16:29,920 --> 01:16:33,840
所以現在的機器能做到
每單位時間更多。

1607
01:16:33,840 --> 01:16:36,640
我們有這些能力
做的事情幾乎。

1608
01:16:36,640 --> 01:16:39,120
>> 我會說的課程
我教，例如，在這裡，

1609
01:16:39,120 --> 01:16:43,464
我們對大約一打或
所以總的虛擬機的

1610
01:16:43,464 --> 01:16:45,880
這樣運行在任何給定
時間做前端的東西，

1611
01:16:45,880 --> 01:16:47,620
做後端的東西。

1612
01:16:47,620 --> 01:16:50,237
我們有我們所有的存儲。

1613
01:16:50,237 --> 01:16:52,820
因此，任何視頻，包括事
這樣，我們正在拍攝，

1614
01:16:52,820 --> 01:16:54,330
我們最終將入雲。

1615
01:16:54,330 --> 01:16:58,710
亞馬遜的服務叫做Amazon S3的，
其簡單的存儲服務，

1616
01:16:58,710 --> 01:17:00,397
就像在雲中的磁盤空間。

1617
01:17:00,397 --> 01:17:02,230
他們有話
所謂CloudFront的，這

1618
01:17:02,230 --> 01:17:06,040
是CDN服務，內容
交付網絡服務，

1619
01:17:06,040 --> 01:17:10,190
意味著他們把所有的文件和
為你自動地複製它

1620
01:17:10,190 --> 01:17:11,290
世界各地。

1621
01:17:11,290 --> 01:17:12,780
>> 因此，他們不這樣做先發製人。

1622
01:17:12,780 --> 01:17:15,159
但是，第一次有人
在印度的請求文件，

1623
01:17:15,159 --> 01:17:16,700
他們將有可能緩存在本地。

1624
01:17:16,700 --> 01:17:19,325
第一次在中國，
第一次在巴西發生這種情況，

1625
01:17:19,325 --> 01:17:20,880
他們將開始在本地緩存它。

1626
01:17:20,880 --> 01:17:22,730
而你並不需要做任何的。

1627
01:17:22,730 --> 01:17:26,710
因此，這是如此令人難以置信
引人注目的這幾天搬東西

1628
01:17:26,710 --> 01:17:27,890
入雲。

1629
01:17:27,890 --> 01:17:31,890
因為你有這個能力從字面上
到沒有人在做幾乎一樣多

1630
01:17:31,890 --> 01:17:32,390
工作。

1631
01:17:32,390 --> 01:17:35,930
你從字面上並不需要盡可能多的
人在做這些工作anymore--

1632
01:17:35,930 --> 01:17:38,450
“OPS”，或者操作角色，不再。

1633
01:17:38,450 --> 01:17:43,150
你真的只需要
開發人員和工程師少

1634
01:17:43,150 --> 01:17:44,840
誰可以做的事情幾乎。

1635
01:17:44,840 --> 01:17:46,590
事實上，只給
你的這種感覺，

1636
01:17:46,590 --> 01:17:51,800
讓我去定價
另外一個產品在這裡。

1637
01:17:51,800 --> 01:17:58,170
讓我們來看看像CDN S3。

1638
01:17:58,170 --> 01:18:01,140
因此，這基本上是一個
虛擬硬盤驅動器在雲中。

1639
01:18:01,140 --> 01:18:14,360
如果我們向下滾動pricing--
所以它的$ 0.007每GB。

1640
01:18:14,360 --> 01:18:16,300
而that's--我們怎麼辦呢？

1641
01:18:16,300 --> 01:18:17,410
我覺得每月這就是。

1642
01:18:17,410 --> 01:18:21,530
>> 所以，如果這是每month--或每天？

1643
01:18:21,530 --> 01:18:23,200
丹，這是每天？

1644
01:18:23,200 --> 01:18:24,700
這是每月確定。

1645
01:18:24,700 --> 01:18:28,280
因此，如果這是每month--
對不起，這是0.03每月$。

1646
01:18:28,280 --> 01:18:29,820
有12個月份按一年。

1647
01:18:29,820 --> 01:18:32,250
因此，有多少數據可能
你在雲存儲？

1648
01:18:32,250 --> 01:18:37,410
1千兆不是很大，但我
不知道，像1 TB的，

1649
01:18:37,410 --> 01:18:38,460
所以像那些1000。

1650
01:18:38,460 --> 01:18:39,501
這不是所有的東西。

1651
01:18:39,501 --> 01:18:44,382
這是$ 368存儲TB級
在亞馬遜的雲數據。

1652
01:18:44,382 --> 01:18:46,090
那麼，什麼是一些
在權衡呢？

1653
01:18:46,090 --> 01:18:47,970
它不可能都不錯。

1654
01:18:47,970 --> 01:18:52,260
我們今天講沒有什麼是
那種沒有catch或成本。

1655
01:18:52,260 --> 01:18:55,269
那麼，什麼是壞的關於移動
一切到雲？

1656
01:18:55,269 --> 01:18:56,060
聽眾：安全。

1657
01:18:56,060 --> 01:18:57,721
DAVID MALAN：OK，你是什麼意思？

1658
01:18:57,721 --> 01:18:58,596
聽眾：[聽不清]

1659
01:18:58,596 --> 01:19:01,589

1660
01:19:01,589 --> 01:19:02,630
DAVID MALAN：對，沒錯。

1661
01:19:02,630 --> 01:19:05,130
而你真的想
一些隨機工程師

1662
01:19:05,130 --> 01:19:08,750
在亞馬遜，你永遠不會有滿足
這些計算機的物理訪問，

1663
01:19:08,750 --> 01:19:11,010
如果他們真的
不曾想，虛接？

1664
01:19:11,010 --> 01:19:15,070
並且即使在
論軟件 - 好了，

1665
01:19:15,070 --> 01:19:17,442
加密可以絕對
保護您免受此。

1666
01:19:17,442 --> 01:19:19,150
所以，如果你在做什麼
存儲在服務器上

1667
01:19:19,150 --> 01:19:21,470
是encrypted--較少關注。

1668
01:19:21,470 --> 01:19:25,010
>> 但只要一個人具有物理
訪問一台機器，加密之外，

1669
01:19:25,010 --> 01:19:26,100
所有的賭注都之類的了。

1670
01:19:26,100 --> 01:19:28,240
你可能知道從昔日的
PC上網用戶特別是，

1671
01:19:28,240 --> 01:19:30,360
即使你有那些事
所謂的“BIOS密碼”

1672
01:19:30,360 --> 01:19:33,360
當被你的桌面啟動了，
你會用密碼的提示

1673
01:19:33,360 --> 01:19:35,980
有無關
Windows中，通常可以

1674
01:19:35,980 --> 01:19:39,750
剛打開的機箱
機，發現小小的別針，

1675
01:19:39,750 --> 01:19:42,240
並使用一種叫
跳線和只需連接

1676
01:19:42,240 --> 01:19:45,690
這兩條線約1秒鐘，
從而完成一個電路。

1677
01:19:45,690 --> 01:19:47,360
這將消除密碼。

1678
01:19:47,360 --> 01:19:49,800
>> 所以，當你有一個物理訪問
設備，你可以做這樣的事情。

1679
01:19:49,800 --> 01:19:51,110
您可以刪除硬盤驅動器。

1680
01:19:51,110 --> 01:19:53,060
您可以訪問這種方式。

1681
01:19:53,060 --> 01:19:55,442
所以這就是為什麼在
收存箱的情況下，

1682
01:19:55,442 --> 01:19:57,900
例如，它是一個小
令人擔心的是他們不僅

1683
01:19:57,900 --> 01:20:02,860
有數據時，即使它是
加密，它們也有鑰匙。

1684
01:20:02,860 --> 01:20:04,993
其他的顧慮？

1685
01:20:04,993 --> 01:20:08,430
>> 聽眾：[聽不清]

1686
01:20:08,430 --> 01:20:27,740

1687
01:20:27,740 --> 01:20:30,240
DAVID MALAN：是的，這是非常
true--的谷歌，蘋果，

1688
01:20:30,240 --> 01:20:31,406
世界的微軟。

1689
01:20:31,406 --> 01:20:34,400
而事實上，有多久
你有你的iPhone呢？

1690
01:20:34,400 --> 01:20:35,885
是的，給予或採取。

1691
01:20:35,885 --> 01:20:36,760
聽眾：[聽不清]

1692
01:20:36,760 --> 01:20:37,780
DAVID MALAN：對不起？

1693
01:20:37,780 --> 01:20:39,667
你是那些中誰
有一個iPhone，對不對？

1694
01:20:39,667 --> 01:20:40,250
聽眾：是的。

1695
01:20:40,250 --> 01:20:42,208
DAVID MALAN多久
你有過你的iPhone？

1696
01:20:42,208 --> 01:20:43,372
聽眾：[聽不清]

1697
01:20:43,372 --> 01:20:45,080
DAVID MALAN：好吧，
蘋果從字面上知道

1698
01:20:45,080 --> 01:20:49,030
你去過的地方，每時每刻
當天在過去五年。

1699
01:20:49,030 --> 01:20:51,112
>> 聽眾：[聽不清]

1700
01:20:51,112 --> 01:20:54,626

1701
01:20:54,626 --> 01:20:56,375
DAVID MALAN：這是
一個奇妙的功能。

1702
01:20:56,375 --> 01:20:57,860
聽眾：[聽不清]

1703
01:20:57,860 --> 01:21:00,875
DAVID MALAN：是的，但
權衡是肯定的。

1704
01:21:00,875 --> 01:21:01,750
聽眾：[聽不清]

1705
01:21:01,750 --> 01:21:04,720

1706
01:21:04,720 --> 01:21:07,813
>> DAVID MALAN：是的，這很容易。

1707
01:21:07,813 --> 01:21:08,688
聽眾：[聽不清]

1708
01:21:08,688 --> 01:21:12,040

1709
01:21:12,040 --> 01:21:13,248
DAVID MALAN：其他方面的不足？

1710
01:21:13,248 --> 01:21:16,995
聽眾：[聽不清]

1711
01:21:16,995 --> 01:21:26,151

1712
01:21:26,151 --> 01:21:27,900
DAVID MALAN：Absolutely--
技術上，

1713
01:21:27,900 --> 01:21:31,550
在經濟上，它是相當的吸引力，
那種獲得規模這些經濟體

1714
01:21:31,550 --> 01:21:33,579
並移動到的一切
所謂的雲。

1715
01:21:33,579 --> 01:21:35,870
但是，你也許想
去與一些最大的

1716
01:21:35,870 --> 01:21:39,380
魚，亞馬遜，谷歌的，在
Microsofts-- Rackspace公司是非常big--

1717
01:21:39,380 --> 01:21:42,200
和其他幾個人，而不是
一定是由夜間飛行鄉親

1718
01:21:42,200 --> 01:21:45,640
對他們來說，這是很容易做到的
這種時下技術。

1719
01:21:45,640 --> 01:21:49,140
而這其中，你可以
每月支付$ 5.99。

1720
01:21:49,140 --> 01:21:50,890
但你肯定會
得到你所支付的。

1721
01:21:50,890 --> 01:21:54,014
>> 當你說[聽不清]，這時候
這樣的事情五個九上來，

1722
01:21:54,014 --> 01:21:58,017
因此即使技術上
我們不能真正保證99.999，

1723
01:21:58,017 --> 01:22:00,350
我們只建立在某種
點球合同

1724
01:22:00,350 --> 01:22:03,910
這樣，如果該確實發生，至少
有一些費用給我們，供應商。

1725
01:22:03,910 --> 01:22:07,950
這就是你通常會
可以讓他們同意。

1726
01:22:07,950 --> 01:22:09,590
>> 聽眾：[聽不清]

1727
01:22:09,590 --> 01:22:12,290
>> DAVID MALAN：和
某種類型的祝福

1728
01:22:12,290 --> 01:22:15,630
是，即使我們往下走，對於
例如，甚至某些公司，

1729
01:22:15,630 --> 01:22:17,800
現實的情況是亞馬遜，
舉例來說，有這麼多

1730
01:22:17,800 --> 01:22:21,780
織補客戶，知名客戶，
經營出某些數據中心

1731
01:22:21,780 --> 01:22:26,224
當東西真的出了問題，
像神以及天氣和這樣的行為，

1732
01:22:26,224 --> 01:22:29,390
如果有任何形式的一線希望的，
它是你非常好的公司是。

1733
01:22:29,390 --> 01:22:30,680
您的網站可能處於脫機狀態。

1734
01:22:30,680 --> 01:22:32,750
但這樣是像半
流行的互聯網。

1735
01:22:32,750 --> 01:22:36,230
因此，這可以說是一個小
更得人心你的客戶

1736
01:22:36,230 --> 01:22:38,780
如果它是更大的互聯網
事情不是acme.com的事情。

1737
01:22:38,780 --> 01:22:41,780
但是，這是一個有點欺騙的。

1738
01:22:41,780 --> 01:22:46,740
>> 因此，在其他的事情來看待而言，
只是讓我們不排除他人，

1739
01:22:46,740 --> 01:22:51,210
如果你去微軟的Azure，他們
同時擁有Linux和Windows的東西

1740
01:22:51,210 --> 01:22:53,190
這相當於亞馬遜的。

1741
01:22:53,190 --> 01:22:57,540
如果你去谷歌計算引擎，
它們具有類似的為好。

1742
01:22:57,540 --> 01:23:00,500
而只是為了圓了
這些雲產品，

1743
01:23:00,500 --> 01:23:02,762
我會做的一件事提。

1744
01:23:02,762 --> 01:23:04,720
這是一個受歡迎的網站
這是代表

1745
01:23:04,720 --> 01:23:08,590
的一類技術。

1746
01:23:08,590 --> 01:23:12,350
我們剛才講的那些
約，亞馬遜，是IAAS，

1747
01:23:12,350 --> 01:23:17,150
基礎設施即服務，你在哪裡
排序物理硬件作為服務的。

1748
01:23:17,150 --> 01:23:18,757
還有的SaaS。

1749
01:23:18,757 --> 01:23:20,090
其實，讓我記下這些內容，。

1750
01:23:20,090 --> 01:23:23,290

1751
01:23:23,290 --> 01:23:28,190
>> IAAS--基礎設施
作為一種服務，SAAS，

1752
01:23:28,190 --> 01:23:31,870
和聚丙烯酸鈉，這是
非常混亂的縮寫

1753
01:23:31,870 --> 01:23:34,400
那些描述三種
不同類型的東西。

1754
01:23:34,400 --> 01:23:36,400
和自己的縮略語
其實並不重要。

1755
01:23:36,400 --> 01:23:38,360
這是所有的東西，雲
我們剛剛一直在講，

1756
01:23:38,360 --> 01:23:41,570
低層次的東西，在
硬件和存儲的虛擬化

1757
01:23:41,570 --> 01:23:44,890
在所謂的雲，無論是
亞馬遜，微軟，谷歌或其他。

1758
01:23:44,890 --> 01:23:47,270
>> 軟件作為service--
我們所有人的一種使用。

1759
01:23:47,270 --> 01:23:49,810
如果你使用谷歌企業應用套件
對於Gmail或日曆，

1760
01:23:49,810 --> 01:23:52,530
這些基於網絡的
應用程序，10年前我們

1761
01:23:52,530 --> 01:23:55,560
會對雙點擊圖標
我們的桌面，軟件即服務

1762
01:23:55,560 --> 01:23:57,400
現在真正的Web應用程序。

1763
01:23:57,400 --> 01:24:00,110
和平台即
服務種類的依賴。

1764
01:24:00,110 --> 01:24:03,140
>> 其中的一個例子我在這裡給你
在雲computing--的上下文

1765
01:24:03,140 --> 01:24:06,250
有一家公司是相當
受追捧，Heroku的。

1766
01:24:06,250 --> 01:24:08,940
而且他們是一個服務，
一個平台，如果你願意，

1767
01:24:08,940 --> 01:24:11,730
運行上的頂部
亞馬遜的基礎設施。

1768
01:24:11,730 --> 01:24:15,800
他們只是使其更容易
對於開發人員和工程師

1769
01:24:15,800 --> 01:24:18,330
獲得基於Web的應用程序在線。

1770
01:24:18,330 --> 01:24:22,170
>> 這是一個痛苦，最初，使用
亞馬遜網絡服務和其他東西。

1771
01:24:22,170 --> 01:24:24,170
因為你確實有
認識和了解

1772
01:24:24,170 --> 01:24:27,617
有關數據庫和Web服務器和
負載平衡器和所有的東西

1773
01:24:27,617 --> 01:24:28,450
我剛才講的。

1774
01:24:28,450 --> 01:24:32,780
由於亞馬遜已經做不
隱藏這些設計挑戰。

1775
01:24:32,780 --> 01:24:35,790
他們剛剛他們虛擬化
然後將它們移動到瀏覽器中，

1776
01:24:35,790 --> 01:24:37,770
到軟件，而不是硬件。

1777
01:24:37,770 --> 01:24:43,020
>> 但是，像Heroku和其他公司
PAAS提供商，平台即服務，

1778
01:24:43,020 --> 01:24:46,900
他們利用這些基本面準系統
我們剛才講了，

1779
01:24:46,900 --> 01:24:50,340
和他們建立更容易
在它的上面使用的軟件

1780
01:24:50,340 --> 01:24:54,241
因此，如果你想獲得一個基於網絡的
在線申請這些天，

1781
01:24:54,241 --> 01:24:55,990
你肯定要
知道如何編程。

1782
01:24:55,990 --> 01:25:00,280
你需要知道Java或Python或PHP
或Ruby或一群其他語言。

1783
01:25:00,280 --> 01:25:02,180
>> 但你也需要把它放在一個地方。

1784
01:25:02,180 --> 01:25:04,790
而我們前面談到
得到一個網絡託管公司。

1785
01:25:04,790 --> 01:25:08,630
這有點類似2000年代中期的
方法在網上得到的東西。

1786
01:25:08,630 --> 01:25:12,140
現在你可能會改為僱人
像Heroku的幾元錢一個月。

1787
01:25:12,140 --> 01:25:15,370
而實際上，一旦你
做了一些初始配置，

1788
01:25:15,370 --> 01:25:18,704
更新你的網站，你
只是在一個窗口中鍵入的命令。

1789
01:25:18,704 --> 01:25:21,370
而且不管你的代碼已經寫
在這裡你的筆記本電腦立刻

1790
01:25:21,370 --> 01:25:24,350
被分配給任何數目的
在雲服務器。

1791
01:25:24,350 --> 01:25:26,440
>> 和Heroku的需要照顧
所有的複雜性。

1792
01:25:26,440 --> 01:25:28,930
他們的身影所有數據庫
的東西，所有的負載均衡，

1793
01:25:28,930 --> 01:25:31,480
所有我們所頭痛的
只是寫在黑板上，

1794
01:25:31,480 --> 01:25:33,320
並隱藏所有的你們。

1795
01:25:33,320 --> 01:25:36,170
作為回報，你只
他們支付多一點。

1796
01:25:36,170 --> 01:25:39,810
所以，你有這些基礎設施為
一個服務，平台作為服務，

1797
01:25:39,810 --> 01:25:41,400
然後軟件即服務。

1798
01:25:41,400 --> 01:25:45,390
它是，再次，這
抽象或分層。

1799
01:25:45,390 --> 01:25:51,187
>> 雲上的任何問題或
建設自己的基礎設施？

1800
01:25:51,187 --> 01:25:52,270
好吧，這是一個很大。

1801
01:25:52,270 --> 01:25:54,200
我們為什麼不繼續前進，
在這裡把我們休息15分鐘。

1802
01:25:54,200 --> 01:25:57,241
我們會回來的幾個新概念
和一點動手的機會

1803
01:25:57,241 --> 01:25:59,110
前晚上結束。

1804
01:25:59,110 --> 01:26:00,332

