1
00:00:00,000 --> 00:00:00,629

2
00:00:00,629 --> 00:00:02,170
DAVID Маланом: Хорошо, добро пожаловать обратно.

3
00:00:02,170 --> 00:00:06,520
Прежде чем погрузиться в облачных вычислений,
Я думал, что на минуту остановиться

4
00:00:06,520 --> 00:00:11,740
если есть какие-либо нерешенных вопросов,
или темы, которые пришли во время обеда

5
00:00:11,740 --> 00:00:13,834
что, возможно, в настоящее время представляет интерес.

6
00:00:13,834 --> 00:00:18,470

7
00:00:18,470 --> 00:00:21,410
>> ЗРИТЕЛИ: [неразборчиво]

8
00:00:21,410 --> 00:00:22,090
>> DAVID Маланом: OK.

9
00:00:22,090 --> 00:00:23,555
О, хорошо.

10
00:00:23,555 --> 00:00:24,430
ЗРИТЕЛИ: [неразборчиво]

11
00:00:24,430 --> 00:00:29,880

12
00:00:29,880 --> 00:00:31,420
>> DAVID Маланом: Нет, конечно.

13
00:00:31,420 --> 00:00:35,180
Хорошо, хорошо, надеюсь, все ваши
проблемы возникают в ближайшие часы

14
00:00:35,180 --> 00:00:36,410
а завтра особенно.

15
00:00:36,410 --> 00:00:42,700
Но давайте посмотрим, а затем, при котором
Последнее обсуждение этого вопроса о создании

16
00:00:42,700 --> 00:00:45,730
веб-сайт приводит, в более общем плане
когда дело доходит до облачных вычислений,

17
00:00:45,730 --> 00:00:48,210
создание серверной архитектуры,
виды решений

18
00:00:48,210 --> 00:00:50,800
что инженеры и
разработчики и менеджеры

19
00:00:50,800 --> 00:00:53,210
нужно сделать, когда речь идет
делать больше, чем просто

20
00:00:53,210 --> 00:00:56,550
подписавшись на $ 10 в месяц веб-хостинга
когда вы на самом деле хотите, чтобы строить из

21
00:00:56,550 --> 00:00:57,550
ваша собственная инфраструктура.

22
00:00:57,550 --> 00:01:00,400
И мы будем стараться, чтобы связать эту спину,
например, к Dropbox и другие

23
00:01:00,400 --> 00:01:01,350
как они.

24
00:01:01,350 --> 00:01:06,250
>> Итак, давайте начнем рассматривать
какие проблемы возникают в бизнесе

25
00:01:06,250 --> 00:01:09,390
получает хорошие и возникают хорошие проблемы.

26
00:01:09,390 --> 00:01:14,720
Таким образом, в самом простом случае наличия
какая-то компания, которая имеет веб-сервер,

27
00:01:14,720 --> 00:01:21,470
Вы могли бы иметь, скажем, сервер,
мы просто рисовать, что выглядит следующим образом.

28
00:01:21,470 --> 00:01:25,620
И в эти дни, большинство servers-- и давайте
фактически поставил картину на это просто так

29
00:01:25,620 --> 00:01:27,680
что это чуть менее туманны.

30
00:01:27,680 --> 00:01:31,510
>> Так Dell стойки server--
обратно в тот же день, там

31
00:01:31,510 --> 00:01:33,730
были мэйнфреймы
что взял целые комнаты.

32
00:01:33,730 --> 00:01:35,710
В эти дни, если вы были
чтобы получить сервер, его

33
00:01:35,710 --> 00:01:38,520
может выглядеть немного что-то вроде этого.

34
00:01:38,520 --> 00:01:41,760
Серверы измеряются в каком
называются стоечных единиц, или БПРМ.

35
00:01:41,760 --> 00:01:45,280
И один RU составляет 1,5 дюйма,
который является промышленным стандартом.

36
00:01:45,280 --> 00:01:49,300
Так что это выглядит как сервер два RU.

37
00:01:49,300 --> 00:01:51,240
Так что 3 дюйма в высоту.

38
00:01:51,240 --> 00:01:54,430
И они, как правило 19 дюймов в ширину,
что означает все такого рода вещи

39
00:01:54,430 --> 00:01:55,160
стандартизирован.

40
00:01:55,160 --> 00:01:59,420
>> Так что, если вы посмотрите в center-- данных
а не только на одном сервере, но давайте

41
00:01:59,420 --> 00:02:02,110
посмотрите на Google,
центров обработки данных и посмотреть, если мы

42
00:02:02,110 --> 00:02:04,280
увидеть красивую картинку в Google Images.

43
00:02:04,280 --> 00:02:09,090
Это гораздо лучше, чем вы освещено
как правило, найти, и многое

44
00:02:09,090 --> 00:02:14,900
сексуальнее глядя, как результат. Но
это то, что выглядит как пара

45
00:02:14,900 --> 00:02:17,380
сто серверов все
о том же размере,

46
00:02:17,380 --> 00:02:21,450
на самом деле, в стойку после стойки после того, как
стойки после стойки в центре обработки данных.

47
00:02:21,450 --> 00:02:26,150
>> Что-то вроде this-- это вполне может
быть компании Google, так как я гугле Google.

48
00:02:26,150 --> 00:02:28,330
Но это может быть представитель
в более общем плане

49
00:02:28,330 --> 00:02:31,480
центр обработки данных, в котором многие
компании, как правило, расположены совместно.

50
00:02:31,480 --> 00:02:34,940
И совмещенных в общем случае означает
что вы идете в таком месте, как Equinix

51
00:02:34,940 --> 00:02:40,280
или других производителей, которые имеют большие
склады, которые имеют много энергии,

52
00:02:40,280 --> 00:02:42,950
много охлаждения, мы надеемся,
много безопасности,

53
00:02:42,950 --> 00:02:47,910
и отдельные вольеры ограждающих стойки
серверы, и вы либо арендовать стойки

54
00:02:47,910 --> 00:02:49,150
или вы приносите стойки в.

55
00:02:49,150 --> 00:02:51,420
>> А отдельные компании,
стартапов особенно,

56
00:02:51,420 --> 00:02:54,820
будет иметь какой-то биометрии
чтобы попасть в их клетке, или клавиши,

57
00:02:54,820 --> 00:02:55,640
или ключ-карта.

58
00:02:55,640 --> 00:02:56,990
Вы открываете дверь.

59
00:02:56,990 --> 00:03:00,354
А внутри есть только
квадрат кадры след

60
00:03:00,354 --> 00:03:03,270
что вы платите за, внутри
которые вы можете положить все, что вы хотите.

61
00:03:03,270 --> 00:03:04,770
>> И вы, как правило, платят за власть.

62
00:03:04,770 --> 00:03:06,920
И вы платите за отпечатками.

63
00:03:06,920 --> 00:03:08,770
А потом вы платите
самостоятельно для серверов

64
00:03:08,770 --> 00:03:10,560
что вы чего в это пространство.

65
00:03:10,560 --> 00:03:12,850
А что вы тогда иметь
возможность сделать это платить кому-то

66
00:03:12,850 --> 00:03:15,120
для подключения к Интернет-услуг.

67
00:03:15,120 --> 00:03:17,240
Вы можете оплатить любое количество
поставщиков, каждый из которых

68
00:03:17,240 --> 00:03:19,210
как правило, попадают в этот центр обработки данных.

69
00:03:19,210 --> 00:03:22,740
>> Но реальный интересный вопрос,
что на самом деле идет в этих стойках?

70
00:03:22,740 --> 00:03:25,020
Они могут все очень хорошо
выглядеть так, как мы только что видели.

71
00:03:25,020 --> 00:03:27,870
Но они выполняют различные функции
и, возможно, придется делать разные вещи.

72
00:03:27,870 --> 00:03:29,661
И давайте на самом деле
мотивировать это обсуждение

73
00:03:29,661 --> 00:03:35,370
с вопросом о том, какие проблемы
начинает возникать, если вы успешны?

74
00:03:35,370 --> 00:03:37,900
>> Так что у вас есть веб-сайт
что вы построили.

75
00:03:37,900 --> 00:03:40,450
А может быть, он продает виджеты
или что-то типа того.

76
00:03:40,450 --> 00:03:43,620
И вы делаете очень хорошо
с продажами виджетов в Интернете.

77
00:03:43,620 --> 00:03:48,490
И вы начинаете испытывать
некоторые симптомы, ваш веб-сайт.

78
00:03:48,490 --> 00:03:51,070
Что может быть некоторые из
технические симптомы

79
00:03:51,070 --> 00:03:54,040
что пользователи сообщают, как бизнес
растет и процветает

80
00:03:54,040 --> 00:03:59,482
и ваш сайт
выгоду от этого?

81
00:03:59,482 --> 00:04:02,690
>> ЗРИТЕЛИ: [неразборчиво]

82
00:04:02,690 --> 00:04:05,910

83
00:04:05,910 --> 00:04:07,050
>> DAVID Маланом: Да, точно.

84
00:04:07,050 --> 00:04:10,040
Таким образом, вы могли бы иметь
замедление вашего веб-сайта.

85
00:04:10,040 --> 00:04:11,240
И почему это могло произойти?

86
00:04:11,240 --> 00:04:12,660
Ну, если мы предположим, для
ради обсуждения

87
00:04:12,660 --> 00:04:15,160
прямо сейчас, что вы находитесь на одном
из этих коммерческих веб-хосты

88
00:04:15,160 --> 00:04:17,860
что мы говорили о перед обедом,
что вы платите некоторое количество долларов

89
00:04:17,860 --> 00:04:20,859
в месяц, и вы уже заплатили
для годовой стоимости вашего домена

90
00:04:20,859 --> 00:04:25,300
имя, что веб-хостинга, вероятно,
переоценивать свои ресурсы

91
00:04:25,300 --> 00:04:26,050
в некоторой степени.

92
00:04:26,050 --> 00:04:29,000
Так что вы можете иметь имя пользователя
и пароль на своем сервере.

93
00:04:29,000 --> 00:04:32,410
Но так может несколько других, или несколько
десятка других, или, возможно, даже несколько

94
00:04:32,410 --> 00:04:33,980
сотни других, пользователей.

95
00:04:33,980 --> 00:04:37,190
>> И сайты живут физически
на том же сервере.

96
00:04:37,190 --> 00:04:38,340
Почему это возможно?

97
00:04:38,340 --> 00:04:40,680
Ну в эти дни, серверы
как это обычно

98
00:04:40,680 --> 00:04:44,610
есть несколько жестких дисков, может быть,
целых шесть или более жестких дисков,

99
00:04:44,610 --> 00:04:47,665
каждый из которых может быть столько,
как 4 терабайт в эти дни.

100
00:04:47,665 --> 00:04:52,140
Таким образом, вы могли бы иметь 24 терабайт пространства
всего за один маленький сервер, как это.

101
00:04:52,140 --> 00:04:55,710
>> И даже если вы украсть часть этого пространства
для резервирования, для целей резервного копирования,

102
00:04:55,710 --> 00:04:57,110
это все еще довольно много места.

103
00:04:57,110 --> 00:05:00,070
И, конечно же, типичный веб-сайт
не нужно много места.

104
00:05:00,070 --> 00:05:03,100
Просто регистрации пользователей
и хранения журналов заказов

105
00:05:03,100 --> 00:05:04,640
не принимать все, что много места.

106
00:05:04,640 --> 00:05:07,550
Таким образом, вы можете разделить его достаточно
немного и дать каждому пользователю

107
00:05:07,550 --> 00:05:08,980
только немного кусочек этого.

108
00:05:08,980 --> 00:05:11,310
>> В то же время, компьютер
как это в эти дни

109
00:05:11,310 --> 00:05:16,370
как правило, имеет несколько CPUs-- не только
один, может быть, два, может быть четыре, может быть, 16,

110
00:05:16,370 --> 00:05:17,149
или даже больше.

111
00:05:17,149 --> 00:05:18,940
И каждый из этих процессоров
есть то, что называется

112
00:05:18,940 --> 00:05:22,230
ядро, которое вроде как
мозг внутри мозга.

113
00:05:22,230 --> 00:05:26,800
Так что на самом деле большинство всех присутствующих здесь с
современные ноутбуки, вероятно, двухъядерный

114
00:05:26,800 --> 00:05:32,030
или четырехъядерным CPU-- и, вероятно, только
один процессор внутри ноутбука в эти дни.

115
00:05:32,030 --> 00:05:35,030
Но настольные компьютеры
и стоечные компьютеры, такие как

116
00:05:35,030 --> 00:05:39,000
это может иметь немало
чем больше процессоров, и в свою очередь сердечников.

117
00:05:39,000 --> 00:05:44,180
>> И, честно говоря, даже в наших компьютерах Mac и ПК
сегодня, вы на самом деле не нужны двухъядерность

118
00:05:44,180 --> 00:05:46,550
или четырехъядерных ядра, чтобы проверить свою электронную почту.

119
00:05:46,550 --> 00:05:49,090
Если есть узкое место, когда
речь идет об использовании компьютера,

120
00:05:49,090 --> 00:05:51,925
Ты человек, вероятно,
самая медленная вещь об этом компьютере.

121
00:05:51,925 --> 00:05:54,800
И вы не собираетесь быть в состоянии
проверьте свою электронную почту быстрее, если вы

122
00:05:54,800 --> 00:05:57,170
имеют в четыре раза больше процессоров или ядер.

123
00:05:57,170 --> 00:05:59,700
>> Но тот же самый добрый
истинного сервера.

124
00:05:59,700 --> 00:06:02,970
Один единственный веб-сайт не может
обязательно нужно больше, чем один

125
00:06:02,970 --> 00:06:05,756
Процессор или одно ядро, один
маленький мозг внутри делает

126
00:06:05,756 --> 00:06:07,380
все мышления и обработки.

127
00:06:07,380 --> 00:06:10,561
Так производители аналогично
начал нарезать эти ресурсы

128
00:06:10,561 --> 00:06:13,435
так что, возможно, ваш сайт получает один
ядро, ваш сайт получает одно ядро,

129
00:06:13,435 --> 00:06:15,290
или, может быть, мы разделяем одну такую ​​сердцевину.

130
00:06:15,290 --> 00:06:16,820
Мы также обмен дискового пространства.

131
00:06:16,820 --> 00:06:20,000
И мы также обмен оперативной памяти,
или памяти произвольного доступа

132
00:06:20,000 --> 00:06:22,520
от ранее, из которых
есть также конечное количество.

133
00:06:22,520 --> 00:06:23,420
>> И это ключ.

134
00:06:23,420 --> 00:06:25,960
Независимо от того, насколько дорого
компьютер был,

135
00:06:25,960 --> 00:06:28,440
есть еще конечное
объем ресурсов в нем.

136
00:06:28,440 --> 00:06:31,360
И поэтому все больше и больше вас
попробуйте потреблять те ресурсы,

137
00:06:31,360 --> 00:06:32,850
тем медленнее вещи могли бы стать.

138
00:06:32,850 --> 00:06:34,646
Но почему?

139
00:06:34,646 --> 00:06:39,352
Почему бы вещи замедлить как
симптом перегрузки сервера?

140
00:06:39,352 --> 00:06:40,060
Что происходит?

141
00:06:40,060 --> 00:06:42,895

142
00:06:42,895 --> 00:06:46,388
>> ЗРИТЕЛИ: [неразборчиво]

143
00:06:46,388 --> 00:06:54,036

144
00:06:54,036 --> 00:06:55,160
DAVID Маланом: Да, точно.

145
00:06:55,160 --> 00:06:57,730
Я предложил, что ранее
Оперативная память представляет собой тип памяти.

146
00:06:57,730 --> 00:07:00,290
Это летучее, причем это
где приложения и данные

147
00:07:00,290 --> 00:07:01,890
сохраняются, когда они используются.

148
00:07:01,890 --> 00:07:03,990
И вот поэтому есть
лишь конечное число

149
00:07:03,990 --> 00:07:05,790
вещей, которые вы можете сделать, по-видимому, сразу же.

150
00:07:05,790 --> 00:07:07,740
И это также быстрее,
Что хорошо.

151
00:07:07,740 --> 00:07:09,990
Но это также дороже,
который является плохой вещью.

152
00:07:09,990 --> 00:07:15,376
И это также, следовательно, присутствует в нижней
количествах, чем на диске, жесткий диск

153
00:07:15,376 --> 00:07:16,750
пространство, которое, как правило, дешевле.

154
00:07:16,750 --> 00:07:18,830
>> Другими словами, вы
может иметь 4 терабайт

155
00:07:18,830 --> 00:07:20,440
дискового пространства на вашем компьютере.

156
00:07:20,440 --> 00:07:24,300
Но вы можете иметь 4
гигабайты, или 64 гигабайта,

157
00:07:24,300 --> 00:07:29,180
по порядку величины, фактор
1000 меньше, оперативной памяти в вашем компьютере.

158
00:07:29,180 --> 00:07:30,320
Итак, что же компьютер делать?

159
00:07:30,320 --> 00:07:32,236
Ну, предположим, что вы
действительно есть 64 гигабайт

160
00:07:32,236 --> 00:07:35,110
оперативной памяти в сервере, как это, что
будет довольно распространенным явлением, если бы не низкая

161
00:07:35,110 --> 00:07:36,140
Эти дни.

162
00:07:36,140 --> 00:07:39,220
Но предположим, что у вас есть так много
пользователи делают так много вещей

163
00:07:39,220 --> 00:07:42,480
что вы вроде своего рода
потребуется 65 гигабайт памяти

164
00:07:42,480 --> 00:07:44,960
обрабатывать все, что
одновременное использование?

165
00:07:44,960 --> 00:07:47,580
>> Ну, вы могли бы просто сказать,
К сожалению, некоторое количество пользователей

166
00:07:47,580 --> 00:07:48,840
просто не может получить доступ к сайту.

167
00:07:48,840 --> 00:07:51,410
И это есть мера
в крайнем случае, конечно же.

168
00:07:51,410 --> 00:07:55,570
Или, в качестве операционной
системы, как Windows, Mac или

169
00:07:55,570 --> 00:07:59,480
OS или Linux или Solaris или любой
ряд других операционных систем на этом сервере,

170
00:07:59,480 --> 00:08:01,280
может просто решить, вы знаете, что?

171
00:08:01,280 --> 00:08:03,780
У меня есть только 64 гигабайт оперативной памяти.

172
00:08:03,780 --> 00:08:05,440
Я как бы нужно 65.

173
00:08:05,440 --> 00:08:06,210
Таким образом, вы знаете, что?

174
00:08:06,210 --> 00:08:10,030
Я собираюсь взять 1 гигабайт
стоит данных в оперативной памяти

175
00:08:10,030 --> 00:08:15,240
который был наименее недавно обращались
и просто переместить его на диск временно,

176
00:08:15,240 --> 00:08:19,050
буквально скопировать его из поста
память с более медленной памятью

177
00:08:19,050 --> 00:08:24,000
так что я могу справиться с этим, то
65-е необходимо гигабайтный для памяти,

178
00:08:24,000 --> 00:08:25,650
сделать некоторые вычисления на нем.

179
00:08:25,650 --> 00:08:28,580
Потом, когда я сделал это делать,
Я буду просто двигаться, что на диск,

180
00:08:28,580 --> 00:08:35,030
переместить эту другую оперативную память я временно положить
на диске обратно в реальном оборудовании

181
00:08:35,030 --> 00:08:37,280
так что я отчасти многозадачности.

182
00:08:37,280 --> 00:08:41,190
>> Так что я своего рода наведение
временно находящихся в этом пространстве медленнее,

183
00:08:41,190 --> 00:08:44,159
поэтому я создаю иллюзию
обработки всех.

184
00:08:44,159 --> 00:08:45,290
Но есть замедление.

185
00:08:45,290 --> 00:08:45,790
Зачем?

186
00:08:45,790 --> 00:08:49,380
Ну, внутри них трудно
диски в эти дни есть что?

187
00:08:49,380 --> 00:08:52,030
Скорее всего, что делает жесткий
диск отличается от RAM

188
00:08:52,030 --> 00:08:53,495
как лучше теперь вы знаете?

189
00:08:53,495 --> 00:08:56,750
>> ЗРИТЕЛИ: [неразборчиво]

190
00:08:56,750 --> 00:08:59,540

191
00:08:59,540 --> 00:09:01,445
>> DAVID Маланом: Хорошо, правда.

192
00:09:01,445 --> 00:09:02,320
ЗРИТЕЛИ: [неразборчиво]

193
00:09:02,320 --> 00:09:05,440

194
00:09:05,440 --> 00:09:06,750
>> DAVID Маланом: Так очень верно.

195
00:09:06,750 --> 00:09:13,709
И это побочный эффект или функцию
тот факт, что память действительно быстрее.

196
00:09:13,709 --> 00:09:15,750
И поэтому вы хотите
использовать его для текущего использования.

197
00:09:15,750 --> 00:09:17,290
И диск медленнее.

198
00:09:17,290 --> 00:09:19,630
Но это постоянное, или энергонезависимым.

199
00:09:19,630 --> 00:09:21,480
Таким образом, вы используете его для длительного хранения.

200
00:09:21,480 --> 00:09:25,160
Но с точки зрения
реализация, если я смотрю вверх

201
00:09:25,160 --> 00:09:29,297
что называется модуль DIMM, двухрядным памяти
Модуль, это то, что часть оперативной памяти

202
00:09:29,297 --> 00:09:30,380
обычно может выглядеть следующим образом.

203
00:09:30,380 --> 00:09:35,050
>> Так что внутри нашего Mac--, что это ошибка.

204
00:09:35,050 --> 00:09:41,080
Внутри наших Маков и ПК, наши настольные
компьютеры будут иметь палки памяти,

205
00:09:41,080 --> 00:09:43,220
как вы могли бы назвать их,
или модули DIMM или SIMMs назад

206
00:09:43,220 --> 00:09:44,970
в тот же день, памяти
что выглядеть следующим образом.

207
00:09:44,970 --> 00:09:47,900
Наши ноутбуки, вероятно, есть вещи, которые
являются третьим размером или половину размера.

208
00:09:47,900 --> 00:09:50,066
Они немного меньше,
но тот же самый маленький idea--

209
00:09:50,066 --> 00:09:52,110
кусочки зеленого кремния
вафельные или пластика,

210
00:09:52,110 --> 00:09:56,237
имеет маленькие черные фишки на них с большим
проводов взаимного соединения все.

211
00:09:56,237 --> 00:09:58,820
Вы можете иметь целую кучу
они внутри вашего компьютера.

212
00:09:58,820 --> 00:10:00,903
Но вынос здесь
это полностью электронная.

213
00:10:00,903 --> 00:10:03,130
Там просто электроны
протекающий на этом устройстве.

214
00:10:03,130 --> 00:10:08,170
В противоположность этому, если мы посмотрим на
внутри жесткого диска

215
00:10:08,170 --> 00:10:10,760
и потянуть вверх картину
здесь, вы бы вместо того, чтобы

216
00:10:10,760 --> 00:10:16,600
увидеть что-то вроде этого,
который делает электричество

217
00:10:16,600 --> 00:10:17,950
пройдя через него, в конечном счете.

218
00:10:17,950 --> 00:10:20,265
Но что же выскакивает
у вас об этой вещи?

219
00:10:20,265 --> 00:10:21,140
ЗРИТЕЛИ: [неразборчиво]

220
00:10:21,140 --> 00:10:22,710
DAVID Маланом: Да, есть
по-видимому, движущихся частей.

221
00:10:22,710 --> 00:10:25,210
Это вроде как старой записи
игрок или игрок фонограф.

222
00:10:25,210 --> 00:10:26,200
И это в значительной степени это.

223
00:10:26,200 --> 00:10:28,950
Это немного искуснее, чем that--
в то время как фонограф используемого проигрывателя

224
00:10:28,950 --> 00:10:33,150
канавками в записи, это на самом деле
использует крошечные магнитные частицы

225
00:10:33,150 --> 00:10:34,550
что мы не можем видеть совсем.

226
00:10:34,550 --> 00:10:38,520
Но если немного магнитной частицы
выглядит следующим образом, это считается 1.

227
00:10:38,520 --> 00:10:41,230
И если это выглядит так,
с севера на юг, а не на юго-север,

228
00:10:41,230 --> 00:10:42,252
это может быть 0.

229
00:10:42,252 --> 00:10:45,460
И мы увидим завтра, как мы можем построить
от более интересных вещей.

230
00:10:45,460 --> 00:10:47,590
>> Но все это
должен физически переместить

231
00:10:47,590 --> 00:10:51,010
, безусловно, будет идти медленнее,
чем скорость света,

232
00:10:51,010 --> 00:10:53,250
которая в теории является то, что
электрон может протекать в,

233
00:10:53,250 --> 00:10:54,620
хотя реально не совсем.

234
00:10:54,620 --> 00:10:56,900
Так что механическое devices-- гораздо медленнее.

235
00:10:56,900 --> 00:10:58,320
Но они дешевле.

236
00:10:58,320 --> 00:11:00,944
И вы можете приспосабливать так много
больше данных внутри них.

237
00:11:00,944 --> 00:11:03,110
Поэтому тот факт, что
существует в мире что-то

238
00:11:03,110 --> 00:11:06,840
называется виртуальной памяти,
при использовании жесткого диска, как это

239
00:11:06,840 --> 00:11:10,160
как будто это было RAM
прозрачным для пользователя,

240
00:11:10,160 --> 00:11:15,320
просто путем перемещения данных
из оперативной памяти на жесткий диск,

241
00:11:15,320 --> 00:11:18,714
затем переместить его обратно, когда вам нужно
он снова создает замедление.

242
00:11:18,714 --> 00:11:21,380
Потому что вы в буквальном смысле придется
скопировать его из одного места в другое.

243
00:11:21,380 --> 00:11:25,100
И дело вы копируете его, а
от фактически медленнее, чем ОЗУ

244
00:11:25,100 --> 00:11:26,150
где вы хотите быть.

245
00:11:26,150 --> 00:11:29,030
>> Альтернативное решение here--
если вам не нравится, что замедлит,

246
00:11:29,030 --> 00:11:32,014
и ваша виртуальная память
своего рода быть перегружена,

247
00:11:32,014 --> 00:11:33,680
что другое решение этой проблемы?

248
00:11:33,680 --> 00:11:35,260
>> ЗРИТЕЛИ: [неразборчиво]

249
00:11:35,260 --> 00:11:37,260
DAVID Маланом: Ну,
увеличение виртуальной памяти

250
00:11:37,260 --> 00:11:39,135
позволит нам сделать это на
еще больший масштаб.

251
00:11:39,135 --> 00:11:43,540
Мы могли бы справиться с 66 гигабайтами стоит
потребностей в памяти, или 67 гигабайт.

252
00:11:43,540 --> 00:11:45,830
Но предположим, что мне не нравится
это замедление, на самом деле

253
00:11:45,830 --> 00:11:49,380
Я хочу, чтобы отключить виртуальный
память, если это вообще возможно,

254
00:11:49,380 --> 00:11:52,350
что еще я мог бросить на
эту проблему решить,

255
00:11:52,350 --> 00:11:56,900
где я хочу, чтобы обрабатывать большее количество пользователей
и больше требования к памяти

256
00:11:56,900 --> 00:11:59,100
чем я физически есть на данный момент?

257
00:11:59,100 --> 00:12:02,600
>> ЗРИТЕЛИ: [неразборчиво]

258
00:12:02,600 --> 00:12:04,800

259
00:12:04,800 --> 00:12:06,140
>> DAVID Маланом: К сожалению, нет.

260
00:12:06,140 --> 00:12:09,850
Таким образом, процессор и ядра они
в это конечный ресурс.

261
00:12:09,850 --> 00:12:13,280
И нет никакого аналогового в этом контексте.

262
00:12:13,280 --> 00:12:14,990
Хороший вопрос, хотя.

263
00:12:14,990 --> 00:12:19,270
Так просто быть ясно, тоже, если
внутри этого компьютера,

264
00:12:19,270 --> 00:12:24,510
скажем, палка памяти, которая выглядит
как this-- и так мы будем называть эту память.

265
00:12:24,510 --> 00:12:27,070
И здесь это жесткий диск.

266
00:12:27,070 --> 00:12:30,130
И я просто сделать это
изобразительно как маленький круг.

267
00:12:30,130 --> 00:12:33,740
Есть 0 и 1. В обоих
these-- данные, мы обобщим его как.

268
00:12:33,740 --> 00:12:38,030
>> И по сути дела, если пользователь
запуск приложения, как,

269
00:12:38,030 --> 00:12:46,070
скажем, веб-сайт, который требует это
объем оперативной памяти для каждого пользователя, что я предлагаю,

270
00:12:46,070 --> 00:12:48,380
путем этой вещи
называется виртуальной памяти,

271
00:12:48,380 --> 00:12:53,990
это просто временно переместить
что здесь, так что теперь я

272
00:12:53,990 --> 00:12:57,810
может переместить память кого-то другого
Требования там.

273
00:12:57,810 --> 00:13:00,420
И тогда, когда это будет сделано,
Я могу скопировать это обратно на

274
00:13:00,420 --> 00:13:04,550
и это идет здесь, тем самым перемещая
что я хотел там где-нибудь еще

275
00:13:04,550 --> 00:13:05,050
в целом.

276
00:13:05,050 --> 00:13:07,820
>> Таким образом, есть просто много
Switcheroo, является вынос здесь.

277
00:13:07,820 --> 00:13:12,380
Так что, если вам не нравится это, и вы этого не сделаете
хочу поставить что-нибудь на жестком диске,

278
00:13:12,380 --> 00:13:16,440
что-то очевидное
Решение бизнес человека

279
00:13:16,440 --> 00:13:19,684
к проблеме, или инженера
решение, если на то пошло, тоже?

280
00:13:19,684 --> 00:13:21,950
>> ЗРИТЕЛИ: [неразборчиво]

281
00:13:21,950 --> 00:13:24,750
>> DAVID Маланом: Да, я имею в виду в буквальном смысле
бросать деньги на эту проблему.

282
00:13:24,750 --> 00:13:27,541
И на самом деле, это идеальный
непосредственно перейти к некоторым из более высокого уровня

283
00:13:27,541 --> 00:13:28,870
обсуждение облачных вычислений.

284
00:13:28,870 --> 00:13:31,390
Потому что многое из этого мотивируется
финансовыми решениями,

285
00:13:31,390 --> 00:13:33,040
даже не обязательно технологические.

286
00:13:33,040 --> 00:13:37,830
Если 64 гигабайтами оперативной памяти слишком мало, ну,
почему бы не получить 128 гигабайт оперативной памяти?

287
00:13:37,830 --> 00:13:40,440
Почему бы не получить 256 гигабайт оперативной памяти?

288
00:13:40,440 --> 00:13:41,732
А почему бы не?

289
00:13:41,732 --> 00:13:42,608
>> ЗРИТЕЛИ: [неразборчиво]

290
00:13:42,608 --> 00:13:44,482
DAVID Маланом: Ну,
стоит больше денег, конечно.

291
00:13:44,482 --> 00:13:46,970
А если у вас уже есть запасной
пространства на жестком диске, эффективно,

292
00:13:46,970 --> 00:13:51,407
или, что эквивалентно, пространство на жестком диске так
гораздо дешевле, вы можете также использовать его.

293
00:13:51,407 --> 00:13:54,490
Итак, еще раз, есть такой компромисс, что
мы увидели еще раньше этим утром,

294
00:13:54,490 --> 00:13:56,656
где есть на самом деле не
обязательно правильный ответ,

295
00:13:56,656 --> 00:14:01,360
там просто лучше или хуже ответ
основанные на том, что вы на самом деле волнует.

296
00:14:01,360 --> 00:14:04,500
>> Таким образом, есть также технологические реалии.

297
00:14:04,500 --> 00:14:06,870
Я не могу купить компьютер,
насколько мне известно,

298
00:14:06,870 --> 00:14:09,490
с триллион гигабайт
ОЗУ прямо сейчас.

299
00:14:09,490 --> 00:14:11,540
Он просто физически не существует.

300
00:14:11,540 --> 00:14:13,240
Так что есть некоторая верхняя граница.

301
00:14:13,240 --> 00:14:15,990
Но если вы когда-либо даже делал покупки
для потребителей Mac или PC,

302
00:14:15,990 --> 00:14:20,180
тоже, как правило, есть
эта кривая особенностей

303
00:14:20,180 --> 00:14:23,410
где может быть хорошим,
лучше, а лучший компьютер.

304
00:14:23,410 --> 00:14:25,730
>> И маргинальные возвращается
на ваш доллар покупки

305
00:14:25,730 --> 00:14:30,227
лучший компьютер по сравнению с
тем лучше компьютер

306
00:14:30,227 --> 00:14:32,560
не может быть столь же высоким
а тратить немного больше денег

307
00:14:32,560 --> 00:14:35,599
и получить лучший компьютер
за хороший компьютер.

308
00:14:35,599 --> 00:14:38,390
Другими словами, вы платите
премии, чтобы получить верхней части линии.

309
00:14:38,390 --> 00:14:40,790
>> И то, что мы увидим в
обсуждение облачных вычислений

310
00:14:40,790 --> 00:14:44,940
это то, что очень часто эти
дней, а также то, что такие компании, как Google

311
00:14:44,940 --> 00:14:50,560
рано популяризировал, не обращала
для и строительство действительно фантазии, дорого

312
00:14:50,560 --> 00:14:53,540
новоиспеченным до компьютеров с
много и много всего,

313
00:14:53,540 --> 00:15:00,140
а покупать или строить довольно
скромные компьютеры, но многие из них,

314
00:15:00,140 --> 00:15:03,280
и используя то, что это в целом
называется горизонтальное масштабирование вместо

315
00:15:03,280 --> 00:15:04,320
вертикального масштабирования.

316
00:15:04,320 --> 00:15:08,115
>> Таким образом, вертикальное масштабирование означало бы получить больше
RAM, больше дискового, больше всего,

317
00:15:08,115 --> 00:15:10,187
и как бы инвестировать
вертикально в вашем оборудовании

318
00:15:10,187 --> 00:15:12,520
так что вы просто получение
лучшие из лучших из лучших,

319
00:15:12,520 --> 00:15:13,650
но вы платите за это.

320
00:15:13,650 --> 00:15:17,580
Горизонтальное масштабирование вид получить
нижний ярус вещи, хорошая модель,

321
00:15:17,580 --> 00:15:19,922
или даже хуже, модель,
но получить их много.

322
00:15:19,922 --> 00:15:22,630
Но как только вы получите много
them--, например, в данном случае,

323
00:15:22,630 --> 00:15:27,330
веб-серверы, если этот сервер
или один веб-хостинга является недостаточным,

324
00:15:27,330 --> 00:15:32,310
то просто интуитивно, то
Решение этой проблемы нагрузки

325
00:15:32,310 --> 00:15:36,460
или перегрузки на серверах
либо получить больший сервер

326
00:15:36,460 --> 00:15:40,770
или, что я предлагаю здесь вместо того, чтобы
масштабирования по вертикали, так сказать,

327
00:15:40,770 --> 00:15:41,920
будет, вы знаете, что?

328
00:15:41,920 --> 00:15:43,580
Просто получить второй один из них.

329
00:15:43,580 --> 00:15:46,560
Или, может быть, даже получить третий.

330
00:15:46,560 --> 00:15:48,900
Но теперь мы создали
инженерная проблема

331
00:15:48,900 --> 00:15:51,920
по своей природе этого бизнеса
или финансовое решение.

332
00:15:51,920 --> 00:15:54,312
Что инженерная проблема сейчас?

333
00:15:54,312 --> 00:15:56,040
>> ЗРИТЕЛИ: [неразборчиво]

334
00:15:56,040 --> 00:15:59,740
>> DAVID Маланом: Да, как
вы подключаете их и-- жаль?

335
00:15:59,740 --> 00:16:00,651
>> ЗРИТЕЛИ: [неразборчиво]

336
00:16:00,651 --> 00:16:02,400
DAVID Маланом: справа,
потому что я до сих пор have--

337
00:16:02,400 --> 00:16:07,280
если я вновь ввести меня в эту картину,
если это мой ноутбук где-то

338
00:16:07,280 --> 00:16:12,400
в Интернете, который сейчас находится между
я и компания, мы говорим о том,

339
00:16:12,400 --> 00:16:17,960
Теперь я должен выяснить, к которому
сервер я могу отправить этот конкретного пользователя?

340
00:16:17,960 --> 00:16:25,090
И если есть другие пользователи, как
это, и затем этот один здесь,

341
00:16:25,090 --> 00:16:28,850
и, возможно, это пользователь А, это
является пользователь В, это пользователь С,

342
00:16:28,850 --> 00:16:34,720
и это сервер 1, 2, и в настоящее время 3--
интуитивный ответ может быть только здесь,

343
00:16:34,720 --> 00:16:37,460
мы будем посылать пользователю A 1
и В 2 и С 3.

344
00:16:37,460 --> 00:16:39,900
И мы можем обрабатывать 3 раза больше пользователей.

345
00:16:39,900 --> 00:16:41,360
>> Но это упрощением.

346
00:16:41,360 --> 00:16:44,480
Как вы решаете, кого послать где?

347
00:16:44,480 --> 00:16:46,400
Так давайте попробуем рассуждать через это.

348
00:16:46,400 --> 00:16:50,110
Так предположим, что компьютеры
А, В, и С являются клиенты,

349
00:16:50,110 --> 00:16:53,972
и серверы 1, 2 и 3 являются
горизонтально масштабируется серверов.

350
00:16:53,972 --> 00:16:55,180
Так они вроде идентичны.

351
00:16:55,180 --> 00:16:57,200
Они все используют то же программное обеспечение.

352
00:16:57,200 --> 00:16:59,770
И все они могут сделать то же самое.

353
00:16:59,770 --> 00:17:01,520
Но причина у нас есть
три из них так

354
00:17:01,520 --> 00:17:04,710
что мы можем справиться с тремя
раз больше людей сразу.

355
00:17:04,710 --> 00:17:07,960
>> Итак, мы знаем из нашего
обсуждение до обеда

356
00:17:07,960 --> 00:17:11,460
что есть аппаратная между
ноутбуки и серверы.

357
00:17:11,460 --> 00:17:14,920
Но мы просто своего рода обобщения
что в настоящее время в Интернете или в облаке.

358
00:17:14,920 --> 00:17:18,707
Но мы знаем, что в моем доме,
есть, вероятно, домашний маршрутизатор.

359
00:17:18,707 --> 00:17:21,290
Рядом с серверами, там, наверное,
маршрутизатор, DNS-сервер, DHCP.

360
00:17:21,290 --> 00:17:24,780
Там может быть что угодно
мы хотим, чтобы в этой истории.

361
00:17:24,780 --> 00:17:33,360
>> Так как же мы начинаем решать,
когда пользователь А переходит в something.com,

362
00:17:33,360 --> 00:17:36,630
которое сервер для маршрутизации пользователю?

363
00:17:36,630 --> 00:17:39,409
Как мы могли бы начать рассказывать эту историю?

364
00:17:39,409 --> 00:17:40,450
ЗРИТЕЛИ: балансировка нагрузки?

365
00:17:40,450 --> 00:17:41,120
DAVID Маланом: балансировка нагрузки.

366
00:17:41,120 --> 00:17:42,502
Что ты имеешь в виду?

367
00:17:42,502 --> 00:17:44,660
>> ЗРИТЕЛИ: Возвращение
где наиболее использование является

368
00:17:44,660 --> 00:17:47,472
и какой из них имеет
большинство имеющихся ресурсов.

369
00:17:47,472 --> 00:17:49,930
DAVID Маланом: Хорошо, так что позвольте мне
ввести новый тип аппаратного обеспечения

370
00:17:49,930 --> 00:17:53,627
что мы еще не обсуждали, что
это именно то, балансировки нагрузки.

371
00:17:53,627 --> 00:17:54,960
Это тоже может быть просто сервером.

372
00:17:54,960 --> 00:17:58,130
Это может выглядеть так же, как
тот, который мы видели минуту назад.

373
00:17:58,130 --> 00:18:01,000
Балансировки нагрузки на самом деле
просто кусок программного обеспечения

374
00:18:01,000 --> 00:18:02,660
что вы запускаете на части аппаратных средств.

375
00:18:02,660 --> 00:18:07,310
>> Или же вы можете заплатить поставщику, как
Citrix или другие, Cisco или другие.

376
00:18:07,310 --> 00:18:10,465
Вы можете заплатить за их собственных аппаратных средствах,
который является компенсатором нагрузки оборудования.

377
00:18:10,465 --> 00:18:12,840
Но это просто означает, что они
предварительно установленной балансировку нагрузки

378
00:18:12,840 --> 00:18:15,580
программное обеспечение на своих аппаратных и
продал его к вам все вместе.

379
00:18:15,580 --> 00:18:18,670
Так что мы просто сделать это как
прямоугольник для наших целей.

380
00:18:18,670 --> 00:18:22,040
>> Как же теперь мне реализовать балансировки нагрузки?

381
00:18:22,040 --> 00:18:28,150
Другими словами, когда пользователь А хочет
посетить мой сайт, их запрос как-то

382
00:18:28,150 --> 00:18:31,070
или другой, вероятно, путем тех,
Маршрутизаторы о которых мы говорили ранее,

383
00:18:31,070 --> 00:18:33,750
собирается в конце концов достигнет
это компенсатор нагрузки, который затем

384
00:18:33,750 --> 00:18:36,210
необходимо сделать маршрутизации типа решения.

385
00:18:36,210 --> 00:18:38,320
Но это для маршрутизации рода
более высокой цели в настоящее время.

386
00:18:38,320 --> 00:18:40,361
Это не только о получении
от точки А до точки

387
00:18:40,361 --> 00:18:44,730
B. Речь идет о решении, которое
Точка B является лучшим среди them--

388
00:18:44,730 --> 00:18:46,660
1, 2, или 3, в данном случае.

389
00:18:46,660 --> 00:18:51,000
>> Так как же я решить, следует ли
чтобы перейти к 1, 2, 3?

390
00:18:51,000 --> 00:18:55,180
Что может этот черный ящик, так
говорят, делать на внутренней?

391
00:18:55,180 --> 00:18:57,880
Это также является еще одним примером в
информатика абстракции.

392
00:18:57,880 --> 00:19:02,410
Я буквально нарисовали балансировки нагрузки
как черный ящик черными чернилами, внутри

393
00:19:02,410 --> 00:19:05,300
из которых некоторые интересные
Логика, или магия, даже,

394
00:19:05,300 --> 00:19:07,840
из которых должен прийти
decision-- 1, 2, или 3.

395
00:19:07,840 --> 00:19:12,220
И вход только А.

396
00:19:12,220 --> 00:19:13,442
>> ЗРИТЕЛИ: [неразборчиво]

397
00:19:13,442 --> 00:19:14,400
DAVID Маланом: Я сожалею?

398
00:19:14,400 --> 00:19:14,770
ЗРИТЕЛИ: [неразборчиво]

399
00:19:14,770 --> 00:19:18,310
DAVID Маланом: Хорошо, как мы могли бы
классифицировать виды операций

400
00:19:18,310 --> 00:19:19,095
Вот?

401
00:19:19,095 --> 00:19:23,772
>> ЗРИТЕЛИ: Просмотр веб-страницы
по сравнению с запросами к базе данных.

402
00:19:23,772 --> 00:19:24,980
DAVID Маланом: Хорошо, это хорошо.

403
00:19:24,980 --> 00:19:29,210
Так может быть, этот пользователь А
хочет просматривать веб-страницы.

404
00:19:29,210 --> 00:19:32,954
А может быть, это даже статический контент,
то, что меняется редко, если когда-либо.

405
00:19:32,954 --> 00:19:34,870
И это кажется
довольно простая операция.

406
00:19:34,870 --> 00:19:38,260
Так что, может быть, мы просто произвольно,
но разумно, скажем,

407
00:19:38,260 --> 00:19:42,750
сервер 1, его цель в жизни
просто обслуживать до статического контента,

408
00:19:42,750 --> 00:19:45,150
файлы, которые редко, если когда-либо, изменить.

409
00:19:45,150 --> 00:19:46,870
Может быть, это изображения на странице.

410
00:19:46,870 --> 00:19:50,180
Может быть, это текст на странице или
другого такого рода неинтересных вещей,

411
00:19:50,180 --> 00:19:52,460
ничего не транзакционной, ничего динамического.

412
00:19:52,460 --> 00:19:57,000
>> В отличие от этого, если пользователь А проверяет
из его или ее корзине, что

413
00:19:57,000 --> 00:20:00,972
требуется база данных, где-то хранить
и помните, что сделки, а

414
00:20:00,972 --> 00:20:02,680
возможно, что запрос
должны перейти к серверу 2.

415
00:20:02,680 --> 00:20:03,610
Так что это хорошо.

416
00:20:03,610 --> 00:20:07,010
Таким образом, мы можем загрузить на основе баланса
от типа запросов.

417
00:20:07,010 --> 00:20:08,278
Как еще мы могли бы это сделать?

418
00:20:08,278 --> 00:20:13,690

419
00:20:13,690 --> 00:20:14,686
Что other--

420
00:20:14,686 --> 00:20:17,382
>> ЗРИТЕЛИ: На основе сервера
использования и мощности.

421
00:20:17,382 --> 00:20:18,340
DAVID Маланом: справа, ОК.

422
00:20:18,340 --> 00:20:19,950
Таким образом, вы упомянули, что ранее, Kareem.

423
00:20:19,950 --> 00:20:26,850
Так что, если мы обеспечиваем некоторый вклад
на [неразборчиво] среди серверов 1, 2,

424
00:20:26,850 --> 00:20:32,070
и 3 к этой балансировки нагрузки таким образом, что
они просто постоянно информируя

425
00:20:32,070 --> 00:20:36,420
выравниватель нагрузки каков их статус?

426
00:20:36,420 --> 00:20:39,842
Как, эй, балансировки нагрузки,
Я на 50% утилизации.

427
00:20:39,842 --> 00:20:41,550
Другими словами, у меня есть
вдвое меньше, многие пользователи

428
00:20:41,550 --> 00:20:43,520
как я могу на самом деле обрабатывать прямо сейчас.

429
00:20:43,520 --> 00:20:45,480
Эй, компенсатор нагрузки, я
при 100% утилизации.

430
00:20:45,480 --> 00:20:47,929
Эй, компенсатор нагрузки, 0% использование.

431
00:20:47,929 --> 00:20:49,970
Балансировки нагрузки, если это
сконструированы таким образом, что

432
00:20:49,970 --> 00:20:53,990
может принять в этих комментариях
в качестве входных данных, он может

433
00:20:53,990 --> 00:20:57,420
решить, ох, номер 2 на 100%.

434
00:20:57,420 --> 00:21:01,440
Позвольте мне прислать не будущие запросы к нему
кроме пользователей уже подключены.

435
00:21:01,440 --> 00:21:02,360
Этот парень на 0%.

436
00:21:02,360 --> 00:21:03,940
Давайте пошлем много трафика к нему.

437
00:21:03,940 --> 00:21:05,480
Этот парень сказал, что он на 50%.

438
00:21:05,480 --> 00:21:08,080
Давайте пошлем некоторое движение к нему.

439
00:21:08,080 --> 00:21:12,012
>> Таким образом, это было бы одним из компонентов, который
мы могли бы принять во внимание нагрузку.

440
00:21:12,012 --> 00:21:13,470
И это будет меняться с течением времени.

441
00:21:13,470 --> 00:21:14,678
Таким образом, решения будут меняться.

442
00:21:14,678 --> 00:21:17,350
Так что это действительно хорошая техника,
тот, который обычно используется.

443
00:21:17,350 --> 00:21:18,410
Что еще мы можем сделать?

444
00:21:18,410 --> 00:21:20,380
И давайте на самом деле просто суммировать здесь.

445
00:21:20,380 --> 00:21:29,510
Таким образом, решения здесь может быть
по типу трафика, я буду называть его.

446
00:21:29,510 --> 00:21:32,220
Он может быть в зависимости от нагрузки.

447
00:21:32,220 --> 00:21:34,692
Давайте посмотрим, если мы не можем
придумать несколько других.

448
00:21:34,692 --> 00:21:35,934
>> ЗРИТЕЛИ: [неразборчиво]

449
00:21:35,934 --> 00:21:36,850
DAVID Маланом: Местоположение.

450
00:21:36,850 --> 00:21:37,724
Так что это хороший.

451
00:21:37,724 --> 00:21:40,880
Так как место расположения-- вы могли бы
использовать эту информацию?

452
00:21:40,880 --> 00:21:44,317
>> ЗРИТЕЛИ: [неразборчиво]

453
00:21:44,317 --> 00:21:54,140

454
00:21:54,140 --> 00:21:57,040
>> DAVID Маланом: О, это хорошо.

455
00:21:57,040 --> 00:21:59,450
И о том, сколько миллисекунд
бы она уменьшится на

456
00:21:59,450 --> 00:22:02,466
на основе того, что мы увидели в этом
утро бы вы сказали?

457
00:22:02,466 --> 00:22:04,330
>> ЗРИТЕЛИ: [неразборчиво]

458
00:22:04,330 --> 00:22:06,550
>> DAVID Маланом: Ну, на основе
на следовых маршрутов

459
00:22:06,550 --> 00:22:09,070
мы видели раньше, что это просто
грубая мера чего-то,

460
00:22:09,070 --> 00:22:11,800
по крайней мере, сколько времени требуется
для данных, чтобы получить от А до Б

461
00:22:11,800 --> 00:22:16,140
чувствует, как что-либо местным было, что,
как 74 миллисекунд, давать или принимать?

462
00:22:16,140 --> 00:22:19,200
А потом что-нибудь 100 плюс,
200 плюс был, вероятно, за границей.

463
00:22:19,200 --> 00:22:22,110
И вот на основе этого в одиночку,
представляется разумным предположить,

464
00:22:22,110 --> 00:22:25,310
что для пользователя в США
чтобы получить доступ к Европейскому серверу

465
00:22:25,310 --> 00:22:28,900
может занять два или три раза
до тех пор, даже в миллисекундах,

466
00:22:28,900 --> 00:22:31,280
чем он мог бы принять, если это
Сервер были расположены здесь

467
00:22:31,280 --> 00:22:33,370
географически, или наоборот.

468
00:22:33,370 --> 00:22:35,120
Поэтому, когда я предложил
ранее, что особенно

469
00:22:35,120 --> 00:22:37,880
Как только вы пересекаете, что 200 миллисекунду
Порог, давать или принимать,

470
00:22:37,880 --> 00:22:39,210
люди действительно начинают замечать.

471
00:22:39,210 --> 00:22:42,960
И маршрут трассы просто
предполагая, сырые, неинтересные данные.

472
00:22:42,960 --> 00:22:46,570
Если у вас есть веб-сайт, вы должны
получить пользователь при загрузке изображений или кино

473
00:22:46,570 --> 00:22:49,150
файлы, много текста,
последующие запросы.

474
00:22:49,150 --> 00:22:53,116
Мы видели, когда мы посетили, что было
это, Facebook или Amazon ранее,

475
00:22:53,116 --> 00:22:55,490
есть целый много вещей
который должен быть загружен.

476
00:22:55,490 --> 00:22:56,573
Так что собирается сложить.

477
00:22:56,573 --> 00:23:00,259
Так мульти-секунд может
не неразумно.

478
00:23:00,259 --> 00:23:01,800
Так хорошо, географии является одним из компонентов.

479
00:23:01,800 --> 00:23:05,920
Так что на самом деле таких компаний, как
Akamai, если вы слышали о них,

480
00:23:05,920 --> 00:23:10,000
или другие уже давно приняты
география во внимание.

481
00:23:10,000 --> 00:23:14,170
И получается, что по своей природе
IP-адрес, IP-адрес моего ноутбука,

482
00:23:14,170 --> 00:23:18,277
вы можете сделать вывод, с некоторой вероятностью,
где вы находитесь в мире.

483
00:23:18,277 --> 00:23:20,110
И в самом деле есть
услуги третьих сторон,

484
00:23:20,110 --> 00:23:24,480
может оплатить которые поддерживают базы данных
по IP-адресов и географических регионов

485
00:23:24,480 --> 00:23:28,660
что с высокой уверенностью будет
правда, когда его спросили, где в мире

486
00:23:28,660 --> 00:23:30,090
это IP-адрес?

487
00:23:30,090 --> 00:23:32,130
>> И так, что на самом деле
другие компании используют это?

488
00:23:32,130 --> 00:23:35,900
Если у вас есть Hulu или Netflix если
Вы когда-либо путешествовал за границей,

489
00:23:35,900 --> 00:23:38,640
и вы пытаетесь что-то смотреть на
Hulu, и вы не в США,

490
00:23:38,640 --> 00:23:41,280
вы можете увидеть сообщение
говоря, не в США.

491
00:23:41,280 --> 00:23:43,208
К сожалению, вы не можете увидеть это.

492
00:23:43,208 --> 00:23:44,420
>> ЗРИТЕЛИ: [неразборчиво]

493
00:23:44,420 --> 00:23:46,020
>> DAVID Маланом: О, на самом деле?

494
00:23:46,020 --> 00:23:48,480
Но да, так что на самом деле это
идеальное приложение

495
00:23:48,480 --> 00:23:51,060
чего-то очень технический
актуальной проблеме.

496
00:23:51,060 --> 00:23:55,100
Если вы должны были VPN от
Европе или Азии или где-нибудь

497
00:23:55,100 --> 00:23:57,950
в мире к корпоративной
Штаб-квартира в Нью-Йорке

498
00:23:57,950 --> 00:24:00,670
или там, где вы находитесь, вы
собирается создать видимость

499
00:24:00,670 --> 00:24:03,580
на внешние веб-сайты,
вы на самом деле в Нью-Йорке,

500
00:24:03,580 --> 00:24:05,660
даже если вы
физически довольно далеко.

501
00:24:05,660 --> 00:24:08,057
>> Теперь вы пользователь собираетесь
знаю, что вы, очевидно, далеко.

502
00:24:08,057 --> 00:24:11,140
Но вы также будете чувствовать себя, потому что
из этих дополнительных миллисекунд.

503
00:24:11,140 --> 00:24:14,510
Это дополнительное расстояние и
шифрования, что происходит в VPN

504
00:24:14,510 --> 00:24:15,760
собирается замедлить ход событий.

505
00:24:15,760 --> 00:24:17,680
Таким образом, он может или не может
большой опыт.

506
00:24:17,680 --> 00:24:21,050
Но Hulu и Netflix собираются, чтобы увидеть
Вы, как сидя где-нибудь в Нью-Йорке,

507
00:24:21,050 --> 00:24:23,817
как вы четко подбирала.

508
00:24:23,817 --> 00:24:25,150
Что идеальное решение для этого.

509
00:24:25,150 --> 00:24:28,490
>> Хорошо, так что география одно решение.

510
00:24:28,490 --> 00:24:32,290
Что еще мы могли бы использовать, чтобы решить, как
для маршрутизации трафика из A, B, и C

511
00:24:32,290 --> 00:24:37,040
1, 2 и 3, опять же, положив
инженерный шляпу на?

512
00:24:37,040 --> 00:24:38,850
Все это звучит очень сложно.

513
00:24:38,850 --> 00:24:41,490
Э-э, я даже не знаю, где
приступить к выполнению тех.

514
00:24:41,490 --> 00:24:44,450
Дайте мне что-нибудь попроще.

515
00:24:44,450 --> 00:24:48,160
Что это самый простой способ
чтобы принять это решение?

516
00:24:48,160 --> 00:24:49,840
>> ЗРИТЕЛИ: Является ли сервер доступен?

517
00:24:49,840 --> 00:24:51,650
>> DAVID Маланом: Является ли сервер доступен?

518
00:24:51,650 --> 00:24:53,970
Так что не плохо.

519
00:24:53,970 --> 00:24:54,470
Это хорошо.

520
00:24:54,470 --> 00:24:56,260
Это своего рода нюансирования нагрузки.

521
00:24:56,260 --> 00:24:58,070
Так что давайте держать, что в категории нагрузки.

522
00:24:58,070 --> 00:25:00,010
Если вы доступны, я просто
собирается отправить данные там.

523
00:25:00,010 --> 00:25:01,343
Но это может привести к обратным быстро.

524
00:25:01,343 --> 00:25:05,720
Потому что, если я использую эту логику, и если я
всегда спрашивают 1, кем вы, кем вы,

525
00:25:05,720 --> 00:25:08,970
кем вы, если ответ всегда да,
Я собираюсь отправить 100% трафика

526
00:25:08,970 --> 00:25:11,060
к нему, 0% для всех остальных.

527
00:25:11,060 --> 00:25:14,430
И в какой-то момент, мы собираемся ударить
что замедление или сайт недоступен.

528
00:25:14,430 --> 00:25:17,630
Так что немного лучше, чем
что, но все еще довольно просто

529
00:25:17,630 --> 00:25:22,412
и не почти столь же умна, как принимать все
эти дополнительные данные во внимание?

530
00:25:22,412 --> 00:25:23,992
>> ЗРИТЕЛИ: Стоимость каждого сервера.

531
00:25:23,992 --> 00:25:25,200
DAVID Маланом: Стоимость на сервере.

532
00:25:25,200 --> 00:25:28,010
ОК, так что позвольте мне бросить, что
в категории нагрузки тоже.

533
00:25:28,010 --> 00:25:30,790
Потому что вы найдете в
компания, too--, что если вы

534
00:25:30,790 --> 00:25:32,790
обновить серверы
с течением времени или купить больше,

535
00:25:32,790 --> 00:25:36,242
Вы не могли бы быть в состоянии получить точно
одинаковые версии аппаратного обеспечения.

536
00:25:36,242 --> 00:25:37,450
Потому что она выпадает из даты.

537
00:25:37,450 --> 00:25:38,491
Вы не можете купить его больше.

538
00:25:38,491 --> 00:25:39,360
Цены изменяются.

539
00:25:39,360 --> 00:25:42,500
>> Таким образом, вы можете иметь разнородные серверы
в кластере, так сказать.

540
00:25:42,500 --> 00:25:43,890
Это совершенно нормально.

541
00:25:43,890 --> 00:25:47,100
Но аппаратное обеспечение в следующем году
может быть в два раза быстрее,

542
00:25:47,100 --> 00:25:49,390
в два раза способны, как в этом году.

543
00:25:49,390 --> 00:25:51,500
Таким образом, мы можем бросить, что
в категорию нагрузки.

544
00:25:51,500 --> 00:25:54,260
Эта петля обратной связи между 1,
2 и 3 в балансировки нагрузки

545
00:25:54,260 --> 00:25:57,650
безусловно, может сказать ему,
эй, я на 50% мощности.

546
00:25:57,650 --> 00:26:00,100
Но, кстати, я тоже
имеют в два раза больше ядер.

547
00:26:00,100 --> 00:26:02,319
Используйте эту информацию.

548
00:26:02,319 --> 00:26:05,110
Даже simpler-- и это происходит
чтобы быть темой в информатике.

549
00:26:05,110 --> 00:26:08,990
Если есть сомнения, или когда вы хотите простой
решение, которое в целом работает хорошо

550
00:26:08,990 --> 00:26:12,730
в течение долгого времени, не выбирают тот же
сервер все время, но выберите--

551
00:26:12,730 --> 00:26:14,039
>> ЗРИТЕЛИ: случайный один?

552
00:26:14,039 --> 00:26:15,330
DAVID Маланом: --a случайный сервер.

553
00:26:15,330 --> 00:26:16,780
Да, выбрать одну или другую сторону.

554
00:26:16,780 --> 00:26:21,160
Так что на самом деле хаотичность
это очень мощный компонент

555
00:26:21,160 --> 00:26:23,170
в информатике,
и в машиностроении более

556
00:26:23,170 --> 00:26:27,160
как правило, особенно если вы хотите
чтобы сделать простое решение быстро

557
00:26:27,160 --> 00:26:30,480
не усложняя его со всеми
из них очень умный, но и

558
00:26:30,480 --> 00:26:34,330
очень умные, решения, которые требуют
все более инженерные, все

559
00:26:34,330 --> 00:26:36,220
тем более мысль, когда
на самом деле, почему не я

560
00:26:36,220 --> 00:26:39,200
только отчасти монетку, или
трехсторонний монета в данном случае,

561
00:26:39,200 --> 00:26:41,690
и решить, стоит ли идти 1, 2, 3?

562
00:26:41,690 --> 00:26:45,610
>> Это может иметь неприятные последствия вероятностно,
но так же, как шансы

563
00:26:45,610 --> 00:26:48,860
из снова листать головы и
Снова и снова и снова

564
00:26:48,860 --> 00:26:53,870
и снова и снова возможно в
reality-- супер, супер маловероятно.

565
00:26:53,870 --> 00:26:58,170
Таким образом, с течением времени, шансы
просто отправка пользователей в случайном порядке

566
00:26:58,170 --> 00:27:00,660
в 1, 2, и 3 будет
отрабатывать прекрасно.

567
00:27:00,660 --> 00:27:03,380
И это техника
как правило, известен как круговике.

568
00:27:03,380 --> 00:27:05,160
>> Или на самом деле, это не по круговой системе.

569
00:27:05,160 --> 00:27:06,980
Это было бы случайный подход.

570
00:27:06,980 --> 00:27:09,250
И если вы хотите быть даже
немного проще, чем это,

571
00:27:09,250 --> 00:27:12,820
Круговая система будет, первый человек идет
1, второй человек 2, третье лицо

572
00:27:12,820 --> 00:27:16,056
3, четвертый человек на 1.

573
00:27:16,056 --> 00:27:17,430
И в этом заключается круглый робин.

574
00:27:17,430 --> 00:27:19,580
Вы просто вид идти вокруг в цикле.

575
00:27:19,580 --> 00:27:21,300
>> Теперь, вы должны быть умными об этом.

576
00:27:21,300 --> 00:27:26,490
Вы не должны слепо отправить пользователю
сервер номер один, если в чем дело?

577
00:27:26,490 --> 00:27:30,060

578
00:27:30,060 --> 00:27:32,870
Если это при максимальной мощности, или
Не это просто больше не реагирует.

579
00:27:32,870 --> 00:27:35,270
Так что в идеале вы хотите, чтобы некоторые
вид цепи обратной связи.

580
00:27:35,270 --> 00:27:38,040
В противном случае, вы просто отправить все
ваших пользователей в тупик.

581
00:27:38,040 --> 00:27:40,790
Но это может быть принято во внимание, тоже.

582
00:27:40,790 --> 00:27:46,520
>> Так что не под оценить значение
просто случайность, что довольно часто

583
00:27:46,520 --> 00:27:48,970
решение такого рода проблем.

584
00:27:48,970 --> 00:27:51,580
И мы будем записывать круговой.

585
00:27:51,580 --> 00:27:55,090
Так как некоторые компании реализуют
Круговая система или хаотичность

586
00:27:55,090 --> 00:27:56,840
или любое из этих решений?

587
00:27:56,840 --> 00:28:01,840
Ну, к сожалению, они
делать такие вещи.

588
00:28:01,840 --> 00:28:03,660
Позвольте мне подтянуть еще один быстрый снимок экрана.

589
00:28:03,660 --> 00:28:13,052

590
00:28:13,052 --> 00:28:14,470
>> На самом деле, давайте сделаем два.

591
00:28:14,470 --> 00:28:17,420

592
00:28:17,420 --> 00:28:21,370
Я не знаю, почему мы
получать все из этих блюд.

593
00:28:21,370 --> 00:28:22,280
Это очень странно.

594
00:28:22,280 --> 00:28:31,714

595
00:28:31,714 --> 00:28:33,630
Хорошо, что я на самом деле
хочу это скриншот.

596
00:28:33,630 --> 00:28:36,990

597
00:28:36,990 --> 00:28:40,100
Это странно.

598
00:28:40,100 --> 00:28:42,930
Хорошо, так что я могу подделать это.

599
00:28:42,930 --> 00:28:46,080
Я не знаю, сколько еще
Я хочу, чтобы держать скроллинг.

600
00:28:46,080 --> 00:28:53,220
>> Так что очень часто, вы окажетесь
по адресу, как www.2.acme.com,

601
00:28:53,220 --> 00:28:56,030
может быть, www.3 или 4 или 5.

602
00:28:56,030 --> 00:28:57,424
И следить за этим.

603
00:28:57,424 --> 00:28:58,590
Вы не видите его, что часто.

604
00:28:58,590 --> 00:29:02,621
Но когда вы делаете, это своего рода, как правило,
будет больше, более старые, stodgier компании

605
00:29:02,621 --> 00:29:05,370
что технологически не очень
кажется, знают, что они делают.

606
00:29:05,370 --> 00:29:08,150
И вы видите это на технологических компаний
иногда, старшие.

607
00:29:08,150 --> 00:29:09,270
>> Так что же они делают?

608
00:29:09,270 --> 00:29:11,890
Как они реализации
балансировка нагрузки, будет это казаться?

609
00:29:11,890 --> 00:29:15,986
Если вы нашли себя в качестве
Пользователь набрав www.something.com,

610
00:29:15,986 --> 00:29:19,760
и вдруг вы в
www.2.something.com,

611
00:29:19,760 --> 00:29:21,866
то, что имеет свою нагрузку
балансир, вероятно, сделано?

612
00:29:21,866 --> 00:29:22,741
ЗРИТЕЛИ: [неразборчиво]

613
00:29:22,741 --> 00:29:28,210

614
00:29:28,210 --> 00:29:31,079
>> DAVID Маланом: Да, так
балансировки нагрузки предположительно

615
00:29:31,079 --> 00:29:33,870
принятие решения на основе одного из
это принятие решений processes--

616
00:29:33,870 --> 00:29:35,210
на самом деле не имеет значения, какой.

617
00:29:35,210 --> 00:29:38,650
Но так же, как я нарисован
Цифры на борту здесь,

618
00:29:38,650 --> 00:29:40,650
серверы не просто
называется 1, 2 и 3.

619
00:29:40,650 --> 00:29:43,870
Они, вероятно, называется
www1, www2, www3.

620
00:29:43,870 --> 00:29:47,200
И получается, что внутри
HTTP-запрос эта особенность.

621
00:29:47,200 --> 00:29:48,950
И я собираюсь
смоделировать это следующим образом.

622
00:29:48,950 --> 00:29:53,230
>> Я собираюсь открыть тот же
Вкладка девелоперская сеть, как и прежде всего

623
00:29:53,230 --> 00:29:55,560
таким образом, мы можем видеть, что происходит
на под капотом.

624
00:29:55,560 --> 00:29:57,130
Я собираюсь очистить экран.

625
00:29:57,130 --> 00:30:03,420
И я собираюсь идти, давайте
говорят, http://harvard.edu.

626
00:30:03,420 --> 00:30:06,560
Теперь для любой
бизнес-причины, Harvard

627
00:30:06,560 --> 00:30:08,930
решил, как и многие другие,
многие другие веб-сайты,

628
00:30:08,930 --> 00:30:12,712
стандартизировать его
веб-сайт по www.harvard.edu

629
00:30:12,712 --> 00:30:14,420
для технических
и маркетинговых соображений.

630
00:30:14,420 --> 00:30:16,326
Это просто вид в
Моде иметь WWW.

631
00:30:16,326 --> 00:30:20,500
>> Таким образом, сервер имеет в Гарварде
чтобы как-то перенаправить пользователя,

632
00:30:20,500 --> 00:30:23,830
как я продолжаю говорить, от
один URL на другой.

633
00:30:23,830 --> 00:30:24,670
Как это работает?

634
00:30:24,670 --> 00:30:26,740
Что ж, позвольте мне идти вперед и нажмите клавишу ВВОД.

635
00:30:26,740 --> 00:30:30,830
И обратите внимание на URL действительно быстро
изменено на www.harvard.edu.

636
00:30:30,830 --> 00:30:35,560
Позвольте мне прокрутить назад в этом
история и нажмите на эту отлаживать

637
00:30:35,560 --> 00:30:37,650
диагностическая информация, если вы будете.

638
00:30:37,650 --> 00:30:39,170
Позвольте мне взглянуть на мою просьбу.

639
00:30:39,170 --> 00:30:41,020
>> Так вот запрос, который я сделал.

640
00:30:41,020 --> 00:30:44,870
И заметьте, что это согласуется с видом
запроса я сделал Facebook раньше.

641
00:30:44,870 --> 00:30:48,010
Но обратите внимание на реакцию.

642
00:30:48,010 --> 00:30:50,430
Что изменилось в
ответ на этот раз?

643
00:30:50,430 --> 00:30:51,890
>> ЗРИТЕЛИ: [неразборчиво]

644
00:30:51,890 --> 00:30:54,290
>> DAVID Маланом: Да, так что это не 200 OK.

645
00:30:54,290 --> 00:30:56,130
Это не 404 Not Found.

646
00:30:56,130 --> 00:31:00,150
Это 301 Moved Постоянно, который
это своего рода забавный способ сказать,

647
00:31:00,150 --> 00:31:05,270
Harvard повысил и переехал
в другом месте www.harvard.edu.

648
00:31:05,270 --> 00:31:08,220
301 означает, что
это редирект.

649
00:31:08,220 --> 00:31:12,812
И где если пользователь
по-видимому, быть перенаправлены?

650
00:31:12,812 --> 00:31:15,520
Там в дополнительный лакомый кусочек
информация внутри этого конверта.

651
00:31:15,520 --> 00:31:19,650
И каждая из этих линий теперь будет
начать называть заголовок HTTP.

652
00:31:19,650 --> 00:31:23,620
Заголовок просто ключевое значение
pair-- что-то что-то двоеточие.

653
00:31:23,620 --> 00:31:24,850
Это часть информации.

654
00:31:24,850 --> 00:31:27,131
Где следует новый
Откуда, по-видимому быть?

655
00:31:27,131 --> 00:31:31,120

656
00:31:31,120 --> 00:31:33,692
Обратите внимание на последнюю строку
среди всех этих заголовков.

657
00:31:33,692 --> 00:31:34,940
>> ЗРИТЕЛИ: [неразборчиво]

658
00:31:34,940 --> 00:31:37,148
>> DAVID Маланом: Да, так что есть
Дополнительная информация.

659
00:31:37,148 --> 00:31:40,120
Первая строка, что я выделил
говорит 301 Moved постоянно.

660
00:31:40,120 --> 00:31:42,820
Ну, где он переехал?

661
00:31:42,820 --> 00:31:45,340
Последнее line-- и они этого не делают
должны быть в таком порядке.

662
00:31:45,340 --> 00:31:47,020
Это может быть случайным.

663
00:31:47,020 --> 00:31:52,120
Расположение толстой кишки означает, эй
браузер, перейдите на этот URL вместо.

664
00:31:52,120 --> 00:31:55,180
>> Так браузеры понимают HTTP перенаправляет.

665
00:31:55,180 --> 00:31:57,540
И это очень, очень
распространенный способ подпрыгивая

666
00:31:57,540 --> 00:31:59,680
пользователь из одного места в другое.

667
00:31:59,680 --> 00:32:02,660
Например, если вы когда-либо пробовали
посетить веб-сайт, который вы не

668
00:32:02,660 --> 00:32:06,360
вошел в, вы можете неожиданно найти
себя на новом URL вообще быть

669
00:32:06,360 --> 00:32:07,530
будет предложено войти в систему.

670
00:32:07,530 --> 00:32:08,400
>> Как это работает?

671
00:32:08,400 --> 00:32:10,920
Сервер, вероятно, отправляя 301.

672
00:32:10,920 --> 00:32:14,510
Там также другие номера, как
302, несколько отличается по смыслу,

673
00:32:14,510 --> 00:32:16,490
что отправить вас на другой URL.

674
00:32:16,490 --> 00:32:18,770
А потом сервер,
как только вы вошли в систему,

675
00:32:18,770 --> 00:32:22,000
отправит вас туда, где
вы на самом деле предназначены.

676
00:32:22,000 --> 00:32:27,700
>> Так что, то, плохо
сконструированные сайты делать?

677
00:32:27,700 --> 00:32:31,340
Когда вы посещаете
www.acme.com, и они просто

678
00:32:31,340 --> 00:32:35,490
случается, назвали своих серверов
www1, www2, www3, и так далее,

679
00:32:35,490 --> 00:32:39,100
они очень simply--
которая является справедливой, но очень

680
00:32:39,100 --> 00:32:46,080
своего рода foolishly-- перенаправлять вас
на самом деле по-другому с именем сервера.

681
00:32:46,080 --> 00:32:48,650
И это работает прекрасно.

682
00:32:48,650 --> 00:32:49,930
Это приятно и легко.

683
00:32:49,930 --> 00:32:52,200
>> Мы видели, как это было бы
сделано под капотом

684
00:32:52,200 --> 00:32:53,490
в виртуальном конверте.

685
00:32:53,490 --> 00:32:56,450
Но почему это возможно, является
плохое инженерное решение?

686
00:32:56,450 --> 00:33:00,345
И почему я вроде снисходительного
к этой конкретной техники

687
00:33:00,345 --> 00:33:00,845
подход?

688
00:33:00,845 --> 00:33:06,420

689
00:33:06,420 --> 00:33:07,850
Утверждают, почему это плохо.

690
00:33:07,850 --> 00:33:09,375
Бен?

691
00:33:09,375 --> 00:33:10,250
ЗРИТЕЛИ: [неразборчиво]

692
00:33:10,250 --> 00:33:12,864

693
00:33:12,864 --> 00:33:16,030
DAVID Маланом: Каждый сервер должен будет
есть дубликат сайта.

694
00:33:16,030 --> 00:33:16,738
Я в порядке с этим.

695
00:33:16,738 --> 00:33:19,490
И в самом деле, это то, что я
предположим, для всей этой истории,

696
00:33:19,490 --> 00:33:22,104
так как если мы wanted-- хорошо
на самом деле, для Дана ранее, за исключением

697
00:33:22,104 --> 00:33:25,270
Предложение, где если у вас есть разные
серверы делать разные вещи, то

698
00:33:25,270 --> 00:33:27,740
может быть, они могли бы быть на самом деле
функционально делать разные вещи.

699
00:33:27,740 --> 00:33:30,698
>> Но даже тогда, в какой-то момент, ваш
базы данных собирается получить перегружены.

700
00:33:30,698 --> 00:33:33,030
Сервер статические активы
собирается получить перегружены.

701
00:33:33,030 --> 00:33:34,850
Так что в какой-то момент, мы
назад в этой истории, где мы

702
00:33:34,850 --> 00:33:36,475
необходимо иметь несколько копий одного и того же.

703
00:33:36,475 --> 00:33:37,395
Так что я в порядке с этим.

704
00:33:37,395 --> 00:33:38,270
ЗРИТЕЛИ: [неразборчиво]

705
00:33:38,270 --> 00:33:42,340

706
00:33:42,340 --> 00:33:45,350
>> DAVID Маланом: ОК, так что некоторые страницы
может быть непропорционально популярным.

707
00:33:45,350 --> 00:33:50,460
И так закрепляющий на один адрес
не обязательно самое лучшее.

708
00:33:50,460 --> 00:33:51,110
[Неразборчиво]?

709
00:33:51,110 --> 00:33:51,985
>> ЗРИТЕЛИ: [неразборчиво]

710
00:33:51,985 --> 00:33:54,770

711
00:33:54,770 --> 00:33:57,623
>> DAVID Маланом: Что вы имеете в виду под этим?

712
00:33:57,623 --> 00:33:58,498
ЗРИТЕЛИ: [неразборчиво]

713
00:33:58,498 --> 00:34:03,820

714
00:34:03,820 --> 00:34:05,072
>> DAVID Маланом: Да, точно.

715
00:34:05,072 --> 00:34:07,280
Таким образом, вы не хотите
обязательно have-- вас, конечно,

716
00:34:07,280 --> 00:34:11,370
не хотите, чтобы ваши пользователи
вручную вводить в www1 или www2.

717
00:34:11,370 --> 00:34:14,550
С точки зрения брендинга, его
просто выглядит немного смешно.

718
00:34:14,550 --> 00:34:17,340
Если вы просто хотите своего рода
чистый, элегантный опыт,

719
00:34:17,340 --> 00:34:20,364
имея эти рода случайным образом
пронумерованные URL-адреса на самом деле не очень хорошо.

720
00:34:20,364 --> 00:34:22,780
Потому что тогда пользователи, безусловно,
собирается копировать и вставлять их

721
00:34:22,780 --> 00:34:24,449
в сообщения электронной почты или мгновенные сообщения.

722
00:34:24,449 --> 00:34:25,659
>> Теперь они распространяющейся.

723
00:34:25,659 --> 00:34:28,600
Теперь вы своего рода запутанным СВОЙ
менее технически аудитории, кто думает

724
00:34:28,600 --> 00:34:32,239
Ваш веб-адрес www2.something.com.

725
00:34:32,239 --> 00:34:35,434
Там нет убедительных семантики этого.

726
00:34:35,434 --> 00:34:38,100
Это как раз случается быть основной
техническая деталь, что вы имеете

727
00:34:38,100 --> 00:34:40,190
пронумерованы серверы таким образом.

728
00:34:40,190 --> 00:34:45,760
>> И еще хуже, что, если, например,
может быть, во время рождественских праздников когда это

729
00:34:45,760 --> 00:34:50,090
бизнес действительно процветает,
вы получили www1 через www99,

730
00:34:50,090 --> 00:34:53,530
но в январе и феврале и
вперед, вы выключаете половину тех,

731
00:34:53,530 --> 00:34:56,440
поэтому у вас есть только www1 через www50?

732
00:34:56,440 --> 00:35:01,963
Что подразумевается теперь, что
очень разумное решение бизнес?

733
00:35:01,963 --> 00:35:02,838
ЗРИТЕЛИ: [неразборчиво]

734
00:35:02,838 --> 00:35:05,628

735
00:35:05,628 --> 00:35:07,752
DAVID Маланом: Вам нужно
управлять всеми теми, до сих пор.

736
00:35:07,752 --> 00:35:10,515
ЗРИТЕЛИ: [неразборчиво]

737
00:35:10,515 --> 00:35:11,390
DAVID Маланом: Совершенно верно.

738
00:35:11,390 --> 00:35:12,681
Это своего рода улова там.

739
00:35:12,681 --> 00:35:16,800
Если ваши клиенты находятся в привычку
закладок вещи, отправки по электронной почте их, просто

740
00:35:16,800 --> 00:35:19,351
сохранения URL где-нибудь, или
если это только в их авто

741
00:35:19,351 --> 00:35:22,350
завершить в свой браузер таким образом, они
на самом деле не намеренно вводить его,

742
00:35:22,350 --> 00:35:25,560
это просто происходит, они могли бы,
за 11 месяцев в году

743
00:35:25,560 --> 00:35:27,190
эффективно, достигают в тупик.

744
00:35:27,190 --> 00:35:30,100
И только самые проницательные из
пользователи собирается реализовать,

745
00:35:30,100 --> 00:35:32,040
Возможно, я должен вручную
удалить этот номер.

746
00:35:32,040 --> 00:35:35,610
Я имею в виду, это просто не произойдет
с большим количеством пользователей, так что плохо для бизнеса,

747
00:35:35,610 --> 00:35:37,750
плохая инженерная реализация мудрым.

748
00:35:37,750 --> 00:35:40,230
>> Так, к счастью, это не нужно.

749
00:35:40,230 --> 00:35:43,120
Оказывается, что
балансиры нагрузка может сделать

750
00:35:43,120 --> 00:35:48,130
это вместо того, чтобы говорить, когда А
делает request-- эй, перейти к 1.

751
00:35:48,130 --> 00:35:50,280
Другими словами, вместо того, чтобы
отправки которые перенаправляют

752
00:35:50,280 --> 00:35:53,540
таким образом, что первый шаг в этом
Процесс является иди сюда,

753
00:35:53,540 --> 00:35:55,280
он тогда сказал, чтобы пойти в другом месте.

754
00:35:55,280 --> 00:35:57,530
И так шаг три это, он идет в другом месте.

755
00:35:57,530 --> 00:36:04,600
>> Вместо этого вы можете продолжать маршрут, чтобы
продолжать использовать этот термин, все данные А в

756
00:36:04,600 --> 00:36:10,590
через балансировки нагрузки таким образом, чтобы он
никогда не контакты 1, 2, или 3 непосредственно.

757
00:36:10,590 --> 00:36:15,150
Весь трафик действительно получает "разгромили"
балансировки нагрузки на себя.

758
00:36:15,150 --> 00:36:17,524
И вот теперь мы вроде
намеренно размывает линии

759
00:36:17,524 --> 00:36:18,690
среди этих различных устройств.

760
00:36:18,690 --> 00:36:20,930
Балансировщик нагрузки может данных маршрута.

761
00:36:20,930 --> 00:36:22,435
Это просто функция, которую она имеет.

762
00:36:22,435 --> 00:36:25,420
>> Таким образом, балансировки нагрузки, также, это
часть программного обеспечения, на самом деле.

763
00:36:25,420 --> 00:36:27,130
И маршрутизатор является частью программного обеспечения.

764
00:36:27,130 --> 00:36:29,660
И вы можете абсолютно иметь
две части программного обеспечения внутри

765
00:36:29,660 --> 00:36:34,000
одного физического компьютера поэтому нагрузки
балансир может сделать эти несколько вещей.

766
00:36:34,000 --> 00:36:36,130
>> Таким образом, есть еще один способ
чтобы сделать это, который на самом деле

767
00:36:36,130 --> 00:36:39,670
восходит к своего рода первых принципов
в DNS, о котором мы говорили

768
00:36:39,670 --> 00:36:40,230
до разрыва.

769
00:36:40,230 --> 00:36:41,634
DNS была система доменных имен.

770
00:36:41,634 --> 00:36:43,550
Помните, что вы можете
запрашивает сервер DNS, что

771
00:36:43,550 --> 00:36:46,460
IP-адрес
google.com, facebook.com?

772
00:36:46,460 --> 00:36:48,250
>> И мы действительно можем сделать это.

773
00:36:48,250 --> 00:36:51,940
Инструмент мы не использовали ранее,
тот, который так же, как доступный,

774
00:36:51,940 --> 00:36:55,510
называется Nslookup, для сервера имен поиска.

775
00:36:55,510 --> 00:36:57,410
И я просто хочу, чтобы ввести facebook.com.

776
00:36:57,410 --> 00:37:02,500
И я вижу, что IP Facebook,
адрес, по-видимому это.

777
00:37:02,500 --> 00:37:05,520
Позвольте мне идти вперед и скопировать
что, перейти в браузер,

778
00:37:05,520 --> 00:37:11,690
и перейти к HTTP: // и что
IP-адрес и нажмите клавишу Enter.

779
00:37:11,690 --> 00:37:14,140
И действительно, это, кажется, работает.

780
00:37:14,140 --> 00:37:18,610
>> Сейчас работает в обратном направлении, что было
внутри виртуального конверта

781
00:37:18,610 --> 00:37:25,454
что Facebook ответил, когда
Я посетил, что IP-адрес напрямую?

782
00:37:25,454 --> 00:37:26,745
Потому что уведомление, где я сейчас?

783
00:37:26,745 --> 00:37:29,250

784
00:37:29,250 --> 00:37:32,484
Где я сейчас, адрес?

785
00:37:32,484 --> 00:37:33,450
>> ЗРИТЕЛИ: [неразборчиво]

786
00:37:33,450 --> 00:37:36,116
>> DAVID Маланом: В безопасной версии,
и на www.facebook.com.

787
00:37:36,116 --> 00:37:38,520
Так что это даже не просто
защищенный IP-адрес.

788
00:37:38,520 --> 00:37:42,650
Facebook приняла на себя
сказать, что это смешно.

789
00:37:42,650 --> 00:37:45,710
Мы не будем держать вас в этом
некрасиво глядя URL это числовой.

790
00:37:45,710 --> 00:37:50,120
Мы собираемся отправить вам HTTP
перенаправление посредством того же заголовка

791
00:37:50,120 --> 00:37:53,010
что мы увидели before--
Откуда-то толстого кишечника.

792
00:37:53,010 --> 00:37:56,340
>> А так это просто означает, что под
капот по-прежнему этот IP-адрес.

793
00:37:56,340 --> 00:37:59,010
Каждый компьютер в сети Интернет
имеет IP-адрес, он, казалось бы.

794
00:37:59,010 --> 00:38:01,480
Но вы не обязательно должны
выставить что пользователю.

795
00:38:01,480 --> 00:38:07,190
И так же, как еще в тот день, там
был 1-800-Collect, 1-800-С-О-Л-Л-Е-С-Т,

796
00:38:07,190 --> 00:38:11,700
в США, был способ сделать Collect
звонки через очень легко запоминающегося телефон

797
00:38:11,700 --> 00:38:17,140
номер, или 1-800-MATTRESS купить кровать,
и подобные Мнемоники, что вы даже видите

798
00:38:17,140 --> 00:38:20,460
по телефону вид рода
до сих пор, что письма карта с номерами.

799
00:38:20,460 --> 00:38:21,470
>> Теперь, почему это?

800
00:38:21,470 --> 00:38:26,080
Ну, это намного легче запомнить
1-800-MATTRESS или 1-800-Collect вместо

801
00:38:26,080 --> 00:38:29,100
1-800-то что-то что-то
что-то что-то что-то

802
00:38:29,100 --> 00:38:31,030
что-то, где каждый
из них является цифрой.

803
00:38:31,030 --> 00:38:34,390
Точно так же, как мир узнал
быстро, что мы не должны

804
00:38:34,390 --> 00:38:35,940
есть люди, запоминать IP-адреса.

805
00:38:35,940 --> 00:38:36,826
Это было бы глупо.

806
00:38:36,826 --> 00:38:38,200
Мы будем использовать имена вместо.

807
00:38:38,200 --> 00:38:40,420
И именно поэтому DNS был рожден.

808
00:38:40,420 --> 00:38:45,510
>> Хорошо, так и с тем, что, с точки зрения
балансировки нагрузки, давайте попробуем yahoo.com.

809
00:38:45,510 --> 00:38:47,030
Ну, это интересно.

810
00:38:47,030 --> 00:38:51,464
Yahoo, похоже, возвращаются три IP-адреса.

811
00:38:51,464 --> 00:38:53,940
Так что из этого вывод,
если вы могли бы, что такое

812
00:38:53,940 --> 00:38:58,600
еще один способ, который мы могли бы реализовать
это понятие балансировки нагрузки

813
00:38:58,600 --> 00:39:04,310
может быть, даже не используя физический
устройство, это новое физическое устройство?

814
00:39:04,310 --> 00:39:08,070
>> Другими словами, я могу отнять
финансирование у вас есть для балансировки нагрузки

815
00:39:08,070 --> 00:39:10,990
и сказать вам, чтобы использовать некоторые существующие
часть аппаратных средств для реализации

816
00:39:10,990 --> 00:39:12,680
это понятие балансировки нагрузки?

817
00:39:12,680 --> 00:39:18,870

818
00:39:18,870 --> 00:39:22,510
А спойлер,
да, но что, или как?

819
00:39:22,510 --> 00:39:27,605
Что такое Yahoo, возможно, здесь делает?

820
00:39:27,605 --> 00:39:29,200
Kareem?

821
00:39:29,200 --> 00:39:30,635
Хорошо, Крис?

822
00:39:30,635 --> 00:39:31,510
ЗРИТЕЛИ: [неразборчиво]

823
00:39:31,510 --> 00:39:35,119

824
00:39:35,119 --> 00:39:36,910
DAVID Маланом: Да, все
Три из этих работ.

825
00:39:36,910 --> 00:39:39,890
Так что случайностью, Круговая система,
место расположения-- вы можете просто

826
00:39:39,890 --> 00:39:44,160
использовать существующий кусок головоломки
что мы говорили ранее о DNS

827
00:39:44,160 --> 00:39:49,580
системы и просто сказать, когда первый
Пользователь дня просит yahoo.com,

828
00:39:49,580 --> 00:39:52,970
дать им первый IP-адрес,
как один, заканчивающийся в 45 там.

829
00:39:52,970 --> 00:39:55,762
И в следующий раз, когда пользователь запрашивает
IP-адрес yahoo.com

830
00:39:55,762 --> 00:39:57,970
откуда-то в мире,
дать им второй IP,

831
00:39:57,970 --> 00:39:59,920
затем третий IP, то
первый IP, затем второй.

832
00:39:59,920 --> 00:40:01,850
Или быть умным об этом
и сделать это графически.

833
00:40:01,850 --> 00:40:05,200
Или это случайно и не просто делать
это круговой системе в этой моде.

834
00:40:05,200 --> 00:40:07,580
>> И в этом случае, то
мы даже не нужно

835
00:40:07,580 --> 00:40:10,190
чтобы ввести этот черный
коробка в нашу картину.

836
00:40:10,190 --> 00:40:11,690
Нам не нужно новое устройство.

837
00:40:11,690 --> 00:40:16,930
Мы просто говоря компьютеры
чтобы перейти к серверам напрямую,

838
00:40:16,930 --> 00:40:18,680
эффективно, но не
путем их имени.

839
00:40:18,680 --> 00:40:20,054
Они никогда не должны знать имя.

840
00:40:20,054 --> 00:40:25,690
Они просто говорят, что yahoo.com
карты к любому из этих IP-адресов.

841
00:40:25,690 --> 00:40:28,180
>> Таким образом, он посылает точно такой же запрос.

842
00:40:28,180 --> 00:40:30,100
Но на внешней стороне
конверт, он просто

843
00:40:30,100 --> 00:40:32,740
помещает IP, что он был проинформирован о.

844
00:40:32,740 --> 00:40:35,590
И таким образом, тоже могли бы
мы балансировать нагрузку запросы

845
00:40:35,590 --> 00:40:39,330
просто посылать конверт к
отличается одним из собственных серверов Yahoo,?

846
00:40:39,330 --> 00:40:42,390
>> И если мы будем рыть, мы увидим,
возможно, другие компании с более.

847
00:40:42,390 --> 00:40:44,380
CNN имеет два публично подвергаются.

848
00:40:44,380 --> 00:40:49,610
Хотя на самом деле, если мы делаем это снова
и again-- cnn.com-- вы можете увидеть

849
00:40:49,610 --> 00:40:51,730
они меняют порядок, на самом деле.

850
00:40:51,730 --> 00:40:56,680
Так что механизм
CNN, используя, по-видимому?

851
00:40:56,680 --> 00:40:57,440
>> ЗРИТЕЛИ: Random.

852
00:40:57,440 --> 00:40:59,440
DAVID Маланом: Ну,
может быть случайным, хотя

853
00:40:59,440 --> 00:41:01,110
кажется, езда на велосипеде назад и вперед.

854
00:41:01,110 --> 00:41:04,380
Так что это, вероятно, где Круговая система
они просто переключая заказ так,

855
00:41:04,380 --> 00:41:05,880
что я, вероятно, займет первое.

856
00:41:05,880 --> 00:41:08,860
Мой компьютер будет принимать
первый каждый раз.

857
00:41:08,860 --> 00:41:10,490
Так что это балансировка нагрузки.

858
00:41:10,490 --> 00:41:18,450
И это позволяет нам, в конечном счете,
для отображения данных, или запросы к карте,

859
00:41:18,450 --> 00:41:21,240
на нескольких серверах.

860
00:41:21,240 --> 00:41:24,226
Так что же виды
проблемы в настоящее время все еще существуют?

861
00:41:24,226 --> 00:41:26,350
Такое ощущение, что мы на самом деле просто
решить хорошую проблему.

862
00:41:26,350 --> 00:41:28,740
Мы получили пользователей на разных серверах.

863
00:41:28,740 --> 00:41:31,420
Но-- ой, и Крис, сделал
у вас есть вопрос, прежде чем?

864
00:41:31,420 --> 00:41:34,378
>> ЗРИТЕЛИ: [неразборчиво]

865
00:41:34,378 --> 00:41:43,670

866
00:41:43,670 --> 00:41:45,120
>> DAVID Маланом: Полностью зависит от многого.

867
00:41:45,120 --> 00:41:47,042
Так что же здесь происходит?

868
00:41:47,042 --> 00:41:48,250
И мы действительно можем увидеть это.

869
00:41:48,250 --> 00:41:51,649
Так давайте попробуем Yahoo.

870
00:41:51,649 --> 00:41:52,940
На самом деле, давайте перейдем к Facebook.

871
00:41:52,940 --> 00:41:54,520
Потому что мы знаем, что один работает.

872
00:41:54,520 --> 00:41:56,545
Так что я собираюсь скопировать
что IP-адрес снова.

873
00:41:56,545 --> 00:41:58,820
Я собираюсь закрыть все эти вкладки.

874
00:41:58,820 --> 00:42:03,800
Я собираюсь пойти открытым, что
специальная вкладка сеть здесь.

875
00:42:03,800 --> 00:42:07,800
И я собираюсь посетить только HTTP: //.

876
00:42:07,800 --> 00:42:10,694
А теперь я ударю Enter.

877
00:42:10,694 --> 00:42:11,860
И давайте посмотрим, что произошло.

878
00:42:11,860 --> 00:42:20,662
>> Если я смотрю на эту просьбу, уведомление
что my-- Facebook является плохим примером.

879
00:42:20,662 --> 00:42:22,370
Потому что у них есть
супер фантазии техника

880
00:42:22,370 --> 00:42:25,960
которая скрывает эту деталь от нас.

881
00:42:25,960 --> 00:42:30,690
Позвольте мне использовать Yahoo
instead-- HTTP: // этот IP.

882
00:42:30,690 --> 00:42:36,030
Давайте откроем нашу сеть
Вкладка, сохранить журнал.

883
00:42:36,030 --> 00:42:37,945
И здесь мы идем, Enter.

884
00:42:37,945 --> 00:42:40,669

885
00:42:40,669 --> 00:42:41,210
Забавно.

886
00:42:41,210 --> 00:42:44,480
Хорошо, так вот прославленный 404 сообщение.

887
00:42:44,480 --> 00:42:48,500
Что смешного в том, что они
вероятно, никогда не вернется.

888
00:42:48,500 --> 00:42:51,430
Потому что там, наверное,
не то, что само по себе неправильно.

889
00:42:51,430 --> 00:42:54,050
Они просто намеренно
решили не поддерживать

890
00:42:54,050 --> 00:42:56,250
числовой форме их адреса.

891
00:42:56,250 --> 00:43:00,270
>> Так что мы на самом деле видим в
Вкладка Сеть, если я тяну это здесь,

892
00:43:00,270 --> 00:43:06,140
это, как я говорю, прославленный 404, где
если я смотрю на заголовки ответа,

893
00:43:06,140 --> 00:43:09,070
это то, что я получил here-- 404 Not Found.

894
00:43:09,070 --> 00:43:11,360
Так давайте попробуем друг друга.

895
00:43:11,360 --> 00:43:13,180
Давайте посмотрим, если CNN сотрудничает с нами.

896
00:43:13,180 --> 00:43:19,440
Я захватить один из IP-адресов на CNN,
очистить это, HTTP, ля-ля-ля-ля.

897
00:43:19,440 --> 00:43:21,620
Таким образом, в ответ на Криса
вопрос, что один работал.

898
00:43:21,620 --> 00:43:24,140

899
00:43:24,140 --> 00:43:26,255
>> И давайте перейдем к заголовков ответа.

900
00:43:26,255 --> 00:43:30,810

901
00:43:30,810 --> 00:43:33,640
Вообще-то нет, все в порядке, я
изо всех сил, чтобы найти рабочий пример.

902
00:43:33,640 --> 00:43:38,270
Так CNN решил, что мы просто оставить вас
на любой адрес, вы на самом деле посетить,

903
00:43:38,270 --> 00:43:40,359
вопросы брендинга в сторону.

904
00:43:40,359 --> 00:43:43,275
Но то, что не происходило бы, если
мы могли видеть его в случае Facebook,

905
00:43:43,275 --> 00:43:46,700
это мы получили бы 301 Moved
Постоянно, скорее всего,

906
00:43:46,700 --> 00:43:54,420
внутри которого находится
Местонахождение: https: //www.facebook.com.

907
00:43:54,420 --> 00:44:01,210
И шансы www.facebook.com является
псевдоним для точного же сервера мы просто

908
00:44:01,210 --> 00:44:01,710
пошел в.

909
00:44:01,710 --> 00:44:03,500
>> Так что это немного контрпродуктивным.

910
00:44:03,500 --> 00:44:05,170
Мы в буквальном смысле посещения сервера.

911
00:44:05,170 --> 00:44:07,040
Сервер затем говорит нам, уйти.

912
00:44:07,040 --> 00:44:08,320
Перейти к этому другому адресу.

913
00:44:08,320 --> 00:44:10,870
Но мы просто так случается,
возвращаясь к тому же серверу.

914
00:44:10,870 --> 00:44:14,550
Но, вероятно, мы теперь остаться на том, что
Сервер без этого назад и вперед.

915
00:44:14,550 --> 00:44:18,600
Потому что теперь мы используем названный
версия сайта, а не цифровой.

916
00:44:18,600 --> 00:44:20,060
Хороший вопрос.

917
00:44:20,060 --> 00:44:23,690
>> ОК, так что если мы теперь assume-- мы
решили балансировки нагрузки.

918
00:44:23,690 --> 00:44:25,894
Теперь у нас есть механизм,
будь то с помощью DNS,

919
00:44:25,894 --> 00:44:29,060
будь то с помощью этого черного ящика, будь то
это с помощью любого из этих методов.

920
00:44:29,060 --> 00:44:33,810
Мы можем принять запрос пользователя в систему и
выяснить, к какому серверу, 1, 2 или 3,

921
00:44:33,810 --> 00:44:35,420
послать его или ее.

922
00:44:35,420 --> 00:44:39,180
>> Что начинает разрушаться о нашем сайте?

923
00:44:39,180 --> 00:44:41,160
Другими словами, мы имеем
построил бизнес, который

924
00:44:41,160 --> 00:44:43,480
был ранее на одном сервере.

925
00:44:43,480 --> 00:44:46,870
Теперь, когда бизнес работает
на нескольких серверах.

926
00:44:46,870 --> 00:44:51,770
Какие допущения,
какие виды проектных решений,

927
00:44:51,770 --> 00:44:54,870
может теперь ломать?

928
00:44:54,870 --> 00:44:55,745
>> Это менее очевидно.

929
00:44:55,745 --> 00:44:58,620
Но давайте посмотрим, если мы не можем поставить наши
палец на некоторые проблемы мы

930
00:44:58,620 --> 00:44:59,780
создали для себя.

931
00:44:59,780 --> 00:45:02,750
Опять же, это вроде как проведение
вниз утечки в шланге.

932
00:45:02,750 --> 00:45:05,094
А теперь какой-то новый вопрос
выдвинулась здесь.

933
00:45:05,094 --> 00:45:07,880

934
00:45:07,880 --> 00:45:11,380
>> ЗРИТЕЛИ: [неразборчиво]

935
00:45:11,380 --> 00:45:16,574

936
00:45:16,574 --> 00:45:19,240
DAVID Маланом: Хорошо, так что мы должны
постоянно растет наше пространство на жестком диске.

937
00:45:19,240 --> 00:45:20,450
Прямо сейчас я в порядке с этим.

938
00:45:20,450 --> 00:45:23,212
Потому что я думаю, что могу
по горизонтали масштаба.

939
00:45:23,212 --> 00:45:26,420
Подобно этому, если я бегу низко, я просто получить
четвертый сервер, может быть, пятый сервер,

940
00:45:26,420 --> 00:45:30,820
а затем увеличить нашу способность
еще на 30% или 50% или этажерки.

941
00:45:30,820 --> 00:45:32,759
Так что я в порядке с этим, по крайней мере сейчас.

942
00:45:32,759 --> 00:45:33,634
ЗРИТЕЛИ: [неразборчиво]

943
00:45:33,634 --> 00:45:37,314

944
00:45:37,314 --> 00:45:38,980
DAVID Маланом: ОК, так что это хорошая точка.

945
00:45:38,980 --> 00:45:42,340
Итак, пусть серверы
не являются идентичными.

946
00:45:42,340 --> 00:45:45,260
И обслуживание клиентов
или по электронной почте эквивалент

947
00:45:45,260 --> 00:45:48,690
получает какое-то сообщение от пользователя
говоря, это не работает правильно.

948
00:45:48,690 --> 00:45:52,070
Вполне возможно, иногда,
что, возможно, один или несколько серверов

949
00:45:52,070 --> 00:45:55,000
действует немного криво, но не
другие, которые, безусловно, может

950
00:45:55,000 --> 00:45:57,096
сделать это труднее преследовать вопрос.

951
00:45:57,096 --> 00:45:58,720
Вы, возможно, придется искать несколько мест.

952
00:45:58,720 --> 00:46:00,960
>> То есть проявление
другого рода ошибки,

953
00:46:00,960 --> 00:46:03,950
которая является то, что вы, вероятно, следует
разработали инфраструктуру так

954
00:46:03,950 --> 00:46:06,200
что все действительно идентичны.

955
00:46:06,200 --> 00:46:10,390
Но это действительно показывает новую проблему
что у нас не было раньше.

956
00:46:10,390 --> 00:46:11,715
Что еще?

957
00:46:11,715 --> 00:46:12,590
ЗРИТЕЛИ: [неразборчиво]

958
00:46:12,590 --> 00:46:16,390

959
00:46:16,390 --> 00:46:19,500
>> DAVID Маланом: Да,
есть еще сложность.

960
00:46:19,500 --> 00:46:20,792
Там физически более проводов.

961
00:46:20,792 --> 00:46:21,750
Там другое устройство.

962
00:46:21,750 --> 00:46:26,310
На самом деле, я внес фундаментальный
Понятие и фундаментальная проблема

963
00:46:26,310 --> 00:46:28,300
Известно, как одна точка
неудачи, которая,

964
00:46:28,300 --> 00:46:30,110
даже если вы никогда не слышали
фраза, вероятно, можно

965
00:46:30,110 --> 00:46:31,780
Теперь работать в обратном направлении, и понять это.

966
00:46:31,780 --> 00:46:35,560
Что это значит, что у меня есть один
точка отказа в моей архитектуры?

967
00:46:35,560 --> 00:46:39,694
И архитектуры, я просто
имею в виду топологию этого.

968
00:46:39,694 --> 00:46:40,610
>> ЗРИТЕЛИ: [неразборчиво]

969
00:46:40,610 --> 00:46:42,901
>> DAVID Маланом: Да, что если
выравниватель нагрузки идет вниз?

970
00:46:42,901 --> 00:46:46,290
Я вставил этот средний человек, у которого
цель в жизни, чтобы решить проблему.

971
00:46:46,290 --> 00:46:47,740
Но я представил новую проблему.

972
00:46:47,740 --> 00:46:49,350
Новая утечка возникла в шланге.

973
00:46:49,350 --> 00:46:53,500
Потому что теперь, если балансировки нагрузки
умирает или разрывы или misfunctions,

974
00:46:53,500 --> 00:46:56,350
Теперь я потерял доступ к
все три из моих серверов.

975
00:46:56,350 --> 00:46:58,880
А до этого, я не сделал
есть этот посредник.

976
00:46:58,880 --> 00:47:03,020
И так это новая проблема, возможно.

977
00:47:03,020 --> 00:47:05,245
Мы вернемся к
как мы можем исправить это.

978
00:47:05,245 --> 00:47:06,734
>> ЗРИТЕЛИ: [неразборчиво]

979
00:47:06,734 --> 00:47:08,400
DAVID Маланом: Это было бы один подход.

980
00:47:08,400 --> 00:47:13,926
Да, и так это будет довольно
отверстие крысы мы начинаем идти вниз.

981
00:47:13,926 --> 00:47:15,800
Но давайте вернемся к
что в мгновение.

982
00:47:15,800 --> 00:47:17,299
Какие еще проблемы мы создали?

983
00:47:17,299 --> 00:47:25,540

984
00:47:25,540 --> 00:47:27,470
>> Так Дэн упомянул базу данных ранее.

985
00:47:27,470 --> 00:47:29,500
И даже если вы не
слишком хорошо знакомы технически,

986
00:47:29,500 --> 00:47:33,220
база данных просто сервер, на котором
изменение данных обычно хранится,

987
00:47:33,220 --> 00:47:36,430
может быть, кто-то для того поставил,
ваш профиль пользователя, ваше имя,

988
00:47:36,430 --> 00:47:40,810
ваш адрес электронной почты, то, что может
быть введены или изменены с течением времени.

989
00:47:40,810 --> 00:47:44,599
>> Ранее моя база данных была на
тот же сервер, как мой веб-сервер.

990
00:47:44,599 --> 00:47:46,390
Потому что я только что был один
веб-хостинг аккаунт.

991
00:47:46,390 --> 00:47:48,480
Все было в том же самом месте.

992
00:47:48,480 --> 00:47:54,200
Где я должен поставить свою базу данных
Теперь, на сервере 1, 2 или 3?

993
00:47:54,200 --> 00:47:55,100
>> ЗРИТЕЛИ: 4.

994
00:47:55,100 --> 00:47:58,070
>> DAVID Маланом: 4, ОК, все
Хорошо, так что давайте пойдем туда.

995
00:47:58,070 --> 00:48:01,650
Так что я собираюсь поставить свою
database-- и давайте

996
00:48:01,650 --> 00:48:06,520
начать обозначать эти WWW, WWW, WWW.

997
00:48:06,520 --> 00:48:08,780
И я собираюсь сказать,
это номер четыре.

998
00:48:08,780 --> 00:48:11,270
И я скажу БД для базы данных.

999
00:48:11,270 --> 00:48:12,870
Хорошо, мне это нравится.

1000
00:48:12,870 --> 00:48:17,021
Какую линию я должен
предположительно рисунок здесь?

1001
00:48:17,021 --> 00:48:18,850
>> ЗРИТЕЛИ: [неразборчиво]

1002
00:48:18,850 --> 00:48:22,740
>> DAVID Маланом: Да, так что код,
как мы обсудим завтра,

1003
00:48:22,740 --> 00:48:24,900
предположительно такой же,
на всех трех серверах.

1004
00:48:24,900 --> 00:48:28,374
Но теперь необходимо подключить не к
базы данных на локальном компьютере, но в другом месте.

1005
00:48:28,374 --> 00:48:29,040
И это прекрасно.

1006
00:48:29,040 --> 00:48:31,623
Мы можем просто дать к базе данных,
имя, как у нас, или номер.

1007
00:48:31,623 --> 00:48:33,930
И это все работает отлично.

1008
00:48:33,930 --> 00:48:35,820
Но что же мы сделали?

1009
00:48:35,820 --> 00:48:40,640
Мы горизонтально масштабируется при наличии
три сервера вместо одного, который

1010
00:48:40,640 --> 00:48:41,140
хороший.

1011
00:48:41,140 --> 00:48:44,240
Потому что теперь мы можем обрабатывать
в три раза больше нагрузки.

1012
00:48:44,240 --> 00:48:47,710
>> А еще лучше, если один или два
из этих серверов выходит из строя,

1013
00:48:47,710 --> 00:48:49,350
мой бизнес может продолжать работать.

1014
00:48:49,350 --> 00:48:53,960
Потому что я до сих пор один, даже если я
вид прихрамывая с точки зрения производительности.

1015
00:48:53,960 --> 00:49:01,020
Но то, что новая проблема есть я
введены путем перемещения базы данных

1016
00:49:01,020 --> 00:49:04,350
для этого отдельный сервер
а не на 1, 2 и 3?

1017
00:49:04,350 --> 00:49:05,412
>> ЗРИТЕЛИ: [неразборчиво]

1018
00:49:05,412 --> 00:49:08,120
DAVID Маланом: Да, так что теперь у меня есть
другая единая точка отказа.

1019
00:49:08,120 --> 00:49:12,330
Если моя база данных умирает, или нужно
быть повышен, или независимо от того, теперь уверен,

1020
00:49:12,330 --> 00:49:13,610
мой веб-сайт в Интернете.

1021
00:49:13,610 --> 00:49:16,270
И я могу служить статическим,
неизменное содержание.

1022
00:49:16,270 --> 00:49:21,210
Но я не могу позволить пользователям войти в систему или изменить
ничего или заказать что-либо, что еще хуже.

1023
00:49:21,210 --> 00:49:24,120
Потому что если 4 отсутствует,
затем 1, 2, и 3

1024
00:49:24,120 --> 00:49:27,710
на самом деле не может говорить с ней по определению.

1025
00:49:27,710 --> 00:49:31,560
>> ОК, так что да, и вот почему
Я не решаясь сделать это.

1026
00:49:31,560 --> 00:49:32,690
Так что давайте вернемся к этому.

1027
00:49:32,690 --> 00:49:33,700
Я не имею в виду, чтобы толкать вас.

1028
00:49:33,700 --> 00:49:36,030
Но картина очень
быстро собирается получить стресс.

1029
00:49:36,030 --> 00:49:38,620
Потому что вам нужно, чтобы начать
имея два всего.

1030
00:49:38,620 --> 00:49:41,850
На самом деле, если вы когда-либо видел
кино Как связаться несколько лет назад

1031
00:49:41,850 --> 00:49:45,310
с Джоди Foster-- нет?

1032
00:49:45,310 --> 00:49:47,410
>> ОК, так что для двоих
нас, кто видел контакт,

1033
00:49:47,410 --> 00:49:50,800
есть отношения там, где они
по существу, купил два чего-то

1034
00:49:50,800 --> 00:49:53,250
а не один, хотя и
в два раза дороже.

1035
00:49:53,250 --> 00:49:55,922
Так что это был своего рода игривая
комментарии в фильме.

1036
00:49:55,922 --> 00:49:57,130
Это своего рода связанные с этим.

1037
00:49:57,130 --> 00:49:58,290
Мы могли бы сделать это абсолютно.

1038
00:49:58,290 --> 00:50:00,123
И вы только стоимость
нас в два раза больше денег.

1039
00:50:00,123 --> 00:50:01,300
Но мы вернемся к этому.

1040
00:50:01,300 --> 00:50:02,400
>> Итак, мы решили эту проблему.

1041
00:50:02,400 --> 00:50:03,108
Таким образом, вы знаете, что?

1042
00:50:03,108 --> 00:50:04,450
Это похоже на скользком склоне.

1043
00:50:04,450 --> 00:50:07,033
Я не хочу иметь дело с наличием
иметь дубликат базы данных.

1044
00:50:07,033 --> 00:50:08,037
Это слишком много денег.

1045
00:50:08,037 --> 00:50:08,620
Знаешь что?

1046
00:50:08,620 --> 00:50:12,880
Я хочу иметь свою базу данных
так же, как в первой версии

1047
00:50:12,880 --> 00:50:17,450
где каждый сервер имеет
свою собственную локальную базу данных.

1048
00:50:17,450 --> 00:50:19,480
Так что я просто собираюсь
рисовать дБ на каждом из них.

1049
00:50:19,480 --> 00:50:22,240
>> Так что теперь каждый веб-сервер
идентичен в той степени,

1050
00:50:22,240 --> 00:50:25,650
так как она имеет один и тот же код, то же самое
статические активы, те же рисунки и текст

1051
00:50:25,650 --> 00:50:26,720
и так далее.

1052
00:50:26,720 --> 00:50:29,580
И каждый из них имеет свою собственную базу данных.

1053
00:50:29,580 --> 00:50:31,450
Я установил одну точку
проблемы отказа.

1054
00:50:31,450 --> 00:50:32,570
Теперь у меня есть база данных.

1055
00:50:32,570 --> 00:50:36,210
Независимо от того, который два или один из них
вещи, умирают, всегда есть один слева.

1056
00:50:36,210 --> 00:50:41,156
Но то, что новая проблема есть я создал
что решение Дана избежать?

1057
00:50:41,156 --> 00:50:42,470
>> ЗРИТЕЛИ: [неразборчиво]

1058
00:50:42,470 --> 00:50:44,386
>> DAVID Маланом: Да, я
должны синхронизировать их, не так ли?

1059
00:50:44,386 --> 00:50:47,860
Так как мне нужно синхронизировать
кто собирается where-- другими словами,

1060
00:50:47,860 --> 00:50:50,570
если Алиса посещают мой
сайт, и она случайно

1061
00:50:50,570 --> 00:50:55,070
чтобы получить случайным образом или круглый robined
или независимо от того, на сервер номер один,

1062
00:50:55,070 --> 00:50:58,770
После этого я должен всегда
отправить ее на сервер 1.

1063
00:50:58,770 --> 00:50:59,420
Зачем?

1064
00:50:59,420 --> 00:51:01,540
Потому что, если я посылаю ее
на сервер 2, это будет

1065
00:51:01,540 --> 00:51:03,140
чтобы посмотреть, как она там не существует.

1066
00:51:03,140 --> 00:51:04,450
>> Я не буду иметь ее историю заказов.

1067
00:51:04,450 --> 00:51:06,300
Я не буду иметь ее профиль там.

1068
00:51:06,300 --> 00:51:09,360
И это просто чувствует, как
он приглашает проблемы.

1069
00:51:09,360 --> 00:51:11,400
И когда Боб посещает, я
должны послать его всегда

1070
00:51:11,400 --> 00:51:14,800
к тому же серверу, 2, или в зависимости от того
один, и Чарли к третьему,

1071
00:51:14,800 --> 00:51:15,797
и последовательно.

1072
00:51:15,797 --> 00:51:17,130
Это не лишено смысла, хотя.

1073
00:51:17,130 --> 00:51:19,270
Это называется
секционирования базы данных.

1074
00:51:19,270 --> 00:51:21,270
И на самом деле это было то, что
Facebook сделал на ранних стадиях.

1075
00:51:21,270 --> 00:51:24,020
>> Если вы следовали историю
Facebook, это началось здесь в кампусе

1076
00:51:24,020 --> 00:51:25,770
в качестве www.thefacebook.com.

1077
00:51:25,770 --> 00:51:29,260
Потом она превратилась однажды Марк начал
распространение в другие кампусы

1078
00:51:29,260 --> 00:51:34,450
чтобы быть harvard.thefacebook.com и
mit.thefacebook.com, и, вероятно,

1079
00:51:34,450 --> 00:51:37,027
bu.thefacebook.com, и тому подобное.

1080
00:51:37,027 --> 00:51:38,860
И это потому, что
на ранней стадии, я не думаю,

1081
00:51:38,860 --> 00:51:40,484
вы могли бы иметь друзей по кампусов.

1082
00:51:40,484 --> 00:51:41,410
Но это нормально.

1083
00:51:41,410 --> 00:51:43,930
Потому что любой из Гарварда
был отправлен на этот сервер.

1084
00:51:43,930 --> 00:51:45,744
Любой из БУ получил отсылаться на этот сервер.

1085
00:51:45,744 --> 00:51:47,910
Любой из MIT получил отправлено
к этому server-- в теории.

1086
00:51:47,910 --> 00:51:50,540
Я не совсем знаю, все
лежащих в основе деталей реализации.

1087
00:51:50,540 --> 00:51:55,610
Но он, вероятно, распределяли людей,
их университетского городка, где их сеть была.

1088
00:51:55,610 --> 00:51:58,772
>> Так что это хорошо до точки
где вам нужно два сервера для Гарварда,

1089
00:51:58,772 --> 00:51:59,980
или три сервера для Гарварда.

1090
00:51:59,980 --> 00:52:01,800
А потом, что простота
вид ломается.

1091
00:52:01,800 --> 00:52:03,174
Но это разумный подход.

1092
00:52:03,174 --> 00:52:04,950
Давайте всегда посылает Алисе
к тому же месту,

1093
00:52:04,950 --> 00:52:06,366
всегда посылают Боба на то же место.

1094
00:52:06,366 --> 00:52:09,680
Но что произойдет, если Элис
сервер переходит в автономный режим?

1095
00:52:09,680 --> 00:52:12,300
Боб и Чарли все еще можно купить
вещи и войти на сайт.

1096
00:52:12,300 --> 00:52:13,462
Но Алиса не может.

1097
00:52:13,462 --> 00:52:15,170
Таким образом, вы потеряли треть
вашей пользовательской базы.

1098
00:52:15,170 --> 00:52:16,980
Может быть, это лучше, чем на 100%?

1099
00:52:16,980 --> 00:52:20,580
Но, возможно, было бы хорошо, если бы мы могли
до сих пор поддерживают 100% наших пользователей

1100
00:52:20,580 --> 00:52:23,470
даже если треть наших
серверов переходит в автономный режим.

1101
00:52:23,470 --> 00:52:24,760
>> Таким образом, мы могли бы синхронизировать что?

1102
00:52:24,760 --> 00:52:29,250
Не пользователи, сами по себе, но
базы данных во всех этих серверах.

1103
00:52:29,250 --> 00:52:33,350
Так что теперь мы вроде нужны некоторые
вид соединения

1104
00:52:33,350 --> 00:52:37,880
вот так, что сами серверы
может sync-- не является необоснованным.

1105
00:52:37,880 --> 00:52:40,090
И в самом деле, эта технология существует.

1106
00:52:40,090 --> 00:52:45,550
В мире баз данных, есть
понятие ведущий-ведомый баз данных,

1107
00:52:45,550 --> 00:52:48,240
или первичного и вторичного,
где среди особенностей

1108
00:52:48,240 --> 00:52:51,050
не только для хранения данных
и реагировать с данными,

1109
00:52:51,050 --> 00:52:53,375
но и просто постоянно
синхронизируются друг с другом.

1110
00:52:53,375 --> 00:52:56,480
Так что в любое время вы пишете или сохранить
что-то в эту базу данных,

1111
00:52:56,480 --> 00:53:00,040
он сразу же получает "реплицировать"
для других баз данных, а также.

1112
00:53:00,040 --> 00:53:02,870
>> И в любое время читать из него,
это не имеет значения, где вы находитесь.

1113
00:53:02,870 --> 00:53:05,170
Потому что если в теории
они все синхронизируются, вы

1114
00:53:05,170 --> 00:53:07,710
собирается получить тот же вид данных.

1115
00:53:07,710 --> 00:53:10,800
Так что это звучит идеально.

1116
00:53:10,800 --> 00:53:11,883
Там должен быть подвох.

1117
00:53:11,883 --> 00:53:15,200

1118
00:53:15,200 --> 00:53:18,990
Что может быть подвох?

1119
00:53:18,990 --> 00:53:21,790
>> ЗРИТЕЛИ: [неразборчиво]

1120
00:53:21,790 --> 00:53:25,830
>> DAVID Маланом: Да, так что в три раза
так много вещей может пойти не так.

1121
00:53:25,830 --> 00:53:26,930
Это реальность.

1122
00:53:26,930 --> 00:53:28,480
Все это могло бы быть таким же духом.

1123
00:53:28,480 --> 00:53:30,404
Но кто-то должен настроить их.

1124
00:53:30,404 --> 00:53:33,070
Там очень высокая вероятность того, что
что-то пойдет не так.

1125
00:53:33,070 --> 00:53:38,130
Просто комбинаторно у вас есть
больше материала склонны к ошибкам.

1126
00:53:38,130 --> 00:53:40,505
Что еще плохо потенциально?

1127
00:53:40,505 --> 00:53:41,380
ЗРИТЕЛИ: [неразборчиво]

1128
00:53:41,380 --> 00:53:44,100

1129
00:53:44,100 --> 00:53:46,180
>> DAVID Маланом: Да, так
Синхронизация может быть плохим.

1130
00:53:46,180 --> 00:53:48,110
Даже, как вы могли бы знать
из резервных копий и такие,

1131
00:53:48,110 --> 00:53:50,520
если вы просто слепо делать
резервное копирование, то, что если что-то

1132
00:53:50,520 --> 00:53:51,560
пойти не так, на одной базе данных?

1133
00:53:51,560 --> 00:53:53,018
Вы удалите что-то вы не должны.

1134
00:53:53,018 --> 00:53:56,299
Вы немедленно дублировались
эта проблема везде.

1135
00:53:56,299 --> 00:53:58,840
Так что Виктория была talking-- резервное копирование
было бы хорошо здесь.

1136
00:53:58,840 --> 00:54:00,549
И поэтому мы вернемся к этому.

1137
00:54:00,549 --> 00:54:03,090
И было ясно, что мы говорим
не о резервных копий здесь сами по себе.

1138
00:54:03,090 --> 00:54:08,240
Мы говорим о подлинной репликации
или синхронизации между серверами.

1139
00:54:08,240 --> 00:54:09,110
Они все живут.

1140
00:54:09,110 --> 00:54:12,074
Они не предназначены для
использоваться для резервного копирования.

1141
00:54:12,074 --> 00:54:13,294
>> ЗРИТЕЛИ: [неразборчиво]

1142
00:54:13,294 --> 00:54:14,335
DAVID Маланом: Что это?

1143
00:54:14,335 --> 00:54:14,710
ЗРИТЕЛИ: Higher--

1144
00:54:14,710 --> 00:54:15,751
DAVID Маланом: Более высокая стоимость.

1145
00:54:15,751 --> 00:54:20,180
Мы утроили расходы на
Конечно, хотя по крайней мере, с точки зрения

1146
00:54:20,180 --> 00:54:21,100
аппаратных средств.

1147
00:54:21,100 --> 00:54:23,200
Поскольку база данных является
просто кусок программного обеспечения.

1148
00:54:23,200 --> 00:54:25,189
И веб-сервер является частью программного обеспечения.

1149
00:54:25,189 --> 00:54:27,980
Это, вероятно, бесплатно, если мы используем
любое количество вещей с открытым исходным кодом.

1150
00:54:27,980 --> 00:54:30,480
Но если мы используем
что-то вроде Oracle,

1151
00:54:30,480 --> 00:54:36,574
мы платим Oracle больше денег в
лицензии или Microsoft для доступа.

1152
00:54:36,574 --> 00:54:38,240
Там должен быть какой-то другой улов здесь.

1153
00:54:38,240 --> 00:54:39,240
Это не может быть это просто.

1154
00:54:39,240 --> 00:54:42,990

1155
00:54:42,990 --> 00:54:47,300
>> Так что к точке, я думаю, что это было
Карима, для географии earlier-- или нет,

1156
00:54:47,300 --> 00:54:50,870
Роман, это был, для geography-- предположим
что мы быть умным об этом,

1157
00:54:50,870 --> 00:54:54,080
и мы помещаем один из наших серверов,
и в свою очередь, наши базы данных, в США,

1158
00:54:54,080 --> 00:54:56,910
а другой в Европе, другой в
Южной Америке, другой в Африке,

1159
00:54:56,910 --> 00:55:00,290
другой в Азии, в любом месте мы
могли бы хотеть во всем мире.

1160
00:55:00,290 --> 00:55:04,220
Мы уже знаем из нашего следа
маршруты, что точка А и точка

1161
00:55:04,220 --> 00:55:06,910
B, если они дальше друг от друга,
собираются занять больше времени.

1162
00:55:06,910 --> 00:55:10,312
>> И если некоторые из вас использовали
инструменты, такие как Facebook или Twitter

1163
00:55:10,312 --> 00:55:13,520
или какие-либо из этих сайтов, что в эти дни
постоянно меняются из-за пользователя

1164
00:55:13,520 --> 00:55:16,880
созданные данные, иногда, если вы
ударил перезагрузить или открыть ту же страницу

1165
00:55:16,880 --> 00:55:20,270
в другом браузере, вы видите
разные версии, почти.

1166
00:55:20,270 --> 00:55:22,875
Вы можете увидеть чей-то статус
обновить здесь, но не здесь,

1167
00:55:22,875 --> 00:55:25,500
а затем перезагрузить, а затем его
Оказывается, и вы снова перезагрузить,

1168
00:55:25,500 --> 00:55:26,640
и она исчезает.

1169
00:55:26,640 --> 00:55:29,076
Другими словами, держать
глаз за это, по крайней мере,

1170
00:55:29,076 --> 00:55:30,950
если вы используете социальные
сетей в частности.

1171
00:55:30,950 --> 00:55:33,320
>> Опять же, только потому, что
данных меняется так быстро,

1172
00:55:33,320 --> 00:55:35,710
иногда серверы рассинхронизироваться.

1173
00:55:35,710 --> 00:55:37,230
А может быть, это супер маленькое окно.

1174
00:55:37,230 --> 00:55:39,970
Но 200 миллисекунд, может быть,
даже больше, чем это that--

1175
00:55:39,970 --> 00:55:43,415
собирается занять некоторое ненулевое количество
времени для этих баз данных для синхронизации.

1176
00:55:43,415 --> 00:55:45,290
И мы не только
говорить об одном запросе.

1177
00:55:45,290 --> 00:55:48,540
Если у компании есть тысячи
пользователи использовать его одновременно,

1178
00:55:48,540 --> 00:55:49,460
они могут буфер.

1179
00:55:49,460 --> 00:55:52,240
Другими словами, может
быть очереди или ожидания линии

1180
00:55:52,240 --> 00:55:54,950
прежде, чем все те базы данных
запросы могут синхронизироваться.

1181
00:55:54,950 --> 00:55:56,610
Так что, может быть, на самом деле это несколько секунд.

1182
00:55:56,610 --> 00:55:59,820
>> И в самом деле, это правда, я думаю, что даже
по сей день с Facebook, в результате чего

1183
00:55:59,820 --> 00:56:02,010
при синхронизации с
Восточное побережье на Западное побережье,

1184
00:56:02,010 --> 00:56:06,026
она имеет нетривиальное
задержка распространения, так сказать,

1185
00:56:06,026 --> 00:56:07,650
что вы только отчасти должны терпеть.

1186
00:56:07,650 --> 00:56:11,210
И поэтому это не так много
ошибка, как это реальность

1187
00:56:11,210 --> 00:56:14,230
которые не могли бы видеть пользователи
правильные данные, по крайней мере,

1188
00:56:14,230 --> 00:56:14,970
несколько секунд.

1189
00:56:14,970 --> 00:56:17,410
>> Я вижу это на Twitter много
на самом деле, где я иногда буду

1190
00:56:17,410 --> 00:56:21,227
чирикать в одном окне, откройте другое
затем увидеть его, чтобы подтвердить, что это действительно

1191
00:56:21,227 --> 00:56:22,560
пошли вверх, и это еще не там.

1192
00:56:22,560 --> 00:56:25,340
И я должен вроде перезагрузки,
перезагрузить, reload-- ой, там.

1193
00:56:25,340 --> 00:56:27,150
И это не потому, что он не был спасен.

1194
00:56:27,150 --> 00:56:29,850
Он просто не распространяется
на другие серверы.

1195
00:56:29,850 --> 00:56:33,120
>> Так что это компромисс, too-- вы на самом деле
хотят подвергать себя риску

1196
00:56:33,120 --> 00:56:37,254
что если пользователь переходит к их порядку
история, это не на самом деле там еще?

1197
00:56:37,254 --> 00:56:38,420
Я вижу это на некоторых банках.

1198
00:56:38,420 --> 00:56:42,100
Это всегда раздражает меня, когда, ну, например,
вы можете идти только как шесть месяцев назад

1199
00:56:42,100 --> 00:56:45,160
в выписках в некоторых банках,
даже если в теории они должны

1200
00:56:45,160 --> 00:56:46,576
быть в состоянии иметь все в Интернете.

1201
00:56:46,576 --> 00:56:48,630
Они просто взять вещи в автономном режиме иногда.

1202
00:56:48,630 --> 00:56:51,430
Иногда too-- какой веб-сайт это?

1203
00:56:51,430 --> 00:56:53,570
Там в одно-- о, это GoDaddy, я думаю.

1204
00:56:53,570 --> 00:56:56,620
GoDaddy, когда вы заканчивали
купить доменное имя или что-то,

1205
00:56:56,620 --> 00:56:58,630
они часто дают вам
ссылку на квитанции.

1206
00:56:58,630 --> 00:57:01,470
А если нажать на эту ссылку право
прочь, это часто не работает.

1207
00:57:01,470 --> 00:57:03,290
Он просто говорит, тупик, ничего здесь.

1208
00:57:03,290 --> 00:57:05,450
>> И это тоже из-за
эти задержки распространения.

1209
00:57:05,450 --> 00:57:08,290
Потому что по какой-либо причине, они
занимают немного времени

1210
00:57:08,290 --> 00:57:09,670
на самом деле генерировать это.

1211
00:57:09,670 --> 00:57:12,070
Так что это вроде как вы хотите
вытащить свои волосы в какой-то момент.

1212
00:57:12,070 --> 00:57:14,486
Потому что все, что вы пытаетесь
сделать, это решить простую проблему.

1213
00:57:14,486 --> 00:57:16,590
И мы продолжаем создание новых
проблемы для себя.

1214
00:57:16,590 --> 00:57:18,770
Итак, давайте посмотрим, если мы
может отчасти отменить.

1215
00:57:18,770 --> 00:57:22,730
>> Оказывается, что объединение
базы данных на всех ваших веб-серверов

1216
00:57:22,730 --> 00:57:25,090
это на самом деле не лучшая практика.

1217
00:57:25,090 --> 00:57:27,950
Вообще, то, что инженер
будет делать, или системный архитектор,

1218
00:57:27,950 --> 00:57:30,340
будет иметь разные
ярусы серверов.

1219
00:57:30,340 --> 00:57:33,160
И только ради пространства, я буду
черпают базу данных здесь.

1220
00:57:33,160 --> 00:57:38,060
>> Мы могли бы иметь базу данных и
Сервер номер четыре здесь

1221
00:57:38,060 --> 00:57:42,430
что имеет подключение к
каждый из этих серверов здесь.

1222
00:57:42,430 --> 00:57:45,400
Так что это может быть наш фронт
конец ярус, так как люди сказали бы.

1223
00:57:45,400 --> 00:57:47,770
И это будет наш задний конец уровня.

1224
00:57:47,770 --> 00:57:50,580
И это просто означает, что
они сталкиваются с пользователем.

1225
00:57:50,580 --> 00:57:53,010
А базы данных не обращена к пользователю.

1226
00:57:53,010 --> 00:57:55,480
Нет пользователь может напрямую
доступ к базе данных.

1227
00:57:55,480 --> 00:57:59,280
>> Так давайте теперь, может быть идти вниз
Предлагаемый маршрут Виктория.

1228
00:57:59,280 --> 00:58:00,940
Это единая точка отказа.

1229
00:58:00,940 --> 00:58:02,290
Это делает меня неудобным.

1230
00:58:02,290 --> 00:58:05,790
Так что, возможно,
Наиболее очевидное решение?

1231
00:58:05,790 --> 00:58:06,665
ЗРИТЕЛИ: [неразборчиво]

1232
00:58:06,665 --> 00:58:09,979

1233
00:58:09,979 --> 00:58:11,437
DAVID Маланом: К сожалению, сказать, что снова.

1234
00:58:11,437 --> 00:58:12,352
ЗРИТЕЛИ: [неразборчиво]

1235
00:58:12,352 --> 00:58:13,810
DAVID Маланом: Непроизводственная сервер.

1236
00:58:13,810 --> 00:58:15,364
Что вы имеете в виду?

1237
00:58:15,364 --> 00:58:17,120
>> ЗРИТЕЛИ: [неразборчиво]

1238
00:58:17,120 --> 00:58:19,120
>> DAVID Маланом: О, хорошо, так что резервное копирование.

1239
00:58:19,120 --> 00:58:21,110
ОК, так что мы могли бы сделать это, конечно же.

1240
00:58:21,110 --> 00:58:23,790
И на самом деле это очень часто делается.

1241
00:58:23,790 --> 00:58:26,470
Это может быть база данных номер пять.

1242
00:58:26,470 --> 00:58:28,510
Но это только
соединен с номером четыре.

1243
00:58:28,510 --> 00:58:31,110
И вы могли бы назвать его горячим резервом.

1244
00:58:31,110 --> 00:58:35,080
Эти две базы данных может быть сконфигурирован
просто постоянно синхронизировать

1245
00:58:35,080 --> 00:58:35,850
друг друга.

1246
00:58:35,850 --> 00:58:39,010
И поэтому, если эта машина умирает, для
все, что глупо reason-- жесткий диск

1247
00:58:39,010 --> 00:58:42,100
умирает, кто-то поездок по
шнур, некоторое программное обеспечение является некорректной

1248
00:58:42,100 --> 00:58:46,560
и машина зависает или crashes--
вы могли бы иметь человека в буквальном смысле

1249
00:58:46,560 --> 00:58:51,090
отключите этот от стены
и вместо того, чтобы подключить этот в.

1250
00:58:51,090 --> 00:58:56,340
А потом внутри, давайте скажем,
несколько минут, может быть, через полчаса,

1251
00:58:56,340 --> 00:58:57,210
вы вернулись в Интернете.

1252
00:58:57,210 --> 00:58:59,259
>> Это не здорово, но
это также не попало.

1253
00:58:59,259 --> 00:59:01,800
И вам не придется беспокоиться
о каких-либо проблемах синхронизации.

1254
00:59:01,800 --> 00:59:03,080
Потому что все уже есть.

1255
00:59:03,080 --> 00:59:05,000
Потому что у вас было идеальным
резервного копирования готов к работе.

1256
00:59:05,000 --> 00:59:07,100
>> Вы могли бы быть немного
искуснее об этом,

1257
00:59:07,100 --> 00:59:12,990
так как некоторые люди часто делают, где вы
могут иметь базы данных номер четыре здесь,

1258
00:59:12,990 --> 00:59:17,480
база данных номер пять здесь,
которые разговаривают друг с другом.

1259
00:59:17,480 --> 00:59:24,120
Но у вас также есть это
вид arrangement--

1260
00:59:24,120 --> 00:59:27,440
и сознательно
выглядит грязным, потому что он

1261
00:59:27,440 --> 00:59:30,220
is--, где все
передние серверы могут

1262
00:59:30,220 --> 00:59:32,870
говорить со всеми серверными серверов.

1263
00:59:32,870 --> 00:59:38,130
И поэтому, если эта база данных не
реагировать, эти передние конечные серверы

1264
00:59:38,130 --> 00:59:40,212
чтобы иметь программирование
код в них, что говорит,

1265
00:59:40,212 --> 00:59:42,170
если вы не получите
подключение к этой базе данных,

1266
00:59:42,170 --> 00:59:45,830
первичный немедленно начинает
говорить с вторичным.

1267
00:59:45,830 --> 00:59:48,310
>> Но это сейчас толкает
сложность в коде.

1268
00:59:48,310 --> 00:59:52,070
А теперь ваши разработчики, ваше программное обеспечение
разработчики, должны знать об этом.

1269
00:59:52,070 --> 00:59:56,454
И вы вроде завязывания код,
вы пишете к вашей фактической задней части

1270
00:59:56,454 --> 00:59:58,370
детали реализации,
что делает его более трудным,

1271
00:59:58,370 --> 01:00:00,670
особенно в большем
компания или больше веб-сайт,

1272
01:00:00,670 --> 01:00:05,020
где вы не обязательно
хотят программисты иметь

1273
01:00:05,020 --> 01:00:10,890
чтобы знать, как база данных
инженеры выполняют свою работу.

1274
01:00:10,890 --> 01:00:13,810
Вы можете сохранить эти роли
своего рода функционально отличаются так

1275
01:00:13,810 --> 01:00:16,810
что есть этот слой
абстракция между ними.

1276
01:00:16,810 --> 01:00:17,940
>> Итак, как мы могли бы это исправить?

1277
01:00:17,940 --> 01:00:20,290
Ну, мы как-то решена
эта проблема когда-то раньше.

1278
01:00:20,290 --> 01:00:25,680
Почему бы нам не поставить один из
эти вещи здесь, где

1279
01:00:25,680 --> 01:00:30,947
он говорит, в свою очередь номер четыре и
пять, все веб-серверов внешнего интерфейса

1280
01:00:30,947 --> 01:00:33,780
поговорить с этим посредником, а
Посредник в свою очередь, маршрутах их данных?

1281
01:00:33,780 --> 01:00:38,494
На самом деле, что может быть
хорошее название для этой вещи?

1282
01:00:38,494 --> 01:00:39,704
>> ЗРИТЕЛИ: [неразборчиво]

1283
01:00:39,704 --> 01:00:41,120
DAVID Маланом: OK, менеджер баз данных.

1284
01:00:41,120 --> 01:00:48,030
Но что может быть термин, который
мы могли бы повторно использовать для этого устройства?

1285
01:00:48,030 --> 01:00:49,760
Мы балансирования.

1286
01:00:49,760 --> 01:00:52,480
Да, так что на самом деле, я
не быть справедливым здесь.

1287
01:00:52,480 --> 01:00:56,760
Таким образом, балансировки нагрузки будет означать, что
мы переключая назад и вперед здесь,

1288
01:00:56,760 --> 01:00:58,836
которые нуждаются в самом деле не так.

1289
01:00:58,836 --> 01:01:00,460
Таким образом, есть несколько способов, которыми мы могли бы сделать это.

1290
01:01:00,460 --> 01:01:03,920
>> Если это на самом деле балансировки нагрузки, то
история точно такая же, как и раньше.

1291
01:01:03,920 --> 01:01:05,230
Некоторые из запросов идут 4.

1292
01:01:05,230 --> 01:01:06,150
Некоторые из них идут на 5.

1293
01:01:06,150 --> 01:01:06,710
И это хорошо.

1294
01:01:06,710 --> 01:01:08,835
Потому что теперь мы можем обрабатывать
в два раза больше пропускной способности.

1295
01:01:08,835 --> 01:01:11,120
Но эта связь
здесь супер важно.

1296
01:01:11,120 --> 01:01:14,050
Они должны оставаться постоянно
синхронизированных и мы надеемся,

1297
01:01:14,050 --> 01:01:17,670
географически не слишком далеко друг от друга, так
что синхронизация по существу

1298
01:01:17,670 --> 01:01:18,520
мгновенно.

1299
01:01:18,520 --> 01:01:20,410
В противном случае мы могли бы иметь проблемы.

1300
01:01:20,410 --> 01:01:21,330
>> Так что это не плохо.

1301
01:01:21,330 --> 01:01:25,132
Но опять-таки, мы
представила новую проблему.

1302
01:01:25,132 --> 01:01:26,590
Какую проблему я просто воссозданы?

1303
01:01:26,590 --> 01:01:30,000

1304
01:01:30,000 --> 01:01:31,020
Единая точка отказа.

1305
01:01:31,020 --> 01:01:32,390
Так что решение по этому поводу?

1306
01:01:32,390 --> 01:01:39,270
Так что, как Виктории любят тратить деньги,
мы можем взять этого парня и сделать это.

1307
01:01:39,270 --> 01:01:41,731
И я только собираюсь
двигаться здесь достаточно места.

1308
01:01:41,731 --> 01:01:43,230
И это собирается быть немного неаккуратно.

1309
01:01:43,230 --> 01:01:44,563
Я буду держать рисование линий.

1310
01:01:44,563 --> 01:01:47,080
Предположим, что все
эти линии идут в обоих?

1311
01:01:47,080 --> 01:01:52,670
>> Очень распространенный метод здесь будет
использовать технику, называемую сердцебиения

1312
01:01:52,670 --> 01:01:57,390
причем каждое из этих устройств,
левый и правый балансировки нагрузки,

1313
01:01:57,390 --> 01:02:00,740
или то, что мы хотим, чтобы называть их,
постоянно говорят, что я жив,

1314
01:02:00,740 --> 01:02:03,220
Я жив, я жив, я жив.

1315
01:02:03,220 --> 01:02:05,910
Один из них по умолчанию
выступает в качестве основного.

1316
01:02:05,910 --> 01:02:09,620
Таким образом, весь трафик перенаправляется через
один на левой стороне, например,

1317
01:02:09,620 --> 01:02:11,260
по умолчанию, произвольно.

1318
01:02:11,260 --> 01:02:16,890
>> Но как только парень на правом
не слышит от левого парня больше,

1319
01:02:16,890 --> 01:02:20,440
один на правом запрограммирован
автоматически, например,

1320
01:02:20,440 --> 01:02:24,110
взять на себя IP-адрес
из одной слева,

1321
01:02:24,110 --> 01:02:28,240
и, следовательно, стать основным, и
может быть, отправить по электронной почте или текстовое сообщение

1322
01:02:28,240 --> 01:02:31,570
к людям, чтобы сказать, эй,
левый первичный отсутствует.

1323
01:02:31,570 --> 01:02:33,310
Я стал основным на данный момент.

1324
01:02:33,310 --> 01:02:35,760
Так, вице-президент становится
президент, так сказать.

1325
01:02:35,760 --> 01:02:38,180
И кто-то должен пойти спасти
президент, если вы хотите.

1326
01:02:38,180 --> 01:02:41,090
Потому что теперь у нас есть временный
единая точка отказа.

1327
01:02:41,090 --> 01:02:45,020
>> Так же сложно или стресс, как
это может показаться начать быть,

1328
01:02:45,020 --> 01:02:46,990
это то, как вам решить эти проблемы.

1329
01:02:46,990 --> 01:02:48,190
Вы делаете бросать деньги на него.

1330
01:02:48,190 --> 01:02:49,370
Вы бросаете аппаратное обеспечение на него.

1331
01:02:49,370 --> 01:02:52,170
Но к сожалению, вы
добавить сложность для него.

1332
01:02:52,170 --> 01:02:56,450
Но результат, в конечном счете, является то, что
у вас есть гораздо больше, в теории,

1333
01:02:56,450 --> 01:02:57,670
надежная архитектура.

1334
01:02:57,670 --> 01:02:58,850
Это все еще не совершенны.

1335
01:02:58,850 --> 01:03:02,470
Потому что даже когда мы have-- мы могли бы
нет единой точки отказа.

1336
01:03:02,470 --> 01:03:05,240
Теперь у нас есть двойные точки отказа.

1337
01:03:05,240 --> 01:03:07,630
Но если две вещи идут не так,
который абсолютно мог,

1338
01:03:07,630 --> 01:03:09,030
мы по-прежнему будет находиться в автономном режиме.

1339
01:03:09,030 --> 01:03:11,660
>> А так очень распространены в
промышленность, чтобы описать

1340
01:03:11,660 --> 01:03:14,000
Ваше Время с точки зрения девяток.

1341
01:03:14,000 --> 01:03:18,610
И вроде цели
стремиться к 99,999%

1342
01:03:18,610 --> 01:03:21,580
времени ваш сайт в Интернете.

1343
01:03:21,580 --> 01:03:24,170
Или еще лучше, добавить
несколько девяток к этому.

1344
01:03:24,170 --> 01:03:28,159
К сожалению, эти
девятки стоят очень дорого.

1345
01:03:28,159 --> 01:03:29,450
И давайте на самом деле делать это.

1346
01:03:29,450 --> 01:03:35,510
Так что, если я открываю мой большой калькулятор снова,
365 дней в году, 24 часа в сутки,

1347
01:03:35,510 --> 01:03:44,780
60 минут в час, и
60 секунд в минуту,

1348
01:03:44,780 --> 01:03:48,690
вот сколько секунд есть
в год, если я сделал это правильно.

1349
01:03:48,690 --> 01:03:55,740
Так что если мы раз это, .99999, это
сколько времени мы хотим стремиться.

1350
01:03:55,740 --> 01:04:00,600
Таким образом, это означает, что мы должны быть вверх
это много секунд в течение года.

1351
01:04:00,600 --> 01:04:03,920
Так что, если я теперь вычесть
исходное значение, или, вернее,

1352
01:04:03,920 --> 01:04:07,480
это новое значение из
first-- 316 секунд,

1353
01:04:07,480 --> 01:04:09,640
который, конечно, через пять минут.

1354
01:04:09,640 --> 01:04:13,770
>> Так что если ваш сайт или ваша компания
утверждая, что "пять девяток", в котором вы находитесь

1355
01:04:13,770 --> 01:04:17,050
до 99,99% времени,
это означает, что вам лучше

1356
01:04:17,050 --> 01:04:23,470
был достаточно умен и быстро
достаточно и достаточно вровень с ресурсами

1357
01:04:23,470 --> 01:04:27,890
что ваши серверы только в автономном режиме
пять минут из года.

1358
01:04:27,890 --> 01:04:29,980
Это дорогостоящая и
твердая вещь, чтобы стремиться.

1359
01:04:29,980 --> 01:04:31,430
>> Так что это компромисс, тоже.

1360
01:04:31,430 --> 01:04:35,866
99,999% времени довольно
штопать трудно и дорого.

1361
01:04:35,866 --> 01:04:38,740
Пять minutes-- вы можете только получить
на сервер физически заменить

1362
01:04:38,740 --> 01:04:40,040
то, что пошло не так.

1363
01:04:40,040 --> 01:04:42,810
И именно поэтому мы начинаем проводку
все вместе более сложные

1364
01:04:42,810 --> 01:04:48,240
априорно так, что компьютеры
может вроде исправить себя.

1365
01:04:48,240 --> 01:04:49,446
Да.

1366
01:04:49,446 --> 01:04:52,344
>> ЗРИТЕЛИ: [неразборчиво]

1367
01:04:52,344 --> 01:05:02,014

1368
01:05:02,014 --> 01:05:04,430
DAVID Маланом: Проблема может
быть в любом количестве мест.

1369
01:05:04,430 --> 01:05:05,090
А на самом деле--

1370
01:05:05,090 --> 01:05:07,101
>> ЗРИТЕЛИ: [неразборчиво]

1371
01:05:07,101 --> 01:05:08,600
DAVID Маланом: Абсолютно, абсолютно.

1372
01:05:08,600 --> 01:05:10,720
И, как картина
становится все более сложным,

1373
01:05:10,720 --> 01:05:12,110
это может быть веб-серверы.

1374
01:05:12,110 --> 01:05:14,690
Это может быть сила к зданию.

1375
01:05:14,690 --> 01:05:17,900
Это может быть что-то физическое, как
кабели получили поношенную или выгонят.

1376
01:05:17,900 --> 01:05:19,879
Это может быть база данных
не отвечает.

1377
01:05:19,879 --> 01:05:22,920
Это может быть, они обновили свои операционные
система и что-то висит.

1378
01:05:22,920 --> 01:05:24,634
Так что есть так много других движущихся частей.

1379
01:05:24,634 --> 01:05:27,050
И так много инженерных
что должен идти за этим

1380
01:05:27,050 --> 01:05:30,431
на самом деле просто компромиссы, например, как
много времени, сколько денег он на самом деле

1381
01:05:30,431 --> 01:05:32,930
стоит, и каковы угрозы
вы действительно обеспокоены?

1382
01:05:32,930 --> 01:05:35,471
Например, в
курсы я учу в Гарварде,

1383
01:05:35,471 --> 01:05:38,470
мы используем много облачных вычислений, которая
мы начнем взглянуть на сейчас,

1384
01:05:38,470 --> 01:05:41,107
В самом деле, где мы используем
Amazon Web Services.

1385
01:05:41,107 --> 01:05:42,940
Просто потому, что это
которую мы начали.

1386
01:05:42,940 --> 01:05:45,856
Но есть еще более в эти дни
от Google и Microsoft и другие.

1387
01:05:45,856 --> 01:05:50,030
И мы сознательно решили поставить все
виртуальных машин наших курсов »,

1388
01:05:50,030 --> 01:05:55,400
как они называют, в я думаю,
это Западная Вирджиния центра обработки данных.

1389
01:05:55,400 --> 01:05:57,560
Большинство наших студентов
случается, из США,

1390
01:05:57,560 --> 01:05:59,820
хотя есть, конечно,
некоторые на международном уровне.

1391
01:05:59,820 --> 01:06:02,630
>> Но реальность такова, что это просто
проще и это дешевле для нас

1392
01:06:02,630 --> 01:06:05,540
положить все яйца
в корзине Вирджинии,

1393
01:06:05,540 --> 01:06:08,050
хотя я знаю, если что-то
пойдет не так в Вирджинии,

1394
01:06:08,050 --> 01:06:12,760
равно как и время от времени, как happened--
если есть ураган или некоторые погоды

1395
01:06:12,760 --> 01:06:15,890
событие, как, что, если есть какая-то
выпуск энергосистема или like-- все

1396
01:06:15,890 --> 01:06:20,240
из данных наших курсов "может пойти на форуме
в течение некоторого количества минут или часов

1397
01:06:20,240 --> 01:06:21,600
или даже дольше.

1398
01:06:21,600 --> 01:06:24,020
>> Но количество сложности
которые потребуются,

1399
01:06:24,020 --> 01:06:26,895
и количество денег, которые бы
требуется, чтобы работать все

1400
01:06:26,895 --> 01:06:31,420
параллельно в Европе или в Калифорнии
просто не имеет так много смысла.

1401
01:06:31,420 --> 01:06:35,080
Так что рациональное торговля
прочь, но болезненным

1402
01:06:35,080 --> 01:06:37,740
когда вы на самом деле
имея, что время простоя.

1403
01:06:37,740 --> 01:06:41,830
>> Что ж, давайте переход прямо сейчас
некоторые из облачных решений

1404
01:06:41,830 --> 01:06:43,320
в некоторых из этих проблем.

1405
01:06:43,320 --> 01:06:45,040
Все, что мы были
обсуждения до сих пор

1406
01:06:45,040 --> 01:06:47,527
это своего рода проблем, которые имеют
был с нами в течение некоторого времени,

1407
01:06:47,527 --> 01:06:49,610
есть ли у вас свой собственный
серверов в вашей компании,

1408
01:06:49,610 --> 01:06:52,740
ли вы пойти на совместное размещение
место как центр обработки данных и доля

1409
01:06:52,740 --> 01:06:55,110
пространство с кем-то еще,
или в настоящее время в облаке.

1410
01:06:55,110 --> 01:06:57,040
>> И что приятно о
облако, что все

1411
01:06:57,040 --> 01:06:59,540
из этих вещей, которые я
рисунок как физические объекты

1412
01:06:59,540 --> 01:07:02,400
Теперь можно рассматривать как
своего рода виртуальных объектов

1413
01:07:02,400 --> 01:07:04,659
в облаке, которые
смоделированы с помощью программного обеспечения.

1414
01:07:04,659 --> 01:07:07,700
Другими словами, компьютеры сегодня,
серверы сегодня, как на картинке Dell

1415
01:07:07,700 --> 01:07:11,720
Я показал ранее, настолько быстро, есть
так много оперативной памяти, столько процессор, столько диск

1416
01:07:11,720 --> 01:07:16,140
пространство, что люди писали
Программное обеспечение практически раздела

1417
01:07:16,140 --> 01:07:21,130
один сервер вверх в иллюзию его
быть два сервера, или 200 серверов, так

1418
01:07:21,130 --> 01:07:24,150
что каждый из нас клиенты
имеет иллюзию наличия

1419
01:07:24,150 --> 01:07:29,110
не только счет на некоторых веб
хозяин, но нашу собственную машину, мы

1420
01:07:29,110 --> 01:07:30,490
сдача в аренду от кого-то другого.

1421
01:07:30,490 --> 01:07:34,140
>> Но это виртуальная машина
до сих пор, как на одном сервере Dell,

1422
01:07:34,140 --> 01:07:39,160
он снова может быть разделена вверх в
два или 200 или более виртуальных машин,

1423
01:07:39,160 --> 01:07:43,770
все из которых дают кому-то административный
доступ, но в пути, где никто из нас

1424
01:07:43,770 --> 01:07:48,040
знает или может получить доступ к другим виртуальным
машины на том же оборудовании.

1425
01:07:48,040 --> 01:07:53,430
Таким образом, чтобы нарисовать картину в сегодняшних слайдов,
Я этот выстрел здесь с веб-сайта

1426
01:07:53,430 --> 01:07:54,160
называется Докер.

1427
01:07:54,160 --> 01:07:56,970
>> Так что это немного больше
подробно, чем мы на самом деле нужно.

1428
01:07:56,970 --> 01:07:59,830
Но если вы рассматривать это как
ваш infrastructure--

1429
01:07:59,830 --> 01:08:02,910
так что просто аппаратные средства самостоятельно,
серверы, стеллажи, данные

1430
01:08:02,910 --> 01:08:06,480
центр, и все that-- вы бы
как правило, работают под управлением операционной системы хоста.

1431
01:08:06,480 --> 01:08:08,275
Так что-то like-- это может быть Windows.

1432
01:08:08,275 --> 01:08:09,430
Это не было бы Mac OS.

1433
01:08:09,430 --> 01:08:11,430
Потому что это на самом деле не
предприятие в эти дни.

1434
01:08:11,430 --> 01:08:15,670
Так что это будет Linux или Solaris
или Unix или BSD или FreeBSD

1435
01:08:15,670 --> 01:08:19,779
или любое количество других операционных систем
которые являются либо бесплатно, либо коммерческий.

1436
01:08:19,779 --> 01:08:22,120
>> А потом вы запускаете
программа, специальная программа,

1437
01:08:22,120 --> 01:08:26,479
называется гипервизор, или
монитор виртуальной машины, VMM.

1438
01:08:26,479 --> 01:08:31,649
И эти продукты, если вы
знакомы, как VMware или VirtualBox

1439
01:08:31,649 --> 01:08:34,080
или Virtual PC или другие.

1440
01:08:34,080 --> 01:08:38,430
И то, что эти программы делают именно то,
что особенность, которую я описал ранее.

1441
01:08:38,430 --> 01:08:41,779
Это создает иллюзию
что одной физической машине

1442
01:08:41,779 --> 01:08:44,550
может быть несколько виртуальных машин.

1443
01:08:44,550 --> 01:08:48,260
>> И вот эти красочные коробки до верха
нарисовать картину следующим образом.

1444
01:08:48,260 --> 01:08:50,260
Этот гипервизор, это
часть программного обеспечения, вызовите его

1445
01:08:50,260 --> 01:08:54,090
VMware, работающие на какой-то другой
операционная система, назовем его Linux,

1446
01:08:54,090 --> 01:08:56,910
создает иллюзию того, что
это физический компьютер, на самом деле

1447
01:08:56,910 --> 01:09:00,149
один, два, три виртуальных компьютеров.

1448
01:09:00,149 --> 01:09:04,270
Так что я в настоящее время купил, как владелец
это оборудование, один физический компьютер.

1449
01:09:04,270 --> 01:09:06,200
А теперь я аренды
это три клиента.

1450
01:09:06,200 --> 01:09:09,731
>> И эти три клиенты все думают
они имеют специальную виртуальную машину.

1451
01:09:09,731 --> 01:09:10,939
И это не наживки и переключатель.

1452
01:09:10,939 --> 01:09:13,750
Это больше раскрытие, что
вы используете виртуальную машину.

1453
01:09:13,750 --> 01:09:17,589
Но технологически, мы все
имеют полный административный контроль

1454
01:09:17,589 --> 01:09:19,880
над каждым из этих гостя
операционных систем, которые могли бы

1455
01:09:19,880 --> 01:09:21,370
быть любое количество операционных систем.

1456
01:09:21,370 --> 01:09:23,029
>> Я могу установить все, что захочу.

1457
01:09:23,029 --> 01:09:24,640
Я могу обновить его, как я хочу.

1458
01:09:24,640 --> 01:09:27,470
И я даже не нужно знать или
заботиться о других операционных

1459
01:09:27,470 --> 01:09:29,678
системы на этом компьютере,
другие виртуальные машины,

1460
01:09:29,678 --> 01:09:35,290
если не владелец всего этого серого
хлам будучи немного жадный

1461
01:09:35,290 --> 01:09:37,540
и переоценивать свои ресурсы.

1462
01:09:37,540 --> 01:09:40,800
>> Так что, если вы принимаете один
физическая машина и продавать его

1463
01:09:40,800 --> 01:09:44,399
чтобы не 200, а 400
клиенты, в какой-то момент

1464
01:09:44,399 --> 01:09:47,270
мы собираемся поездка в те
Те же проблемы с производительностью, как раньше.

1465
01:09:47,270 --> 01:09:50,460
Поскольку у вас есть только конечное
объем диска и оперативной памяти и так далее.

1466
01:09:50,460 --> 01:09:53,450
И виртуальная машина
это просто программа, это

1467
01:09:53,450 --> 01:09:56,140
делая вид, что
полноценный компьютер.

1468
01:09:56,140 --> 01:09:58,040
Таким образом, вы получите то, что вы платите за здесь.

1469
01:09:58,040 --> 01:10:02,150
>> Таким образом, вы найдете на сайте вы можете заплатить
Уважаемая компания может быть $ 100 в месяц

1470
01:10:02,150 --> 01:10:05,660
для вашей собственной виртуальной машине, или
свой собственный виртуальный выделенный сервер,

1471
01:10:05,660 --> 01:10:07,090
который является другой термин для этого.

1472
01:10:07,090 --> 01:10:10,400
Или вы могли бы найти какой-то пролетают
ночь, где вы платите $ 5,99 в месяц

1473
01:10:10,400 --> 01:10:12,080
для вашей собственной виртуальной машине.

1474
01:10:12,080 --> 01:10:15,614
Но шансы у вас нет почти
как много производительности доступны для вас,

1475
01:10:15,614 --> 01:10:18,530
потому что они были перепроданности его
так, чем вы бы с высшим

1476
01:10:18,530 --> 01:10:22,340
уровня обслуживания или лучше поставщика.

1477
01:10:22,340 --> 01:10:24,590
>> Итак, что же это на самом деле значит для нас?

1478
01:10:24,590 --> 01:10:26,110
Итак, позвольте мне перейти к этому.

1479
01:10:26,110 --> 01:10:29,580
Я собираюсь поехать в aws.amazon.com.

1480
01:10:29,580 --> 01:10:31,590
Просто потому, что у них есть
хорошее меню опций.

1481
01:10:31,590 --> 01:10:34,700
Но эти же уроки применимы к
целая куча других поставщиков облачных.

1482
01:10:34,700 --> 01:10:38,201
К сожалению, это часто более
маркетинг говорить, чем что-либо.

1483
01:10:38,201 --> 01:10:39,200
И это постоянно меняется.

1484
01:10:39,200 --> 01:10:41,820
Таким образом, вы идете на сайт, как это.

1485
01:10:41,820 --> 01:10:44,560
И это действительно не имеет
сказать вам много всего.

1486
01:10:44,560 --> 01:10:47,780
>> И даже я, как я смотрю на это, не
на самом деле знать, что любой из этих вещей

1487
01:10:47,780 --> 01:10:49,334
обязательно делать, пока я не нырять.

1488
01:10:49,334 --> 01:10:50,875
Но давайте начнем с левой стороны, Compute.

1489
01:10:50,875 --> 01:10:52,980
И я собираюсь нажать это.

1490
01:10:52,980 --> 01:10:56,960
А теперь Amazon имеет откровенно
Подавляющее число услуг

1491
01:10:56,960 --> 01:10:57,960
Эти дни.

1492
01:10:57,960 --> 01:11:01,040
Но Amazon EC2, пожалуй, самый простой.

1493
01:11:01,040 --> 01:11:05,840
>> Amazon EC2 создаст для нас точно
картина мы видели минуту назад.

1494
01:11:05,840 --> 01:11:10,240
Это, как они делают много
их деньги в облаке.

1495
01:11:10,240 --> 01:11:12,910
По-видимому, Netflix и другие
находятся в облаке с ними.

1496
01:11:12,910 --> 01:11:16,260
Это все, как правило,
пушистые маркетинга говорят.

1497
01:11:16,260 --> 01:11:19,720
Так что я хочу сделать, это пойти в Pricing--
или, вернее, пойдем к экземплярам

1498
01:11:19,720 --> 01:11:23,790
сначала просто нарисовать картину этого.

1499
01:11:23,790 --> 01:11:25,800
>> Так что это будет варьироваться в зависимости от поставщика.

1500
01:11:25,800 --> 01:11:29,590
И нам не нужно, чтобы получить слишком глубоко в
сорняки здесь, как это все работает.

1501
01:11:29,590 --> 01:11:34,720
Но путь Amazon, к примеру,
арендует вам виртуальную машину или сервер

1502
01:11:34,720 --> 01:11:37,200
в облаке у них есть
это своего рода забавными названиями,

1503
01:11:37,200 --> 01:11:41,000
как t2.nano, что означает маленький,
или t2.large, что означает большой.

1504
01:11:41,000 --> 01:11:43,970
Каждый из них дает вам либо
один или два виртуальных процессоров.

1505
01:11:43,970 --> 01:11:45,470
>> Почему это виртуальный процессор?

1506
01:11:45,470 --> 01:11:49,440
Ну, физическая машина может
имеют 64 или более реальных процессоров.

1507
01:11:49,440 --> 01:11:52,125
Но опять-таки, с помощью программного обеспечения,
они создают иллюзию

1508
01:11:52,125 --> 01:11:55,410
что, что одна машина может быть
divvied до нескольких пользователей.

1509
01:11:55,410 --> 01:11:58,765
Таким образом, мы можем думать об этом как
имея один процессор Intel или два.

1510
01:11:58,765 --> 01:12:01,290
кредитов CPU на hour-- я бы
должны читать мелкий шрифт

1511
01:12:01,290 --> 01:12:02,581
относительно того, что это на самом деле означает.

1512
01:12:02,581 --> 01:12:05,850
Это означает, что, как большая часть машины
вы можете использовать в час визави

1513
01:12:05,850 --> 01:12:07,730
другие клиенты на этом аппаратным обеспечением.

1514
01:12:07,730 --> 01:12:11,560
>> Вот сколько оперативной памяти или памяти у вас
get-- либо половину гигабайта, или 500

1515
01:12:11,560 --> 01:12:14,120
мегабайта, или 1 гигабайт, или 2.

1516
01:12:14,120 --> 01:12:17,390
И тогда хранение просто относится к
какого рода дисков они дают вам.

1517
01:12:17,390 --> 01:12:19,950
Там в разные способы хранения
технологии, которые они предлагают.

1518
01:12:19,950 --> 01:12:22,870
Но более интересно, чем это
то может быть ценообразование.

1519
01:12:22,870 --> 01:12:25,860
>> Так что если вы технический директор или
инженер, который не делает

1520
01:12:25,860 --> 01:12:28,420
хотите запустить сервер в
офис, по какой причине,

1521
01:12:28,420 --> 01:12:30,230
и это слишком
сложный или дорогой

1522
01:12:30,230 --> 01:12:33,930
купить серверы и совместно найти их и
платить арендную плату в каком-то физическом пространстве клетке

1523
01:12:33,930 --> 01:12:36,670
somewhere-- вы просто хотите, чтобы сидеть
на вашем ноутбуке поздно ночью,

1524
01:12:36,670 --> 01:12:40,480
введите данные вашей кредитной карты,
и взять в аренду серверы в cloud-- хорошо,

1525
01:12:40,480 --> 01:12:41,920
мы можем сделать это здесь.

1526
01:12:41,920 --> 01:12:45,769
Я собираюсь пойти вниз Linux, целью которых
является популярной операционной системой.

1527
01:12:45,769 --> 01:12:47,310
И давайте просто получить смысл вещей.

1528
01:12:47,310 --> 01:12:48,990
Whoops-- слишком большой.

1529
01:12:48,990 --> 01:12:53,670
>> Так что давайте посмотрим на их мельчайшей
виртуальная машина, которая, кажется, есть,

1530
01:12:53,670 --> 01:12:57,440
для наших целей, один процессор
и 500 мегабайт оперативной памяти.

1531
01:12:57,440 --> 01:12:58,440
Это довольно маленький.

1532
01:12:58,440 --> 01:13:00,820
Но, откровенно говоря, веб-серверы не
нужно сделать все, что многое.

1533
01:13:00,820 --> 01:13:02,630
У вас есть лучшие функции в вашем ноутбуке.

1534
01:13:02,630 --> 01:13:04,990
Но вам не нужны те,
данные в эти дни для вещей.

1535
01:13:04,990 --> 01:13:11,490
Вы собираетесь заплатить $ 0,0065 в час.

1536
01:13:11,490 --> 01:13:12,080
>> Итак, давайте посмотрим.

1537
01:13:12,080 --> 01:13:15,970
Если есть 24 часа в сутки, и
мы платим столько в час,

1538
01:13:15,970 --> 01:13:20,680
это будет стоить вам $ 0,15 в аренду, что
определенный сервер в облаке.

1539
01:13:20,680 --> 01:13:22,210
И это только на один день.

1540
01:13:22,210 --> 01:13:27,050
Если мы делаем это 365-- $ 57 до
арендовать этот конкретный сервер.

1541
01:13:27,050 --> 01:13:28,420
Так это звучит супер дешево.

1542
01:13:28,420 --> 01:13:31,100
>> Это также очень низкая производительность.

1543
01:13:31,100 --> 01:13:37,169
Таким образом, мы, на курсы я преподаю здесь, как правило,
использовать я думаю t2.smalls или t2.mediums.

1544
01:13:37,169 --> 01:13:39,960
И мы могли бы иметь несколько сотен
пользователи, несколько тысяч пользователей, общ.

1545
01:13:39,960 --> 01:13:40,900
Это довольно скромный.

1546
01:13:40,900 --> 01:13:42,360
Итак, давайте посмотрим, что это будет стоить.

1547
01:13:42,360 --> 01:13:49,260
Так что, если я делаю это расходы раз 24
часов 365 раз, на этот раз в $ 225.

1548
01:13:49,260 --> 01:13:51,160
И на курсы
Я учу, мы в целом

1549
01:13:51,160 --> 01:13:54,970
запустить два всего, для
избыточности, а также для повышения производительности.

1550
01:13:54,970 --> 01:13:59,230
Таким образом, мы могли бы потратить, поэтому,
$ 500 для серверов

1551
01:13:59,230 --> 01:14:00,860
что мы, возможно, потребуется в год.

1552
01:14:00,860 --> 01:14:05,210
>> Теперь, если вам нужно больше performance--
давайте взглянем на память.

1553
01:14:05,210 --> 01:14:06,810
Мы говорили о памяти совсем немного.

1554
01:14:06,810 --> 01:14:09,330
И если вам нужно больше
memory-- и 64 гигабайта

1555
01:14:09,330 --> 01:14:12,310
это число, которое я держал mentioning--
это почти $ 1 в час.

1556
01:14:12,310 --> 01:14:16,180
И вы можете довольно быстро увидеть, где
это goes-- так 24 часа 365 раз.

1557
01:14:16,180 --> 01:14:20,580
Так что теперь это $ 8000 в год
для довольно приличный сервер.

1558
01:14:20,580 --> 01:14:23,010
>> Так что в какой-то момент, есть
эта точка перегиба

1559
01:14:23,010 --> 01:14:29,510
где сейчас мы могли бы потратить $ 6000
вероятно, и купить машину, как это

1560
01:14:29,510 --> 01:14:33,800
и амортизировать его стоимость более может быть, два,
три года, срок службы машины.

1561
01:14:33,800 --> 01:14:38,880
Но что может подтолкнуть вас в
благоприятствовать или не благоприятствовать аренды

1562
01:14:38,880 --> 01:14:41,230
машина в облаке, как это?

1563
01:14:41,230 --> 01:14:44,110
Опять же, это сопоставимо, наверное,
к одному из этих серверов Dell

1564
01:14:44,110 --> 01:14:47,208
мы видели на фото немного назад.

1565
01:14:47,208 --> 01:14:51,016
>> ЗРИТЕЛИ: [неразборчиво]

1566
01:14:51,016 --> 01:14:54,350

1567
01:14:54,350 --> 01:14:56,190
>> DAVID Маланом: Да, это огромный потенциал роста.

1568
01:14:56,190 --> 01:14:58,640
Потому что мы не покупаете
машина, мы не должны распаковывать его.

1569
01:14:58,640 --> 01:14:59,600
Мы не должны его поднять.

1570
01:14:59,600 --> 01:15:01,110
Мы не должны подключить его к нашей стойке.

1571
01:15:01,110 --> 01:15:02,080
Мы не должны его подключить.

1572
01:15:02,080 --> 01:15:03,140
Мы не должны платить
электрический законопроект.

1573
01:15:03,140 --> 01:15:05,120
>> Мы не должны повернуть
кондиционирование воздуха на.

1574
01:15:05,120 --> 01:15:07,620
Когда жесткий диск умирает, мы не имеем
вбивать в середине ночи

1575
01:15:07,620 --> 01:15:08,172
Исправить это.

1576
01:15:08,172 --> 01:15:09,630
Мы не должны установить контроль.

1577
01:15:09,630 --> 01:15:13,750
У нас нет, целью которых список продолжается
и на всех физических вещей

1578
01:15:13,750 --> 01:15:15,810
Вам не нужно делать
из-за "облаке".

1579
01:15:15,810 --> 01:15:18,620
>> И ясно, облачные вычисления
это очень злоупотребляют термином.

1580
01:15:18,620 --> 01:15:22,790
Это действительно просто означает, что платить кому-то
еще для запуска серверов для вас,

1581
01:15:22,790 --> 01:15:25,300
или аренды помещений на
серверы кого-то другого.

1582
01:15:25,300 --> 01:15:27,110
Таким образом, термин "облачные вычисления" является новым.

1583
01:15:27,110 --> 01:15:30,260
Идея состоит в том десятилетий.

1584
01:15:30,260 --> 01:15:32,070
Так что это довольно убедительным.

1585
01:15:32,070 --> 01:15:33,960
>> А что еще вы получаете?

1586
01:15:33,960 --> 01:15:38,287
Ну, вы также получаете возможность
делать все, на ноутбуке у себя дома.

1587
01:15:38,287 --> 01:15:40,620
Другими словами, все
фотографии я просто drawing--

1588
01:15:40,620 --> 01:15:44,010
и это было не так давно, что даже
Я ползал на полу сервера

1589
01:15:44,010 --> 01:15:46,680
подключить кабели в течение
каждая из линий, которые вы видите,

1590
01:15:46,680 --> 01:15:49,590
и обновление операционной
системы, а также изменение дисков вокруг.

1591
01:15:49,590 --> 01:15:51,610
Там очень много
телесность ко всему этому.

1592
01:15:51,610 --> 01:15:55,300
>> Но то, что красиво о виртуальной
машины, поскольку название рода предполагает,

1593
01:15:55,300 --> 01:15:57,600
Теперь есть веб-
интерфейсы посредством чего

1594
01:15:57,600 --> 01:15:59,900
если вы хотите эквивалент
линии с этого сервера

1595
01:15:59,900 --> 01:16:03,959
к другому, просто тип, тип, тип,
нажмите и перетащите, нажмите кнопку Отправить, и вуаля,

1596
01:16:03,959 --> 01:16:05,250
у вас есть это проводные вверх практически.

1597
01:16:05,250 --> 01:16:07,235
Потому что все это делается в программном обеспечении.

1598
01:16:07,235 --> 01:16:09,110
И причина, это делается
в программное обеспечение снова

1599
01:16:09,110 --> 01:16:12,650
потому что у нас так много оперативной памяти и так
много CPU доступны для нас в эти дни,

1600
01:16:12,650 --> 01:16:14,880
хотя все
что материал занимает много времени,

1601
01:16:14,880 --> 01:16:18,450
это медленнее вести дела
в программном обеспечении, чем аппаратные средства,

1602
01:16:18,450 --> 01:16:23,710
так же, как это медленнее, чтобы использовать механический
Устройство, как жесткий диск, чем RAM,

1603
01:16:23,710 --> 01:16:25,190
что-то чисто электронные.

1604
01:16:25,190 --> 01:16:27,490
У нас так много ресурсов
доступны для нас.

1605
01:16:27,490 --> 01:16:29,920
Мы, люди, являются своего рода инвариантно медленно.

1606
01:16:29,920 --> 01:16:33,840
И вот теперь машины могут сделать
так что гораздо больше за единицу времени.

1607
01:16:33,840 --> 01:16:36,640
У нас есть эти способности
делать что-то виртуально.

1608
01:16:36,640 --> 01:16:39,120
>> И я буду говорить на курсы
Я учу, например, здесь,

1609
01:16:39,120 --> 01:16:43,464
мы имеем о, может быть, десяток
поэтому общее количество виртуальных машин

1610
01:16:43,464 --> 01:16:45,880
как это работает в любой данный момент
время, делая передний конец вещи,

1611
01:16:45,880 --> 01:16:47,620
делать задний конец вещи.

1612
01:16:47,620 --> 01:16:50,237
У нас есть все наши хранилища.

1613
01:16:50,237 --> 01:16:52,820
Таким образом, любое видео, в том числе вещи
как это, что мы снимаем,

1614
01:16:52,820 --> 01:16:54,330
мы в конечном итоге положить в облако.

1615
01:16:54,330 --> 01:16:58,710
Amazon имеет услуги под названием Amazon S3,
их простой сервис хранения, который

1616
01:16:58,710 --> 01:17:00,397
точно так же как объем дискового пространства в облаке.

1617
01:17:00,397 --> 01:17:02,230
У них есть что-то
называется CloudFront, который

1618
01:17:02,230 --> 01:17:06,040
это услуга CDN, Content
Служба доставки сети, которая

1619
01:17:06,040 --> 01:17:10,190
означает, что они принимают все ваши файлы и
для вас автомагически повторить его

1620
01:17:10,190 --> 01:17:11,290
во всем мире.

1621
01:17:11,290 --> 01:17:12,780
>> Таким образом, они не делают это превентивно.

1622
01:17:12,780 --> 01:17:15,159
Но в первый раз кто-то
в Индии запрашивает файл,

1623
01:17:15,159 --> 01:17:16,700
они потенциально кэшировать его локально.

1624
01:17:16,700 --> 01:17:19,325
В первый раз в Китае,
первый раз в Бразилии, что происходит,

1625
01:17:19,325 --> 01:17:20,880
они начнут кэширование его локально.

1626
01:17:20,880 --> 01:17:22,730
И вы не должны делать ничего из этого.

1627
01:17:22,730 --> 01:17:26,710
И так это невероятно
заставляя эти дни, чтобы переместить вещи

1628
01:17:26,710 --> 01:17:27,890
в облако.

1629
01:17:27,890 --> 01:17:31,890
Потому что у вас есть эта возможность в буквальном смысле
чтобы не иметь людей делают почти столько же

1630
01:17:31,890 --> 01:17:32,390
Работа.

1631
01:17:32,390 --> 01:17:35,930
И вы в буквальном смысле не нужно так много
люди делают эти рабочие места anymore--

1632
01:17:35,930 --> 01:17:38,450
"OPS", или функциональные роли, больше.

1633
01:17:38,450 --> 01:17:43,150
Вы на самом деле просто нужно
Разработчики и меньше инженеров

1634
01:17:43,150 --> 01:17:44,840
кто может просто сделать что-то виртуально.

1635
01:17:44,840 --> 01:17:46,590
На самом деле, просто чтобы дать
вы чувство этого,

1636
01:17:46,590 --> 01:17:51,800
позвольте мне перейти к ценообразованию на
один другой продукт здесь.

1637
01:17:51,800 --> 01:17:58,170
Давайте посмотрим, что-то вроде CDN S3.

1638
01:17:58,170 --> 01:18:01,140
Таким образом, это по существу
виртуальный жесткий диск в облаке.

1639
01:18:01,140 --> 01:18:14,360
И если мы прокрутите вниз до pricing--
так что $ 0,007 за гигабайт.

1640
01:18:14,360 --> 01:18:16,300
И that's--, как мы это делаем?

1641
01:18:16,300 --> 01:18:17,410
Я думаю, что в месяц.

1642
01:18:17,410 --> 01:18:21,530
>> Так что, если это за month-- или в день?

1643
01:18:21,530 --> 01:18:23,200
Дэн, это за день?

1644
01:18:23,200 --> 01:18:24,700
Это в месяц, OK.

1645
01:18:24,700 --> 01:18:28,280
Так что, если это за month--
К сожалению, это $ 0,03 в месяц.

1646
01:18:28,280 --> 01:18:29,820
Там в 12 месяцев в году.

1647
01:18:29,820 --> 01:18:32,250
Так сколько данных может
хранить в облаке?

1648
01:18:32,250 --> 01:18:37,410
Гигабайт не столь велика, но я
не знаю, как 1 терабайт,

1649
01:18:37,410 --> 01:18:38,460
так как 1000 из них.

1650
01:18:38,460 --> 01:18:39,501
Это еще не все, что много.

1651
01:18:39,501 --> 01:18:44,382
Это $ 368 для хранения терабайт
данных в облаке Amazon.

1652
01:18:44,382 --> 01:18:46,090
Так что некоторые из
то компромиссы, то?

1653
01:18:46,090 --> 01:18:47,970
Она не может быть все хорошо.

1654
01:18:47,970 --> 01:18:52,260
Ничего мы говорили сегодня нет
своего рода без улова или стоимости.

1655
01:18:52,260 --> 01:18:55,269
Так что плохо о переезде
все в облаке?

1656
01:18:55,269 --> 01:18:56,060
АУДИТОРИЯ: Безопасность.

1657
01:18:56,060 --> 01:18:57,721
DAVID Маланом: Хорошо, что вы имеете в виду?

1658
01:18:57,721 --> 01:18:58,596
ЗРИТЕЛИ: [неразборчиво]

1659
01:18:58,596 --> 01:19:01,589

1660
01:19:01,589 --> 01:19:02,630
DAVID Маланом: Да, верно.

1661
01:19:02,630 --> 01:19:05,130
И действительно ли вы хотите
некоторые случайные инженеры

1662
01:19:05,130 --> 01:19:08,750
на Амазонки, что вы никогда не встретите имея
физический доступ к этим компьютерам,

1663
01:19:08,750 --> 01:19:11,010
и если они на самом деле
хотел, виртуальный доступ?

1664
01:19:11,010 --> 01:19:15,070
И хотя в
теория software-- хорошо,

1665
01:19:15,070 --> 01:19:17,442
Шифрование может абсолютно
защитить вас от этого.

1666
01:19:17,442 --> 01:19:19,150
Так что, если то, что вы
хранение на серверах

1667
01:19:19,150 --> 01:19:21,470
является encrypted-- меньше беспокойства.

1668
01:19:21,470 --> 01:19:25,010
>> Но как только человек имеет физический
доступ к машине, шифрование в сторону,

1669
01:19:25,010 --> 01:19:26,100
все ставки являются своего рода игру.

1670
01:19:26,100 --> 01:19:28,240
Возможно, вы знаете из прошлых лет
что ПК особенно,

1671
01:19:28,240 --> 01:19:30,360
даже если у вас эти вещи
называемые "пароли BIOS,"

1672
01:19:30,360 --> 01:19:33,360
были, когда ваш рабочий стол загрузился,
вы бы запрос с паролем, который

1673
01:19:33,360 --> 01:19:35,980
не имеет ничего общего с
Окна, как правило, вы можете

1674
01:19:35,980 --> 01:19:39,750
просто открыть шасси
машина, найти крошечные булавки,

1675
01:19:39,750 --> 01:19:42,240
и использовать то, что называется
прыгун и просто подключить

1676
01:19:42,240 --> 01:19:45,690
эти два провода примерно на одну секунду,
таким образом завершая схему.

1677
01:19:45,690 --> 01:19:47,360
И это устранит пароль.

1678
01:19:47,360 --> 01:19:49,800
>> Поэтому, когда у вас есть физический доступ к
устройство, вы можете сделать что-то подобное.

1679
01:19:49,800 --> 01:19:51,110
Вы можете удалить жесткий диск.

1680
01:19:51,110 --> 01:19:53,060
Вы можете получить доступ к нему таким образом.

1681
01:19:53,060 --> 01:19:55,442
И вот почему, в
случай Dropbox,

1682
01:19:55,442 --> 01:19:57,900
например, это немного
вызывает беспокойство, что не только они

1683
01:19:57,900 --> 01:20:02,860
есть данные, даже если это
зашифрованное, у них также есть ключ.

1684
01:20:02,860 --> 01:20:04,993
Другие заботы?

1685
01:20:04,993 --> 01:20:08,430
>> ЗРИТЕЛИ: [неразборчиво]

1686
01:20:08,430 --> 01:20:27,740

1687
01:20:27,740 --> 01:20:30,240
DAVID Маланом: Да, это очень
true-- в Googles, яблоки,

1688
01:20:30,240 --> 01:20:31,406
в Microsofts мира.

1689
01:20:31,406 --> 01:20:34,400
И в самом деле, как долго
у Вас был свой iPhone для?

1690
01:20:34,400 --> 01:20:35,885
Да, давать или принимать.

1691
01:20:35,885 --> 01:20:36,760
ЗРИТЕЛИ: [неразборчиво]

1692
01:20:36,760 --> 01:20:37,780
DAVID Маланом: Я сожалею?

1693
01:20:37,780 --> 01:20:39,667
Вы среди тех, кто
имеет iPhone, не так ли?

1694
01:20:39,667 --> 01:20:40,250
ЗРИТЕЛИ: Да.

1695
01:20:40,250 --> 01:20:42,208
DAVID Маланом: Как долго
Вы имели свой iPhone?

1696
01:20:42,208 --> 01:20:43,372
ЗРИТЕЛИ: [неразборчиво]

1697
01:20:43,372 --> 01:20:45,080
DAVID Маланом: ОК, так что
Apple, в буквальном смысле знает

1698
01:20:45,080 --> 01:20:49,030
где вы были каждый час
на следующий день в течение последних пяти лет.

1699
01:20:49,030 --> 01:20:51,112
>> ЗРИТЕЛИ: [неразборчиво]

1700
01:20:51,112 --> 01:20:54,626

1701
01:20:54,626 --> 01:20:56,375
DAVID Маланом: Что
замечательная особенность.

1702
01:20:56,375 --> 01:20:57,860
ЗРИТЕЛИ: [неразборчиво]

1703
01:20:57,860 --> 01:21:00,875
DAVID Маланом: Да, но
компромисс наверняка.

1704
01:21:00,875 --> 01:21:01,750
ЗРИТЕЛИ: [неразборчиво]

1705
01:21:01,750 --> 01:21:04,720

1706
01:21:04,720 --> 01:21:07,813
>> DAVID Маланом: Да, это очень легко.

1707
01:21:07,813 --> 01:21:08,688
ЗРИТЕЛИ: [неразборчиво]

1708
01:21:08,688 --> 01:21:12,040

1709
01:21:12,040 --> 01:21:13,248
DAVID Маланом: Другие отрицательные стороны?

1710
01:21:13,248 --> 01:21:16,995
ЗРИТЕЛИ: [неразборчиво]

1711
01:21:16,995 --> 01:21:26,151

1712
01:21:26,151 --> 01:21:27,900
DAVID Маланом: Absolutely--
технологически,

1713
01:21:27,900 --> 01:21:31,550
экономически, это довольно вынуждающий
своего рода получить эти экономии от масштаба

1714
01:21:31,550 --> 01:21:33,579
и переместить все в
так называемое облако.

1715
01:21:33,579 --> 01:21:35,870
Но вы, вероятно, хотите
идут с некоторыми из крупнейших

1716
01:21:35,870 --> 01:21:39,380
рыба, амазонки, то Googles, то
Microsofts-- Rackspace довольно big--

1717
01:21:39,380 --> 01:21:42,200
и несколько других, а не
обязательно летать ночью люди

1718
01:21:42,200 --> 01:21:45,640
для которых это очень легко сделать
этот вид техники в наши дни.

1719
01:21:45,640 --> 01:21:49,140
И вот, кого вы можете
платить $ 5,99 в месяц.

1720
01:21:49,140 --> 01:21:50,890
Но вы, конечно,
получить то, что вы платите.

1721
01:21:50,890 --> 01:21:54,014
>> Когда вы говорите [неразборчиво], что, когда
такие вещи, как эти пять девяток придумали,

1722
01:21:54,014 --> 01:21:58,017
причем даже если технологически
мы не можем гарантировать 99.999,

1723
01:21:58,017 --> 01:22:00,350
мы просто построить в некотором роде
пени по договору

1724
01:22:00,350 --> 01:22:03,910
так что, если это произойдет, по крайней мере,
есть некоторая стоимость к нам, продавец.

1725
01:22:03,910 --> 01:22:07,950
И это то, что вы, как правило,
получать их согласиться.

1726
01:22:07,950 --> 01:22:09,590
>> ЗРИТЕЛИ: [неразборчиво]

1727
01:22:09,590 --> 01:22:12,290
>> DAVID Маланом: И
один вид благословения

1728
01:22:12,290 --> 01:22:15,630
в том, что даже когда мы идем вниз, для
например, или даже некоторые компании,

1729
01:22:15,630 --> 01:22:17,800
реальность такова, Amazon,
например, имеет так много

1730
01:22:17,800 --> 01:22:21,780
штопать клиентов, хорошо известные клиенты,
работая из определенных центров обработки данных

1731
01:22:21,780 --> 01:22:26,224
что когда-то действительно идет не так,
как стихийные бедствия и погодных условий и таких,

1732
01:22:26,224 --> 01:22:29,390
если есть какой-либо серебряные накладки,
это то, что вы находитесь в очень хорошей компании.

1733
01:22:29,390 --> 01:22:30,680
Ваш сайт может находиться в автономном режиме.

1734
01:22:30,680 --> 01:22:32,750
Но так как половина
популярный интернет.

1735
01:22:32,750 --> 01:22:36,230
И таким образом это, возможно, немного
более приемлемым для ваших клиентов

1736
01:22:36,230 --> 01:22:38,780
если это больше из Интернета
вещь, чем acme.com вещь.

1737
01:22:38,780 --> 01:22:41,780
Но это вроде обмана.

1738
01:22:41,780 --> 01:22:46,740
>> Так что с точки зрения других вещей, чтобы смотреть на,
просто так, что мы не исключаем других,

1739
01:22:46,740 --> 01:22:51,210
если вы идете в Microsoft Azure, они
имеют как Linux и Windows, вещи

1740
01:22:51,210 --> 01:22:53,190
что сопоставимо с Amazon.

1741
01:22:53,190 --> 01:22:57,540
Если вы идете в Google Compute Engine,
у них есть что-то подобное, а также.

1742
01:22:57,540 --> 01:23:00,500
И просто закруглить
эти облачные предложения,

1743
01:23:00,500 --> 01:23:02,762
Я славим еще одну вещь.

1744
01:23:02,762 --> 01:23:04,720
Это популярный веб-сайт
это представитель

1745
01:23:04,720 --> 01:23:08,590
класса технологий.

1746
01:23:08,590 --> 01:23:12,350
Те, кого мы только что говорили
о, Amazon, будет МААН,

1747
01:23:12,350 --> 01:23:17,150
Инфраструктура как сервис, где вы
своего рода физическое оборудование в качестве службы.

1748
01:23:17,150 --> 01:23:18,757
Там в SAAS.

1749
01:23:18,757 --> 01:23:20,090
На самом деле, позвольте мне кратко эти вниз.

1750
01:23:20,090 --> 01:23:23,290

1751
01:23:23,290 --> 01:23:28,190
>> IAAS-- инфраструктура
Как служба, SAAS,

1752
01:23:28,190 --> 01:23:31,870
и PAAS, которые являются
удивительно запутанные акронимы

1753
01:23:31,870 --> 01:23:34,400
которые описывают три
различные типы вещей.

1754
01:23:34,400 --> 01:23:36,400
И сами аббревиатуры
на самом деле не имеет значения.

1755
01:23:36,400 --> 01:23:38,360
Это все вещи облаков
мы только что говорили о том,

1756
01:23:38,360 --> 01:23:41,570
материал более низкий уровень,
виртуализации аппаратных средств и хранения

1757
01:23:41,570 --> 01:23:44,890
в так называемом облаке, будь то
Amazon, Microsoft, Google, или другой.

1758
01:23:44,890 --> 01:23:47,270
>> Программное обеспечение как сервис--
все из нас своего рода использовать эту функцию.

1759
01:23:47,270 --> 01:23:49,810
При использовании Служб Google
для Gmail или календарями,

1760
01:23:49,810 --> 01:23:52,530
любой из этих веб-
приложения, которые 10 лет назад мы

1761
01:23:52,530 --> 01:23:55,560
будет дважды нажал на иконки
наш настольный компьютер, программное обеспечение как услуга

1762
01:23:55,560 --> 01:23:57,400
сейчас действительно веб-приложение.

1763
01:23:57,400 --> 01:24:00,110
И как платформа
Сервис вид зависит от многого.

1764
01:24:00,110 --> 01:24:03,140
>> И один пример я дам вам здесь
в контексте облачных computing--

1765
01:24:03,140 --> 01:24:06,250
есть одна компания, которая довольно
популярные в эти дни, Heroku.

1766
01:24:06,250 --> 01:24:08,940
И они это услуга,
платформа, если вы будете,

1767
01:24:08,940 --> 01:24:11,730
который работает на вершине
Инфраструктура Амазонки.

1768
01:24:11,730 --> 01:24:15,800
И они просто делают его еще проще
для разработчиков и инженеров

1769
01:24:15,800 --> 01:24:18,330
чтобы получить веб-приложений в Интернете.

1770
01:24:18,330 --> 01:24:22,170
>> Это боль, первоначально, использовать
Amazon Web Services и другие вещи.

1771
01:24:22,170 --> 01:24:24,170
Потому что вы на самом деле есть
знать и понимать

1772
01:24:24,170 --> 01:24:27,617
о базах данных и веб-серверов и
балансировки нагрузки и все вещи

1773
01:24:27,617 --> 01:24:28,450
Я только что говорил о.

1774
01:24:28,450 --> 01:24:32,780
Потому что все Amazon сделал это не
скрытые эти конструктивные проблемы.

1775
01:24:32,780 --> 01:24:35,790
Они только виртуализировать их
и переместить их в браузере,

1776
01:24:35,790 --> 01:24:37,770
в программное обеспечение, а не аппаратного обеспечения.

1777
01:24:37,770 --> 01:24:43,020
>> Но такие компании, как Heroku и других
провайдеры PaaS, платформа как сервис,

1778
01:24:43,020 --> 01:24:46,900
они используют эти основы Barebone
что мы только что говорили о том,

1779
01:24:46,900 --> 01:24:50,340
и они строят легче
использовать программное обеспечение на нем

1780
01:24:50,340 --> 01:24:54,241
так что если вы хотите, чтобы получить веб-
приложений онлайн в эти дни,

1781
01:24:54,241 --> 01:24:55,990
Вы, конечно, должны
уметь программировать.

1782
01:24:55,990 --> 01:25:00,280
Вы должны знать, Java или Python или PHP
или Руби или куча других языков.

1783
01:25:00,280 --> 01:25:02,180
>> Но вам также нужно место, чтобы поместить его.

1784
01:25:02,180 --> 01:25:04,790
И мы говорили ранее о
получение веб-хостинга компании.

1785
01:25:04,790 --> 01:25:08,630
Это своего рода, как в середине 2000-х
подход к получить что-то в Интернете.

1786
01:25:08,630 --> 01:25:12,140
В настоящее время вы могли бы вместо того, чтобы платить кому-то
как Heroku несколько долларов в месяц.

1787
01:25:12,140 --> 01:25:15,370
И по сути дела, как только вы
сделал некоторую начальную конфигурацию,

1788
01:25:15,370 --> 01:25:18,704
обновить свой веб-сайт, вы
просто введите команду в окне.

1789
01:25:18,704 --> 01:25:21,370
И независимо от того кода вы написали
здесь на вашем ноутбуке немедленно

1790
01:25:21,370 --> 01:25:24,350
получает распределяется на любое число
серверов в облаке.

1791
01:25:24,350 --> 01:25:26,440
>> И Heroku заботится о
все сложности.

1792
01:25:26,440 --> 01:25:28,930
Они полагают, что все базы данных
материал, все балансировка нагрузки,

1793
01:25:28,930 --> 01:25:31,480
все головные боли, которые мы
просто написано на доске,

1794
01:25:31,480 --> 01:25:33,320
и скрыть все, что для вас.

1795
01:25:33,320 --> 01:25:36,170
И в свою очередь, вы просто
платить им немного больше.

1796
01:25:36,170 --> 01:25:39,810
Таким образом, у вас есть такой инфраструктуры, как
сервис, платформы как сервис,

1797
01:25:39,810 --> 01:25:41,400
а затем программное обеспечение как услуга.

1798
01:25:41,400 --> 01:25:45,390
Это, опять же, это
абстракция или наслоение.

1799
01:25:45,390 --> 01:25:51,187
>> Любые вопросы на облаке или
строительство собственной инфраструктуры?

1800
01:25:51,187 --> 01:25:52,270
Хорошо, что было много.

1801
01:25:52,270 --> 01:25:54,200
Почему бы нам не пойти дальше и
принять нашу 15-минутный перерыв здесь.

1802
01:25:54,200 --> 01:25:57,241
Мы вернемся с несколькими новыми концепциями
и немного практической возможности

1803
01:25:57,241 --> 01:25:59,110
до того, как вечер закончился.

1804
01:25:59,110 --> 01:26:00,332

