DAVID Маланом: Хорошо, добро пожаловать обратно. Прежде чем погрузиться в облачных вычислений, Я думал, что на минуту остановиться если есть какие-либо нерешенных вопросов, или темы, которые пришли во время обеда что, возможно, в настоящее время представляет интерес. ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: OK. О, хорошо. ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Нет, конечно. Хорошо, хорошо, надеюсь, все ваши проблемы возникают в ближайшие часы а завтра особенно. Но давайте посмотрим, а затем, при котором Последнее обсуждение этого вопроса о создании веб-сайт приводит, в более общем плане когда дело доходит до облачных вычислений, создание серверной архитектуры, виды решений что инженеры и разработчики и менеджеры нужно сделать, когда речь идет делать больше, чем просто подписавшись на $ 10 в месяц веб-хостинга когда вы на самом деле хотите, чтобы строить из ваша собственная инфраструктура. И мы будем стараться, чтобы связать эту спину, например, к Dropbox и другие как они. 

Итак, давайте начнем рассматривать какие проблемы возникают в бизнесе получает хорошие и возникают хорошие проблемы. Таким образом, в самом простом случае наличия какая-то компания, которая имеет веб-сервер, Вы могли бы иметь, скажем, сервер, мы просто рисовать, что выглядит следующим образом. И в эти дни, большинство servers-- и давайте фактически поставил картину на это просто так что это чуть менее туманны. 

Так Dell стойки server-- обратно в тот же день, там были мэйнфреймы что взял целые комнаты. В эти дни, если вы были чтобы получить сервер, его может выглядеть немного что-то вроде этого. Серверы измеряются в каком называются стоечных единиц, или БПРМ. И один RU составляет 1,5 дюйма, который является промышленным стандартом. Так что это выглядит как сервер два RU. Так что 3 дюйма в высоту. И они, как правило 19 дюймов в ширину, что означает все такого рода вещи стандартизирован. 

Так что, если вы посмотрите в center-- данных а не только на одном сервере, но давайте посмотрите на Google, центров обработки данных и посмотреть, если мы увидеть красивую картинку в Google Images. Это гораздо лучше, чем вы освещено как правило, найти, и многое сексуальнее глядя, как результат. Но это то, что выглядит как пара сто серверов все о том же размере, на самом деле, в стойку после стойки после того, как стойки после стойки в центре обработки данных. 

Что-то вроде this-- это вполне может быть компании Google, так как я гугле Google. Но это может быть представитель в более общем плане центр обработки данных, в котором многие компании, как правило, расположены совместно. И совмещенных в общем случае означает что вы идете в таком месте, как Equinix или других производителей, которые имеют большие склады, которые имеют много энергии, много охлаждения, мы надеемся, много безопасности, и отдельные вольеры ограждающих стойки серверы, и вы либо арендовать стойки или вы приносите стойки в. 

А отдельные компании, стартапов особенно, будет иметь какой-то биометрии чтобы попасть в их клетке, или клавиши, или ключ-карта. Вы открываете дверь. А внутри есть только квадрат кадры след что вы платите за, внутри которые вы можете положить все, что вы хотите. 

И вы, как правило, платят за власть. И вы платите за отпечатками. А потом вы платите самостоятельно для серверов что вы чего в это пространство. А что вы тогда иметь возможность сделать это платить кому-то для подключения к Интернет-услуг. Вы можете оплатить любое количество поставщиков, каждый из которых как правило, попадают в этот центр обработки данных. 

Но реальный интересный вопрос, что на самом деле идет в этих стойках? Они могут все очень хорошо выглядеть так, как мы только что видели. Но они выполняют различные функции и, возможно, придется делать разные вещи. И давайте на самом деле мотивировать это обсуждение с вопросом о том, какие проблемы начинает возникать, если вы успешны? 

Так что у вас есть веб-сайт что вы построили. А может быть, он продает виджеты или что-то типа того. И вы делаете очень хорошо с продажами виджетов в Интернете. И вы начинаете испытывать некоторые симптомы, ваш веб-сайт. Что может быть некоторые из технические симптомы что пользователи сообщают, как бизнес растет и процветает и ваш сайт выгоду от этого? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, точно. Таким образом, вы могли бы иметь замедление вашего веб-сайта. И почему это могло произойти? Ну, если мы предположим, для ради обсуждения прямо сейчас, что вы находитесь на одном из этих коммерческих веб-хосты что мы говорили о перед обедом, что вы платите некоторое количество долларов в месяц, и вы уже заплатили для годовой стоимости вашего домена имя, что веб-хостинга, вероятно, переоценивать свои ресурсы в некоторой степени. Так что вы можете иметь имя пользователя и пароль на своем сервере. Но так может несколько других, или несколько десятка других, или, возможно, даже несколько сотни других, пользователей. 

И сайты живут физически на том же сервере. Почему это возможно? Ну в эти дни, серверы как это обычно есть несколько жестких дисков, может быть, целых шесть или более жестких дисков, каждый из которых может быть столько, как 4 терабайт в эти дни. Таким образом, вы могли бы иметь 24 терабайт пространства всего за один маленький сервер, как это. 

И даже если вы украсть часть этого пространства для резервирования, для целей резервного копирования, это все еще довольно много места. И, конечно же, типичный веб-сайт не нужно много места. Просто регистрации пользователей и хранения журналов заказов не принимать все, что много места. Таким образом, вы можете разделить его достаточно немного и дать каждому пользователю только немного кусочек этого. 

В то же время, компьютер как это в эти дни как правило, имеет несколько CPUs-- не только один, может быть, два, может быть четыре, может быть, 16, или даже больше. И каждый из этих процессоров есть то, что называется ядро, которое вроде как мозг внутри мозга. Так что на самом деле большинство всех присутствующих здесь с современные ноутбуки, вероятно, двухъядерный или четырехъядерным CPU-- и, вероятно, только один процессор внутри ноутбука в эти дни. Но настольные компьютеры и стоечные компьютеры, такие как это может иметь немало чем больше процессоров, и в свою очередь сердечников. 

И, честно говоря, даже в наших компьютерах Mac и ПК сегодня, вы на самом деле не нужны двухъядерность или четырехъядерных ядра, чтобы проверить свою электронную почту. Если есть узкое место, когда речь идет об использовании компьютера, Ты человек, вероятно, самая медленная вещь об этом компьютере. И вы не собираетесь быть в состоянии проверьте свою электронную почту быстрее, если вы имеют в четыре раза больше процессоров или ядер. 

Но тот же самый добрый истинного сервера. Один единственный веб-сайт не может обязательно нужно больше, чем один Процессор или одно ядро, один маленький мозг внутри делает все мышления и обработки. Так производители аналогично начал нарезать эти ресурсы так что, возможно, ваш сайт получает один ядро, ваш сайт получает одно ядро, или, может быть, мы разделяем одну такую ​​сердцевину. Мы также обмен дискового пространства. И мы также обмен оперативной памяти, или памяти произвольного доступа от ранее, из которых есть также конечное количество. 

И это ключ. Независимо от того, насколько дорого компьютер был, есть еще конечное объем ресурсов в нем. И поэтому все больше и больше вас попробуйте потреблять те ресурсы, тем медленнее вещи могли бы стать. Но почему? Почему бы вещи замедлить как симптом перегрузки сервера? Что происходит? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, точно. Я предложил, что ранее Оперативная память представляет собой тип памяти. Это летучее, причем это где приложения и данные сохраняются, когда они используются. И вот поэтому есть лишь конечное число вещей, которые вы можете сделать, по-видимому, сразу же. И это также быстрее, Что хорошо. Но это также дороже, который является плохой вещью. И это также, следовательно, присутствует в нижней количествах, чем на диске, жесткий диск пространство, которое, как правило, дешевле. 

Другими словами, вы может иметь 4 терабайт дискового пространства на вашем компьютере. Но вы можете иметь 4 гигабайты, или 64 гигабайта, по порядку величины, фактор 1000 меньше, оперативной памяти в вашем компьютере. Итак, что же компьютер делать? Ну, предположим, что вы действительно есть 64 гигабайт оперативной памяти в сервере, как это, что будет довольно распространенным явлением, если бы не низкая Эти дни. Но предположим, что у вас есть так много пользователи делают так много вещей что вы вроде своего рода потребуется 65 гигабайт памяти обрабатывать все, что одновременное использование? 

Ну, вы могли бы просто сказать, К сожалению, некоторое количество пользователей просто не может получить доступ к сайту. И это есть мера в крайнем случае, конечно же. Или, в качестве операционной системы, как Windows, Mac или OS или Linux или Solaris или любой ряд других операционных систем на этом сервере, может просто решить, вы знаете, что? У меня есть только 64 гигабайт оперативной памяти. Я как бы нужно 65. Таким образом, вы знаете, что? Я собираюсь взять 1 гигабайт стоит данных в оперативной памяти который был наименее недавно обращались и просто переместить его на диск временно, буквально скопировать его из поста память с более медленной памятью так что я могу справиться с этим, то 65-е необходимо гигабайтный для памяти, сделать некоторые вычисления на нем. Потом, когда я сделал это делать, Я буду просто двигаться, что на диск, переместить эту другую оперативную память я временно положить на диске обратно в реальном оборудовании так что я отчасти многозадачности. 

Так что я своего рода наведение временно находящихся в этом пространстве медленнее, поэтому я создаю иллюзию обработки всех. Но есть замедление. Зачем? Ну, внутри них трудно диски в эти дни есть что? Скорее всего, что делает жесткий диск отличается от RAM как лучше теперь вы знаете? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Хорошо, правда. ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Так очень верно. И это побочный эффект или функцию тот факт, что память действительно быстрее. И поэтому вы хотите использовать его для текущего использования. И диск медленнее. Но это постоянное, или энергонезависимым. Таким образом, вы используете его для длительного хранения. Но с точки зрения реализация, если я смотрю вверх что называется модуль DIMM, двухрядным памяти Модуль, это то, что часть оперативной памяти обычно может выглядеть следующим образом. 

Так что внутри нашего Mac--, что это ошибка. Внутри наших Маков и ПК, наши настольные компьютеры будут иметь палки памяти, как вы могли бы назвать их, или модули DIMM или SIMMs назад в тот же день, памяти что выглядеть следующим образом. Наши ноутбуки, вероятно, есть вещи, которые являются третьим размером или половину размера. Они немного меньше, но тот же самый маленький idea-- кусочки зеленого кремния вафельные или пластика, имеет маленькие черные фишки на них с большим проводов взаимного соединения все. Вы можете иметь целую кучу они внутри вашего компьютера. Но вынос здесь это полностью электронная. Там просто электроны протекающий на этом устройстве. В противоположность этому, если мы посмотрим на внутри жесткого диска и потянуть вверх картину здесь, вы бы вместо того, чтобы увидеть что-то вроде этого, который делает электричество пройдя через него, в конечном счете. Но что же выскакивает у вас об этой вещи? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, есть по-видимому, движущихся частей. Это вроде как старой записи игрок или игрок фонограф. И это в значительной степени это. Это немного искуснее, чем that-- в то время как фонограф используемого проигрывателя канавками в записи, это на самом деле использует крошечные магнитные частицы что мы не можем видеть совсем. Но если немного магнитной частицы выглядит следующим образом, это считается 1. И если это выглядит так, с севера на юг, а не на юго-север, это может быть 0. И мы увидим завтра, как мы можем построить от более интересных вещей. 

Но все это должен физически переместить , безусловно, будет идти медленнее, чем скорость света, которая в теории является то, что электрон может протекать в, хотя реально не совсем. Так что механическое devices-- гораздо медленнее. Но они дешевле. И вы можете приспосабливать так много больше данных внутри них. Поэтому тот факт, что существует в мире что-то называется виртуальной памяти, при использовании жесткого диска, как это как будто это было RAM прозрачным для пользователя, просто путем перемещения данных из оперативной памяти на жесткий диск, затем переместить его обратно, когда вам нужно он снова создает замедление. Потому что вы в буквальном смысле придется скопировать его из одного места в другое. И дело вы копируете его, а от фактически медленнее, чем ОЗУ где вы хотите быть. 

Альтернативное решение here-- если вам не нравится, что замедлит, и ваша виртуальная память своего рода быть перегружена, что другое решение этой проблемы? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Ну, увеличение виртуальной памяти позволит нам сделать это на еще больший масштаб. Мы могли бы справиться с 66 гигабайтами стоит потребностей в памяти, или 67 гигабайт. Но предположим, что мне не нравится это замедление, на самом деле Я хочу, чтобы отключить виртуальный память, если это вообще возможно, что еще я мог бросить на эту проблему решить, где я хочу, чтобы обрабатывать большее количество пользователей и больше требования к памяти чем я физически есть на данный момент? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: К сожалению, нет. Таким образом, процессор и ядра они в это конечный ресурс. И нет никакого аналогового в этом контексте. Хороший вопрос, хотя. Так просто быть ясно, тоже, если внутри этого компьютера, скажем, палка памяти, которая выглядит как this-- и так мы будем называть эту память. И здесь это жесткий диск. И я просто сделать это изобразительно как маленький круг. Есть 0 и 1. В обоих these-- данные, мы обобщим его как. 

И по сути дела, если пользователь запуск приложения, как, скажем, веб-сайт, который требует это объем оперативной памяти для каждого пользователя, что я предлагаю, путем этой вещи называется виртуальной памяти, это просто временно переместить что здесь, так что теперь я может переместить память кого-то другого Требования там. И тогда, когда это будет сделано, Я могу скопировать это обратно на и это идет здесь, тем самым перемещая что я хотел там где-нибудь еще в целом. 

Таким образом, есть просто много Switcheroo, является вынос здесь. Так что, если вам не нравится это, и вы этого не сделаете хочу поставить что-нибудь на жестком диске, что-то очевидное Решение бизнес человека к проблеме, или инженера решение, если на то пошло, тоже? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, я имею в виду в буквальном смысле бросать деньги на эту проблему. И на самом деле, это идеальный непосредственно перейти к некоторым из более высокого уровня обсуждение облачных вычислений. Потому что многое из этого мотивируется финансовыми решениями, даже не обязательно технологические. Если 64 гигабайтами оперативной памяти слишком мало, ну, почему бы не получить 128 гигабайт оперативной памяти? Почему бы не получить 256 гигабайт оперативной памяти? А почему бы не? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Ну, стоит больше денег, конечно. А если у вас уже есть запасной пространства на жестком диске, эффективно, или, что эквивалентно, пространство на жестком диске так гораздо дешевле, вы можете также использовать его. Итак, еще раз, есть такой компромисс, что мы увидели еще раньше этим утром, где есть на самом деле не обязательно правильный ответ, там просто лучше или хуже ответ основанные на том, что вы на самом деле волнует. 

Таким образом, есть также технологические реалии. Я не могу купить компьютер, насколько мне известно, с триллион гигабайт ОЗУ прямо сейчас. Он просто физически не существует. Так что есть некоторая верхняя граница. Но если вы когда-либо даже делал покупки для потребителей Mac или PC, тоже, как правило, есть эта кривая особенностей где может быть хорошим, лучше, а лучший компьютер. 

И маргинальные возвращается на ваш доллар покупки лучший компьютер по сравнению с тем лучше компьютер не может быть столь же высоким а тратить немного больше денег и получить лучший компьютер за хороший компьютер. Другими словами, вы платите премии, чтобы получить верхней части линии. 

И то, что мы увидим в обсуждение облачных вычислений это то, что очень часто эти дней, а также то, что такие компании, как Google рано популяризировал, не обращала для и строительство действительно фантазии, дорого новоиспеченным до компьютеров с много и много всего, а покупать или строить довольно скромные компьютеры, но многие из них, и используя то, что это в целом называется горизонтальное масштабирование вместо вертикального масштабирования. 

Таким образом, вертикальное масштабирование означало бы получить больше RAM, больше дискового, больше всего, и как бы инвестировать вертикально в вашем оборудовании так что вы просто получение лучшие из лучших из лучших, но вы платите за это. Горизонтальное масштабирование вид получить нижний ярус вещи, хорошая модель, или даже хуже, модель, но получить их много. Но как только вы получите много them--, например, в данном случае, веб-серверы, если этот сервер или один веб-хостинга является недостаточным, то просто интуитивно, то Решение этой проблемы нагрузки или перегрузки на серверах либо получить больший сервер или, что я предлагаю здесь вместо того, чтобы масштабирования по вертикали, так сказать, будет, вы знаете, что? Просто получить второй один из них. Или, может быть, даже получить третий. Но теперь мы создали инженерная проблема по своей природе этого бизнеса или финансовое решение. Что инженерная проблема сейчас? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, как вы подключаете их и-- жаль? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: справа, потому что я до сих пор have-- если я вновь ввести меня в эту картину, если это мой ноутбук где-то в Интернете, который сейчас находится между я и компания, мы говорим о том, Теперь я должен выяснить, к которому сервер я могу отправить этот конкретного пользователя? И если есть другие пользователи, как это, и затем этот один здесь, и, возможно, это пользователь А, это является пользователь В, это пользователь С, и это сервер 1, 2, и в настоящее время 3-- интуитивный ответ может быть только здесь, мы будем посылать пользователю A 1 и В 2 и С 3. И мы можем обрабатывать 3 раза больше пользователей. 

Но это упрощением. Как вы решаете, кого послать где? Так давайте попробуем рассуждать через это. Так предположим, что компьютеры А, В, и С являются клиенты, и серверы 1, 2 и 3 являются горизонтально масштабируется серверов. Так они вроде идентичны. Они все используют то же программное обеспечение. И все они могут сделать то же самое. Но причина у нас есть три из них так что мы можем справиться с тремя раз больше людей сразу. 

Итак, мы знаем из нашего обсуждение до обеда что есть аппаратная между ноутбуки и серверы. Но мы просто своего рода обобщения что в настоящее время в Интернете или в облаке. Но мы знаем, что в моем доме, есть, вероятно, домашний маршрутизатор. Рядом с серверами, там, наверное, маршрутизатор, DNS-сервер, DHCP. Там может быть что угодно мы хотим, чтобы в этой истории. 

Так как же мы начинаем решать, когда пользователь А переходит в something.com, которое сервер для маршрутизации пользователю? Как мы могли бы начать рассказывать эту историю? ЗРИТЕЛИ: балансировка нагрузки? DAVID Маланом: балансировка нагрузки. Что ты имеешь в виду? 

ЗРИТЕЛИ: Возвращение где наиболее использование является и какой из них имеет большинство имеющихся ресурсов. DAVID Маланом: Хорошо, так что позвольте мне ввести новый тип аппаратного обеспечения что мы еще не обсуждали, что это именно то, балансировки нагрузки. Это тоже может быть просто сервером. Это может выглядеть так же, как тот, который мы видели минуту назад. Балансировки нагрузки на самом деле просто кусок программного обеспечения что вы запускаете на части аппаратных средств. 

Или же вы можете заплатить поставщику, как Citrix или другие, Cisco или другие. Вы можете заплатить за их собственных аппаратных средствах, который является компенсатором нагрузки оборудования. Но это просто означает, что они предварительно установленной балансировку нагрузки программное обеспечение на своих аппаратных и продал его к вам все вместе. Так что мы просто сделать это как прямоугольник для наших целей. 

Как же теперь мне реализовать балансировки нагрузки? Другими словами, когда пользователь А хочет посетить мой сайт, их запрос как-то или другой, вероятно, путем тех, Маршрутизаторы о которых мы говорили ранее, собирается в конце концов достигнет это компенсатор нагрузки, который затем необходимо сделать маршрутизации типа решения. Но это для маршрутизации рода более высокой цели в настоящее время. Это не только о получении от точки А до точки B. Речь идет о решении, которое Точка B является лучшим среди them-- 1, 2, или 3, в данном случае. 

Так как же я решить, следует ли чтобы перейти к 1, 2, 3? Что может этот черный ящик, так говорят, делать на внутренней? Это также является еще одним примером в информатика абстракции. Я буквально нарисовали балансировки нагрузки как черный ящик черными чернилами, внутри из которых некоторые интересные Логика, или магия, даже, из которых должен прийти decision-- 1, 2, или 3. И вход только А. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Я сожалею? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Хорошо, как мы могли бы классифицировать виды операций Вот? 

ЗРИТЕЛИ: Просмотр веб-страницы по сравнению с запросами к базе данных. DAVID Маланом: Хорошо, это хорошо. Так может быть, этот пользователь А хочет просматривать веб-страницы. А может быть, это даже статический контент, то, что меняется редко, если когда-либо. И это кажется довольно простая операция. Так что, может быть, мы просто произвольно, но разумно, скажем, сервер 1, его цель в жизни просто обслуживать до статического контента, файлы, которые редко, если когда-либо, изменить. Может быть, это изображения на странице. Может быть, это текст на странице или другого такого рода неинтересных вещей, ничего не транзакционной, ничего динамического. 

В отличие от этого, если пользователь А проверяет из его или ее корзине, что требуется база данных, где-то хранить и помните, что сделки, а возможно, что запрос должны перейти к серверу 2. Так что это хорошо. Таким образом, мы можем загрузить на основе баланса от типа запросов. Как еще мы могли бы это сделать? Что other-- 

ЗРИТЕЛИ: На основе сервера использования и мощности. DAVID Маланом: справа, ОК. Таким образом, вы упомянули, что ранее, Kareem. Так что, если мы обеспечиваем некоторый вклад на [неразборчиво] среди серверов 1, 2, и 3 к этой балансировки нагрузки таким образом, что они просто постоянно информируя выравниватель нагрузки каков их статус? Как, эй, балансировки нагрузки, Я на 50% утилизации. Другими словами, у меня есть вдвое меньше, многие пользователи как я могу на самом деле обрабатывать прямо сейчас. Эй, компенсатор нагрузки, я при 100% утилизации. Эй, компенсатор нагрузки, 0% использование. Балансировки нагрузки, если это сконструированы таким образом, что может принять в этих комментариях в качестве входных данных, он может решить, ох, номер 2 на 100%. Позвольте мне прислать не будущие запросы к нему кроме пользователей уже подключены. Этот парень на 0%. Давайте пошлем много трафика к нему. Этот парень сказал, что он на 50%. Давайте пошлем некоторое движение к нему. 

Таким образом, это было бы одним из компонентов, который мы могли бы принять во внимание нагрузку. И это будет меняться с течением времени. Таким образом, решения будут меняться. Так что это действительно хорошая техника, тот, который обычно используется. Что еще мы можем сделать? И давайте на самом деле просто суммировать здесь. Таким образом, решения здесь может быть по типу трафика, я буду называть его. Он может быть в зависимости от нагрузки. Давайте посмотрим, если мы не можем придумать несколько других. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Местоположение. Так что это хороший. Так как место расположения-- вы могли бы использовать эту информацию? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: О, это хорошо. И о том, сколько миллисекунд бы она уменьшится на на основе того, что мы увидели в этом утро бы вы сказали? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Ну, на основе на следовых маршрутов мы видели раньше, что это просто грубая мера чего-то, по крайней мере, сколько времени требуется для данных, чтобы получить от А до Б чувствует, как что-либо местным было, что, как 74 миллисекунд, давать или принимать? А потом что-нибудь 100 плюс, 200 плюс был, вероятно, за границей. И вот на основе этого в одиночку, представляется разумным предположить, что для пользователя в США чтобы получить доступ к Европейскому серверу может занять два или три раза до тех пор, даже в миллисекундах, чем он мог бы принять, если это Сервер были расположены здесь географически, или наоборот. Поэтому, когда я предложил ранее, что особенно Как только вы пересекаете, что 200 миллисекунду Порог, давать или принимать, люди действительно начинают замечать. И маршрут трассы просто предполагая, сырые, неинтересные данные. Если у вас есть веб-сайт, вы должны получить пользователь при загрузке изображений или кино файлы, много текста, последующие запросы. Мы видели, когда мы посетили, что было это, Facebook или Amazon ранее, есть целый много вещей который должен быть загружен. Так что собирается сложить. Так мульти-секунд может не неразумно. Так хорошо, географии является одним из компонентов. Так что на самом деле таких компаний, как Akamai, если вы слышали о них, или другие уже давно приняты география во внимание. И получается, что по своей природе IP-адрес, IP-адрес моего ноутбука, вы можете сделать вывод, с некоторой вероятностью, где вы находитесь в мире. И в самом деле есть услуги третьих сторон, может оплатить которые поддерживают базы данных по IP-адресов и географических регионов что с высокой уверенностью будет правда, когда его спросили, где в мире это IP-адрес? 

И так, что на самом деле другие компании используют это? Если у вас есть Hulu или Netflix если Вы когда-либо путешествовал за границей, и вы пытаетесь что-то смотреть на Hulu, и вы не в США, вы можете увидеть сообщение говоря, не в США. К сожалению, вы не можете увидеть это. 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: О, на самом деле? Но да, так что на самом деле это идеальное приложение чего-то очень технический актуальной проблеме. Если вы должны были VPN от Европе или Азии или где-нибудь в мире к корпоративной Штаб-квартира в Нью-Йорке или там, где вы находитесь, вы собирается создать видимость на внешние веб-сайты, вы на самом деле в Нью-Йорке, даже если вы физически довольно далеко. 

Теперь вы пользователь собираетесь знаю, что вы, очевидно, далеко. Но вы также будете чувствовать себя, потому что из этих дополнительных миллисекунд. Это дополнительное расстояние и шифрования, что происходит в VPN собирается замедлить ход событий. Таким образом, он может или не может большой опыт. Но Hulu и Netflix собираются, чтобы увидеть Вы, как сидя где-нибудь в Нью-Йорке, как вы четко подбирала. Что идеальное решение для этого. 

Хорошо, так что география одно решение. Что еще мы могли бы использовать, чтобы решить, как для маршрутизации трафика из A, B, и C 1, 2 и 3, опять же, положив инженерный шляпу на? Все это звучит очень сложно. Э-э, я даже не знаю, где приступить к выполнению тех. Дайте мне что-нибудь попроще. Что это самый простой способ чтобы принять это решение? 

ЗРИТЕЛИ: Является ли сервер доступен? 

DAVID Маланом: Является ли сервер доступен? Так что не плохо. Это хорошо. Это своего рода нюансирования нагрузки. Так что давайте держать, что в категории нагрузки. Если вы доступны, я просто собирается отправить данные там. Но это может привести к обратным быстро. Потому что, если я использую эту логику, и если я всегда спрашивают 1, кем вы, кем вы, кем вы, если ответ всегда да, Я собираюсь отправить 100% трафика к нему, 0% для всех остальных. И в какой-то момент, мы собираемся ударить что замедление или сайт недоступен. Так что немного лучше, чем что, но все еще довольно просто и не почти столь же умна, как принимать все эти дополнительные данные во внимание? 

ЗРИТЕЛИ: Стоимость каждого сервера. DAVID Маланом: Стоимость на сервере. ОК, так что позвольте мне бросить, что в категории нагрузки тоже. Потому что вы найдете в компания, too--, что если вы обновить серверы с течением времени или купить больше, Вы не могли бы быть в состоянии получить точно одинаковые версии аппаратного обеспечения. Потому что она выпадает из даты. Вы не можете купить его больше. Цены изменяются. 

Таким образом, вы можете иметь разнородные серверы в кластере, так сказать. Это совершенно нормально. Но аппаратное обеспечение в следующем году может быть в два раза быстрее, в два раза способны, как в этом году. Таким образом, мы можем бросить, что в категорию нагрузки. Эта петля обратной связи между 1, 2 и 3 в балансировки нагрузки безусловно, может сказать ему, эй, я на 50% мощности. Но, кстати, я тоже имеют в два раза больше ядер. Используйте эту информацию. Даже simpler-- и это происходит чтобы быть темой в информатике. Если есть сомнения, или когда вы хотите простой решение, которое в целом работает хорошо в течение долгого времени, не выбирают тот же сервер все время, но выберите-- 

ЗРИТЕЛИ: случайный один? DAVID Маланом: --a случайный сервер. Да, выбрать одну или другую сторону. Так что на самом деле хаотичность это очень мощный компонент в информатике, и в машиностроении более как правило, особенно если вы хотите чтобы сделать простое решение быстро не усложняя его со всеми из них очень умный, но и очень умные, решения, которые требуют все более инженерные, все тем более мысль, когда на самом деле, почему не я только отчасти монетку, или трехсторонний монета в данном случае, и решить, стоит ли идти 1, 2, 3? 

Это может иметь неприятные последствия вероятностно, но так же, как шансы из снова листать головы и Снова и снова и снова и снова и снова возможно в reality-- супер, супер маловероятно. Таким образом, с течением времени, шансы просто отправка пользователей в случайном порядке в 1, 2, и 3 будет отрабатывать прекрасно. И это техника как правило, известен как круговике. 

Или на самом деле, это не по круговой системе. Это было бы случайный подход. И если вы хотите быть даже немного проще, чем это, Круговая система будет, первый человек идет 1, второй человек 2, третье лицо 3, четвертый человек на 1. И в этом заключается круглый робин. Вы просто вид идти вокруг в цикле. 

Теперь, вы должны быть умными об этом. Вы не должны слепо отправить пользователю сервер номер один, если в чем дело? Если это при максимальной мощности, или Не это просто больше не реагирует. Так что в идеале вы хотите, чтобы некоторые вид цепи обратной связи. В противном случае, вы просто отправить все ваших пользователей в тупик. Но это может быть принято во внимание, тоже. 

Так что не под оценить значение просто случайность, что довольно часто решение такого рода проблем. И мы будем записывать круговой. Так как некоторые компании реализуют Круговая система или хаотичность или любое из этих решений? Ну, к сожалению, они делать такие вещи. Позвольте мне подтянуть еще один быстрый снимок экрана. 

На самом деле, давайте сделаем два. Я не знаю, почему мы получать все из этих блюд. Это очень странно. Хорошо, что я на самом деле хочу это скриншот. Это странно. Хорошо, так что я могу подделать это. Я не знаю, сколько еще Я хочу, чтобы держать скроллинг. 

Так что очень часто, вы окажетесь по адресу, как www.2.acme.com, может быть, www.3 или 4 или 5. И следить за этим. Вы не видите его, что часто. Но когда вы делаете, это своего рода, как правило, будет больше, более старые, stodgier компании что технологически не очень кажется, знают, что они делают. И вы видите это на технологических компаний иногда, старшие. 

Так что же они делают? Как они реализации балансировка нагрузки, будет это казаться? Если вы нашли себя в качестве Пользователь набрав www.something.com, и вдруг вы в www.2.something.com, то, что имеет свою нагрузку балансир, вероятно, сделано? ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так балансировки нагрузки предположительно принятие решения на основе одного из это принятие решений processes-- на самом деле не имеет значения, какой. Но так же, как я нарисован Цифры на борту здесь, серверы не просто называется 1, 2 и 3. Они, вероятно, называется www1, www2, www3. И получается, что внутри HTTP-запрос эта особенность. И я собираюсь смоделировать это следующим образом. 

Я собираюсь открыть тот же Вкладка девелоперская сеть, как и прежде всего таким образом, мы можем видеть, что происходит на под капотом. Я собираюсь очистить экран. И я собираюсь идти, давайте говорят, http://harvard.edu. Теперь для любой бизнес-причины, Harvard решил, как и многие другие, многие другие веб-сайты, стандартизировать его веб-сайт по www.harvard.edu для технических и маркетинговых соображений. Это просто вид в Моде иметь WWW. 

Таким образом, сервер имеет в Гарварде чтобы как-то перенаправить пользователя, как я продолжаю говорить, от один URL на другой. Как это работает? Что ж, позвольте мне идти вперед и нажмите клавишу ВВОД. И обратите внимание на URL действительно быстро изменено на www.harvard.edu. Позвольте мне прокрутить назад в этом история и нажмите на эту отлаживать диагностическая информация, если вы будете. Позвольте мне взглянуть на мою просьбу. 

Так вот запрос, который я сделал. И заметьте, что это согласуется с видом запроса я сделал Facebook раньше. Но обратите внимание на реакцию. Что изменилось в ответ на этот раз? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так что это не 200 OK. Это не 404 Not Found. Это 301 Moved Постоянно, который это своего рода забавный способ сказать, Harvard повысил и переехал в другом месте www.harvard.edu. 301 означает, что это редирект. И где если пользователь по-видимому, быть перенаправлены? Там в дополнительный лакомый кусочек информация внутри этого конверта. И каждая из этих линий теперь будет начать называть заголовок HTTP. Заголовок просто ключевое значение pair-- что-то что-то двоеточие. Это часть информации. Где следует новый Откуда, по-видимому быть? Обратите внимание на последнюю строку среди всех этих заголовков. 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так что есть Дополнительная информация. Первая строка, что я выделил говорит 301 Moved постоянно. Ну, где он переехал? Последнее line-- и они этого не делают должны быть в таком порядке. Это может быть случайным. Расположение толстой кишки означает, эй браузер, перейдите на этот URL вместо. 

Так браузеры понимают HTTP перенаправляет. И это очень, очень распространенный способ подпрыгивая пользователь из одного места в другое. Например, если вы когда-либо пробовали посетить веб-сайт, который вы не вошел в, вы можете неожиданно найти себя на новом URL вообще быть будет предложено войти в систему. 

Как это работает? Сервер, вероятно, отправляя 301. Там также другие номера, как 302, несколько отличается по смыслу, что отправить вас на другой URL. А потом сервер, как только вы вошли в систему, отправит вас туда, где вы на самом деле предназначены. 

Так что, то, плохо сконструированные сайты делать? Когда вы посещаете www.acme.com, и они просто случается, назвали своих серверов www1, www2, www3, и так далее, они очень simply-- которая является справедливой, но очень своего рода foolishly-- перенаправлять вас на самом деле по-другому с именем сервера. И это работает прекрасно. Это приятно и легко. 

Мы видели, как это было бы сделано под капотом в виртуальном конверте. Но почему это возможно, является плохое инженерное решение? И почему я вроде снисходительного к этой конкретной техники подход? Утверждают, почему это плохо. Бен? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Каждый сервер должен будет есть дубликат сайта. Я в порядке с этим. И в самом деле, это то, что я предположим, для всей этой истории, так как если мы wanted-- хорошо на самом деле, для Дана ранее, за исключением Предложение, где если у вас есть разные серверы делать разные вещи, то может быть, они могли бы быть на самом деле функционально делать разные вещи. 

Но даже тогда, в какой-то момент, ваш базы данных собирается получить перегружены. Сервер статические активы собирается получить перегружены. Так что в какой-то момент, мы назад в этой истории, где мы необходимо иметь несколько копий одного и того же. Так что я в порядке с этим. ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: ОК, так что некоторые страницы может быть непропорционально популярным. И так закрепляющий на один адрес не обязательно самое лучшее. [Неразборчиво]? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Что вы имеете в виду под этим? ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, точно. Таким образом, вы не хотите обязательно have-- вас, конечно, не хотите, чтобы ваши пользователи вручную вводить в www1 или www2. С точки зрения брендинга, его просто выглядит немного смешно. Если вы просто хотите своего рода чистый, элегантный опыт, имея эти рода случайным образом пронумерованные URL-адреса на самом деле не очень хорошо. Потому что тогда пользователи, безусловно, собирается копировать и вставлять их в сообщения электронной почты или мгновенные сообщения. 

Теперь они распространяющейся. Теперь вы своего рода запутанным СВОЙ менее технически аудитории, кто думает Ваш веб-адрес www2.something.com. Там нет убедительных семантики этого. Это как раз случается быть основной техническая деталь, что вы имеете пронумерованы серверы таким образом. 

И еще хуже, что, если, например, может быть, во время рождественских праздников когда это бизнес действительно процветает, вы получили www1 через www99, но в январе и феврале и вперед, вы выключаете половину тех, поэтому у вас есть только www1 через www50? Что подразумевается теперь, что очень разумное решение бизнес? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Вам нужно управлять всеми теми, до сих пор. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Совершенно верно. Это своего рода улова там. Если ваши клиенты находятся в привычку закладок вещи, отправки по электронной почте их, просто сохранения URL где-нибудь, или если это только в их авто завершить в свой браузер таким образом, они на самом деле не намеренно вводить его, это просто происходит, они могли бы, за 11 месяцев в году эффективно, достигают в тупик. И только самые проницательные из пользователи собирается реализовать, Возможно, я должен вручную удалить этот номер. Я имею в виду, это просто не произойдет с большим количеством пользователей, так что плохо для бизнеса, плохая инженерная реализация мудрым. 

Так, к счастью, это не нужно. Оказывается, что балансиры нагрузка может сделать это вместо того, чтобы говорить, когда А делает request-- эй, перейти к 1. Другими словами, вместо того, чтобы отправки которые перенаправляют таким образом, что первый шаг в этом Процесс является иди сюда, он тогда сказал, чтобы пойти в другом месте. И так шаг три это, он идет в другом месте. 

Вместо этого вы можете продолжать маршрут, чтобы продолжать использовать этот термин, все данные А в через балансировки нагрузки таким образом, чтобы он никогда не контакты 1, 2, или 3 непосредственно. Весь трафик действительно получает "разгромили" балансировки нагрузки на себя. И вот теперь мы вроде намеренно размывает линии среди этих различных устройств. Балансировщик нагрузки может данных маршрута. Это просто функция, которую она имеет. 

Таким образом, балансировки нагрузки, также, это часть программного обеспечения, на самом деле. И маршрутизатор является частью программного обеспечения. И вы можете абсолютно иметь две части программного обеспечения внутри одного физического компьютера поэтому нагрузки балансир может сделать эти несколько вещей. 

Таким образом, есть еще один способ чтобы сделать это, который на самом деле восходит к своего рода первых принципов в DNS, о котором мы говорили до разрыва. DNS была система доменных имен. Помните, что вы можете запрашивает сервер DNS, что IP-адрес google.com, facebook.com? 

И мы действительно можем сделать это. Инструмент мы не использовали ранее, тот, который так же, как доступный, называется Nslookup, для сервера имен поиска. И я просто хочу, чтобы ввести facebook.com. И я вижу, что IP Facebook, адрес, по-видимому это. Позвольте мне идти вперед и скопировать что, перейти в браузер, и перейти к HTTP: // и что IP-адрес и нажмите клавишу Enter. И действительно, это, кажется, работает. 

Сейчас работает в обратном направлении, что было внутри виртуального конверта что Facebook ответил, когда Я посетил, что IP-адрес напрямую? Потому что уведомление, где я сейчас? Где я сейчас, адрес? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: В безопасной версии, и на www.facebook.com. Так что это даже не просто защищенный IP-адрес. Facebook приняла на себя сказать, что это смешно. Мы не будем держать вас в этом некрасиво глядя URL это числовой. Мы собираемся отправить вам HTTP перенаправление посредством того же заголовка что мы увидели before-- Откуда-то толстого кишечника. 

А так это просто означает, что под капот по-прежнему этот IP-адрес. Каждый компьютер в сети Интернет имеет IP-адрес, он, казалось бы. Но вы не обязательно должны выставить что пользователю. И так же, как еще в тот день, там был 1-800-Collect, 1-800-С-О-Л-Л-Е-С-Т, в США, был способ сделать Collect звонки через очень легко запоминающегося телефон номер, или 1-800-MATTRESS купить кровать, и подобные Мнемоники, что вы даже видите по телефону вид рода до сих пор, что письма карта с номерами. 

Теперь, почему это? Ну, это намного легче запомнить 1-800-MATTRESS или 1-800-Collect вместо 1-800-то что-то что-то что-то что-то что-то что-то, где каждый из них является цифрой. Точно так же, как мир узнал быстро, что мы не должны есть люди, запоминать IP-адреса. Это было бы глупо. Мы будем использовать имена вместо. И именно поэтому DNS был рожден. 

Хорошо, так и с тем, что, с точки зрения балансировки нагрузки, давайте попробуем yahoo.com. Ну, это интересно. Yahoo, похоже, возвращаются три IP-адреса. Так что из этого вывод, если вы могли бы, что такое еще один способ, который мы могли бы реализовать это понятие балансировки нагрузки может быть, даже не используя физический устройство, это новое физическое устройство? 

Другими словами, я могу отнять финансирование у вас есть для балансировки нагрузки и сказать вам, чтобы использовать некоторые существующие часть аппаратных средств для реализации это понятие балансировки нагрузки? А спойлер, да, но что, или как? Что такое Yahoo, возможно, здесь делает? Kareem? Хорошо, Крис? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, все Три из этих работ. Так что случайностью, Круговая система, место расположения-- вы можете просто использовать существующий кусок головоломки что мы говорили ранее о DNS системы и просто сказать, когда первый Пользователь дня просит yahoo.com, дать им первый IP-адрес, как один, заканчивающийся в 45 там. И в следующий раз, когда пользователь запрашивает IP-адрес yahoo.com откуда-то в мире, дать им второй IP, затем третий IP, то первый IP, затем второй. Или быть умным об этом и сделать это графически. Или это случайно и не просто делать это круговой системе в этой моде. 

И в этом случае, то мы даже не нужно чтобы ввести этот черный коробка в нашу картину. Нам не нужно новое устройство. Мы просто говоря компьютеры чтобы перейти к серверам напрямую, эффективно, но не путем их имени. Они никогда не должны знать имя. Они просто говорят, что yahoo.com карты к любому из этих IP-адресов. 

Таким образом, он посылает точно такой же запрос. Но на внешней стороне конверт, он просто помещает IP, что он был проинформирован о. И таким образом, тоже могли бы мы балансировать нагрузку запросы просто посылать конверт к отличается одним из собственных серверов Yahoo,? 

И если мы будем рыть, мы увидим, возможно, другие компании с более. CNN имеет два публично подвергаются. Хотя на самом деле, если мы делаем это снова и again-- cnn.com-- вы можете увидеть они меняют порядок, на самом деле. Так что механизм CNN, используя, по-видимому? 

ЗРИТЕЛИ: Random. DAVID Маланом: Ну, может быть случайным, хотя кажется, езда на велосипеде назад и вперед. Так что это, вероятно, где Круговая система они просто переключая заказ так, что я, вероятно, займет первое. Мой компьютер будет принимать первый каждый раз. Так что это балансировка нагрузки. И это позволяет нам, в конечном счете, для отображения данных, или запросы к карте, на нескольких серверах. Так что же виды проблемы в настоящее время все еще существуют? Такое ощущение, что мы на самом деле просто решить хорошую проблему. Мы получили пользователей на разных серверах. Но-- ой, и Крис, сделал у вас есть вопрос, прежде чем? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Полностью зависит от многого. Так что же здесь происходит? И мы действительно можем увидеть это. Так давайте попробуем Yahoo. На самом деле, давайте перейдем к Facebook. Потому что мы знаем, что один работает. Так что я собираюсь скопировать что IP-адрес снова. Я собираюсь закрыть все эти вкладки. Я собираюсь пойти открытым, что специальная вкладка сеть здесь. И я собираюсь посетить только HTTP: //. А теперь я ударю Enter. И давайте посмотрим, что произошло. 

Если я смотрю на эту просьбу, уведомление что my-- Facebook является плохим примером. Потому что у них есть супер фантазии техника которая скрывает эту деталь от нас. Позвольте мне использовать Yahoo instead-- HTTP: // этот IP. Давайте откроем нашу сеть Вкладка, сохранить журнал. И здесь мы идем, Enter. Забавно. Хорошо, так вот прославленный 404 сообщение. Что смешного в том, что они вероятно, никогда не вернется. Потому что там, наверное, не то, что само по себе неправильно. Они просто намеренно решили не поддерживать числовой форме их адреса. 

Так что мы на самом деле видим в Вкладка Сеть, если я тяну это здесь, это, как я говорю, прославленный 404, где если я смотрю на заголовки ответа, это то, что я получил here-- 404 Not Found. Так давайте попробуем друг друга. Давайте посмотрим, если CNN сотрудничает с нами. Я захватить один из IP-адресов на CNN, очистить это, HTTP, ля-ля-ля-ля. Таким образом, в ответ на Криса вопрос, что один работал. 

И давайте перейдем к заголовков ответа. Вообще-то нет, все в порядке, я изо всех сил, чтобы найти рабочий пример. Так CNN решил, что мы просто оставить вас на любой адрес, вы на самом деле посетить, вопросы брендинга в сторону. Но то, что не происходило бы, если мы могли видеть его в случае Facebook, это мы получили бы 301 Moved Постоянно, скорее всего, внутри которого находится Местонахождение: https: //www.facebook.com. И шансы www.facebook.com является псевдоним для точного же сервера мы просто пошел в. 

Так что это немного контрпродуктивным. Мы в буквальном смысле посещения сервера. Сервер затем говорит нам, уйти. Перейти к этому другому адресу. Но мы просто так случается, возвращаясь к тому же серверу. Но, вероятно, мы теперь остаться на том, что Сервер без этого назад и вперед. Потому что теперь мы используем названный версия сайта, а не цифровой. Хороший вопрос. 

ОК, так что если мы теперь assume-- мы решили балансировки нагрузки. Теперь у нас есть механизм, будь то с помощью DNS, будь то с помощью этого черного ящика, будь то это с помощью любого из этих методов. Мы можем принять запрос пользователя в систему и выяснить, к какому серверу, 1, 2 или 3, послать его или ее. 

Что начинает разрушаться о нашем сайте? Другими словами, мы имеем построил бизнес, который был ранее на одном сервере. Теперь, когда бизнес работает на нескольких серверах. Какие допущения, какие виды проектных решений, может теперь ломать? 

Это менее очевидно. Но давайте посмотрим, если мы не можем поставить наши палец на некоторые проблемы мы создали для себя. Опять же, это вроде как проведение вниз утечки в шланге. А теперь какой-то новый вопрос выдвинулась здесь. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Хорошо, так что мы должны постоянно растет наше пространство на жестком диске. Прямо сейчас я в порядке с этим. Потому что я думаю, что могу по горизонтали масштаба. Подобно этому, если я бегу низко, я просто получить четвертый сервер, может быть, пятый сервер, а затем увеличить нашу способность еще на 30% или 50% или этажерки. Так что я в порядке с этим, по крайней мере сейчас. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: ОК, так что это хорошая точка. Итак, пусть серверы не являются идентичными. И обслуживание клиентов или по электронной почте эквивалент получает какое-то сообщение от пользователя говоря, это не работает правильно. Вполне возможно, иногда, что, возможно, один или несколько серверов действует немного криво, но не другие, которые, безусловно, может сделать это труднее преследовать вопрос. Вы, возможно, придется искать несколько мест. 

То есть проявление другого рода ошибки, которая является то, что вы, вероятно, следует разработали инфраструктуру так что все действительно идентичны. Но это действительно показывает новую проблему что у нас не было раньше. Что еще? ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, есть еще сложность. Там физически более проводов. Там другое устройство. На самом деле, я внес фундаментальный Понятие и фундаментальная проблема Известно, как одна точка неудачи, которая, даже если вы никогда не слышали фраза, вероятно, можно Теперь работать в обратном направлении, и понять это. Что это значит, что у меня есть один точка отказа в моей архитектуры? И архитектуры, я просто имею в виду топологию этого. 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, что если выравниватель нагрузки идет вниз? Я вставил этот средний человек, у которого цель в жизни, чтобы решить проблему. Но я представил новую проблему. Новая утечка возникла в шланге. Потому что теперь, если балансировки нагрузки умирает или разрывы или misfunctions, Теперь я потерял доступ к все три из моих серверов. А до этого, я не сделал есть этот посредник. И так это новая проблема, возможно. Мы вернемся к как мы можем исправить это. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Это было бы один подход. Да, и так это будет довольно отверстие крысы мы начинаем идти вниз. Но давайте вернемся к что в мгновение. Какие еще проблемы мы создали? 

Так Дэн упомянул базу данных ранее. И даже если вы не слишком хорошо знакомы технически, база данных просто сервер, на котором изменение данных обычно хранится, может быть, кто-то для того поставил, ваш профиль пользователя, ваше имя, ваш адрес электронной почты, то, что может быть введены или изменены с течением времени. 

Ранее моя база данных была на тот же сервер, как мой веб-сервер. Потому что я только что был один веб-хостинг аккаунт. Все было в том же самом месте. Где я должен поставить свою базу данных Теперь, на сервере 1, 2 или 3? 

ЗРИТЕЛИ: 4. 

DAVID Маланом: 4, ОК, все Хорошо, так что давайте пойдем туда. Так что я собираюсь поставить свою database-- и давайте начать обозначать эти WWW, WWW, WWW. И я собираюсь сказать, это номер четыре. И я скажу БД для базы данных. Хорошо, мне это нравится. Какую линию я должен предположительно рисунок здесь? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так что код, как мы обсудим завтра, предположительно такой же, на всех трех серверах. Но теперь необходимо подключить не к базы данных на локальном компьютере, но в другом месте. И это прекрасно. Мы можем просто дать к базе данных, имя, как у нас, или номер. И это все работает отлично. Но что же мы сделали? Мы горизонтально масштабируется при наличии три сервера вместо одного, который хороший. Потому что теперь мы можем обрабатывать в три раза больше нагрузки. 

А еще лучше, если один или два из этих серверов выходит из строя, мой бизнес может продолжать работать. Потому что я до сих пор один, даже если я вид прихрамывая с точки зрения производительности. Но то, что новая проблема есть я введены путем перемещения базы данных для этого отдельный сервер а не на 1, 2 и 3? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, так что теперь у меня есть другая единая точка отказа. Если моя база данных умирает, или нужно быть повышен, или независимо от того, теперь уверен, мой веб-сайт в Интернете. И я могу служить статическим, неизменное содержание. Но я не могу позволить пользователям войти в систему или изменить ничего или заказать что-либо, что еще хуже. Потому что если 4 отсутствует, затем 1, 2, и 3 на самом деле не может говорить с ней по определению. 

ОК, так что да, и вот почему Я не решаясь сделать это. Так что давайте вернемся к этому. Я не имею в виду, чтобы толкать вас. Но картина очень быстро собирается получить стресс. Потому что вам нужно, чтобы начать имея два всего. На самом деле, если вы когда-либо видел кино Как связаться несколько лет назад с Джоди Foster-- нет? 

ОК, так что для двоих нас, кто видел контакт, есть отношения там, где они по существу, купил два чего-то а не один, хотя и в два раза дороже. Так что это был своего рода игривая комментарии в фильме. Это своего рода связанные с этим. Мы могли бы сделать это абсолютно. И вы только стоимость нас в два раза больше денег. Но мы вернемся к этому. 

Итак, мы решили эту проблему. Таким образом, вы знаете, что? Это похоже на скользком склоне. Я не хочу иметь дело с наличием иметь дубликат базы данных. Это слишком много денег. Знаешь что? Я хочу иметь свою базу данных так же, как в первой версии где каждый сервер имеет свою собственную локальную базу данных. Так что я просто собираюсь рисовать дБ на каждом из них. 

Так что теперь каждый веб-сервер идентичен в той степени, так как она имеет один и тот же код, то же самое статические активы, те же рисунки и текст и так далее. И каждый из них имеет свою собственную базу данных. Я установил одну точку проблемы отказа. Теперь у меня есть база данных. Независимо от того, который два или один из них вещи, умирают, всегда есть один слева. Но то, что новая проблема есть я создал что решение Дана избежать? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, я должны синхронизировать их, не так ли? Так как мне нужно синхронизировать кто собирается where-- другими словами, если Алиса посещают мой сайт, и она случайно чтобы получить случайным образом или круглый robined или независимо от того, на сервер номер один, После этого я должен всегда отправить ее на сервер 1. Зачем? Потому что, если я посылаю ее на сервер 2, это будет чтобы посмотреть, как она там не существует. 

Я не буду иметь ее историю заказов. Я не буду иметь ее профиль там. И это просто чувствует, как он приглашает проблемы. И когда Боб посещает, я должны послать его всегда к тому же серверу, 2, или в зависимости от того один, и Чарли к третьему, и последовательно. Это не лишено смысла, хотя. Это называется секционирования базы данных. И на самом деле это было то, что Facebook сделал на ранних стадиях. 

Если вы следовали историю Facebook, это началось здесь в кампусе в качестве www.thefacebook.com. Потом она превратилась однажды Марк начал распространение в другие кампусы чтобы быть harvard.thefacebook.com и mit.thefacebook.com, и, вероятно, bu.thefacebook.com, и тому подобное. И это потому, что на ранней стадии, я не думаю, вы могли бы иметь друзей по кампусов. Но это нормально. Потому что любой из Гарварда был отправлен на этот сервер. Любой из БУ получил отсылаться на этот сервер. Любой из MIT получил отправлено к этому server-- в теории. Я не совсем знаю, все лежащих в основе деталей реализации. Но он, вероятно, распределяли людей, их университетского городка, где их сеть была. 

Так что это хорошо до точки где вам нужно два сервера для Гарварда, или три сервера для Гарварда. А потом, что простота вид ломается. Но это разумный подход. Давайте всегда посылает Алисе к тому же месту, всегда посылают Боба на то же место. Но что произойдет, если Элис сервер переходит в автономный режим? Боб и Чарли все еще можно купить вещи и войти на сайт. Но Алиса не может. Таким образом, вы потеряли треть вашей пользовательской базы. Может быть, это лучше, чем на 100%? Но, возможно, было бы хорошо, если бы мы могли до сих пор поддерживают 100% наших пользователей даже если треть наших серверов переходит в автономный режим. 

Таким образом, мы могли бы синхронизировать что? Не пользователи, сами по себе, но базы данных во всех этих серверах. Так что теперь мы вроде нужны некоторые вид соединения вот так, что сами серверы может sync-- не является необоснованным. И в самом деле, эта технология существует. В мире баз данных, есть понятие ведущий-ведомый баз данных, или первичного и вторичного, где среди особенностей не только для хранения данных и реагировать с данными, но и просто постоянно синхронизируются друг с другом. Так что в любое время вы пишете или сохранить что-то в эту базу данных, он сразу же получает "реплицировать" для других баз данных, а также. 

И в любое время читать из него, это не имеет значения, где вы находитесь. Потому что если в теории они все синхронизируются, вы собирается получить тот же вид данных. Так что это звучит идеально. Там должен быть подвох. Что может быть подвох? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так что в три раза так много вещей может пойти не так. Это реальность. Все это могло бы быть таким же духом. Но кто-то должен настроить их. Там очень высокая вероятность того, что что-то пойдет не так. Просто комбинаторно у вас есть больше материала склонны к ошибкам. Что еще плохо потенциально? ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, так Синхронизация может быть плохим. Даже, как вы могли бы знать из резервных копий и такие, если вы просто слепо делать резервное копирование, то, что если что-то пойти не так, на одной базе данных? Вы удалите что-то вы не должны. Вы немедленно дублировались эта проблема везде. Так что Виктория была talking-- резервное копирование было бы хорошо здесь. И поэтому мы вернемся к этому. И было ясно, что мы говорим не о резервных копий здесь сами по себе. Мы говорим о подлинной репликации или синхронизации между серверами. Они все живут. Они не предназначены для использоваться для резервного копирования. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Что это? ЗРИТЕЛИ: Higher-- DAVID Маланом: Более высокая стоимость. Мы утроили расходы на Конечно, хотя по крайней мере, с точки зрения аппаратных средств. Поскольку база данных является просто кусок программного обеспечения. И веб-сервер является частью программного обеспечения. Это, вероятно, бесплатно, если мы используем любое количество вещей с открытым исходным кодом. Но если мы используем что-то вроде Oracle, мы платим Oracle больше денег в лицензии или Microsoft для доступа. Там должен быть какой-то другой улов здесь. Это не может быть это просто. 

Так что к точке, я думаю, что это было Карима, для географии earlier-- или нет, Роман, это был, для geography-- предположим что мы быть умным об этом, и мы помещаем один из наших серверов, и в свою очередь, наши базы данных, в США, а другой в Европе, другой в Южной Америке, другой в Африке, другой в Азии, в любом месте мы могли бы хотеть во всем мире. Мы уже знаем из нашего следа маршруты, что точка А и точка B, если они дальше друг от друга, собираются занять больше времени. 

И если некоторые из вас использовали инструменты, такие как Facebook или Twitter или какие-либо из этих сайтов, что в эти дни постоянно меняются из-за пользователя созданные данные, иногда, если вы ударил перезагрузить или открыть ту же страницу в другом браузере, вы видите разные версии, почти. Вы можете увидеть чей-то статус обновить здесь, но не здесь, а затем перезагрузить, а затем его Оказывается, и вы снова перезагрузить, и она исчезает. Другими словами, держать глаз за это, по крайней мере, если вы используете социальные сетей в частности. 

Опять же, только потому, что данных меняется так быстро, иногда серверы рассинхронизироваться. А может быть, это супер маленькое окно. Но 200 миллисекунд, может быть, даже больше, чем это that-- собирается занять некоторое ненулевое количество времени для этих баз данных для синхронизации. И мы не только говорить об одном запросе. Если у компании есть тысячи пользователи использовать его одновременно, они могут буфер. Другими словами, может быть очереди или ожидания линии прежде, чем все те базы данных запросы могут синхронизироваться. Так что, может быть, на самом деле это несколько секунд. 

И в самом деле, это правда, я думаю, что даже по сей день с Facebook, в результате чего при синхронизации с Восточное побережье на Западное побережье, она имеет нетривиальное задержка распространения, так сказать, что вы только отчасти должны терпеть. И поэтому это не так много ошибка, как это реальность которые не могли бы видеть пользователи правильные данные, по крайней мере, несколько секунд. 

Я вижу это на Twitter много на самом деле, где я иногда буду чирикать в одном окне, откройте другое затем увидеть его, чтобы подтвердить, что это действительно пошли вверх, и это еще не там. И я должен вроде перезагрузки, перезагрузить, reload-- ой, там. И это не потому, что он не был спасен. Он просто не распространяется на другие серверы. 

Так что это компромисс, too-- вы на самом деле хотят подвергать себя риску что если пользователь переходит к их порядку история, это не на самом деле там еще? Я вижу это на некоторых банках. Это всегда раздражает меня, когда, ну, например, вы можете идти только как шесть месяцев назад в выписках в некоторых банках, даже если в теории они должны быть в состоянии иметь все в Интернете. Они просто взять вещи в автономном режиме иногда. Иногда too-- какой веб-сайт это? Там в одно-- о, это GoDaddy, я думаю. GoDaddy, когда вы заканчивали купить доменное имя или что-то, они часто дают вам ссылку на квитанции. А если нажать на эту ссылку право прочь, это часто не работает. Он просто говорит, тупик, ничего здесь. 

И это тоже из-за эти задержки распространения. Потому что по какой-либо причине, они занимают немного времени на самом деле генерировать это. Так что это вроде как вы хотите вытащить свои волосы в какой-то момент. Потому что все, что вы пытаетесь сделать, это решить простую проблему. И мы продолжаем создание новых проблемы для себя. Итак, давайте посмотрим, если мы может отчасти отменить. 

Оказывается, что объединение базы данных на всех ваших веб-серверов это на самом деле не лучшая практика. Вообще, то, что инженер будет делать, или системный архитектор, будет иметь разные ярусы серверов. И только ради пространства, я буду черпают базу данных здесь. 

Мы могли бы иметь базу данных и Сервер номер четыре здесь что имеет подключение к каждый из этих серверов здесь. Так что это может быть наш фронт конец ярус, так как люди сказали бы. И это будет наш задний конец уровня. И это просто означает, что они сталкиваются с пользователем. А базы данных не обращена к пользователю. Нет пользователь может напрямую доступ к базе данных. 

Так давайте теперь, может быть идти вниз Предлагаемый маршрут Виктория. Это единая точка отказа. Это делает меня неудобным. Так что, возможно, Наиболее очевидное решение? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: К сожалению, сказать, что снова. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Непроизводственная сервер. Что вы имеете в виду? 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: О, хорошо, так что резервное копирование. ОК, так что мы могли бы сделать это, конечно же. И на самом деле это очень часто делается. Это может быть база данных номер пять. Но это только соединен с номером четыре. И вы могли бы назвать его горячим резервом. Эти две базы данных может быть сконфигурирован просто постоянно синхронизировать друг друга. И поэтому, если эта машина умирает, для все, что глупо reason-- жесткий диск умирает, кто-то поездок по шнур, некоторое программное обеспечение является некорректной и машина зависает или crashes-- вы могли бы иметь человека в буквальном смысле отключите этот от стены и вместо того, чтобы подключить этот в. А потом внутри, давайте скажем, несколько минут, может быть, через полчаса, вы вернулись в Интернете. 

Это не здорово, но это также не попало. И вам не придется беспокоиться о каких-либо проблемах синхронизации. Потому что все уже есть. Потому что у вас было идеальным резервного копирования готов к работе. 

Вы могли бы быть немного искуснее об этом, так как некоторые люди часто делают, где вы могут иметь базы данных номер четыре здесь, база данных номер пять здесь, которые разговаривают друг с другом. Но у вас также есть это вид arrangement-- и сознательно выглядит грязным, потому что он is--, где все передние серверы могут говорить со всеми серверными серверов. И поэтому, если эта база данных не реагировать, эти передние конечные серверы чтобы иметь программирование код в них, что говорит, если вы не получите подключение к этой базе данных, первичный немедленно начинает говорить с вторичным. 

Но это сейчас толкает сложность в коде. А теперь ваши разработчики, ваше программное обеспечение разработчики, должны знать об этом. И вы вроде завязывания код, вы пишете к вашей фактической задней части детали реализации, что делает его более трудным, особенно в большем компания или больше веб-сайт, где вы не обязательно хотят программисты иметь чтобы знать, как база данных инженеры выполняют свою работу. Вы можете сохранить эти роли своего рода функционально отличаются так что есть этот слой абстракция между ними. 

Итак, как мы могли бы это исправить? Ну, мы как-то решена эта проблема когда-то раньше. Почему бы нам не поставить один из эти вещи здесь, где он говорит, в свою очередь номер четыре и пять, все веб-серверов внешнего интерфейса поговорить с этим посредником, а Посредник в свою очередь, маршрутах их данных? На самом деле, что может быть хорошее название для этой вещи? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: OK, менеджер баз данных. Но что может быть термин, который мы могли бы повторно использовать для этого устройства? Мы балансирования. Да, так что на самом деле, я не быть справедливым здесь. Таким образом, балансировки нагрузки будет означать, что мы переключая назад и вперед здесь, которые нуждаются в самом деле не так. Таким образом, есть несколько способов, которыми мы могли бы сделать это. 

Если это на самом деле балансировки нагрузки, то история точно такая же, как и раньше. Некоторые из запросов идут 4. Некоторые из них идут на 5. И это хорошо. Потому что теперь мы можем обрабатывать в два раза больше пропускной способности. Но эта связь здесь супер важно. Они должны оставаться постоянно синхронизированных и мы надеемся, географически не слишком далеко друг от друга, так что синхронизация по существу мгновенно. В противном случае мы могли бы иметь проблемы. 

Так что это не плохо. Но опять-таки, мы представила новую проблему. Какую проблему я просто воссозданы? Единая точка отказа. Так что решение по этому поводу? Так что, как Виктории любят тратить деньги, мы можем взять этого парня и сделать это. И я только собираюсь двигаться здесь достаточно места. И это собирается быть немного неаккуратно. Я буду держать рисование линий. Предположим, что все эти линии идут в обоих? 

Очень распространенный метод здесь будет использовать технику, называемую сердцебиения причем каждое из этих устройств, левый и правый балансировки нагрузки, или то, что мы хотим, чтобы называть их, постоянно говорят, что я жив, Я жив, я жив, я жив. Один из них по умолчанию выступает в качестве основного. Таким образом, весь трафик перенаправляется через один на левой стороне, например, по умолчанию, произвольно. 

Но как только парень на правом не слышит от левого парня больше, один на правом запрограммирован автоматически, например, взять на себя IP-адрес из одной слева, и, следовательно, стать основным, и может быть, отправить по электронной почте или текстовое сообщение к людям, чтобы сказать, эй, левый первичный отсутствует. Я стал основным на данный момент. Так, вице-президент становится президент, так сказать. И кто-то должен пойти спасти президент, если вы хотите. Потому что теперь у нас есть временный единая точка отказа. 

Так же сложно или стресс, как это может показаться начать быть, это то, как вам решить эти проблемы. Вы делаете бросать деньги на него. Вы бросаете аппаратное обеспечение на него. Но к сожалению, вы добавить сложность для него. Но результат, в конечном счете, является то, что у вас есть гораздо больше, в теории, надежная архитектура. Это все еще не совершенны. Потому что даже когда мы have-- мы могли бы нет единой точки отказа. Теперь у нас есть двойные точки отказа. Но если две вещи идут не так, который абсолютно мог, мы по-прежнему будет находиться в автономном режиме. 

А так очень распространены в промышленность, чтобы описать Ваше Время с точки зрения девяток. И вроде цели стремиться к 99,999% времени ваш сайт в Интернете. Или еще лучше, добавить несколько девяток к этому. К сожалению, эти девятки стоят очень дорого. И давайте на самом деле делать это. Так что, если я открываю мой большой калькулятор снова, 365 дней в году, 24 часа в сутки, 60 минут в час, и 60 секунд в минуту, вот сколько секунд есть в год, если я сделал это правильно. Так что если мы раз это, .99999, это сколько времени мы хотим стремиться. Таким образом, это означает, что мы должны быть вверх это много секунд в течение года. Так что, если я теперь вычесть исходное значение, или, вернее, это новое значение из first-- 316 секунд, который, конечно, через пять минут. 

Так что если ваш сайт или ваша компания утверждая, что "пять девяток", в котором вы находитесь до 99,99% времени, это означает, что вам лучше был достаточно умен и быстро достаточно и достаточно вровень с ресурсами что ваши серверы только в автономном режиме пять минут из года. Это дорогостоящая и твердая вещь, чтобы стремиться. 

Так что это компромисс, тоже. 99,999% времени довольно штопать трудно и дорого. Пять minutes-- вы можете только получить на сервер физически заменить то, что пошло не так. И именно поэтому мы начинаем проводку все вместе более сложные априорно так, что компьютеры может вроде исправить себя. Да. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Проблема может быть в любом количестве мест. А на самом деле-- 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Абсолютно, абсолютно. И, как картина становится все более сложным, это может быть веб-серверы. Это может быть сила к зданию. Это может быть что-то физическое, как кабели получили поношенную или выгонят. Это может быть база данных не отвечает. Это может быть, они обновили свои операционные система и что-то висит. Так что есть так много других движущихся частей. И так много инженерных что должен идти за этим на самом деле просто компромиссы, например, как много времени, сколько денег он на самом деле стоит, и каковы угрозы вы действительно обеспокоены? Например, в курсы я учу в Гарварде, мы используем много облачных вычислений, которая мы начнем взглянуть на сейчас, В самом деле, где мы используем Amazon Web Services. Просто потому, что это которую мы начали. Но есть еще более в эти дни от Google и Microsoft и другие. И мы сознательно решили поставить все виртуальных машин наших курсов », как они называют, в я думаю, это Западная Вирджиния центра обработки данных. Большинство наших студентов случается, из США, хотя есть, конечно, некоторые на международном уровне. 

Но реальность такова, что это просто проще и это дешевле для нас положить все яйца в корзине Вирджинии, хотя я знаю, если что-то пойдет не так в Вирджинии, равно как и время от времени, как happened-- если есть ураган или некоторые погоды событие, как, что, если есть какая-то выпуск энергосистема или like-- все из данных наших курсов "может пойти на форуме в течение некоторого количества минут или часов или даже дольше. 

Но количество сложности которые потребуются, и количество денег, которые бы требуется, чтобы работать все параллельно в Европе или в Калифорнии просто не имеет так много смысла. Так что рациональное торговля прочь, но болезненным когда вы на самом деле имея, что время простоя. 

Что ж, давайте переход прямо сейчас некоторые из облачных решений в некоторых из этих проблем. Все, что мы были обсуждения до сих пор это своего рода проблем, которые имеют был с нами в течение некоторого времени, есть ли у вас свой собственный серверов в вашей компании, ли вы пойти на совместное размещение место как центр обработки данных и доля пространство с кем-то еще, или в настоящее время в облаке. 

И что приятно о облако, что все из этих вещей, которые я рисунок как физические объекты Теперь можно рассматривать как своего рода виртуальных объектов в облаке, которые смоделированы с помощью программного обеспечения. Другими словами, компьютеры сегодня, серверы сегодня, как на картинке Dell Я показал ранее, настолько быстро, есть так много оперативной памяти, столько процессор, столько диск пространство, что люди писали Программное обеспечение практически раздела один сервер вверх в иллюзию его быть два сервера, или 200 серверов, так что каждый из нас клиенты имеет иллюзию наличия не только счет на некоторых веб хозяин, но нашу собственную машину, мы сдача в аренду от кого-то другого. 

Но это виртуальная машина до сих пор, как на одном сервере Dell, он снова может быть разделена вверх в два или 200 или более виртуальных машин, все из которых дают кому-то административный доступ, но в пути, где никто из нас знает или может получить доступ к другим виртуальным машины на том же оборудовании. Таким образом, чтобы нарисовать картину в сегодняшних слайдов, Я этот выстрел здесь с веб-сайта называется Докер. 

Так что это немного больше подробно, чем мы на самом деле нужно. Но если вы рассматривать это как ваш infrastructure-- так что просто аппаратные средства самостоятельно, серверы, стеллажи, данные центр, и все that-- вы бы как правило, работают под управлением операционной системы хоста. Так что-то like-- это может быть Windows. Это не было бы Mac OS. Потому что это на самом деле не предприятие в эти дни. Так что это будет Linux или Solaris или Unix или BSD или FreeBSD или любое количество других операционных систем которые являются либо бесплатно, либо коммерческий. 

А потом вы запускаете программа, специальная программа, называется гипервизор, или монитор виртуальной машины, VMM. И эти продукты, если вы знакомы, как VMware или VirtualBox или Virtual PC или другие. И то, что эти программы делают именно то, что особенность, которую я описал ранее. Это создает иллюзию что одной физической машине может быть несколько виртуальных машин. 

И вот эти красочные коробки до верха нарисовать картину следующим образом. Этот гипервизор, это часть программного обеспечения, вызовите его VMware, работающие на какой-то другой операционная система, назовем его Linux, создает иллюзию того, что это физический компьютер, на самом деле один, два, три виртуальных компьютеров. Так что я в настоящее время купил, как владелец это оборудование, один физический компьютер. А теперь я аренды это три клиента. 

И эти три клиенты все думают они имеют специальную виртуальную машину. И это не наживки и переключатель. Это больше раскрытие, что вы используете виртуальную машину. Но технологически, мы все имеют полный административный контроль над каждым из этих гостя операционных систем, которые могли бы быть любое количество операционных систем. 

Я могу установить все, что захочу. Я могу обновить его, как я хочу. И я даже не нужно знать или заботиться о других операционных системы на этом компьютере, другие виртуальные машины, если не владелец всего этого серого хлам будучи немного жадный и переоценивать свои ресурсы. 

Так что, если вы принимаете один физическая машина и продавать его чтобы не 200, а 400 клиенты, в какой-то момент мы собираемся поездка в те Те же проблемы с производительностью, как раньше. Поскольку у вас есть только конечное объем диска и оперативной памяти и так далее. И виртуальная машина это просто программа, это делая вид, что полноценный компьютер. Таким образом, вы получите то, что вы платите за здесь. 

Таким образом, вы найдете на сайте вы можете заплатить Уважаемая компания может быть $ 100 в месяц для вашей собственной виртуальной машине, или свой собственный виртуальный выделенный сервер, который является другой термин для этого. Или вы могли бы найти какой-то пролетают ночь, где вы платите $ 5,99 в месяц для вашей собственной виртуальной машине. Но шансы у вас нет почти как много производительности доступны для вас, потому что они были перепроданности его так, чем вы бы с высшим уровня обслуживания или лучше поставщика. 

Итак, что же это на самом деле значит для нас? Итак, позвольте мне перейти к этому. Я собираюсь поехать в aws.amazon.com. Просто потому, что у них есть хорошее меню опций. Но эти же уроки применимы к целая куча других поставщиков облачных. К сожалению, это часто более маркетинг говорить, чем что-либо. И это постоянно меняется. Таким образом, вы идете на сайт, как это. И это действительно не имеет сказать вам много всего. 

И даже я, как я смотрю на это, не на самом деле знать, что любой из этих вещей обязательно делать, пока я не нырять. Но давайте начнем с левой стороны, Compute. И я собираюсь нажать это. А теперь Amazon имеет откровенно Подавляющее число услуг Эти дни. Но Amazon EC2, пожалуй, самый простой. 

Amazon EC2 создаст для нас точно картина мы видели минуту назад. Это, как они делают много их деньги в облаке. По-видимому, Netflix и другие находятся в облаке с ними. Это все, как правило, пушистые маркетинга говорят. Так что я хочу сделать, это пойти в Pricing-- или, вернее, пойдем к экземплярам сначала просто нарисовать картину этого. 

Так что это будет варьироваться в зависимости от поставщика. И нам не нужно, чтобы получить слишком глубоко в сорняки здесь, как это все работает. Но путь Amazon, к примеру, арендует вам виртуальную машину или сервер в облаке у них есть это своего рода забавными названиями, как t2.nano, что означает маленький, или t2.large, что означает большой. Каждый из них дает вам либо один или два виртуальных процессоров. 

Почему это виртуальный процессор? Ну, физическая машина может имеют 64 или более реальных процессоров. Но опять-таки, с помощью программного обеспечения, они создают иллюзию что, что одна машина может быть divvied до нескольких пользователей. Таким образом, мы можем думать об этом как имея один процессор Intel или два. кредитов CPU на hour-- я бы должны читать мелкий шрифт относительно того, что это на самом деле означает. Это означает, что, как большая часть машины вы можете использовать в час визави другие клиенты на этом аппаратным обеспечением. 

Вот сколько оперативной памяти или памяти у вас get-- либо половину гигабайта, или 500 мегабайта, или 1 гигабайт, или 2. И тогда хранение просто относится к какого рода дисков они дают вам. Там в разные способы хранения технологии, которые они предлагают. Но более интересно, чем это то может быть ценообразование. 

Так что если вы технический директор или инженер, который не делает хотите запустить сервер в офис, по какой причине, и это слишком сложный или дорогой купить серверы и совместно найти их и платить арендную плату в каком-то физическом пространстве клетке somewhere-- вы просто хотите, чтобы сидеть на вашем ноутбуке поздно ночью, введите данные вашей кредитной карты, и взять в аренду серверы в cloud-- хорошо, мы можем сделать это здесь. Я собираюсь пойти вниз Linux, целью которых является популярной операционной системой. И давайте просто получить смысл вещей. Whoops-- слишком большой. 

Так что давайте посмотрим на их мельчайшей виртуальная машина, которая, кажется, есть, для наших целей, один процессор и 500 мегабайт оперативной памяти. Это довольно маленький. Но, откровенно говоря, веб-серверы не нужно сделать все, что многое. У вас есть лучшие функции в вашем ноутбуке. Но вам не нужны те, данные в эти дни для вещей. Вы собираетесь заплатить $ 0,0065 в час. 

Итак, давайте посмотрим. Если есть 24 часа в сутки, и мы платим столько в час, это будет стоить вам $ 0,15 в аренду, что определенный сервер в облаке. И это только на один день. Если мы делаем это 365-- $ 57 до арендовать этот конкретный сервер. Так это звучит супер дешево. 

Это также очень низкая производительность. Таким образом, мы, на курсы я преподаю здесь, как правило, использовать я думаю t2.smalls или t2.mediums. И мы могли бы иметь несколько сотен пользователи, несколько тысяч пользователей, общ. Это довольно скромный. Итак, давайте посмотрим, что это будет стоить. Так что, если я делаю это расходы раз 24 часов 365 раз, на этот раз в $ 225. И на курсы Я учу, мы в целом запустить два всего, для избыточности, а также для повышения производительности. Таким образом, мы могли бы потратить, поэтому, $ 500 для серверов что мы, возможно, потребуется в год. 

Теперь, если вам нужно больше performance-- давайте взглянем на память. Мы говорили о памяти совсем немного. И если вам нужно больше memory-- и 64 гигабайта это число, которое я держал mentioning-- это почти $ 1 в час. И вы можете довольно быстро увидеть, где это goes-- так 24 часа 365 раз. Так что теперь это $ 8000 в год для довольно приличный сервер. 

Так что в какой-то момент, есть эта точка перегиба где сейчас мы могли бы потратить $ 6000 вероятно, и купить машину, как это и амортизировать его стоимость более может быть, два, три года, срок службы машины. Но что может подтолкнуть вас в благоприятствовать или не благоприятствовать аренды машина в облаке, как это? Опять же, это сопоставимо, наверное, к одному из этих серверов Dell мы видели на фото немного назад. 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, это огромный потенциал роста. Потому что мы не покупаете машина, мы не должны распаковывать его. Мы не должны его поднять. Мы не должны подключить его к нашей стойке. Мы не должны его подключить. Мы не должны платить электрический законопроект. 

Мы не должны повернуть кондиционирование воздуха на. Когда жесткий диск умирает, мы не имеем вбивать в середине ночи Исправить это. Мы не должны установить контроль. У нас нет, целью которых список продолжается и на всех физических вещей Вам не нужно делать из-за "облаке". 

И ясно, облачные вычисления это очень злоупотребляют термином. Это действительно просто означает, что платить кому-то еще для запуска серверов для вас, или аренды помещений на серверы кого-то другого. Таким образом, термин "облачные вычисления" является новым. Идея состоит в том десятилетий. Так что это довольно убедительным. 

А что еще вы получаете? Ну, вы также получаете возможность делать все, на ноутбуке у себя дома. Другими словами, все фотографии я просто drawing-- и это было не так давно, что даже Я ползал на полу сервера подключить кабели в течение каждая из линий, которые вы видите, и обновление операционной системы, а также изменение дисков вокруг. Там очень много телесность ко всему этому. 

Но то, что красиво о виртуальной машины, поскольку название рода предполагает, Теперь есть веб- интерфейсы посредством чего если вы хотите эквивалент линии с этого сервера к другому, просто тип, тип, тип, нажмите и перетащите, нажмите кнопку Отправить, и вуаля, у вас есть это проводные вверх практически. Потому что все это делается в программном обеспечении. И причина, это делается в программное обеспечение снова потому что у нас так много оперативной памяти и так много CPU доступны для нас в эти дни, хотя все что материал занимает много времени, это медленнее вести дела в программном обеспечении, чем аппаратные средства, так же, как это медленнее, чтобы использовать механический Устройство, как жесткий диск, чем RAM, что-то чисто электронные. У нас так много ресурсов доступны для нас. Мы, люди, являются своего рода инвариантно медленно. И вот теперь машины могут сделать так что гораздо больше за единицу времени. У нас есть эти способности делать что-то виртуально. 

И я буду говорить на курсы Я учу, например, здесь, мы имеем о, может быть, десяток поэтому общее количество виртуальных машин как это работает в любой данный момент время, делая передний конец вещи, делать задний конец вещи. У нас есть все наши хранилища. Таким образом, любое видео, в том числе вещи как это, что мы снимаем, мы в конечном итоге положить в облако. Amazon имеет услуги под названием Amazon S3, их простой сервис хранения, который точно так же как объем дискового пространства в облаке. У них есть что-то называется CloudFront, который это услуга CDN, Content Служба доставки сети, которая означает, что они принимают все ваши файлы и для вас автомагически повторить его во всем мире. 

Таким образом, они не делают это превентивно. Но в первый раз кто-то в Индии запрашивает файл, они потенциально кэшировать его локально. В первый раз в Китае, первый раз в Бразилии, что происходит, они начнут кэширование его локально. И вы не должны делать ничего из этого. И так это невероятно заставляя эти дни, чтобы переместить вещи в облако. Потому что у вас есть эта возможность в буквальном смысле чтобы не иметь людей делают почти столько же Работа. И вы в буквальном смысле не нужно так много люди делают эти рабочие места anymore-- "OPS", или функциональные роли, больше. Вы на самом деле просто нужно Разработчики и меньше инженеров кто может просто сделать что-то виртуально. На самом деле, просто чтобы дать вы чувство этого, позвольте мне перейти к ценообразованию на один другой продукт здесь. Давайте посмотрим, что-то вроде CDN S3. Таким образом, это по существу виртуальный жесткий диск в облаке. И если мы прокрутите вниз до pricing-- так что $ 0,007 за гигабайт. И that's--, как мы это делаем? Я думаю, что в месяц. 

Так что, если это за month-- или в день? Дэн, это за день? Это в месяц, OK. Так что, если это за month-- К сожалению, это $ 0,03 в месяц. Там в 12 месяцев в году. Так сколько данных может хранить в облаке? Гигабайт не столь велика, но я не знаю, как 1 терабайт, так как 1000 из них. Это еще не все, что много. Это $ 368 для хранения терабайт данных в облаке Amazon. Так что некоторые из то компромиссы, то? Она не может быть все хорошо. Ничего мы говорили сегодня нет своего рода без улова или стоимости. Так что плохо о переезде все в облаке? АУДИТОРИЯ: Безопасность. DAVID Маланом: Хорошо, что вы имеете в виду? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, верно. И действительно ли вы хотите некоторые случайные инженеры на Амазонки, что вы никогда не встретите имея физический доступ к этим компьютерам, и если они на самом деле хотел, виртуальный доступ? И хотя в теория software-- хорошо, Шифрование может абсолютно защитить вас от этого. Так что, если то, что вы хранение на серверах является encrypted-- меньше беспокойства. 

Но как только человек имеет физический доступ к машине, шифрование в сторону, все ставки являются своего рода игру. Возможно, вы знаете из прошлых лет что ПК особенно, даже если у вас эти вещи называемые "пароли BIOS," были, когда ваш рабочий стол загрузился, вы бы запрос с паролем, который не имеет ничего общего с Окна, как правило, вы можете просто открыть шасси машина, найти крошечные булавки, и использовать то, что называется прыгун и просто подключить эти два провода примерно на одну секунду, таким образом завершая схему. И это устранит пароль. 

Поэтому, когда у вас есть физический доступ к устройство, вы можете сделать что-то подобное. Вы можете удалить жесткий диск. Вы можете получить доступ к нему таким образом. И вот почему, в случай Dropbox, например, это немного вызывает беспокойство, что не только они есть данные, даже если это зашифрованное, у них также есть ключ. Другие заботы? 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, это очень true-- в Googles, яблоки, в Microsofts мира. И в самом деле, как долго у Вас был свой iPhone для? Да, давать или принимать. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Я сожалею? Вы среди тех, кто имеет iPhone, не так ли? ЗРИТЕЛИ: Да. DAVID Маланом: Как долго Вы имели свой iPhone? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: ОК, так что Apple, в буквальном смысле знает где вы были каждый час на следующий день в течение последних пяти лет. 

ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Что замечательная особенность. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Да, но компромисс наверняка. ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: Да, это очень легко. ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Другие отрицательные стороны? ЗРИТЕЛИ: [неразборчиво] DAVID Маланом: Absolutely-- технологически, экономически, это довольно вынуждающий своего рода получить эти экономии от масштаба и переместить все в так называемое облако. Но вы, вероятно, хотите идут с некоторыми из крупнейших рыба, амазонки, то Googles, то Microsofts-- Rackspace довольно big-- и несколько других, а не обязательно летать ночью люди для которых это очень легко сделать этот вид техники в наши дни. И вот, кого вы можете платить $ 5,99 в месяц. Но вы, конечно, получить то, что вы платите. 

Когда вы говорите [неразборчиво], что, когда такие вещи, как эти пять девяток придумали, причем даже если технологически мы не можем гарантировать 99.999, мы просто построить в некотором роде пени по договору так что, если это произойдет, по крайней мере, есть некоторая стоимость к нам, продавец. И это то, что вы, как правило, получать их согласиться. 

ЗРИТЕЛИ: [неразборчиво] 

DAVID Маланом: И один вид благословения в том, что даже когда мы идем вниз, для например, или даже некоторые компании, реальность такова, Amazon, например, имеет так много штопать клиентов, хорошо известные клиенты, работая из определенных центров обработки данных что когда-то действительно идет не так, как стихийные бедствия и погодных условий и таких, если есть какой-либо серебряные накладки, это то, что вы находитесь в очень хорошей компании. Ваш сайт может находиться в автономном режиме. Но так как половина популярный интернет. И таким образом это, возможно, немного более приемлемым для ваших клиентов если это больше из Интернета вещь, чем acme.com вещь. Но это вроде обмана. 

Так что с точки зрения других вещей, чтобы смотреть на, просто так, что мы не исключаем других, если вы идете в Microsoft Azure, они имеют как Linux и Windows, вещи что сопоставимо с Amazon. Если вы идете в Google Compute Engine, у них есть что-то подобное, а также. И просто закруглить эти облачные предложения, Я славим еще одну вещь. Это популярный веб-сайт это представитель класса технологий. Те, кого мы только что говорили о, Amazon, будет МААН, Инфраструктура как сервис, где вы своего рода физическое оборудование в качестве службы. Там в SAAS. На самом деле, позвольте мне кратко эти вниз. 

IAAS-- инфраструктура Как служба, SAAS, и PAAS, которые являются удивительно запутанные акронимы которые описывают три различные типы вещей. И сами аббревиатуры на самом деле не имеет значения. Это все вещи облаков мы только что говорили о том, материал более низкий уровень, виртуализации аппаратных средств и хранения в так называемом облаке, будь то Amazon, Microsoft, Google, или другой. 

Программное обеспечение как сервис-- все из нас своего рода использовать эту функцию. При использовании Служб Google для Gmail или календарями, любой из этих веб- приложения, которые 10 лет назад мы будет дважды нажал на иконки наш настольный компьютер, программное обеспечение как услуга сейчас действительно веб-приложение. И как платформа Сервис вид зависит от многого. 

И один пример я дам вам здесь в контексте облачных computing-- есть одна компания, которая довольно популярные в эти дни, Heroku. И они это услуга, платформа, если вы будете, который работает на вершине Инфраструктура Амазонки. И они просто делают его еще проще для разработчиков и инженеров чтобы получить веб-приложений в Интернете. 

Это боль, первоначально, использовать Amazon Web Services и другие вещи. Потому что вы на самом деле есть знать и понимать о базах данных и веб-серверов и балансировки нагрузки и все вещи Я только что говорил о. Потому что все Amazon сделал это не скрытые эти конструктивные проблемы. Они только виртуализировать их и переместить их в браузере, в программное обеспечение, а не аппаратного обеспечения. 

Но такие компании, как Heroku и других провайдеры PaaS, платформа как сервис, они используют эти основы Barebone что мы только что говорили о том, и они строят легче использовать программное обеспечение на нем так что если вы хотите, чтобы получить веб- приложений онлайн в эти дни, Вы, конечно, должны уметь программировать. Вы должны знать, Java или Python или PHP или Руби или куча других языков. 

Но вам также нужно место, чтобы поместить его. И мы говорили ранее о получение веб-хостинга компании. Это своего рода, как в середине 2000-х подход к получить что-то в Интернете. В настоящее время вы могли бы вместо того, чтобы платить кому-то как Heroku несколько долларов в месяц. И по сути дела, как только вы сделал некоторую начальную конфигурацию, обновить свой веб-сайт, вы просто введите команду в окне. И независимо от того кода вы написали здесь на вашем ноутбуке немедленно получает распределяется на любое число серверов в облаке. 

И Heroku заботится о все сложности. Они полагают, что все базы данных материал, все балансировка нагрузки, все головные боли, которые мы просто написано на доске, и скрыть все, что для вас. И в свою очередь, вы просто платить им немного больше. Таким образом, у вас есть такой инфраструктуры, как сервис, платформы как сервис, а затем программное обеспечение как услуга. Это, опять же, это абстракция или наслоение. 

Любые вопросы на облаке или строительство собственной инфраструктуры? Хорошо, что было много. Почему бы нам не пойти дальше и принять нашу 15-минутный перерыв здесь. Мы вернемся с несколькими новыми концепциями и немного практической возможности до того, как вечер закончился. 