1
00:00:00,000 --> 00:00:00,060

2
00:00:00,060 --> 00:00:01,560
>> DAVID 마란 : 좋아, 우리는 다시 수 있습니다.

3
00:00:01,560 --> 00:00:03,830
흥미 진진한에 대한 그래서
결론적으로, 우리의 마지막 섹션

4
00:00:03,830 --> 00:00:06,900
웹 프로그래밍, I에
우리는 일반적인 용어로 사용하는 거라고 생각했다

5
00:00:06,900 --> 00:00:08,440
몇 나머지 항목을 촬영합니다.

6
00:00:08,440 --> 00:00:10,390
의 마지막에 따라서
일, 우리가 실제로 할 것이다

7
00:00:10,390 --> 00:00:14,830
손 - 웹 프로그래밍의 조금
자바 스크립트라는 언어.

8
00:00:14,830 --> 00:00:17,510
그리고 나는 우리가 살펴 보겠습니다 생각
이미지와 관련된 뭔가

9
00:00:17,510 --> 00:00:20,040
뭔가를 발견
몰래 이미지에 숨겨진,

10
00:00:20,040 --> 00:00:23,230
또한 구글을 살펴
지도 API, 응용 프로그램 프로그래밍

11
00:00:23,230 --> 00:00:26,040
인터페이스, 뭔가로
소프트웨어 유형의 대표적인

12
00:00:26,040 --> 00:00:28,800
그건 점점 및
오늘 자유롭게 사용할 수 있습니다.

13
00:00:28,800 --> 00:00:32,029
>> 그런데 왜 우리는 살펴하지 않는다
이 세계에 성분에서

14
00:00:32,029 --> 00:00:34,070
우리는 가지 봤는데 것을
당연한 복용 존재

15
00:00:34,070 --> 00:00:36,720
약간의 시간에 대한 데이터베이스.

16
00:00:36,720 --> 00:00:39,150
지난 날과
우리가 가정 한 반

17
00:00:39,150 --> 00:00:42,910
우리는 데이터베이스에 액세스 할 수 있지만,
데이터베이스는 어떤 문제를 해결합니까?

18
00:00:42,910 --> 00:00:45,540
그것은 우리를 위해 무엇을 하는가?

19
00:00:45,540 --> 00:00:47,030
그것은 무엇입니까?

20
00:00:47,030 --> 00:00:48,679
>> 청중 : [들리지]

21
00:00:48,679 --> 00:00:51,720
데이비드 마란 : 모든 정보를 보유,
정보의 확인, 그리고 어떤 종류의

22
00:00:51,720 --> 00:00:53,186
당신은 그것을 넣어 수 있습니까?

23
00:00:53,186 --> 00:00:54,590
>> 청중 : [들리지]

24
00:00:54,590 --> 00:00:56,450
>> DAVID 마란 : 모든 정보
당신이 그것을 넣어, 당신은 다시 얻을 수 있습니다.

25
00:00:56,450 --> 00:00:57,070
그건 사실이다.

26
00:00:57,070 --> 00:01:01,900
전형적인 웹 기반 사이트 또는 웹
응용 프로그램, 정보의 종류,

27
00:01:01,900 --> 00:01:03,385
특히, 당신은 넣어 수 있는가?

28
00:01:03,385 --> 00:01:04,260
청중 : [들리지]

29
00:01:04,260 --> 00:01:05,051
DAVID 마란 : 사용자.

30
00:01:05,051 --> 00:01:07,000
따라서 사용자는 무엇인가?

31
00:01:07,000 --> 00:01:09,765
>> 청중 : [들리지]

32
00:01:09,765 --> 00:01:11,640
데이비드 마란은 : OK, 등록
사이트의 사용자.

33
00:01:11,640 --> 00:01:15,100
그리고 그것은 무엇을 의미 하는가
저장하는 사용자 정보?

34
00:01:15,100 --> 00:01:17,260
어떤 사용자를 구성?

35
00:01:17,260 --> 00:01:18,331
사용자는 무엇을 가지고?

36
00:01:18,331 --> 00:01:19,206
청중 : [들리지]

37
00:01:19,206 --> 00:01:21,040
DAVID 마란 : 네, 개인
데이터, 나는 그것을 좋아한다.

38
00:01:21,040 --> 00:01:21,970
좀 더 정확하게 할 수 있습니다.

39
00:01:21,970 --> 00:01:25,275
따라서, 사용자는 전형적으로 이름을 가지고
사용자는 다른 무엇을 할 수 있습니까?

40
00:01:25,275 --> 00:01:26,150
청중 : [들리지]

41
00:01:26,150 --> 00:01:29,130
DAVID 마란 일 : addr-- OK,
그래서 이름, 성.

42
00:01:29,130 --> 00:01:29,630
그게 좋다.

43
00:01:29,630 --> 00:01:31,463
사실, 이제 해결하자
즉 그것은 무슨 일 때문에

44
00:01:31,463 --> 00:01:35,010
수있는 기회를 엽니 다
토론, 여전히 더.

45
00:01:35,010 --> 00:01:39,090
이름, 성, 성.

46
00:01:39,090 --> 00:01:41,820

47
00:01:41,820 --> 00:01:43,481
어떤 종류의 ID.

48
00:01:43,481 --> 00:01:43,980
그 밖의 무엇?

49
00:01:43,980 --> 00:01:45,438
나도 전에 다른 것을 들었다.

50
00:01:45,438 --> 00:01:51,600
이메일, 우편 주소.

51
00:01:51,600 --> 00:01:58,170
>> 그래서이 일시 중지하고 지금 생각해 보자
우리가 데이터베이스에 저장하고없는 것을,

52
00:01:58,170 --> 00:02:01,980
그것은 아마도 이후, 왜하지만 ...하지
분명 당신이 사용자를 등록하면 해당,

53
00:02:01,980 --> 00:02:03,730
당신은 몇 시간 동안 그들을 기억하고 싶다.

54
00:02:03,730 --> 00:02:05,480
당신은에 그것을 원하지 않아요
다만 RAM에 저장 될

55
00:02:05,480 --> 00:02:08,690
그래서 forgotten-- 수
의는 방법에 초점을 맞출 수 있습니다.

56
00:02:08,690 --> 00:02:11,700
>> 이 글은 그 밝혀
데이터베이스의 세계,

57
00:02:11,700 --> 00:02:14,410
요즘은 적어도 두 가지를 거기.

58
00:02:14,410 --> 00:02:20,010
뭔가, SQL 데이터베이스라고
구조화 조회 언어,

59
00:02:20,010 --> 00:02:24,770
또는, 귀엽게라는
SQL없는 NoSQL에.

60
00:02:24,770 --> 00:02:26,980
그리고 후자 인
예를 무엇 수도

61
00:02:26,980 --> 00:02:30,660
객체 지향 호출,
또는 객체 저장소 데이터베이스

62
00:02:30,660 --> 00:02:36,010
그 개체를 저장하고,하지, 변명
나 같이 우리는 곧 행을 볼 수 있습니다.

63
00:02:36,010 --> 00:02:41,800
>> 그래서 우리는 그냥 잠시 초점을 맞출 것
이 중 첫 번째, 즉, SQL

64
00:02:41,800 --> 00:02:46,850
데이터베이스, 그건 때문 경우
그래서 익숙한 이미 사람에게

65
00:02:46,850 --> 00:02:51,070
엑셀 사용한 사람 또는
Google 스프레드 시트 또는 Apple

66
00:02:51,070 --> 00:02:53,740
숫자 또는 표준
스프레드 시트 프로그램,

67
00:02:53,740 --> 00:02:56,040
또는, 동등, 또는
더 정교,

68
00:02:56,040 --> 00:02:58,610
마이크로 소프트 같은
액세스 또는 Oracle

69
00:02:58,610 --> 00:03:03,890
MySQL의 또는 PostgreSQL을, 또는 모두의
구현을위한 제품 이름입니다

70
00:03:03,890 --> 00:03:04,865
다음 아이디어.

71
00:03:04,865 --> 00:03:10,350
>> 관계형 데이터베이스는 단순히
행과 열이 뭔가.

72
00:03:10,350 --> 00:03:12,850
열과 행함으로써,
말 그대로 무언가를 의미

73
00:03:12,850 --> 00:03:21,860
같은, 그래서 여기서 우리는이있을 수 있습니다
필드와 여기에 해당 유형의 이름을 지정합니다.

74
00:03:21,860 --> 00:03:25,800
그리고 실제로, 저를 보자
이제 이러한 매핑 시작한다.

75
00:03:25,800 --> 00:03:29,420
그래서 사실, 나도 몰라
왜 별도의 차트를 받았다.

76
00:03:29,420 --> 00:03:30,780
이제이 간단한 유지하자.

77
00:03:30,780 --> 00:03:34,830
>> 우리는 바로 여기 있습니다
우리 테이블의 시작

78
00:03:34,830 --> 00:03:40,150
이 필드의 이름
이러한 데이터 타입은,

79
00:03:40,150 --> 00:03:41,660
및 유형에 따라 나는 다음을 의미한다.

80
00:03:41,660 --> 00:03:45,510
이 숫자인가, 그것은 문자열입니다
단어와 같은 짧은 문자열

81
00:03:45,510 --> 00:03:49,340
이 단락은, 그것은 인
이미지와 같은 바이너리 데이터,?

82
00:03:49,340 --> 00:03:51,980
그리고 그냥이 애타게하자
떨어져 그냥 잠시.

83
00:03:51,980 --> 00:03:57,575
그래서 이름, 번호,
문자열, text--의 큰 덩어리

84
00:03:57,575 --> 00:03:58,450
청중 : [들리지]

85
00:03:58,450 --> 00:03:59,616
DAVID 마란 : 네, 그래서 문자열입니다.

86
00:03:59,616 --> 00:04:04,744
그리고 데이터베이스 맥락에서, 우리는거야
일반적으로이 문자 필드를 호출합니다.

87
00:04:04,744 --> 00:04:07,660
난 그냥 우리가있어하지만 지금 문자를 말할 것이다
잠시이 문제를 수정하는 것.

88
00:04:07,660 --> 00:04:09,180
문자 필드입니다.

89
00:04:09,180 --> 00:04:11,365
성 아마 동일합니다.

90
00:04:11,365 --> 00:04:11,865
성별?

91
00:04:11,865 --> 00:04:16,230

92
00:04:16,230 --> 00:04:18,310
>> 남성 또는 여성, 그것은 너무
숯불 필드 수 있습니다.

93
00:04:18,310 --> 00:04:21,380
그것은 하나 견적을 수, 인용을 끝내
"남성"또는 인용, 인용을 끝내 "여성"

94
00:04:21,380 --> 00:04:23,650
아니면 m 또는 F를 수 있습니다.

95
00:04:23,650 --> 00:04:26,540
좀 더 포괄적하려면,
당신은 제 값을해야 할 수도 있습니다

96
00:04:26,540 --> 00:04:28,640
또는 아예 다른 분야의 어떤 종류.

97
00:04:28,640 --> 00:04:31,350
그리고 당신은 참 거짓을 사용할 수 있습니다.

98
00:04:31,350 --> 00:04:35,036
필드는 남성 호출 될 수도
당신은 참 또는 거짓 말할 수 있습니다.

99
00:04:35,036 --> 00:04:38,160
그러나 반드시 캡처하지 않습니다
당신이 할 수 있습니다 모든 정보.

100
00:04:38,160 --> 00:04:41,118
>> 다른 유형의 거기 밖으로 그래서집니다
필드의 여기에 유용 할 수 있습니다 그

101
00:04:41,118 --> 00:04:46,040
일반적인 데이터베이스에서,라고
이 문자 필드 ENUM,

102
00:04:46,040 --> 00:04:50,480
하지만 당신은, 디자이너에 도착
가능한 값을 열거,

103
00:04:50,480 --> 00:04:54,630
, 인용, 인용을 끝내 "남성"을 인용 등
등을 맺다 "여성"과.

104
00:04:54,630 --> 00:04:57,620
그래서 어떤 값
당신의 데이터베이스에

105
00:04:57,620 --> 00:05:00,670
실제로 문자 기반이지만,
이는 이들 값 중 하나이어야한다.

106
00:05:00,670 --> 00:05:03,520
우리는 아마를 원하지 않을 것이다
이름 또는 성 이름을 열거.

107
00:05:03,520 --> 00:05:05,630
그렇지 않으면 우리는 것
이름으로, 열거하기

108
00:05:05,630 --> 00:05:09,570
말 그대로 모든,에서 유래
가능한 성과 이름.

109
00:05:09,570 --> 00:05:13,960
>> OK, ID 있도록 ID는 무엇을해야 하는가?

110
00:05:13,960 --> 00:05:15,200
네, 그래서 아마 번호.

111
00:05:15,200 --> 00:05:17,870
그럼 고수하자
지금은 그, 수.

112
00:05:17,870 --> 00:05:22,010
그리고 숫자로, 숫자이다
지금은 조금 너무 광범위.

113
00:05:22,010 --> 00:05:23,900
두번째의 끝
일, 우리 같은 느낌

114
00:05:23,900 --> 00:05:25,280
좀 더 정확합니다.

115
00:05:25,280 --> 00:05:29,280
번호는 같은 의미 할 수도 있고, 그것을
1.236 뭔가를 할 수 있습니다.

116
00:05:29,280 --> 00:05:31,500
그리고 아마 아니다
우리는 ID가 무엇을 의미.

117
00:05:31,500 --> 00:05:34,635
우리는 아마 ID에 의해 무엇을 의미합니까?

118
00:05:34,635 --> 00:05:36,382
>> 청중 : [들리지]

119
00:05:36,382 --> 00:05:38,590
DAVID 마란 : OK, 아 그래서
어쩌면 심지어 수 없습니다.

120
00:05:38,590 --> 00:05:42,840
아마 실제로 고유 식별자입니다
즉 사용자 이름과 같은 문자열입니다.

121
00:05:42,840 --> 00:05:44,580
그래서 절대적 일 수있다.

122
00:05:44,580 --> 00:05:46,730
나는 누군가 아마 생각
하지만, 숫자 의미했다.

123
00:05:46,730 --> 00:05:48,460
그래서 그와 함께 머물 수 있습니다.

124
00:05:48,460 --> 00:05:49,320
수의 종류는?

125
00:05:49,320 --> 00:05:51,960
어떤 것은 더 정수를 precise--.

126
00:05:51,960 --> 00:05:56,710
따라서 숫자 0와 같은 1, 2, 3,
그래서 우리는이 정수 전화 할게.

127
00:05:56,710 --> 00:05:58,909
그리고 그렇다하더라도, 나는 할 수
하찮은 일에 속 태우고 수, 그건

128
00:05:58,909 --> 00:06:00,700
정말 그냥
당신이 원하는 일반 정수입니다.

129
00:06:00,700 --> 00:06:04,340
당신은 아마, 음의 값을 원하지 않는
해서, 그냥 이상한 느낌.

130
00:06:04,340 --> 00:06:06,070
당신은 아마 양의 정수를 원한다.

131
00:06:06,070 --> 00:06:07,920
그래서 당신은 또한 표현할 수
데이터베이스에 그,

132
00:06:07,920 --> 00:06:09,450
하지만 지금, 우리는 정수를 말할 것이다.

133
00:06:09,450 --> 00:06:10,650
>> 이메일?

134
00:06:10,650 --> 00:06:13,550
이것은 무엇을 그냥 ... 아마?

135
00:06:13,550 --> 00:06:14,460
>> 청중 : [들리지]

136
00:06:14,460 --> 00:06:16,980
>> 데이비드 마란 : 그것은 이메일입니다,
하지만, 바로 문자인가?

137
00:06:16,980 --> 00:06:19,813
그냥 같은 펑키 문자가
에 "에서"기호 또는 뭔가 다른,

138
00:06:19,813 --> 00:06:21,580
하지만 여전히 문자 필드입니다.

139
00:06:21,580 --> 00:06:23,900
그리고 우편 주소?

140
00:06:23,900 --> 00:06:25,360
문자 필드입니다.

141
00:06:25,360 --> 00:06:31,400
그래서 좋은 시작은,이다하지만,
의 지금은 좀 더 정확하게 할 수 있습니다.

142
00:06:31,400 --> 00:06:34,540
>> 그래서 그것은 밝혀에서 해당
데이터베이스, 당신이 자주

143
00:06:34,540 --> 00:06:39,120
더 세련 이상 선택의 여지가
이런 일 버전.

144
00:06:39,120 --> 00:06:44,330
사실, 일반적인 SQL 데이터베이스, SQL,
또는보다 일반적으로 관계형 데이터베이스,

145
00:06:44,330 --> 00:06:46,680
행 데이터베이스
과 열, 당신이 자주

146
00:06:46,680 --> 00:06:53,610
의 유형뿐만 아니라 지정하세요
field-- 나 일부 객실 here--을 만들어 보자

147
00:06:53,610 --> 00:06:56,600
또한 길이.

148
00:06:56,600 --> 00:06:59,900
>> 제 이름은 어떻게됩니까?

149
00:06:59,900 --> 00:07:07,060
나는 D-A-V-I-D, 생각합니다. OK, 나는 그것을 얻었다
아마 반 같은 기분을 상하게

150
00:07:07,060 --> 00:07:11,260
방에있는 사람들이, 오른쪽,
사용자의 이름은 다섯 이상이므로

151
00:07:11,260 --> 00:07:16,608
문자, 그래서 오 조금 이기적인 것 같다
그리고 순진, 그래서 더 나은 가치는 무엇인가?

152
00:07:16,608 --> 00:07:19,320

153
00:07:19,320 --> 00:07:24,330
10, 모든 권리, 나는 생각한다
우리는 방에 OK입니다.

154
00:07:24,330 --> 00:07:26,254
13?

155
00:07:26,254 --> 00:07:27,541
30?

156
00:07:27,541 --> 00:07:29,540
이유는 적용되지 않습니다
이전의 접근 때

157
00:07:29,540 --> 00:07:31,081
배열과 메모리에 대해 얘기했다?

158
00:07:31,081 --> 00:07:32,450
왜 난 그냥 1000과 같은 말을하지 않습니다?

159
00:07:32,450 --> 00:07:35,260
아무도 이름은 것입니다
1,000 이상이 될 수 있습니다.

160
00:07:35,260 --> 00:07:36,706
다시 밀어 넣습니다.

161
00:07:36,706 --> 00:07:38,005
>> 청중 : [들리지]

162
00:07:38,005 --> 00:07:40,130
DAVID 마란 : 그래, 그건
낭비, 오른쪽, 특히

163
00:07:40,130 --> 00:07:44,630
대부분의 이름이있는 경우에만 5 ~ 10
15 자, 그건 매우 낭비입니다.

164
00:07:44,630 --> 00:07:45,810
그래서 당신은 무엇인지?

165
00:07:45,810 --> 00:07:48,020
이 어려운 질문의 종류이다.

166
00:07:48,020 --> 00:07:51,721
이제, 우리는 확실히 영어를 분석 할 수 있습니다
그리고 다른 언어의 이름

167
00:07:51,721 --> 00:07:54,470
잘, 무엇을하고, 파악
average-- 평균 정말하지 않습니다

168
00:07:54,470 --> 00:07:57,150
최대는 무엇 us-- 도움
아마 우리가 정말 원하는 것을.

169
00:07:57,150 --> 00:07:59,920
그러나 우리는 심지어이 밝혀
여기 유형을 통해 몇 가지 선택.

170
00:07:59,920 --> 00:08:03,400
>> 일반적인 SQL 데이터베이스에서, 당신
숯불 필드라는 것을 한

171
00:08:03,400 --> 00:08:07,505
그리고 또한 VARCHAR, V-A-R,
변수 문자 필드.

172
00:08:07,505 --> 00:08:08,630
그리고 그 차이는 이것이다.

173
00:08:08,630 --> 00:08:12,400
숯불 필드, 당신 디자이너,
사전에 지정해야

174
00:08:12,400 --> 00:08:14,900
필드의 정확한 길이.

175
00:08:14,900 --> 00:08:20,530
그래서 아마 이름
등 20 종류의 안전 느낀다.

176
00:08:20,530 --> 00:08:23,950
에 일부 인터넷 검색을 할 필요가 있습니다
그만큼 실제로 안전되는지 확인합니다.

177
00:08:23,950 --> 00:08:26,910
(21)와 이름은 아마 거기
자,하지만 지금은 20 가정

178
00:08:26,910 --> 00:08:27,620
안전합니다.

179
00:08:27,620 --> 00:08:30,070
>> 숯불 필드는 의미 것
데이터베이스에서 당신을

180
00:08:30,070 --> 00:08:33,289
20 항상 20 문자를 사용합니다.

181
00:08:33,289 --> 00:08:37,419
지금은 그 단지 D-A-V-I-D, 15 인 경우
그냥 공백 문자로 가고있다,

182
00:08:37,419 --> 00:08:40,450
하지만 당신은 여전히​​ 20 바이트를 사용하고 있습니다.

183
00:08:40,450 --> 00:08:46,302
포함 된 VARCHAR 필드 반대로 수단
문자열은 최대 20 자이어야한다

184
00:08:46,302 --> 00:08:48,260
하지만 다섯 만 있다면,
만 사용하는거야

185
00:08:48,260 --> 00:08:51,270
A에 대한 다섯, 아니면 육
마지막에 특수 값,

186
00:08:51,270 --> 00:08:54,980
그 공처럼 우리 것을 논의
문자의 끝을 의미

187
00:08:54,980 --> 00:08:56,790
메모리에 순서.

188
00:08:56,790 --> 00:08:59,950
>> 그래서 때 생각
당신은 문자를 선택할 수 있습니다

189
00:08:59,950 --> 00:09:05,240
VARCHAR 대, 그 트레이드 오프를 제공?

190
00:09:05,240 --> 00:09:09,321
문자는 많은 문자, VARCHAR를 사용
많은 자보다 더 이상 사용하지 않습니다.

191
00:09:09,321 --> 00:09:10,196
청중 : [들리지]

192
00:09:10,196 --> 00:09:13,859

193
00:09:13,859 --> 00:09:16,900
DAVID 마란 : OK, 당신은 때를 알고
문자열의 길이 꽤 설득력

194
00:09:16,900 --> 00:09:19,316
그냥 경우 문자, '원인을 사용하는
당신은 그것을 내려 놓고, 그것을 알고있다.

195
00:09:19,316 --> 00:09:23,390
그리고 어쩌면 그 우편에 대한 사실
코드, 미국, 적어도, 02138,

196
00:09:23,390 --> 00:09:26,660
항상 다섯이 될 것
당신까지 문자는 대시 사를 추가합니다.

197
00:09:26,660 --> 00:09:29,750
하지만 당신은 몇 가지 값을 가질 수 있습니다
이는 항상 길이를 알고있다.

198
00:09:29,750 --> 00:09:32,310
아니면 상​​태 기호,
뉴욕에 대한 NY 등,

199
00:09:32,310 --> 00:09:33,811
및 MA 미국 매사 추세 츠합니다.

200
00:09:33,811 --> 00:09:36,560
어쩌면 당신은 어떤 경우가 있습니까
곳은 완전히 합리적인

201
00:09:36,560 --> 00:09:39,520
그러나 그 논리에 의해, 왜
우리는 심지어이 지나친?

202
00:09:39,520 --> 00:09:41,800
왜 우리는 사용하지 마십시오
VARCHAR, 그리고, 우리는거야

203
00:09:41,800 --> 00:09:46,730
항상 어쨌든 두 개의 문자를 사용하거나
항상 어쨌든 다섯 문자를 사용할 수 있습니까?

204
00:09:46,730 --> 00:09:50,300
왜 단지에 대한 VARCHAR를 저장하지
모든 것을, 그 논리에 의해?

205
00:09:50,300 --> 00:09:51,677
캐치가 있어야합니다.

206
00:09:51,677 --> 00:09:52,552
청중 : [들리지]

207
00:09:52,552 --> 00:09:54,952

208
00:09:54,952 --> 00:09:56,660
DAVID 마란 : 수
뭔가 잘못 물품.

209
00:09:56,660 --> 00:09:58,090
그래서 사실이다.

210
00:09:58,090 --> 00:10:01,030
하지만 그렇다하더라도, 그들은 사용할 수 없습니다
내가 할당보다 더 많은 메모리.

211
00:10:01,030 --> 00:10:03,340
나는 아직도 마지막이
의 길이에 걸쳐 말

212
00:10:03,340 --> 00:10:06,780
그래서 그들은 실수 할 수 없습니다
그런 실수,하지만 좋은 생각.

213
00:10:06,780 --> 00:10:10,510
그것은 더 미묘하지만 매우 관련있어
우리의 토론, 실제로 배열

214
00:10:10,510 --> 00:10:12,390
이전 목록을 연결.

215
00:10:12,390 --> 00:10:16,290
>> 이 경우, 데이터베이스 밝혀
그것은 모든 값임을 알

216
00:10:16,290 --> 00:10:19,250
고정 된 길이의 경우에도
그 값의 일부가 비어 있습니다

217
00:10:19,250 --> 00:10:22,484
일종의 미학적 빈,
D-A-V-I-D 후 15 공백,

218
00:10:22,484 --> 00:10:24,650
그것은 밝혀 그 모든 경우
필드는 동일한 길이,

219
00:10:24,650 --> 00:10:28,670
배열과 같은 많은 그 물건을 모두 가지고 있었다
다시 그래서 다시 다시 다시하는

220
00:10:28,670 --> 00:10:33,480
당신은 단지 1을 더한 다음에 얻을 수
값 데이터베이스 테이블 같은 생각.

221
00:10:33,480 --> 00:10:37,550
캐릭터의 모든 경우
문자열은 동일한 길이이고,

222
00:10:37,550 --> 00:10:39,390
당신은 랜덤 액세스라는 무슨있다.

223
00:10:39,390 --> 00:10:41,850
모든 문자열의 경우
길이 20, 당신은하지 않습니다

224
00:10:41,850 --> 00:10:45,230
수행 플러스 1 방금 수행 플러스
20, 플러스 20, 플러스 20, 플러스 20,

225
00:10:45,230 --> 00:10:48,775
당신은 매우 빠르게 스크롤 할 수 있습니다
또는 모든 데이터를 검색 할 수 있습니다.

226
00:10:48,775 --> 00:10:54,420
>> 가변 문자 필드 반대로
항상 20 자이 없습니다.

227
00:10:54,420 --> 00:10:58,000
그런 다음 20가있을 수 있습니다
15 다음 19 다음 10,

228
00:10:58,000 --> 00:11:00,720
그래서 검색 할 경우
그것을 통해, 당신은 단지 맹목적 할 수 없습니다

229
00:11:00,720 --> 00:11:03,050
다음 중 하나에 도착하는 20 바이트를 추가합니다.

230
00:11:03,050 --> 00:11:07,280
당신은 말 그대로을 검색해야
때문에 데이터 구조의 가장자리

231
00:11:07,280 --> 00:11:08,340
당신이 경우, 비정형입니다.

232
00:11:08,340 --> 00:11:11,480
그것은 종류의 간다 밖으로 기반
문자열의 실제 길이에.

233
00:11:11,480 --> 00:11:14,460
그래서 당신은 길이 등을 알고있을 때
카림은 문자 필드를 사용하여 말한다

234
00:11:14,460 --> 00:11:16,460
당신은 것을 얻을 수 있기 때문에
존재의 효율성

235
00:11:16,460 --> 00:11:19,170
빨리 그것을 통해 검색 할 수
당신이 데이터를 찾을 때,

236
00:11:19,170 --> 00:11:20,550
그렇지 않으면 변수를 사용합니다.

237
00:11:20,550 --> 00:11:24,450
>> 불행하게도, 나는 더 좋은 대답이 없다
이름이 있어야 할 시간에,

238
00:11:24,450 --> 00:11:26,360
하지만 같은 뭔가
이름, 나는 말할 것

239
00:11:26,360 --> 00:11:28,470
포함 된 VARCHAR 일반적이다
그것은 않을거야 때문에

240
00:11:28,470 --> 00:11:30,430
모두를위한 고정 길이 될 수 있습니다.

241
00:11:30,430 --> 00:11:33,650
20, 나도 몰라, (20)
약간 타이트을 느낀다.

242
00:11:33,650 --> 00:11:36,460
그냥 50, 50을 가정 해 봅시다.

243
00:11:36,460 --> 00:11:39,210
정말 당신을 비용하지 않습니다
50 대신 40을 말할 훨씬 더,

244
00:11:39,210 --> 00:11:41,260
그러나 어떤 점에서, 당신은 필요
판단 통화를 할 수 있습니다.

245
00:11:41,260 --> 00:11:43,090
>> 아주 일반적인 솔직히,
[하시나요? 역사?]

246
00:11:43,090 --> 00:11:47,670
이유는 과도한, 비록
때문에 얼마 전에, 255 말을하는 것입니다

247
00:11:47,670 --> 00:11:51,440
인기있는 데이터베이스 시스템과 같은
MySQL은, 무료 오픈 소스 도구

248
00:11:51,440 --> 00:11:53,790
그 많은 회사
같은 심지어 페이스 북은 사용

249
00:11:53,790 --> 00:11:56,654
이 최대 기본이었다
그래서 사람들은 그것으로 갔다.

250
00:11:56,654 --> 00:11:59,070
그래서 무리, 그러나 우리는거야하지
좀 더 직관을 사용

251
00:11:59,070 --> 00:12:02,970
50 확실히, 그건, 말
아마 조금 과도.

252
00:12:02,970 --> 00:12:05,720
>> 성별, 내가 열거 좋아한다,
그리고 우리는 따라서 수

253
00:12:05,720 --> 00:12:08,760
남성 또는 여성을 열거,
아니면 더 효율적으로,

254
00:12:08,760 --> 00:12:13,420
m 또는 F 또는 어떤 다른 기호이지만
열거가 좋은 선택 것 같은 느낌이 든다.

255
00:12:13,420 --> 00:12:16,740
명확하게하기 위해, 성
그냥 VARCHAR 될 수있다,

256
00:12:16,740 --> 00:12:19,090
우리는 모든 수
같은 좋은 사람을 동의

257
00:12:19,090 --> 00:12:21,010
항상 같은 값을 넣어.

258
00:12:21,010 --> 00:12:22,720
남성 또는 여성 또는 이것 저것.

259
00:12:22,720 --> 00:12:27,800
>> 그러나 문제는, 우리가 할 수 있다는
[들리지] 제안 등의 실수를

260
00:12:27,800 --> 00:12:29,140
이전에 다른 컨텍스트입니다.

261
00:12:29,140 --> 00:12:32,780
우리가 실수를하면, 우리가 얻을 수
우리의 데이타베이스는 잘못된 값.

262
00:12:32,780 --> 00:12:36,320
그래서 데이터베이스에 대한 좋은거야
오라클과 MySQL과 다른 이들처럼,

263
00:12:36,320 --> 00:12:39,280
이 마지막을 가지고있다
방어 곳의 층

264
00:12:39,280 --> 00:12:43,010
당신의 DBA, 데이터베이스 관리자,
누구든지 우리처럼이 테이블을 설계하고있다

265
00:12:43,010 --> 00:12:46,440
구두이고, 둘 수 있었다
열거 장소에 그

266
00:12:46,440 --> 00:12:51,250
지정하여 그 방지
남성, 여성, 그래서 아무도

267
00:12:51,250 --> 00:12:54,230
다른 어떤 프로그래머가 실수로 수
다른 값을 삽입합니다.

268
00:12:54,230 --> 00:12:55,480
그래서 이것은 좋은 일이 될 것입니다.

269
00:12:55,480 --> 00:12:56,660
이 기능입니다.

270
00:12:56,660 --> 00:13:00,760
>> 그래서 ID, 숫자 ID를 가정하면, 그것을
아마 양의 정수 여야합니다.

271
00:13:00,760 --> 00:13:04,380
그리고 우리는 때때로해야합니까
길이를 논의 할 수있는 기회.

272
00:13:04,380 --> 00:13:06,830
당신은 일반적으로 않을 것
여기에 번호를 지정,

273
00:13:06,830 --> 00:13:11,310
대신 지정합니다
이것은 INT, 또는 큰 int이며,

274
00:13:11,310 --> 00:13:12,980
그들이있는 한 일반적이라고합니다.

275
00:13:12,980 --> 00:13:18,840
그러나 일반적으로 정수
것,의이 말 4 바이트 수 있습니다.

276
00:13:18,840 --> 00:13:23,694
그리고 4 바이트의 경우,
그 얼마나 많은 비트입니까?

277
00:13:23,694 --> 00:13:24,630
>> 청중 : [들리지]

278
00:13:24,630 --> 00:13:26,610
>> DAVID 마란 : 32 비트.

279
00:13:26,610 --> 00:13:30,270
그래서 우리는 얼마나 많은 사용자를 가질 수 있습니다
우리의 데이터베이스 그들 모두는 ID가있는 경우

280
00:13:30,270 --> 00:13:33,320
이 ID는 고유해야합니다?

281
00:13:33,320 --> 00:13:36,780
32 비트는 우리가 패턴을 의미
하나, 둘, 셋, 넷, five--

282
00:13:36,780 --> 00:13:41,000
제로의 때문에 얼마나 많은 다른 패턴
(32)이있는 경우와 사람이 당신은 할 수 있습니까?

283
00:13:41,000 --> 00:13:43,235
그와 같은 일이
질문 32 두를 무엇입니까?

284
00:13:43,235 --> 00:13:46,472

285
00:13:46,472 --> 00:13:48,430
그것은 큰 숫자의 그
나는 아주, 바로 얻을 수 없다

286
00:13:48,430 --> 00:13:50,270
그러나 나는 그것이 약 40 억 알고있다.

287
00:13:50,270 --> 00:13:53,970
그래서 이것은 데이터베이스 테이블 수 있다는 것을 의미합니다
사십억 사용자를 가지고 있고 그게 다입니다.

288
00:13:53,970 --> 00:13:56,410
>> 그래서 이것은 재미있다
디자인의 의미.

289
00:13:56,410 --> 00:14:00,840
회사의 알맞은 수
아마 너무 많이, 결정

290
00:14:00,840 --> 00:14:04,860
자신의 사용자 테이블 갖는 때문에
40 억 사용자가 드문 문제입니다.

291
00:14:04,860 --> 00:14:08,410
이것은 페이스 북 스타일의 일종이다
문제가 아닌 일반 회사의 문제.

292
00:14:08,410 --> 00:14:12,670
하지만 당신은 트랜잭션 로그가 어쩌면 경우
또는 지속적으로 데이터의 일종

293
00:14:12,670 --> 00:14:15,610
데이터베이스에 기록됩니다
절대적으로 수십억을 가질 수있는

294
00:14:15,610 --> 00:14:18,900
행 수십억하고,
당신은 그것을 위해 정수를 사용

295
00:14:18,900 --> 00:14:22,750
무슨 일이 가능한 한 빨리 일어날
당신은 번호 40 억 행에 도착

296
00:14:22,750 --> 00:14:26,210
다음은 삽입하려고
4,000,000,000번째 1, 말하자면?

297
00:14:26,210 --> 00:14:29,610
나는 숫자를 조금 단순화하고 있습니다.

298
00:14:29,610 --> 00:14:33,740
>> 당신은 삭감 할 수 있습니다, 당신을 의미
어떻게 든 처리해야합니다.

299
00:14:33,740 --> 00:14:37,910
그리고 컴퓨터가 일반적으로 어떻게 할 것인지,
심지어이 아침부터 그것에 대해 생각,

300
00:14:37,910 --> 00:14:42,430
당신은 4 비트의 값이 있으면
, 1, 1, 1, 1 등, 이는

301
00:14:42,430 --> 00:14:44,920
그냥 아침 넥타이
함께 오후에, 무엇을

302
00:14:44,920 --> 00:14:48,369
이 숫자는 이진 표현합니까?

303
00:14:48,369 --> 00:14:49,410
OK, 우리는 그것을 쉽게 만들 수 있습니다.

304
00:14:49,410 --> 00:14:53,310
이 번호를 무엇
진 대표?

305
00:14:53,310 --> 00:14:56,794
OK, 우리는 그것을 쉽게 만들 수 있습니다, 무엇을
이 바이너리를 대표 하는가?

306
00:14:56,794 --> 00:14:57,460
대상 : 세.

307
00:14:57,460 --> 00:14:59,670
DAVID 마란 : 세, 때문에
우리는 사람이 column--

308
00:14:59,670 --> 00:15:00,450
[웃음]

309
00:15:00,450 --> 00:15:01,350
아휴!

310
00:15:01,350 --> 00:15:03,980
우리는 사람 열을했다
그리고 조로 열입니다.

311
00:15:03,980 --> 00:15:07,250
그래서, 참으로, 그 가정 우리의
[? 내야는?], 32 비트 없었다

312
00:15:07,250 --> 00:15:13,440
하지만이 비트는 우리가 할 수있는이었다
사용자의 수가 0, 1, 2, 3의 카운트

313
00:15:13,440 --> 00:15:18,040
그리고, 우리는 종류의 것
다시 사용자 00에 다시.

314
00:15:18,040 --> 00:15:19,739
그래서 이것은 일반적으로 발생하는 것입니다.

315
00:15:19,739 --> 00:15:22,780
혹시 expression-- 들었어요 경우
당신이 잔 마셔요 경우 아마 가지고 있지만,

316
00:15:22,780 --> 00:15:26,500
정수 오버 플로우, 당신을
당신의 모든 비트를 틀지 유지

317
00:15:26,500 --> 00:15:29,640
가장 큰 가능한 값이 될 수 있습니다,
다음은 비트에서있어,

318
00:15:29,640 --> 00:15:30,850
일반적으로 어떤 일이 일어날까요?

319
00:15:30,850 --> 00:15:32,280
왜 00 말합니까?

320
00:15:32,280 --> 00:15:33,220
음,이 세 가지입니다.

321
00:15:33,220 --> 00:15:34,230
어떻게 4는 표현합니까?

322
00:15:34,230 --> 00:15:36,890

323
00:15:36,890 --> 00:15:38,915
나는를 표현하려면 어떻게
이진 숫자 4 하시나요?

324
00:15:38,915 --> 00:15:39,790
청중 : [들리지]

325
00:15:39,790 --> 00:15:41,780
DAVID 마란 : 그래 One--,
자체 (100) 말을하지 않습니다,

326
00:15:41,780 --> 00:15:44,190
그것은 잘못이 있기 때문에
내포하지만, 1-0-0.

327
00:15:44,190 --> 00:15:48,920
그래서 그 번호 1-0-0은 참으로
올바른,하지만 당신은 두 개의 비트가있는 경우,

328
00:15:48,920 --> 00:15:50,820
당신은 정말 무슨 짓을?

329
00:15:50,820 --> 00:15:53,219
당신은 00 이월했습니다.

330
00:15:53,219 --> 00:15:54,760
그리고 실제로, 그것은 무슨 일이 일어날 지입니다.

331
00:15:54,760 --> 00:15:56,884
사실, 당신은 생각할 수
이 더 친밀하게 대해.

332
00:15:56,884 --> 00:15:59,350
당신이 기억하는 경우, 무엇을,
십육년 전 세계

333
00:15:59,350 --> 00:16:03,380
때 종료했는데
Y2K 문제가 발생했습니다.

334
00:16:03,380 --> 00:16:04,330
이유가 있었다?

335
00:16:04,330 --> 00:16:08,170
그런데 대부분의 컴퓨터에 대한
합리적인 의사 결정,

336
00:16:08,170 --> 00:16:15,320
등 번호를 저장했다
1975 년 또는 1999 년

337
00:16:15,320 --> 00:16:19,010
두 자리 숫자를 사용하여
컴퓨터 메모리이다.

338
00:16:19,010 --> 00:16:21,950
물론 그래서, 무슨 일이
당신이 2000 년에 도착하면,

339
00:16:21,950 --> 00:16:25,790
당신은 그래, 오히려이로 이동, 또는.

340
00:16:25,790 --> 00:16:30,120
그래서 2000 년에 가서,하지만 경우
당신은 단지 보이는 두 자리 숫자를 사용하는

341
00:16:30,120 --> 00:16:32,660
올해처럼 00
그래서 당신은 롤오버했습니다.

342
00:16:32,660 --> 00:16:36,820
그리고 이것은 왜 많은 시스템
필요한이 시간에 업데이트된다.

343
00:16:36,820 --> 00:16:42,500
>> 와 그래서 그는 말했다, 회사 등
페이스 북은이 상대로 실행합니다.

344
00:16:42,500 --> 00:16:46,147
를 처리하는 유일한 방법 그래서
상황은, 솔직히, 그것을 기대하는 것입니다.

345
00:16:46,147 --> 00:16:47,980
아니면 가장 깨끗한 방법에
이 상황을 처리

346
00:16:47,980 --> 00:16:50,330
그렇지 있도록 예상하는 것입니다
나중에 변경할 수 있습니다.

347
00:16:50,330 --> 00:16:51,970
그래서 그 대신 8 바이트, 그거 알아?

348
00:16:51,970 --> 00:16:54,261
나는 미래 지향적 될거야
여기에, 그것은 비록

349
00:16:54,261 --> 00:16:56,760
그 조금 낙관적
우리는 40 억 할거야

350
00:16:56,760 --> 00:16:58,850
우리의 웹 사이트에 한 사용자.

351
00:16:58,850 --> 00:17:01,790
하지만 그냥 8 바이트를 사용하게하거나,
일반적으로 될 64 비트,

352
00:17:01,790 --> 00:17:05,640
매우 기술적, 큰 정수를했다.

353
00:17:05,640 --> 00:17:10,280
그리고 그것은 단지 당신이 할 수 있음을 의미
전화 번호에 더 많은 숫자.

354
00:17:10,280 --> 00:17:12,599
그러나 이것은 중요
디자인 결정,

355
00:17:12,599 --> 00:17:16,400
당신이 번호를 선택하면 그 때문에
표현의 너무 적은 비트가

356
00:17:16,400 --> 00:17:19,089
당신은 실제로 만들 수 있습니다
소프트웨어의 버그.

357
00:17:19,089 --> 00:17:21,750
>> 좋아, 그래서 마무리하자
이메일 및 우편 주소.

358
00:17:21,750 --> 00:17:26,369
그래서 이메일, 얼마나 오래해야
이메일 주소가 될?

359
00:17:26,369 --> 00:17:26,869
50.

360
00:17:26,869 --> 00:17:29,220
난 정말 아무 생각이 없지만이다
아마 같은,

361
00:17:29,220 --> 00:17:32,261
그렇지 않으면 하나가 않을 것 때문에
너무 길어질 경우를 쓰기 때문에, 50,

362
00:17:32,261 --> 00:17:33,360
의 지금은 그것으로 가자.

363
00:17:33,360 --> 00:17:35,770
주소, 얼마나 그되어야 하는가?

364
00:17:35,770 --> 00:17:38,325

365
00:17:38,325 --> 00:17:39,200
청중 : [들리지]

366
00:17:39,200 --> 00:17:41,900

367
00:17:41,900 --> 00:17:43,890
>> DAVID 마란 : 그것은 아니에요
단지 우편 번호, 그래도.

368
00:17:43,890 --> 00:17:45,720
주소, 나는 들었다.

369
00:17:45,720 --> 00:17:50,720
그래서 1 덜컹 덜컹 울리다 광장처럼,
쉼표, 캠브리지 질량., 쉼표, 02138.

370
00:17:50,720 --> 00:17:53,860
그리고 사실, 저 그냥 가져 보자
여기에 약간의 워크 시트입니다.

371
00:17:53,860 --> 00:17:56,510
이처럼이 느낌
놓친 기회.

372
00:17:56,510 --> 00:18:01,480
우리는 1 덜컹 덜컹 울리다 광장이있는 경우,
쉼표, 캠브리지 MA 02138,

373
00:18:01,480 --> 00:18:04,510
우리가 더 잘 할 수 같은 느낌
단지 우편 주소보다.

374
00:18:04,510 --> 00:18:07,100
왜 우리는이 조금 폭발하지?

375
00:18:07,100 --> 00:18:08,030
나는 무엇에서 무엇입니까?

376
00:18:08,030 --> 00:18:10,970
우리는 대신에 무엇을해야
여기에 우리의 행에 대해, 아마?

377
00:18:10,970 --> 00:18:12,260
>> 청중 : [들리지]

378
00:18:12,260 --> 00:18:17,579
>> DAVID 마란 : 그래, 그렇게하자
street_number를 호출,

379
00:18:17,579 --> 00:18:20,620
그리고 밑줄은 그냥 일반적이다
공간 모양을 갖는 방법,

380
00:18:20,620 --> 00:18:22,360
하지만 실제로,이 아니다.

381
00:18:22,360 --> 00:18:26,240
거리, 다음 죄송 city--?

382
00:18:26,240 --> 00:18:28,440
>> 청중 : [들리지]

383
00:18:28,440 --> 00:18:29,690
DAVID 마란 : 우리는 그렇게 할 수 있습니다.

384
00:18:29,690 --> 00:18:30,702
라인 한 줄이.

385
00:18:30,702 --> 00:18:32,410
왜 우리는 계속됩니다하지 않습니다
지금은 단순하게,

386
00:18:32,410 --> 00:18:34,840
하지만 절대적이다
허용 결정.

387
00:18:34,840 --> 00:18:38,180
그리고 다음 주, 다음하자
지금은 작은 미국 중심의 일

388
00:18:38,180 --> 00:18:42,040
그냥 이유만으로, 우편 번호을
그것은 흥미로운 실수로 이어질 수 있습니다

389
00:18:42,040 --> 00:18:43,090
여기에 또는 문제.

390
00:18:43,090 --> 00:18:44,655
그래서 지금 우리의 주소입니다 가정합니다.

391
00:18:44,655 --> 00:18:47,280
그것은 그 조금 더 짜증나
우리는 모든 더 필드가

392
00:18:47,280 --> 00:18:49,200
그러나 지금 우리는 태그를 추가 할 수 있습니다
일 좀 더 나은.

393
00:18:49,200 --> 00:18:53,210
>> 그래서 지금 거리 번호 아마
그것을해야, 숯불 안?

394
00:18:53,210 --> 00:18:54,835
그것은 무엇을해야 하는가?

395
00:18:54,835 --> 00:18:55,710
청중 : [들리지]

396
00:18:55,710 --> 00:18:57,835
DAVID 마란 : 아마, 수
다시 정수처럼?

397
00:18:57,835 --> 00:19:00,170
큰 정수?

398
00:19:00,170 --> 00:19:02,170
당신은 아마 살지 않는다
40 억 메인 스트리트에서

399
00:19:02,170 --> 00:19:03,490
또는 그런 미친 아무것도.

400
00:19:03,490 --> 00:19:06,850
그래서 정수 아마
미세하지만, 사람이

401
00:19:06,850 --> 00:19:13,880
지금과 같은 주소에 거주
1A 덜컹 덜컹 울리다 광장, 또는 1과 1/2?

402
00:19:13,880 --> 00:19:17,030
이런 일들은, 불행하게도, 존재
경우에도 당신은 거기에 거주하지 않은

403
00:19:17,030 --> 00:19:21,240
이러한 이상 현상이있다
아파트 1A, 1B, 1C, 등.

404
00:19:21,240 --> 00:19:24,260
그래서 당신은 무엇을 알고, 우리는 아마
정수와 이동 안,

405
00:19:24,260 --> 00:19:27,440
그렇지 않으면 우리는거야
일부 판매를 잃는.

406
00:19:27,440 --> 00:19:29,920
>> 문자 필드, 아마?

407
00:19:29,920 --> 00:19:30,870
나는 얼마나 오래 모르겠어요.

408
00:19:30,870 --> 00:19:33,370
아마 될 것 아니에요
그래서 10 일, 그렇게 오래.

409
00:19:33,370 --> 00:19:34,950
아무도 쓸 않을거야
긴 숫자, 아마.

410
00:19:34,950 --> 00:19:37,070
그러나 다시, 우리는 아마해야
그에게 더 생각을 제공합니다.

411
00:19:37,070 --> 00:19:39,900
아마, 구글 약간 연구를,
그러나 우리는 지금 우리의 용기와 함께 갈 것입니다.

412
00:19:39,900 --> 00:19:44,565
거리, 문자, (50)는 모르겠어요.

413
00:19:44,565 --> 00:19:46,940
어떤 시점에서, 아무도 않을거야
봉투에 쓰기 위해,

414
00:19:46,940 --> 00:19:49,350
너무, 너무 거기에 아마
거기에 약간의 상한.

415
00:19:49,350 --> 00:19:54,200
시는 동일해야합니다, 그래서 50을 char.

416
00:19:54,200 --> 00:19:59,120
>> 국가는 지금 미국의 중심이 될 수 있습니다.

417
00:19:59,120 --> 00:20:01,850
그래서 너무 친절, 목록이 될 수 있습니다
판단 호출 상태.

418
00:20:01,850 --> 00:20:04,000
그것은 두 문자처럼 될 수있다.

419
00:20:04,000 --> 00:20:06,140
그래서 사실은, 어쩌면, 나는 문자를 말하고 있었다.

420
00:20:06,140 --> 00:20:09,420
아마 VARCHAR 의미,
그냥 효율성,

421
00:20:09,420 --> 00:20:12,240
그러나 우리는 다시 올 것이다
잠시 그 결정.

422
00:20:12,240 --> 00:20:16,150
국가를위한 길이 2의 문자 수 있습니다.

423
00:20:16,150 --> 00:20:20,670
MA와 같은 그들이 가지고있는 미국의 경우,
매사추세츠, NY, 뉴욕, 뉴저지, 뉴

424
00:20:20,670 --> 00:20:22,100
뉴저지, 등등.

425
00:20:22,100 --> 00:20:23,630
그래서 그 고정 될 수있다.

426
00:20:23,630 --> 00:20:25,900
워싱턴 DC 용 DC.

427
00:20:25,900 --> 00:20:29,915
>> 하지만 내가 생각하는, 올리비에, 당신
또 다른 방법을 제안 하였다.

428
00:20:29,915 --> 00:20:30,790
청중 : [들리지]

429
00:20:30,790 --> 00:20:33,670
DAVID 마란 : 네, 그래서 그것은이다
입력 거의 성가신,

430
00:20:33,670 --> 00:20:37,890
하지만 열거가 더 적합 할 수 있습니다
이러한 방식으로 인해 미국에서 적어도

431
00:20:37,890 --> 00:20:41,320
당신은 열거 지루하다면,하지만 수
당신은 당신의 데이터베이스에 한 번만 그것을 할

432
00:20:41,320 --> 00:20:47,480
결코 다시 생각해야
그것은, 50 두 문자 코드.

433
00:20:47,480 --> 00:20:48,660
그래서 열거를 좋아한다.

434
00:20:48,660 --> 00:20:51,720
때문에의가 그 고수하자
그것은 일종의 더 엄격을 적용합니다.

435
00:20:51,720 --> 00:20:53,620
그리고 우편 번호?

436
00:20:53,620 --> 00:20:55,306
나는 앤드류가에 대한 생각을 가졌다 고 생각

437
00:20:55,306 --> 00:20:56,180
청중 : [들리지]

438
00:20:56,180 --> 00:20:57,240
DAVID 마란 : 네, 5 개 구.

439
00:20:57,240 --> 00:20:58,323
그냥 간단하게 할 수 있습니다.

440
00:20:58,323 --> 00:20:59,380
그냥 지금은 다섯을한다.

441
00:20:59,380 --> 00:21:03,070
하지만 어쩌면 난 그냥 수
오른쪽 정수를합니까?

442
00:21:03,070 --> 00:21:08,750
내가 할 수있는,하지만 당신은 무엇을 알고, 내가 만든
어떤 의미에서 한번 실수.

443
00:21:08,750 --> 00:21:13,110
몇 년 전, 나는에서 마이그레이션 된
Gmail로 마이크로 소프트 아웃룩,

444
00:21:13,110 --> 00:21:18,640
및 Outlook은 수출의 방법이
Excel 파일 등의 모든 연락처,

445
00:21:18,640 --> 00:21:21,280
값 파일을 쉼표로 구분 된 CSV 파일.

446
00:21:21,280 --> 00:21:23,950
그리고 나는 실수를
두 번을 클릭하는 생각,

447
00:21:23,950 --> 00:21:27,380
나는에 수출을 다운로드하면
있는지 확인 내가 예상대로 보였다.

448
00:21:27,380 --> 00:21:31,320
내가 저장 또는하자 공격해야합니다
에서 킥 또는 뭔가를 자동 - 저장합니다.

449
00:21:31,320 --> 00:21:35,100
그때 가져올 때 때문에
그것은 Gmail에, 모든 일했다.

450
00:21:35,100 --> 00:21:39,910
그러나 년 동안이 일을하고,
나는 10 년 전,이 다섯 가지 않았다

451
00:21:39,910 --> 00:21:44,380
나는 아직도이 친구를 찾는거야
같이 주소.

452
00:21:44,380 --> 00:21:45,700
왜?

453
00:21:45,700 --> 00:21:47,900
>> 청중 : [들리지]

454
00:21:47,900 --> 00:21:50,650
>> DAVID 마란 : 그것은했다
0, 음, 오히려 그것을

455
00:21:50,650 --> 00:21:53,810
로 전체의 우편 번호를했다
숫자, 따라서 그것의

456
00:21:53,810 --> 00:21:56,590
의미 선도적 0
는 의미가 없다.

457
00:21:56,590 --> 00:21:59,470
그리고 2138 내 우편 번호 것으로 보인다.

458
00:21:59,470 --> 00:22:07,100
그리고 이것은, 솔직히, 성가신 엑셀입니다
나는 기본적으로 생각된다 기능,

459
00:22:07,100 --> 00:22:10,980
그것은 단지에 의미가있어 경우에도
수 텍스트, Microsoft Excel에서

460
00:22:10,980 --> 00:22:13,780
나에게 도움이 될 수 있습니다 것을 결정한다,
그리고 아, 그리고 난 단지 숫자를 참조하십시오.

461
00:22:13,780 --> 00:22:15,290
의 숫자 이러한 치료를 할 수 있습니다.

462
00:22:15,290 --> 00:22:16,790
그리고는 앞에 0을 자릅니다.

463
00:22:16,790 --> 00:22:19,165
>> 나는 하나님 께 맹세, 모든 커플
달의 난 주소를 찾을 수 있습니다,

464
00:22:19,165 --> 00:22:22,300
과 강박 장애의 일종에서, 나는 돌아 가야
과에하면 0 추가도 결코 I 불구하고

465
00:22:22,300 --> 00:22:23,700
사람들이 문자 또는 아무것도를 보낼 수 있습니다.

466
00:22:23,700 --> 00:22:25,510
하지만 난 여전히이의 잔해를 찾는거야.

467
00:22:25,510 --> 00:22:28,820
그래서이 말을하는 것입니다 이것은 좋은 생각인가?

468
00:22:28,820 --> 00:22:31,610
아니, OK 때문에 사람의
매사 추세 츠,이 지역에서,

469
00:22:31,610 --> 00:22:33,270
를 선도하는 O를해야 할 것입니다.

470
00:22:33,270 --> 00:22:38,070
그럼 등으로 가자
문자, 아마, 오.

471
00:22:38,070 --> 00:22:41,450
>> 그리고 여기, 우리를 실현
열거 우리를 사용할 수

472
00:22:41,450 --> 00:22:44,600
10,000을 열거 할 수
가능한 우편 번호,

473
00:22:44,600 --> 00:22:48,530
아마처럼하지만 그 느낌
혜택, 등의 선을 넘어.

474
00:22:48,530 --> 00:22:51,350
당신은 입력이있는 경우 그
데이터베이스에있는 데이터의 양

475
00:22:51,350 --> 00:22:52,940
뭔가에 대해 보호 할 수 있습니다.

476
00:22:52,940 --> 00:22:57,400
그래서 문자는 입력 할 수 실현
우편 번호와 같은 H-E-L-L-O에서,

477
00:22:57,400 --> 00:22:59,180
가있는 것은 분명 숫자입니다.

478
00:22:59,180 --> 00:23:01,680
그래서 어떤 방법으로,이 없다
일반적인 데이터베이스,

479
00:23:01,680 --> 00:23:05,561
단지 숫자를 지정하고
오래 만 5 자,

480
00:23:05,561 --> 00:23:07,310
그래서 우리는 할 겁니다
코드에서 그렇게 할 수 있습니다.

481
00:23:07,310 --> 00:23:11,100
우리는 PHP에서 그렇게 할거야 또는
Java 또는 어떤 언어 우린

482
00:23:11,100 --> 00:23:14,230
서버에서 사용하는 집행
제약 조건의 종류.

483
00:23:14,230 --> 00:23:14,860
>> 와우!

484
00:23:14,860 --> 00:23:18,322
그래서 질문이 아직 좋아?

485
00:23:18,322 --> 00:23:19,780
의 다른 디자인 결정을 내릴 수 있습니다.

486
00:23:19,780 --> 00:23:22,500
그것은 당신 밝혀
또한 선택에 도착,

487
00:23:22,500 --> 00:23:26,600
하는 SQL 데이터베이스를 설계 할 때 또는
일반적인 관계형 database-- 경우

488
00:23:26,600 --> 00:23:28,790
다시, 관계형 단지
행과 열을 의미

489
00:23:28,790 --> 00:23:35,500
그것은 당신이 당신의 data--를 구성하는 방법은
그리고,이 의미가 있음을 인식

490
00:23:35,500 --> 00:23:37,740
나는에 오해의 소지가 있었어요
,이 drawing-- 해요 있음

491
00:23:37,740 --> 00:23:40,190
스키마라고 무엇인가
데이터베이스 테이블.

492
00:23:40,190 --> 00:23:42,810
이처럼
table-- 사양

493
00:23:42,810 --> 00:23:48,040
하지만 시간이 올 때
실제로 데이터를 저장,

494
00:23:48,040 --> 00:23:52,081
우리는 여기에 단지 예하여이 작업을 수행 할 수 있습니다.

495
00:23:52,081 --> 00:23:55,080
나는 때문에, Excel을 열어 갈거야
엑셀은 나에게 행과 열을 제공합니다.

496
00:23:55,080 --> 00:23:58,050
그리고 그 정확히 오라클과
MySQL과 다른 도구 나 줄 것이다.

497
00:23:58,050 --> 00:24:02,270
그래서 난 그냥 사용하는거야
그것은 토론을 위하여.

498
00:24:02,270 --> 00:24:05,250
내가 앞서 가자 최대 열려면
여기에 대표적인 문서,

499
00:24:05,250 --> 00:24:06,310
조금 확대.

500
00:24:06,310 --> 00:24:15,200
예를 들면 그래서, 우리의 헤더는 지금
이름, 성, 성별, ID,

501
00:24:15,200 --> 00:24:20,980
이메일, 거리 번호, 거리, 으악.

502
00:24:20,980 --> 00:24:25,710
거리, 도시, 주, 단지
대한 화면에 적합합니다.

503
00:24:25,710 --> 00:24:29,080
>> 그래서 이것이 의미하는 것은 그 때
사용자는 먼저, 내 웹 사이트를 등록

504
00:24:29,080 --> 00:24:32,880
이 같은 될 것
다윗은, 마란은, m은의 1을 가정 해 봅시다

505
00:24:32,880 --> 00:24:42,910
malan@harvard.edu, 거리 번호는 것
1 덜컹 덜컹 울리다 광장, 캠브리지, MA처럼,

506
00:24:42,910 --> 00:24:44,780
02138, 다음 등 때문에.

507
00:24:44,780 --> 00:24:48,290
그래서 내가 말할 때 관계형 데이터베이스
또는 SQL 데이터베이스 행과 열이며

508
00:24:48,290 --> 00:24:49,350
나는 이것을 의미한다.

509
00:24:49,350 --> 00:24:51,900
즉, 실제 데이터가 저장된다
행 및 열이다.

510
00:24:51,900 --> 00:24:53,950
이것은 단지 우연의 일치입니다
우리가 얘기했다 것을,

511
00:24:53,950 --> 00:24:56,033
난 그냥 그리기했다
행과 열에서 아웃.

512
00:24:56,033 --> 00:24:58,320
이것은 단지 스키마이며
무엇보다 중요한 정의.

513
00:24:58,320 --> 00:25:01,640
>> 여기에 이​​러한 필드 그래서,
또는 동등이,

514
00:25:01,640 --> 00:25:06,270
이는 당신이 생각하는 분야는
나는 사용자있어 경우에 검색 할 가능성이있어

515
00:25:06,270 --> 00:25:09,200
아니면 데이터베이스 관리자를 요하는 경우?

516
00:25:09,200 --> 00:25:12,426
마찬가지로, 어떤 필드 I 오전
실제로 다른 검색하려고?

517
00:25:12,426 --> 00:25:13,830
>> 청중 : [들리지]

518
00:25:13,830 --> 00:25:17,690
>> DAVID 마란 : 이름, 그래 그렇게
나는, 그래 that-- 사실을 좋아한다

519
00:25:17,690 --> 00:25:19,750
이메일은 매우 일반적인 수 있습니다.

520
00:25:19,750 --> 00:25:21,440
죄송합니다, 당신은 이름을 말했다.

521
00:25:21,440 --> 00:25:24,030
그래서 봐 주길 다시, 우리는있어
이러한 종류의 추상적 인 얘기.

522
00:25:24,030 --> 00:25:25,988
나는 왜 좋겠 모른다
이름을 검색 할 수,

523
00:25:25,988 --> 00:25:29,340
하지만이 경우 합리적인 느낌
당신은 사용자를 검색하고 있습니다.

524
00:25:29,340 --> 00:25:31,170
아마 확인, ID, 상태.

525
00:25:31,170 --> 00:25:34,100

526
00:25:34,100 --> 00:25:36,160
>> 그리고 그것은 미끄러운있어
경사, 내가 할 수 있기 때문에

527
00:25:36,160 --> 00:25:38,890
시나리오 곳을 고안
어쩌면 내 상사가 나에게 요청했다,

528
00:25:38,890 --> 00:25:40,417
얼마나 많은 사람들 우리는 우리의 사이트에해야합니까?

529
00:25:40,417 --> 00:25:42,000
얼마나 많은 여성 우리는 우리의 사이트에해야합니까?

530
00:25:42,000 --> 00:25:45,210
그리고 그 시점에서, 당신은 할 수 있습니다
너무, 성별 필드를 검색하려면,

531
00:25:45,210 --> 00:25:45,940
다른 아무것도 없습니다.

532
00:25:45,940 --> 00:25:47,350
그래서 트레이드 오프는 여기에있다.

533
00:25:47,350 --> 00:25:49,180
다시 말하지만, 거기에 더
정답 만이

534
00:25:49,180 --> 00:25:53,760
대부분의 SQL 데이터베이스의 기능입니다
인덱싱, 이에로 알려진

535
00:25:53,760 --> 00:25:56,100
당신, 디자이너의
데이터베이스 관리자,

536
00:25:56,100 --> 00:26:01,730
사전에 결정을 얻을 수있는
데이터베이스 최적화해야 필드들이

537
00:26:01,730 --> 00:26:02,980
에서 검색합니다.

538
00:26:02,980 --> 00:26:07,620
>> 당신은 매우 순진 최적화 말할 수
이것은, 즉,이 최적화 최적화

539
00:26:07,620 --> 00:26:10,300
그이 최적화,
데이터베이스는 것

540
00:26:10,300 --> 00:26:14,882
밑에서 몇 가지 마법의 일을
후드와 같은 방식으로 일을 할

541
00:26:14,882 --> 00:26:17,090
당신이 검색 다음에
이러한 필드에,

542
00:26:17,090 --> 00:26:18,400
그것은 사실 빨라집니다.

543
00:26:18,400 --> 00:26:19,110
이 가능합니다.

544
00:26:19,110 --> 00:26:20,530
그것은 그 자체를 취소하지 않습니다.

545
00:26:20,530 --> 00:26:22,500
그러나 지불 가격이 있어야합니다.

546
00:26:22,500 --> 00:26:27,220
>> 당신이 만약 순진, 이상 - 열정적으로
말하자면, 색인이 모든 필드,

547
00:26:27,220 --> 00:26:29,810
그래서 수 있도록, 말하자면 모두
효율적으로 검색,

548
00:26:29,810 --> 00:26:31,625
당신은 아마 어떤 가격을 지불?

549
00:26:31,625 --> 00:26:32,500
청중 : [들리지]

550
00:26:32,500 --> 00:26:33,090
DAVID 마란 : 성능.

551
00:26:33,090 --> 00:26:33,798
당신은 무엇을 의미합니까?

552
00:26:33,798 --> 00:26:37,380
그런데 성능, 최소한의
내가 논의하고있어 상황은 이제 더 낫다.

553
00:26:37,380 --> 00:26:38,830
즉, 인덱스의 정의입니다.

554
00:26:38,830 --> 00:26:41,180
그것은 빠른 검색을 할 것입니다.

555
00:26:41,180 --> 00:26:43,366
그래서 시간이 말하자면, 감소한다.

556
00:26:43,366 --> 00:26:44,240
청중 : [들리지]

557
00:26:44,240 --> 00:26:45,031
DAVID 마란 : 공간.

558
00:26:45,031 --> 00:26:46,520
그래서 다시, 이들은 공통 거래이다.

559
00:26:46,520 --> 00:26:50,820
나는 당신의 검색 속도를 수 있지만입니다
당신에게 공간을 더 바이트 비용 것.

560
00:26:50,820 --> 00:26:51,610
왜?

561
00:26:51,610 --> 00:26:55,230
음, 기본적으로, 경우에 우리는 전혀 없다
이 빨간 별이 인덱스 없음,

562
00:26:55,230 --> 00:26:58,797
말인지으로, 당신은 어떻게 검색하나요
이 데이터베이스의 이름을 검색 하시나요?

563
00:26:58,797 --> 00:27:00,630
그럼 그려 보자 우리
이 예에 대한 관심.

564
00:27:00,630 --> 00:27:06,300
우리는 다윗과 스컬리와 카림이있는 경우
이러한 행 아르와 등,

565
00:27:06,300 --> 00:27:06,910
예를 들어.

566
00:27:06,910 --> 00:27:08,390
>> 그럼 정확히 할 수 있습니다.

567
00:27:08,390 --> 00:27:13,990
스컬리는 여기에 다음
우리는, 카림, 그리고 아르와가

568
00:27:13,990 --> 00:27:18,390
그리고 다른 사람, 당신이 아닌 경우
인덱스 말하자면 정의해야

569
00:27:18,390 --> 00:27:20,160
당신이 할 수있는 최선의 선형 검색입니다.

570
00:27:20,160 --> 00:27:23,470
당신이 아르와 검색하면, 우리는 아니에요
바로 점프 할 수있을 것 그녀의

571
00:27:23,470 --> 00:27:24,140
빨리.

572
00:27:24,140 --> 00:27:26,556
우리는 정상을 시작하려고하고 있고
바닥에 모든 길을 갈,

573
00:27:26,556 --> 00:27:28,600
하지 우리의 원래는 달리
마이크 스미스 예.

574
00:27:28,600 --> 00:27:33,470
>> 그러나, 내가 말할 경우,이 봐, 데이터베이스,
인덱스 이름 필드를,

575
00:27:33,470 --> 00:27:37,000
다음은 뭔가를 할 것
애호가 뭔가를 지원

576
00:27:37,000 --> 00:27:38,130
이진 검색 등을들 수있다.

577
00:27:38,130 --> 00:27:39,820
아마 그 자체 이진 검색하지 않습니다.

578
00:27:39,820 --> 00:27:42,810
데이터베이스는 다른 사용하는 경향
B-나무라는 데이터 구조,

579
00:27:42,810 --> 00:27:46,540
이진 나무와 혼동하지 않도록,
그냥 빠르게 검색 할 수 있도록하는 것이

580
00:27:46,540 --> 00:27:48,500
자연 대수 뭔가.

581
00:27:48,500 --> 00:27:53,510
하지만 가격은 그 구축 비용을 지불
기능, 메모리의 데이터 구조

582
00:27:53,510 --> 00:27:54,570
더 바이트입니다.

583
00:27:54,570 --> 00:27:57,170
그래서 몇 메가 바이트 걸릴 수 있습니다,
몇 기가 바이트, 누가 알 겠어?

584
00:27:57,170 --> 00:27:58,410
이 데이터에 따라 달라집니다.

585
00:27:58,410 --> 00:28:02,640
>> 어떤 점에서 그래서, 당신이 결정해야,
아마 일반적인 경우는 아니다.

586
00:28:02,640 --> 00:28:06,000
그래서 실제 공통 무엇인가
경우, 당신은 정말 선택해야한다면,

587
00:28:06,000 --> 00:28:10,080
좋아하는 분야는 무엇을 할 수 있는가?

588
00:28:10,080 --> 00:28:10,580
이메일.

589
00:28:10,580 --> 00:28:14,400
그리고, 이메일 때문에 이메일처럼
이론적으로, 고유해야합니다.

590
00:28:14,400 --> 00:28:17,650
그래서 일반적으로, 당신은 때를 알고
사전에 필드 중 하나가

591
00:28:17,650 --> 00:28:20,277
것을, 또는 고유 것이다
좋은 필드 해지는 경향

592
00:28:20,277 --> 00:28:22,860
에 검색 그렇게 때문에하는,
때 당신이 뭔가를 검색,

593
00:28:22,860 --> 00:28:26,194
다시 하나를받을거야 또는
응답을 제로 다음 작업이 완료됩니다.

594
00:28:26,194 --> 00:28:28,110
당신은 계속 필요가 없습니다
아직 다른 사람을 찾고.

595
00:28:28,110 --> 00:28:31,992
>> 그리고 여기이 경우, 이메일,
두 번 등록 할 수 없기 때문에 너무 오래

596
00:28:31,992 --> 00:28:33,450
동일한 이메일과 함께 좋은 하나입니다.

597
00:28:33,450 --> 00:28:36,710
의 정의에 의해 ID,
컴퓨터 과학의 세계,

598
00:28:36,710 --> 00:28:39,610
당신은에 대해 얘기하는 경우
더 나은 고유 한 ID.

599
00:28:39,610 --> 00:28:42,970
즉, 내포의 일종
ID 또는 식별자.

600
00:28:42,970 --> 00:28:46,440
그리고 이들의 나머지는있을 수 있습니다
,의는 가진 자에게 좋은 부르 자

601
00:28:46,440 --> 00:28:47,860
하지만 정말 필요하지 않습니다.

602
00:28:47,860 --> 00:28:49,976
>> 그래서 데이터베이스에,
당신은 인덱스를 지정

603
00:28:49,976 --> 00:28:51,350
하지만 당신은 더 정확하게 할 수 있습니다.

604
00:28:51,350 --> 00:28:56,060
당신은 헤이, 데이터베이스, 확인, 말할 수있다
것을이 테이블의 모든 ID는 고유합니다.

605
00:28:56,060 --> 00:28:59,330
심지어 프로그래머를 못하게
실수로 중복 이메일에 넣어

606
00:28:59,330 --> 00:29:00,740
또는 ID 번호를 중복.

607
00:29:00,740 --> 00:29:03,140
열거 같은 많은
마찬가지로 당신이 우리를 보호

608
00:29:03,140 --> 00:29:04,881
이러한 낮은 수준의 방어를 할 수 있습니다.

609
00:29:04,881 --> 00:29:07,130
그리고 데이터베이스 설계에
어떤 의미, 재미의 종류이다,

610
00:29:07,130 --> 00:29:08,380
당신이 방어를 할 수 있기 때문이다.

611
00:29:08,380 --> 00:29:11,460
당신은 일종의 작업하는 것으로 가정
끔찍한, 끔찍한 프로그래머

612
00:29:11,460 --> 00:29:15,550
당신은 많은 방어를 넣어하려면
, 데이터를 보호하는 당신이 할 수

613
00:29:15,550 --> 00:29:18,940
하지만 동시에 당신이 원하는
그들이 더 잘 수행에 도움

614
00:29:18,940 --> 00:29:21,386
어떤 선택하여
필드에 대한 최적화 할 수 있습니다.

615
00:29:21,386 --> 00:29:24,260
하지만 당신은 반드시 그것을 할 수 없다
우리와 같은 진공 가지 여기에 있습니다.

616
00:29:24,260 --> 00:29:26,480
당신은 무엇을 알고있어
그 일반적인 경우는 주도했습니다.

617
00:29:26,480 --> 00:29:29,397
개발자는 경우
주소록을 구현,

618
00:29:29,397 --> 00:29:32,230
당신은 잘 할 수 있도록 할 수 있습니다
거의 모든 필드를 검색하려면,

619
00:29:32,230 --> 00:29:33,830
그냥 응용 프로그램의 성격에 의해.

620
00:29:33,830 --> 00:29:37,910
그래서 어쩌면 당신은 지출
그 추가 공간.

621
00:29:37,910 --> 00:29:39,090
>> 오른쪽, 질문?

622
00:29:39,090 --> 00:29:41,820

623
00:29:41,820 --> 00:29:42,486
네.

624
00:29:42,486 --> 00:29:43,470
>> 청중 : [들리지]

625
00:29:43,470 --> 00:29:44,404
>> DAVID 마란 : 아니

626
00:29:44,404 --> 00:29:45,279
>> 청중 : [들리지]

627
00:29:45,279 --> 00:29:47,840

628
00:29:47,840 --> 00:29:48,826
>> DAVID 마란 : OK.

629
00:29:48,826 --> 00:29:49,701
>> 청중 : [들리지]

630
00:29:49,701 --> 00:29:52,420

631
00:29:52,420 --> 00:29:54,850
>> DAVID 마란 : 아, 그래서
방식으로 이야기

632
00:29:54,850 --> 00:29:57,940
지금은 완전히 언어 무신론자입니다.

633
00:29:57,940 --> 00:30:02,370
그래서 우리는에 대해 지금 이야기
더 일반적으로 관계형 데이터베이스,

634
00:30:02,370 --> 00:30:04,760
또는 SQL은 더 일반적으로 데이터베이스.

635
00:30:04,760 --> 00:30:06,870
>> 청중 : [들리지]

636
00:30:06,870 --> 00:30:10,030
>> DAVID 마란 : 더 나은 단어 사용하기
어떤 언어로 사용할 수 있습니다.

637
00:30:10,030 --> 00:30:15,280
그래서, C를 자바 스크립트 코드를 작성할 수 있습니다
코드, C ++ 코드, 자바 코드, 루비 코드,

638
00:30:15,280 --> 00:30:19,010
이는 모두는 이야기
데이터베이스 및 실행 쿼리.

639
00:30:19,010 --> 00:30:22,310
사실, 그건 나쁘지 않아
예를 들어 쿼리에 SEGUE.

640
00:30:22,310 --> 00:30:25,720
그리고 다시, 우리는로 이동하지 않을거야
Java 또는 C ++ 또는 더 이상 그 어떤 것도,

641
00:30:25,720 --> 00:30:29,420
하지만 SQL에서, 언어는 내가 유지
쿼리 언어는 구조화, 참조,

642
00:30:29,420 --> 00:30:32,790
이것 자체는 프로그래밍 언어,
그러나 더 위해 사용되는 것을 의미있어

643
00:30:32,790 --> 00:30:37,330
놀람, 쿼리 쿼리를 구성.

644
00:30:37,330 --> 00:30:38,660
>> 그게 나는 이것을 의미한다.

645
00:30:38,660 --> 00:30:41,190
데이터를 선택하는 방법
MySQL 데이터베이스에서

646
00:30:41,190 --> 00:30:49,330
당신은 말 그대로 프로그램에 입력됩니다
사용자의 선택 스타처럼 뭔가.

647
00:30:49,330 --> 00:30:52,200
나는이 테이블 가정하고,
이제부터는 사용자라고합니다.

648
00:30:52,200 --> 00:30:54,860
나는 우리가 원하는 무엇이든 그것을 호출 할 수 있습니다
하지만 가지 의미가 있습니다.

649
00:30:54,860 --> 00:30:57,240
그래서 선택은 매우입니다
일반 동사, 당신이 경우

650
00:30:57,240 --> 00:30:59,290
것, SQL에서, 그 문자 그대로 않습니다.

651
00:30:59,290 --> 00:31:02,730
당신은 스타에 대해 어떻게 생각하십니까
이러한 문맥 수단?

652
00:31:02,730 --> 00:31:04,410
>> 청중 : [들리지]

653
00:31:04,410 --> 00:31:05,380
>> DAVID 마란 : 미안 해요?

654
00:31:05,380 --> 00:31:06,300
>> 청중 : [들리지]

655
00:31:06,300 --> 00:31:09,580
>> 데이비드 마란은 : 필요 없음, 그건
보다보다 포괄적, 실제로.

656
00:31:09,580 --> 00:31:11,700
그것은 와일드 카드 문자입니다.

657
00:31:11,700 --> 00:31:14,740
무엇을 의미 거의 항상 스타,
그래서,이 경우에도 수단

658
00:31:14,740 --> 00:31:16,510
데이터베이스에서 모든 것을 선택합니다.

659
00:31:16,510 --> 00:31:20,730
나는이 말을 때, 내 말은
모든 열을 나에게 돌려 줄

660
00:31:20,730 --> 00:31:22,440
내 테이블에서 사용자를했다.

661
00:31:22,440 --> 00:31:24,730
이 호출 그래서, 나에게 결과 집합을 제공합니다.

662
00:31:24,730 --> 00:31:28,210
즉, 나에게 사본을 제공
스프레드 시트, 난에 받고 있어요 것입니다.

663
00:31:28,210 --> 00:31:34,890
>> 그러나 나는 말했다 경우 사용자의 선택 스타
ID 1에 해당하는 경우, 얼마나 큰가해야

664
00:31:34,890 --> 00:31:36,640
내 결과 세트는 수?

665
00:31:36,640 --> 00:31:41,680
또는 동등하게, 얼마나 많은 행이해야
나는 데이터베이스에서 다시 핸드?

666
00:31:41,680 --> 00:31:45,860
아마 하나, 난 정말이있는 경우
고유 식별자로 ID를 처리,

667
00:31:45,860 --> 00:31:50,710
다윗은 그 고유 한 ID가있는 경우, I
오직 하나의 행을 다시 받아야합니다

668
00:31:50,710 --> 00:31:53,220
다윗의 정보를 모두 포함.

669
00:31:53,220 --> 00:31:56,390
나는 말했다 경우이 경우 ID
99 같다, 나는 돌아 가야한다

670
00:31:56,390 --> 00:32:00,320
이러한 맥락에서 제로 행
적어도 순간.

671
00:32:00,320 --> 00:32:03,620
>> 그러나, 나는 정말 상관하지 않는 경우
모든 정보에 대한,

672
00:32:03,620 --> 00:32:06,970
난 그냥 여기서 다윗이 살고 않습니다, 말할 수 있을까?

673
00:32:06,970 --> 00:32:10,860
에서 선택 우편 번호
ID가 1 인 사용자.

674
00:32:10,860 --> 00:32:15,820
이 날에만 다윗의 우편 번호를 선택합니다
코드와 해당 행이 아닌 전체.

675
00:32:15,820 --> 00:32:19,541
내가 왜 대신이 작업을 수행 할 수 있습니다
스타 질의, 와일드 카드?

676
00:32:19,541 --> 00:32:21,950
>> 청중 : [들리지]

677
00:32:21,950 --> 00:32:24,590
>> DAVID 마란 : 그래, 나는 단지 그것을해야 할 수도 있습니다.

678
00:32:24,590 --> 00:32:26,350
그래서 성능은 다시 여기에 대한 대답이다.

679
00:32:26,350 --> 00:32:28,540
왜 더 요청
정보 당신은 필요한 것보다

680
00:32:28,540 --> 00:32:32,020
그것은 바로 함께 모든 경우에도 때문에
당신은 여전히​​, 그 데이터를 복사해야

681
00:32:32,020 --> 00:32:35,560
이 데이터베이스에서, 보일 것입니다
어떻게 든 프로그램으로,

682
00:32:35,560 --> 00:32:38,490
그것은 당신이 경우 그냥 바보
만 숫자의 다섯 필요

683
00:32:38,490 --> 00:32:40,340
행이 아닌 전체.

684
00:32:40,340 --> 00:32:42,180
>> 그래서 어떻게 사용자를 삽입합니까?

685
00:32:42,180 --> 00:32:44,780
사용자가 바로이 가정
처음 등록.

686
00:32:44,780 --> 00:32:46,560
구문은 일반적으로 다음과 같을 것이다.

687
00:32:46,560 --> 00:32:52,700
사용자에 삽입하고,
우리는, 값을 말할 것입니다

688
00:32:52,700 --> 00:33:00,150
그리고, 우리는 가치를 말할 것이다
같은,,,의 말 로렌 스컬리하자

689
00:33:00,150 --> 00:33:02,380
바로 여기에 우리의 제작자.

690
00:33:02,380 --> 00:33:04,390
그리고 다음 필드는 성별입니다.

691
00:33:04,390 --> 00:33:08,020
그래서 우리는 인용, 인용을 끝내 말 것
"F", 우리는 ID가

692
00:33:08,020 --> 00:33:12,250
내가하자 say--거야
그녀는 여기에 사실이 아니다 척

693
00:33:12,250 --> 00:33:14,380
그래서 우리는 이야기 되감기합니다.

694
00:33:14,380 --> 00:33:16,530
그래서이 그녀 ID 될 것이다.

695
00:33:16,530 --> 00:33:19,130
그리고 다음 필드
여기에 그녀의 이메일입니다.

696
00:33:19,130 --> 00:33:22,140
그래서처럼 될 것
등 로렌 스컬리와,

697
00:33:22,140 --> 00:33:24,360
그리고 우리는 단지 점 도트 있습니다
여기부터 멀리 점.

698
00:33:24,360 --> 00:33:26,890
지금은 조금 얻을 것이다
지루한, 그러나 삽입 쿼리

699
00:33:26,890 --> 00:33:28,310
궁극적으로 그렇게 보일 것이다.

700
00:33:28,310 --> 00:33:30,970
>> 나는 제거하려면
스컬리는, 어 - 오, 이제 등록 취소하자

701
00:33:30,970 --> 00:33:37,420
그녀의, 그녀는 그녀의 계정을 삭제,
ID 2에 해당 사용자의 삭제,

702
00:33:37,420 --> 00:33:38,500
스컬리를 제거합니다.

703
00:33:38,500 --> 00:33:48,050
아니면 업데이트 사용자가 설정 말할 수있다,
우리가 무엇을 변경할 수의 말을하자?

704
00:33:48,050 --> 00:33:49,430
그녀는 이동하자.

705
00:33:49,430 --> 00:33:53,730
설정 우편 번호는 동일 021-- 아니,
그것은 그녀의 현재의 지퍼입니다.

706
00:33:53,730 --> 00:33:54,487
90210.

707
00:33:54,487 --> 00:33:56,320
유일한 다른 우편 번호
나는 세상에서 알고있다.

708
00:33:56,320 --> 00:33:59,002
그래서 바꿀 것
그녀의 우편 번호는 실제로 code--

709
00:33:59,002 --> 00:34:00,460
그것은 그녀의 우편 번호를 변경하지 않을 것입니다.

710
00:34:00,460 --> 00:34:02,170
>> 난 그냥 무슨 짓을 한거야?

711
00:34:02,170 --> 00:34:04,292
비록 구문은 아마 새로운 기능입니다.

712
00:34:04,292 --> 00:34:05,302
>> 청중 : [들리지]

713
00:34:05,302 --> 00:34:08,010
데이비드 마란 : 그래, 나는 모두를 이동
비벌리 힐스, 캘리포니아.

714
00:34:08,010 --> 00:34:11,920
그래서 실제로해야
ID 2에 해당 위치를 말한다.

715
00:34:11,920 --> 00:34:12,820
기타 등등.

716
00:34:12,820 --> 00:34:15,290
그래서 SQL이에 대한 모든 것입니다
명령의 종류.

717
00:34:15,290 --> 00:34:20,260
,, 업데이트, 선택 삽입, 삭제
끝이 술어

718
00:34:20,260 --> 00:34:22,139
이 곳의 절은, 말하자면.

719
00:34:22,139 --> 00:34:25,170
그리고 더 많은 당신이 할 수있다
, 그러나 그것은 정말 귀결

720
00:34:25,170 --> 00:34:29,750
간단히, 경우 arcanely, 표현
당신은 무엇을 데이터베이스 싶어요.

721
00:34:29,750 --> 00:34:31,580
>> 그리고 데이터베이스
알아낼 것이다 때

722
00:34:31,580 --> 00:34:35,630
당신은에 로렌 스컬리를 삽입
데이터베이스, 여기서 메모리에 그녀를 넣어

723
00:34:35,630 --> 00:34:38,230
우리는 매우 신속하게 얻을 수 있도록
그녀의 그녀의 이메일 주소를 기반으로

724
00:34:38,230 --> 00:34:42,610
또는 그녀의 ID 번호 등을 기반.

725
00:34:42,610 --> 00:34:43,391
그래, 댄.

726
00:34:43,391 --> 00:34:44,266
청중 : [들리지]

727
00:34:44,266 --> 00:34:46,364

728
00:34:46,364 --> 00:34:47,780
DAVID 마란 : 정말 좋은 질문입니다.

729
00:34:47,780 --> 00:34:50,370
이 스크립트는 변경됩니다
오라클 마이크로 소프트 액세스

730
00:34:50,370 --> 00:34:52,290
MySQL로 PostgreSQL을 하는가?

731
00:34:52,290 --> 00:34:53,790
짧은 대답은 달려있다.

732
00:34:53,790 --> 00:34:58,697
이론적으로 매우가 존재
SQL의 중요한 공통의 부분 집합

733
00:34:58,697 --> 00:35:00,780
그 모두를 통해 공유 된
이러한 구현.

734
00:35:00,780 --> 00:35:03,340
그러나, 다양한 제조업체
추가 기능을 가지고 있습니다

735
00:35:03,340 --> 00:35:07,120
자신의 데이터베이스에 어떤 일을 할 수
이러한 기능의 범위를 넘어,

736
00:35:07,120 --> 00:35:08,720
즉, 실제로 파괴 할 수 있습니다.

737
00:35:08,720 --> 00:35:11,210
>> 그런데 개발자 그래서
이에 대비,

738
00:35:11,210 --> 00:35:14,350
그 대신 원시 쓰기보다
SQL 코드는 내가 여기 쓰고 있어요처럼

739
00:35:14,350 --> 00:35:19,460
그들은 대신 라이브러리를 사용,
공통 라이브러리 자체

740
00:35:19,460 --> 00:35:23,650
입니다 종류의 높은 수준과 초록
멀리는 사용중인 제품입니다.

741
00:35:23,650 --> 00:35:25,710
그리고 그것은 당신을 제공합니다
함수와 프로 시저

742
00:35:25,710 --> 00:35:28,810
그래서 당신이 결코 호출하지합니다
실제로 원시 SQL을 작성합니다.

743
00:35:28,810 --> 00:35:32,609
>> 이론적으로, 다음, 당신은 변경할 수 있습니다
오라클 마이크로 소프트에 제품

744
00:35:32,609 --> 00:35:34,650
또는 그 반대 또는 아무것도
다른 사람, 그리고 문자 그대로

745
00:35:34,650 --> 00:35:36,920
코드에 대해 아무것도 변경하지 않습니다.

746
00:35:36,920 --> 00:35:40,180
현실은, 그러나, 당신이 가끔있다
그 결과 같은 기능을 제공합니다.

747
00:35:40,180 --> 00:35:43,860
당신은 제품 때문에을 선택했을 수 있습니다
이들 부가 가치 기능을 가지고,

748
00:35:43,860 --> 00:35:46,610
당신은 지금 막 아니에요
의식적으로 그들을 사용.

749
00:35:46,610 --> 00:35:51,630
>> 그리고 일화, 대부분의 회사는 경향이있다
멀리 자신의 데이터베이스에서 이동하지합니다 않습니다.

750
00:35:51,630 --> 00:35:54,002
이에 좋은 반면 그래서
기능이, 현실

751
00:35:54,002 --> 00:35:55,960
당신이 정밀 검사하는 경우이다
데이터베이스, 당신은있어

752
00:35:55,960 --> 00:35:59,890
아마 다른 변화의 다발을
어쨌든, 당신은 필요하지 않습니다

753
00:35:59,890 --> 00:36:01,360
그 예상해야합니다.

754
00:36:01,360 --> 00:36:03,720
그래서 틀림없이입니다
오버 엔지니어링 문제를,

755
00:36:03,720 --> 00:36:05,670
하지만 정말 상황에 따라 달라집니다.

756
00:36:05,670 --> 00:36:09,960
그러나 이론적으로, SQL은 공유
이러한 다양한 제품에서.

757
00:36:09,960 --> 00:36:11,560
정말 좋은 질문.

758
00:36:11,560 --> 00:36:12,272
네.

759
00:36:12,272 --> 00:36:13,147
>> 청중 : [들리지]

760
00:36:13,147 --> 00:36:17,820

761
00:36:17,820 --> 00:36:21,480
>> DAVID 마란 : 네, 그래서
당신은 데이터베이스를 생각할 수

762
00:36:21,480 --> 00:36:25,020
단지 서버의 끝에있다
, 해당 서버의 내부 일

763
00:36:25,020 --> 00:36:28,670
의 전체 무리입니다
테이블, 행 및 열.

764
00:36:28,670 --> 00:36:33,410
그리고 당신은 다음과 같은 쿼리를 보낼 때
프로그램에서, 당신의 웹 사이트,

765
00:36:33,410 --> 00:36:39,340
자바로 작성된, 루비, 파이썬, 무엇이든,
서버는이 명령을 받고

766
00:36:39,340 --> 00:36:41,660
그리고 그것을 해석
사실상 동일한 방식으로

767
00:36:41,660 --> 00:36:43,660
우리는 함께 이전 논의
해석 언어,

768
00:36:43,660 --> 00:36:47,333
다음 제로에 대한 몇 가지 작업을 수행
0 개 이상의 테이블 이상의 행.

769
00:36:47,333 --> 00:36:48,208
청중 : [들리지]

770
00:36:48,208 --> 00:36:53,540

771
00:36:53,540 --> 00:36:55,070
>> DAVID 마란 : 정확히, 정확하게.

772
00:36:55,070 --> 00:36:58,450
뭔가에 대한 의사 그래서
같은 그이 될 수 있습니다.

773
00:36:58,450 --> 00:37:02,450
당신의 PHP 파일 또는에서
파이썬 파일이나 자바 파일,

774
00:37:02,450 --> 00:37:09,210
당신은 의사 코드가, 또는 것
스크래치와 같은 블록으로, 사용자가 방문하는 경우

775
00:37:09,210 --> 00:37:19,870
처음 acme.com/register~~V,
다음 사용자로 등 삽입합니다.

776
00:37:19,870 --> 00:37:22,619
그리고 우리는이 번역 것
결국보다 구체적인 코드입니다.

777
00:37:22,619 --> 00:37:24,660
하지만 실제로는, 우리 모두가
여기서 빌딩 블록

778
00:37:24,660 --> 00:37:27,680
우리는 몇 가지를 생략하는 경우에도
구현 단계.

779
00:37:27,680 --> 00:37:31,560
>> 그래서 내가 무슨 잘못을 찾을 수 있습니다 우리
놀라 잠시 전했다.

780
00:37:31,560 --> 00:37:36,470
당신은 꽤을 만들었습니다
사용자를위한 완전한 테이블.

781
00:37:36,470 --> 00:37:38,920
인정 하듯이, 우리는 구현할 수
몇 가지 다른 방법으로,

782
00:37:38,920 --> 00:37:43,030
하지만 실제로 우리를 주도
그리고 path-- 아래로 난 당신 말

783
00:37:43,030 --> 00:37:48,080
그러나 그것은 상당히 아마 내 fault--있어
비효율적 인 데이터베이스 구현.

784
00:37:48,080 --> 00:37:49,950
그것은 정상화 아닙니다.

785
00:37:49,950 --> 00:37:52,320
>> 그리고 정규화에 의해 내 말은
있을 것입니다,

786
00:37:52,320 --> 00:37:57,380
시간이 지남에 상당한 중복,
따라서 비 효율성,

787
00:37:57,380 --> 00:38:00,210
그 공간의 낭비이다.

788
00:38:00,210 --> 00:38:05,650
당신이 여기에서 보는 것만, 수에 근거
당신의 공간이 곳 폐기물을 구상

789
00:38:05,650 --> 00:38:08,710
시간이 지남에 온 것입니다,
점점 더 많은 사용자 등록으로

790
00:38:08,710 --> 00:38:10,860
귀하의 웹 사이트에 대한?

791
00:38:10,860 --> 00:38:13,047
어떤 데이터가 중복 될 수 있는가?

792
00:38:13,047 --> 00:38:19,084

793
00:38:19,084 --> 00:38:20,940
>> 청중 : [들리지]

794
00:38:20,940 --> 00:38:22,686
>> DAVID 마란 : 왜을 의미합니까?

795
00:38:22,686 --> 00:38:23,561
청중 : [들리지]

796
00:38:23,561 --> 00:38:32,180

797
00:38:32,180 --> 00:38:32,930
DAVID 마란 : 그래.

798
00:38:32,930 --> 00:38:35,622
그리고 이제 목적을 위해 가정하자
오늘의 그건 사실입니다.

799
00:38:35,622 --> 00:38:38,330
알고 보니, 우리는이를 배웠다
어려운 방법, 즉 사실이 아니다.

800
00:38:38,330 --> 00:38:41,670
어떻게 든 여러 도시,이
어떻게 든, 동일한 우편 번호,

801
00:38:41,670 --> 00:38:43,390
있는이 놀라운 직관을 나누기.

802
00:38:43,390 --> 00:38:46,180
하지만, 이제 그 사실 가정하자
그것은 거의 항상 사실 때문이다.

803
00:38:46,180 --> 00:38:51,390
그래서 우편 번호가 있다고 가정
항상 같은 도시와 관련된

804
00:38:51,390 --> 00:38:53,600
종류 및 상태,
합리적인 가정의,

805
00:38:53,600 --> 00:38:54,840
하지만 잘못된, 그것은 밝혀졌습니다.

806
00:38:54,840 --> 00:38:57,310
그러나 합리적인 가정
오늘의 목적을 위해.

807
00:38:57,310 --> 00:39:01,650
>> 그럼 난 캠브리지에 살고 있다고 가정,
MA,이 사용자의 표에 따라,

808
00:39:01,650 --> 00:39:04,100
하고 있다고 가정 로렌
스컬리는 매사추세츠 주 캠브리지에 살고

809
00:39:04,100 --> 00:39:06,120
하고 있다고 가정 카림
매사추세츠 주 캠브리지에 살고,

810
00:39:06,120 --> 00:39:10,400
와 아르와는 캠브리지에 살고
MA, 우리 모두 02,138인치

811
00:39:10,400 --> 00:39:15,890
왜 우리는 캠브리지 기억된다
MA, 우리 모두 사 용 02,138?

812
00:39:15,890 --> 00:39:18,903
기억하기 충분해야 하는가?

813
00:39:18,903 --> 00:39:20,249
>> 청중 : [들리지]

814
00:39:20,249 --> 00:39:21,540
DAVID 마란 : 그냥 우편 번호.

815
00:39:21,540 --> 00:39:25,080
02138이 존재 그냥 때문에
당신은 우리가 무엇을 할 수 있는지 알아?

816
00:39:25,080 --> 00:39:32,650
우리는 여기에 약간의 공상을 얻을 수
그리고 여기, 또 다른 테이블을 정의

817
00:39:32,650 --> 00:39:35,850
이것은이 될 것입니다 경우
이름이이 유형이 될 것입니다

818
00:39:35,850 --> 00:39:38,840
이것은이 될 것입니다
길이, 이제부터는, 난

819
00:39:38,840 --> 00:39:42,900
나의 도시 표를 호출하는 것.

820
00:39:42,900 --> 00:39:47,011
이것은의 불렸다
물론, 내 사용자 테이블.

821
00:39:47,011 --> 00:39:49,885
그래서 내가 여기에 무슨 이상 넣어야
나의 도시 테이블, 당신은 생각 하는가?

822
00:39:49,885 --> 00:39:53,605

823
00:39:53,605 --> 00:39:54,535
>> 청중 : [들리지]

824
00:39:54,535 --> 00:39:55,930
>> DAVID 마란 : 그래.

825
00:39:55,930 --> 00:40:01,440
그래서 국가와 도시와 지퍼.

826
00:40:01,440 --> 00:40:05,350
그래서 여기 유형, 우리는 말할 것
이것은 다시 문자 5가 될 것입니다

827
00:40:05,350 --> 00:40:06,750
이전의 논쟁의 대상.

828
00:40:06,750 --> 00:40:14,810
이것은 아마도 같이 열거 될 것입니다
전에 도시는 VARCHAR (50) 일 것이다.

829
00:40:14,810 --> 00:40:17,960
그래서 지금은 무엇을 어떻게해야합니까
이 표에서 삭제하기

830
00:40:17,960 --> 00:40:21,995
그 비 효율성을 제거하는 방법?

831
00:40:21,995 --> 00:40:23,100
>> 청중 : [들리지]

832
00:40:23,100 --> 00:40:23,850
DAVID 마란 : 니스.

833
00:40:23,850 --> 00:40:30,239
국가와 도시는 사라, 그래서 나는 지금했습니다
잠재적 인 비 효율성을 제거

834
00:40:30,239 --> 00:40:33,280
에 대한 중복, 캠브리지를 기억
MA, 캠브리지, MA, 캠브리지, MA,

835
00:40:33,280 --> 00:40:35,712
캠브리지, MA, 희망하는
결코 변경하려고하지 않습니다.

836
00:40:35,712 --> 00:40:37,670
이 경우에도, 그것은이다
minorly 짜증나는 지금

837
00:40:37,670 --> 00:40:39,750
나는 변경해야한다는
그것은 여러 행에,

838
00:40:39,750 --> 00:40:43,770
여기 반면에, 난 그냥 수
한 곳에서 변경합니다.

839
00:40:43,770 --> 00:40:46,890
>> 이제 트레이드 오프는 아마도 무엇인가?

840
00:40:46,890 --> 00:40:48,020
이것은 매우 편리했습니다.

841
00:40:48,020 --> 00:40:50,730
멋지게 함께 내 모든 데이터를했다.

842
00:40:50,730 --> 00:40:53,644
하지만 지금은 경우 명확하게 무엇입니까?

843
00:40:53,644 --> 00:40:55,684
>> 청중 : [들리지]

844
00:40:55,684 --> 00:40:58,100
DAVID 마란 : 정확히, 그리고 난
다행 당신은 단어가 결합 사용

845
00:40:58,100 --> 00:41:01,320
즉 실제로 키워드 왜냐하면
관계형 데이터베이스의 세계

846
00:41:01,320 --> 00:41:05,270
SQL, 그것은 실제 단어의 당신
입력하거나 적어도 전달할 수 있습니다.

847
00:41:05,270 --> 00:41:09,280
그리고 사실, 우리가 지금해야 할
다윗의 전체 정보가 선택

848
00:41:09,280 --> 00:41:19,700
에서 선택 스타 같은
사용자는 on-- 지금, 도시 가입

849
00:41:19,700 --> 00:41:24,010
난 그냥 두 번째 라인으로 이동하려고 해요
이 fits-- users.zip가 같도록

850
00:41:24,010 --> 00:41:34,570
users.ID 1에 해당 cities.zip.

851
00:41:34,570 --> 00:41:35,550
>> 그래서 무슨 일이야?

852
00:41:35,550 --> 00:41:38,970
그것은 찾고 추한,하지만 당신은 종류의 수
그것은 아래로 오른쪽, 위쪽 왼쪽 읽어 보시기 바랍니다.

853
00:41:38,970 --> 00:41:41,030
사용자의 선택 스타
이전과 동일

854
00:41:41,030 --> 00:41:42,930
그러나 자체 사용자에서이 아니다.

855
00:41:42,930 --> 00:41:45,910
사용자가 도시에 가입에서입니다.

856
00:41:45,910 --> 00:41:48,520
나는 무엇에 두 테이블을 조인입니까?

857
00:41:48,520 --> 00:41:51,820
음, 분명히,
사용자 테이블 필드 지퍼,

858
00:41:51,820 --> 00:41:54,810
이 기간은 특별하다
구문은 그 생각을 표현,

859
00:41:54,810 --> 00:41:58,130
이것은 도시 테이블 필드를 압축한다.

860
00:41:58,130 --> 00:42:01,580
나는 그 두 동일 할
하지만 궁극적으로 선택합니다

861
00:42:01,580 --> 00:42:06,280
행만 경우
사용자 테이블의 ID

862
00:42:06,280 --> 00:42:08,730
내 할 일이있는 1과 같다.

863
00:42:08,730 --> 00:42:11,781
>> 그리고 그냥 명확하게하기 위해,
프로그래머, 일반적으로 때

864
00:42:11,781 --> 00:42:14,780
숫자 같은 것을 하드 코딩
1, 때문에 다른 웹 사이트 만

865
00:42:14,780 --> 00:42:17,630
데이비드 또는 지원
첫 번째 사용자, 당신

866
00:42:17,630 --> 00:42:20,720
대신 할 것
ID, 같은

867
00:42:20,720 --> 00:42:22,510
이 나타내는
변수, 뭔가 그

868
00:42:22,510 --> 00:42:26,210
시간이 지남에 변경할 수 있습니다, 유사
앞서 말에 정신

869
00:42:26,210 --> 00:42:28,080
자리의 이러한 종류.

870
00:42:28,080 --> 00:42:30,396
하지만 지금 우리는 단지 1로 하드 코드됩니다.

871
00:42:30,396 --> 00:42:31,520
그리고 이것은 무엇을 의미합니까?

872
00:42:31,520 --> 00:42:35,100
음,이를 시각화 할 수있는 좋은 방법입니다
이 손이 사용자 테이블 인 경우 그,

873
00:42:35,100 --> 00:42:38,090
이 손은 참아입니다
테이블, 우리의 finding-- 종류의 것

874
00:42:38,090 --> 00:42:41,330
내 손가락의 끝은 지퍼입니다
여기, 내 손가락의 끝

875
00:42:41,330 --> 00:42:43,740
여기에 당신이있어, 우편이다
를 연동 가지

876
00:42:43,740 --> 00:42:47,950
당신은 결과를 다시 얻을 수 있도록
진정으로 결합하여 원래 테이블,

877
00:42:47,950 --> 00:42:49,590
일반 필드에서 두 테이블.

878
00:42:49,590 --> 00:42:50,840
그리고 그것은 압축 할 필요가 없습니다.

879
00:42:50,840 --> 00:42:54,460
그것은 다른 대부분의 무엇이든 될 수 있지만 수
우편, 그것은 짧은이다, 때문에 하나의 좋은

880
00:42:54,460 --> 00:42:56,470
둘, 그것은 항상있어
같은 길이, 그래서 거기에

881
00:42:56,470 --> 00:43:02,270
에 실제 효율 무엇
올리비에는 여기에 제안

882
00:43:02,270 --> 00:43:05,200
우편을 감안와, 그리고
[들리지] 우리가 제거 할 것을 제안

883
00:43:05,200 --> 00:43:07,110
도시와 국가의.

884
00:43:07,110 --> 00:43:11,370
>> 따라서이 과정은
정상화라고도합니다.

885
00:43:11,370 --> 00:43:14,171
그에 대한 질문?

886
00:43:14,171 --> 00:43:16,170
그럼 내가 지적하자
이 물건의 종류

887
00:43:16,170 --> 00:43:19,202
그것은 상당히 낮은 수준에도 불구하고,
당신이 생각하는 것이 토론,

888
00:43:19,202 --> 00:43:20,910
당신은 일종의 있어요
잡초 손실,

889
00:43:20,910 --> 00:43:26,690
이 충분한의 표현입니다
개발자를위한 기회는 나쁜합니다.

890
00:43:26,690 --> 00:43:29,600
그리고 사실, 경우에도 우리에
우리가 했어 때 코스는 내가 가르쳐했습니다,

891
00:43:29,600 --> 00:43:32,290
예를 들어, 경험
학부 프로그래머

892
00:43:32,290 --> 00:43:35,920
첫눈에, 웹 사이트 구축,
웹 사이트는 훌륭한 보일 수 있습니다.

893
00:43:35,920 --> 00:43:38,280
그리고 그들은 모두가
기능을 우리가 요청

894
00:43:38,280 --> 00:43:40,650
개발자는 좋은 일을했다.

895
00:43:40,650 --> 00:43:43,370
>> 그러나 그들은 반드시 몰랐다
데이터베이스 설계에 대한 충분한

896
00:43:43,370 --> 00:43:46,680
또는 하드 생각하지 않았다
데이터의 유형에 대한 충분한

897
00:43:46,680 --> 00:43:49,220
사용자의 유형
웹 사이트는해야 할 것되었다

898
00:43:49,220 --> 00:43:53,240
우리는 다음 찾기, 6 개월 후,
그들이 졸업 또는에 이동 한 후,

899
00:43:53,240 --> 00:43:56,016
그 젠장, 우리의 웹 사이트
정말, 진정으로 느립니다.

900
00:43:56,016 --> 00:43:58,890
그리고 난 것에 대해 이야기하고 있지 않다
수백만 또는 수천 명의 사용자.

901
00:43:58,890 --> 00:44:02,580
나는 캠퍼스에서 몇 백 사용자를 의미
그들 모두가 좋아하는, 예를 들어,

902
00:44:02,580 --> 00:44:04,870
의 과정을 물색
동시에, 그들은이야

903
00:44:04,870 --> 00:44:07,010
그 과정 카탈로그를 사용하여
응용 프로그램을 내가 언급

904
00:44:07,010 --> 00:44:10,410
그리고 일이 정말 점점
어떤 인덱스가 없어서 천천히.

905
00:44:10,410 --> 00:44:13,740
아무 빨간 별은 없었다 너무
말, 또는 우리는했으나, 반드시

906
00:44:13,740 --> 00:44:17,690
공통 데이터를 반영
공간의 일부 절감 효과를 얻을.

907
00:44:17,690 --> 00:44:21,880
>> 그래서 개발자를 진료 할 때
또는 데이터베이스 사람 등에

908
00:44:21,880 --> 00:44:25,864
을 통해 생각하는 질문의 종류
짝수, 다른 사람의 코드를 검토 할 때,

909
00:44:25,864 --> 00:44:28,530
반드시 보지, 말을
자신의 모든 코드,하지만 말을 통해,

910
00:44:28,530 --> 00:44:30,154
의 데이터베이스 테이블을 통해 살펴 보자.

911
00:44:30,154 --> 00:44:31,150
당신은 무엇을 저장하는?

912
00:44:31,150 --> 00:44:33,941
그리고 말을 잘하는 대기
분, 당신은 왜 정수를 사용하고 있습니까?

913
00:44:33,941 --> 00:44:36,224
우리는 40 억이있는 경우
이러한 행 1?

914
00:44:36,224 --> 00:44:38,140
의 이러한 종류의
질문 기회입니다

915
00:44:38,140 --> 00:44:40,170
종류의 뒤로 밀어 및
여기서의 감각을 얻을

916
00:44:40,170 --> 00:44:42,300
당신이하고 편안하지 않은 경우
그것은 갖는 사람이 더 많은 기술

917
00:44:42,300 --> 00:44:45,425
이러한 질문을 물어 여부
그 사람은 정말 자신의 물건을 알고있다.

918
00:44:45,425 --> 00:44:47,890
그리고 이것은의 종류
물건도, 그 사람들

919
00:44:47,890 --> 00:44:50,540
인터넷에있는 사람
어쩌면, 독학 있습니다

920
00:44:50,540 --> 00:44:53,920
자주 덜 배우고 당신 때문에
반드시 건너하지 않습니다

921
00:44:53,920 --> 00:44:56,630
당신이 얻을 수 있기 때문에, 많은
데이터베이스 및 실행,

922
00:44:56,630 --> 00:44:58,880
하지만 당신은 읽을하지 않는 한
튜토리얼이나되어 최대

923
00:44:58,880 --> 00:45:01,880
데이터베이스 정규화에 대한 이야기
및 인덱싱 성능,

924
00:45:01,880 --> 00:45:04,255
이 물건의 종류입니다
그것은 당신을 다치게 할 것입니다.

925
00:45:04,255 --> 00:45:07,480
그리고 당신은 생각이나 나쁜 엔지니어 수
오, 그래, 우리는 더 나은 임금, 말할 수

926
00:45:07,480 --> 00:45:09,600
더 큰 데이터베이스에 대한
또는 빠른 데이터베이스

927
00:45:09,600 --> 00:45:13,360
아니면,이 돈을 던져
수직 규모, 반드시 그렇게.

928
00:45:13,360 --> 00:45:16,920
당신은 in-- 가서 당신이 들어갈 수있는 경우
fact-- 및 추가 인덱스 후,

929
00:45:16,920 --> 00:45:20,320
그리고 그것은을 위해 몇 시간이 걸릴 수 있습니다
그 새로운 데이터를 구축하는 데이터베이스

930
00:45:20,320 --> 00:45:24,100
앞서 언급 구조,
당신은 여전히​​, 사실 후에이 문제를 해결할 수 있습니다

931
00:45:24,100 --> 00:45:26,180
이 곳을 것을
구별 시작

932
00:45:26,180 --> 00:45:28,830
나쁜에서 좋은 디자이너
디자이너뿐 아니라 심미적으로,

933
00:45:28,830 --> 00:45:32,972
하지만 성능 현명한뿐만 아니라.

934
00:45:32,972 --> 00:45:33,555
질문?

935
00:45:33,555 --> 00:45:36,420

936
00:45:36,420 --> 00:45:37,480
아니?

937
00:45:37,480 --> 00:45:41,980
다른 유형이었다 NoSQL에 대한 그래서
데이터베이스의 어느 나는 이전에 언급하기

938
00:45:41,980 --> 00:45:43,490
당신은 행과 열이 없습니다.

939
00:45:43,490 --> 00:45:47,000
대신, 당신이 뭔가를 할 것이다
그 같은 좀 더 보인다.

940
00:45:47,000 --> 00:45:48,630
나는 일반적인 구문을 사용하겠습니다.

941
00:45:48,630 --> 00:45:51,270
중괄호가 일어날
여기에 꽤 많이 사용.

942
00:45:51,270 --> 00:45:55,400
당신은 뭔가가있을 수 있습니다
이름 다윗처럼,

943
00:45:55,400 --> 00:46:00,180
당신은 마지막있을 수 있습니다
이름은 따옴표 마란입니다,

944
00:46:00,180 --> 00:46:07,530
당신은 ID가있을 수 있습니다 is--
실례합니다, whoops-- ID는, 1

945
00:46:07,530 --> 00:46:13,410
이메일은 malan@harvard.edu이고, 나는하지 않습니다
다음 나머지를 입력 귀찮게하고,

946
00:46:13,410 --> 00:46:14,380
다른 것들.

947
00:46:14,380 --> 00:46:17,380
>> 즉,이다
텍스트 표현

948
00:46:17,380 --> 00:46:20,720
우리가 일반적이라고 부르는의
컴퓨터 프로그램의 개체.

949
00:46:20,720 --> 00:46:26,079
그 목적은 일반적으로
키 값 쌍의 집합.

950
00:46:26,079 --> 00:46:27,370
그래서 다시이 반복되는 테마입니다.

951
00:46:27,370 --> 00:46:30,440
우리는 HTML에서 키 값 쌍을 보았다
우리는 지금 키 값 쌍을 보았다

952
00:46:30,440 --> 00:46:34,020
데이터베이스의 문맥, 그리고 우리의
컨텍스트에서 키 값 쌍을 보았다

953
00:46:34,020 --> 00:46:35,970
의, 나는 언어 오늘 아침, 생각합니다.

954
00:46:35,970 --> 00:46:36,890
오고 유지합니다.

955
00:46:36,890 --> 00:46:39,620
그리고 실제로, 그것은 정말
어떤 데이터로 귀결,

956
00:46:39,620 --> 00:46:44,240
데이터 및 메타 데이터, 또는 값
각각 및 키.

957
00:46:44,240 --> 00:46:47,430
>> 그래서 비 관계형
데이터베이스, 뭔가를 기반으로

958
00:46:47,430 --> 00:46:50,680
당신은 그냥 덩어리 개체에
모든 것을 함께하고 넣어

959
00:46:50,680 --> 00:46:55,640
메모리로, 일반적으로 것
같은 그림, 또는이 같은 생각.

960
00:46:55,640 --> 00:47:00,500
그리고 난으로 지금 떠날거야
다른 방법의 일종.

961
00:47:00,500 --> 00:47:03,750
그리고 하나 필요는 없다
다른 것보다 더 나은.

962
00:47:03,750 --> 00:47:07,310
사실, 아주 많이 유행
요즘은 데이터베이스 시스템입니다

963
00:47:07,310 --> 00:47:11,942
MongoDB를하고 레디 스 몇 등
무료로 사용할 수 등의 도구,

964
00:47:11,942 --> 00:47:13,400
하지만 그들은 유행 욕실 점점입니다.

965
00:47:13,400 --> 00:47:18,850
구름들이 추가로 제공하기 때문에
이 표 접근 방식을 통해 기능,

966
00:47:18,850 --> 00:47:20,850
뿐만 아니라 그들은이기 때문에
사용하기 좀 더 쉽게,

967
00:47:20,850 --> 00:47:24,099
당신은 열심히 생각하지 않기 때문에
이러한 디자인 결정의 많은 대해.

968
00:47:24,099 --> 00:47:25,970
장단점 그래서.

969
00:47:25,970 --> 00:47:29,740
그래서 옵션이 있습니다 실현
이상으로 우리는 단지 시간을 보냈다 것.

970
00:47:29,740 --> 00:47:32,310
>> 그래서이 작업을 수행 할 수 있습니다.

971
00:47:32,310 --> 00:47:37,870
의 조금 전환하자
다시 이제 웹 프로그래밍,

972
00:47:37,870 --> 00:47:40,470
그래서 우리는 가지 결론을 내릴 것을
뭔가 오늘

973
00:47:40,470 --> 00:47:43,930
즉, 충전, 약간의 손에의
어제 약간의 차이입니다.

974
00:47:43,930 --> 00:47:45,340
날이 처음에 가자.

975
00:47:45,340 --> 00:47:49,310
그래서 어제 기억
우리는 몇 가지 표준 HTML했다

976
00:47:49,310 --> 00:47:55,110
처음에 한 페이지 만
HTML, 다음 이차적으로, CSS했다

977
00:47:55,110 --> 00:47:56,620
CSS 스타일 시트.

978
00:47:56,620 --> 00:47:59,830
이것은 우리가하지 않았다 새로운 태그입니다
어제 참조하거나에 거주,

979
00:47:59,830 --> 00:48:01,490
스크립트 태그 소위.

980
00:48:01,490 --> 00:48:05,830
>> 당신이 실제로 포함 할 수 있습니다 밝혀
언어 웹에서 자바 스크립트 호출

981
00:48:05,830 --> 00:48:08,310
페이지와 웹을
페이지는 뭔가.

982
00:48:08,310 --> 00:48:09,710
그래서 나는 그 무엇을 의미합니까?

983
00:48:09,710 --> 00:48:12,630
글쎄, 내가 앞으로 그냥 가자
잠시이 코드를 빌려.

984
00:48:12,630 --> 00:48:15,860
내가 Cloud9에 갈거야, 필요 없습니다
아직 거기에 자신을 이동합니다,

985
00:48:15,860 --> 00:48:21,350
나는이 alert.HTML를 호출하는거야.

986
00:48:21,350 --> 00:48:23,650
나는 여기에 내 파일에 붙여 넣을거야.

987
00:48:23,650 --> 00:48:32,070
그리고 그냥 내가 무슨 짓을했는지 명확히하기 위해,하자
나,이 주소로 가서 경고로 이동

988
00:48:32,070 --> 00:48:33,870
당신은 안녕하세요을 참조하십시오.

989
00:48:33,870 --> 00:48:35,440
>> 하지만이 실망의 종류입니다.

990
00:48:35,440 --> 00:48:37,410
내가 뭔가를하고 싶은
조금 다른.

991
00:48:37,410 --> 00:48:40,610
그래서 나는 실제로 이렇게하는거야.

992
00:48:40,610 --> 00:48:43,820
나는 여기 전자에 갈거야
내 스크립트 태그 사이에,

993
00:48:43,820 --> 00:48:53,460
( '안녕하세요, 세계) 경고를 말한다; 그래서 통지
조금 실수,하지만 나는 HTML있어,

994
00:48:53,460 --> 00:48:56,180
내부에있는 A는
자바 스크립트라는 언어,

995
00:48:56,180 --> 00:48:59,420
이은을 불리는 것입니다
함수 호출 또는 프로 시저 호출.

996
00:48:59,420 --> 00:49:04,500
따라서,이 경우, 문자 그대로 동​​사
나는 코드 기능을 호출하고

997
00:49:04,500 --> 00:49:06,310
다른 사람이 쓴.

998
00:49:06,310 --> 00:49:09,630
>> 그래서 기능은이다
경고는, 그래서 해당 페이지로 가자

999
00:49:09,630 --> 00:49:14,046
지금 당신은 지금 새로 고침을 클릭
상호 작용의 약간을 참조하십시오.

1000
00:49:14,046 --> 00:49:15,420
그것은 오래된 학교 추한의 종류입니다.

1001
00:49:15,420 --> 00:49:18,580
이 종류의 당신을 생각 나게한다
팝업, 아마, 작년의

1002
00:49:18,580 --> 00:49:22,030
하지만 뭔가 a를 수행했다
더 많은 프로그램 작은.

1003
00:49:22,030 --> 00:49:26,940
>> 보다 그래서 더, 이제하자
더 흥미로운 뭔가.

1004
00:49:26,940 --> 00:49:30,980
내가 여기 가서이 제거하자.

1005
00:49:30,980 --> 00:49:33,840
그리고 앞서 갈 예정하고있어
우리가 어제했던 것처럼 폼을 만듭니다.

1006
00:49:33,840 --> 00:49:34,840
사실, 그거 알아?

1007
00:49:34,840 --> 00:49:37,350
나는에 갈거야
의 google.html, 이는 우리

1008
00:49:37,350 --> 00:49:43,027
속되는, 어제 시작
이, 어떤을 통해 우리는 고양이 검색

1009
00:49:43,027 --> 00:49:45,360
그러나 종류가의 거기에 주목
현재 버전에서 버그.

1010
00:49:45,360 --> 00:49:49,770
그것은 고양이 작동하지만 있다고 가정
내가 협조하지 않고 나는 아무것도 입력하지,

1011
00:49:49,770 --> 00:49:53,290
나는 단순히 제출을 클릭합니다.

1012
00:49:53,290 --> 00:49:54,540
즉, 이상한 행동의 종류입니다.

1013
00:49:54,540 --> 00:49:57,300
실제 구글에 데려 갔다
나에게 오류 메시지를 제공하지 않았다.

1014
00:49:57,300 --> 00:50:00,590
나는 사용자에게하고 싶습니다
당신은 우리에게 값을 제공해야합니다.

1015
00:50:00,590 --> 00:50:01,780
>> 그래서 우리는 이것을 어떻게 할 수 있는가?

1016
00:50:01,780 --> 00:50:06,790
그럼 내가 Cloud9과로 다시 가자
내 페이지의 상단에 가자

1017
00:50:06,790 --> 00:50:11,980
이 같은 스크립트 태그를 추가, 어디
나는 약간의 자바 스크립트 코드를 입력하겠습니다.

1018
00:50:11,980 --> 00:50:15,420
그리고 난 다음을 수행하겠습니다.

1019
00:50:15,420 --> 00:50:22,910
(document.getelementByID-- 및 리콜 경우
우리가 이전에 대해 이야기하는 것이,

1020
00:50:22,910 --> 00:50:23,960
그 함수.

1021
00:50:23,960 --> 00:50:25,310
무엇 ID 나는 싶어합니까?

1022
00:50:25,310 --> 00:50:33,050
내가 질문을하고 싶지, 내가 갈거야
말은이 항아리처럼 아무것도 동일하지

1023
00:50:33,050 --> 00:50:38,220
실제로 나에게 큰 따옴표를 사용하자
단지 consistency--에 대해 아무것도 동일하지 않습니다,

1024
00:50:38,220 --> 00:50:46,650
다음 경고 여기 ( "검색어를 입력하십시오").

1025
00:50:46,650 --> 00:50:49,200
>> 그래서 나는 것 같습니다 무엇을해야
조건 같은 것을.

1026
00:50:49,200 --> 00:50:51,410
우리는 스크래치에서이 일반적인 생각을 봤어요.

1027
00:50:51,410 --> 00:50:54,240
그것은 그 퍼즐의 하나처럼
이처럼 보였다 조각.

1028
00:50:54,240 --> 00:50:55,780
그리고 내가 무엇을 말하고 있는가?

1029
00:50:55,780 --> 00:50:59,520
자, 여기까지, 난 알
다음을 수행 할 것.

1030
00:50:59,520 --> 00:51:02,790
나는이 양식을 줄거야
Q의 필드의 이름뿐만 아니라 어떤

1031
00:51:02,790 --> 00:51:06,630
Google에 전달되는,하지만 난 것입니다
그것을 로컬 식별자를 제공하는 것,

1032
00:51:06,630 --> 00:51:07,630
또한 Q했다.

1033
00:51:07,630 --> 00:51:11,780
하지만이 아무것도 부를 수 I
원하는, 난 그냥 간단하게거야

1034
00:51:11,780 --> 00:51:14,570
또한 단지 단순화를 위해, Q를 호출합니다.

1035
00:51:14,570 --> 00:51:17,650
>> 그리고 지금 내가 할거야
좀 더 뭔가.

1036
00:51:17,650 --> 00:51:22,600
여기에 양식 필드에, 나는에 갈거야
이벤트 처리기라고 무엇을 추가 할 수 있습니다.

1037
00:51:22,600 --> 00:51:32,260
제출, 나는 전화를 걸
유효성 검사라는 함수.

1038
00:51:32,260 --> 00:51:35,520
이것은, 아직 존재하지 않는
단어, 또는이 동사 검증

1039
00:51:35,520 --> 00:51:38,560
내가 할거야 무엇 때문에
여기까지 지금 몇 가지 코드를 추가합니다.

1040
00:51:38,560 --> 00:51:42,200
>> 나는 기능의 유효성을 말할거야.

1041
00:51:42,200 --> 00:51:48,280
나는 이것을 들여 또 다른 추가거야
곱슬 여기 중괄호 여기에 또 하나.

1042
00:51:48,280 --> 00:51:50,110
이 지금 무엇을하고 있는지 생각 해보자.

1043
00:51:50,110 --> 00:51:54,210
나는 창조로이 생각 now--이 내
이전에하지 않았다 자신의 퍼즐 조각

1044
00:51:54,210 --> 00:51:57,440
존재하고, 나는이 퍼즐라고​​했습니다
유효성 검사 퍼즐 조각을 조각입니다.

1045
00:51:57,440 --> 00:52:01,620
인생의 목적은 실행하는 것이다
그것의 내부 코드의 네 줄.

1046
00:52:01,620 --> 00:52:04,940
>> document.getElementById를하는 경우
그래서 개념적으로,

1047
00:52:04,940 --> 00:52:09,380
즉, 요소​​에 들어갈 예정이다
누구의 고유 HTML 요소

1048
00:52:09,380 --> 00:52:12,930
아이디어는 비록 후 바로 Q이고,
구문은, 조금 이상한 보인다

1049
00:52:12,930 --> 00:52:16,430
그 동일한는 같음을 의미 같습니다.

1050
00:52:16,430 --> 00:52:20,950
그래서 그 의미 경우와 요소
Q의 고유 식별자,받은 때,

1051
00:52:20,950 --> 00:52:25,700
값이없는, 그냥 동일
인용을 끝내 인용, 아무것도 거기에,

1052
00:52:25,700 --> 00:52:27,170
그 다음 내가 어떻게해야할까요?

1053
00:52:27,170 --> 00:52:29,360
나는 사용자에 소리 싶어요.

1054
00:52:29,360 --> 00:52:31,710
>> 그리고 우리는 여기에 훌륭한 세부 사항을 가지 않을 것이다.

1055
00:52:31,710 --> 00:52:32,960
나는 false를 반환하겠습니다.

1056
00:52:32,960 --> 00:52:34,380
즉, 오류가 발생합니다.

1057
00:52:34,380 --> 00:52:38,746
그렇지, 나는 true를 돌려거야.

1058
00:52:38,746 --> 00:52:40,120
그래서 하나는 일을하거나하지 않았다.

1059
00:52:40,120 --> 00:52:41,800
허위 또는 사실.

1060
00:52:41,800 --> 00:52:47,820
그리고 내가 어떤 실수를하지 않았다 해주기 경우,
내가이 내용을 저장하고이를 다시로드 할 수 있습니다.

1061
00:52:47,820 --> 00:52:50,940
그리고 나에게 단 한 번 확인하자 그
나는 사실, 오타를하지 않았다,

1062
00:52:50,940 --> 00:52:52,690
그래서 나는 나 자신을 난처하게하지 않습니다.

1063
00:52:52,690 --> 00:52:54,240
이 작동하는지 보자.

1064
00:52:54,240 --> 00:52:56,930
>> 그래서 지금은 고양이를 입력 할거야.

1065
00:52:56,930 --> 00:52:59,421
아직 작동 또는 적어도 반 작품.

1066
00:52:59,421 --> 00:53:02,170
지금 내가 그것을 다시, 지금합시다
나 입력하지 않고 전송 해 봅니다

1067
00:53:02,170 --> 00:53:05,860
anything-- 젠장, 그것은 끊었다.

1068
00:53:05,860 --> 00:53:06,430
잠시만.

1069
00:53:06,430 --> 00:53:09,380

1070
00:53:09,380 --> 00:53:12,660
나 콘솔을 열어 보자,
[들리지], 로그인 페이지를 다시로드합니다.

1071
00:53:12,660 --> 00:53:13,576
나를 다시 해보자.

1072
00:53:13,576 --> 00:53:17,000

1073
00:53:17,000 --> 00:53:17,501
아, 젠장.

1074
00:53:17,501 --> 00:53:18,000
나는 잊었다.

1075
00:53:18,000 --> 00:53:18,630
내가 오타를했다.

1076
00:53:18,630 --> 00:53:20,760
나는 그것이 무엇인지 기억한다.

1077
00:53:20,760 --> 00:53:21,350
.값.

1078
00:53:21,350 --> 00:53:27,060
나는 값이 있으면 말을 의미
요소의 ID가이 질문입니다

1079
00:53:27,060 --> 00:53:29,800
다음 사용자에 소리 것을 같습니다.

1080
00:53:29,800 --> 00:53:31,870
>> 그래서 지금 내가 다시는 내 숨을 수 있습니다.

1081
00:53:31,870 --> 00:53:33,480
여기에서 우리는 간다.

1082
00:53:33,480 --> 00:53:34,130
우리는 거기에 갈.

1083
00:53:34,130 --> 00:53:35,010
검색어를 입력하십시오.

1084
00:53:35,010 --> 00:53:36,840
그래서 저를 통해 두지 않을거야.

1085
00:53:36,840 --> 00:53:40,210
나는이와 종류의 장난 일 수있다
대신에 어떤 값을 검사,

1086
00:53:40,210 --> 00:53:46,720
내가 뭔가를 말할 수
더 이상 고양이를 검색,

1087
00:53:46,720 --> 00:53:51,150
이제 우리는 더 장난스럽게하도록 할 수 있습니다
개를위한 사용자 검색하는 경우 그 또는 그녀

1088
00:53:51,150 --> 00:53:57,490
원 또는 여기에서 갈 경우
지금은 할 수 없습니다, 고양이를 검색합니다.

1089
00:53:57,490 --> 00:53:58,690
>> 그래서 테이크 아웃은 여기에 무엇입니까?

1090
00:53:58,690 --> 00:54:03,010
그래서 하나, 우리는에 도입 한
HTML과 CSS의 우리의 세계,

1091
00:54:03,010 --> 00:54:04,320
프로그래밍 기능을 제공합니다.

1092
00:54:04,320 --> 00:54:06,300
지금은 실제로 수
코드에서 의사 결정을 내릴 수.

1093
00:54:06,300 --> 00:54:10,570
이전에, 내가 할 수있는 모든 마크 업입니다
텍스트 콘텐츠 또는 그래픽 내용

1094
00:54:10,570 --> 00:54:13,080
무엇을보고 그것을 말해
같은과 위치를 표시합니다.

1095
00:54:13,080 --> 00:54:16,650
지금은 실제로 요청할 수 있습니다
웹 페이지의 질문

1096
00:54:16,650 --> 00:54:20,010
및 기반 의사 결정을 내릴 수
거기에, 상기 사용자에게 프롬프트

1097
00:54:20,010 --> 00:54:22,780
나는 그 또는 그녀를 소리해야하는 경우.

1098
00:54:22,780 --> 00:54:28,740
>> 그래서 뭔가를 해보자
이와 우리 자신에.

1099
00:54:28,740 --> 00:54:33,350
어서 나 다음 슬라이드를 열 수 있습니다
여기에, 단지 한 가지를 지적한다.

1100
00:54:33,350 --> 00:54:37,250
그냥 CSS와 마찬가지로, 우리는 밖으로 인수 분해 할 수 있습니다
별도의 파일에 대한 우리의 자바 스크립트 코드,

1101
00:54:37,250 --> 00:54:40,660
당신은 같은 일을 할 수 있습니다
CSS와 같은 자바 스크립트.

1102
00:54:40,660 --> 00:54:44,520
그리고 당신은 소스를 사용하는 것이 사용
스크립트 태그의 속성.

1103
00:54:44,520 --> 00:54:46,540
그러나 우리는 지금 일을 복잡하지 않습니다.

1104
00:54:46,540 --> 00:54:50,440
대신에, 만약에 당신이 할 수
하지이 페이지로 이동

1105
00:54:50,440 --> 00:55:02,690
하지만 ... 내가 order--이 주위를 이동하자
당신이 할 수있는 경우 여기에이 페이지를 이동합니다.

1106
00:55:02,690 --> 00:55:03,592
여기에이 URL.

1107
00:55:03,592 --> 00:55:04,550
그것은 오늘날의 슬라이드에 있습니다.

1108
00:55:04,550 --> 00:55:07,133
당신 때문에 다시해야 할 수도 있습니다
나는 것은 몇 가지를 추가했습니다.

1109
00:55:07,133 --> 00:55:09,970

1110
00:55:09,970 --> 00:55:13,890
>> 어떤 퍼즐이 기다리고 어디하지만 거기.

1111
00:55:13,890 --> 00:55:16,670
그리고 이것은 우리에게 기회를 줄 것이다,
조금 더 재미 맥락에서,

1112
00:55:16,670 --> 00:55:20,610
일부 자바 스크립트 손 대고 있습니다.

1113
00:55:20,610 --> 00:55:25,505
그리고 당신이 거기 도착하면,
나는 기다리고 무엇을 설명 할 것이다.

1114
00:55:25,505 --> 00:55:47,350

1115
00:55:47,350 --> 00:55:47,850
녹색 가져옵니다.

1116
00:55:47,850 --> 00:56:03,063

1117
00:56:03,063 --> 00:56:03,562
파란색 설정합니다.

1118
00:56:03,562 --> 00:56:11,030

1119
00:56:11,030 --> 00:56:13,930
녹색, 빨간색 설정 설정합니다.

1120
00:56:13,930 --> 00:56:19,220

1121
00:56:19,220 --> 00:56:20,220
죄송합니다.

1122
00:56:20,220 --> 00:56:22,330
죄송합니다.

1123
00:56:22,330 --> 00:56:27,630
>> 이 정도 인 우리
이 문제에 대한 설명서를 참조하십시오.

1124
00:56:27,630 --> 00:56:29,920
그리고 이것은 다음과 같이 작동하는 것입니다.

1125
00:56:29,920 --> 00:56:33,340
그래서 당신은이에 어떤
페이지 전체 무리입니다

1126
00:56:33,340 --> 00:56:38,024
버디로 이미지 퍼즐
스탠포드 대학.

1127
00:56:38,024 --> 00:56:41,190
그래서 당신이보고있는 무슨을 거의이다
그 마법의 눈 퍼즐의 한 종류,

1128
00:56:41,190 --> 00:56:43,815
하지만 당신은 단지 그것을 응시하는 경우,
아무것도 당신을 밖으로 팝업 않을거야.

1129
00:56:43,815 --> 00:56:46,000
오히려 무언가가있다
이 이미지에 숨겨진.

1130
00:56:46,000 --> 00:56:47,790
그것은 다음과 같은 방법으로 숨겨진.

1131
00:56:47,790 --> 00:56:51,740
이미지는, 아시다시피 될 수 있습니다
단지 세 가지 색상으로 구성.

1132
00:56:51,740 --> 00:56:53,346
일부 빨강, 일부 파란색, 일부 녹색.

1133
00:56:53,346 --> 00:56:55,220
그리고 우리는 모든을 만들 수 있습니다
무지개 색상

1134
00:56:55,220 --> 00:56:57,570
어떻게 든 그 세 가지 색상을 혼합하여.

1135
00:56:57,570 --> 00:57:01,940
>> 그래서이 주로 녹색 보이는
푸른,하지만 닉은 여기에서 말한대로,

1136
00:57:01,940 --> 00:57:04,060
이 철 퍼즐 이미지 퍼즐입니다.

1137
00:57:04,060 --> 00:57:06,780
그것은의 이미지가 포함
유명 것을 그러나

1138
00:57:06,780 --> 00:57:08,310
이미지가 왜곡되었다.

1139
00:57:08,310 --> 00:57:11,500
유명한 객체는 빨간색 값입니다.

1140
00:57:11,500 --> 00:57:13,810
그러나, 적색 값
모두 10로 나눈되어 있습니다.

1141
00:57:13,810 --> 00:57:16,230
그래서 10 배 너무 작다.

1142
00:57:16,230 --> 00:57:18,280
환언 닉
원본 이미지를했다,

1143
00:57:18,280 --> 00:57:21,500
그는 모든 채도
그것에서 적색,

1144
00:57:21,500 --> 00:57:23,850
적색의 양을 낮추는
잉크, 만약에 당신, 그것입니다.

1145
00:57:23,850 --> 00:57:26,060
>> 파란색과 녹색 값
모든 단지 의미가

1146
00:57:26,060 --> 00:57:30,000
랜덤 값은 일명 노이즈 설계
실제 영상을 불명료.

1147
00:57:30,000 --> 00:57:32,250
그래서 닉했던 것은 그가이었다
다음 빨간색과 아래로 톤

1148
00:57:32,250 --> 00:57:34,380
그는 단지 무작위로 던져
파란색과 녹색의 양

1149
00:57:34,380 --> 00:57:37,590
무명의 종류 이미지에서
여전히 실제로 무엇을.

1150
00:57:37,590 --> 00:57:41,089
이러한 왜곡을 취소해야
이미지를 공개합니다.

1151
00:57:41,089 --> 00:57:44,255
첫째, 모든 파란색과 녹색 값을 설정
제로의 길에서 그들을 얻을 수 있습니다,

1152
00:57:44,255 --> 00:57:48,700
그 결과를 보면. 그때
(10)에 의해 각각의 빨강 값을 곱하면,

1153
00:57:48,700 --> 00:57:51,720
까지 다시 축소
약 최종 값.

1154
00:57:51,720 --> 00:57:53,035
유명한 목적은 무엇입니까?

1155
00:57:53,035 --> 00:57:57,920
>> 그래서 여러분이 사각형이
지금 브라우저입니다.

1156
00:57:57,920 --> 00:58:00,830
그리고 몇 가지가 있음을 알 수
시동 코드, 말하자면.

1157
00:58:00,830 --> 00:58:04,370
이 자바 스크립트 코드입니다
닉은 당신을 위해 작성했습니다.

1158
00:58:04,370 --> 00:58:07,250
그리고 거기에 알
중간에 줄이

1159
00:58:07,250 --> 00:58:10,380
그건, 슬래시 슬래시로 시작
무슨 일이 일반적으로 코멘트라고.

1160
00:58:10,380 --> 00:58:14,660
그것은 프로그래머 어구의 의미
그 기능적 의미가 없습니다.

1161
00:58:14,660 --> 00:58:16,520
그것은 인간의 단지 시각적이다.

1162
00:58:16,520 --> 00:58:18,670
>> 그래서 당신은 가서 수
그냥 줄을 삭제,

1163
00:58:18,670 --> 00:58:22,214
그리고 슈퍼 조심하지 수
삭제하거나 다른 작업을 변경합니다.

1164
00:58:22,214 --> 00:58:25,130
그리고 내가 단지를 안내하자
이 코드를 수행하고 난 떠날거야 무슨

1165
00:58:25,130 --> 00:58:28,580
당신에게 비밀 이미지를 알아낼 수 있습니다.

1166
00:58:28,580 --> 00:58:32,226
난 그냥했습니다 여기에 첫 번째 라인
강조는 당신에게 다음을 제공합니다.

1167
00:58:32,226 --> 00:58:34,100
좌측,
당신이라고 무슨이

1168
00:58:34,100 --> 00:58:39,140
닉 임의로 가지고있는 변수
하지만 합리적으로 이미지의 메신저라고합니다.

1169
00:58:39,140 --> 00:58:41,660
오른편
그 등호,

1170
00:58:41,660 --> 00:58:45,240
그는 나에게 새로운을 제공 말하는
인용, 인용을 끝내 "간단한 이미지".

1171
00:58:45,240 --> 00:58:49,680
>> 이러한 맥락에서 간단한 이미지,
물론, 클래스라고 무엇인가

1172
00:58:49,680 --> 00:58:53,910
그것은 그 수업 같은 종류의
기술적으로 prototype--하지만 정말,

1173
00:58:53,910 --> 00:58:58,000
이것은 나에게 새로운 객체를주고있다
파일에있는 내용,

1174
00:58:58,000 --> 00:58:59,610
철 puzzle.png.

1175
00:58:59,610 --> 00:59:03,190
즉, 아이디를 만들었다
간단한 이미지의이 개념

1176
00:59:03,190 --> 00:59:05,920
우리가 교육적 들어 수 있도록
목적은 이미지와 함께 재생

1177
00:59:05,920 --> 00:59:09,790
와, 붉은 변경
녹색, 청색 값.

1178
00:59:09,790 --> 00:59:11,750
>> 어떻게 우리는거야?

1179
00:59:11,750 --> 00:59:15,360
여기이 다소 난해한 구문
종류의 반복 블록처럼

1180
00:59:15,360 --> 00:59:19,140
여러분 중 일부는 이전 스크래치에서 본 것을
당신이 10 번 반복 할 수 있습니다 오늘.

1181
00:59:19,140 --> 00:59:22,220
이 경우, 닉되지 않았습니다
10 같은 숫자를 하드 코딩.

1182
00:59:22,220 --> 00:59:28,020
대신 그는 초기화 말하고있다
0 x를라는 변수,

1183
00:59:28,020 --> 00:59:33,180
이 X보다 작은 경우 체크
화상의 폭.

1184
00:59:33,180 --> 00:59:38,160
>> 그래서 더 적절한 것으로, 이미지가있다
변수는 점은 그것의 내부 이동 수단

1185
00:59:38,160 --> 00:59:40,900
그 폭을 얻고,
다음 열기 괄호 폐쇄

1186
00:59:40,900 --> 00:59:43,687
괄호는 프로그래머의 방법입니다
이 함수이다라고.

1187
00:59:43,687 --> 00:59:44,520
이것은 절차입니다.

1188
00:59:44,520 --> 00:59:46,430
이 기능입니다
다른 사람이 썼다.

1189
00:59:46,430 --> 00:59:48,570
를 사용하여 대답을 나에게 다시 제공합니다.

1190
00:59:48,570 --> 00:59:53,610
그리고 X ++는의 멋진 방법입니다
한 번 이런 짓을 한 후, 말,

1191
00:59:53,610 --> 00:59:55,850
1 X를 증가.

1192
00:59:55,850 --> 00:59:58,760
즉,이
프로그래머의 방법입니다

1193
00:59:58,760 --> 01:00:05,760
의 루프의 유도
반복 것

1194
01:00:05,760 --> 01:00:10,410
이미지의 모든 열.

1195
01:00:10,410 --> 01:00:14,790
>> 이미지는 단지 눈금
점, 행과 점의 열입니다.

1196
01:00:14,790 --> 01:00:18,270
이것은 반복하는 하나의 방법입니다
그 모든 컬럼을 통해.

1197
01:00:18,270 --> 01:00:20,770
그리고 안쪽에,
한편, 우리는 반복하고

1198
01:00:20,770 --> 01:00:24,030
높이, 여기에
그리고 여기와 여기에.

1199
01:00:24,030 --> 01:00:29,442
그래서이 와가 단지 방법입니다,
거의 구식 타자기처럼,

1200
01:00:29,442 --> 01:00:32,230
단지를 통해 이동합니다
반복적으로 전체 이미지입니다.

1201
01:00:32,230 --> 01:00:36,370
그것도 아주 전적으로 아니다
분명, 지금에 대한 믿음을 가지고,

1202
01:00:36,370 --> 01:00:38,880
그 세 줄이
코드의 함께 있습니다

1203
01:00:38,880 --> 01:00:43,090
당신이 반복적으로 볼 수있는 것
모든 픽셀에서 모든 이미지에 도트.

1204
01:00:43,090 --> 01:00:43,790
>> 픽셀은 무엇입니까?

1205
01:00:43,790 --> 01:00:46,250
우리가 보면 음, 명확하게하기
원래의 및 확대,

1206
01:00:46,250 --> 01:00:49,060
당신은 정말 눈을 넣을 경우
컴퓨터 화면에, 그건

1207
01:00:49,060 --> 01:00:53,510
점의 단지 전체 무리, 여러
천 점이 함께이 포장.

1208
01:00:53,510 --> 01:00:56,180
그래서 당신은 할에 대해 무엇입니까?

1209
01:00:56,180 --> 01:00:59,240
그 점 하나 하나,
최종 정의,

1210
01:00:59,240 --> 01:01:06,350
일반적 무슨의 결과
빨강, 녹색, 파랑이라는 RGB, 어떤

1211
01:01:06,350 --> 01:01:09,940
다시 결합 될 수있다
당신에게 색상의 수를 제공합니다.

1212
01:01:09,940 --> 01:01:13,200
>> 사실, 당신은 기억한다면
, 몇 년 전 많은에서

1213
01:01:13,200 --> 01:01:17,320
이러한 것들과 같은 프로젝터 스크린
아니 하나의 렌즈하지만 세 가지를하는 데 사용됩니다.

1214
01:01:17,320 --> 01:01:20,700
그 중 하나는 하나, 붉은 빛을 뱉어
그들은 그들 중 하나, 녹색 빛을 뱉어

1215
01:01:20,700 --> 01:01:21,600
푸른 빛을 뱉어.

1216
01:01:21,600 --> 01:01:24,391
그리고 당신은 중학교에 있다면
그들은 결코 없었다 경우 같은 I이었다

1217
01:01:24,391 --> 01:01:27,000
제대로 정렬, 당신은했다
항상 역사 영화를보고

1218
01:01:27,000 --> 01:01:29,770
즉, 약간 왜곡했다
세 가지 색상은하지 않았기 때문에

1219
01:01:29,770 --> 01:01:30,970
제대로 결합.

1220
01:01:30,970 --> 01:01:36,330
>> 그러나 각 밝혀
적색, 녹색 및 청색이 값

1221
01:01:36,330 --> 01:01:37,980
그와 연관된 숫자를 가질 수있다.

1222
01:01:37,980 --> 01:01:42,500
예를 들어, 빨간색 0은 아무 의미
빨간색, 녹색에 대한 0은 녹색 의미,

1223
01:01:42,500 --> 01:01:45,120
파란색 0은 파란색을 의미합니다.

1224
01:01:45,120 --> 01:01:49,403
그래서 더 빨강, 녹색이없는 경우,
파란색 아니, 당신은 무슨 색깔이 없다합니까?

1225
01:01:49,403 --> 01:01:51,009
>> 청중 : [들리지]

1226
01:01:51,009 --> 01:01:52,800
DAVID 마란 : 당신은 것
그래서, 그것은 흰색 희망.

1227
01:01:52,800 --> 01:01:55,333
불행하게도,이 미안 operates--?

1228
01:01:55,333 --> 01:01:56,380
>> 청중 : [들리지]

1229
01:01:56,380 --> 01:01:58,630
DAVID 마란 : 당신이 그래서 실제로
이 경우, 검은 색이 있습니다.

1230
01:01:58,630 --> 01:02:01,530
그래서 당신은이 전혀없는 경우
색상은 블랙이 켜져.

1231
01:02:01,530 --> 01:02:06,510
그러나이 경우의 많이 가정 해 봅시다
그 중, 빨간색의 많은처럼, 그것의 255,

1232
01:02:06,510 --> 01:02:10,340
녹색을 많이하고, 많은
파란색의, 즉 흰색입니다.

1233
01:02:10,340 --> 01:02:12,230
그래서이 두 극단이다.

1234
01:02:12,230 --> 01:02:17,460
나는 많이이 논리에 의해 그래서, 경우
빨간색과 녹색이없고 블루,

1235
01:02:17,460 --> 01:02:18,485
그게 무슨 색입니까?

1236
01:02:18,485 --> 01:02:19,360
청중 : [들리지]

1237
01:02:19,360 --> 01:02:20,610
DAVID 마란 : 오른쪽, 분명히.

1238
01:02:20,610 --> 01:02:25,940
의 그리고 더 빨강, 많은
녹색, 아니 블루, 다음

1239
01:02:25,940 --> 01:02:29,590
당신이 잘 잔 마셔요, 우리는 완료됩니다
그것은 단지 때문에,하지만, 물론,

1240
01:02:29,590 --> 01:02:31,350
지금은 파란색입니다.

1241
01:02:31,350 --> 01:02:33,030
그리고 지금 당신은이 색상을 결합 할 수 있습니다.

1242
01:02:33,030 --> 01:02:36,430
지금 제쳐두고, 당신의가있는 경우 등
지금까지 몇 가지 실제 웹 사이트 디자인을 수행,

1243
01:02:36,430 --> 01:02:38,360
당신은 실제로 수도
이 같은 기호를 참조하십시오.

1244
01:02:38,360 --> 01:02:42,030
FFF-- 실제로, 그것은이다
아마조차.

1245
01:02:42,030 --> 01:02:44,380
그것은 FFFFFF입니다.

1246
01:02:44,380 --> 01:02:48,970
>> 누구도 F의 및 E 년대를 본
그리고 through-- 그것은 밝혀 있도록

1247
01:02:48,970 --> 01:02:52,970
우리는 소수에 대해 어제 이야기
오늘, 종류의 소수에 대한.

1248
01:02:52,970 --> 01:02:54,570
오늘 우리는 진에 대해 이야기했다.

1249
01:02:54,570 --> 01:02:59,010
알고 보니, 16 진수 매우이다
공통 기본 시스템은 컴퓨팅에 사용합니다.

1250
01:02:59,010 --> 01:03:04,960
이진 두 가지이며, 소수는 10, 진수는 16입니다.

1251
01:03:04,960 --> 01:03:08,640
그리고 그것은 어떻게 수행 밝혀
당신이 16 진수로 계산?

1252
01:03:08,640 --> 01:03:11,620
제로, 하나, 둘, 셋, 넷,
다섯, 여섯, 일곱, 여덟,

1253
01:03:11,620 --> 01:03:14,730
구, 당신은 구 이후에 무엇을 사용합니까?

1254
01:03:14,730 --> 01:03:16,600
다음 수는 얼마입니까?

1255
01:03:16,600 --> 01:03:19,180
우리는 이미 제로 사용.

1256
01:03:19,180 --> 01:03:20,570
나는이 16이 필요합니다.

1257
01:03:20,570 --> 01:03:25,770
제로, 하나, 둘, 셋, 넷,
다섯, 여섯, 일곱, 여덟, 아홉,

1258
01:03:25,770 --> 01:03:27,520
당신은 어떤 임의의 규칙이 필요합니다.

1259
01:03:27,520 --> 01:03:30,810
>> 그리고 무엇 인류는 시간을 결정
전 구가 편지는 것을 제공 한 후

1260
01:03:30,810 --> 01:03:34,450
A와 B 그럼 다음 C.
방법 당신이 16 진수로 계산

1261
01:03:34,450 --> 01:03:37,040
제로, 하나, 둘, 셋, 넷,
다섯, 여섯, 일곱, 여덟, 아홉,

1262
01:03:37,040 --> 01:03:42,880
A, B, C, D, E는, F는, 그 개수 것
당신이 모든 방법, 그것은 15, 밝혀졌습니다.

1263
01:03:42,880 --> 01:03:47,850
그래서 15 제로 제로 통해
F. 이제 그 이유는 중요하다?

1264
01:03:47,850 --> 01:03:51,570
글쎄, 당신은 두 개의 F의 때,
당신이 255을 표현하는 방법이입니다.

1265
01:03:51,570 --> 01:03:54,350
>> 짧은 이야기에 너무 오래
포토샵의 세계,

1266
01:03:54,350 --> 01:03:57,299
그 그래픽 디자인 소프트웨어,
웹 개발의 세계에서,

1267
01:03:57,299 --> 01:03:59,590
당신은 색상을 많이 가질 경우,
물론, 함께 플레이하고,

1268
01:03:59,590 --> 01:04:02,350
종종 프로그래머는 것
16 진수 사람들을 표현

1269
01:04:02,350 --> 01:04:05,260
그냥 경향이 있기 때문에
좀 더 간단합니다.

1270
01:04:05,260 --> 01:04:07,850
심지어 첫눈에 불구하고
훨씬 더 복잡하다.

1271
01:04:07,850 --> 01:04:11,590
>> 어떤 경우에 그래서,이 중요하다
스탠포드 닉 때문에

1272
01:04:11,590 --> 01:04:15,100
우리에게 기능의 여섯 조각을 부여하고있다
당신이, 신진 프로그래머,

1273
01:04:15,100 --> 01:04:17,060
현재 사용할 수있는 능력을 가질 것이다.

1274
01:04:17,060 --> 01:04:19,960
이 웹에 내장
페이지는 여섯 기능입니다,

1275
01:04:19,960 --> 01:04:21,820
닉 쓴 여섯 절차.

1276
01:04:21,820 --> 01:04:26,800
그 중 세 개는 당신에게 번호를 얻을 것이다,
빨간색, 녹색 또는 파랑의 값.

1277
01:04:26,800 --> 01:04:28,787
그 중 세 개는 그 값을 설정합니다.

1278
01:04:28,787 --> 01:04:30,620
그리고이 밑줄
그냥 자리는,

1279
01:04:30,620 --> 01:04:32,600
그래서 당신은 사람들이 무엇인지 알 필요가있다.

1280
01:04:32,600 --> 01:04:36,240
>> 이 세 가지 기능을 가진 그래서,
이러한 것들의 첫 번째

1281
01:04:36,240 --> 01:04:39,190
가 x 좌표가 될 것입니다,
이러한 것들의 두 번째

1282
01:04:39,190 --> 01:04:40,700
A는 y 좌표가 될 것입니다.

1283
01:04:40,700 --> 01:04:44,650
도트 말해서,의 어느
픽셀이의 녹색을하고 싶지 않습니다,

1284
01:04:44,650 --> 01:04:46,480
의 파란색을 얻을의 빨간색을 찾으실 수 있습니다.

1285
01:04:46,480 --> 01:04:51,440
그리고 여기이 될 것입니다
X, 이것은 y 값이 될 것입니다,

1286
01:04:51,440 --> 01:04:55,379
이 숫자가 될 것입니다.

1287
01:04:55,379 --> 01:04:57,170
그럼 첫 번째하자
이 라인 함께

1288
01:04:57,170 --> 01:05:00,220
그리고, 나는 당신에게 그것을 떠날거야
나머지를 추론하려고합니다.

1289
01:05:00,220 --> 01:05:03,100
지침에 따라 그래서
이 페이지에, 우리는 필요

1290
01:05:03,100 --> 01:05:08,960
배 적색 증대
(10)는, 그리고 우리는 녹색을 제거해야

1291
01:05:08,960 --> 01:05:09,930
청색을 제거합니다.

1292
01:05:09,930 --> 01:05:12,410
의는 후자의 시나리오를 시작하자.

1293
01:05:12,410 --> 01:05:17,760
내가 원하는, 내가 갈거야, 그래서 만약
약간의 공간을 이용하여 들여,

1294
01:05:17,760 --> 01:05:22,291
내가 빨간색을 설정하려면,
녹색 또는 파랑의 값,

1295
01:05:22,291 --> 01:05:23,540
나는 다음을 수행하려고 해요.

1296
01:05:23,540 --> 01:05:31,280
>> 이미지, im.setBlue 다음
여기 내 지시에 기초하여,

1297
01:05:31,280 --> 01:05:36,700
무엇 세 가지 내가해야
이제 내부 괄호 입력?

1298
01:05:36,700 --> 01:05:41,960
나는 x 값이 필요합니다
무슨 수를 y 값 및

1299
01:05:41,960 --> 01:05:48,770
내가 없애려면 여기에 넣어해야합니다
파란색으로, 여기에이 이야기를 기반으로?

1300
01:05:48,770 --> 01:05:49,630
그냥 제로.

1301
01:05:49,630 --> 01:05:52,420
난 더 블루를하지 않으려면, 그냥 해요
0으로 바꿀 것.

1302
01:05:52,420 --> 01:05:54,465
>> 지금은 그냥이 무엇을하고 있는지 정리해 보자.

1303
01:05:54,465 --> 01:05:56,970

1304
01:05:56,970 --> 01:06:01,170
나는이 위에 여기에있다
두 번째 및 세 번째 라인

1305
01:06:01,170 --> 01:06:04,080
나는 두 개의 루프를 주장
중첩 루프, 당신이 경우

1306
01:06:04,080 --> 01:06:08,360
, 그 효과가가는 것
왼쪽에서 오른쪽으로 진행 중,

1307
01:06:08,360 --> 01:06:11,590
는 x의 모든 것을 위에서 아래로
값 및 Y 값을 모두.

1308
01:06:11,590 --> 01:06:15,167
다시 때문에 사진입니다
행과 열의 단순한 격자.

1309
01:06:15,167 --> 01:06:17,000
그래서이 얻을 것입니다
모든 파란색을 제거.

1310
01:06:17,000 --> 01:06:18,627
내가 당신에게 다음 줄에 남겨 두자.

1311
01:06:18,627 --> 01:06:20,043
어떻게 모든 녹색 제거합니까?

1312
01:06:20,043 --> 01:06:23,747

1313
01:06:23,747 --> 01:06:25,140
>> 청중 : [들리지]

1314
01:06:25,140 --> 01:06:26,151
>> DAVID 마란 : 니스.

1315
01:06:26,151 --> 01:06:28,260
>> 청중 : [들리지]

1316
01:06:28,260 --> 01:06:30,850
>> DAVID 마란 : 니스.

1317
01:06:30,850 --> 01:06:36,120
그리고 축소 것, 그냥 가지고 있어요
당신이 오타를하지했는지의 관심.

1318
01:06:36,120 --> 01:06:39,390
그리고 당신은 편안 인 경우
당신이 무슨 짓을했는지와,

1319
01:06:39,390 --> 01:06:42,936
가서 버튼을 클릭
/ 실행 저장하고 당신이 무엇을 얻을 참조하십시오.

1320
01:06:42,936 --> 01:06:46,982

1321
01:06:46,982 --> 01:06:48,690
그리고 다시, 우리는했습니다
단지 세 변경됩니다.

1322
01:06:48,690 --> 01:06:52,130
우리는 먼저 삭제
주석과 대체

1323
01:06:52,130 --> 01:06:53,575
코드의 두 라인.

1324
01:06:53,575 --> 01:06:55,742

1325
01:06:55,742 --> 01:06:58,450
당신이 공격해야하는 경우는 괜찮습니다
실행 / 저장 버튼을 몇 번

1326
01:06:58,450 --> 01:07:01,190
뭔가를 해결합니다.

1327
01:07:01,190 --> 01:07:03,610
>> 그리고 나 또한 확대 할 내
코드가 전사 할 수 있습니다.

1328
01:07:03,610 --> 01:07:04,110
좋은.

1329
01:07:04,110 --> 01:07:08,720
그래서 나는 앤드류가 무엇을 가지고 참조
실수가 될 것으로 보인다.

1330
01:07:08,720 --> 01:07:11,110
그는 단지 큰 검은 있어요
그의 화면에 사각형입니다.

1331
01:07:11,110 --> 01:07:13,120
다른 사람이 있습니까
큰 검은 사각형?

1332
01:07:13,120 --> 01:07:13,390
>> 청중 : 네.

1333
01:07:13,390 --> 01:07:14,360
>> DAVID 마란 : 큰 검은 사각형?

1334
01:07:14,360 --> 01:07:16,068
OK, 그래서 생각하자
이것이 무엇을 의미하는지에 대해.

1335
01:07:16,068 --> 01:07:20,560
우리는 영 즉, 제로, 제로 말했다
그래서 아무 녹색, 아니 빨간색, 아니 파란색,

1336
01:07:20,560 --> 01:07:21,980
당신에게 검은 줄 것입니다.

1337
01:07:21,980 --> 01:07:24,467
그리고 그것은 밝혀
우리의 노트북의 가장

1338
01:07:24,467 --> 01:07:25,800
충분한 충실도가 없습니다.

1339
01:07:25,800 --> 01:07:27,750
당신은 확실히이 말할 수 없다
실제로이 무언가이다.

1340
01:07:27,750 --> 01:07:30,340
그리고 당신은 종류의 아마 의지하는 경우
앞뒤로 화면,

1341
01:07:30,340 --> 01:07:32,850
어쩌면 당신은 보이나요
이 작은 뭔가?

1342
01:07:32,850 --> 01:07:34,820
아마, 가지, 일종의?

1343
01:07:34,820 --> 01:07:36,640
그것은 완벽하게 검은 색이 아니다.

1344
01:07:36,640 --> 01:07:38,050
>> 청중 : [들리지]

1345
01:07:38,050 --> 01:07:39,510
>> DAVID 마란 : 스포일러!

1346
01:07:39,510 --> 01:07:42,610
일부 빨간색, 거기지만
사양에서 기억

1347
01:07:42,610 --> 01:07:44,940
문제의 닉은 그것을 아래로 톤.

1348
01:07:44,940 --> 01:07:47,860
그는 다소을 흐릿한
하지만 제로 모든 방법.

1349
01:07:47,860 --> 01:07:51,670
그래서 우리는 양을 확대 할 경우
빨간색의 날이 트릭을 제안 할 수 있습니다.

1350
01:07:51,670 --> 01:07:53,750
내 화면을 확대 할 수 있습니다.

1351
01:07:53,750 --> 01:07:58,678
그리고 내가 가서 가정 해 봅시다
양 im.getRed (X, Y)를 동일합니다.

1352
01:07:58,678 --> 01:08:02,440

1353
01:08:02,440 --> 01:08:05,790
>> 코드 행은 저를주고있다
뭔가 변수를했다.

1354
01:08:05,790 --> 01:08:09,643
나는 틀림없이 임의로 가지고 있지만,
합리적 내 변수 무엇이라고,

1355
01:08:09,643 --> 01:08:10,143
분명히?

1356
01:08:10,143 --> 01:08:13,530

1357
01:08:13,530 --> 01:08:14,340
양.

1358
01:08:14,340 --> 01:08:14,980
그냥 양.

1359
01:08:14,980 --> 01:08:16,960
나는 그것을 호출 한 수
무엇이든 내가 원하는,하지만 난

1360
01:08:16,960 --> 01:08:19,490
이 다른 함수를 사용하여
나는 앞에서 설명한 것을

1361
01:08:19,490 --> 01:08:25,359
X 쉼표 y를 적색의 양을 얻을 수 있습니다.

1362
01:08:25,359 --> 01:08:27,520
내가 왜 그런 짓을 한거야?

1363
01:08:27,520 --> 01:08:30,004
당신은 여기에서 수행 할 수 있습니까?

1364
01:08:30,004 --> 01:08:32,910

1365
01:08:32,910 --> 01:08:33,619
당신은 add-- 필요

1366
01:08:33,619 --> 01:08:34,493
청중 : [들리지]

1367
01:08:34,493 --> 01:08:36,279
DAVID 마란 : 네, 아마
10을 곱합니다.

1368
01:08:36,279 --> 01:08:38,862
당신이 모르는 경우에, 난
가서이 작업을 수행하는 것.

1369
01:08:38,862 --> 01:08:42,060
내가 가서거야 및
말하자면, 나는 빨간색의 양을 원하는

1370
01:08:42,060 --> 01:08:46,550
나는 무엇을 할 수 할
빨간색에있다, 10 배

1371
01:08:46,550 --> 01:08:50,330
와 스타에 별표 당신의
키보드 짓이야가 X를 사용하지 않는 것입니다.

1372
01:08:50,330 --> 01:08:51,569
별을 사용합니다.

1373
01:08:51,569 --> 01:08:55,350
즉, 당신이 일을 곱 방법
대부분의 프로그래밍 언어입니다.

1374
01:08:55,350 --> 01:08:59,790
>> 그래서 카림의 직관에 따라,
양이라는 변수에 저장,

1375
01:08:59,790 --> 01:09:03,649
나는 위치 XY에서 원하는 얼마나 많은 빨간색입니다.

1376
01:09:03,649 --> 01:09:11,500
어떻게 지금, 나는 것을 확인 할
그 번호가 픽셀?

1377
01:09:11,500 --> 01:09:12,859
이미 전에이 일을했습니다.

1378
01:09:12,859 --> 01:09:17,666
당신은 녹색 및 설정
제로, 아니 값으로 블루.

1379
01:09:17,666 --> 01:09:18,540
청중 : [들리지]

1380
01:09:18,540 --> 01:09:20,040
DAVID 마란 : 음, 그래
당신은 10로하지 않습니다.

1381
01:09:20,040 --> 01:09:21,460
이미 여기에서 수학했다.

1382
01:09:21,460 --> 01:09:24,779
그래서 우리는 빨간색의 가치를 점점
이는 아마도 낮은 숫자입니다.

1383
01:09:24,779 --> 01:09:26,180
우리는 (10)에 의해 곱 있습니다.

1384
01:09:26,180 --> 01:09:29,139
당신이 수행 할 작업
이제 변수 양?

1385
01:09:29,139 --> 01:09:30,130
>> 청중 : [들리지]

1386
01:09:30,130 --> 01:09:30,880
>> DAVID 마란 : 니스.

1387
01:09:30,880 --> 01:09:34,616
그래서 im.set--?

1388
01:09:34,616 --> 01:09:35,640
>> 청중 : setRed.

1389
01:09:35,640 --> 01:09:39,760
>> 데이비드 마란는 : 위치 XY에서 setRed.

1390
01:09:39,760 --> 01:09:40,260
네.

1391
01:09:40,260 --> 01:09:41,200
단지 양.

1392
01:09:41,200 --> 01:09:44,257
즉, 가변
임시 자리 표시 자입니다

1393
01:09:44,257 --> 01:09:45,840
것을 당신은 당신이 원하는 무엇이든 넣을 수 있습니다.

1394
01:09:45,840 --> 01:09:48,680
우리는 퍼팅 할 일이
순간에 그것의 수입니다.

1395
01:09:48,680 --> 01:09:51,569
우리가 그것을 곱했습니다
(10)은 큰 확인합니다.

1396
01:09:51,569 --> 01:09:56,480
그리고 지금은 그 변수를 대체하고 있습니다
그 세 번째 인수, 또는 입력으로

1397
01:09:56,480 --> 01:09:57,810
빨간색 설정합니다.

1398
01:09:57,810 --> 01:10:00,440
그래서 당신 한 번
그 마무리하고,주의 깊게 살펴

1399
01:10:00,440 --> 01:10:02,330
세미 콜론 및 괄호.

1400
01:10:02,330 --> 01:10:06,290
>> 가서 클릭
/ 실행 다시 저장하고

1401
01:10:06,290 --> 01:10:10,690
볼 수, 마술, 실제로 무엇 이었습니까
그곳에. [? 아르와,?]가 무엇입니까?

1402
01:10:10,690 --> 01:10:16,412
본격적인 에펠 탑
빨강, 매우 어두운 없습니다.

1403
01:10:16,412 --> 01:10:17,870
그것은 그래, 이제 더 분명해야 하는가?

1404
01:10:17,870 --> 01:10:18,840
승인.

1405
01:10:18,840 --> 01:10:20,215
그리고 앤드류, 더 이상 블랙 박스?

1406
01:10:20,215 --> 01:10:21,090
청중 : [들리지]

1407
01:10:21,090 --> 01:10:22,180
DAVID 마란 : 좋습니다.

1408
01:10:22,180 --> 01:10:23,610
그래서 화면이 유지됩니다.

1409
01:10:23,610 --> 01:10:27,010
이 플레이하려면
나중에, 나는 당신을 위해 이것을 다시 것입니다.

1410
01:10:27,010 --> 01:10:29,140
하지만이 코드는 여기에 정확하게했다.

1411
01:10:29,140 --> 01:10:31,460
왜 우리는 다른 일을하지 않습니다.

1412
01:10:31,460 --> 01:10:33,880
내가 약간 아래로 스크롤 할 수 있습니다.

1413
01:10:33,880 --> 01:10:36,760
>> 이 경우, 프로젝터 그래서
정말 그것을 정의하지 않습니다.

1414
01:10:36,760 --> 01:10:40,486
하지만 당신의 화면에, 당신 아마
아주 빨간색과 매우 블랙 박스가 있습니다.

1415
01:10:40,486 --> 01:10:42,610
이 역시 퍼즐입니다
유명한 뭔가를 보여줍니다.

1416
01:10:42,610 --> 01:10:44,193
그러나, 화상이 왜곡되어왔다.

1417
01:10:44,193 --> 01:10:47,740
진정한 이미지, 이때이며,
파란색과 녹색 값입니다.

1418
01:10:47,740 --> 01:10:51,820
그러나, 모든 분할 봤는데
(20) 그래서 값은 매우 작다.

1419
01:10:51,820 --> 01:10:54,660
빨간 값은 있습니다
임의의 숫자, 소음.

1420
01:10:54,660 --> 01:10:57,190
이러한 왜곡을 취소
진정한 이미지를 공개합니다.

1421
01:10:57,190 --> 01:10:59,200
>> 그래서 닉은 무엇을 알려줍니다.

1422
01:10:59,200 --> 01:11:04,290
제로 빨간색 값을 설정하고,
다음이 무엇인지 망치고하지 않습니다.

1423
01:11:04,290 --> 01:11:07,110
그런 다음 파란색을 곱
20로 녹색 값.

1424
01:11:07,110 --> 01:11:09,820
그래서 거의이야
같은 프로그램 이전과,

1425
01:11:09,820 --> 01:11:11,380
하지만 그 과정을 반대로하고 있습니다.

1426
01:11:11,380 --> 01:11:13,780
그리고 난 내 코드를에서 둘 것이다
전 경우 화면에

1427
01:11:13,780 --> 01:11:16,650
당신은 그것을 다시 참조 할
또는 하나 더 재생할 수 있습니다.

1428
01:11:16,650 --> 01:11:18,100
내가 그 확대 할 수 있습니다.

1429
01:11:18,100 --> 01:11:21,450
그러나 동 화상을 해결
퍼즐, 두 번째.

1430
01:11:21,450 --> 01:11:37,623

1431
01:11:37,623 --> 01:11:40,580
>> 청중 : [들리지]

1432
01:11:40,580 --> 01:11:44,010
>> DAVID 마란 : OK, 그래서 난이 일
많은 힌트를 제공하지 않을.

1433
01:11:44,010 --> 01:11:47,220
그래서 아,하자 would--
여기에 오타를 참조하십시오.

1434
01:11:47,220 --> 01:11:49,621
그래서 여기, 기억
실제로 거기에 갈 필요가있다.

1435
01:11:49,621 --> 01:11:52,870
당신이 원한다면 내가 제안 것이 무엇
이 일에 초점 답이있다.

1436
01:11:52,870 --> 01:11:57,060
당신은, 그 전사하려는 경우
첫 번째 작업을 얻어야한다.

1437
01:11:57,060 --> 01:11:59,910
그리고 당신은 그것을 사용할 수 있습니다
두 번째 영감.

1438
01:11:59,910 --> 01:12:02,230
좋은.

1439
01:12:02,230 --> 01:12:02,730
좋은.

1440
01:12:02,730 --> 01:12:05,430

1441
01:12:05,430 --> 01:12:08,180
>> 그리고 호기심에 대한,
이것은 단순한 일례이다

1442
01:12:08,180 --> 01:12:11,080
과학 또는 예술의
스테 가노 그래피라고,

1443
01:12:11,080 --> 01:12:14,100
이미지 정보를 숨기고의 예술.

1444
01:12:14,100 --> 01:12:16,890
일반적으로 이미지가 될 수 있습니다
아주 노골적으로 워터 마크

1445
01:12:16,890 --> 01:12:19,500
하단의 로고와 함께
코너,하지만 분명히, 당신

1446
01:12:19,500 --> 01:12:22,070
훨씬 더 정교한 될 수 있습니다
그것에 대해 실제로

1447
01:12:22,070 --> 01:12:25,050
이미지에 다른 이미지를 숨기
어떻게 든이 기술.

1448
01:12:25,050 --> 01:12:59,890

1449
01:12:59,890 --> 01:13:05,770
>> 또 다른 30 ​​초 가지고, 그리고, 우리는거야
적어도 당신이 볼 수 무엇을 발표합니다.

1450
01:13:05,770 --> 01:13:08,330
그리고 세 번째를 떠날거야
재택 운동 하나,

1451
01:13:08,330 --> 01:13:11,353
당신은 더 원하는 경우
이번 주말에 도전한다.

1452
01:13:11,353 --> 01:13:18,240

1453
01:13:18,240 --> 01:13:20,390
그리고 앤드류는 것 같아요
먼저 입수했습니다.

1454
01:13:20,390 --> 01:13:22,645
두 번째 이미지는 앤드류 무엇입니까?

1455
01:13:22,645 --> 01:13:23,920
>> 대상 : 자유의 동상입니다.

1456
01:13:23,920 --> 01:13:28,500
>> DAVID 마란 : 자유의 여신상
대답이 시간이 될 것입니다.

1457
01:13:28,500 --> 01:13:31,140
그래서 다시, 단지 몇 가지 간단한
예, 목표하는의

1458
01:13:31,140 --> 01:13:35,040
당신에게 방법의 감각을 제공하는 것입니다
우리는 화보 스크래치를 번역했습니다

1459
01:13:35,040 --> 01:13:40,410
더 성가신 등에 대한 블록
복잡한 코드,하지만 아이디어의 모든

1460
01:13:40,410 --> 01:13:42,980
정확히 여전히 동일
도입이기는하지만

1461
01:13:42,980 --> 01:13:48,380
이제 변수의 개념으로, 인
일시적 것을 저장할 수.

1462
01:13:48,380 --> 01:13:51,750
>> , 이제 한 번 더 손에하자
지금 점을 연결하는

1463
01:13:51,750 --> 01:13:53,880
뭔가 좀 더 실제에.

1464
01:13:53,880 --> 01:13:56,610
준비가되면, 경우에 당신은 할 수
화면이 URL로 이동합니다.

1465
01:13:56,610 --> 01:14:00,610
즉, 사본도 있어요
슬라이드, developers.google.com/maps~~V.

1466
01:14:00,610 --> 01:14:03,660
의 실제로 뭔가를하자
실제, 그래서 웹에, 말하자면

1467
01:14:03,660 --> 01:14:07,600
Google지도 API를 사용하거나
응용 프로그래밍 인터페이스,

1468
01:14:07,600 --> 01:14:08,940
다음과 같은 방법이다.

1469
01:14:08,940 --> 01:14:12,341
>> 구글, 많은 기업처럼,
자유 많은 기능을 제공한다

1470
01:14:12,341 --> 01:14:14,840
당신은 구축하는 데 사용할 수있는 당신의
자신의 흥미있는 응용 프로그램.

1471
01:14:14,840 --> 01:14:18,890
사실, 당신은 이제까지 사용한 경우
동네 짱 택시 또는 차를 얻기 위해,

1472
01:14:18,890 --> 01:14:21,640
당신은 아마 동네 짱이 있는지 알고
지도와 그것에서 차를 보여줍니다.

1473
01:14:21,640 --> 01:14:24,870
즉, 내가 할 수있는 최선으로
Google지도 API를 말한다.

1474
01:14:24,870 --> 01:14:28,884
그들은 실제로, 구글 맵을 사용하는
그러나 위버는 매핑 회사 아니다

1475
01:14:28,884 --> 01:14:31,050
도 그건이 될 것입니다
특히 흥미로운 문제

1476
01:14:31,050 --> 01:14:33,510
상단에 해결하기 위해 자신의
자동차 서비스 문제.

1477
01:14:33,510 --> 01:14:35,510
그래서 그들은 서있어,
다시, 어깨에

1478
01:14:35,510 --> 01:14:37,520
다른이 경우 구글.

1479
01:14:37,520 --> 01:14:42,850
그래서 그들은 구글의지도하지만 자신을 사용
자동차 서비스 및 기타 기능을 제공합니다.

1480
01:14:42,850 --> 01:14:47,770
>> 그래서 우리는 이점을거야
이것 다음을 수행합니다.

1481
01:14:47,770 --> 01:14:50,230
그리고 나는, 너무 빨리 갔어요 경우
잠시 저를 통해 호출합니다.

1482
01:14:50,230 --> 01:14:53,500
이미지 물건의 일부를 정리해 드리겠습니다.

1483
01:14:53,500 --> 01:14:56,290
당신은 자신을 볼 수
이 같은 페이지에서.

1484
01:14:56,290 --> 01:14:58,230
그래서 구글의 좋은, 그리고
그들은 최고 중이야

1485
01:14:58,230 --> 01:15:01,364
뿐만 아니라 API를 제공,
하지만 무료 API를 당신

1486
01:15:01,364 --> 01:15:02,780
함께 재생하거나 상업적으로 사용할 수 있습니다.

1487
01:15:02,780 --> 01:15:06,450
그들은 당신의 사용 여부를 충전 시작합니까
높은, 그러나 나는 사전에 나서서

1488
01:15:06,450 --> 01:15:10,490
무료 계정에 우리를 가입
희망을 갖고, 10 컴퓨터, 그

1489
01:15:10,490 --> 01:15:12,480
갑자기 우리의 자격을 박탈하지 않습니다.

1490
01:15:12,480 --> 01:15:14,320
그래서 희망이
데모 작동합니다.

1491
01:15:14,320 --> 01:15:18,840
>> 그리고 그들은을위한 API를 가지고 있음을 알 수
안드로이드, 아이폰 OS, 웹, 웹 서비스,

1492
01:15:18,840 --> 01:15:19,620
어떤 즉.

1493
01:15:19,620 --> 01:15:20,700
의 웹에 초점을 맞출 수 있습니다.

1494
01:15:20,700 --> 01:15:26,560
그래서 분홍색 상자, 웹을 클릭하고
페이지로, 희망, 당신을 이끌 것입니다

1495
01:15:26,560 --> 01:15:27,630
이리.

1496
01:15:27,630 --> 01:15:29,335
그리고 그들은 API를 왕창 가지고있다.

1497
01:15:29,335 --> 01:15:31,210
그리고 그것은 조금 될 수 있습니다
처음에는 압도적 인,

1498
01:15:31,210 --> 01:15:33,000
그러나 나는 우리가 원하는 것을 통하여 우리를 조종 할 수 있습니다.

1499
01:15:33,000 --> 01:15:38,500
>> 왼쪽 상단에있는 Google지도를하다
자바 스크립트 API, 자바 스크립트 API.

1500
01:15:38,500 --> 01:15:40,380
그래서 가서 하나를 클릭합니다.

1501
01:15:40,380 --> 01:15:49,360
그리고 그것은 지금 당신을 이끌 것입니다
페이지, 데모 및 샘플 코드 다음과 같습니다.

1502
01:15:49,360 --> 01:15:51,190
내가 여기 축소 할 수 있습니다.

1503
01:15:51,190 --> 01:15:56,300
그리고 우리가 아래로 스크롤 이러시면 저하자
이 빠른 시작 단계라고 곳.

1504
01:15:56,300 --> 01:15:57,970
화면 내 같아야합니다.

1505
01:15:57,970 --> 01:16:01,130
>> 그리고 두 단계 거기에 얻을
키는 개발 시작합니다.

1506
01:16:01,130 --> 01:16:04,190
난 이미위한 단계를했다
미국은 이른바 키를 받고.

1507
01:16:04,190 --> 01:16:05,320
그리고 이것은 일반적인 생각이다.

1508
01:16:05,320 --> 01:16:09,210
API 키는 일반적으로
큰 임의의 숫자 또는 문자열

1509
01:16:09,210 --> 01:16:11,130
당신이 생각하는 것을
코드에 붙여 넣으려면

1510
01:16:11,130 --> 01:16:15,280
구글이 알 수 있도록 당신이 때 누구
당신은 자신의 API를 자신의 서비스를 사용하고 있습니다.

1511
01:16:15,280 --> 01:16:17,370
우리가있어 의미하지 않습니다
아무것도 충전.

1512
01:16:17,370 --> 01:16:21,030
그리고 지금, 클릭, 대신
하나, 개발을 시작을 클릭합니다.

1513
01:16:21,030 --> 01:16:25,990
당신은 저를 흔들 수 있다면
이상 우리가 어디하지 않도록 경우.

1514
01:16:25,990 --> 01:16:28,040
>> 그래서 우리는 단지 흠집이 있습니다
면, 여기하지만

1515
01:16:28,040 --> 01:16:31,000
나는 강력한 될 것이라고 생각
실제로 우리 모두가하는 것입니다,

1516
01:16:31,000 --> 01:16:34,240
하나의 창에서 Cloud9를 사용하여
다른 창에서이 튜토리얼,

1517
01:16:34,240 --> 01:16:37,120
실제로 우리 자신을 얻을 수 있습니다
응용 프로그램 및 실행

1518
01:16:37,120 --> 01:16:40,920
즉, 사용자 정의 구글을 포함합니다
우리 자신의 웹 페이지에지도,

1519
01:16:40,920 --> 01:16:43,010
다음 하나 또는 두 개의 기능을 추가합니다.

1520
01:16:43,010 --> 01:16:45,520
그러나 우리는 단지 흠집이 있습니다
우리가 무엇을 할 수 있는지의 표면.

1521
01:16:45,520 --> 01:16:47,020
>> 그래서 그냥 빨리 전성 검사.

1522
01:16:47,020 --> 01:16:49,740
모든 사람은이 페이지에 있습니다
Google지도 자바 스크립트 API?

1523
01:16:49,740 --> 01:16:50,872
시작 말해야한다.

1524
01:16:50,872 --> 01:16:53,330
우리는 통과하지 않을거야
어떤 방법으로 모든 일.

1525
01:16:53,330 --> 01:16:58,090
OK, 다른 탭에서, 당신이하지 않으면
Cloud9에 가야합니까, 열어가

1526
01:16:58,090 --> 01:17:03,500
자신 단지를에 얻을
새 탭, 궁극적으로.

1527
01:17:03,500 --> 01:17:11,070
그래서 다시, 어제 c9.io,
c9.io, 단지 새 파일을 만듭니다.

1528
01:17:11,070 --> 01:17:13,500
그리고 앞서와 통화 이동
당신은 무엇을하고 싶습니다.

1529
01:17:13,500 --> 01:17:16,495
난 내 map.html을했다.

1530
01:17:16,495 --> 01:17:17,870
.html 중에서 끝나는 아무것도를 호출합니다.

1531
01:17:17,870 --> 01:17:23,930

1532
01:17:23,930 --> 01:17:26,580
그리고 당신은 대략해야한다
나는이 과정에서 나는 곳

1533
01:17:26,580 --> 01:17:31,470
빈 단지 깜박이는 메시지와 함께
탭 map.html 같은 것을했다.

1534
01:17:31,470 --> 01:17:35,808

1535
01:17:35,808 --> 01:17:38,148
또는 파일, 새 파일이 시간.

1536
01:17:38,148 --> 01:17:41,960

1537
01:17:41,960 --> 01:17:48,000
>> 그리고 지금, 이상에
Google지도 자바 스크립트 API,

1538
01:17:48,000 --> 01:17:50,010
우리는 독서를 건너 뛸 수 있습니다
이 모든 텍스트를 통해.

1539
01:17:50,010 --> 01:17:53,760
하지만 안녕하세요 세계가 주목
실제로 모든 곳에서, 당신은 지금을 참조하십시오.

1540
01:17:53,760 --> 01:17:58,020
안녕하세요 세계는 화려한이 큰이
HTML의 전체 무리의 예.

1541
01:17:58,020 --> 01:18:03,590
가서 복사 만 붙여 넣기
HTML, 상단의 문서 형식에서 이렇게

1542
01:18:03,590 --> 01:18:08,810
닫기 HTML 태그에있는 모든 방법, 이동
앞서 및 다시 that-- 모두 복사,

1543
01:18:08,810 --> 01:18:14,430
즉 안녕하세요 세계에서의 example--
그리고, 당신의 Cloud9 탭에 해당 붙여 넣기

1544
01:18:14,430 --> 01:18:17,996
그래서 지금 화면
대략 광산과 같아야합니다.

1545
01:18:17,996 --> 01:18:22,280

1546
01:18:22,280 --> 01:18:24,520
>> 그리고 당신은 저장할 수 있지만,
아직로드하지 않습니다.

1547
01:18:24,520 --> 01:18:26,290
에하자 첫번째보기
코드를 볼 경우 우리

1548
01:18:26,290 --> 01:18:29,110
추론 또는 배울 수
그것은 구글이 무엇인지부터

1549
01:18:29,110 --> 01:18:30,860
우리가 맹목적으로 복사 및 붙여 넣기했다.

1550
01:18:30,860 --> 01:18:33,334
그들은 단지 도와주고 싶어,
문자 그대로, 우리는 시작,

1551
01:18:33,334 --> 01:18:35,500
하지만 그 정도가 아니다
실제로이 복잡.

1552
01:18:35,500 --> 01:18:40,100

1553
01:18:40,100 --> 01:18:42,210
질문 아직?

1554
01:18:42,210 --> 01:18:43,790
우리는 앞서 위조 안전 해요?

1555
01:18:43,790 --> 01:18:44,330
승인.

1556
01:18:44,330 --> 01:18:46,800
>> 이렇게 빨리, 그냥하자
몇 가지 빠른 온 전성을 확인합니다.

1557
01:18:46,800 --> 01:18:48,800
의 선 하나 내가
, 당신을보고, 희망

1558
01:18:48,800 --> 01:18:51,710
즉, 문서 타입의 HTML을 무엇을 의미 하는가를 참조하십시오?

1559
01:18:51,710 --> 01:18:52,385
카림, 기억?

1560
01:18:52,385 --> 01:18:53,260
청중 : [들리지]

1561
01:18:53,260 --> 01:18:53,968
DAVID 마란 : 예.

1562
01:18:53,968 --> 01:18:54,870
다음은 HTML 5 온다.

1563
01:18:54,870 --> 01:18:57,950
한편, 상기 두 개의 라인
화면이 여기에, 헤이 브라우저를 의미한다

1564
01:18:57,950 --> 01:18:59,482
여기에 실제 HTML 온다.

1565
01:18:59,482 --> 01:19:01,440
선 세 헤이 브라우저입니다,
여기에 머리가 제공됩니다.

1566
01:19:01,440 --> 01:19:04,260
행 사 헤이, 물론입니다
브라우저, 여기에 제목을 온다.

1567
01:19:04,260 --> 01:19:07,780
라인 다섯은 무엇입니까?

1568
01:19:07,780 --> 01:19:09,930
사실,이하지 않습니다
정말 우리를 위해 아무것도하지.

1569
01:19:09,930 --> 01:19:13,340
이 경우는 크기가 조절
기본에 대한 페이지입니다. 선 여섯,

1570
01:19:13,340 --> 01:19:16,140
우리는 이야기,하지만하지 않은
문자 인코딩을 지정합니다.

1571
01:19:16,140 --> 01:19:19,181
파일을 인코딩하는 다른 방법이있다,
특히 외국어합니다.

1572
01:19:19,181 --> 01:19:21,100
UTF-8은 기본 경향이있다.

1573
01:19:21,100 --> 01:19:26,580
>> 그래서 지금 우리는 줄을 볼 수 있습니다
(16)를 통해 일곱, 일부 CSS.

1574
01:19:26,580 --> 01:19:29,260
그리고 우리는 본 적이 없다하더라도
전에 이러한 모든 것들을,

1575
01:19:29,260 --> 01:19:30,810
우리는 가지 추론 할 수있다.

1576
01:19:30,810 --> 01:19:37,075
그래서 브라우저 이봐, 적용, 여덟 수단 라인
다음에이 모든 태그,

1577
01:19:37,075 --> 01:19:37,575
분명히?

1578
01:19:37,575 --> 01:19:40,650

1579
01:19:40,650 --> 01:19:41,701
되는 HTML 및 본문 텍스트입니다.

1580
01:19:41,701 --> 01:19:43,200
그래서 쉼표가 새로운 것입니다.

1581
01:19:43,200 --> 01:19:46,140
그리고 그것은 단지 방법
한 번에 여러 태그를 지정.

1582
01:19:46,140 --> 01:19:47,640
>> 그 다음 우리는 중괄호를 가지고있다.

1583
01:19:47,640 --> 01:19:51,170
그래서 분명히,이 브라우저를 알려줍니다,
페이지 100 %의 높이를 확인합니다.

1584
01:19:51,170 --> 01:19:54,170
그래서 아주 작은이 경우에도
내용은 전체 페이지를 만들어,

1585
01:19:54,170 --> 01:19:55,530
것은 페이지를 작성합니다.

1586
01:19:55,530 --> 01:19:57,524
지도는 궁극적으로 페이지를 작성합니다.

1587
01:19:57,524 --> 01:19:58,690
여백, 그게 무슨 뜻 이죠?

1588
01:19:58,690 --> 01:20:01,559
즉, 임의 같은 보통이다
가장자리 주위에 공백

1589
01:20:01,559 --> 01:20:04,350
일부 브라우저 디자이너 단지
,이 있어야 결정 그것 때문에

1590
01:20:04,350 --> 01:20:05,540
가지 일들이 청소기 볼 수 있습니다.

1591
01:20:05,540 --> 01:20:06,498
그러나 우리는 그것을 원하지 않는다.

1592
01:20:06,498 --> 01:20:08,710
우리는지도를 가고 싶어
가장자리에 모든 방법.

1593
01:20:08,710 --> 01:20:10,930
패딩, 마진 정신에는 변함이.

1594
01:20:10,930 --> 01:20:14,980
여백 외부, 패딩 수단을 의미
내부하지만 거래 같은 종류이다.

1595
01:20:14,980 --> 01:20:17,520
이 버퍼의 약간의
당신과 가장자리 사이.

1596
01:20:17,520 --> 01:20:21,170
>> 그리고 라인 (13)은 좋은
빠른 검토를 위해 기회.

1597
01:20:21,170 --> 01:20:26,440
무엇 날카로운 기호지도 않습니다
의미, 또는 해시 태그지도 말은?

1598
01:20:26,440 --> 01:20:29,650
즉 원칙적으로, 무엇을 참조합니까?

1599
01:20:29,650 --> 01:20:31,485
>> 청중 : [들리지]

1600
01:20:31,485 --> 01:20:32,360
DAVID 마란 : 맞아요.

1601
01:20:32,360 --> 01:20:36,900
이 속성이 CSS 속성
한 가지에 적용, HTML 태그

1602
01:20:36,900 --> 01:20:41,180
즉, 인용을 끝내 "지도"를 인용의 ID가 있습니다.

1603
01:20:41,180 --> 01:20:44,460
그리고 지금하자 빨리 감기, 스크롤
파일의 맨 아래에 아래로있는

1604
01:20:44,460 --> 01:20:49,860
너무 멀리하지 않고, 줄에 통지
19 내가 그랬던 것처럼 당신이 정확하게 붙여 넣을 경우,

1605
01:20:49,860 --> 01:20:53,405
라인 19는이다, 그냥 사업부가
페이지, 어제 I의 분할

1606
01:20:53,405 --> 01:20:54,820
사각형 영역이라고합니다.

1607
01:20:54,820 --> 01:20:55,820
그것은 거기에 아무것도있다.

1608
01:20:55,820 --> 01:20:57,550
그것은 오픈 태그, 가까운 태그입니다.

1609
01:20:57,550 --> 01:20:59,490
그러나 고유 ID를 가지고있다.

1610
01:20:59,490 --> 01:21:02,090
>> 그래서이 될 것으로 보인다
여기에서 일어나고있는 구글이다

1611
01:21:02,090 --> 01:21:05,880
에 우리의 웹 페이지를 준비하고
완전한 100 % 높이를 갖는,

1612
01:21:05,880 --> 01:21:09,680
없이 패딩, 여백, 때문에
우리가 내부에 넣을거야

1613
01:21:09,680 --> 01:21:13,647
누구의 고유 한 ID입니다이 사업부의
지도는 실제 삽입 된지도입니다.

1614
01:21:13,647 --> 01:21:15,480
그리고 우리는 그것을 채우려
페이지뿐 아니라

1615
01:21:15,480 --> 01:21:17,560
중간에 약간의 작은 사각형합니다.

1616
01:21:17,560 --> 01:21:24,220
따라서 라인 (14)은 유사하게는, 강조
100 %의 높이를 가져야 자체 매핑.

1617
01:21:24,220 --> 01:21:29,220
>> 이제 선 (20) 사이에 알
28이 자바 스크립트 코드이다.

1618
01:21:29,220 --> 01:21:33,020
그리고 이것은 비록이며
조금 이상한 구문

1619
01:21:33,020 --> 01:21:34,730
모든 훨씬 여기가에 없을거야.

1620
01:21:34,730 --> 01:21:39,310
라인 (21)에서,이 선언된다
뭔가 변수를했다.

1621
01:21:39,310 --> 01:21:42,030
대신를 호출
우리가 전에했던 것처럼, 금액,

1622
01:21:42,030 --> 01:21:44,500
우리는 더 정확하게 말을하는지
다만 변수를 의미 VAR.

1623
01:21:44,500 --> 01:21:46,520
우리의 것을 사용할 수도
닉의 코드는,하지만 그는하지 않았다, 그래서

1624
01:21:46,520 --> 01:21:48,190
하나 그 일을 귀찮게하지 않았다.

1625
01:21:48,190 --> 01:21:50,240
그것은라는 변수이다
지도하고있다

1626
01:21:50,240 --> 01:21:53,360
의 함수
분명히 initMap을했다.

1627
01:21:53,360 --> 01:21:55,780
>> 그래서 이것은 우리 자신의 정의처럼
스크래치에서 퍼즐 조각.

1628
01:21:55,780 --> 01:21:58,830
우리의 조각을 만든
initMap 호출 기능,

1629
01:21:58,830 --> 01:22:00,980
당신은 종류의 추론 할 수있다
무슨 일이 여기에 것입니다.

1630
01:22:00,980 --> 01:22:02,930
좌측,
우리는 변수를 가지고있어,

1631
01:22:02,930 --> 01:22:06,000
그래서 우리는 다음을 넣어거야
그 변수 안에 것,

1632
01:22:06,000 --> 01:22:07,362
오른쪽에서 왼쪽으로.

1633
01:22:07,362 --> 01:22:11,940
오른쪽은 헤이 말한다
브라우저는 나에게 새로운 Google지도를 제공합니다.

1634
01:22:11,940 --> 01:22:16,490
그리고 google.maps.map은 펑키 방법입니다
이 기능하도록 지정의

1635
01:22:16,490 --> 01:22:19,790
Google지도에 속한다.

1636
01:22:19,790 --> 01:22:23,010
>> 괄호 후, 우리는 보았다
이 전에, 브라우저 헤이 얻을

1637
01:22:23,010 --> 01:22:29,210
나 페이지의 요소는
고유 ID 페이지에 태그 is--

1638
01:22:29,210 --> 01:22:30,710
>> 청중 : [들리지]

1639
01:22:30,710 --> 01:22:31,790
>> DAVID 마란 : --map.

1640
01:22:31,790 --> 01:22:35,770
그리고 무슨 일이, 잘 진행되고
함께이 라인, 라인 (23)

1641
01:22:35,770 --> 01:22:38,630
본질적으로 말하고,
브라우저 이봐, 나 가서

1642
01:22:38,630 --> 01:22:42,800
페이지가 빈 사업부
누구의 고유 ID 맵,

1643
01:22:42,800 --> 01:22:45,600
나는 삽입 할 때문에
그건 ... 그것으로 주입으로,

1644
01:22:45,600 --> 01:22:49,520
당신은 내용의 전체 무리를 will-- 경우
즉 웹에서 오는 일이,

1645
01:22:49,520 --> 01:22:50,427
그후.

1646
01:22:50,427 --> 01:22:52,010
구글의 우리를 위해이 모든 일을.

1647
01:22:52,010 --> 01:22:55,350
>> 그래서 다시 하루의 끝에서,
우리는 추상화의 예를 가지고있다.

1648
01:22:55,350 --> 01:22:58,610
지도가 무엇인지 나도 몰라
또는 어떻게지도 API를 구현합니다.

1649
01:22:58,610 --> 01:22:59,460
우리는 할 필요가 없습니다.

1650
01:22:59,460 --> 01:23:02,740
우리는지도를 알려줄 필요
위치 자체를 놓고, 떠나

1651
01:23:02,740 --> 01:23:04,880
그 기본이되는 구현
구글에 대한 세부 사항.

1652
01:23:04,880 --> 01:23:08,190
지금은 분명히있다
데이터의 두 조각

1653
01:23:08,190 --> 01:23:11,940
이 예제입니다
구글의 API를 제공한다.

1654
01:23:11,940 --> 01:23:16,450
명백하게 맵의 중심
줌 레벨은, 말하자면.

1655
01:23:16,450 --> 01:23:21,390
>> 그리고 사람이 인식 않습니다
좌표, 위도 및 경도?

1656
01:23:21,390 --> 01:23:24,364
아마, 그러나 우리는 돌아갈 수
튜토리얼로, 말 그대로 참조하십시오.

1657
01:23:24,364 --> 01:23:25,780
그러나 우리는 단지 순간에 그것을 볼 수 있습니다.

1658
01:23:25,780 --> 01:23:29,880
줌 레벨 사이의 값 I는하지
그 추천에 하나 뭔가를 알고.

1659
01:23:29,880 --> 01:23:32,880
그것은 당신이있어 얼마나 함께 할 수있다
또는 밖으로 확대하고, 그게 다입니다.

1660
01:23:32,880 --> 01:23:35,690
그리고 지금의 끝에서
페이지 예고 라인 29--

1661
01:23:35,690 --> 01:23:39,960
이 때문에 약간의 추한
이 코드 줄을 wraps--

1662
01:23:39,960 --> 01:23:44,570
받는 사람 다운로드 무엇인가
브라우저 구글의 실제 API.

1663
01:23:44,570 --> 01:23:47,500
모든 코드 구글의
엔지니어는 구현 작성했습니다

1664
01:23:47,500 --> 01:23:50,000
임베디드 맵이 전체의 기능입니다.

1665
01:23:50,000 --> 01:23:51,470
>> 이제 아무 것도 변경하지 말자.

1666
01:23:51,470 --> 01:23:54,761
당신이 따라 다음과 같은 경우, 가서
당신이 실제로있는 경우 그냥 그 파일을 저장

1667
01:23:54,761 --> 01:23:55,760
나는 무엇을.

1668
01:23:55,760 --> 01:23:57,370
그 URL로 이동합니다.

1669
01:23:57,370 --> 01:23:59,820
당신은 실행 버튼을 클릭 할 수 있습니다
맨 위로 그 말할 것이다

1670
01:23:59,820 --> 01:24:03,050
당신이 다시 웹 서버의 URL.

1671
01:24:03,050 --> 01:24:06,010
그리고 그것은 새로운 탭으로 당신을 이끌 것입니다.

1672
01:24:06,010 --> 01:24:11,910
당신은에 대한 열기를 클릭하면
map.html, 그리고 확률은 당신이있어입니다

1673
01:24:11,910 --> 01:24:15,520
경고를 얻을 것,
오류 메시지, 그래?

1674
01:24:15,520 --> 01:24:18,570
오류 메시지, 오류 메시지가?

1675
01:24:18,570 --> 01:24:21,170
>> 그래서 불행하게도, 오류
메시지는 계몽되지 않습니다

1676
01:24:21,170 --> 01:24:23,890
실제로 열하지 않는 한
콘솔, 특별한 탭 우리

1677
01:24:23,890 --> 01:24:27,110
어제 개방 유지 및
조금 일찍 오늘.

1678
01:24:27,110 --> 01:24:29,445
하지만 우연히 발견
이 이전, 그래서 이미

1679
01:24:29,445 --> 01:24:30,820
솔루션이 무엇인지 알아 냈어.

1680
01:24:30,820 --> 01:24:34,440
오늘의 슬라이드에서, 또는
오히려, Cloud9에서 예고

1681
01:24:34,440 --> 01:24:36,430
우리는하지 않았다
의도적으로 뭔가.

1682
01:24:36,430 --> 01:24:40,690
공지 사항이이 스크립트 태그
라인 29, 당신은 그것을 통해 읽는다면,

1683
01:24:40,690 --> 01:24:44,440
그것은 maps.googleapis.com/처럼
뭔가, 뭔가, 뭔가,

1684
01:24:44,440 --> 01:24:46,430
다음 사람을 통지
개발자 중 하나

1685
01:24:46,430 --> 01:24:50,040
모든 자본에 쓴
문자, API 키.

1686
01:24:50,040 --> 01:24:51,700
>> 우리는 거기에서 뭔가를 붙여 넣기 할 필요가있다.

1687
01:24:51,700 --> 01:24:53,450
그리고이 단계이었다
나는 전에 우리를 위해 한

1688
01:24:53,450 --> 01:24:57,190
다시 그들은 블랙리스트에 있습니다
우리 갑자기 경우, 12 우리의 이상

1689
01:24:57,190 --> 01:24:59,470
동일한 키를 사용하여 시작한
하지만 이제 어떻게되는지 보자.

1690
01:24:59,470 --> 01:25:03,030
오늘의에 들어갈 경우에 따라서
슬라이드는 하나의 슬라이드 후, 거기에

1691
01:25:03,030 --> 01:25:07,070
텍스트이 매우 펑키 보이는 문자열입니다.

1692
01:25:07,070 --> 01:25:12,230
가서 그냥 복사
그것은 당신의 API 키를 말합니다 곳에 붙여 넣습니다.

1693
01:25:12,230 --> 01:25:15,120
그게 내가 가입 한 사람입니다.

1694
01:25:15,120 --> 01:25:17,700
>> 그리고 확실히하지 마세요
수동을 입력,

1695
01:25:17,700 --> 01:25:21,210
이 가득 찬 느낌 때문에
오타, 잠재적으로.

1696
01:25:21,210 --> 01:25:23,260
그래서 그냥 복사하고 붙여 넣습니다.

1697
01:25:23,260 --> 01:25:26,090
그리고 라인을 만들 것
이상,하지만 지금은, 그냥 명확하게하기

1698
01:25:26,090 --> 01:25:29,540
그것은 조금 더 보일 것입니다
키가없는 동일 곳, 같은

1699
01:25:29,540 --> 01:25:32,200
당신 고함을 대문자로.

1700
01:25:32,200 --> 01:25:34,810
페이지를 저장 돌아가
다른 탭으로, 다시로드,

1701
01:25:34,810 --> 01:25:36,770
그리고지도를 볼 수 있도록 노력하겠습니다?

1702
01:25:36,770 --> 01:25:37,790
>> 청중 : 호주.

1703
01:25:37,790 --> 01:25:38,748
>> DAVID 마란 : 호주.

1704
01:25:38,748 --> 01:25:41,200
그래서 분명히 사람들이있는
GPS는 호주의 좌표.

1705
01:25:41,200 --> 01:25:44,491
그리고 나를 그냥 잠시 산책하자
꽤가 아니라 사람을 도와,

1706
01:25:44,491 --> 01:25:47,729
그러나 구글을 통해 검색, 내가 제안하자
GPS를 자신의 고향의 좌표

1707
01:25:47,729 --> 01:25:48,770
또는 자신의 모국.

1708
01:25:48,770 --> 01:25:51,436
그리고 아마 구글은이를 설정할 수 있습니다
최대, 또는 위키 백과을 알 수 있습니다.

1709
01:25:51,436 --> 01:25:54,410
그러나 두 개의 다른 값을 선택
위도와 경도,

1710
01:25:54,410 --> 01:25:57,530
다시 가서 그들을 붙여
다음 저장 한 후 페이지를 다시로드

1711
01:25:57,530 --> 01:26:00,718
당신이있을 수 있습니다 경우 참조
자신의 고향에 대한지도.

1712
01:26:00,718 --> 01:26:04,500

1713
01:26:04,500 --> 01:26:08,042
>> 그리고 당신이 함께 할 때
즉, 후속 challenge--

1714
01:26:08,042 --> 01:26:11,250
나는, 좀 덜 방향을 제시합니다
의도적으로, 당신이 그렇게 의도적으로

1715
01:26:11,250 --> 01:26:13,791
몇 위해 투쟁해야
문서와 분,

1716
01:26:13,791 --> 01:26:18,740
하지이 될지도 변경
만화 같은 기본,하지만 위성지도.

1717
01:26:18,740 --> 01:26:24,600
그래서 당신은 실제로 위성 참조
대신 예쁜 색상의 이미지.

1718
01:26:24,600 --> 01:26:29,710
>> 그리고 힌트는 내가 당신에게 줄 것이다
지도의 유형을 변경합니다.

1719
01:26:29,710 --> 01:26:33,084
그 점점로 돌아 가기
영감을 페이지를 시작했다.

1720
01:26:33,084 --> 01:26:40,599

1721
01:26:40,599 --> 01:26:42,390
당신이 수집 한 수있는 바와 같이,
당신이 찾고 있다면,

1722
01:26:42,390 --> 01:26:44,250
그래서 많은이있다
당신이 할 수있는 일.

1723
01:26:44,250 --> 01:26:46,380
여러분 중 일부는 이미
지도 유형을 변경했습니다.

1724
01:26:46,380 --> 01:26:49,890
하지만 당신은 나를 보자, 예를 들어 do-​​- 수 있습니다
우리는 코스했던 무언가로 이동

1725
01:26:49,890 --> 01:26:52,050
나는 maps.cs50.net을 teach--.

1726
01:26:52,050 --> 01:26:53,470
우리의 학부생 중 하나는 이런 짓을.

1727
01:26:53,470 --> 01:26:58,890
우리는 하버드 야드 이상 우리의지도를 중심으로
이 건물의 이름을 모두 오버레이

1728
01:26:58,890 --> 01:27:01,070
우리는 그를이를 추가했다.

1729
01:27:01,070 --> 01:27:04,270
내가 검색하고자한다면,
예를 들어, 매튜스 홀

1730
01:27:04,270 --> 01:27:05,730
우리는 작은 드롭 다운 메뉴가 있습니다.

1731
01:27:05,730 --> 01:27:09,080
그리고 나는 그가 부트 스트랩은을 사용하여 생각
라이브러리 우리는 이전에 이에 대한 논의했다.

1732
01:27:09,080 --> 01:27:12,190
그리고 당신은 매튜스를 클릭하면
홀, 그것은 바로

1733
01:27:12,190 --> 01:27:14,790
일정에지도를 이동
위치, 그리고 쇼

1734
01:27:14,790 --> 01:27:16,440
당신이 작은 팝업의 사진.

1735
01:27:16,440 --> 01:27:18,670
>> 그러나 심지어이 작은
팝업, 우리는 구현하지 않았다.

1736
01:27:18,670 --> 01:27:27,521
나는 우리가 점점 아래로 스크롤하면
페이지를 시작하고 정보 창을 찾습니다

1737
01:27:27,521 --> 01:27:29,770
당신은 그 일부를 볼 수 있습니다
기능 당신 자신에게

1738
01:27:29,770 --> 01:27:31,561
추가와 임에도 불구하고 수
좀 더 복잡한,

1739
01:27:31,561 --> 01:27:33,970
정보 창이라는 것을입니다.

1740
01:27:33,970 --> 01:27:37,190
그리고 예를 클릭하면
여기에, 이것은 재미 것입니다,

1741
01:27:37,190 --> 01:27:40,530
당신은 다음과 같은 작업을 수행 할 수 있습니다
짜잔 다음 마커를 클릭하고,

1742
01:27:40,530 --> 01:27:42,400
정보가 나타납니다.

1743
01:27:42,400 --> 01:27:45,874
>> 그래서 우리는 아주 도입하지 않은
자바 스크립트의 충분한 기능

1744
01:27:45,874 --> 01:27:49,040
당신에게 방법을 정확하게의 사진을 페인트
함께이 물건을 모두 연결할 수 있습니다,

1745
01:27:49,040 --> 01:27:50,706
그러나 우리는 종류의 표면을 긁어했습니다.

1746
01:27:50,706 --> 01:27:53,140
사실, 난 그냥 때 무엇을했다
나는 그 마커를 클릭

1747
01:27:53,140 --> 01:27:55,819
이벤트하는 트리거링했다
클릭 이벤트에 소위.

1748
01:27:55,819 --> 01:27:57,610
그리고 우리가 실제로보고
이벤트는 오늘 아침,

1749
01:27:57,610 --> 01:28:00,670
이벤트를 제출 소위,
때 우리가 방지했다

1750
01:28:00,670 --> 01:28:02,490
고양이에 대한 검색에서 사용자.

1751
01:28:02,490 --> 01:28:06,560
그래서 우리는 종류의 들었고, choosed 할 것
이러한 모든 다양한 기능 중에서

1752
01:28:06,560 --> 01:28:08,990
바라건대, 당신에게 감각을 제공하기 위해,
어떻게 당신은 실제로 수

1753
01:28:08,990 --> 01:28:11,000
좀 더 함께 할
프로그래밍 편안함,

1754
01:28:11,000 --> 01:28:12,587
완전 무료 자원.

1755
01:28:12,587 --> 01:28:15,856

1756
01:28:15,856 --> 01:28:18,770
>> 질문?

1757
01:28:18,770 --> 01:28:19,790
아니?

1758
01:28:19,790 --> 01:28:22,542
이것은 당신의 마지막 기회입니다,
적어도 오늘에, 금요일에,

1759
01:28:22,542 --> 01:28:25,000
당신의 가슴 떨어져 아무것도 얻을 수
그래서 당신은 여기서 걸어

1760
01:28:25,000 --> 01:28:27,067
자신감과 편안한 느낌.

1761
01:28:27,067 --> 01:28:27,566
예.

1762
01:28:27,566 --> 01:28:29,740
>> 청중 : 왜하지
당신은 한 가지 더 추가?

1763
01:28:29,740 --> 01:28:32,720
>> DAVID 마란 : 선한 오.

1764
01:28:32,720 --> 01:28:35,260
내가 생각하기에, 이번 주말에 휴식을해야합니다.

1765
01:28:35,260 --> 01:28:36,180
다른 질문?

1766
01:28:36,180 --> 01:28:37,055
>> 청중 : [들리지]

1767
01:28:37,055 --> 01:28:44,130

1768
01:28:44,130 --> 01:28:46,810
>> 데이비드 마란 : 당신의 주는거
인터넷 익스플로러, 평화에서 휴식,

1769
01:28:46,810 --> 01:28:49,310
당신은 VB를 넣을 수 있도록 사용
스크립트, 가상 기본 스크립트,

1770
01:28:49,310 --> 01:28:50,643
하지만 그건 정말 유행하지 않았다.

1771
01:28:50,643 --> 01:28:52,490
그래서 짧은 대답은 자바 스크립트입니다.

1772
01:28:52,490 --> 01:28:55,144

1773
01:28:55,144 --> 01:28:55,810
다른 질문?

1774
01:28:55,810 --> 01:28:58,427

1775
01:28:58,427 --> 01:28:59,760
좋아, 잘, 내가 이렇게 할 수 있습니다.

1776
01:28:59,760 --> 01:29:02,070
나 외부 동료를 잡아 보자.

1777
01:29:02,070 --> 01:29:04,500
그들은 어떤 평가를
그들은 모두를 원하는 형태

1778
01:29:04,500 --> 01:29:06,310
작성 몇 분을 보내고있다.

1779
01:29:06,310 --> 01:29:08,775
그들은 그 양식을 수집 할 어떤
당신이 외부에있을 수 있습니다 면제.

1780
01:29:08,775 --> 01:29:10,240
또한 인증서를해야합니다.

1781
01:29:10,240 --> 01:29:12,380
나는 거기에 같은데요
외부 여전히 몇 가지 간식.

1782
01:29:12,380 --> 01:29:14,360
날이를 통과하자, 그리고 경우
, 그 동안 질문이

1783
01:29:14,360 --> 01:29:17,120
좀 더 개별적으로 걷는 것
우리는 당신이 시작할 수 있습니다.

1784
01:29:17,120 --> 01:29:17,879
네, 물론.

1785
01:29:17,879 --> 01:29:18,754
청중 : [들리지]

1786
01:29:18,754 --> 01:29:26,737

1787
01:29:26,737 --> 01:29:28,570
DAVID 마란 : 그건
요즘 일반적으로 사실.

1788
01:29:28,570 --> 01:29:30,730
물론 웹과
소프트웨어, 당신은 기울고있다

1789
01:29:30,730 --> 01:29:32,901
다른 사람에 당신도있어
심미적으로 물건을 사용하여

1790
01:29:32,901 --> 01:29:35,400
부트 스트랩처럼, 그래서 당신은하지 않습니다
낮은 수준을 구현해야

1791
01:29:35,400 --> 01:29:37,169
메뉴의 세부 사항 및
버튼과 모든 것을.

1792
01:29:37,169 --> 01:29:39,210
당신은 누군가에 기대어있어
구글과 같은 그래서 그

1793
01:29:39,210 --> 01:29:42,050
동네 짱을 구축 할 필요가 없습니다
비즈니스 및 매핑 사업

1794
01:29:42,050 --> 01:29:44,850
유사한 임의의 개수
뿐만 아니라 응용 프로그램.

1795
01:29:44,850 --> 01:29:46,350
>> 사실, 로그인도 인기 있습니다.

1796
01:29:46,350 --> 01:29:48,500
당신이 스포티 파이 또는 사용한 경우
웹 사이트의 수,

1797
01:29:48,500 --> 01:29:51,210
당신은 몇 가지에 로그인 할 수 있습니다
페이스 북을 사용하는 웹 사이트.

1798
01:29:51,210 --> 01:29:53,350
그렇다면, 좋은있다
로그인에 대한 API는있다

1799
01:29:53,350 --> 01:29:56,570
요즘, 당신은하지 않도록
자신의 사용자 테이블을 가지고

1800
01:29:56,570 --> 01:29:59,440
당신의 자신의 데이터베이스의 모든
반드시 동일한 정도.

1801
01:29:59,440 --> 01:30:01,795
당신은 페이스 북이 모든 작업을 수행하도록 할 수 있습니다
당신을 위해 그 복잡성.

1802
01:30:01,795 --> 01:30:03,920
그래서 흥미로운 시간이다,
정직하게, 프로그래밍,

1803
01:30:03,920 --> 01:30:07,200
많은 타사 있기 때문에
당신이 위에 구축 할 수있는 서비스.

1804
01:30:07,200 --> 01:30:10,890
>> 그리고 또, 당신이 지불하는 가격입니다
금융 또는 다운 타임 중 하나.

1805
01:30:10,890 --> 01:30:13,750
구글이 다운되면,
그래서 동네 짱가하는, 틀림없이,

1806
01:30:13,750 --> 01:30:15,690
그러나 아마 그건
합리적인 절충.

1807
01:30:15,690 --> 01:30:18,040
그리고 또, 그 주제 중 하나였다,
희망, 일 지난 커플,

1808
01:30:18,040 --> 01:30:18,780
이러한 트레이드 오프입니다.

1809
01:30:18,780 --> 01:30:20,738
그리고 거의가 것입니다
권리 해답이 될 수 있습니다.

1810
01:30:20,738 --> 01:30:25,700
그것은 정말 좋다
두 개 이상의 답변.

1811
01:30:25,700 --> 01:30:26,682
>> 주변이 합격.

1812
01:30:26,682 --> 01:30:36,830

1813
01:30:36,830 --> 01:30:41,110
>> 그리고이 Cloud9 계정은 계속됩니다
영구적으로, 이론적으로 작동합니다.

1814
01:30:41,110 --> 01:30:45,000
며칠 기다리는 경우 찾을 수 있습니다
또는 주 이상, 그들에 다시 로그인합니다

1815
01:30:45,000 --> 01:30:49,170
그것은 하나 같이 걸릴 수 있습니다
5 분, 최대 다시 엽니 다

1816
01:30:49,170 --> 01:30:54,090
하지만 그들이 넣어해서입니다
그것은 자원을 절약하기 위해 잠을.

1817
01:30:54,090 --> 01:31:10,527

