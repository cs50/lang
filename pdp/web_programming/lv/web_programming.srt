1
00:00:00,000 --> 00:00:00,060

2
00:00:00,060 --> 00:00:01,560
>> DAVID Malan: Labi, mēs esam atpakaļ.

3
00:00:01,560 --> 00:00:03,830
Tātad aizraujošu
secinājums, mūsu pēdējā nodaļa

4
00:00:03,830 --> 00:00:06,900
par web programmēšana, kas I
domāju, mēs gribētu izmantot kā vispārējs termins

5
00:00:06,900 --> 00:00:08,440
lai attēlotu dažus atlikušos tematus.

6
00:00:08,440 --> 00:00:10,390
Tātad beigās no
diena, mēs faktiski darīt

7
00:00:10,390 --> 00:00:14,830
mazliet hands-on Web programmēšana
ar valodu sauc JavaScript.

8
00:00:14,830 --> 00:00:17,510
Un es domāju, ka mēs to apskatīt
kaut ko, kas saistīts ar attēliem

9
00:00:17,510 --> 00:00:20,040
un atklāt kaut ko
slepeni paslēptas attēlu,

10
00:00:20,040 --> 00:00:23,230
un arī to apskatīt Google
Maps API, lietojumprogrammu programmēšanas

11
00:00:23,230 --> 00:00:26,040
interfeiss, kā kaut ko
pārstāvis veida programmatūru

12
00:00:26,040 --> 00:00:28,800
tas ir arvien vairāk un
brīvi pieejams jau šodien.

13
00:00:28,800 --> 00:00:32,029
>> Bet kāpēc nav mēs to apskatīt
pie sastāvdaļas šajā pasaulē

14
00:00:32,029 --> 00:00:34,070
ka mēs esam veida bijuši
ņemot par pašsaprotamu pastāv

15
00:00:34,070 --> 00:00:36,720
kādu laiku, datu bāzes.

16
00:00:36,720 --> 00:00:39,150
Par iepriekšējo dienu un
pusotra mēs esam pieņēmuši,

17
00:00:39,150 --> 00:00:42,910
ka mums ir pieejami datu bāzē, bet
kāda problēma nav datubāze atrisināt?

18
00:00:42,910 --> 00:00:45,540
Ko tas dara mums?

19
00:00:45,540 --> 00:00:47,030
Kas tas ir?

20
00:00:47,030 --> 00:00:48,679
>> Mērķauditorija: [dzirdams]

21
00:00:48,679 --> 00:00:51,720
DAVID Malan: Nolemj visu informāciju,
OK, un kāda veida informācija

22
00:00:51,720 --> 00:00:53,186
varētu jums īstenot to?

23
00:00:53,186 --> 00:00:54,590
>> Mērķauditorija: [dzirdams]

24
00:00:54,590 --> 00:00:56,450
>> DAVID Malan: Jebkura informācija
jums īstenot to, jūs saņemsiet atpakaļ.

25
00:00:56,450 --> 00:00:57,070
Tā ir taisnība.

26
00:00:57,070 --> 00:01:01,900
Un par tipisku tīmekļa vietnes vai tīmekļa
piemērošana, kāda veida informāciju,

27
00:01:01,900 --> 00:01:03,385
Konkrētāk, var jūs nodot?

28
00:01:03,385 --> 00:01:04,260
Mērķauditorija: [dzirdams]

29
00:01:04,260 --> 00:01:05,051
DAVID Malan: lietotāji.

30
00:01:05,051 --> 00:01:07,000
Tātad, kas ir lietotājs?

31
00:01:07,000 --> 00:01:09,765
>> Mērķauditorija: [dzirdams]

32
00:01:09,765 --> 00:01:11,640
DAVID Malan: Labi, reģistrēts
lietotājs no vietas.

33
00:01:11,640 --> 00:01:15,100
Un ko tas nozīmē
veikala lietotājiem 'informācija?

34
00:01:15,100 --> 00:01:17,260
Kas komponē lietotājs?

35
00:01:17,260 --> 00:01:18,331
Lietotājam ir, ko?

36
00:01:18,331 --> 00:01:19,206
Mērķauditorija: [dzirdams]

37
00:01:19,206 --> 00:01:21,040
DAVID Malan: Jā, personas
dati, un man patīk, ka.

38
00:01:21,040 --> 00:01:21,970
Būsim precīzāks.

39
00:01:21,970 --> 00:01:25,275
Tātad lietotājam parasti ir nosaukums,
ko vēl varētu lietotājam ir?

40
00:01:25,275 --> 00:01:26,150
Mērķauditorija: [dzirdams]

41
00:01:26,150 --> 00:01:29,130
DAVID Malan: An addr-- OK,
tā vārds, uzvārds.

42
00:01:29,130 --> 00:01:29,630
Tas ir labi.

43
00:01:29,630 --> 00:01:31,463
Patiesībā, pieņemsim noteikt
ka, jo tas notiek

44
00:01:31,463 --> 00:01:35,010
atvērt iespēju
diskusija, vēl, vēl.

45
00:01:35,010 --> 00:01:39,090
Vārds, uzvārds, dzimums.

46
00:01:39,090 --> 00:01:41,820

47
00:01:41,820 --> 00:01:43,481
ID sava veida.

48
00:01:43,481 --> 00:01:43,980
Kas vēl?

49
00:01:43,980 --> 00:01:45,438
Es dzirdēju kaut ko citu, pirms, too.

50
00:01:45,438 --> 00:01:51,600
E-pasta, pasta adrese.

51
00:01:51,600 --> 00:01:58,170
>> Tātad, pieņemsim pauze tur un tagad uzskata
nav tas, ko mēs esam uzglabāt datu bāzē,

52
00:01:58,170 --> 00:02:01,980
but-- un nav iemesls, kāpēc, jo tas ir iespējams,
skaidrs, ka tad, kad jūs reģistrēt lietotāju,

53
00:02:01,980 --> 00:02:03,730
Jūs vēlaties, lai atcerēties tos kādu laiku.

54
00:02:03,730 --> 00:02:05,480
Jūs nevēlaties, lai
tikai glabāt RAM

55
00:02:05,480 --> 00:02:08,690
un jābūt forgotten-- tā
pieņemsim koncentrēties uz how.

56
00:02:08,690 --> 00:02:11,700
>> Izrādās, ka
pasaule datu bāzes,

57
00:02:11,700 --> 00:02:14,410
tur ir vismaz divu veidu šajās dienās.

58
00:02:14,410 --> 00:02:20,010
Kaut ko sauc par SQL datu bāzi,
Strukturēts Query Language,

59
00:02:20,010 --> 00:02:24,770
vai, cutely nosaukts,
NoSQL, kas nav SQL.

60
00:02:24,770 --> 00:02:26,980
Un pēdējais ir
piemērs tam, ko varētu

61
00:02:26,980 --> 00:02:30,660
saukt objektorientēta,
vai objekts veikals, datu bāzes

62
00:02:30,660 --> 00:02:36,010
kas saglabā objektus, un nevis, attaisnojums
mani, kā mēs drīz redzēt, rindas.

63
00:02:36,010 --> 00:02:41,800
>> Tāpēc mēs koncentrējamies tikai brīdi par
pirmais no tiem, proti, SQL

64
00:02:41,800 --> 00:02:46,850
datu bāzē, ja tikai tāpēc, ka tas ir
tik pazīstami jau, ikvienam

65
00:02:46,850 --> 00:02:51,070
kurš ir izmantojis Excel vai
Google Sheets vai Apple

66
00:02:51,070 --> 00:02:53,740
Numuri vai jebkura standarta
izklājlapu programma,

67
00:02:53,740 --> 00:02:56,040
vai, līdzvērtīgi, vai
vairāk sophisticatedly,

68
00:02:56,040 --> 00:02:58,610
kaut kā Microsoft
Access vai Oracle

69
00:02:58,610 --> 00:03:03,890
vai MySQL vai PostgreSQL, kas visi
ir produktu nosaukumi implementāciju

70
00:03:03,890 --> 00:03:04,865
par šādu ideju.

71
00:03:04,865 --> 00:03:10,350
>> Relāciju datu bāze ir vienkārši
kaut kas ir rindas un kolonnas.

72
00:03:10,350 --> 00:03:12,850
Un rindas un kolonnas,
Es burtiski nozīmē kaut ko

73
00:03:12,850 --> 00:03:21,860
kā šis, lai kur mēs varētu būt
Nosaukums lauka un tā veidu vairāk nekā šeit.

74
00:03:21,860 --> 00:03:25,800
Un tiešām, ļaujiet man
Tagad sāk karti tiem.

75
00:03:25,800 --> 00:03:29,420
Tik tiešām, es nezinu
kāpēc es vērsa atsevišķu diagrammu.

76
00:03:29,420 --> 00:03:30,780
Pieņemsim saglabāt šo vienkāršs.

77
00:03:30,780 --> 00:03:34,830
>> Mums ir labi šeit
pirmsākumiem mūsu galda, kur

78
00:03:34,830 --> 00:03:40,150
šis ir nosaukums lauka
un tas ir datu tips,

79
00:03:40,150 --> 00:03:41,660
un veida es domāju sekojošo.

80
00:03:41,660 --> 00:03:45,510
Vai tas ir skaitlis, tas ir virkne,
īss string kā vārds,

81
00:03:45,510 --> 00:03:49,340
tas ir punkts, tas ir
bināro dati, piemēram, attēlu?

82
00:03:49,340 --> 00:03:51,980
Un pieņemsim tikai kaitināt šis
izņemot tikai brīdi.

83
00:03:51,980 --> 00:03:57,575
Tātad vispirms nosaukums, numurs,
string, liels rieciens text--

84
00:03:57,575 --> 00:03:58,450
Mērķauditorija: [dzirdams]

85
00:03:58,450 --> 00:03:59,616
DAVID Malan: Jā, tā virknes.

86
00:03:59,616 --> 00:04:04,744
Un datu bāzē kontekstā, mēs
parasti saucam par char lauku.

87
00:04:04,744 --> 00:04:07,660
Es ņemšu tikai teikt char tagad, bet mēs esam
gatavojas uzlabot šo brīdi.

88
00:04:07,660 --> 00:04:09,180
Character lauks.

89
00:04:09,180 --> 00:04:11,365
Uzvārds ir iespējams tāds pats.

90
00:04:11,365 --> 00:04:11,865
Dzimums?

91
00:04:11,865 --> 00:04:16,230

92
00:04:16,230 --> 00:04:18,310
>> Vīrietis vai sieviete, tāpēc
varētu būt char lauks.

93
00:04:18,310 --> 00:04:21,380
Tas varētu būt vai nu piedāvājumu, likt pēdiņas beigās
"Vīrietis" vai citātu, likt pēdiņas beigās "sieviešu"

94
00:04:21,380 --> 00:04:23,650
vai tas varētu būt m vai f.

95
00:04:23,650 --> 00:04:26,540
Ja jūs vēlaties būt vairāk iekļaujoša,
Jums var būt nepieciešams trešo vērtību

96
00:04:26,540 --> 00:04:28,640
vai kādu citu lauka veida vispār.

97
00:04:28,640 --> 00:04:31,350
Un, lai jūs varētu izmantot true false.

98
00:04:31,350 --> 00:04:35,036
Lauks varētu nosaukt vīrietis, un
tad jūs varētu teikt, patiess vai nepatiess.

99
00:04:35,036 --> 00:04:38,160
Bet tas ne vienmēr uztveršanas
visu informāciju, jūs varētu vēlēties.

100
00:04:38,160 --> 00:04:41,118
>> Tātad izrādās, tur ir vēl viens veids
lauka, kas varētu būt noderīga šeit

101
00:04:41,118 --> 00:04:46,040
tipisks datu bāzē, ko sauc par
ENUM, kur tas ir raksturs lauks,

102
00:04:46,040 --> 00:04:50,480
bet jūs, dizainers, nokļūt
uzskaitīt iespējamās vērtības,

103
00:04:50,480 --> 00:04:54,630
piemēram, quote, likt pēdiņas beigās "vīriešu", citēju,
likt pēdiņas beigās "sieviešu" un tā tālāk.

104
00:04:54,630 --> 00:04:57,620
Tā, ka kāda vērtība
ir jūsu datu bāzē,

105
00:04:57,620 --> 00:05:00,670
patiešām raksturs bāzes, bet
tas ir viens no šīm vērtībām.

106
00:05:00,670 --> 00:05:03,520
Mēs, iespējams, negribētu
enum par vārda vai uzvārda.

107
00:05:03,520 --> 00:05:05,630
Pretējā gadījumā mēs būtu
uzskaitīt, kā nosaukums

108
00:05:05,630 --> 00:05:09,570
izriet no, burtiski ik
iespējams vārds un uzvārds.

109
00:05:09,570 --> 00:05:13,960
>> Labi, tā ID Kādam būtu ID būt?

110
00:05:13,960 --> 00:05:15,200
Jā, tāpēc varbūt vairāki.

111
00:05:15,200 --> 00:05:17,870
Tātad pieņemsim stick ar
ka tagad, skaits.

112
00:05:17,870 --> 00:05:22,010
Un pēc skaita, skaits ir
pārāk plašs tagad.

113
00:05:22,010 --> 00:05:23,900
Gada beigās otro
diena, es jūtos kā mēs

114
00:05:23,900 --> 00:05:25,280
būtu nedaudz precīzāks.

115
00:05:25,280 --> 00:05:29,280
Skaits varētu nozīmēt, piemēram, to
varētu būt kaut kas līdzīgs 1.236.

116
00:05:29,280 --> 00:05:31,500
Un tas ir iespējams, nav
Ko mēs saprotam ar ID.

117
00:05:31,500 --> 00:05:34,635
Ko mēs, iespējams, nozīmē, ar ID?

118
00:05:34,635 --> 00:05:36,382
>> Mērķauditorija: [dzirdams]

119
00:05:36,382 --> 00:05:38,590
DAVID Malan: Ak, OK, lai
varbūt tas nav pat vairāki.

120
00:05:38,590 --> 00:05:42,840
Varbūt tas tiešām unikāls identifikators
ka ir virkne, piemēram, lietotāja vārdu.

121
00:05:42,840 --> 00:05:44,580
Tātad pilnīgi, varētu būt.

122
00:05:44,580 --> 00:05:46,730
Es domāju, ka kāds, iespējams,
nozīmēja ciparu, though.

123
00:05:46,730 --> 00:05:48,460
Tātad, pieņemsim palikt ar to.

124
00:05:48,460 --> 00:05:49,320
Kādu numuru?

125
00:05:49,320 --> 00:05:51,960
Kas ir vairāk precise-- vesels skaitlis.

126
00:05:51,960 --> 00:05:56,710
Tātad skaitlis, piemēram, 0, 1, 2, 3,
tāpēc mēs dēvējam vesels skaitlis.

127
00:05:56,710 --> 00:05:58,909
Un pat tad, es varētu
tikt piekasīgiem, tas ir

128
00:05:58,909 --> 00:06:00,700
nav īsti tikai
Kopumā skaitlis vēlaties.

129
00:06:00,700 --> 00:06:04,340
Jūs, iespējams, nevēlaties negatīvas vērtības,
tikai tāpēc, ka tas vienkārši jūtas dīvaini.

130
00:06:04,340 --> 00:06:06,070
Jūs, iespējams, vēlas pozitīvi veseli skaitļi.

131
00:06:06,070 --> 00:06:07,920
Tātad jūs varat izteikt
ka datu bāzē,

132
00:06:07,920 --> 00:06:09,450
bet tagad, mēs sakām skaitlim.

133
00:06:09,450 --> 00:06:10,650
>> E-pasts?

134
00:06:10,650 --> 00:06:13,550
Tas ir iespējams just-- ko?

135
00:06:13,550 --> 00:06:14,460
>> Mērķauditorija: [dzirdams]

136
00:06:14,460 --> 00:06:16,980
>> DAVID Malan: Tas ir e-pasts,
bet tas ir rakstzīmes, vai ne?

137
00:06:16,980 --> 00:06:19,813
Tā vienkārši ir bailīgs raksturs, piemēram,
par "at" simbols vai kaut kas cits,

138
00:06:19,813 --> 00:06:21,580
bet tas joprojām raksturs lauks.

139
00:06:21,580 --> 00:06:23,900
Un pasta adrese?

140
00:06:23,900 --> 00:06:25,360
Character lauks.

141
00:06:25,360 --> 00:06:31,400
Tātad tas ir jauki sākums, bet
pieņemsim būt nedaudz precīzāks tagad.

142
00:06:31,400 --> 00:06:34,540
>> Tātad izrādās, ka
datubāze, jūs bieži

143
00:06:34,540 --> 00:06:39,120
ir izvēle pār smalkāku
versijas šīm lietām.

144
00:06:39,120 --> 00:06:44,330
Patiesībā, tipisks SQL datu bāzi, SQL,
vai vispārīgāk, relāciju datu bāzes,

145
00:06:44,330 --> 00:06:46,680
datubāzes ar rindām
un kolonnas, jūs bieži

146
00:06:46,680 --> 00:06:53,610
nokļūt norādīt ne tikai no veida
field-- ļaujiet man veikt dažas telpas here--

147
00:06:53,610 --> 00:06:56,600
bet arī garumu.

148
00:06:56,600 --> 00:06:59,900
>> Tātad, cik ilgi ir vārds?

149
00:06:59,900 --> 00:07:07,060
Es domāt, D-A-V-I-D. Labi, sapratu es
iespējams, tikai aizvaino, piemēram, pusi

150
00:07:07,060 --> 00:07:11,260
cilvēku telpā, pa labi,
jo jūsu vārdi ir ilgāks par pieciem

151
00:07:11,260 --> 00:07:16,608
burti, tāpēc piecas šķiet mazliet egoistiski
un naivs, lai to, kas ir izdevīgāks?

152
00:07:16,608 --> 00:07:19,320

153
00:07:19,320 --> 00:07:24,330
10, viss labi, un es domāju, ka
mēs esam OK telpā.

154
00:07:24,330 --> 00:07:26,254
13?

155
00:07:26,254 --> 00:07:27,541
30?

156
00:07:27,541 --> 00:07:29,540
Kāpēc es ņemiet līdzi
pieeja agrāk, kad mēs

157
00:07:29,540 --> 00:07:31,081
runājām par masīvu un atmiņu?

158
00:07:31,081 --> 00:07:32,450
Kāpēc es tikai saku, piemēram, 1000?

159
00:07:32,450 --> 00:07:35,260
Neviens vārds notiek
būt garāks par 1000.

160
00:07:35,260 --> 00:07:36,706
Atgrūst.

161
00:07:36,706 --> 00:07:38,005
>> Mērķauditorija: [dzirdams]

162
00:07:38,005 --> 00:07:40,130
DAVID Malan: Jā, tas ir
izšķērdīgs, pa labi, it īpaši

163
00:07:40,130 --> 00:07:44,630
ja lielākā daļa vārdi ir tikai piecas vai 10, vai
15 rakstzīmes, kas ir ļoti izšķērdīgs.

164
00:07:44,630 --> 00:07:45,810
Tātad, jūs zināt, ko?

165
00:07:45,810 --> 00:07:48,020
Tas ir sava veida grūti jautājums.

166
00:07:48,020 --> 00:07:51,721
Tagad mēs varam noteikti analizēt angļu
un jebkurā citā valodā ir vārdi

167
00:07:51,721 --> 00:07:54,470
un izdomāt, labi, kas ir
average-- vidēji nav īsti

168
00:07:54,470 --> 00:07:57,150
palīdzēt us-- kāda ir max ir
iespējams, ko mēs patiešām vēlamies.

169
00:07:57,150 --> 00:07:59,920
Bet izrādās, mums pat ir
daži izvēle pār veidu šeit.

170
00:07:59,920 --> 00:08:03,400
>> Tipisks SQL datu bāzi, jūs
ir kaut ko sauc char lauks

171
00:08:03,400 --> 00:08:07,505
un arī varchar, V-A-R,
mainīgo char laukā.

172
00:08:07,505 --> 00:08:08,630
Un atšķirība ir šī.

173
00:08:08,630 --> 00:08:12,400
Char lauks, jūs dizainers,
ir jānorāda iepriekš

174
00:08:12,400 --> 00:08:14,900
precīzs garums no lauka.

175
00:08:14,900 --> 00:08:20,530
Tātad varbūt vārds
tāpat 20 jūtas veida droši.

176
00:08:20,530 --> 00:08:23,950
Iespējams, ir darīt daži googling līdz
redzētu, vai tas ir pietiekami reāli droši.

177
00:08:23,950 --> 00:08:26,910
Tur droši vien vārdu ar 21
zīmes, bet tagad, pieņemsim, 20

178
00:08:26,910 --> 00:08:27,620
ir droša.

179
00:08:27,620 --> 00:08:30,070
>> Char lauks nozīmētu
datubāzē, kas jums

180
00:08:30,070 --> 00:08:33,289
ir, izmantojot 20 un vienmēr 20 rakstzīmes.

181
00:08:33,289 --> 00:08:37,419
Tagad, ja tas ir tikai D-A-V-I-D, 15 no tiem,
ir tikai būs tukšas zīmes,

182
00:08:37,419 --> 00:08:40,450
bet jūs joprojām izmantojot visus 20 baiti.

183
00:08:40,450 --> 00:08:46,302
Varchar lauks, savukārt, nozīmē, ka
string vajadzētu būt līdz 20 rakstzīmēm

184
00:08:46,302 --> 00:08:48,260
bet, ja tas ir tikai pieci,
jūs tikai gatavojas izmantot

185
00:08:48,260 --> 00:08:51,270
pieci, vai varbūt seši priekšlikums
īpašā vērtība gada beigās,

186
00:08:51,270 --> 00:08:54,980
piemēram, ka 0 mēs runājām, ka
nozīmē beigas rakstura

187
00:08:54,980 --> 00:08:56,790
secība atmiņā.

188
00:08:56,790 --> 00:08:59,950
>> Tātad, ja jūs domājat
jūs varētu izvēlēties char

189
00:08:59,950 --> 00:09:05,240
versus varchar, ņemot vērā, ka kompromisu?

190
00:09:05,240 --> 00:09:09,321
Char izmanto šo daudz rakstzīmes, varchar
izmanto ne vairāk, nekā daudzi rakstzīmes.

191
00:09:09,321 --> 00:09:10,196
Mērķauditorija: [dzirdams]

192
00:09:10,196 --> 00:09:13,859

193
00:09:13,859 --> 00:09:16,900
DAVID Malan: Labi, ja jūs zināt
garums string diezgan pārliecinoši

194
00:09:16,900 --> 00:09:19,316
tikai izmantot char, "iemesls, ja
jūs zināt, tikai likt to uz leju.

195
00:09:19,316 --> 00:09:23,390
Un varbūt tas ir taisnība par rāvējslēdzēju
kods, ASV, vismaz, 02138,

196
00:09:23,390 --> 00:09:26,660
tas vienmēr būs pieci
zīmes, līdz jūs pievienot domuzīme četri.

197
00:09:26,660 --> 00:09:29,750
Bet jūs varētu būt dažas vērtības
ko jūs vienmēr zināt garumu.

198
00:09:29,750 --> 00:09:32,310
Vai varbūt valsts simboli,
piemēram, NY uz Ņujorku,

199
00:09:32,310 --> 00:09:33,811
un MA par Masačūsetsā ASV.

200
00:09:33,811 --> 00:09:36,560
Varbūt jums ir dažas situācijas,
kur tas ir pilnīgi pamatoti,

201
00:09:36,560 --> 00:09:39,520
bet līdz tam loģika, kāpēc
mēs pat overthinking šo?

202
00:09:39,520 --> 00:09:41,800
Kāpēc ne mēs tikai izmantot
varchar un tad mēs vienkārši

203
00:09:41,800 --> 00:09:46,730
vienmēr izmantojiet divas rakstzīmes vienalga, vai
vienmēr izmantojiet piecas rakstzīmes anyway?

204
00:09:46,730 --> 00:09:50,300
Kāpēc ne tikai ietaupīt varchar par
viss, ko šī loģika?

205
00:09:50,300 --> 00:09:51,677
Ir jābūt nozvejas.

206
00:09:51,677 --> 00:09:52,552
Mērķauditorija: [dzirdams]

207
00:09:52,552 --> 00:09:54,952

208
00:09:54,952 --> 00:09:56,660
DAVID Malan: Varētu
rakstīt kaut ko nepareizi.

209
00:09:56,660 --> 00:09:58,090
Tāpēc, ka ir taisnība.

210
00:09:58,090 --> 00:10:01,030
Bet pat tad, viņi nevar izmantot
vairāk atmiņas nekā es piešķirt.

211
00:10:01,030 --> 00:10:03,340
Man joprojām ir galīgā
saka garumā,

212
00:10:03,340 --> 00:10:06,780
tāpēc tās nevar nejauši izdarīt
ka kļūda, bet labs doma.

213
00:10:06,780 --> 00:10:10,510
Tas ir vairāk izsmalcināts, bet tas ir ļoti saistīta
mūsu diskusiju, faktiski, no masīvi

214
00:10:10,510 --> 00:10:12,390
un saistīti saraksti agrāk.

215
00:10:12,390 --> 00:10:16,290
>> Izrādās, ka datu bāzē, ja
tas ir zināms, ka visi no vērtībām ir

216
00:10:16,290 --> 00:10:19,250
fiksēta garuma, pat tad, ja
dažas no šīm vērtībām ir tukšs,

217
00:10:19,250 --> 00:10:22,484
veida estētiski tukšs,
D-A-V-I-D un pēc tam 15 sagataves,

218
00:10:22,484 --> 00:10:24,650
izrādās, ka, ja katrs
lauks ir vienāda garuma,

219
00:10:24,650 --> 00:10:28,670
daudz, piemēram, masīvs bija visu savu sīkumi
atpakaļ atpakaļ atpakaļ atpakaļ, lai

220
00:10:28,670 --> 00:10:33,480
jūs varētu tikai plus 1, lai saņemtu uz nākamo
vērtība, pati ideja datu bāzes tabulā.

221
00:10:33,480 --> 00:10:37,550
Ja visas jūsu raksturu
virknes garums ir tāds pats,

222
00:10:37,550 --> 00:10:39,390
jums ir, ko sauc par brīvpiekļuves.

223
00:10:39,390 --> 00:10:41,850
Ja visas stīgas ir
garums 20, jūs ne tikai

224
00:10:41,850 --> 00:10:45,230
do plus 1 jūs vienkārši darīt plus
20, plus 20, plus 20, plus 20,

225
00:10:45,230 --> 00:10:48,775
un jūs varat ļoti ātri ritināt
vai pārlūkot visus datus.

226
00:10:48,775 --> 00:10:54,420
>> Mainīgais char lauks, gluži pretēji,
ne vienmēr ir 20 rakstzīmes.

227
00:10:54,420 --> 00:10:58,000
Tas varētu būt 20 un pēc tam
15 un pēc tam 19 un pēc tam 10,

228
00:10:58,000 --> 00:11:00,720
un tādēļ, ja jūs vēlaties, lai meklētu
caur to, jūs varat ne tikai akli

229
00:11:00,720 --> 00:11:03,050
pievieno 20 baiti, lai saņemtu uz nākamo.

230
00:11:03,050 --> 00:11:07,280
Jūs burtiski ir meklēt, izmantojot
jo mala datu struktūru,

231
00:11:07,280 --> 00:11:08,340
ja jūs, ir noplīsis.

232
00:11:08,340 --> 00:11:11,480
Tā veida iet un, balstoties
uz faktisko garumu virknes.

233
00:11:11,480 --> 00:11:14,460
Tātad, kad jūs zināt garumu, kā
Kareem saka, izmantojiet char lauku,

234
00:11:14,460 --> 00:11:16,460
jo jums iegūt, ka
efektivitāte ir

235
00:11:16,460 --> 00:11:19,170
iespēja meklēt caur to ātrāk
ja jūs meklējat datiem,

236
00:11:19,170 --> 00:11:20,550
citādi izmantot mainīgo.

237
00:11:20,550 --> 00:11:24,450
>> Diemžēl, man nav labu atbildi
lai cik ilgi vārds būtu,

238
00:11:24,450 --> 00:11:26,360
bet par kaut ko līdzīgu
nosaukumu, es teiktu

239
00:11:26,360 --> 00:11:28,470
varchar ir kopīgs
jo tas nav gatavojas

240
00:11:28,470 --> 00:11:30,430
būt fiksēta garuma ikvienam.

241
00:11:30,430 --> 00:11:33,650
20, es nezinu, 20
jūtas nedaudz saspringts.

242
00:11:33,650 --> 00:11:36,460
Pieņemsim tikai teikt, 50, 50.

243
00:11:36,460 --> 00:11:39,210
Tas nav īsti izmaksās, ka
daudz vairāk ko teikt 40 50 vietā,

244
00:11:39,210 --> 00:11:41,260
bet kādā brīdī jums ir nepieciešams
spriest zvanu.

245
00:11:41,260 --> 00:11:43,090
>> Ļoti bieži, atklāti sakot,
par [? vēsturiskā?]

246
00:11:43,090 --> 00:11:47,670
iemeslu dēļ, pat ja tas ir pārmērīgs,
ti 255, jo kādu laiku atpakaļ,

247
00:11:47,670 --> 00:11:51,440
tautas datu bāzu sistēmas, piemēram,
MySQL, bezmaksas atvērtā koda rīks

248
00:11:51,440 --> 00:11:53,790
ka daudzi uzņēmumi
tāpat arī Facebook lieto,

249
00:11:53,790 --> 00:11:56,654
tas bija maksimālais noklusējuma
lai cilvēki vienkārši gāja ar to.

250
00:11:56,654 --> 00:11:59,070
Tātad nav nesaprātīgs, bet mēs
izmantot nedaudz vairāk intuīcija

251
00:11:59,070 --> 00:12:02,970
un teikt, pārliecināts 50, kas ir
iespējams, mazliet pārmērīgs.

252
00:12:02,970 --> 00:12:05,720
>> Dzimums, man patīk enum,
un tā mēs tāpēc varam

253
00:12:05,720 --> 00:12:08,760
uzskaitīt vīrietis vai sieviete,
vai varbūt efektīvāk,

254
00:12:08,760 --> 00:12:13,420
m vai f vai kādu citu Symbology, bet
enum jūtas kā laba izvēle tur.

255
00:12:13,420 --> 00:12:16,740
Lai būtu skaidrs, dzimums
varētu būt tikai varchar,

256
00:12:16,740 --> 00:12:19,090
un mēs varētu tikai visu
vienojas par jauki cilvēki,

257
00:12:19,090 --> 00:12:21,010
vienmēr likt pašas vērtības tur.

258
00:12:21,010 --> 00:12:22,720
Vīrietis vai sieviete vai plauktiņš.

259
00:12:22,720 --> 00:12:27,800
>> Bet problēma, tad ir tā, ka mēs varētu
kļūdīties, jo [nedzirdama] ierosināja

260
00:12:27,800 --> 00:12:29,140
agrāk citā kontekstā.

261
00:12:29,140 --> 00:12:32,780
Ja mēs kļūdāties, mēs varētu iegūt
nepareizas vērtības mūsu datu bāzē.

262
00:12:32,780 --> 00:12:36,320
Tātad, kas ir jauki par datu bāzēm
piemēram, Oracle un MySQL un citiem,

263
00:12:36,320 --> 00:12:39,280
ir tas, ka jums ir šis pēdējais
slānis aizstāvības kur

264
00:12:39,280 --> 00:12:43,010
Jūsu DBA, datu bāzes administrators,
kurš ir projektēšana šo tabulu kā mēs

265
00:12:43,010 --> 00:12:46,440
ir mutiski, varētu likt
vietā ENUM, kas

266
00:12:46,440 --> 00:12:51,250
aizsargā pret to, norādot
vīrietis, sieviete, un tāpēc neviens

267
00:12:51,250 --> 00:12:54,230
cits neviens programmētājs var nejauši
ievietot jebkuru citu vērtību.

268
00:12:54,230 --> 00:12:55,480
Tātad tas varētu būt laba lieta.

269
00:12:55,480 --> 00:12:56,660
Tas ir līdzeklis.

270
00:12:56,660 --> 00:13:00,760
>> Tātad ID, pieņemot, ka ciparu ID, to
iespējams, būtu pozitīvs vesels skaitlis.

271
00:13:00,760 --> 00:13:04,380
Un mēs dažreiz darīt ir
iespēja apspriest garumu.

272
00:13:04,380 --> 00:13:06,830
Jūs nevarētu parasti
norādiet numuru šeit,

273
00:13:06,830 --> 00:13:11,310
jūs tā vietā norādīt
tas ir int, vai liels int,

274
00:13:11,310 --> 00:13:12,980
jo viņi parasti sauc.

275
00:13:12,980 --> 00:13:18,840
Bet parasti, vesels skaitlis
būtu, teiksim, 4 baiti.

276
00:13:18,840 --> 00:13:23,694
Un, ja tas ir 4 baiti,
tas, cik daudz bitu?

277
00:13:23,694 --> 00:13:24,630
>> Mērķauditorija: [dzirdams]

278
00:13:24,630 --> 00:13:26,610
>> DAVID Malan: 32 biti.

279
00:13:26,610 --> 00:13:30,270
Tik, cik daudz lietotāju mēs varam būt
Mūsu datu bāzē, ja tie visi ir ID

280
00:13:30,270 --> 00:13:33,320
un šis ID ir unikāls?

281
00:13:33,320 --> 00:13:36,780
32 biti nozīmē, ka mums ir modeļus
ir viens, divi, trīs, četri, five--

282
00:13:36,780 --> 00:13:41,000
tik, cik daudz dažādu modeļi nullēm
un tiem var jums ir, ja ir 32?

283
00:13:41,000 --> 00:13:43,235
Tas ir tas pats, kas
jautā, kas ir divas līdz 32?

284
00:13:43,235 --> 00:13:46,472

285
00:13:46,472 --> 00:13:48,430
Tas ir liels skaits, kas
Es nevaru gluži iegūt tiesības,

286
00:13:48,430 --> 00:13:50,270
bet es zinu, tas ir aptuveni 4000000000.

287
00:13:50,270 --> 00:13:53,970
Tātad tas nozīmē, ka jūsu datu bāzes tabulu var
ir četri miljardi lietotāju, un tas arī viss.

288
00:13:53,970 --> 00:13:56,410
>> Tātad šis ir interesants
dizains Ietekme.

289
00:13:56,410 --> 00:14:00,840
Pienācīgas uzņēmumu skaits
nolēmām, varbūt ne tik daudz

290
00:14:00,840 --> 00:14:04,860
to lietotājiem galda, jo, ņemot
4 miljardi lietotājiem ir reta problēma.

291
00:14:04,860 --> 00:14:08,410
Tas ir sava veida Facebook stila
problēma, nav tipisks uzņēmums problēma.

292
00:14:08,410 --> 00:14:12,670
Bet varbūt, ja jums ir darījumu žurnālus
vai kāda veida dati, kas pastāvīgi

293
00:14:12,670 --> 00:14:15,610
izpaužas rakstīts savā datu bāzē
ka pilnīgi varētu būt miljardiem

294
00:14:15,610 --> 00:14:18,900
un miljardiem rindām, un
Jūs lietojat vesels skaitlis par to,

295
00:14:18,900 --> 00:14:22,750
kas notiek, tiklīdz gadās
jums rindu skaits 4 miljardus

296
00:14:22,750 --> 00:14:26,210
un tad jūs mēģināt ievietot
4000000000. un 1, tā runāt?

297
00:14:26,210 --> 00:14:29,610
Es esmu vienkāršojot ciparus mazliet.

298
00:14:29,610 --> 00:14:33,740
>> Jūs varat samazināt, es domāju tevi
ir rīkoties tā kaut kā.

299
00:14:33,740 --> 00:14:37,910
Un ko dators varētu parasti darīt,
domāju par to pat no šī rīta,

300
00:14:37,910 --> 00:14:42,430
ja jums ir 4 bitu vērtību
piemēram, 1, 1, 1, 1, kurā,

301
00:14:42,430 --> 00:14:44,920
tikai, lai tie no rīta
kopā pēcpusdienā, ko

302
00:14:44,920 --> 00:14:48,369
tas skaitlis pārstāv bināro?

303
00:14:48,369 --> 00:14:49,410
Labi, mēs vieglāk.

304
00:14:49,410 --> 00:14:53,310
Ko šo numuru
pārstāv bināro?

305
00:14:53,310 --> 00:14:56,794
Labi, mēs vieglāk, ko
tas pārstāv bināro?

306
00:14:56,794 --> 00:14:57,460
Mērķauditorija: Trīs.

307
00:14:57,460 --> 00:14:59,670
DAVID Malan: Trīs, jo
mums ir tiem column--

308
00:14:59,670 --> 00:15:00,450
[Smiekli]

309
00:15:00,450 --> 00:15:01,350
Whew!

310
00:15:01,350 --> 00:15:03,980
Mums bija tie kolonnu
un veica šo divu reģistru kolonna.

311
00:15:03,980 --> 00:15:07,250
Tātad pieņemsim, ka, protams, mūsu
[? aramzeme?] nebija 32 biti,

312
00:15:07,250 --> 00:15:13,440
bet tas bija divi biti, mēs varam
skaits no lietotāju skaits ir 0, 1, 2, 3,

313
00:15:13,440 --> 00:15:18,040
un tad mēs esam sava veida
atpakaļ uz lietotāja 00. vēlreiz.

314
00:15:18,040 --> 00:15:19,739
Tātad šis ir tas, kas parasti notiek.

315
00:15:19,739 --> 00:15:22,780
Ja esat kādreiz dzirdējuši expression--
droši vien nav, bet, ja jūs have--

316
00:15:22,780 --> 00:15:26,500
skaitlis pārplūdes, kur jums
saglabāt flipping visas jūsu bitiem

317
00:15:26,500 --> 00:15:29,640
būt iespējamie lielākās vērtības,
un tad jūs no bitiem,

318
00:15:29,640 --> 00:15:30,850
kādi būtu parasti notiktu?

319
00:15:30,850 --> 00:15:32,280
Kāpēc es saku 00?

320
00:15:32,280 --> 00:15:33,220
Nu, tas ir trīs.

321
00:15:33,220 --> 00:15:34,230
Kā es varu pārstāvēt 4?

322
00:15:34,230 --> 00:15:36,890

323
00:15:36,890 --> 00:15:38,915
Kā es varu pārstāvēt
par numuru 4 binārā?

324
00:15:38,915 --> 00:15:39,790
Mērķauditorija: [dzirdams]

325
00:15:39,790 --> 00:15:41,780
DAVID Malan: One-- yeah,
nesaku 100 per se,

326
00:15:41,780 --> 00:15:44,190
jo tas ir nepareizi
nozīmes, bet 1-0-0.

327
00:15:44,190 --> 00:15:48,920
Tā, ka numurs 1-0-0 patiešām
pareizs, bet, ja jums ir tikai divi biti,

328
00:15:48,920 --> 00:15:50,820
ko jūs esat īsti darīt?

329
00:15:50,820 --> 00:15:53,219
Jūs esat pārnest uz 00.

330
00:15:53,219 --> 00:15:54,760
Un tiešām, tas, kas notiktu.

331
00:15:54,760 --> 00:15:56,884
Patiesībā, jūs varat domāt
par to vairāk familiarly.

332
00:15:56,884 --> 00:15:59,350
Ja jūs atceraties, ko,
pirms 16 gadiem, pasaule

333
00:15:59,350 --> 00:16:03,380
bija paredzēts beigt kad
Y2K problēma ir noticis.

334
00:16:03,380 --> 00:16:04,330
Kāpēc tā?

335
00:16:04,330 --> 00:16:08,170
Nu lielākā daļa datoru, lai
saprātīgi lēmumi,

336
00:16:08,170 --> 00:16:15,320
Tika uzglabātu skaitļus patīk
1975 gads vai 1999 gads

337
00:16:15,320 --> 00:16:19,010
, tikai ar diviem cipariem
in datora atmiņā.

338
00:16:19,010 --> 00:16:21,950
Tātad, protams, to, kas notiek
kad jūs nokļūt līdz 2000. gadam,

339
00:16:21,950 --> 00:16:25,790
jums iet uz to, vai drīzāk, yeah.

340
00:16:25,790 --> 00:16:30,120
Tātad jūs iet uz 2000. gadu, bet, ja
jūs tikai ar diviem cipariem tas izskatās

341
00:16:30,120 --> 00:16:32,660
kā gada 00, un
lai jūs esat pārnest.

342
00:16:32,660 --> 00:16:36,820
Un tas ir iemesls, kāpēc daudz sistēmu
kas vajadzīga, lai tiktu atjaunināti tajā laikā.

343
00:16:36,820 --> 00:16:42,500
>> Tātad ar to teica, uzņēmumiem, piemēram,
Facebook gatavojoties pret to.

344
00:16:42,500 --> 00:16:46,147
Tāpēc vienīgais veids, kā rīkoties
situācija, godīgi sakot, ir paredzēt to.

345
00:16:46,147 --> 00:16:47,980
Vai tīrākais veids, lai
rīkoties ar šo situāciju

346
00:16:47,980 --> 00:16:50,330
ir paredzēt to, lai jums nav
ir veikt izmaiņas vēlāk.

347
00:16:50,330 --> 00:16:51,970
Tā vietā, 8 baitiem, jūs zināt, ko?

348
00:16:51,970 --> 00:16:54,261
Es esmu būs tālredzīgā
šeit, pat ja tas ir

349
00:16:54,261 --> 00:16:56,760
nedaudz optimistisks, ka
mēs esam nāksies 4 miljardus

350
00:16:56,760 --> 00:16:58,850
un 1 lietotāji uz mūsu mājas lapā.

351
00:16:58,850 --> 00:17:01,790
Bet pieņemsim tikai izmantot 8 baiti, vai
64 biti, kas parasti būtu

352
00:17:01,790 --> 00:17:05,640
sauc liels skaitlis, ļoti tehniski.

353
00:17:05,640 --> 00:17:10,280
Un tas vienkārši nozīmē, ka jūs varat būt
vēl vairāk cipari jūsu numuru.

354
00:17:10,280 --> 00:17:12,599
Bet tas ir svarīgs
lēmums dizains,

355
00:17:12,599 --> 00:17:16,400
jo, ja jūs izvēlaties numuru,
ir pārāk maz biti izteiksmīgumu

356
00:17:16,400 --> 00:17:19,089
jūs patiešām varētu radīt
bug jūsu programmatūru.

357
00:17:19,089 --> 00:17:21,750
>> Labi, tāpēc pieņemsim satīt
ar e-pastu un pasta adresi.

358
00:17:21,750 --> 00:17:26,369
Tātad e-pastu, cik ilgi
e-pasta adrese ir?

359
00:17:26,369 --> 00:17:26,869
50.

360
00:17:26,869 --> 00:17:29,220
Man tiešām nav ne jausmas, bet tas ir
iespējams, kaut kas līdzīgs, ka,

361
00:17:29,220 --> 00:17:32,261
jo citādi neviens gatavojas
rakstīt jums, ja tā kļūst pārāk garš, tāpēc 50,

362
00:17:32,261 --> 00:17:33,360
iesim ar to tagad.

363
00:17:33,360 --> 00:17:35,770
Pasta adrese, cik ilgi tas būtu?

364
00:17:35,770 --> 00:17:38,325

365
00:17:38,325 --> 00:17:39,200
Mērķauditorija: [dzirdams]

366
00:17:39,200 --> 00:17:41,900

367
00:17:41,900 --> 00:17:43,890
>> DAVID Malan: Tas nav
tikai zip kodu, though.

368
00:17:43,890 --> 00:17:45,720
Pasta adrese, es dzirdēju.

369
00:17:45,720 --> 00:17:50,720
Tātad tas ir kā 1 BRATTLE laukumā,
komats, Cambridge Mass., komats, 02138.

370
00:17:50,720 --> 00:17:53,860
Un patiesībā, ļaujiet man tikai pull
up nedaudz darblapā šeit.

371
00:17:53,860 --> 00:17:56,510
Tas uzskata, tāpat kā tas ir
neizmantota iespēja.

372
00:17:56,510 --> 00:18:01,480
Ja mums ir 1 BRATTLE Square,
komats, Cambridge MA 02138,

373
00:18:01,480 --> 00:18:04,510
Es jūtos kā mēs varam darīt labāk
nekā tikai pasta adresi.

374
00:18:04,510 --> 00:18:07,100
Kāpēc nav mēs eksplodēt tas mazliet?

375
00:18:07,100 --> 00:18:08,030
Ko es saņemu pie?

376
00:18:08,030 --> 00:18:10,970
Ko mums vajadzētu nevis būt
mūsu rindās šeit, varbūt?

377
00:18:10,970 --> 00:18:12,260
>> Mērķauditorija: [dzirdams]

378
00:18:12,260 --> 00:18:17,579
>> DAVID Malan: Jā, tāpēc pieņemsim
to sauc street_number,

379
00:18:17,579 --> 00:18:20,620
un pasvītrojums ir tikai kopīgs
veids, kam kas izskatās kā telpu,

380
00:18:20,620 --> 00:18:22,360
bet tas nav, faktiski.

381
00:18:22,360 --> 00:18:26,240
Ielu, un pēc tam city-- žēl?

382
00:18:26,240 --> 00:18:28,440
>> Mērķauditorija: [dzirdams]

383
00:18:28,440 --> 00:18:29,690
DAVID Malan: Mēs varētu darīt.

384
00:18:29,690 --> 00:18:30,702
vienā rindā, līnija divi.

385
00:18:30,702 --> 00:18:32,410
Kāpēc mēs turpināsim
tas vienkārši tagad,

386
00:18:32,410 --> 00:18:34,840
bet tas ir absolūti
pieņemams lēmums.

387
00:18:34,840 --> 00:18:38,180
Un tad valsts, un tad pieņemsim
būt nedaudz ASV orientētus tagad

388
00:18:38,180 --> 00:18:42,040
un vienkārši darīt zip kodu, tikai tāpēc, ka
tas būs radīt interesantu kļūda

389
00:18:42,040 --> 00:18:43,090
vai problēma šeit.

390
00:18:43,090 --> 00:18:44,655
Tātad pieņemsim, ka tagad mūsu adrese.

391
00:18:44,655 --> 00:18:47,280
Tas ir nedaudz vairāk kaitinošas, ka
mums ir visas šīs vairāk laukus,

392
00:18:47,280 --> 00:18:49,200
bet tagad mēs varam atzīmēt
lietas mazliet labāk.

393
00:18:49,200 --> 00:18:53,210
>> Tāpēc tagad street skaits, iespējams,
nevajadzētu būt char, ja tā?

394
00:18:53,210 --> 00:18:54,835
Kas tas būtu?

395
00:18:54,835 --> 00:18:55,710
Mērķauditorija: [dzirdams]

396
00:18:55,710 --> 00:18:57,835
DAVID Malan: Varbūt, vairāki
tāpat veselam skaitlim atkal?

397
00:18:57,835 --> 00:19:00,170
Liels vesels skaitlis?

398
00:19:00,170 --> 00:19:02,170
Jūs, iespējams, nedzīvo
4 miljardi Main Street

399
00:19:02,170 --> 00:19:03,490
vai kaut kas traks, piemēram, ka.

400
00:19:03,490 --> 00:19:06,850
Tātad skaitlis, iespējams,
labi, bet ir kāds

401
00:19:06,850 --> 00:19:13,880
kādreiz dzīvoja adresi, piemēram,
1A Brattle Square, vai 1 un 1/2?

402
00:19:13,880 --> 00:19:17,030
Šīs lietas pastāv, diemžēl,
pat ja neesat tur dzīvojis,

403
00:19:17,030 --> 00:19:21,240
ir šīs anomālijas
piemēram, dzīvokļa 1A, 1B, 1C.

404
00:19:21,240 --> 00:19:24,260
Tātad, jūs zināt, ko, mēs, iespējams,
nedrīkst iet ar skaitlim,

405
00:19:24,260 --> 00:19:27,440
pretējā gadījumā mēs ejam
zaudēt dažus pārdošanu.

406
00:19:27,440 --> 00:19:29,920
>> Char lauks, varbūt?

407
00:19:29,920 --> 00:19:30,870
Es nezinu, cik ilgi.

408
00:19:30,870 --> 00:19:33,370
Tas droši vien nebūs
ka ilgi, lai 10 vai kaut ko.

409
00:19:33,370 --> 00:19:34,950
Neviens gatavojas rakstīt
garāks numurs, varbūt.

410
00:19:34,950 --> 00:19:37,070
Bet atkal, mēs, iespējams,
vairāk apsvērt to.

411
00:19:37,070 --> 00:19:39,900
Varbūt google, do kādu pētījumu,
bet mēs iet ar mūsu iekšām tagad.

412
00:19:39,900 --> 00:19:44,565
Streets, palija, 50, es nezinu.

413
00:19:44,565 --> 00:19:46,940
Kādā brīdī, neviens gatavojas
rakstīt to uz aploksnes,

414
00:19:46,940 --> 00:19:49,350
pārāk, tāpēc tur ir iespējams
daži augšējo robežas tur.

415
00:19:49,350 --> 00:19:54,200
Pilsēta, tas pats, protams, tā char 50.

416
00:19:54,200 --> 00:19:59,120
>> Valsts, var būt ASV orientētus tagad.

417
00:19:59,120 --> 00:20:01,850
Tātad tas varētu būt sarakstā, tik laipns
Sprieduma zvanu, valsts.

418
00:20:01,850 --> 00:20:04,000
Tas varētu būt, piemēram, divām zīmēm.

419
00:20:04,000 --> 00:20:06,140
Tātad faktiski, varbūt, es tur saka char.

420
00:20:06,140 --> 00:20:09,420
Es droši vien domāju varchar,
tikai kādu efektivitāti,

421
00:20:09,420 --> 00:20:12,240
bet mēs atgriezties
ka lēmums brīdi.

422
00:20:12,240 --> 00:20:16,150
Varētu būt char 2 garumu stāvoklī.

423
00:20:16,150 --> 00:20:20,670
Ja ASV tie ir, piemēram, MA,
Massachusetts, NY, New York, NJ, New

424
00:20:20,670 --> 00:20:22,100
Jersey, un tā tālāk.

425
00:20:22,100 --> 00:20:23,630
Tātad tas varētu būt noteikts, ka.

426
00:20:23,630 --> 00:20:25,900
DC par Vašingtonā.

427
00:20:25,900 --> 00:20:29,915
>> Bet es domāju, Olivier, jūs
ierosināja citu pieeju.

428
00:20:29,915 --> 00:20:30,790
Mērķauditorija: [dzirdams]

429
00:20:30,790 --> 00:20:33,670
DAVID Malan: Jā, tā tas ir
mazliet kaitinošas rakstīt,

430
00:20:33,670 --> 00:20:37,890
bet enum varētu daudz lietderīgāk,
jo šādā veidā, vismaz ASV,

431
00:20:37,890 --> 00:20:41,320
jūs varētu uzskaitīt, ja tediously, bet
jūs darīt to tikai vienu reizi savā datu bāzē

432
00:20:41,320 --> 00:20:47,480
un nekad atkal ir jādomā par
tas, visi 50 divu rakstzīmju kodi.

433
00:20:47,480 --> 00:20:48,660
Tāpēc man patīk ENUM.

434
00:20:48,660 --> 00:20:51,720
Paliksim pie ka tur, jo
tā veida īsteno lielāku stingrību.

435
00:20:51,720 --> 00:20:53,620
Un tad zip kodu?

436
00:20:53,620 --> 00:20:55,306
Es domāju, ka Andrew bija doma par to

437
00:20:55,306 --> 00:20:56,180
Mērķauditorija: [dzirdams]

438
00:20:56,180 --> 00:20:57,240
DAVID Malan: Jā, pieci vai deviņi.

439
00:20:57,240 --> 00:20:58,323
Pieņemsim tikai glabā to vienkārši.

440
00:20:58,323 --> 00:20:59,380
Just do pieci tagad.

441
00:20:59,380 --> 00:21:03,070
Bet varbūt es varētu tikai
do vesels skaitlis, vai ne?

442
00:21:03,070 --> 00:21:08,750
Es varētu, bet jūs zināt, ko, es
šī kļūda reizi, savā ziņā.

443
00:21:08,750 --> 00:21:13,110
Gadus atpakaļ, man bija migrē no
Microsoft Outlook Gmail,

444
00:21:13,110 --> 00:21:18,640
un Outlook ir veids, kā eksportēt
visiem jūsu kontaktiem kā Excel failā,

445
00:21:18,640 --> 00:21:21,280
CSV failu, komatiem atdalītas vērtības failu.

446
00:21:21,280 --> 00:21:23,950
Un es sniedza kļūda, es
domā, par divreiz noklikšķinot uz tā,

447
00:21:23,950 --> 00:21:27,380
kad es lejupielādēt eksportu, lai
pārliecinieties, ka tas izskatījās kā es gaidīju.

448
00:21:27,380 --> 00:21:31,320
Man ir hit saglabāšana vai ļaut
auto-save kick vai kaut ko.

449
00:21:31,320 --> 00:21:35,100
Jo, kad es tad importēta
tas Gmail, tas viss strādāja.

450
00:21:35,100 --> 00:21:39,910
Bet gadiem, līdz pat šai dienai, un
I did this pieci, pirms 10 gadiem,

451
00:21:39,910 --> 00:21:44,380
Es joprojām atrast draugi, kas ir
adreses, kas izskatās kā šis.

452
00:21:44,380 --> 00:21:45,700
Kāpēc?

453
00:21:45,700 --> 00:21:47,900
>> Mērķauditorija: [dzirdams]

454
00:21:47,900 --> 00:21:50,650
>> DAVID Malan: Pagāja
0., labi, drīzāk, to

455
00:21:50,650 --> 00:21:53,810
paņēma visu pasta indeksu, kā
numurs, un tāpēc tas ir

456
00:21:53,810 --> 00:21:56,590
vadošais 0, kas nozīmē,
tam nav nozīmes.

457
00:21:56,590 --> 00:21:59,470
Un tā 2138, šķiet, ir mans pasta indekss.

458
00:21:59,470 --> 00:22:07,100
Un tas ir, atklāti sakot, kaitinošas Excel
iezīme, ar kuru es domāju, pēc noklusējuma,

459
00:22:07,100 --> 00:22:10,980
pat ja tas ir domāts, lai tikai
būt teksts, Microsoft Excel

460
00:22:10,980 --> 00:22:13,780
nolemj, ļaujiet man būt noderīgi,
un oh, es redzu tikai ciparus.

461
00:22:13,780 --> 00:22:15,290
Pieņemsim ārstēt tos kā skaitļi.

462
00:22:15,290 --> 00:22:16,790
Un tas saīsina vadošajiem nullēm.

463
00:22:16,790 --> 00:22:19,165
>> Es zvēru pie Dieva, ik pāris
mēnešus es atrast adresi,

464
00:22:19,165 --> 00:22:22,300
un no sava veida OKT, es dodos atpakaļ
un pievienot 0, lai gan es nekad

465
00:22:22,300 --> 00:22:23,700
sūtīt cilvēkus burtus vai neko.

466
00:22:23,700 --> 00:22:25,510
Bet es esmu vēl atrast paliekas šo.

467
00:22:25,510 --> 00:22:28,820
Tātad tas ir, tas ir laba ideja?

468
00:22:28,820 --> 00:22:31,610
Labi, nē, jo ikviens, kas
Massachusetts, šajā jomā,

469
00:22:31,610 --> 00:22:33,270
ir nāksies o vadošo tos.

470
00:22:33,270 --> 00:22:38,070
Tātad, pieņemsim iet ar, piemēram,
char, iespējams, pieci.

471
00:22:38,070 --> 00:22:41,450
>> Un šeit, saprotu, mēs
varētu izmantot ENUM un mēs

472
00:22:41,450 --> 00:22:44,600
varētu uzskaitīt 10000
iespējams zip kodi,

473
00:22:44,600 --> 00:22:48,530
bet uzskata, tāpat kā tas ir iespējams,
šķērso līnijas, piemēram, pabalstiem.

474
00:22:48,530 --> 00:22:51,350
Ja jums ir ievadīt ka
daudz datus savā datu bāzē

475
00:22:51,350 --> 00:22:52,940
aizsardzībai pret kaut ko.

476
00:22:52,940 --> 00:22:57,400
Tātad char sapratu, jūs varētu rakstīt
H-E-L-L-O-grupas, kā savu zip kodu,

477
00:22:57,400 --> 00:22:59,180
kas nav, protams, ciparu.

478
00:22:59,180 --> 00:23:01,680
Tāpēc tur nav veids, jo
tipisks datu bāze,

479
00:23:01,680 --> 00:23:05,561
norādīt tikai ciparu un
tikai piecas rakstzīmes garš,

480
00:23:05,561 --> 00:23:07,310
tāpēc mēs esam nāksies
to darīt, ka kodu.

481
00:23:07,310 --> 00:23:11,100
Mēs darīsim, ka PHP vai
Java vai kāds valodas mēs esam

482
00:23:11,100 --> 00:23:14,230
izmantojot uz servera, lai ieviestu
šāda veida ierobežojumu.

483
00:23:14,230 --> 00:23:14,860
>> Whoo!

484
00:23:14,860 --> 00:23:18,322
Labi, lai kādi jautājumi tikai vēl?

485
00:23:18,322 --> 00:23:19,780
Veidosim citu dizaina lēmumu.

486
00:23:19,780 --> 00:23:22,500
Izrādās, ka jums
arī nokļūt izvēlēties,

487
00:23:22,500 --> 00:23:26,600
projektējot SQL datu bāzi, vai
tipiski relāciju database-- kur

488
00:23:26,600 --> 00:23:28,790
atkal, relāciju tikko
nozīmē, rindas un kolonnas,

489
00:23:28,790 --> 00:23:35,500
tas, kā organizēt jūsu data--
un saprast, ka tas, ko tas nozīmē,

490
00:23:35,500 --> 00:23:37,740
Esmu bijis maldinošs
ka es esmu drawing-- šis

491
00:23:37,740 --> 00:23:40,190
ir tas, ko sauc par shēma
par datu bāzes tabulā.

492
00:23:40,190 --> 00:23:42,810
Tas ir tāpat kā
specifikācijas table--

493
00:23:42,810 --> 00:23:48,040
bet, kad runa ir laiks
faktiski datu glabāšanai,

494
00:23:48,040 --> 00:23:52,081
un mēs to izdarītu, vienkārši piemērs šeit.

495
00:23:52,081 --> 00:23:55,080
Es esmu gatavojas atvērt Excel, jo
Excel dos man rindas un kolonnas.

496
00:23:55,080 --> 00:23:58,050
Un tas ir tieši tas, ko Oracle un
MySQL un citus instrumentus dos man.

497
00:23:58,050 --> 00:24:02,270
Tāpēc es esmu tikai gatavojas izmantot
tā apspriešanai dēļ.

498
00:24:02,270 --> 00:24:05,250
Ļaujiet man iet uz priekšu un atvērt
pārstāvim dokuments šeit,

499
00:24:05,250 --> 00:24:06,310
tuvinātu mazliet.

500
00:24:06,310 --> 00:24:15,200
Tā, piemēram, mūsu galvenes tagad
vārds, uzvārds, dzimums, ID,

501
00:24:15,200 --> 00:24:20,980
e-pasts, ielu numurs, ielas, whoops.

502
00:24:20,980 --> 00:24:25,710
Street, pilsēta, valsts, tikai
par der uz ekrāna.

503
00:24:25,710 --> 00:24:29,080
>> Tātad, ko tas nozīmē, ka tad, kad
lietotājs pirmo reizi reģistrē par manu mājas lapā,

504
00:24:29,080 --> 00:24:32,880
tas būs kaut kas līdzīgs
David, Malan, m, teiksim 1,

505
00:24:32,880 --> 00:24:42,910
malan@harvard.edu, ielu numurs
būt, piemēram, 1 BRATTLE Square, Cambridge, MA,

506
00:24:42,910 --> 00:24:44,780
02138, un pēc tam tā tālāk.

507
00:24:44,780 --> 00:24:48,290
Tātad, kad es saku, ka relāciju datu bāzes
vai SQL datu bāze ir rindas un kolonnas,

508
00:24:48,290 --> 00:24:49,350
Es arī domāju.

509
00:24:49,350 --> 00:24:51,900
Ka faktiskie dati tiek glabāti
rindās un kolonnās.

510
00:24:51,900 --> 00:24:53,950
Tas ir tikai sakritība,
ka mēs runājām,

511
00:24:53,950 --> 00:24:56,033
un man bija tikai zīmēšanas to
out rindās un kolonnās.

512
00:24:56,033 --> 00:24:58,320
Tas ir tikai shēma,
visaptverošs definīcija.

513
00:24:58,320 --> 00:25:01,640
>> Tātad no šiem laukiem šeit,
vai līdzvērtīgi, tur,

514
00:25:01,640 --> 00:25:06,270
kas ir lauki, kas jūs domājat, ka
Es esmu, iespējams, meklēt, ja es esmu lietotājs

515
00:25:06,270 --> 00:25:09,200
vai ja es esmu datu bāzes administrators?

516
00:25:09,200 --> 00:25:12,426
Tāpat, kādi lauki es esmu
faktiski gatavojas meklēt?

517
00:25:12,426 --> 00:25:13,830
>> Mērķauditorija: [dzirdams]

518
00:25:13,830 --> 00:25:17,690
>> DAVID Malan: nosaukums, jā tā
Man patīk tas, that-- yeah,

519
00:25:17,690 --> 00:25:19,750
e-pasts var būt diezgan bieži.

520
00:25:19,750 --> 00:25:21,440
Atvainojiet, jūs teicāt nosaukums.

521
00:25:21,440 --> 00:25:24,030
Tik maybe-- un atkal, mēs esam
veida runāt abstrakti.

522
00:25:24,030 --> 00:25:25,988
Es nezinu, kāpēc jūs
būt meklējot vārdu,

523
00:25:25,988 --> 00:25:29,340
bet kas jūtas saprātīgs, ja
jūs meklējat lietotājam.

524
00:25:29,340 --> 00:25:31,170
Varbūt ir noteikts, pārliecināts, ID.

525
00:25:31,170 --> 00:25:34,100

526
00:25:34,100 --> 00:25:36,160
>> Un tas ir slidens
slīpums, jo es varētu

527
00:25:36,160 --> 00:25:38,890
pamanīties scenāriju, kurā
varbūt mans priekšnieks man lūdza,

528
00:25:38,890 --> 00:25:40,417
cik vīrieši mums ir mūsu mājas lapā?

529
00:25:40,417 --> 00:25:42,000
Cik daudz sieviešu mums ir mūsu mājas lapā?

530
00:25:42,000 --> 00:25:45,210
Un tā tajā brīdī, jūs varētu vēlēties
meklēt uz dzimumu jomā, arī

531
00:25:45,210 --> 00:25:45,940
un nekas cits.

532
00:25:45,940 --> 00:25:47,350
Tātad tur ir kompromiss šeit.

533
00:25:47,350 --> 00:25:49,180
Atkal, tur nav
pareizā atbilde, bet tur

534
00:25:49,180 --> 00:25:53,760
ir iezīme vairākumā SQL datu bāzēm
pazīstams kā indeksāciju, saskaņā ar kuru

535
00:25:53,760 --> 00:25:56,100
tu, dizainers, tad
datu bāzes administrators,

536
00:25:56,100 --> 00:26:01,730
nokļūt jāizlemj iepriekš, kas
redzes laukos noteikt datubāzei būtu optimizēt

537
00:26:01,730 --> 00:26:02,980
par meklēšanu par.

538
00:26:02,980 --> 00:26:07,620
>> Jūs varētu ļoti naivi teikt, optimizēt
Tas, optimizēt ka, optimizēt to,

539
00:26:07,620 --> 00:26:10,300
optimizēt ka, un tas,
un datu bāze

540
00:26:10,300 --> 00:26:14,882
tie daži burvju lieta zem
pārsegs, un kaut ko darīt tādā veidā,

541
00:26:14,882 --> 00:26:17,090
ka nākamreiz jūs meklēt
uz kādu no šiem laukiem,

542
00:26:17,090 --> 00:26:18,400
tas, patiesībā, ir ātrāk.

543
00:26:18,400 --> 00:26:19,110
Tas ir iespējams.

544
00:26:19,110 --> 00:26:20,530
Tas nav atcelt sevi out.

545
00:26:20,530 --> 00:26:22,500
Bet ir jābūt cena, ko maksā.

546
00:26:22,500 --> 00:26:27,220
>> Ja jūs naivi, vai pārāk aizrautīgi
teiksim, indekss visi no šiem laukiem,

547
00:26:27,220 --> 00:26:29,810
tā sakot, lai tos visus
efektīvi meklēšanu,

548
00:26:29,810 --> 00:26:31,625
kādu cenu tu droši vien maksā?

549
00:26:31,625 --> 00:26:32,500
Mērķauditorija: [dzirdams]

550
00:26:32,500 --> 00:26:33,090
DAVID Malan: Performance.

551
00:26:33,090 --> 00:26:33,798
Ko tu ar to domā?

552
00:26:33,798 --> 00:26:37,380
Nu veiktspēju, vismaz tādā
konteksts Es esmu apspriest, ir labāk tagad.

553
00:26:37,380 --> 00:26:38,830
Tas ir definīcija indeksācija.

554
00:26:38,830 --> 00:26:41,180
Tas padarīs meklēšanu ātrāk.

555
00:26:41,180 --> 00:26:43,366
Tātad laiks samazinās, lai runāt.

556
00:26:43,366 --> 00:26:44,240
Mērķauditorija: [dzirdams]

557
00:26:44,240 --> 00:26:45,031
DAVID Malan: Space.

558
00:26:45,031 --> 00:26:46,520
Tātad vēlreiz, tie ir kopējā tirdzniecības.

559
00:26:46,520 --> 00:26:50,820
Es varu paātrināt meklēšanu, bet tas ir
gatavojas izmaksas jums vairāk baitus vietas.

560
00:26:50,820 --> 00:26:51,610
Kāpēc?

561
00:26:51,610 --> 00:26:55,230
Nu, pēc noklusējuma, ja mums ir neviens no
šīs sarkanās zvaigznes, neviens no šiem rādītājiem,

562
00:26:55,230 --> 00:26:58,797
kā es saku, kā jūs meklēt
Vārda šajā datu bāzē?

563
00:26:58,797 --> 00:27:00,630
Tātad pieņemsim izdarīt mūsu
uzmanība uz šo piemēru.

564
00:27:00,630 --> 00:27:06,300
Ja mums ir Dāvidu un Scully un Kareem
un Arwa un citi šajās rindās,

565
00:27:06,300 --> 00:27:06,910
piemēram.

566
00:27:06,910 --> 00:27:08,390
>> Tātad, pieņemsim darīt tieši to.

567
00:27:08,390 --> 00:27:13,990
Scully, ir šeit, un pēc tam
mums ir Kareem un Arwa,

568
00:27:13,990 --> 00:27:18,390
un visi pārējie, ja jums nav
ir indekss noteikts, tā sakot,

569
00:27:18,390 --> 00:27:20,160
vislabāk varat darīt, ir lineāra meklēšanu.

570
00:27:20,160 --> 00:27:23,470
Ja jūs meklēt Arwa, mēs neesam
būs iespēja lēkt tiesības viņai

571
00:27:23,470 --> 00:27:24,140
ātri.

572
00:27:24,140 --> 00:27:26,556
Mēs ejam, lai sāktu top un
iet visu ceļu uz leju,

573
00:27:26,556 --> 00:27:28,600
nav atšķirībā mūsu sākotnējā
Mike Smith piemērs.

574
00:27:28,600 --> 00:27:33,470
>> Tomēr, ja es saku, hey, datu bāzes,
indekss pirmo nosaukuma lauku,

575
00:27:33,470 --> 00:27:37,000
tad tas būs kaut ko darīt
mīļotājs un atbalstīt kaut ko

576
00:27:37,000 --> 00:27:38,130
piemēram, bināro meklēšanu.

577
00:27:38,130 --> 00:27:39,820
Tas droši vien nav binārā meklēšana per se.

578
00:27:39,820 --> 00:27:42,810
Datu bāzes mēdz izmantot citu
datu struktūra sauc b koki,

579
00:27:42,810 --> 00:27:46,540
nedrīkst jaukt ar bināro koku,
ka tikai padara to ātrāk meklēt

580
00:27:46,540 --> 00:27:48,500
kaut logaritmiska dabā.

581
00:27:48,500 --> 00:27:53,510
Bet cena, ko maksāt, lai izveidotu, ka
iezīme, ka datu struktūra atmiņā,

582
00:27:53,510 --> 00:27:54,570
ir vairāk baiti.

583
00:27:54,570 --> 00:27:57,170
Tātad tas varētu veikt dažus megabaiti,
daži gigabaitiem, kas zina?

584
00:27:57,170 --> 00:27:58,410
Tas ir atkarīgs no datiem.

585
00:27:58,410 --> 00:28:02,640
>> Tāpēc kādā brīdī, jums ir jāizlemj,
tas droši vien nav parasta lieta.

586
00:28:02,640 --> 00:28:06,000
Tātad, kādi ir faktiskā kopējā
gadījumos, ja jūs patiešām bija jāizvēlas,

587
00:28:06,000 --> 00:28:10,080
Kas varētu iecienītākās lauki būt?

588
00:28:10,080 --> 00:28:10,580
E-pasts.

589
00:28:10,580 --> 00:28:14,400
Un man patīk e-pastu, jo e-pasta adresi,
teorētiski, būtu unikāls.

590
00:28:14,400 --> 00:28:17,650
Un tā parasti, kad jūs zināt
iepriekš, ka vienā no saviem laukiem

591
00:28:17,650 --> 00:28:20,277
ir vai būs unikāls, ka
mēdz būt labi lauks

592
00:28:20,277 --> 00:28:22,860
meklēt tālāk, jo tādā veidā,
kad jūs meklēt kaut ko,

593
00:28:22,860 --> 00:28:26,194
jūs gatavojas saņemt atpakaļ vienu vai
nulles atbildes un tad jūs esat darīts.

594
00:28:26,194 --> 00:28:28,110
Jums nav, lai saglabātu
meklē vēl citiem.

595
00:28:28,110 --> 00:28:31,992
>> Un tā šajā gadījumā šeit, e-pasts,
tik ilgi, cik jūs nevarat reģistrēt divreiz

596
00:28:31,992 --> 00:28:33,450
ar to pašu e-pastu, ir labs.

597
00:28:33,450 --> 00:28:36,710
ID pēc definīcijas, jo
datorzinātnes pasaule,

598
00:28:36,710 --> 00:28:39,610
ja jūs runājat par
ID, kas bija labāk būt unikāls.

599
00:28:39,610 --> 00:28:42,970
Tas ir sava veida nozīmes
no ID vai identifikatoru.

600
00:28:42,970 --> 00:28:46,440
Un pārējie no tiem varētu būt,
sauksim tos patīkami bagātajiem,

601
00:28:46,440 --> 00:28:47,860
bet nav īsti vajadzīgs.

602
00:28:47,860 --> 00:28:49,976
>> Un tā datu bāzē,
norādāt indeksi,

603
00:28:49,976 --> 00:28:51,350
bet jūs varat būt vēl precīzāks.

604
00:28:51,350 --> 00:28:56,060
Jūs varat teikt, hey, datu bāzes, pārliecinieties,
ka katrs ID Šajā tabulā ir unikāls.

605
00:28:56,060 --> 00:28:59,330
Vai nav pat let programmētājs
nejauši likts dublikāta e-pastu

606
00:28:59,330 --> 00:29:00,740
vai dublēt ID numuru.

607
00:29:00,740 --> 00:29:03,140
Tik daudz, piemēram enums
aizsargātu mūs līdzīgi, jums

608
00:29:03,140 --> 00:29:04,881
var būt tiem zemāka līmeņa aizsardzību.

609
00:29:04,881 --> 00:29:07,130
Un tā datu bāzes dizains, it
kāda jēga, ir sava veida jautrību,

610
00:29:07,130 --> 00:29:08,380
jo jūs to aizsardzībai.

611
00:29:08,380 --> 00:29:11,460
Jūs veida pieņemam, ka jūs strādājat
ar briesmīgs, briesmīgs programmētājiem

612
00:29:11,460 --> 00:29:15,550
un jūs vēlaties, lai tik daudz aizsargspējas
kā jūs varat, lai aizsargātu savus datus,

613
00:29:15,550 --> 00:29:18,940
bet vienlaicīgi vēlaties
lai palīdzētu tām veikt labāk

614
00:29:18,940 --> 00:29:21,386
, izvēloties, kuru
lauki optimizēt.

615
00:29:21,386 --> 00:29:24,260
Bet jūs nevarat vienmēr darīt to
vakuums kā mēs veida ir šeit.

616
00:29:24,260 --> 00:29:26,480
Tev jāzina, kādi ir
šīs kopīgās lietas ir.

617
00:29:26,480 --> 00:29:29,397
Ja izstrādātāji
īsteno adrešu grāmatu,

618
00:29:29,397 --> 00:29:32,230
jūs varētu ļoti labi gribu, lai varētu
meklēt par gandrīz visās jomās,

619
00:29:32,230 --> 00:29:33,830
tikko pēc būtības pieteikumu.

620
00:29:33,830 --> 00:29:37,910
Tātad, varbūt jūs tērēt
ka papildu telpa.

621
00:29:37,910 --> 00:29:39,090
>> Tiesības, kādi jautājumi?

622
00:29:39,090 --> 00:29:41,820

623
00:29:41,820 --> 00:29:42,486
Jā.

624
00:29:42,486 --> 00:29:43,470
>> Mērķauditorija: [dzirdams]

625
00:29:43,470 --> 00:29:44,404
>> DAVID Malan: Nē.

626
00:29:44,404 --> 00:29:45,279
>> Mērķauditorija: [dzirdams]

627
00:29:45,279 --> 00:29:47,840

628
00:29:47,840 --> 00:29:48,826
>> DAVID Malan: OK.

629
00:29:48,826 --> 00:29:49,701
>> Mērķauditorija: [dzirdams]

630
00:29:49,701 --> 00:29:52,420

631
00:29:52,420 --> 00:29:54,850
>> DAVID Malan: Ak, tāpēc mēs
runā tādā veidā

632
00:29:54,850 --> 00:29:57,940
tagad tas ir pilnīgi valoda agnostiķis.

633
00:29:57,940 --> 00:30:02,370
Tātad mēs runājam tagad par
relāciju datubāzes vispārīgāk,

634
00:30:02,370 --> 00:30:04,760
vai SQL datu bāzes kopumā.

635
00:30:04,760 --> 00:30:06,870
>> Mērķauditorija: [dzirdams]

636
00:30:06,870 --> 00:30:10,030
>> DAVID Malan: Labāk vārds izmantot
ir, var izmantot ar jebkuru valodu.

637
00:30:10,030 --> 00:30:15,280
Lai es varētu rakstīt JavaScript kodu, C
kods, C ++ kods, Java kods, Ruby kods,

638
00:30:15,280 --> 00:30:19,010
kas visi runāt ar
datu bāzes un izpildīt vaicājumus.

639
00:30:19,010 --> 00:30:22,310
Patiesībā, tas nav slikts
segue uz piemēru vaicājumu.

640
00:30:22,310 --> 00:30:25,720
Un atkal, mēs nebrauksim iedziļināties
Java vai C ++ vai kādu, kas vairs,

641
00:30:25,720 --> 00:30:29,420
bet SQL, valoda, uz kuru es glabāt
atsaucoties, Structured Query Language,

642
00:30:29,420 --> 00:30:32,790
Tas pats par sevi ir programmēšanas valoda,
bet tas ir domāts, lai tiktu izmantoti, ne

643
00:30:32,790 --> 00:30:37,330
pārsteigums, strukturēta vaicājumu vaicājumiem.

644
00:30:37,330 --> 00:30:38,660
>> Ar to es arī domāju.

645
00:30:38,660 --> 00:30:41,190
Kā jūs izvēlaties dati
no MySQL datu bāzi

646
00:30:41,190 --> 00:30:49,330
ir jūs burtiski ierakstīt savā programmā
kaut kas līdzīgs izvēlieties zvaigzne no lietotājiem.

647
00:30:49,330 --> 00:30:52,200
Es esmu pieņemot, ka šajā tabulā,
turpmāk sauc lietotājiem.

648
00:30:52,200 --> 00:30:54,860
Es varētu to nosaukt kaut ko mēs gribam,
bet šāda veida jēga.

649
00:30:54,860 --> 00:30:57,240
Un tā Select ir ļoti
kopīgs vārds, ja jums

650
00:30:57,240 --> 00:30:59,290
būs, SQL, kas burtiski tas, ka.

651
00:30:59,290 --> 00:31:02,730
Ko jūs domājat zvaigzne
nozīmē šajā kontekstā?

652
00:31:02,730 --> 00:31:04,410
>> Mērķauditorija: [dzirdams]

653
00:31:04,410 --> 00:31:05,380
>> DAVID Malan: Es atvainojos?

654
00:31:05,380 --> 00:31:06,300
>> Mērķauditorija: [dzirdams]

655
00:31:06,300 --> 00:31:09,580
>> DAVID Malan: Nav nepieciešams, tas ir
iekļaujošāku nekā, patiesībā.

656
00:31:09,580 --> 00:31:11,700
Tas ir savvaļas karti raksturs.

657
00:31:11,700 --> 00:31:14,740
Zvaigzne gandrīz vienmēr nozīmē kaut ko,
tāpēc tas nozīmē, šajā gadījumā,

658
00:31:14,740 --> 00:31:16,510
izvēlēties visu, sākot no datu bāzes.

659
00:31:16,510 --> 00:31:20,730
Tātad, kad es saku, es domāju
dot mani atpakaļ katru kolonnu

660
00:31:20,730 --> 00:31:22,440
no mana galda sauc lietotājiem.

661
00:31:22,440 --> 00:31:24,730
Tātad man rezultātu kopu, kā to sauc.

662
00:31:24,730 --> 00:31:28,210
Citiem vārdiem sakot, man kopiju no
izklājlapu, ir tas, ko es saņemu pie.

663
00:31:28,210 --> 00:31:34,890
>> Bet, ja es teicu izvēlieties zvaigzne no lietotājiem
kur ID ir 1, cik liels būtu

664
00:31:34,890 --> 00:31:36,640
mans rezultāts, kas būs pēc tam?

665
00:31:36,640 --> 00:31:41,680
Vai līdzvērtīgi, cik daudz rindas būtu
Man jānodod atpakaļ no datu bāzes?

666
00:31:41,680 --> 00:31:45,860
Iespējams, tikai viens, ja man ir patiešām
uzskatīta ID kā unikāls identifikators,

667
00:31:45,860 --> 00:31:50,710
un ja Deivids ir šo unikālo ID, es
vajadzētu saņemt atpakaļ par vienu un tikai vienu rindu

668
00:31:50,710 --> 00:31:53,220
satur visus Dāvida informāciju.

669
00:31:53,220 --> 00:31:56,390
Ja es teicu tas kur ID
vienāds 99, man vajadzētu saņemt atpakaļ,

670
00:31:56,390 --> 00:32:00,320
šajā kontekstā nulle rindas,
vismaz brīdī.

671
00:32:00,320 --> 00:32:03,620
>> Tomēr, ja man nav īsti aprūpi
par visu šo informāciju,

672
00:32:03,620 --> 00:32:06,970
Es varētu tikai pateikt, kur Dāvids dzīvo?

673
00:32:06,970 --> 00:32:10,860
Izvēlieties zip kodu no
Lietotājiem kur ID ir 1.

674
00:32:10,860 --> 00:32:15,820
Tas izvēlēsies man tikai Dāvida zip
kods un nevis kopums šīs rindas.

675
00:32:15,820 --> 00:32:19,541
Kāpēc es varētu darīt, nevis
zvaigzne vaicājumu, wild card?

676
00:32:19,541 --> 00:32:21,950
>> Mērķauditorija: [dzirdams]

677
00:32:21,950 --> 00:32:24,590
>> DAVID Malan: Jā, es varētu tikai to vajag.

678
00:32:24,590 --> 00:32:26,350
Tāpēc sniegums ir atkal šeit atbilde.

679
00:32:26,350 --> 00:32:28,540
Kāpēc prasīt vairāk
informācija, nekā jums nepieciešams,

680
00:32:28,540 --> 00:32:32,020
jo, pat ja tas viss ir labi kopā,
jums vēl ir kopēt, ka dati,

681
00:32:32,020 --> 00:32:35,560
šķiet, no datu bāzes
savā programmā kaut kā,

682
00:32:35,560 --> 00:32:38,490
un tas ir tikai muļķīgi, ja jums
nepieciešama tikai pieci no šiem cipariem,

683
00:32:38,490 --> 00:32:40,340
nevis kopums rindas.

684
00:32:40,340 --> 00:32:42,180
>> Tātad, kā es varu ievietot lietotājs?

685
00:32:42,180 --> 00:32:44,780
Pieņemsim, ka lietotājs ir tikko
reģistrēts pirmo reizi.

686
00:32:44,780 --> 00:32:46,560
Sintakse parasti izskatās šādi.

687
00:32:46,560 --> 00:32:52,700
Ievietot lietotājiem, un
tad mēs teiktu vērtības,

688
00:32:52,700 --> 00:33:00,150
un tad mēs teiktu vērtības
tāpat kā, teiksim, Lauren Scully,

689
00:33:00,150 --> 00:33:02,380
Mūsu videographer tieši šeit.

690
00:33:02,380 --> 00:33:04,390
Un nākamais lauks ir dzimums.

691
00:33:04,390 --> 00:33:08,020
Tāpēc mēs sakām quote, likt pēdiņas beigās
"F", tad mums ir ID

692
00:33:08,020 --> 00:33:12,250
un es esmu gatavojas say-- pieņemsim
izlikties viņa nav faktiski šeit,

693
00:33:12,250 --> 00:33:14,380
tāpēc mēs attīt stāsts.

694
00:33:14,380 --> 00:33:16,530
Tātad 2 būs viņas ID.

695
00:33:16,530 --> 00:33:19,130
Un tad nākamais lauks
Šeit ir viņas e-pasts.

696
00:33:19,130 --> 00:33:22,140
Tātad tas būs tāpat
Lauren Scully un tā tālāk,

697
00:33:22,140 --> 00:33:24,360
un mēs vienkārši dot dot
dot to prom no šejienes uz.

698
00:33:24,360 --> 00:33:26,890
Tagad tas kļūs nedaudz
garlaicīgs, bet ievietot vaicājums

699
00:33:26,890 --> 00:33:28,310
galu galā izskatās, ka.

700
00:33:28,310 --> 00:33:30,970
>> Ja es gribu atbrīvoties no
Scully, uh-oh, pieņemsim dereģistrēt

701
00:33:30,970 --> 00:33:37,420
viņas, viņa izdzēš viņas kontā,
izdzēst no lietotājiem, ja ID atbilst 2,

702
00:33:37,420 --> 00:33:38,500
būs atbrīvoties no Scully.

703
00:33:38,500 --> 00:33:48,050
Vai arī es varu teikt atjaunināt lietotājiem noteikt,
teiksim, ko mēs varētu mainīt?

704
00:33:48,050 --> 00:33:49,430
Pieņemsim, ka viņa kustas.

705
00:33:49,430 --> 00:33:53,730
Set zip vienāds 021-- nope,
tas ir viņas pašreizējā zip.

706
00:33:53,730 --> 00:33:54,487
90210.

707
00:33:54,487 --> 00:33:56,320
Vienīgais pasta indekss
Es zinu, pasaulē.

708
00:33:56,320 --> 00:33:59,002
Tā, ka varētu mainīties
viņas zip code-- faktiski,

709
00:33:59,002 --> 00:34:00,460
tas nemainītu savu pasta indeksu.

710
00:34:00,460 --> 00:34:02,170
>> Ko es vienkārši darīt?

711
00:34:02,170 --> 00:34:04,292
Kaut arī sintakse ir iespējams jauns.

712
00:34:04,292 --> 00:34:05,302
>> Mērķauditorija: [dzirdams]

713
00:34:05,302 --> 00:34:08,010
DAVID Malan: Jā, es pārcēlos ikvienam
uz Beverly Hills, Kalifornija.

714
00:34:08,010 --> 00:34:11,920
Tāpēc es tiešām
pateikt, kur ID atbilst 2.

715
00:34:11,920 --> 00:34:12,820
Un tā tālāk.

716
00:34:12,820 --> 00:34:15,290
Tātad SQL ir visu par šiem
veidu norādījumiem.

717
00:34:15,290 --> 00:34:20,260
Izvēlieties, ievietot, dzēst, atjaunināt,
ar šiem predikātu beigās

718
00:34:20,260 --> 00:34:22,139
šie kur klauzulas, lai runāt.

719
00:34:22,139 --> 00:34:25,170
Un tur ir daudz vairāk, jūs varat
darīt, bet tas tiešām tikai vārīties uz leju

720
00:34:25,170 --> 00:34:29,750
vienkārši, ja arcanely, paužot
ko jūs vēlaties datubāzes darīt.

721
00:34:29,750 --> 00:34:31,580
>> Un tad datu bāzes
būs izdomāt, kad

722
00:34:31,580 --> 00:34:35,630
Ievietojot Lauren Scully Into
datu bāzi, kur likt viņas atmiņā

723
00:34:35,630 --> 00:34:38,230
lai mēs varētu ļoti ātri nokļūt
viņas pamatojoties uz viņas e-pasta adresi

724
00:34:38,230 --> 00:34:42,610
vai pamatojoties uz viņas ID numuru vai tamlīdzīgi.

725
00:34:42,610 --> 00:34:43,391
Jā, Dan.

726
00:34:43,391 --> 00:34:44,266
Mērķauditorija: [dzirdams]

727
00:34:44,266 --> 00:34:46,364

728
00:34:46,364 --> 00:34:47,780
DAVID Malan: Tiešām labs jautājums.

729
00:34:47,780 --> 00:34:50,370
Vai šie skripti mainīties no
Microsoft Access uz Oracle

730
00:34:50,370 --> 00:34:52,290
MySQL PostgreSQL?

731
00:34:52,290 --> 00:34:53,790
Īsā atbilde ir tas ir atkarīgs.

732
00:34:53,790 --> 00:34:58,697
Teorētiski, ir ļoti
ievērojams kopīgs apakškopa SQL

733
00:34:58,697 --> 00:35:00,780
kas ir kopīga visās
Šo implementāciju.

734
00:35:00,780 --> 00:35:03,340
Tomēr dažādi ražotāji
ir pievienotajām funkcijām

735
00:35:03,340 --> 00:35:07,120
savām datubāzēm darīt dažas lietas
plašāki par šīm funkcijām,

736
00:35:07,120 --> 00:35:08,720
kas varētu, patiesībā, pauze.

737
00:35:08,720 --> 00:35:11,210
>> Tātad to, kā izstrādātāji
nodrošināties pret to,

738
00:35:11,210 --> 00:35:14,350
ir tā, ka nevis rakstot neapstrādātas
SQL kodu, piemēram, es esmu rakstot šeit,

739
00:35:14,350 --> 00:35:19,460
viņi tā vietā izmantot bibliotēku,
kopīga bibliotēka, kas pats par sevi

740
00:35:19,460 --> 00:35:23,650
ir sava veida augstāka līmeņa un tēzes
prom kurš produkts jūs izmantojat.

741
00:35:23,650 --> 00:35:25,710
Un tas dod jums
funkcijas un procedūras

742
00:35:25,710 --> 00:35:28,810
zvanīt, lai jūs nekad
faktiski rakstīt neapstrādātu SQL.

743
00:35:28,810 --> 00:35:32,609
>> Teorētiski, tad, jūs varat mainīt
produktus no Oracle Microsoft

744
00:35:32,609 --> 00:35:34,650
vai otrādi, vai kaut kas
cits, un jūs burtiski

745
00:35:34,650 --> 00:35:36,920
mainīt neko par savu kodu.

746
00:35:36,920 --> 00:35:40,180
Realitāte, lai gan, ir, jūs dažreiz
atmest funkcijas, kā rezultātā.

747
00:35:40,180 --> 00:35:43,860
Jūs, iespējams, esat izvēlējies produktu, jo
tas ieguva šīs pievienotās vērtības funkcijas,

748
00:35:43,860 --> 00:35:46,610
un tu esi tikai tagad nav
izmantojot tos apzināti.

749
00:35:46,610 --> 00:35:51,630
>> Un anecdotally, lielākā daļa uzņēmumu ir tendence
nekad virzīties prom no savas datu bāzes.

750
00:35:51,630 --> 00:35:54,002
Tāpēc, kamēr tas ir jauki
ir funkcija, realitāte

751
00:35:54,002 --> 00:35:55,960
ir, ja jūs uzlabošanas
datu bāzē, jūs esat

752
00:35:55,960 --> 00:35:59,890
iespējams, padarot ķekarus citām izmaiņām
anyway, ka jums nav obligāti

753
00:35:59,890 --> 00:36:01,360
nepieciešams paredzēt, ka.

754
00:36:01,360 --> 00:36:03,720
Tātad, tas ir apstrīdami
pār-engineering problēmu,

755
00:36:03,720 --> 00:36:05,670
bet tas tiešām ir atkarīgs no konteksta.

756
00:36:05,670 --> 00:36:09,960
Bet teorētiski, SQL tiek dalīta
pāri šiem dažādajiem produktiem.

757
00:36:09,960 --> 00:36:11,560
Tiešām labi jautājumi.

758
00:36:11,560 --> 00:36:12,272
Jā.

759
00:36:12,272 --> 00:36:13,147
>> Mērķauditorija: [dzirdams]

760
00:36:13,147 --> 00:36:17,820

761
00:36:17,820 --> 00:36:21,480
>> DAVID Malan: Jā, tā
Jūs varat domāt datu bāzi

762
00:36:21,480 --> 00:36:25,020
ir tikai serveris, beigās
diena, un iekšpusē šajā serverī

763
00:36:25,020 --> 00:36:28,670
ir visai ķekars
galdi, rindas un kolonnas.

764
00:36:28,670 --> 00:36:33,410
Un, kad jūs nosūtīt vaicājumu kā šis
no savas programmas, jūsu mājas lapā,

765
00:36:33,410 --> 00:36:39,340
rakstīts Java, Ruby, Python, neatkarīgi,
serveris saņem šo komandu

766
00:36:39,340 --> 00:36:41,660
un interpretēt to
burtiski tāpat

767
00:36:41,660 --> 00:36:43,660
mēs apspriedām agrāk ar
interpretē valodas,

768
00:36:43,660 --> 00:36:47,333
un pēc tam veicot kādu darbību uz nulli
vai vairāk rindas nulle vai vairāk tabulām.

769
00:36:47,333 --> 00:36:48,208
Mērķauditorija: [dzirdams]

770
00:36:48,208 --> 00:36:53,540

771
00:36:53,540 --> 00:36:55,070
>> DAVID Malan: Tieši tā, tieši tā.

772
00:36:55,070 --> 00:36:58,450
Tāpēc pseudocode kaut ko
piemēram, ka varētu būt šis.

773
00:36:58,450 --> 00:37:02,450
Jūsu PHP faila vai jūsu
Python failu vai jūsu Java failu,

774
00:37:02,450 --> 00:37:09,210
Jums būtu pseudocode kodu, vai
Scratch līdzīgi bloki, kā, ja lietotājs apmeklē

775
00:37:09,210 --> 00:37:19,870
acme.com/register~~V pirmo reizi,
tad ievietot lietotājiem un tā tālāk.

776
00:37:19,870 --> 00:37:22,619
Un mēs varētu tulkot to
vairāk betons kods beigās.

777
00:37:22,619 --> 00:37:24,660
Bet tiešām, mums ir visi
celtniecības bloki šeit,

778
00:37:24,660 --> 00:37:27,680
kaut arī mēs esam izlaižot dažus
no īstenošanas posmiem.

779
00:37:27,680 --> 00:37:31,560
>> Tāpēc ļaujiet man atrast vainu ar ko mēs
lieliski darīja tikai pirms brīža.

780
00:37:31,560 --> 00:37:36,470
Jūs esat izveidojis diezgan
visa tabula lietotājiem.

781
00:37:36,470 --> 00:37:38,920
Protams, mēs varētu īstenot
tas pāris dažādos veidos,

782
00:37:38,920 --> 00:37:43,030
bet jūs tiešām lika mums
leju path-- un es saku jums,

783
00:37:43,030 --> 00:37:48,080
bet tas ir iespējams, mana fault-- par diezgan
neefektīva datubāzes ieviešana.

784
00:37:48,080 --> 00:37:49,950
Tas nav normalizējies.

785
00:37:49,950 --> 00:37:52,320
>> Un normalizēts es domāju
tur būs,

786
00:37:52,320 --> 00:37:57,380
laika gaitā ievērojams atlaišana,
un tāpēc neefektivitāte,

787
00:37:57,380 --> 00:38:00,210
kas ir atkritumi telpu.

788
00:38:00,210 --> 00:38:05,650
Balstoties uz tikai to, ko jūs redzat šeit, var
jūs iedomāties, kur šos atkritumus telpu

789
00:38:05,650 --> 00:38:08,710
gatavojas nākt no laika gaitā,
kā vairāk un vairāk lietotāju reģistrs

790
00:38:08,710 --> 00:38:10,860
jūsu mājas lapā?

791
00:38:10,860 --> 00:38:13,047
Kādi dati varētu kļūt lieks?

792
00:38:13,047 --> 00:38:19,084

793
00:38:19,084 --> 00:38:20,940
>> Mērķauditorija: [dzirdams]

794
00:38:20,940 --> 00:38:22,686
>> DAVID Malan: Kāpēc tu domā, ka?

795
00:38:22,686 --> 00:38:23,561
Mērķauditorija: [dzirdams]

796
00:38:23,561 --> 00:38:32,180

797
00:38:32,180 --> 00:38:32,930
DAVID Malan: Jā.

798
00:38:32,930 --> 00:38:35,622
Un pieņemsim, lai sasniegtu mērķus
šodien, ka tā ir taisnība.

799
00:38:35,622 --> 00:38:38,330
Izrādās, un mēs esam iemācījušies šo
cietā veidā, ka tā nav taisnība.

800
00:38:38,330 --> 00:38:41,670
Kaut kā vairākas pilsētas ir,
kaut kā, tas pats pasta indekss,

801
00:38:41,670 --> 00:38:43,390
kas saplīst šo brīnišķīgo intuīciju.

802
00:38:43,390 --> 00:38:46,180
Bet pieņemsim, ka ir taisnība,
jo tas ir gandrīz vienmēr ir taisnība.

803
00:38:46,180 --> 00:38:51,390
Tātad pieņemsim, ka zip kods ir
vienmēr ir saistīta ar to pašu pilsētu

804
00:38:51,390 --> 00:38:53,600
un valsts, kas ir sava veida
par saprātīgu pieņēmumu,

805
00:38:53,600 --> 00:38:54,840
bet nepareizi, izrādās.

806
00:38:54,840 --> 00:38:57,310
Bet saprātīgs pieņēmums
šodienas vajadzībām.

807
00:38:57,310 --> 00:39:01,650
>> Tad domāju, ka es dzīvoju Cambridge,
MA, saskaņā ar šī lietotāja galda,

808
00:39:01,650 --> 00:39:04,100
un pieņemsim, ka Lauren
Scully dzīvo Cambridge, MA,

809
00:39:04,100 --> 00:39:06,120
un pieņemsim, ka Kareem
dzīvo Cambridge, MA,

810
00:39:06,120 --> 00:39:10,400
un Arwa dzīvo Cambridge,
MA, mums visiem 02138.

811
00:39:10,400 --> 00:39:15,890
Kāpēc mēs atcerēties Cambridge,
MA, 02138 visiem četriem no mums?

812
00:39:15,890 --> 00:39:18,903
Ko vajadzētu pietikt, lai atcerēties?

813
00:39:18,903 --> 00:39:20,249
>> Mērķauditorija: [dzirdams]

814
00:39:20,249 --> 00:39:21,540
DAVID Malan: Tikai zip kods.

815
00:39:21,540 --> 00:39:25,080
Tikai, ka 02138 pastāv, jo
jūs zināt, ko mēs varētu darīt?

816
00:39:25,080 --> 00:39:32,650
Mēs varētu saņemt nedaudz iedomātā šeit
un vairāk nekā šeit, noteikt citu tabulu

817
00:39:32,650 --> 00:39:35,850
kur tas notiek, ir
nosaukums, tas būs veids,

818
00:39:35,850 --> 00:39:38,840
tas būs būt
garums, un turpmāk, es esmu

819
00:39:38,840 --> 00:39:42,900
saukšu šo manu pilsētas tabulā.

820
00:39:42,900 --> 00:39:47,011
To sauca, no
Protams, mana lietotājiem galda.

821
00:39:47,011 --> 00:39:49,885
Un tā, ko man vajadzētu likt vairāk nekā šeit
manu pilsētās galda, jūs domājat?

822
00:39:49,885 --> 00:39:53,605

823
00:39:53,605 --> 00:39:54,535
>> Mērķauditorija: [dzirdams]

824
00:39:54,535 --> 00:39:55,930
>> DAVID Malan: Jā.

825
00:39:55,930 --> 00:40:01,440
Tātad zip un valsts un pilsētu.

826
00:40:01,440 --> 00:40:05,350
Un tā veids šeit, mēs sakām
tas būs char 5 atkal,

827
00:40:05,350 --> 00:40:06,750
pakļauts debatēm par agrāk.

828
00:40:06,750 --> 00:40:14,810
Tas būs enum, varbūt tāpat
pirms, un pilsēta būs varchar 50.

829
00:40:14,810 --> 00:40:17,960
Un tāpēc tagad, ko es varu
izdzēst no šīs tabulas

830
00:40:17,960 --> 00:40:21,995
lai novērstu šo neefektivitāti?

831
00:40:21,995 --> 00:40:23,100
>> Mērķauditorija: [dzirdams]

832
00:40:23,100 --> 00:40:23,850
DAVID Malan: Nice.

833
00:40:23,850 --> 00:40:30,239
Valsts un pilsētas iet prom, tāpēc es esmu tagad
novērsis iespējamo neefektivitāti

834
00:40:30,239 --> 00:40:33,280
par lieki atcerēties, Cambridge,
MA, Cambridge, MA, Cambridge, MA,

835
00:40:33,280 --> 00:40:35,712
Cambridge, MA, kas, cerams,
nekad gatavojas mainīt.

836
00:40:35,712 --> 00:40:37,670
Un pat tad, ja tā nav, tas ir
minorly kaitinošas, tagad

837
00:40:37,670 --> 00:40:39,750
ka man ir jāmaina
tā vairākās rindās,

838
00:40:39,750 --> 00:40:43,770
bet šeit, es varētu tikai
mainīt to vienā vietā.

839
00:40:43,770 --> 00:40:46,890
>> Tagad to, kas ir kompromiss, varbūt?

840
00:40:46,890 --> 00:40:48,020
Tas bija super ērti.

841
00:40:48,020 --> 00:40:50,730
Bija visus manus datus labi kopā.

842
00:40:50,730 --> 00:40:53,644
Bet kas ir skaidri gadījums tagad?

843
00:40:53,644 --> 00:40:55,684
>> Mērķauditorija: [dzirdams]

844
00:40:55,684 --> 00:40:58,100
DAVID Malan: Tieši tā, un es esmu
priecīgs jūs lietots vārds pievienoties,

845
00:40:58,100 --> 00:41:01,320
jo tas ir faktiski atslēgvārds,
pasaulē relāciju datu bāzēm

846
00:41:01,320 --> 00:41:05,270
SQL, tas ir reāls vārds jums
varētu rakstīt vai vismaz nodot.

847
00:41:05,270 --> 00:41:09,280
Un patiesībā, kas mums tagad ir jādara
izvēlēties Dāvida pilnu informāciju

848
00:41:09,280 --> 00:41:19,700
kaut kas līdzīgs izvēlieties zvaigzne no
lietotājiem, pievienoties pilsētas, on-- un tagad

849
00:41:19,700 --> 00:41:24,010
Es esmu gatavojas tikai pāriet uz otro pozīciju
tā ka šī fits-- users.zip vienāds

850
00:41:24,010 --> 00:41:34,570
cities.zip, kur users.ID ir vienāds ar 1.

851
00:41:34,570 --> 00:41:35,550
>> Tātad, kas notiek?

852
00:41:35,550 --> 00:41:38,970
Tas ir neglīts meklē, bet jūs varat veida
lasīt no kreisās uz labo, augšas uz leju.

853
00:41:38,970 --> 00:41:41,030
Izvēlieties zvaigzne no lietotājiem
ir tāds pats, kā iepriekš,

854
00:41:41,030 --> 00:41:42,930
bet tas nav no lietotājiem, per se.

855
00:41:42,930 --> 00:41:45,910
Tas ir no lietotājiem pievienoties pilsētas.

856
00:41:45,910 --> 00:41:48,520
Ko es savieno šīs divas tabulas?

857
00:41:48,520 --> 00:41:51,820
Nu, acīmredzot,
lietotāju galdi zip lauku,

858
00:41:51,820 --> 00:41:54,810
un šis periods ir tikai īpašs
sintakse izteikt, ka ideja,

859
00:41:54,810 --> 00:41:58,130
un tas ir pilsētas tabulas zip laukā.

860
00:41:58,130 --> 00:42:01,580
Es gribu tiem divi ir vienāda,
bet es gribu, lai galu galā izvēlētos

861
00:42:01,580 --> 00:42:06,280
tikai tie rindas, kur
ID lietotāju tabulā

862
00:42:06,280 --> 00:42:08,730
ir 1, kas gadījās būt mans.

863
00:42:08,730 --> 00:42:11,781
>> Un tikai, lai būtu skaidrs,
programmētājs, parasti, kad

864
00:42:11,781 --> 00:42:14,780
hardcode kaut ko līdzīgu skaitu
1, jo citādi tikai mājas lapā

865
00:42:14,780 --> 00:42:17,630
atbalsta Dāvidu vai
ļoti pirmais lietotājs, jūs

866
00:42:17,630 --> 00:42:20,720
tā vietā darīt
kaut kas līdzīgs ID, kur

867
00:42:20,720 --> 00:42:22,510
Tas liecina par
mainīgs, kaut kas

868
00:42:22,510 --> 00:42:26,210
var mainīties laika gaitā, līdzīgi
garā uz to, ko es teicu iepriekš

869
00:42:26,210 --> 00:42:28,080
ar šiem vietturi veidu.

870
00:42:28,080 --> 00:42:30,396
Bet tagad mēs vienkārši hardcode kā 1.

871
00:42:30,396 --> 00:42:31,520
Un tā, ko tas nozīmē?

872
00:42:31,520 --> 00:42:35,100
Nu, jauks veids, kā vizualizēt tas ir
ka tad, ja šī roka ir lietotāju tabula,

873
00:42:35,100 --> 00:42:38,090
un šī roka ir rāvējslēdzēji
galds, mēs esam sava veida finding--

874
00:42:38,090 --> 00:42:41,330
un padomus par manu pirkstiem ir zip
nekā šeit, un padomus par manu pirkstiem

875
00:42:41,330 --> 00:42:43,740
šeit ir zip, tu esi
veida savstarpēji to

876
00:42:43,740 --> 00:42:47,950
lai jūs saņemtu atpakaļ iegūtais
oriģinālu galds, ko patiesi pievienojoties

877
00:42:47,950 --> 00:42:49,590
divas tabulas par kopējo laukā.

878
00:42:49,590 --> 00:42:50,840
Un tas nav jābūt zip.

879
00:42:50,840 --> 00:42:54,460
Tas varētu būt visvairāk kaut kas cits, bet
zip ir jauki, jo viens, tas ir īss,

880
00:42:54,460 --> 00:42:56,470
divi, tas vienmēr ir
vienāda garuma, tāpēc tur ir

881
00:42:56,470 --> 00:43:02,270
reāla efektivitāte, ko
Olivier ierosināja šeit

882
00:43:02,270 --> 00:43:05,200
ar faktoringa ārā zip, un
[Dzirdams] ierosina, ka mēs atbrīvoties

883
00:43:05,200 --> 00:43:07,110
Pilsētas un valstis.

884
00:43:07,110 --> 00:43:11,370
>> Tātad šis ir process
pazīstams kā normalizēšanu.

885
00:43:11,370 --> 00:43:14,171
Visus jautājumus par šo?

886
00:43:14,171 --> 00:43:16,170
Nu ļaujiet man norādīt
Tas ir sava veida sīkumi,

887
00:43:16,170 --> 00:43:19,202
pat ja tas ir diezgan zema līmeņa,
šī diskusija, ka jūs domājat

888
00:43:19,202 --> 00:43:20,910
jūs veida iegūt
zaudētas nezālēm,

889
00:43:20,910 --> 00:43:26,690
tas ir izpausme plašas
iespēja izstrādātājiem būtu slikti.

890
00:43:26,690 --> 00:43:29,600
Un patiesībā, pat tad, kad mēs, jo
kursi es esmu mācījis, kad mēs esam bija,

891
00:43:29,600 --> 00:43:32,290
piemēram, nepieredzējuši
bakalaura programmētāji

892
00:43:32,290 --> 00:43:35,920
veidot mājas lapas, pēc pirmā acu uzmetiena,
mājas lapas varētu izskatīties drausmīgs.

893
00:43:35,920 --> 00:43:38,280
Un tie ir visi
funkcionalitāti mēs pieprasīts,

894
00:43:38,280 --> 00:43:40,650
attīstītāji paveica labu darbu.

895
00:43:40,650 --> 00:43:43,370
>> Bet viņi ne vienmēr zina,
pietiekami par datu bāzes projektēšana

896
00:43:43,370 --> 00:43:46,680
vai viņi nedomāja grūti
pietiekami daudz par datu veidiem

897
00:43:46,680 --> 00:43:49,220
un veidus lietotāju,
mājas lapa tika nāksies,

898
00:43:49,220 --> 00:43:53,240
un mēs redzam, tad, sešus mēnešus vēlāk,
pēc tam, kad esat beidzis vai pārvietots uz,

899
00:43:53,240 --> 00:43:56,016
ka sasodīts, mūsu mājas lapā
ir patiesi, patiesi lēns.

900
00:43:56,016 --> 00:43:58,890
Un es neesmu pat runāt par to, kam
miljoniem vai tūkstošiem lietotāju.

901
00:43:58,890 --> 00:44:02,580
Es domāju dažus simtus lietotājiem universitātes pilsētiņā,
visi no kuriem, piemēram, lai, piemēram,

902
00:44:02,580 --> 00:44:04,870
veikals kursos
tajā pašā laikā, viņi

903
00:44:04,870 --> 00:44:07,010
izmantojot šo kursu katalogs
pieteikums es teicu

904
00:44:07,010 --> 00:44:10,410
un lieta kļūst patiešām
lēni, jo nebija indeksi.

905
00:44:10,410 --> 00:44:13,740
Nebija sarkanās zvaigznes, tā
runā, vai mums bija ne vienmēr

906
00:44:13,740 --> 00:44:17,690
ņemt kopējus datus
dabūt ietaupījumu telpu.

907
00:44:17,690 --> 00:44:21,880
>> Un tad, kad Izvērtējot attīstītājs
vai datu bāzē persona vai tamlīdzīgi,

908
00:44:21,880 --> 00:44:25,864
veidiems jautājumiem domāt ar
ir pat, izskatot kādu kodu,

909
00:44:25,864 --> 00:44:28,530
teikt, ne vienmēr izskatīties
caur visu to kodu, bet saka,

910
00:44:28,530 --> 00:44:30,154
aplūkosim izmantojot datu bāzes tabulām.

911
00:44:30,154 --> 00:44:31,150
Ko jūs uzglabāt?

912
00:44:31,150 --> 00:44:33,941
Un tad teikt, labi, pagaidiet
minūte, kāpēc jūs lietojat vesels skaitlis?

913
00:44:33,941 --> 00:44:36,224
Ko darīt, ja mums ir 4 miljardi
un 1 no šīm rindām?

914
00:44:36,224 --> 00:44:38,140
Un šie veidi
jautājumi ir iespēja

915
00:44:38,140 --> 00:44:40,170
līdz veida stumšanas un
iegūt sajūtu, kur

916
00:44:40,170 --> 00:44:42,300
Ja jūs neesat ērti to
tas, kam ir kāds tehniskāks

917
00:44:42,300 --> 00:44:45,425
uzdot šos jautājumus, par to, vai
persona tiešām zina savas stuff.

918
00:44:45,425 --> 00:44:47,890
Un tas ir sava veida
sīkumi, arī to, ka cilvēki

919
00:44:47,890 --> 00:44:50,540
internetā, kas
ir autodidaktisks, varbūt

920
00:44:50,540 --> 00:44:53,920
mācīties retāk, jo jums
ne vienmēr nāk pāri

921
00:44:53,920 --> 00:44:56,630
tik daudz, jo jūs varat saņemt
datu bāze izveidota un darbojas,

922
00:44:56,630 --> 00:44:58,880
bet, ja esat izlasīt
līdzi konsultācijas vai bijis

923
00:44:58,880 --> 00:45:01,880
stāstīja par datubāzes normalizācija
un indeksēšana un veiktspēju,

924
00:45:01,880 --> 00:45:04,255
tie ir veida lietas
kas gatavojas ievainots jums.

925
00:45:04,255 --> 00:45:07,480
Un jūs varētu domāt, vai slikta inženieris
varētu teikt, oh, labi, mēs labāk pay

926
00:45:07,480 --> 00:45:09,600
Lai palielinātu datu bāzē
vai ātrāks datu bāze

927
00:45:09,600 --> 00:45:13,360
vai vienkārši mest naudu šajā,
vertikāli mēroga, ne vienmēr tā.

928
00:45:13,360 --> 00:45:16,920
Ja jūs iet in-- un jūs varat doties
pēc fact-- un pievienot indeksu,

929
00:45:16,920 --> 00:45:20,320
un tas var ilgt dažas stundas par
datu bāzi, lai izveidotu šo jauno datu

930
00:45:20,320 --> 00:45:24,100
struktūra, kas man norādīja uz agrāk,
Jūs joprojām varat noteikt šo pēc fakta,

931
00:45:24,100 --> 00:45:26,180
ka tas ir, ja jūs
sāk atšķirt

932
00:45:26,180 --> 00:45:28,830
labi dizaineri no slikti
dizaineri, ne tikai estētiski,

933
00:45:28,830 --> 00:45:32,972
bet darbības ziņā, kā arī.

934
00:45:32,972 --> 00:45:33,555
Kādi jautājumi?

935
00:45:33,555 --> 00:45:36,420

936
00:45:36,420 --> 00:45:37,480
Nē?

937
00:45:37,480 --> 00:45:41,980
Tātad NoSQL, kas bija otrs tips
no datubāzes, uz kuru es norādīja iepriekš,

938
00:45:41,980 --> 00:45:43,490
jums nav rindas un kolonnas.

939
00:45:43,490 --> 00:45:47,000
Tā vietā, jums būtu kaut kas
kas izskatās nedaudz vairāk kā šis.

940
00:45:47,000 --> 00:45:48,630
Es esmu gatavojas izmantot kopīgu sintaksi.

941
00:45:48,630 --> 00:45:51,270
Cirtaini bikšturi gadās
izmantot šeit diezgan daudz.

942
00:45:51,270 --> 00:45:55,400
Jums varētu būt kaut kas
tāpat vārds ir David,

943
00:45:55,400 --> 00:46:00,180
jums varētu būt pēdējais
vārds ir Malan, citātus,

944
00:46:00,180 --> 00:46:07,530
Jums varētu būt ID is--
atvainojiet, whoops-- ID ir 1,

945
00:46:07,530 --> 00:46:13,410
e-pasts ir malan@harvard.edu, un es ne
apnikt rakstīt out pārējo, un tad

946
00:46:13,410 --> 00:46:14,380
dažas citas lietas.

947
00:46:14,380 --> 00:46:17,380
>> Citiem vārdiem sakot, tas ir
tekstuāls pārstāvība

948
00:46:17,380 --> 00:46:20,720
par to, ko mēs varētu vispār zvanīt
objekts ir datorprogramma.

949
00:46:20,720 --> 00:46:26,079
Un objekts parasti ir tikai
kolekcija galveno vērtību pārus.

950
00:46:26,079 --> 00:46:27,370
Tātad vēlreiz, šī tēma,.

951
00:46:27,370 --> 00:46:30,440
Mēs redzējām atslēgas vērtību pārus HTML,
mēs redzējām atslēgas vērtību pārus tagad

952
00:46:30,440 --> 00:46:34,020
kontekstā datu bāzes, un mēs
redzēja galveno vērtību pārus kontekstā

953
00:46:34,020 --> 00:46:35,970
no, manuprāt, valoda agrāk šodien.

954
00:46:35,970 --> 00:46:36,890
Tur nāk uz augšu.

955
00:46:36,890 --> 00:46:39,620
Un tiešām, tas ir patiešām
kādi dati vārīties uz leju, lai,

956
00:46:39,620 --> 00:46:44,240
datus un metadatus, vai vērtības
un atslēgas, attiecīgi.

957
00:46:44,240 --> 00:46:47,430
>> Tātad ne-relāciju
datu bāzes, kaut balstītas

958
00:46:47,430 --> 00:46:50,680
par objektiem, kur jūs vienkārši salīp
viss kopā un nodot to

959
00:46:50,680 --> 00:46:55,640
atmiņā, tas parasti ir
attēlots, vai domāja par, jo tas.

960
00:46:55,640 --> 00:47:00,500
Un es ņemšu atvaļinājumu, ka tagad kā
veida alternatīva pieeja.

961
00:47:00,500 --> 00:47:03,750
Un viens ne vienmēr
labāk nekā otru.

962
00:47:03,750 --> 00:47:07,310
Patiesībā, ļoti modē
šajās dienās ir datu bāzu sistēmas

963
00:47:07,310 --> 00:47:11,942
piemēram MongoDB un REDIS un daži
citi šādi instrumenti, brīvi pieejami,

964
00:47:11,942 --> 00:47:13,400
bet tie ir arvien en modē.

965
00:47:13,400 --> 00:47:18,850
Daļēji tāpēc, ka tie piedāvā papildu
funkcijas vairāk nekā šīm tabulām pieejām,

966
00:47:18,850 --> 00:47:20,850
bet arī tāpēc, ka viņi
mazliet vieglāk izmantot,

967
00:47:20,850 --> 00:47:24,099
jo jums nav jādomā tik grūti
par daudz no šiem dizains lēmumus.

968
00:47:24,099 --> 00:47:25,970
Tātad plusiem un mīnusiem.

969
00:47:25,970 --> 00:47:29,740
Tātad saprotu, ka ir iespējas
tikai to, kas mēs vienkārši pavadīja laiku.

970
00:47:29,740 --> 00:47:32,310
>> Tātad, pieņemsim darīt.

971
00:47:32,310 --> 00:47:37,870
Pieņemsim pāriet mazliet
atpakaļ tagad web programmēšana,

972
00:47:37,870 --> 00:47:40,470
lai mēs veida secināt
šodien ar kaut ko

973
00:47:40,470 --> 00:47:43,930
Tas ir maz praktisku, aizpildot
dažos nepilnības no vakardienas.

974
00:47:43,930 --> 00:47:45,340
Ļaujiet man iet uz šo pirmo.

975
00:47:45,340 --> 00:47:49,310
Tik atgādināt, ka vakar
mums bija dažas kanonisko HTML

976
00:47:49,310 --> 00:47:55,110
lapas, kas bija sākotnēji, tikai
HTML, un pēc tam, otrkārt bija CSS,

977
00:47:55,110 --> 00:47:56,620
kaskādes stila lapas.

978
00:47:56,620 --> 00:47:59,830
Šī ir jauna tag ka mēs neesam
redzēt vakar, vai kavēties,

979
00:47:59,830 --> 00:48:01,490
tā saukto skriptu tag.

980
00:48:01,490 --> 00:48:05,830
>> Izrādās, jūs faktiski var iegult
valodā sauc JavaScript savā tīmekļa

981
00:48:05,830 --> 00:48:08,310
lapa un padarīt savu web
lapas kaut ko darīt.

982
00:48:08,310 --> 00:48:09,710
Tātad, ko es ar to domā?

983
00:48:09,710 --> 00:48:12,630
Nu, ļaujiet man iet uz priekšu un tikai
aizņemties šo kodu uz brīdi.

984
00:48:12,630 --> 00:48:15,860
Es iešu uz Cloud9, nav nepieciešams
iet tur sevi tikai vēl,

985
00:48:15,860 --> 00:48:21,350
un es esmu gatavojas, lai izsauktu šo alert.HTML.

986
00:48:21,350 --> 00:48:23,650
Es esmu gatavojas ielīmēt manā failā šeit.

987
00:48:23,650 --> 00:48:32,070
Un tikai, lai precizētu to, ko es esmu darījusi, ļaujiet
man iet uz šo adresi un iet, lai brīdinātu,

988
00:48:32,070 --> 00:48:33,870
un jūs redzēt Hello World.

989
00:48:33,870 --> 00:48:35,440
>> Bet tas ir sava veida underwhelming.

990
00:48:35,440 --> 00:48:37,410
Es gribu darīt kaut ko
nedaudz atšķiras.

991
00:48:37,410 --> 00:48:40,610
Tāpēc es esmu gatavojas, lai faktiski darīt.

992
00:48:40,610 --> 00:48:43,820
Es iešu šeit e,
un starp manu skriptu tagiem,

993
00:48:43,820 --> 00:48:53,460
saka brīdinājumu ( "Hello, World"); tāpēc paziņojums
tas ir mazliet apliets, bet man HTML,

994
00:48:53,460 --> 00:48:56,180
no kura iekšpusē ir
valodā sauc JavaScript,

995
00:48:56,180 --> 00:48:59,420
un tas ir tas, ko sauc par
funkcija zvans vai procedūras izsaukums.

996
00:48:59,420 --> 00:49:04,500
Tas ir vārds, burtiski, šajā gadījumā,
un es esmu atsaucoties kods funkcionalitāti

997
00:49:04,500 --> 00:49:06,310
ka kāds cits rakstīja.

998
00:49:06,310 --> 00:49:09,630
>> Tā, ka funkcionalitāte ir
brīdinājumu, tāpēc iesim uz šo lapu

999
00:49:09,630 --> 00:49:14,046
tagad un noklikšķiniet Pārlādēt un tagad jūs
redzēt mazliet interaktivitāti.

1000
00:49:14,046 --> 00:49:15,420
Tas ir sava veida vecās skolas un neglīts.

1001
00:49:15,420 --> 00:49:18,580
Šāda veida atgādina jums no
pop-ups, iespējams, no vakardienas

1002
00:49:18,580 --> 00:49:22,030
bet tas bija jādara kaut kas
nedaudz vairāk programmatisks.

1003
00:49:22,030 --> 00:49:26,940
>> Tātad vairāk nekā, pieņemsim do
kaut ko interesantu.

1004
00:49:26,940 --> 00:49:30,980
Ļaujiet man iet šeit un atbrīvoties no tā.

1005
00:49:30,980 --> 00:49:33,840
Un es iešu uz priekšu un
izveidotu formu, piemēram, mēs darījām vakar.

1006
00:49:33,840 --> 00:49:34,840
Patiesībā, jūs zināt, ko?

1007
00:49:34,840 --> 00:49:37,350
Es iešu uz
google.html, ko mēs

1008
00:49:37,350 --> 00:49:43,027
sākās vakar, kas izskatījās
tas, caur kuru mēs meklēja kaķis

1009
00:49:43,027 --> 00:49:45,360
Bet paziņojums tur ir sava veida
bug pašreizējā redakcijā.

1010
00:49:45,360 --> 00:49:49,770
Tas darbojas kaķiem, bet pieņemsim, ka
Man nav sadarboties un es rakstīt neko,

1011
00:49:49,770 --> 00:49:53,290
un es vienkārši noklikšķiniet uz Iesniegt.

1012
00:49:53,290 --> 00:49:54,540
Tas ir sava veida dīvaini uzvedību.

1013
00:49:54,540 --> 00:49:57,300
Aizveda mani uz reālo Google,
nedeva man kļūdas ziņojumu.

1014
00:49:57,300 --> 00:50:00,590
Es gribētu pateikt lietotāju
jums ir nepieciešams, lai dotu mums vērtību.

1015
00:50:00,590 --> 00:50:01,780
>> Tātad, kā varētu mēs to darām?

1016
00:50:01,780 --> 00:50:06,790
Nu ļaujiet man iet atpakaļ Cloud9 un
ļaujiet man iet uz augšu manu lapu

1017
00:50:06,790 --> 00:50:11,980
un pievienot skriptu tag, piemēram, tas, kur
Es esmu gatavojas rakstīt kādu JavaScript kodu.

1018
00:50:11,980 --> 00:50:15,420
Un es esmu gatavojas darīt turpmāk.

1019
00:50:15,420 --> 00:50:22,910
Ja (document.getelementByID-- un atsaukšana
ka mēs runājām par to, ka agrāk,

1020
00:50:22,910 --> 00:50:23,960
ka funkcija.

1021
00:50:23,960 --> 00:50:25,310
Ko ID vēlos saņemt?

1022
00:50:25,310 --> 00:50:33,050
Es vēlos saņemt q, un es esmu gatavojas
teiksim vienāds neko, tāpat this--

1023
00:50:33,050 --> 00:50:38,220
faktiski ļaujiet man izmantot dubultās pēdiņas
tikai consistency-- vienāds neko,

1024
00:50:38,220 --> 00:50:46,650
tad alert ( "Lūdzu ievadiet vaicājumu") šeit.

1025
00:50:46,650 --> 00:50:49,200
>> Tāpēc man ir, kas šķiet
kaut kas līdzīgs stāvoklī.

1026
00:50:49,200 --> 00:50:51,410
Mēs esam redzējuši šo vispārējo ideju nulles.

1027
00:50:51,410 --> 00:50:54,240
Tas ir, piemēram, viens no tiem puzzle
gabali, kas izskatījās šādi.

1028
00:50:54,240 --> 00:50:55,780
Un ko es esmu sevi saprotams?

1029
00:50:55,780 --> 00:50:59,520
Nu, uz leju šeit, ievērosiet, es esmu
gatavojas veikt šādas darbības.

1030
00:50:59,520 --> 00:51:02,790
Es esmu gatavojas sniegt šo formu
lauks ne tikai nosaukums, q, kas

1031
00:51:02,790 --> 00:51:06,630
ir tas, kas izpaužas nodota Google, bet es esmu
gatavojas sniegt tai Vietējais identifikators,

1032
00:51:06,630 --> 00:51:07,630
sauc arī q.

1033
00:51:07,630 --> 00:51:11,780
Bet es varētu saukt šo kaut ko es
gribu, es esmu tikai gatavojas to saglabāt vienkāršu

1034
00:51:11,780 --> 00:51:14,570
un arī to sauc q, tikai vienkāršību.

1035
00:51:14,570 --> 00:51:17,650
>> Un tagad es esmu gatavojas darīt
kaut nedaudz vairāk.

1036
00:51:17,650 --> 00:51:22,600
Uz laukos šeit, es esmu gatavojas
pievienot to, ko sauc notikums apdarinātājs.

1037
00:51:22,600 --> 00:51:32,260
Apstiprināšanas, es vēlos, lai izsauktu
funkcija sauc Apstiprināt.

1038
00:51:32,260 --> 00:51:35,520
Tas vēl nepastāv, tas
vārds, vai šis vārds Apstiprināt,

1039
00:51:35,520 --> 00:51:38,560
jo tas, ko es esmu gatavojas darīt
šeit tagad ir pievienot kodu.

1040
00:51:38,560 --> 00:51:42,200
>> Es esmu gatavojas teikt funkciju Validate.

1041
00:51:42,200 --> 00:51:48,280
Es esmu gatavojas atkāpi šo un pievienot citu
cirtaini lencēm šeit un vēl viens šeit.

1042
00:51:48,280 --> 00:51:50,110
Jāapsver, kas tas ir tagad dara.

1043
00:51:50,110 --> 00:51:54,210
Man ir now-- domāt par to kā radīja mans
pašu puzzle gabals, kas nebija iepriekš

1044
00:51:54,210 --> 00:51:57,440
pastāv, un es esmu sauc šo puzzle
gabals ar Apstiprināt puzzles gabaliņam.

1045
00:51:57,440 --> 00:52:01,620
Tās mērķis dzīvē ir izpildīt
četri rindas kods iekšpusē no tā.

1046
00:52:01,620 --> 00:52:04,940
>> Ja document.getElementById
tik konceptuāli,

1047
00:52:04,940 --> 00:52:09,380
kas gatavojas doties uz elementu,
HTML elements, kura unikāls

1048
00:52:09,380 --> 00:52:12,930
iecere, ir tikai Q, un pēc tam, lai gan
sintakse izskatās mazliet dīvaini,

1049
00:52:12,930 --> 00:52:16,430
kas vienāds vienāds tikai nozīmē vienāds.

1050
00:52:16,430 --> 00:52:20,950
Tātad tas nozīmē, ja elements ar
unikāls identifikators q, kad dabūt,

1051
00:52:20,950 --> 00:52:25,700
nav nekādas vērtības, tā vienkārši ir vienāds
quote likt pēdiņas beigās, nekas tur,

1052
00:52:25,700 --> 00:52:27,170
tad ko es gribu darīt?

1053
00:52:27,170 --> 00:52:29,360
Es gribu kliegt pie lietotāja.

1054
00:52:29,360 --> 00:52:31,710
>> Un mēs neko lielu detalizēti šeit.

1055
00:52:31,710 --> 00:52:32,960
Es esmu gatavojas atgriezties viltus.

1056
00:52:32,960 --> 00:52:34,380
Tā ir kļūda.

1057
00:52:34,380 --> 00:52:38,746
Else, es esmu gatavojas atgriezties true.

1058
00:52:38,746 --> 00:52:40,120
Tātad, vai nu tā strādāja, vai tā nav.

1059
00:52:40,120 --> 00:52:41,800
Nepatiesa vai taisnība.

1060
00:52:41,800 --> 00:52:47,820
Un tagad, ja man nav nekādas kļūdas,
ļaujiet man saglabāt šo un pārlādēt to.

1061
00:52:47,820 --> 00:52:50,940
Un ļaujiet man tikai vēlreiz pārbaudiet, ka
Man nebija, patiesībā nekādas typos,

1062
00:52:50,940 --> 00:52:52,690
tāpēc man nav apgrūtināt sevi.

1063
00:52:52,690 --> 00:52:54,240
Let 's redzēt, ja tas darbojas.

1064
00:52:54,240 --> 00:52:56,930
>> Tāpēc tagad es esmu gatavojas rakstīt kaķiem.

1065
00:52:56,930 --> 00:52:59,421
Tas joprojām darbojas, vai pusi darbi, vismaz.

1066
00:52:59,421 --> 00:53:02,170
Tagad ļaujiet man pārlādēt to, un tagad ļaujiet
man mēģināt iesniegt bez ierakstot

1067
00:53:02,170 --> 00:53:05,860
anything-- damn, tā lauza.

1068
00:53:05,860 --> 00:53:06,430
Vienu mirklīti.

1069
00:53:06,430 --> 00:53:09,380

1070
00:53:09,380 --> 00:53:12,660
Ļaujiet man atvērt konsoli,
[Dzirdams] log, pārlādēt lapu.

1071
00:53:12,660 --> 00:53:13,576
Ļaujiet man mēģināt to vēlreiz.

1072
00:53:13,576 --> 00:53:17,000

1073
00:53:17,000 --> 00:53:17,501
Ak, sasodīts.

1074
00:53:17,501 --> 00:53:18,000
ES aizmirsu.

1075
00:53:18,000 --> 00:53:18,630
Es drukas kļūdu.

1076
00:53:18,630 --> 00:53:20,760
Es atceros, kas tas ir.

1077
00:53:20,760 --> 00:53:21,350
.value.

1078
00:53:21,350 --> 00:53:27,060
Es gribēju teikt, ja vērtība
Elementa kuru ID ir Q

1079
00:53:27,060 --> 00:53:29,800
sakrīt ar to, un pēc tam bļaut pie lietotājam.

1080
00:53:29,800 --> 00:53:31,870
>> Tāpēc tagad ļaujiet man turēt manu elpu vēlreiz.

1081
00:53:31,870 --> 00:53:33,480
Te nu mēs esam.

1082
00:53:33,480 --> 00:53:34,130
Tur mēs ejam.

1083
00:53:34,130 --> 00:53:35,010
Lūdzu, ievadiet vaicājumu.

1084
00:53:35,010 --> 00:53:36,840
Tātad tas nav ļaujot man cauri.

1085
00:53:36,840 --> 00:53:40,210
Es varu būt veida jautrs ar to,
un tā vietā, pārbaudot nekādas vērtības,

1086
00:53:40,210 --> 00:53:46,720
Es varu teikt kaut ko līdzīgu,
ne vairāk meklē kaķiem,

1087
00:53:46,720 --> 00:53:51,150
un tagad mēs varam tikai vairāk rotaļīgi let
lietotājs meklēšanas suņiem, ja viņš vai viņa

1088
00:53:51,150 --> 00:53:57,490
vēlas, vai, ja man iet šeit un
meklēt kaķiem, tagad es nevaru.

1089
00:53:57,490 --> 00:53:58,690
>> Tātad, kāda ir takeaway šeit?

1090
00:53:58,690 --> 00:54:03,010
Tik viens, mēs esam ievesti
Mūsu pasaule HTML un CSS,

1091
00:54:03,010 --> 00:54:04,320
programmēšana funkcionalitāti.

1092
00:54:04,320 --> 00:54:06,300
Es varu tiešām tagad
pieņemt lēmumus kodu.

1093
00:54:06,300 --> 00:54:10,570
Agrāk, es varētu darīt, ir atzīmēt
teksta saturu vai grafisko saturu

1094
00:54:10,570 --> 00:54:13,080
un pateikt to, ko meklē
izskats un kur, lai parādītu.

1095
00:54:13,080 --> 00:54:16,650
Tagad es patiesībā var lūgt
Jautājumi par mājas lapu

1096
00:54:16,650 --> 00:54:20,010
un pieņemt lēmumus, balstoties
par to, un nekavējoties lietotājam

1097
00:54:20,010 --> 00:54:22,780
ja man ir nepieciešams, lai kliegt uz viņu.

1098
00:54:22,780 --> 00:54:28,740
>> Tātad, pieņemsim mēģināt kaut ko
par mūsu pašu ar šo.

1099
00:54:28,740 --> 00:54:33,350
Iet uz priekšu, ļaujiet man atvērt nākamo slaidu
šeit, un tikai norādīt vienu lietu.

1100
00:54:33,350 --> 00:54:37,250
Tāpat kā ar CSS, mēs varam faktors out
Mūsu JavaScript kodu atsevišķā failā,

1101
00:54:37,250 --> 00:54:40,660
Jūs varat darīt to pašu
ar JavaScript kā ar CSS.

1102
00:54:40,660 --> 00:54:44,520
Un jūs izmantojat, ka, izmantojot avotu
atribūts skriptu tag.

1103
00:54:44,520 --> 00:54:46,540
Bet mēs ne sarežģīt lietas tagad.

1104
00:54:46,540 --> 00:54:50,440
Tā vietā, ja jūs varētu
iet uz ne šajā lapā,

1105
00:54:50,440 --> 00:55:02,690
but-- ļaujiet man pārvietot šo pa order--
iet uz, ja jūs varētu, šo lapu šeit.

1106
00:55:02,690 --> 00:55:03,592
Šis URL šeit.

1107
00:55:03,592 --> 00:55:04,550
Tas ir šodienas slaidiem.

1108
00:55:04,550 --> 00:55:07,133
Jums varētu būt, lai pārlādētu, jo
Es esmu pievienojis pāris lieta.

1109
00:55:07,133 --> 00:55:09,970

1110
00:55:09,970 --> 00:55:13,890
>> Bet iet tur, kur daži puzles sagaidīt.

1111
00:55:13,890 --> 00:55:16,670
Un tas dos mums iespēju,
nedaudz vairāk jautrības kontekstā,

1112
00:55:16,670 --> 00:55:20,610
plunčāties ar kādu JavaScript.

1113
00:55:20,610 --> 00:55:25,505
Un, kad jūs tur nokļūt,
Es paskaidrošu, ko gaida.

1114
00:55:25,505 --> 00:55:47,350

1115
00:55:47,350 --> 00:55:47,850
Saņemt zaļa.

1116
00:55:47,850 --> 00:56:03,063

1117
00:56:03,063 --> 00:56:03,562
Uzstādīt zils.

1118
00:56:03,562 --> 00:56:11,030

1119
00:56:11,030 --> 00:56:13,930
Sets zaļš, komplekti sarkans.

1120
00:56:13,930 --> 00:56:19,220

1121
00:56:19,220 --> 00:56:20,220
Hmm.

1122
00:56:20,220 --> 00:56:22,330
Piedodiet.

1123
00:56:22,330 --> 00:56:27,630
>> Tas ir apjoms mūsu
dokumentācija par šo izaicinājumu.

1124
00:56:27,630 --> 00:56:29,920
Un tas ir gatavojas strādāt šādi.

1125
00:56:29,920 --> 00:56:33,340
Tātad, kas jums ir par šo
lapa ir visai ķekars

1126
00:56:33,340 --> 00:56:38,024
attēla puzles ar draugu
Stenfordas universitātē.

1127
00:56:38,024 --> 00:56:41,190
Tātad, ko jūs redzēt šeit ir gandrīz
veida vienu no šīm burvju acu puzles,

1128
00:56:41,190 --> 00:56:43,815
bet, ja jūs vienkārši skatās uz to,
nekas gatavojas pop out pie jums.

1129
00:56:43,815 --> 00:56:46,000
Drīzāk, kaut kas ir
paslēptas šo attēlu.

1130
00:56:46,000 --> 00:56:47,790
Un tas ir paslēptas šādi.

1131
00:56:47,790 --> 00:56:51,740
Attēlus, kā jūs zināt, var būt
veido tikai trīs krāsas.

1132
00:56:51,740 --> 00:56:53,346
Daži sarkans, daži zils, un daži zaļš.

1133
00:56:53,346 --> 00:56:55,220
Un mēs varam darīt visu
krāsas no varavīksnes

1134
00:56:55,220 --> 00:56:57,570
sajaucot šos trīs krāsas kaut kā.

1135
00:56:57,570 --> 00:57:01,940
>> Tātad šis izskatās pārsvarā zaļa un
zila, bet kā Nick saka šeit,

1136
00:57:01,940 --> 00:57:04,060
šis gludeklis puzzle attēls ir puzzle.

1137
00:57:04,060 --> 00:57:06,780
Tā satur attēlu
kaut kas slavens, tomēr,

1138
00:57:06,780 --> 00:57:08,310
attēls ir izkropļots.

1139
00:57:08,310 --> 00:57:11,500
Slavenā objekts ir sarkanajās vērtībām.

1140
00:57:11,500 --> 00:57:13,810
Tomēr sarkanās vērtības
tie visi ir dalīts ar 10.

1141
00:57:13,810 --> 00:57:16,230
Tātad tie ir pārāk mazi ar koeficientu 10.

1142
00:57:16,230 --> 00:57:18,280
Tātad citiem vārdiem sakot, Nick
ņēma oriģinālo attēlu,

1143
00:57:18,280 --> 00:57:21,500
un viņš desaturated visu
Sarkanā no tā,

1144
00:57:21,500 --> 00:57:23,850
pazeminot summu sarkans
tinte, ja jūs, tajā.

1145
00:57:23,850 --> 00:57:26,060
>> Zilās un zaļās vērtības
visi ir tikai bezjēdzīga,

1146
00:57:26,060 --> 00:57:30,000
izlases vērtības, aka troksnis izstrādātas
aizēnot reālo attēlu.

1147
00:57:30,000 --> 00:57:32,250
Tātad, ko Nick darīja viņš bija
pieklusināta sarkanā un pēc tam

1148
00:57:32,250 --> 00:57:34,380
viņš vienkārši iemeta izlases
summas zilā un zaļā krāsā

1149
00:57:34,380 --> 00:57:37,590
pie attēla veida neskaidrs
to, kas patiesībā joprojām.

1150
00:57:37,590 --> 00:57:41,089
Jums ir atsaukt šos traucējumus
lai atklātu attēlu.

1151
00:57:41,089 --> 00:57:44,255
Pirmkārt, noteikt visus zilā un zaļā vērtības
līdz nullei, lai saņemtu viņiem no tā,

1152
00:57:44,255 --> 00:57:48,700
un apskatīt rezultātu. tad
reizināt katru sarkano vērtību par 10,

1153
00:57:48,700 --> 00:57:51,720
mērogošana atpakaļ līdz
apmēram tā galīgā vērtība.

1154
00:57:51,720 --> 00:57:53,035
Kas ir slavens objekts?

1155
00:57:53,035 --> 00:57:57,920
>> Tātad jums visiem ir šī taisnstūri
pārlūkā tiesības tagad.

1156
00:57:57,920 --> 00:58:00,830
Un paziņojums, ka pastāv zināma
starteris kods, lai runāt.

1157
00:58:00,830 --> 00:58:04,370
Tas ir JavaScript kods, kas
Niks ir rakstīts jums.

1158
00:58:04,370 --> 00:58:07,250
Un ievērosiet, ka tur ir
līnija vidū, kas

1159
00:58:07,250 --> 00:58:10,380
sākas ar slīpsvītra slīpsvītra, kas ir
to, kas parasti sauc komentāru.

1160
00:58:10,380 --> 00:58:14,660
Tas nozīmē, ka tā ir frāze, lai programmētājs
ka nav nekādas funkcionālas nozīmes.

1161
00:58:14,660 --> 00:58:16,520
Tas ir tikai vizuāls norādījums uz cilvēku.

1162
00:58:16,520 --> 00:58:18,670
>> Tātad jūs varat iet uz priekšu un
izdzēst tikai šo līniju,

1163
00:58:18,670 --> 00:58:22,214
un jābūt super uzmanīgiem, lai
izdzēst vai mainīt kaut kas cits.

1164
00:58:22,214 --> 00:58:25,130
Un ļaujiet man tikai staigāt jums caur
ko šis kods dara un es ņemšu atstāt to

1165
00:58:25,130 --> 00:58:28,580
jums, lai noskaidrotu slepeno attēlu.

1166
00:58:28,580 --> 00:58:32,226
Šī pirmā līnija šeit, ka es esmu tikko
iezīmēto dod jums sekojošo.

1167
00:58:32,226 --> 00:58:34,100
Kreisajā pusē,
Jums ir, ko sauc

1168
00:58:34,100 --> 00:58:39,140
mainīga, ka Niks ir patvaļīgi,
bet pamatoti sauc im par attēlu.

1169
00:58:39,140 --> 00:58:41,660
Labajā pusē
šīs vienādības zīmi,

1170
00:58:41,660 --> 00:58:45,240
viņš saka man jauna
quote, likt pēdiņas beigās "vienkāršu attēlu".

1171
00:58:45,240 --> 00:58:49,680
>> Vienkārša attēlu, šajā kontekstā
ir tas, ko sauc par klases, labi,

1172
00:58:49,680 --> 00:58:53,910
tas ir sava veida kā class--
tehniski prototype-- bet tiešām,

1173
00:58:53,910 --> 00:58:58,000
Tas dod man jaunu objektu,
kura saturs ir fails,

1174
00:58:58,000 --> 00:58:59,610
dzelzs puzzle.png.

1175
00:58:59,610 --> 00:59:03,190
Citiem vārdiem sakot, Nick ir izveidojusi
šis jēdziens vienkāršu attēlu

1176
00:59:03,190 --> 00:59:05,920
tā ka mēs varam, par pedagoģisko
mērķiem, spēlēt ar attēlu

1177
00:59:05,920 --> 00:59:09,790
un mainīt tās sarkans,
zaļa, zila un vērtības.

1178
00:59:09,790 --> 00:59:11,750
>> Un kā mēs darām?

1179
00:59:11,750 --> 00:59:15,360
Tas nedaudz mistisks sintakse šeit
ir veids kā to atkārtot bloks

1180
00:59:15,360 --> 00:59:19,140
ka daži no jums redzēja Scratch agrāk
šodien, kur jūs varat atkārtot 10 reizes.

1181
00:59:19,140 --> 00:59:22,220
Šajā gadījumā, Nick ir ne
hardcoded numuru, piemēram, 10.

1182
00:59:22,220 --> 00:59:28,020
Tā vietā viņš saka, inicializēt
mainīgais ko sauc par x 0,

1183
00:59:28,020 --> 00:59:33,180
pārbaudītu, ja x ir mazāks nekā
platums no attēla.

1184
00:59:33,180 --> 00:59:38,160
>> Un tā ir vairāk pareizi, tēls ir
mainīgs, dot nozīmē iet iekšā no tā

1185
00:59:38,160 --> 00:59:40,900
un saņemt tās platumu, un
tad atveriet paren, slēgta

1186
00:59:40,900 --> 00:59:43,687
paren ir tikai programmētāja veids
no sakot, tas ir funkcija.

1187
00:59:43,687 --> 00:59:44,520
Tā ir procedūra.

1188
00:59:44,520 --> 00:59:46,430
Tas ir funkcionalitāte
kāds cits rakstīja.

1189
00:59:46,430 --> 00:59:48,570
Izmantojiet to un dod man atpakaļ atbildi.

1190
00:59:48,570 --> 00:59:53,610
Un tad x ++ ir iedomātā veids
sakot, kad jūs esat darījuši to vienu reizi,

1191
00:59:53,610 --> 00:59:55,850
pieauguma x ar 1.

1192
00:59:55,850 --> 00:59:58,760
Citiem vārdiem sakot, šis
ir programmētāja veids

1193
00:59:58,760 --> 01:00:05,760
inducēt cilpu, kas ir
gatavojas atkārtot vairāk

1194
01:00:05,760 --> 01:00:10,410
visi no slejās attēlu.

1195
01:00:10,410 --> 01:00:14,790
>> Attēls ir tikai režģis
punkti, rindas un kolonnas punktiem.

1196
01:00:14,790 --> 01:00:18,270
Tas ir veids, atkārtojot
visas no šīm kolonnām.

1197
01:00:18,270 --> 01:00:20,770
Un no iekšpuses,
tikmēr mēs atkārtojot

1198
01:00:20,770 --> 01:00:24,030
pa augstumiem, šeit
un šeit un šeit.

1199
01:00:24,030 --> 01:00:29,442
Tātad tas ir tikai veids, kā traipsing,
gandrīz kā vecs skolas rakstāmmašīnas,

1200
01:00:29,442 --> 01:00:32,230
tikai iet pār
viss attēls iteratīvi.

1201
01:00:32,230 --> 01:00:36,370
Pat tas nav gluži pilnīgi
skaidrs, lietojiet tikai uz ticību tagad,

1202
01:00:36,370 --> 01:00:38,880
ka šiem trim līnijām
kodu kopā ir

1203
01:00:38,880 --> 01:00:43,090
gatavojas ļauj jums iteratīvi meklēt
katrā pikseli, katrs dot attēlā.

1204
01:00:43,090 --> 01:00:43,790
>> Kas ir pikselis?

1205
01:00:43,790 --> 01:00:46,250
Nu, lai būtu skaidrs, ja mēs skatāmies
at oriģinālu un tuvinātu,

1206
01:00:46,250 --> 01:00:49,060
ja jūs patiešām likts acis
uz datora ekrāna, kas ir

1207
01:00:49,060 --> 01:00:53,510
tikai visu ķekars punkti, vairāki
tūkstoš punkti iepakot kopā tur.

1208
01:00:53,510 --> 01:00:56,180
Un tā, ko jūs esat par to darīt?

1209
01:00:56,180 --> 01:00:59,240
Katrs no šiem punktiem,
galīgo definīciju,

1210
01:00:59,240 --> 01:01:06,350
ir rezultāts, kas ir vispārēji
sauc RGB, sarkana, zaļa, zila, kas

1211
01:01:06,350 --> 01:01:09,940
atkal, var tikt apvienoti, lai
jums dot nekādu krāsu skaits.

1212
01:01:09,940 --> 01:01:13,200
>> Patiesībā, ja jūs atceraties
no daudziem atpakaļ, daudziem gadiem,

1213
01:01:13,200 --> 01:01:17,320
projektora ekrāni, piemēram, šīm lietām
izmanto, lai ir nevis vienu objektīvu, bet trīs.

1214
01:01:17,320 --> 01:01:20,700
Viens no tiem izspļaut sarkanās gaismas, viens no
tos izspļaut zaļo gaismu, viens no tiem

1215
01:01:20,700 --> 01:01:21,600
izspļaut zila gaisma.

1216
01:01:21,600 --> 01:01:24,391
Un, ja jūs bijāt kādā vidusskolā
kā man bija, kur viņi nekad

1217
01:01:24,391 --> 01:01:27,000
pareizi saskaņota, tu biji
vienmēr skatoties vēstures filmas

1218
01:01:27,000 --> 01:01:29,770
kas bija nedaudz izkropļota,
jo trīs krāsas nebija

1219
01:01:29,770 --> 01:01:30,970
apvienojot pareizi.

1220
01:01:30,970 --> 01:01:36,330
>> Bet tas izrādās, ka katrs no
šīs vērtības sarkana, zaļa un zila,

1221
01:01:36,330 --> 01:01:37,980
var būt skaitlis, kas saistīts ar tiem.

1222
01:01:37,980 --> 01:01:42,500
Piemēram, 0 Red nozīmē nē
sarkana, 0. zaļas nozīmē ne zaļš,

1223
01:01:42,500 --> 01:01:45,120
un 0 zilu nozīmē ne zila.

1224
01:01:45,120 --> 01:01:49,403
Tātad, ja jums nav sarkans, ne zaļš,
un nav zils, kādas krāsas jums ir?

1225
01:01:49,403 --> 01:01:51,009
>> Mērķauditorija: [dzirdams]

1226
01:01:51,009 --> 01:01:52,800
DAVID Malan: Jums būtu
ceru, ka jā, tas ir balts.

1227
01:01:52,800 --> 01:01:55,333
Diemžēl, šī operates-- žēl?

1228
01:01:55,333 --> 01:01:56,380
>> Mērķauditorija: [dzirdams]

1229
01:01:56,380 --> 01:01:58,630
DAVID Malan: Tātad jūs faktiski
ir melns, šajā gadījumā.

1230
01:01:58,630 --> 01:02:01,530
Tātad, ja jums ir neviens no šiem
krāsas ieslēgts, jums ir melna.

1231
01:02:01,530 --> 01:02:06,510
Tomēr, ja jums ir, teiksim daudz
no tiem, piemēram, daudz sarkanā, 255 no tā,

1232
01:02:06,510 --> 01:02:10,340
daudz zaļa, un daudz
zila, kas ir balts.

1233
01:02:10,340 --> 01:02:12,230
Tātad šie ir divas galējības.

1234
01:02:12,230 --> 01:02:17,460
Tātad, šī loģika, ja man ir daudz
no sarkanā un zaļā nē un nē zila,

1235
01:02:17,460 --> 01:02:18,485
kādas krāsas ir tas, ka?

1236
01:02:18,485 --> 01:02:19,360
Mērķauditorija: [dzirdams]

1237
01:02:19,360 --> 01:02:20,610
DAVID Malan: Pareizi, protams.

1238
01:02:20,610 --> 01:02:25,940
Un tad nav sarkans, daudz
zaļš, ne zils, un pēc tam

1239
01:02:25,940 --> 01:02:29,590
ja jūs have-- labi, mēs tikko pabeigtu
tā, tikai tāpēc, ka, bet tas, protams,

1240
01:02:29,590 --> 01:02:31,350
tagad ir zils.

1241
01:02:31,350 --> 01:02:33,030
Un tagad jūs varat apvienot šīs krāsas.

1242
01:02:33,030 --> 01:02:36,430
Tagad kā malā, ja kāds no jums ir
kādreiz izdarīt kādu faktisko mājas lapas dizains,

1243
01:02:36,430 --> 01:02:38,360
jūs varētu faktiski
redzēt simbolus kā šis.

1244
01:02:38,360 --> 01:02:42,030
FFF-- un patiesībā, tas ir
iespējams, nav pat to.

1245
01:02:42,030 --> 01:02:44,380
Tas ir FFFFFF.

1246
01:02:44,380 --> 01:02:48,970
>> Kāds ir redzējis F s un E ir
un A through-- tā izrādās,

1247
01:02:48,970 --> 01:02:52,970
mēs runājām vakar par aiz komata,
un šodien, veida aptuveni komata.

1248
01:02:52,970 --> 01:02:54,570
Šodien mēs runājām par bināro.

1249
01:02:54,570 --> 01:02:59,010
Izrādās, heksadecimālo ir ļoti
kopēja bāze sistēma izmantot skaitļošanas.

1250
01:02:59,010 --> 01:03:04,960
Binary ir divi, decimal ir 10, hex ir 16.

1251
01:03:04,960 --> 01:03:08,640
Un izrādās, kā izdarīt
jūs skaits heksadecimālā?

1252
01:03:08,640 --> 01:03:11,620
Nulle, viens, divi, trīs, četri,
pieci, seši, septiņi, astoņi,

1253
01:03:11,620 --> 01:03:14,730
deviņi, ko jūs izmantojat pēc deviņiem?

1254
01:03:14,730 --> 01:03:16,600
Kas nākamais numurs?

1255
01:03:16,600 --> 01:03:19,180
Mēs jau izmanto nulli.

1256
01:03:19,180 --> 01:03:20,570
Man vajag 16 no tām.

1257
01:03:20,570 --> 01:03:25,770
Nulle, viens, divi, trīs, četri,
pieci, seši, septiņi, astoņi, deviņi,

1258
01:03:25,770 --> 01:03:27,520
jums ir nepieciešams zināms patvaļīgu konvenciju.

1259
01:03:27,520 --> 01:03:30,810
>> Un ko cilvēce nolēmis kādu laiku
Pirms, ka pēc deviņiem nāk burts

1260
01:03:30,810 --> 01:03:34,450
A un pēc tam B un pēc tam C. Tātad
kā jūs skaits heksadecimālā

1261
01:03:34,450 --> 01:03:37,040
ir nulle, viens, divi, trīs, četri,
pieci, seši, septiņi, astoņi, deviņi,

1262
01:03:37,040 --> 01:03:42,880
A, B, C, D, E, F, un kas tiks skaitīta
jūs visu ceļu, izrādās, 15.

1263
01:03:42,880 --> 01:03:47,850
Tātad nulles līdz 15 ir nulle cauri
F. Tagad kāpēc ir tā, ka liela?

1264
01:03:47,850 --> 01:03:51,570
Nu, ja jums ir divi F s,
tas, kā jūs izteikt 255.

1265
01:03:51,570 --> 01:03:54,350
>> Tik garš stāsts īss, jo
pasaule Photoshop,

1266
01:03:54,350 --> 01:03:57,299
ka grafiskais dizains programmatūru,
pasaulē web izstrāde,

1267
01:03:57,299 --> 01:03:59,590
kur jums ir daudz krāsu,
Protams, spēlēt ar,

1268
01:03:59,590 --> 01:04:02,350
bieži programmētāji būs
izteikt tiem heksadecimālā,

1269
01:04:02,350 --> 01:04:05,260
tikai tāpēc, ka tā ir tendence
būt nedaudz vienkāršāk.

1270
01:04:05,260 --> 01:04:07,850
Kaut gan pēc pirmā acu uzmetiena
tas ir daudz sarežģītāka.

1271
01:04:07,850 --> 01:04:11,590
>> Tātad, jebkurā gadījumā, tas ir svarīgi
jo Nick Stenfordas

1272
01:04:11,590 --> 01:04:15,100
mums ir devis sešas gabalus funkcionalitāti
ka jūs, budding programmētāji,

1273
01:04:15,100 --> 01:04:17,060
tagad būs iespēja izmantot.

1274
01:04:17,060 --> 01:04:19,960
Iebūvēts šo tīmeklī
lapa ir sešas funkcijas,

1275
01:04:19,960 --> 01:04:21,820
sešas procedūras, Niks rakstīja.

1276
01:04:21,820 --> 01:04:26,800
Trīs no viņiem kļūs jums numuru,
sarkans, zaļš, vai zils vērtība.

1277
01:04:26,800 --> 01:04:28,787
Trīs no tiem noteiks šo vērtību.

1278
01:04:28,787 --> 01:04:30,620
Un šie pasvītras
ir tikai vietturi,

1279
01:04:30,620 --> 01:04:32,600
tāpēc jums ir jāzina, kādi tie ir.

1280
01:04:32,600 --> 01:04:36,240
>> Tātad ar šiem trim funkcijām,
pirmā no šīm lietām

1281
01:04:36,240 --> 01:04:39,190
gatavojas būt x-koordinātu,
un otrā no minētajām lietām

1282
01:04:39,190 --> 01:04:40,700
būs Y-koordinātu.

1283
01:04:40,700 --> 01:04:44,650
Citiem vārdiem sakot, ko dot, kas
pixel jūs vēlaties saņemt zaļā,

1284
01:04:44,650 --> 01:04:46,480
iegūt zilā par, iegūt sarkano.

1285
01:04:46,480 --> 01:04:51,440
Un tad šeit, tas būs
x, tas būs y vērtība,

1286
01:04:51,440 --> 01:04:55,379
un šī būs skaitlis.

1287
01:04:55,379 --> 01:04:57,170
Tātad, pieņemsim do pirmais
līnija šis kopā

1288
01:04:57,170 --> 01:05:00,220
un tad es ņemšu atvaļinājumu jums to
mēģināt secināt pārējo.

1289
01:05:00,220 --> 01:05:03,100
Tātad par norādījumiem
šajā lapā, mums ir nepieciešams

1290
01:05:03,100 --> 01:05:08,960
palielināt sarkans ar koeficientu
10, un mums ir nepieciešams, lai novērstu zaļā

1291
01:05:08,960 --> 01:05:09,930
un izņemiet zila.

1292
01:05:09,930 --> 01:05:12,410
Sāksim ar pēdējo scenārijiem.

1293
01:05:12,410 --> 01:05:17,760
Tātad, ja es gribu, un es esmu gatavojas
lai izveidotu atkāpi, izmantojot dažas telpas,

1294
01:05:17,760 --> 01:05:22,291
ja es gribu, lai uzstādītu sarkans,
zaļā vai zilā vērtība,

1295
01:05:22,291 --> 01:05:23,540
Es esmu gatavojas darīt turpmāk.

1296
01:05:23,540 --> 01:05:31,280
>> Attēls, im.setBlue, un pēc tam
pamatojoties uz maniem norādījumiem šeit,

1297
01:05:31,280 --> 01:05:36,700
Kādas trīs lietas man būtu
tips iekšpusē iekavās tagad?

1298
01:05:36,700 --> 01:05:41,960
Man vajag x vērtības,
y vērtība, un to, ko numurs

1299
01:05:41,960 --> 01:05:48,770
Man būtu jāliek šeit, ja es gribu atbrīvoties
zila, pamatojoties uz šo stāstu šeit?

1300
01:05:48,770 --> 01:05:49,630
Just nulles.

1301
01:05:49,630 --> 01:05:52,420
Ja es gribu ne zils, es esmu tikai
gatavojas mainīt to uz nulli.

1302
01:05:52,420 --> 01:05:54,465
>> Tagad pieņemsim tikai Atgādinājums, ko tas dara.

1303
01:05:54,465 --> 01:05:56,970

1304
01:05:56,970 --> 01:06:01,170
Man šeit uz šiem augšu
otrais un trešais līnijas,

1305
01:06:01,170 --> 01:06:04,080
Man apgalvoja divas cilpas,
ligzdotu cilpas, ja jums

1306
01:06:04,080 --> 01:06:08,360
būs, ka nāksies efektu
progresē no kreisās uz labo pusi,

1307
01:06:08,360 --> 01:06:11,590
augšas uz leju pa visu no x
vērtības un visi no y vērtībām.

1308
01:06:11,590 --> 01:06:15,167
Jo atkal, aina ir
tikai režģis rindu un kolonnu.

1309
01:06:15,167 --> 01:06:17,000
Tātad tas ir gatavojas iegūt
atbrīvoties no visiem zila.

1310
01:06:17,000 --> 01:06:18,627
Ļaujiet man atstāt nākamajā rindā jums.

1311
01:06:18,627 --> 01:06:20,043
Kā es varu atbrīvoties no visiem zaļa?

1312
01:06:20,043 --> 01:06:23,747

1313
01:06:23,747 --> 01:06:25,140
>> Mērķauditorija: [dzirdams]

1314
01:06:25,140 --> 01:06:26,151
>> DAVID Malan: Nice.

1315
01:06:26,151 --> 01:06:28,260
>> Mērķauditorija: [dzirdams]

1316
01:06:28,260 --> 01:06:30,850
>> DAVID Malan: Nice.

1317
01:06:30,850 --> 01:06:36,120
Un es esmu gatavojas, lai tālinātu, un lietojiet tikai
rūpēties par ka jūs esat nav izdarīts pareizrakstību.

1318
01:06:36,120 --> 01:06:39,390
Un, ja jūs esat apmierināts
ar to, ko jūs esat darījuši,

1319
01:06:39,390 --> 01:06:42,936
iet uz priekšu un noklikšķiniet uz pogas
Palaist / Saglabāt un redzēt, ko jūs saņemsiet.

1320
01:06:42,936 --> 01:06:46,982

1321
01:06:46,982 --> 01:06:48,690
Un atkal, mēs esam padarījuši
tikai trīs izmaiņas.

1322
01:06:48,690 --> 01:06:52,130
Mēs svītrots ka pirmais
komentēt un aizstāja to

1323
01:06:52,130 --> 01:06:53,575
ar šīm divām līnijām kodu.

1324
01:06:53,575 --> 01:06:55,742

1325
01:06:55,742 --> 01:06:58,450
Un tas ir OK, ja jums ir nepieciešams, lai sasniegtu
Run / Save pogu pāris reizes

1326
01:06:58,450 --> 01:07:01,190
noteikt kaut ko.

1327
01:07:01,190 --> 01:07:03,610
>> Un ļaujiet man arī tuvinātu par manu
kodu, lai jūs varētu pierakstīt.

1328
01:07:03,610 --> 01:07:04,110
Labi.

1329
01:07:04,110 --> 01:07:08,720
Tāpēc es redzu Andrew ir ko
šķiet, ir kļūda.

1330
01:07:08,720 --> 01:07:11,110
Viņš tikko saņēmu liels melns
taisnstūris viņa ekrāna.

1331
01:07:11,110 --> 01:07:13,120
Vai kāds cits ir
liels melns taisnstūris?

1332
01:07:13,120 --> 01:07:13,390
>> Mērķauditorija: Jā.

1333
01:07:13,390 --> 01:07:14,360
>> DAVID Malan: Big black taisnstūris?

1334
01:07:14,360 --> 01:07:16,068
Labi, tāpēc pieņemsim domāt
par to, ko tas nozīmē.

1335
01:07:16,068 --> 01:07:20,560
Mēs teicām, ka nulle, nulle, nulle,
tāpēc nav zaļa, ne sarkana, ne zils,

1336
01:07:20,560 --> 01:07:21,980
gatavojas sniegt jums melna.

1337
01:07:21,980 --> 01:07:24,467
Un izrādās, ka
lielākā daļa no mūsu klēpjdatorus

1338
01:07:24,467 --> 01:07:25,800
vienkārši nav pietiekami daudz uzticību.

1339
01:07:25,800 --> 01:07:27,750
Jūs nevar gluži pateikt tur
ir tiešām kaut kas tur.

1340
01:07:27,750 --> 01:07:30,340
Un, ja jūs veida varbūt liesās
jūsu ekrāna uz priekšu un atpakaļ,

1341
01:07:30,340 --> 01:07:32,850
varbūt jūs redzat
maz kaut ko tur?

1342
01:07:32,850 --> 01:07:34,820
Varbūt, veida, kārtot?

1343
01:07:34,820 --> 01:07:36,640
Tas nav pilnīgi melna.

1344
01:07:36,640 --> 01:07:38,050
>> Mērķauditorija: [dzirdams]

1345
01:07:38,050 --> 01:07:39,510
>> DAVID Malan: Spoileris!

1346
01:07:39,510 --> 01:07:42,610
Ir daži sarkana tur, bet
atceros no specifikācijām

1347
01:07:42,610 --> 01:07:44,940
Problēmas, Nick tonēti to uz leju.

1348
01:07:44,940 --> 01:07:47,860
Viņš desaturated to nedaudz,
bet ne visu ceļu līdz nullei.

1349
01:07:47,860 --> 01:07:51,670
Tātad, ja mēs gribam, lai palielinātu summu
sarkana, ļaujiet man ieteikt šo triku.

1350
01:07:51,670 --> 01:07:53,750
Ļaujiet man tuvinātu mana ekrāna.

1351
01:07:53,750 --> 01:07:58,678
Un ļaujiet man iet uz priekšu un saka
summa ir vienāda ar im.getRed (x, y).

1352
01:07:58,678 --> 01:08:02,440

1353
01:08:02,440 --> 01:08:05,790
>> Šī līnija koda dod man
kaut ko sauc mainīgo.

1354
01:08:05,790 --> 01:08:09,643
Man ir patvaļīgi, bet, varbūt,
pamatoti sauc mans mainīgs, ko,

1355
01:08:09,643 --> 01:08:10,143
acīmredzot?

1356
01:08:10,143 --> 01:08:13,530

1357
01:08:13,530 --> 01:08:14,340
Summa.

1358
01:08:14,340 --> 01:08:14,980
Tikai summa.

1359
01:08:14,980 --> 01:08:16,960
Es varētu esam to sauca
kaut ko es gribu, bet es esmu

1360
01:08:16,960 --> 01:08:19,490
Izmantojot šo citas funkcijas
ka es aprakstīts iepriekš

1361
01:08:19,490 --> 01:08:25,359
lai iegūtu summu, sarkana x komatu y.

1362
01:08:25,359 --> 01:08:27,520
Kāpēc man darīt?

1363
01:08:27,520 --> 01:08:30,004
Ko jūs vēlaties darīt šeit?

1364
01:08:30,004 --> 01:08:32,910

1365
01:08:32,910 --> 01:08:33,619
Jums ir nepieciešams, lai add--

1366
01:08:33,619 --> 01:08:34,493
Mērķauditorija: [dzirdams]

1367
01:08:34,493 --> 01:08:36,279
DAVID Malan: Jā, varbūt
reizinot to ar 10.

1368
01:08:36,279 --> 01:08:38,862
Un, ja jūs nezināt, es esmu
gatavojas iet uz priekšu un darīt to.

1369
01:08:38,862 --> 01:08:42,060
Es iešu uz priekšu un
teiksim, es gribu daudzumu sarkano

1370
01:08:42,060 --> 01:08:46,550
Es gribu būt jebkas
ir sarkans, reizes 10,

1371
01:08:46,550 --> 01:08:50,330
un zvaigzne, zvaigznīte uz jūsu
Tastatūra ir the-- neizmanto x.

1372
01:08:50,330 --> 01:08:51,569
Izmantojiet zvaigzni.

1373
01:08:51,569 --> 01:08:55,350
Tas ir, kā jūs reizināt lietas
vairumā programmēšanas valodas.

1374
01:08:55,350 --> 01:08:59,790
>> Tātad, saskaņā ar Kareem intuīcija,
glabājas šajā mainīgo sauc summa,

1375
01:08:59,790 --> 01:09:03,649
ir, cik daudz sarkano es gribu pie atrašanās XY.

1376
01:09:03,649 --> 01:09:11,500
Kā tagad, es varu darīt, ka
Pixel ir šo numuru?

1377
01:09:11,500 --> 01:09:12,859
Jūs jau esat darījuši to pirms tam.

1378
01:09:12,859 --> 01:09:17,666
Jūs noteikti zaļā un
zilas līdz nekādas vērtības, līdz nullei.

1379
01:09:17,666 --> 01:09:18,540
Mērķauditorija: [dzirdams]

1380
01:09:18,540 --> 01:09:20,040
DAVID Malan: Jā, labi
Jūs nevēlaties, lai 10.

1381
01:09:20,040 --> 01:09:21,460
Jūs jau darīja math šeit.

1382
01:09:21,460 --> 01:09:24,779
Tātad mēs kļūst vērtību sarkana,
kas ir mazs skaitlis, domājams.

1383
01:09:24,779 --> 01:09:26,180
Mēs esam reizinot izveidota ar 10.

1384
01:09:26,180 --> 01:09:29,139
Ko jūs vēlaties darīt ar
mainīgā summa tagad?

1385
01:09:29,139 --> 01:09:30,130
>> Mērķauditorija: [dzirdams]

1386
01:09:30,130 --> 01:09:30,880
>> DAVID Malan: Nice.

1387
01:09:30,880 --> 01:09:34,616
Tātad im.set-- ko?

1388
01:09:34,616 --> 01:09:35,640
>> Mērķauditorija: setRed.

1389
01:09:35,640 --> 01:09:39,760
>> DAVID Malan: setRed pēc atrašanās XY.

1390
01:09:39,760 --> 01:09:40,260
Jā.

1391
01:09:40,260 --> 01:09:41,200
Un tikai summa.

1392
01:09:41,200 --> 01:09:44,257
Citiem vārdiem sakot, mainīgs
ir pagaidu vietturis

1393
01:09:44,257 --> 01:09:45,840
ka jums var likt kaut ko vēlaties.

1394
01:09:45,840 --> 01:09:48,680
Mēs gadās būt liekot
skaits tajā brīdī.

1395
01:09:48,680 --> 01:09:51,569
Mēs esam reizina to ar
10, lai padarītu to lielāku.

1396
01:09:51,569 --> 01:09:56,480
Un tagad es esmu aizstājot šo mainīgo
kā šo trešo argumentu, vai ievades

1397
01:09:56,480 --> 01:09:57,810
noteikt red.

1398
01:09:57,810 --> 01:10:00,440
Un tā, ka pēc tam, kad jums
pabeigt ka, un ņemt vērā

1399
01:10:00,440 --> 01:10:02,330
no semikoliem un iekavās.

1400
01:10:02,330 --> 01:10:06,290
>> Iet uz priekšu un noklikšķiniet
palaist / glābt atkal, un jums

1401
01:10:06,290 --> 01:10:10,690
vajadzētu redzēt, maģiski, kas bija patiesībā
tur. [? Arwa,?], Kas ir tur?

1402
01:10:10,690 --> 01:10:16,412
Eifeļa tornis pilntiesīgu
sarkans, ne gluži tumšs.

1403
01:10:16,412 --> 01:10:17,870
to būtu vairāk skaidrs tagad, jā?

1404
01:10:17,870 --> 01:10:18,840
LABI.

1405
01:10:18,840 --> 01:10:20,215
Un Andreju, ne vairāk melnā kaste?

1406
01:10:20,215 --> 01:10:21,090
Mērķauditorija: [dzirdams]

1407
01:10:21,090 --> 01:10:22,180
DAVID Malan: Labi.

1408
01:10:22,180 --> 01:10:23,610
Tāpēc es paturēšu to uz ekrāna.

1409
01:10:23,610 --> 01:10:27,010
Ja jūs vēlaties spēlēt ar šo
vēlāk, es ņemšu atjaunot šo jums.

1410
01:10:27,010 --> 01:10:29,140
Bet šis kods šeit darīja tieši tā.

1411
01:10:29,140 --> 01:10:31,460
Kāpēc mēs to darām vienu citu.

1412
01:10:31,460 --> 01:10:33,880
Ļaujiet man ritiniet uz leju nedaudz.

1413
01:10:33,880 --> 01:10:36,760
>> Tātad šajā gadījumā, projektoru
nav īsti darīt to taisnīgumu.

1414
01:10:36,760 --> 01:10:40,486
Bet uz saviem ekrāniem, jūs, iespējams,
ir ļoti sarkans un ļoti melnā kaste.

1415
01:10:40,486 --> 01:10:42,610
Arī tas ir puzzle, kas
rāda kaut ko slavens.

1416
01:10:42,610 --> 01:10:44,193
Tomēr, attēls ir izkropļots.

1417
01:10:44,193 --> 01:10:47,740
Patiess tēls, šoreiz, ir
in zilo un zaļo vērtībām.

1418
01:10:47,740 --> 01:10:51,820
Taču viņi visi ir sadalīta
par 20 tā vērtības ir ļoti mazi.

1419
01:10:51,820 --> 01:10:54,660
Sarkanās vērtības ir tikai
izlases numuri, troksnis.

1420
01:10:54,660 --> 01:10:57,190
Atsaukt šos traucējumus
lai atklātu patieso attēlu.

1421
01:10:57,190 --> 01:10:59,200
>> Tātad Nick tad stāsta jums to, ko darīt.

1422
01:10:59,200 --> 01:11:04,290
Uzstādīt sarkanās vērtības līdz nullei, un
tad nebojā to, kas tas ir.

1423
01:11:04,290 --> 01:11:07,110
Reizinot zilā
un zaļās vērtības ar 20.

1424
01:11:07,110 --> 01:11:09,820
Tātad, tas ir gandrīz
pati programma kā iepriekš,

1425
01:11:09,820 --> 01:11:11,380
bet jūs atpakaļgaitā procesu.

1426
01:11:11,380 --> 01:11:13,780
Un es likšu manu kodu
pirms ekrānā gadījumā

1427
01:11:13,780 --> 01:11:16,650
vēlaties atsaukties uz to
vai spēlēt tālāk ar šo vienu.

1428
01:11:16,650 --> 01:11:18,100
Ļaujiet man tuvinātu to.

1429
01:11:18,100 --> 01:11:21,450
Bet atrisināt vara attēlu
puzzle, numurs divi.

1430
01:11:21,450 --> 01:11:37,623

1431
01:11:37,623 --> 01:11:40,580
>> Mērķauditorija: [dzirdams]

1432
01:11:40,580 --> 01:11:44,010
>> DAVID Malan: Labi, tāpēc tas viens es esmu
nav gatavojas sniegt tik daudz padomus.

1433
01:11:44,010 --> 01:11:47,220
Tāpēc es would-- oh, pieņemsim
redzēt, jums ir typo šeit.

1434
01:11:47,220 --> 01:11:49,621
Tāpēc atcerieties, tas šeit
tiešām vajag iet uz turieni.

1435
01:11:49,621 --> 01:11:52,870
Tātad, ko es varētu ierosināt, ja jūs vēlaties, lai
koncentrēties uz šo vienu, tur ir atbilde.

1436
01:11:52,870 --> 01:11:57,060
Ja vēlaties pārveidot, ka, ka
vajadzētu iegūt pirmo vienu darbu.

1437
01:11:57,060 --> 01:11:59,910
Un tad jūs varat izmantot šo kā
iedvesma otrā.

1438
01:11:59,910 --> 01:12:02,230
Nice.

1439
01:12:02,230 --> 01:12:02,730
Labi.

1440
01:12:02,730 --> 01:12:05,430

1441
01:12:05,430 --> 01:12:08,180
>> Un ziņkārīgs,
Tas ir vienkāršs piemērs

1442
01:12:08,180 --> 01:12:11,080
par zinātni vai mākslu
sauc steganography,

1443
01:12:11,080 --> 01:12:14,100
māksla slēpjas informāciju attēlos.

1444
01:12:14,100 --> 01:12:16,890
Raksturīgi, attēli var būt
ūdenszīmes ļoti klaji

1445
01:12:16,890 --> 01:12:19,500
ar logotipu apakšā
stūra, bet skaidri, jūs

1446
01:12:19,500 --> 01:12:22,070
var būt daudz sarežģītākas
par to, un faktiski

1447
01:12:22,070 --> 01:12:25,050
slēpt citus attēlus Attēli
kaut kā ar šo tehniku.

1448
01:12:25,050 --> 01:12:59,890

1449
01:12:59,890 --> 01:13:05,770
>> Veikt vēl 30 sekundes, un tad mēs
vismaz paziņot, ko jums vajadzētu redzēt.

1450
01:13:05,770 --> 01:13:08,330
Un es ņemšu atvaļinājumu trešais
viens kā at-home izmantošanu,

1451
01:13:08,330 --> 01:13:11,353
Ja vēlaties vairāk
izaicinājums šīs nedēļas nogalē.

1452
01:13:11,353 --> 01:13:18,240

1453
01:13:18,240 --> 01:13:20,390
Un es domāju, ka Andrew varētu
gotten tā pirmo reizi.

1454
01:13:20,390 --> 01:13:22,645
Kāds ir otrais attēls, Andrew?

1455
01:13:22,645 --> 01:13:23,920
>> Mērķauditorija: Brīvības statuja.

1456
01:13:23,920 --> 01:13:28,500
>> DAVID Malan: Brīvības statuja
būs atbilde šoreiz.

1457
01:13:28,500 --> 01:13:31,140
Tātad vēlreiz, tikai daži vienkārši
piemēri, kuras mērķis

1458
01:13:31,140 --> 01:13:35,040
ir sniegt jums sajūtu par to, kā
mēs esam tulkots ilustratīvs Scratch

1459
01:13:35,040 --> 01:13:40,410
bloki uz vairāk kaitinošas un vairāk
sarežģīts kods, bet visas idejas

1460
01:13:40,410 --> 01:13:42,980
joprojām ir tieši tas pats,
lai gan, ieviešot

1461
01:13:42,980 --> 01:13:48,380
tagad jēdziena mainīgo, kas ir
spēj uz laiku kaut ko uzglabāt.

1462
01:13:48,380 --> 01:13:51,750
>> Darīsim vēl viens hands-on,
tikai tagad savienot punktus

1463
01:13:51,750 --> 01:13:53,880
lai kaut nedaudz vairāk reālās pasaules.

1464
01:13:53,880 --> 01:13:56,610
Kad esat gatavs, ja jūs varētu
doties uz šo URL uz ekrāna.

1465
01:13:56,610 --> 01:14:00,610
Tas ir arī jūsu kopiju no
slaidi, developers.google.com/maps~~V.

1466
01:14:00,610 --> 01:14:03,660
Pieņemsim faktiski darīt kaut ko
reāla, tā sakot, tīmeklī

1467
01:14:03,660 --> 01:14:07,600
izmantojot Google Maps API, vai
lietojumprogrammu programmēšanas interfeisu,

1468
01:14:07,600 --> 01:14:08,940
šādā veidā.

1469
01:14:08,940 --> 01:14:12,341
>> Google, tāpat kā daudzi uzņēmumi,
nodrošina daudz brīva funkcionalitāti

1470
01:14:12,341 --> 01:14:14,840
ka jūs varat izmantot, lai izveidotu savu
pašu interesanti pieteikumi.

1471
01:14:14,840 --> 01:14:18,890
Patiesībā, ja jūs esat kādreiz izmanto
Uber iegūt kabīni vai automašīnu,

1472
01:14:18,890 --> 01:14:21,640
jūs droši vien zināt, ka Uber ir
Kartē un tas liecina automašīnas uz tā.

1473
01:14:21,640 --> 01:14:24,870
Tas ir, cik labi vien varu
pateikt, Google Maps API.

1474
01:14:24,870 --> 01:14:28,884
Tie ir faktiski izmantojot Google kartes,
bet Uber nav kartēšana kompānija,

1475
01:14:28,884 --> 01:14:31,050
nedz arī tas var būt
Īpaši interesanta problēma

1476
01:14:31,050 --> 01:14:33,510
atrisināt virsū viņu
autoserviss problēma.

1477
01:14:33,510 --> 01:14:35,510
Un tā viņi stāv,
atkal, uz pleciem

1478
01:14:35,510 --> 01:14:37,520
citu, Google šajā gadījumā.

1479
01:14:37,520 --> 01:14:42,850
Tāpēc viņi izmanto Google kartes, bet viņu pašu
autoservisiem un citas šādas funkcijas.

1480
01:14:42,850 --> 01:14:47,770
>> Tātad mēs ejam, lai izmantotu
Tas darīt turpmāk.

1481
01:14:47,770 --> 01:14:50,230
Un, ja es esmu gājusi pārāk ātri,
piezvani man pār brīdi.

1482
01:14:50,230 --> 01:14:53,500
Labprāt Atgādinājums dažiem attēla sīkumi.

1483
01:14:53,500 --> 01:14:56,290
Jums vajadzētu redzēt sevi
pie lapas, kā šis.

1484
01:14:56,290 --> 01:14:58,230
Tātad Google jauki, un
viņi starp labākajiem

1485
01:14:58,230 --> 01:15:01,364
nodrošināt ne tikai API,
bet bezmaksas API, kas jums

1486
01:15:01,364 --> 01:15:02,780
var spēlēt ar vai izmantot komerciāli.

1487
01:15:02,780 --> 01:15:06,450
Tie sākt maksas jums, ja jūsu lietojums
ir augsts, bet es devos uz priekšu iepriekš

1488
01:15:06,450 --> 01:15:10,490
un parakstīja mūs uz bezmaksas kontu
kas, cerams, 10 datori

1489
01:15:10,490 --> 01:15:12,480
nebūs diskvalificēt mums pēkšņi.

1490
01:15:12,480 --> 01:15:14,320
Tik cerams, tas
demonstrēšana strādās.

1491
01:15:14,320 --> 01:15:18,840
>> Un paziņojums, ka viņi ir API par
Android, iOS, web, un interneta pakalpojumi,

1492
01:15:18,840 --> 01:15:19,620
kāds tas ir.

1493
01:15:19,620 --> 01:15:20,700
Pieņemsim koncentrēties uz web.

1494
01:15:20,700 --> 01:15:26,560
Tādēļ noklikšķiniet rozā kaste, web, un ka
ļaus jums, cerams, uz lapu

1495
01:15:26,560 --> 01:15:27,630
šeit.

1496
01:15:27,630 --> 01:15:29,335
Un tie esam ieguvuši visu ķekars API.

1497
01:15:29,335 --> 01:15:31,210
Un tas var būt nedaudz
milzīgs sākumā,

1498
01:15:31,210 --> 01:15:33,000
bet es ņemšu vadīt mūs caur to, ko mēs gribam.

1499
01:15:33,000 --> 01:15:38,500
>> Augšējā kreisajā stūrī ir Google Maps
JavaScript API, JavaScript API.

1500
01:15:38,500 --> 01:15:40,380
Tik iet uz priekšu un noklikšķiniet, ka viens.

1501
01:15:40,380 --> 01:15:49,360
Un, kas ļaus jums tagad uz
vienu lapu, demonstrācijas un parauga kodu.

1502
01:15:49,360 --> 01:15:51,190
Ļaujiet man zoom out šeit.

1503
01:15:51,190 --> 01:15:56,300
Un ļaujiet man iegūt mums kuri paredzēti, ritiniet uz leju
kur ir teikts, ātri starta soļi.

1504
01:15:56,300 --> 01:15:57,970
Jūsu ekrāns būtu jāizskatās raktuves.

1505
01:15:57,970 --> 01:16:01,130
>> Un tur ir divi soļi, get
galvenais un sākt izstrādāt.

1506
01:16:01,130 --> 01:16:04,190
Man jau bija vienu soli uz
mums, iegūt tā saukto atslēgu.

1507
01:16:04,190 --> 01:16:05,320
Un tas ir kopīgs ideja.

1508
01:16:05,320 --> 01:16:09,210
API atslēga parasti tikai
liels izlases numuru vai string

1509
01:16:09,210 --> 01:16:11,130
kas jums ir paredzēts,
ielīmēt savu kodu,

1510
01:16:11,130 --> 01:16:15,280
tā ka Google zina, kas jūs esat, kad
jūs izmantojat viņu pakalpojumus, savu API.

1511
01:16:15,280 --> 01:16:17,370
Nenozīmē, ka mēs esam
tiek uzlādēts neko.

1512
01:16:17,370 --> 01:16:21,030
Un tagad, noklikšķiniet uz, nevis
viens, noklikšķiniet sākt izstrādāt.

1513
01:16:21,030 --> 01:16:25,990
Ja jūs varētu tikai vilnis mani
vairāk, ja nav pārliecināts, kur mēs esam.

1514
01:16:25,990 --> 01:16:28,040
>> Tātad mēs vienkārši saskrāpēt
virsma, šeit, bet tas, ko

1515
01:16:28,040 --> 01:16:31,000
Es domāju, būtu pārliecinoši
ir tiešām ir mums visiem,

1516
01:16:31,000 --> 01:16:34,240
izmantojot Cloud9 vienā logā un
šī apmācība citā logā,

1517
01:16:34,240 --> 01:16:37,120
lets faktiski saņemt mūsu pašu
pieteikums izveidota un darbojas

1518
01:16:37,120 --> 01:16:40,920
kas ieguļ pasūtījuma Google
karti mūsu pašu mājas lapā,

1519
01:16:40,920 --> 01:16:43,010
un pēc tam pievieno vienu vai divas iezīmes.

1520
01:16:43,010 --> 01:16:45,520
Bet mēs vienkārši saskrāpēt
virsma, ko mēs varam darīt.

1521
01:16:45,520 --> 01:16:47,020
>> Tātad tikai ātri veselība pārbaudītu.

1522
01:16:47,020 --> 01:16:49,740
Vai visi šajā lapā,
Google Maps JavaScript API?

1523
01:16:49,740 --> 01:16:50,872
Vajadzētu teikt iesākumam.

1524
01:16:50,872 --> 01:16:53,330
Mēs nebrauksim, lai iet cauri
viss ar jebkādiem līdzekļiem.

1525
01:16:53,330 --> 01:16:58,090
OK, citā tab, ja jums nav
ir to atvērtu, vai iedziļināties Cloud9

1526
01:16:58,090 --> 01:17:03,500
un iegūt sev, lai tikai
jaunu tab, galu galā.

1527
01:17:03,500 --> 01:17:11,070
Tātad vēlreiz, c9.io no vakardienas,
c9.io, un vienkārši izveidot jaunu failu.

1528
01:17:11,070 --> 01:17:13,500
Un iet uz priekšu un zvanu
tas ko jūs vēlētos.

1529
01:17:13,500 --> 01:17:16,495
I sauc raktuves map.html.

1530
01:17:16,495 --> 01:17:17,870
Call to kaut kas beidzas ar .html.

1531
01:17:17,870 --> 01:17:23,930

1532
01:17:23,930 --> 01:17:26,580
Un jums vajadzētu būt aptuveni
kur es esmu šajā procesā

1533
01:17:26,580 --> 01:17:31,470
tikai ar mirgojošu uzvednē tukšā
tab sauc kaut kā map.html.

1534
01:17:31,470 --> 01:17:35,808

1535
01:17:35,808 --> 01:17:38,148
Vai failu, jaunu failu šoreiz.

1536
01:17:38,148 --> 01:17:41,960

1537
01:17:41,960 --> 01:17:48,000
>> Un tagad, vairāk nekā par
Google Maps JavaScript API,

1538
01:17:48,000 --> 01:17:50,010
mēs izlaist lasījumā
caur visu šo tekstu.

1539
01:17:50,010 --> 01:17:53,760
Bet paziņo, ka sveiki pasaule ir
tiešām visur, jūs redzētu to tagad.

1540
01:17:53,760 --> 01:17:58,020
Sveiki pasaule ir šī lielā krāsains
piemērs visai ķekars HTML.

1541
01:17:58,020 --> 01:18:03,590
Iet uz priekšu un kopēt un ielīmēt tikai to, ka
HTML, tāpēc no doc veida augšpusē

1542
01:18:03,590 --> 01:18:08,810
visu ceļu uz ciešo HTML tagu, iet
priekšu un kopēt visu that-- atkal,

1543
01:18:08,810 --> 01:18:14,430
kas ir saskaņā ar Hello pasaule example--
un ielīmēt ka jūsu cilni Cloud9,

1544
01:18:14,430 --> 01:18:17,996
tā ka tagad jūsu ekrāns
vajadzētu izskatīties aptuveni kā manējā.

1545
01:18:17,996 --> 01:18:22,280

1546
01:18:22,280 --> 01:18:24,520
>> Un jūs varat to saglabāt, bet
neievietojiet to tikai vēl.

1547
01:18:24,520 --> 01:18:26,290
Pieņemsim vispirms apskatīt
kodu un redzēt, ja mēs

1548
01:18:26,290 --> 01:18:29,110
nevar secināt, vai mācīties
no tā, kas ir Google

1549
01:18:29,110 --> 01:18:30,860
ir bijusi mums akli kopēt un ielīmēt.

1550
01:18:30,860 --> 01:18:33,334
Viņi vienkārši vēlas palīdzēt,
burtiski, mūs sāka,

1551
01:18:33,334 --> 01:18:35,500
bet tur nav tik daudz
sarežģītība faktiski tur.

1552
01:18:35,500 --> 01:18:40,100

1553
01:18:40,100 --> 01:18:42,210
Kādi jautājumi tikai vēl?

1554
01:18:42,210 --> 01:18:43,790
Mēs esam droši virzīties uz priekšu?

1555
01:18:43,790 --> 01:18:44,330
LABI.

1556
01:18:44,330 --> 01:18:46,800
>> Tik ātri, pieņemsim tikai do
daži ātri vesels saprāts pārbaudes.

1557
01:18:46,800 --> 01:18:48,800
viena līnija, ko es
redzēt, un, cerams, jūs

1558
01:18:48,800 --> 01:18:51,710
skat, ko tas nozīmē, DOCTYPE HTML?

1559
01:18:51,710 --> 01:18:52,385
Kareem, atgādināt?

1560
01:18:52,385 --> 01:18:53,260
Mērķauditorija: [dzirdams]

1561
01:18:53,260 --> 01:18:53,968
DAVID Malan: Jā.

1562
01:18:53,968 --> 01:18:54,870
Šeit nāk HTML 5.

1563
01:18:54,870 --> 01:18:57,950
Tikmēr līnija divi uz
ekrāns šeit nozīmē Hei pārlūku,

1564
01:18:57,950 --> 01:18:59,482
šeit nāk faktisko HTML.

1565
01:18:59,482 --> 01:19:01,440
Trīs Line ir hey pārlūku,
šeit nāk galva.

1566
01:19:01,440 --> 01:19:04,260
četri līnija ir, protams, hey
pārlūku, šeit nāk titulu.

1567
01:19:04,260 --> 01:19:07,780
Kāda līnija pieci darīt?

1568
01:19:07,780 --> 01:19:09,930
Faktiski, tas nav
patiešām kaut ko par mums.

1569
01:19:09,930 --> 01:19:13,340
Šajā gadījumā, tas tikai maina
lapa ar noklusējuma. seši Line,

1570
01:19:13,340 --> 01:19:16,140
mēs neesam runājuši par, bet tas
norāda rakstzīmju kodējumu.

1571
01:19:16,140 --> 01:19:19,181
Ir dažādi veidi, lai šifrēt failus,
jo īpaši attiecībā uz svešvalodu.

1572
01:19:19,181 --> 01:19:21,100
UTF-8 vienkārši mēdz būt noklusējuma.

1573
01:19:21,100 --> 01:19:26,580
>> Tāpēc tagad mēs redzēsim rindā
septiņi pa 16, daži CSS.

1574
01:19:26,580 --> 01:19:29,260
Un, pat ja mēs esam nav redzējuši
visas šīs lietas, pirms,

1575
01:19:29,260 --> 01:19:30,810
mēs varam veida secināt.

1576
01:19:30,810 --> 01:19:37,075
Tātad līnija astoņas līdzekļus, hey pārlūku, jāpiemēro
visas šīs īpašības, uz kuriem diviem tagiem,

1577
01:19:37,075 --> 01:19:37,575
acīmredzot?

1578
01:19:37,575 --> 01:19:40,650

1579
01:19:40,650 --> 01:19:41,701
HTML un pamattekstu.

1580
01:19:41,701 --> 01:19:43,200
Tātad komats ir jauna lieta tur.

1581
01:19:43,200 --> 01:19:46,140
Un tas ir tikai veids, kā
precizējot vairākus tagus uzreiz.

1582
01:19:46,140 --> 01:19:47,640
>> Tad mēs esam ieguvuši cirtaini lencēm.

1583
01:19:47,640 --> 01:19:51,170
Tātad acīmredzot, šī stāsta pārlūku,
padarīt augstumu lapas 100%.

1584
01:19:51,170 --> 01:19:54,170
Tātad, pat tad, ja tur ir ļoti maz
saturs, veikt visu lapu,

1585
01:19:54,170 --> 01:19:55,530
padarīt lieta aizpildītu lapu.

1586
01:19:55,530 --> 01:19:57,524
Padarīt karti visbeidzot aizpildītu lapu.

1587
01:19:57,524 --> 01:19:58,690
Starpība, ko tas nozīmē?

1588
01:19:58,690 --> 01:20:01,559
Tas ir parasti, piemēram, patvaļīgi
balta telpa ap malām

1589
01:20:01,559 --> 01:20:04,350
ka daži pārlūkprogramma dizainers tikko
nolēma būtu tur, jo tas

1590
01:20:04,350 --> 01:20:05,540
veida padara lietas izskatās tīrāka.

1591
01:20:05,540 --> 01:20:06,498
Bet mēs negribam, ka.

1592
01:20:06,498 --> 01:20:08,710
Mēs vēlamies, lai karti notiek
visu ceļu malām.

1593
01:20:08,710 --> 01:20:10,930
Polsterējums, līdzīgs garā uz robežas.

1594
01:20:10,930 --> 01:20:14,980
Starpība nozīmē ārpus, polsterējums līdzekļus
iekšā, bet tā ir tāda paša veida darījumu.

1595
01:20:14,980 --> 01:20:17,520
Tas ir mazliet buferis
starp jums un malām.

1596
01:20:17,520 --> 01:20:21,170
>> Un tad līnija 13 ir labs
iespēja ātri pārskatīt.

1597
01:20:21,170 --> 01:20:26,440
Kāda asu zīmi karti
domāju, vai hashtag karti nozīmē?

1598
01:20:26,440 --> 01:20:29,650
Ko tas attiecas uz principā?

1599
01:20:29,650 --> 01:20:31,485
>> Mērķauditorija: [dzirdams]

1600
01:20:31,485 --> 01:20:32,360
DAVID Malan: Tieši tā.

1601
01:20:32,360 --> 01:20:36,900
Šis īpašums, šis īpašums CSS
piemērojams tikai viena lieta, HTML tagu

1602
01:20:36,900 --> 01:20:41,180
ka ir ID citātu, likt pēdiņas beigās "karte".

1603
01:20:41,180 --> 01:20:44,460
Un tagad pieņemsim ātri uz priekšu, ritiniet
uz leju, lai apakšā failu, kas

1604
01:20:44,460 --> 01:20:49,860
nav pārāk tālu, un paziņojums tiešsaistē
19, ja jūs ielīmējiet to tieši tāpat kā es darīju,

1605
01:20:49,860 --> 01:20:53,405
līnija 19 ir tikai viena div, kas ir
dalīšana lapas, kas vakar I

1606
01:20:53,405 --> 01:20:54,820
sauc taisnstūra reģions.

1607
01:20:54,820 --> 01:20:55,820
Tas ir ieguvuši neko tajā.

1608
01:20:55,820 --> 01:20:57,550
Tas ir atvērts tag, tuvu tag.

1609
01:20:57,550 --> 01:20:59,490
Bet tas ir unikāls ID.

1610
01:20:59,490 --> 01:21:02,090
>> Tātad, kas, šķiet, ir
notiek šeit ir Google

1611
01:21:02,090 --> 01:21:05,880
ir gatavojot mūsu mājas lapu
ir pilnīga 100% augstumu,

1612
01:21:05,880 --> 01:21:09,680
un nav polsterējums, nav starpības, jo
ko mēs ejam, lai likt iekšā

1613
01:21:09,680 --> 01:21:13,647
Šī div, kuras unikālais ID ir
karte, ir faktiskā iegulto karti.

1614
01:21:13,647 --> 01:21:15,480
Un mēs gribam, lai aizpildītu
lapa un ne tikai

1615
01:21:15,480 --> 01:21:17,560
būt dažas nelielas taisnstūris vidū.

1616
01:21:17,560 --> 01:21:24,220
Tātad line 14 līdzīgi uzsver, tad
karti pati jābūt augstumu 100%.

1617
01:21:24,220 --> 01:21:29,220
>> Tāpēc tagad paziņojums starp 20 līnijām
un 28, tas ir JavaScript kods.

1618
01:21:29,220 --> 01:21:33,020
Un tas ir, pat ja tas ir
sintaktiski mazliet dīvaini,

1619
01:21:33,020 --> 01:21:34,730
tur nav tik daudz kas notiek šeit.

1620
01:21:34,730 --> 01:21:39,310
Atbilstoši 21, tas tiek deklarējot
kaut ko sauc mainīgo.

1621
01:21:39,310 --> 01:21:42,030
Tā vietā, aicinot to
summas, tāpat kā mēs to darījām agrāk,

1622
01:21:42,030 --> 01:21:44,500
mēs precīzāk sakot
Var, kas nozīmē tikai mainīgo.

1623
01:21:44,500 --> 01:21:46,520
Mēs būtu varējuši izmantot, ka
Nika kods, bet viņš nav, tāpēc es

1624
01:21:46,520 --> 01:21:48,190
nav apnikt to dara vai nu.

1625
01:21:48,190 --> 01:21:50,240
Tas ir mainīgs sauc
karti, un tad tur ir

1626
01:21:50,240 --> 01:21:53,360
funkcija, kas ir
acīmredzot sauc initMap.

1627
01:21:53,360 --> 01:21:55,780
>> Tātad tas ir kā mūsu pašu pasūtījuma
puzzle gabals nulles.

1628
01:21:55,780 --> 01:21:58,830
Esam izveidojuši gabals
funkcionalitāti sauc initMap,

1629
01:21:58,830 --> 01:22:00,980
un jūs varat veida secināt
kas te notiek.

1630
01:22:00,980 --> 01:22:02,930
Kreisajā pusē,
mēs esam ieguvuši mainīgo,

1631
01:22:02,930 --> 01:22:06,000
tāpēc mēs esam gatavojas likt sekojošo
lieta iekšā, ka mainīgo,

1632
01:22:06,000 --> 01:22:07,362
no labās uz kreiso pusi.

1633
01:22:07,362 --> 01:22:11,940
Labajā pusē saka, hey
pārlūku, dod man jaunu Google karti.

1634
01:22:11,940 --> 01:22:16,490
Un google.maps.map ir tikai bailīgs veids
par norādot, ka šo funkciju

1635
01:22:16,490 --> 01:22:19,790
pieder Google Maps.

1636
01:22:19,790 --> 01:22:23,010
>> Pēc iekavās, mēs esam redzējuši
šo pirms, hey pārlūku, get

1637
01:22:23,010 --> 01:22:29,210
me elementi lapā, tad
tag lapā kuras unikālais ID is--

1638
01:22:29,210 --> 01:22:30,710
>> Mērķauditorija: [dzirdams]

1639
01:22:30,710 --> 01:22:31,790
>> DAVID Malan: --map.

1640
01:22:31,790 --> 01:22:35,770
Un kas notiek, labi,
šī līnija kopā, līnija 23,

1641
01:22:35,770 --> 01:22:38,630
būtībā sakot,
hey pārlūks, iet saņemt mani

1642
01:22:38,630 --> 01:22:42,800
ka tukša div lapā
kuras unikālais ID karte,

1643
01:22:42,800 --> 01:22:45,600
jo es gribu ievietot
uz it-- injicēt tajā,

1644
01:22:45,600 --> 01:22:49,520
ja jūs will-- visu ķekars saturu
kas notiek, nāk no interneta,

1645
01:22:49,520 --> 01:22:50,427
pēc tam.

1646
01:22:50,427 --> 01:22:52,010
Un Google dara visu, kas mums.

1647
01:22:52,010 --> 01:22:55,350
>> Tātad vēlreiz, pašās beigās, dienā,
mums ir šī piemērs abstrakcijas.

1648
01:22:55,350 --> 01:22:58,610
Man nav ne jausmas, kas karte ir
vai to, kā īstenot karti API.

1649
01:22:58,610 --> 01:22:59,460
Mums nav nepieciešams.

1650
01:22:59,460 --> 01:23:02,740
Mums vienkārši nepieciešams, lai pastāstītu karti
kur likt sevi, un atstājiet

1651
01:23:02,740 --> 01:23:04,880
tās pamatā īstenošana
detaļas Google.

1652
01:23:04,880 --> 01:23:08,190
Tagad ir acīmredzami
divi gabali datu

1653
01:23:08,190 --> 01:23:11,940
ka šis piemērs ir
nodrošinot, lai Google API.

1654
01:23:11,940 --> 01:23:16,450
Acīmredzot kartes centrā,
un tālummaiņas līmeni, lai runāt.

1655
01:23:16,450 --> 01:23:21,390
>> Un vai kāds atzīst šos
koordinātas, platuma un garuma?

1656
01:23:21,390 --> 01:23:24,364
Droši vien nav, bet mēs varam doties atpakaļ
uz apmācība, burtiski redzēt.

1657
01:23:24,364 --> 01:23:25,780
Bet mēs redzēsim to tikai brīdi.

1658
01:23:25,780 --> 01:23:29,880
Zoom līmenis ir vērtība starp, man nav
zināt, vienu 13 vai kaut kas tamlīdzīgs.

1659
01:23:29,880 --> 01:23:32,880
Tā vienkārši ir jādara ar cik tālu jūs esat
pietuvināto vai ārā, un tas arī viss.

1660
01:23:32,880 --> 01:23:35,690
Un tagad pašās beigās
lapa, paziņojums līnija 29--

1661
01:23:35,690 --> 01:23:39,960
tas ir nedaudz neglīts, jo
tas wraps-- šo rindiņu kodu

1662
01:23:39,960 --> 01:23:44,570
ir tas, kas lejupielādes uz
pārlūks Google faktisko API.

1663
01:23:44,570 --> 01:23:47,500
Visu kodu, kas Google
inženieri ir rakstīts, ka jāīsteno

1664
01:23:47,500 --> 01:23:50,000
Visa šī īpašība embeddable kartēm.

1665
01:23:50,000 --> 01:23:51,470
>> Tagad neko nemaina.

1666
01:23:51,470 --> 01:23:54,761
Ja jūs pēc kopā, iet uz priekšu un
vienkārši saglabājiet šo failu, ja jums patiešām ir

1667
01:23:54,761 --> 01:23:55,760
kas man ir.

1668
01:23:55,760 --> 01:23:57,370
Dodieties uz savu URL.

1669
01:23:57,370 --> 01:23:59,820
Jūs varat noklikšķināt uz pogas Palaist
up augšu un kas pateiks

1670
01:23:59,820 --> 01:24:03,050
Jums URL jūsu tīmekļa servera vēlreiz.

1671
01:24:03,050 --> 01:24:06,010
Un tas novedīs jūs uz jaunu cilni.

1672
01:24:06,010 --> 01:24:11,910
Ja jūs noklikšķiniet uz Atvērt, lai
map.html, un izredzes ir jūs esat

1673
01:24:11,910 --> 01:24:15,520
gatavojas saņemt brīdinājumu,
kļūdas ziņojums, jā?

1674
01:24:15,520 --> 01:24:18,570
Kļūdas ziņojums, kļūdas paziņojums?

1675
01:24:18,570 --> 01:24:21,170
>> Tātad diemžēl kļūda
ziņa nav tik informēts

1676
01:24:21,170 --> 01:24:23,890
ja vien jūs tiešām atvērt
konsole, ka īpaša tab mums

1677
01:24:23,890 --> 01:24:27,110
tur atverot vakar un
nedaudz agrāk šodien.

1678
01:24:27,110 --> 01:24:29,445
Bet es stumbled pāri
tas agrāk, tāpēc es jau

1679
01:24:29,445 --> 01:24:30,820
sapratu, ko risinājums ir.

1680
01:24:30,820 --> 01:24:34,440
Šodienas slaidiem, vai
Drīzāk, Cloud9, paziņojums

1681
01:24:34,440 --> 01:24:36,430
ka mēs nedarīja
kaut kas apzināti.

1682
01:24:36,430 --> 01:24:40,690
Ievērojiet, ka šis skripts tag
līnija 29, ja jūs lasīt caur to,

1683
01:24:40,690 --> 01:24:44,440
tas ir tāpat kā maps.googleapis.com/~~pobj
kaut kas, kaut ko, kaut ko,

1684
01:24:44,440 --> 01:24:46,430
tad pamanīt kādu,
viens no izstrādātājiem,

1685
01:24:46,430 --> 01:24:50,040
rakstīja visās kapitālā
burti, jūsu API atslēga.

1686
01:24:50,040 --> 01:24:51,700
>> Mums ir nepieciešams, lai ielīmētu kaut ko tur.

1687
01:24:51,700 --> 01:24:53,450
Un tas bija solis
Es darīju mums pirms,

1688
01:24:53,450 --> 01:24:57,190
un atkal viņi varētu melnajam sarakstam
mums, ja pēkšņi, 12 vai vairāk no mums

1689
01:24:57,190 --> 01:24:59,470
sākt izmantot to pašu atslēgu,
bet pieņemsim redzēt, kas notiek.

1690
01:24:59,470 --> 01:25:03,030
Tātad, ja jūs iedziļināties mūsdienu
slaidi, viens slaidu vēlāk, tur ir

1691
01:25:03,030 --> 01:25:07,070
Šis ļoti bailīgs izskata virkne tekstu.

1692
01:25:07,070 --> 01:25:12,230
Iet uz priekšu un tikai kopija, kas un
ielīmējiet to, kur ir teikts jūsu API atslēgu.

1693
01:25:12,230 --> 01:25:15,120
Tas ir viens es pierakstījies.

1694
01:25:15,120 --> 01:25:17,700
>> Un noteikti nemēģiniet
ierakstot to ar rokām,

1695
01:25:17,700 --> 01:25:21,210
jo tā uzskata pilns
ar typos, potenciāli.

1696
01:25:21,210 --> 01:25:23,260
Tik vienkārši kopēt un ielīmēt to.

1697
01:25:23,260 --> 01:25:26,090
Un tas notiek, lai līniju
ilgāk, bet tagad, tikai, lai būtu skaidrs,

1698
01:25:26,090 --> 01:25:29,540
tas izskatās mazliet vairāk
kā šis, kur galvenais ir vienāds nav

1699
01:25:29,540 --> 01:25:32,200
kapitalizēti kliedza pie jums.

1700
01:25:32,200 --> 01:25:34,810
Saglabājiet savu lapu, iet atpakaļ
ar citu cilni, papildināšanas,

1701
01:25:34,810 --> 01:25:36,770
un ceram redzēt karti, kur?

1702
01:25:36,770 --> 01:25:37,790
>> Mērķauditorija: Australia.

1703
01:25:37,790 --> 01:25:38,748
>> DAVID Malan: Austrālija.

1704
01:25:38,748 --> 01:25:41,200
Tātad acīmredzot tie ir
GPS koordinātas Austrālijā.

1705
01:25:41,200 --> 01:25:44,491
Un ļaujiet man iet apkārt tikai brīdi
un palīdzēt ikvienam, kurš nav gluži tur,

1706
01:25:44,491 --> 01:25:47,729
bet ļaujiet man ieteikt, izmantojot Google, atrast
GPS koordinātas savā dzimtajā

1707
01:25:47,729 --> 01:25:48,770
vai savu mītnes zemi.

1708
01:25:48,770 --> 01:25:51,436
Un, iespējams, Google var pārvērst šo
uz augšu, vai Wikipedia var pateikt.

1709
01:25:51,436 --> 01:25:54,410
Bet izvēlēties divas dažādas vērtības
uz platuma un garuma,

1710
01:25:54,410 --> 01:25:57,530
iet atpakaļ un ielīmēt tos, un
tad pārlādēt lapu pēc glābšanas

1711
01:25:57,530 --> 01:26:00,718
un redzēt, ja jūs varat būt
karti par savu dzimto pilsētu.

1712
01:26:00,718 --> 01:26:04,500

1713
01:26:04,500 --> 01:26:08,042
>> Un, kad esat pabeidzis ar
ka, pēcpārbaudes challenge--

1714
01:26:08,042 --> 01:26:11,250
un es došu nedaudz mazāk virzienu,
apzināti, tā ka jūs apzināti

1715
01:26:11,250 --> 01:26:13,791
ir cīnīties par pāris
minūtes ar dokumentāciju,

1716
01:26:13,791 --> 01:26:18,740
mainīt karti, lai būtu ne šis
cartoonish noklusējuma, bet satelītu karte.

1717
01:26:18,740 --> 01:26:24,600
Tātad jūs faktiski redzēt satelītu
tēlainība vietā diezgan krāsas.

1718
01:26:24,600 --> 01:26:29,710
>> Un mājienu es došu jums
ir mainīt kartes s veidu.

1719
01:26:29,710 --> 01:26:33,084
Iet atpakaļ uz, ka kļūst
sāka lapu iedvesmu.

1720
01:26:33,084 --> 01:26:40,599

1721
01:26:40,599 --> 01:26:42,390
Kā Jums var būt gūta,
Ja jūs meklējat,

1722
01:26:42,390 --> 01:26:44,250
tur ir tik daudz vairāk
lietas jūs varat darīt.

1723
01:26:44,250 --> 01:26:46,380
Daži no jums ir jau
mainīja kartes veidu.

1724
01:26:46,380 --> 01:26:49,890
Bet jūs varat do-- piemēram, ļaujiet man
iet uz kaut ko mums bija par kursu

1725
01:26:49,890 --> 01:26:52,050
Es teach-- maps.cs50.net.

1726
01:26:52,050 --> 01:26:53,470
Viens no mūsu undergrads izdarīja.

1727
01:26:53,470 --> 01:26:58,890
Mēs centrēt savu karti pār Harvard pagalmā un
pārklāt visu šo ēku nosaukumi,

1728
01:26:58,890 --> 01:27:01,070
un mums bija viņam pievienot šo.

1729
01:27:01,070 --> 01:27:04,270
Tātad, ja es gribu, lai meklētu,
piemēram, Matthews Hall,

1730
01:27:04,270 --> 01:27:05,730
mums ir maz nolaižamo izvēlni.

1731
01:27:05,730 --> 01:27:09,080
Un es domāju, ka viņš ir, izmantojot bootstrap, ka
bibliotēka mēs apspriests agrāk par to.

1732
01:27:09,080 --> 01:27:12,190
Un, ja jūs noklikšķiniet uz Matthews
Hall, tā uzreiz

1733
01:27:12,190 --> 01:27:14,790
lec karti uz noteiktu
atrašanās vietu, un tas liecina,

1734
01:27:14,790 --> 01:27:16,440
jūs attēlu šajā maz pop-up.

1735
01:27:16,440 --> 01:27:18,670
>> Bet pat tas maz
pop-up, mēs neīstenoja.

1736
01:27:18,670 --> 01:27:27,521
Ja es ritiniet uz leju mūsu iegūt
sākās lapu un meklēt info logiem,

1737
01:27:27,521 --> 01:27:29,770
Jūs redzēsiet, ka daži no
funkcionalitāte jums sev

1738
01:27:29,770 --> 01:27:31,561
var pievienot, lai gan
nedaudz vairāk sarežģītība,

1739
01:27:31,561 --> 01:27:33,970
ir kaut kas ko sauc par informācijas logs.

1740
01:27:33,970 --> 01:27:37,190
Un, ja es noklikšķiniet uz piemēru
šeit, un tas ir tas, kas ir jautri,

1741
01:27:37,190 --> 01:27:40,530
jūs varat darīt lietas, piemēram, tas,
uzklikšķinot uz marķieri, un pēc tam voila,

1742
01:27:40,530 --> 01:27:42,400
informācija NOP augšu.

1743
01:27:42,400 --> 01:27:45,874
>> Tātad mēs neesam gluži ieviesušas
pietiekami iezīmes JavaScript

1744
01:27:45,874 --> 01:27:49,040
uzzīmēt zīmējumu, kā tieši Jums
varētu stieples visu šo stuff kopā,

1745
01:27:49,040 --> 01:27:50,706
bet mēs esam sava veida scratched virsmas.

1746
01:27:50,706 --> 01:27:53,140
Patiesībā, tas, ko es tikko darīju, kad
Es noklikšķinājis uz šo marķieri,

1747
01:27:53,140 --> 01:27:55,819
tika izraisot notikums,
tā aicināja klikšķi notikumu.

1748
01:27:55,819 --> 01:27:57,610
Un mēs tiešām redzēju
notikums agrāk šodien,

1749
01:27:57,610 --> 01:28:00,670
tā sauktais iesniegt notikumu,
kad mēs bijām novēršot

1750
01:28:00,670 --> 01:28:02,490
lietotājs no meklē kaķiem.

1751
01:28:02,490 --> 01:28:06,560
Tātad, mēs esam sava veida noplūktiem un choosed
No starp visiem šiem dažādas funkcijas,

1752
01:28:06,560 --> 01:28:08,990
lai dotu jums sajūtu, cerams,
par to, ko jūs faktiski var

1753
01:28:08,990 --> 01:28:11,000
darīt ar nedaudz vairāk
komforts plānošanā,

1754
01:28:11,000 --> 01:28:12,587
un pilnīgi bezmaksas resursi.

1755
01:28:12,587 --> 01:28:15,856

1756
01:28:15,856 --> 01:28:18,770
>> Kādi jautājumi?

1757
01:28:18,770 --> 01:28:19,790
Nē?

1758
01:28:19,790 --> 01:28:22,542
Šis ir jūsu gala iespēja,
Vismaz šodien, piektdienā,

1759
01:28:22,542 --> 01:28:25,000
lai saņemtu kaut pie jūsu krūtīm
lai jūs iet no šejienes

1760
01:28:25,000 --> 01:28:27,067
sajūta pārliecināti un ērti.

1761
01:28:27,067 --> 01:28:27,566
Jā.

1762
01:28:27,566 --> 01:28:29,740
>> Mērķauditorija: Kāpēc ne
Pievienojot vēl viena lieta?

1763
01:28:29,740 --> 01:28:32,720
>> DAVID Malan: Ak mans Dievs.

1764
01:28:32,720 --> 01:28:35,260
Man vajag, lai atpūstos šīs nedēļas nogalē, es domāju.

1765
01:28:35,260 --> 01:28:36,180
Citi jautājumi?

1766
01:28:36,180 --> 01:28:37,055
>> Mērķauditorija: [dzirdams]

1767
01:28:37,055 --> 01:28:44,130

1768
01:28:44,130 --> 01:28:46,810
>> DAVID Malan: Tu can-- in
Internet Explorer, atpūta mierā,

1769
01:28:46,810 --> 01:28:49,310
jūs izmantojāt, lai varētu likt VB
Skripts, virtuālā pamata skriptu,

1770
01:28:49,310 --> 01:28:50,643
bet tas tiešām nekad nozvejotas.

1771
01:28:50,643 --> 01:28:52,490
Tik īsā atbilde ir tikai JavaScript.

1772
01:28:52,490 --> 01:28:55,144

1773
01:28:55,144 --> 01:28:55,810
Citi jautājumi?

1774
01:28:55,810 --> 01:28:58,427

1775
01:28:58,427 --> 01:28:59,760
Labi, labi, ļaujiet man darīt.

1776
01:28:59,760 --> 01:29:02,070
Ļaujiet man paķert kolēģiem ārpus.

1777
01:29:02,070 --> 01:29:04,500
Viņiem ir daži novērtējumu
formas, ka viņi vēlas ikvienam

1778
01:29:04,500 --> 01:29:06,310
pavadīt dažas minūtes aizpildot.

1779
01:29:06,310 --> 01:29:08,775
Viņi vēlas, lai savāktu šo veidlapu, un jebkurš
atbrīvojumi, ka Jums varētu būt ārpus.

1780
01:29:08,775 --> 01:29:10,240
Tie būs arī sertifikātus.

1781
01:29:10,240 --> 01:29:12,380
Es esmu guessing tur
vēl dažas uzkodas ārpus.

1782
01:29:12,380 --> 01:29:14,360
Ļaujiet man iet tiem ārā, un, ja jūs
ir kādi jautājumi par to laiku,

1783
01:29:14,360 --> 01:29:17,120
Es staigāt apkārt vairāk individuāli
un mēs varam iegūt jums sākusies.

1784
01:29:17,120 --> 01:29:17,879
Jā, protams.

1785
01:29:17,879 --> 01:29:18,754
Mērķauditorija: [dzirdams]

1786
01:29:18,754 --> 01:29:26,737

1787
01:29:26,737 --> 01:29:28,570
DAVID Malan: Tas ir
parasti taisnība šajās dienās.

1788
01:29:28,570 --> 01:29:30,730
Protams ar web
programmatūra, jums ir tieksme

1789
01:29:30,730 --> 01:29:32,901
uz citiem, tu esi vai nu
estētiski izmantojot lietas

1790
01:29:32,901 --> 01:29:35,400
tāpat sāknēšanas, tāpēc jums nav
ir īstenot zems

1791
01:29:35,400 --> 01:29:37,169
ziņas par izvēlnēm un
pogas un viss kas.

1792
01:29:37,169 --> 01:29:39,210
Jūs atspiedies uz kādu
piemēram, Google, lai jums

1793
01:29:39,210 --> 01:29:42,050
nav veidot Uber
biznesa un kartēšana bizness,

1794
01:29:42,050 --> 01:29:44,850
un neierobežotu skaitu līdzīgs
pieteikumi, kā arī.

1795
01:29:44,850 --> 01:29:46,350
>> Patiesībā, logins ir populārs, too.

1796
01:29:46,350 --> 01:29:48,500
Ja jūs esat izmantojis Spotify vai
jebkurš vairākas mājas lapas,

1797
01:29:48,500 --> 01:29:51,210
jūs pieteikties uz dažām
mājas lapas, izmantojot Facebook.

1798
01:29:51,210 --> 01:29:53,350
Tātad, kas ir jauki, tur
ir API autorizācijas

1799
01:29:53,350 --> 01:29:56,570
mūsdienās, tā ka jums nav
lai jūsu pašu lietotāju tabula

1800
01:29:56,570 --> 01:29:59,440
un visu savu datu bāzi
katrā ziņā tādā pašā mērā.

1801
01:29:59,440 --> 01:30:01,795
Jūs varat ļaut Facebook darīt visu
Minētās sarežģītības jums.

1802
01:30:01,795 --> 01:30:03,920
Tātad, tas ir aizraujošs laiks,
godīgi, plānošanā,

1803
01:30:03,920 --> 01:30:07,200
jo tur ir tik daudz trešā persona
pakalpojumus, ka jūs varat veidot virsū.

1804
01:30:07,200 --> 01:30:10,890
>> Un atkal, cena, ko maksāt, ir
nu finanšu vai dīkstāves.

1805
01:30:10,890 --> 01:30:13,750
Ja Google iet uz leju,
tā nav Uber, varbūt,

1806
01:30:13,750 --> 01:30:15,690
bet varbūt tas ir
saprātīgs kompromiss.

1807
01:30:15,690 --> 01:30:18,040
Un atkal, tas bija viens no tematiem,
cerams, par pēdējo pāris dienu laikā,

1808
01:30:18,040 --> 01:30:18,780
ir šie kompromisi.

1809
01:30:18,780 --> 01:30:20,738
Un reti ir tur notiek
būt pareizā atbilde.

1810
01:30:20,738 --> 01:30:25,700
Tā patiešām ir labāk
no divām vai vairākām atbildēm.

1811
01:30:25,700 --> 01:30:26,682
>> Iet tiem apkārt.

1812
01:30:26,682 --> 01:30:36,830

1813
01:30:36,830 --> 01:30:41,110
>> Un šie Cloud9 konti turpināsies
strādāt, teorētiski, uz mūžīgiem laikiem.

1814
01:30:41,110 --> 01:30:45,000
Jūs varētu atrast, ja jūs gaidāt dažas dienas
vai nedēļu vai vairāk, lai pieteiktos atpakaļ tiem,

1815
01:30:45,000 --> 01:30:49,170
tas varētu veikt, piemēram, vienu vai
piecas minūtes, lai atvērtu atpakaļ uz augšu,

1816
01:30:49,170 --> 01:30:54,090
bet tas ir tikai tāpēc, ka viņi iegulda
tā gulēt ietaupīt uz resursiem.

1817
01:30:54,090 --> 01:31:10,527

