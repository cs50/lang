1
00:00:00,000 --> 00:00:00,060

2
00:00:00,060 --> 00:00:01,560
>> DAVID MALAN: Rendben, vissza.

3
00:00:01,560 --> 00:00:03,830
Így az izgalmas
Összefoglalva, az utolsó szakasz

4
00:00:03,830 --> 00:00:06,900
web programozás, amit
Gondoltuk használni, mint egy általános kifejezés

5
00:00:06,900 --> 00:00:08,440
hogy rögzítse a néhány megmaradt téma.

6
00:00:08,440 --> 00:00:10,390
Így a végén a
nap, akkor valójában

7
00:00:10,390 --> 00:00:14,830
egy kicsit a gyakorlati web programozás
egy nyelv úgynevezett JavaScript.

8
00:00:14,830 --> 00:00:17,510
És azt hiszem, rá egy pillantást
valamit kapcsolódó képek

9
00:00:17,510 --> 00:00:20,040
és felfedezni valami
titokban elrejtve egy kép,

10
00:00:20,040 --> 00:00:23,230
és nézd meg a Google
Maps API, application programming

11
00:00:23,230 --> 00:00:26,040
felület, mint valami
képviselője a típusú szoftver

12
00:00:26,040 --> 00:00:28,800
ez egyre inkább és
szabadon elérhető ma.

13
00:00:28,800 --> 00:00:32,029
>> De miért nem megnézzük
egy összetevő ebben a világban

14
00:00:32,029 --> 00:00:34,070
hogy már ilyen volt
Ha igaz, létezik

15
00:00:34,070 --> 00:00:36,720
egy ideig, egy adatbázisban.

16
00:00:36,720 --> 00:00:39,150
Az elmúlt nap, és
fél általunk feltételezett

17
00:00:39,150 --> 00:00:42,910
hogy van hozzáférése egy adatbázishoz, de
milyen problémát jelent az adatbázis megoldani?

18
00:00:42,910 --> 00:00:45,540
Mit tesz ez nekünk?

19
00:00:45,540 --> 00:00:47,030
Mi az?

20
00:00:47,030 --> 00:00:48,679
>> KÖZÖNSÉG: [hallható]

21
00:00:48,679 --> 00:00:51,720
DAVID MALAN: tartalmazza az összes információt,
OK, hogy milyen információ

22
00:00:51,720 --> 00:00:53,186
Lehet, akkor bele?

23
00:00:53,186 --> 00:00:54,590
>> KÖZÖNSÉG: [hallható]

24
00:00:54,590 --> 00:00:56,450
>> DAVID MALAN: Bármely információ
teszel, akkor kapsz vissza.

25
00:00:56,450 --> 00:00:57,070
Az igaz.

26
00:00:57,070 --> 00:01:01,900
És egy tipikus web-alapú webhely vagy internetes
alkalmazás, hogy milyen információ,

27
00:01:01,900 --> 00:01:03,385
Konkrétabban, esetleg teszel?

28
00:01:03,385 --> 00:01:04,260
KÖZÖNSÉG: [hallható]

29
00:01:04,260 --> 00:01:05,051
DAVID MALAN: A felhasználók.

30
00:01:05,051 --> 00:01:07,000
Tehát mi az a felhasználó?

31
00:01:07,000 --> 00:01:09,765
>> KÖZÖNSÉG: [hallható]

32
00:01:09,765 --> 00:01:11,640
DAVID MALAN: OK, bejegyzett
felhasználó az oldalon.

33
00:01:11,640 --> 00:01:15,100
És mit jelent az, hogy
bolt a felhasználók adatait?

34
00:01:15,100 --> 00:01:17,260
Mi alkotja a felhasználó?

35
00:01:17,260 --> 00:01:18,331
A felhasználónak mi?

36
00:01:18,331 --> 00:01:19,206
KÖZÖNSÉG: [hallható]

37
00:01:19,206 --> 00:01:21,040
DAVID MALAN: Igen, a személyes
adatokat, és ez tetszik.

38
00:01:21,040 --> 00:01:21,970
Legyünk pontosabbak.

39
00:01:21,970 --> 00:01:25,275
Így a felhasználó általában van neve,
mi mást lehet egy felhasználónak?

40
00:01:25,275 --> 00:01:26,150
KÖZÖNSÉG: [hallható]

41
00:01:26,150 --> 00:01:29,130
DAVID MALAN: Egy addr-- OK,
így első nevét, vezetéknevét.

42
00:01:29,130 --> 00:01:29,630
Az jó.

43
00:01:29,630 --> 00:01:31,463
Tulajdonképpen, most fix
hogy azért, mert ez lesz

44
00:01:31,463 --> 00:01:35,010
nyitni lehetőséget
vita, még tovább.

45
00:01:35,010 --> 00:01:39,090
Utónév, vezetéknév, nem.

46
00:01:39,090 --> 00:01:41,820

47
00:01:41,820 --> 00:01:43,481
Az azonosító valamilyen.

48
00:01:43,481 --> 00:01:43,980
Mi más?

49
00:01:43,980 --> 00:01:45,438
Hallottam valami mást előtt is.

50
00:01:45,438 --> 00:01:51,600
Egy e-mail, levelezési cím.

51
00:01:51,600 --> 00:01:58,170
>> Tehát lássuk szünet van, és most már úgy
Nem mi vagyunk tárolása az adatbázisban,

52
00:01:58,170 --> 00:02:01,980
de-- és nem ezért, mert ez talán
Nyilvánvaló, hogy ha egyszer regisztrál felhasználó,

53
00:02:01,980 --> 00:02:03,730
akarsz emlékezni rájuk egy ideig.

54
00:02:03,730 --> 00:02:05,480
Nem akarjuk, hogy
Csak a RAM

55
00:02:05,480 --> 00:02:08,690
és lehet forgotten-- így
nézzük összpontosítani, hogyan.

56
00:02:08,690 --> 00:02:11,700
>> Kiderül, hogy a
A világ adatbázisok,

57
00:02:11,700 --> 00:02:14,410
van legalább két típusú manapság.

58
00:02:14,410 --> 00:02:20,010
Egy úgynevezett SQL adatbázis,
Structured Query Language,

59
00:02:20,010 --> 00:02:24,770
vagy cutely nevű,
NoSQL, ami nem SQL.

60
00:02:24,770 --> 00:02:26,980
, És az utóbbi egy
Például, hogy mi

61
00:02:26,980 --> 00:02:30,660
nevezhető egy objektum-orientált,
vagy egy tárgy tárolására, egy adatbázis

62
00:02:30,660 --> 00:02:36,010
amely tárolja tárgyak, és nem mentség
Nekem, mint hamarosan látni fogjuk, a sorok.

63
00:02:36,010 --> 00:02:41,800
>> Így fogunk összpontosítani csak egy pillanatra
Ezek közül az első, nevezetesen egy SQL

64
00:02:41,800 --> 00:02:46,850
adatbázis, ha csak azért, mert
így már ismerős, hogy bárki

65
00:02:46,850 --> 00:02:51,070
aki használt Excel vagy
Google Táblázatok vagy az Apple

66
00:02:51,070 --> 00:02:53,740
Számokat vagy bármilyen szabványos
táblázatkezelő program,

67
00:02:53,740 --> 00:02:56,040
vagy ami azzal egyenértékű, vagy
több igényesen,

68
00:02:56,040 --> 00:02:58,610
olyasmi, mint a Microsoft
Access vagy Oracle

69
00:02:58,610 --> 00:03:03,890
vagy MySQL vagy PostgreSQL, amelyek mindegyike
a termék nevek megvalósítások

70
00:03:03,890 --> 00:03:04,865
A következő ötlet.

71
00:03:04,865 --> 00:03:10,350
>> A relációs adatbázis egyszerűen
olyasmit, ami a sorok és oszlopok.

72
00:03:10,350 --> 00:03:12,850
És sorok és oszlopok,
Szó szerint azt jelenti, valamit

73
00:03:12,850 --> 00:03:21,860
mint ez, így ahol lehet, hogy van a
a mező nevét és típusát ide.

74
00:03:21,860 --> 00:03:25,800
És valóban, hadd
most kezdenek térkép ezeket.

75
00:03:25,800 --> 00:03:29,420
Tehát tulajdonképpen, nem tudom,
miért húztam egy külön táblázat.

76
00:03:29,420 --> 00:03:30,780
Tartsuk ezt az egyszerű.

77
00:03:30,780 --> 00:03:34,830
>> Van itt a
kezdetei táblázatunk, ahol

78
00:03:34,830 --> 00:03:40,150
ez a mező nevét
és ez az adattípus,

79
00:03:40,150 --> 00:03:41,660
és típus szerint értem a következőket.

80
00:03:41,660 --> 00:03:45,510
Ez egy szám, ez egy string,
rövid karakterlánc, mint egy szó,

81
00:03:45,510 --> 00:03:49,340
ez egy bekezdés, ez
bináris adat, mint egy kép?

82
00:03:49,340 --> 00:03:51,980
És nézzük csak ugratni ezt
eltekintve csak egy pillanatra.

83
00:03:51,980 --> 00:03:57,575
Tehát az első név, szám,
húr, nagy darab text--

84
00:03:57,575 --> 00:03:58,450
KÖZÖNSÉG: [hallható]

85
00:03:58,450 --> 00:03:59,616
DAVID MALAN: Igen, így húr.

86
00:03:59,616 --> 00:04:04,744
És egy adatbázis összefüggésben fogunk
általában hívják ezt char mezőben.

87
00:04:04,744 --> 00:04:07,660
Én csak annyit, char most, de mi vagyunk
fog finomítani ezt a pillanatot.

88
00:04:07,660 --> 00:04:09,180
Karakter területen.

89
00:04:09,180 --> 00:04:11,365
Vezetéknév valószínűleg ugyanaz.

90
00:04:11,365 --> 00:04:11,865
A nemek?

91
00:04:11,865 --> 00:04:16,230

92
00:04:16,230 --> 00:04:18,310
>> Férfi vagy nő, így
lehet char mezőben.

93
00:04:18,310 --> 00:04:21,380
Ez lehet akár idézet, idézet vége
"Férfi" vagy idézet, idézet vége "női"

94
00:04:21,380 --> 00:04:23,650
vagy lehet m vagy f.

95
00:04:23,650 --> 00:04:26,540
Ha azt szeretnénk, hogy átfogóbb,
szükség lehet egy harmadik értéket

96
00:04:26,540 --> 00:04:28,640
vagy valamilyen más területen összesen.

97
00:04:28,640 --> 00:04:31,350
És így jól jönne igaz hamis.

98
00:04:31,350 --> 00:04:35,036
A mező nevezhetnénk férfi, és
akkor lehetne mondani, igaz vagy hamis.

99
00:04:35,036 --> 00:04:38,160
De ez nem feltétlenül rögzítse
az összes információt, amit érdemes.

100
00:04:38,160 --> 00:04:41,118
>> Így kiderül, van egy másik típusú
mező, ami hasznos lehet itt

101
00:04:41,118 --> 00:04:46,040
egy tipikus adatbázist, az úgynevezett
enum, ahol egy karakter területen,

102
00:04:46,040 --> 00:04:50,480
de te, a tervező, kap
felsorolni a lehetséges értékek,

103
00:04:50,480 --> 00:04:54,630
mint idézet, idézet vége "férfi", idézet,
idézet vége "női" és így tovább.

104
00:04:54,630 --> 00:04:57,620
Annak érdekében, hogy bármilyen értéket
van az adatbázisban,

105
00:04:57,620 --> 00:05:00,670
Valóban karakter-alapú, de
azt, hogy az egyik az említett értékek.

106
00:05:00,670 --> 00:05:03,520
Mi valószínűleg nem akar egy
enum az utónév vagy vezetéknév.

107
00:05:03,520 --> 00:05:05,630
Egyébként mi lett volna
felsorolni, mint a neve

108
00:05:05,630 --> 00:05:09,570
származik, a szó szoros értelmében minden
lehetséges vezeték- és utónevét.

109
00:05:09,570 --> 00:05:13,960
>> OK, így azonosító mit kell egy azonosítót lenni?

110
00:05:13,960 --> 00:05:15,200
Igen, lehet, hogy több.

111
00:05:15,200 --> 00:05:17,870
Tehát maradjunk
hogy most, szám.

112
00:05:17,870 --> 00:05:22,010
És szám, szám van
egy kicsit túl tág most.

113
00:05:22,010 --> 00:05:23,900
A végén a második
nap, úgy érzem, hogy

114
00:05:23,900 --> 00:05:25,280
kell egy kicsit pontosabb.

115
00:05:25,280 --> 00:05:29,280
Száma is értem, mint azt
lehet valami hasonló 1,236.

116
00:05:29,280 --> 00:05:31,500
És valószínűleg nem
mit értünk egy azonosítót.

117
00:05:31,500 --> 00:05:34,635
Mit is valószínűleg azt jelenti, amelynek az azonosítója?

118
00:05:34,635 --> 00:05:36,382
>> KÖZÖNSÉG: [hallható]

119
00:05:36,382 --> 00:05:38,590
DAVID MALAN: Oh, OK, így
Talán ez nem is több.

120
00:05:38,590 --> 00:05:42,840
Lehet, hogy ez valójában egy egyedi azonosító
ez egy húr, mint egy felhasználói nevet.

121
00:05:42,840 --> 00:05:44,580
Tehát egyáltalán lehetne.

122
00:05:44,580 --> 00:05:46,730
Azt hiszem, valaki talán
jelentette numerikus, mégis.

123
00:05:46,730 --> 00:05:48,460
Tehát maradjunk ebben.

124
00:05:48,460 --> 00:05:49,320
Milyen szám?

125
00:05:49,320 --> 00:05:51,960
Mi egy precise-- egész.

126
00:05:51,960 --> 00:05:56,710
Tehát egy szám, mint a 0, 1, 2, 3,
így hívjuk ezt az egész.

127
00:05:56,710 --> 00:05:58,909
És még akkor is, tudtam
kell nitpicking, ez

128
00:05:58,909 --> 00:06:00,700
Nem igazán csak egy
Általában egész akarsz.

129
00:06:00,700 --> 00:06:04,340
Valószínűleg nem akar negatív értékeket,
csak azért, mert ez csak úgy érzi furcsa.

130
00:06:04,340 --> 00:06:06,070
Talán szeretnénk pozitív egészek.

131
00:06:06,070 --> 00:06:07,920
Tehát akkor is kifejezni
hogy egy olyan adatbázis,

132
00:06:07,920 --> 00:06:09,450
de most, azt fogjuk mondani egész.

133
00:06:09,450 --> 00:06:10,650
>> Email?

134
00:06:10,650 --> 00:06:13,550
Ez valószínűleg csak-- mi?

135
00:06:13,550 --> 00:06:14,460
>> KÖZÖNSÉG: [hallható]

136
00:06:14,460 --> 00:06:16,980
>> DAVID MALAN: Ez az e-mail,
de ez karakterek, nem igaz?

137
00:06:16,980 --> 00:06:19,813
Csak van egy funky karakter, mint
"kukac" szimbólumot, vagy valami más,

138
00:06:19,813 --> 00:06:21,580
de ez akkor is egy karakter területen.

139
00:06:21,580 --> 00:06:23,900
És postai címét?

140
00:06:23,900 --> 00:06:25,360
Karakter területen.

141
00:06:25,360 --> 00:06:31,400
Tehát ez egy jó kezdet, de
legyünk egy kicsit pontosabb most.

142
00:06:31,400 --> 00:06:34,540
>> Így kiderül, hogy a
egy adatbázis, gyakran

143
00:06:34,540 --> 00:06:39,120
a választás több mint kifinomultabb
változatai ezek a dolgok.

144
00:06:39,120 --> 00:06:44,330
Tény, hogy egy tipikus SQL adatbázis, SQL,
vagy általánosabban, a relációs adatbázis,

145
00:06:44,330 --> 00:06:46,680
adatbázisok sorok
és oszlopok, gyakran

146
00:06:46,680 --> 00:06:53,610
kap, hogy határozza meg nem csak a típusát a
field-- engedjék meg, hogy néhány szoba here--

147
00:06:53,610 --> 00:06:56,600
hanem a hosszát.

148
00:06:56,600 --> 00:06:59,900
>> Mióta az első név?

149
00:06:59,900 --> 00:07:07,060
Azt hiszem, a D-A-V-I-D. Rendben, értem én
Valószínűleg csak megsértődött, mint fele

150
00:07:07,060 --> 00:07:11,260
Az emberek a szobában, igaz,
mivel a nevek több mint öt

151
00:07:11,260 --> 00:07:16,608
levelek, így öt úgy tűnik, egy kicsit önző
és naiv, akkor mi a jobb ár-érték?

152
00:07:16,608 --> 00:07:19,320

153
00:07:19,320 --> 00:07:24,330
10, minden rendben, és azt hiszem,
vagyunk OK a szobában.

154
00:07:24,330 --> 00:07:26,254
13?

155
00:07:26,254 --> 00:07:27,541
30?

156
00:07:27,541 --> 00:07:29,540
Miért nem veszi a
megközelítése korábban, amikor

157
00:07:29,540 --> 00:07:31,081
beszéltek tömbök és a memória?

158
00:07:31,081 --> 00:07:32,450
Miért nem tudok csak mondani, mint a 1000?

159
00:07:32,450 --> 00:07:35,260
Senki nevét megy
hosszabb, mint 1000.

160
00:07:35,260 --> 00:07:36,706
Visszavet.

161
00:07:36,706 --> 00:07:38,005
>> KÖZÖNSÉG: [hallható]

162
00:07:38,005 --> 00:07:40,130
DAVID MALAN: Igen, ez
pazarló, jobb, különösen

163
00:07:40,130 --> 00:07:44,630
ha a legtöbb nevek csak öt vagy 10 vagy
15 karakter, ez nagyon pazarló.

164
00:07:44,630 --> 00:07:45,810
Szóval tudod mit?

165
00:07:45,810 --> 00:07:48,020
Ez a fajta egy nehéz kérdés.

166
00:07:48,020 --> 00:07:51,721
Most már biztosan elemezni English
és bármely más nyelvű nevét

167
00:07:51,721 --> 00:07:54,470
és kitalálni, nos, mi a
average-- átlag nem igazán

168
00:07:54,470 --> 00:07:57,150
segít us-- mi a max
Valószínűleg az, amit igazán akar.

169
00:07:57,150 --> 00:07:59,920
De kiderül, mi is van
Néhány választási lehetőségeit típus itt.

170
00:07:59,920 --> 00:08:03,400
>> Egy tipikus SQL adatbázis, akkor
már egy úgynevezett char mező

171
00:08:03,400 --> 00:08:07,505
és egy VARCHAR, V-a-R,
változó char mezőben.

172
00:08:07,505 --> 00:08:08,630
És a különbség ezt.

173
00:08:08,630 --> 00:08:12,400
A char területen, akkor a tervező,
kell jelezze,

174
00:08:12,400 --> 00:08:14,900
a pontos hossza a területen.

175
00:08:14,900 --> 00:08:20,530
Így talán az első név
mint a 20 úgy érzi, milyen biztonságban.

176
00:08:20,530 --> 00:08:23,950
Lehet, hogy nem néhány googling hogy
kideríteni, hogy valójában elég biztonságos.

177
00:08:23,950 --> 00:08:26,910
Van talán egy nevet 21
karakterek, de most tegyük fel, hogy 20

178
00:08:26,910 --> 00:08:27,620
biztonságos.

179
00:08:27,620 --> 00:08:30,070
>> A char mező azt jelentené,
egy adatbázis, amit

180
00:08:30,070 --> 00:08:33,289
vannak a 20 és mindig 20 karakter.

181
00:08:33,289 --> 00:08:37,419
Most, ha ez csak a D-A-V-I-D, 15 e
csak lesz üres karakter,

182
00:08:37,419 --> 00:08:40,450
de még mindig használja mind a 20 bájt.

183
00:08:40,450 --> 00:08:46,302
VARCHAR mező, ezzel szemben azt jelenti, a
karakterlánc legfeljebb 20 karakter

184
00:08:46,302 --> 00:08:48,260
de ha csak öt,
te csak akkor fog használni

185
00:08:48,260 --> 00:08:51,270
öt vagy talán hat a
különleges értéke a végén,

186
00:08:51,270 --> 00:08:54,980
így 0 megbeszéltük, hogy
végét jelzi egy karakter

187
00:08:54,980 --> 00:08:56,790
szekvencia a memóriában.

188
00:08:56,790 --> 00:08:59,950
>> Tehát, ha gondol
lehet választani, char

189
00:08:59,950 --> 00:09:05,240
versus varchar, tekintettel arra, hogy a trade-off?

190
00:09:05,240 --> 00:09:09,321
Char használ, hogy sok karakter, varchar
nem használ több mint sok karaktert.

191
00:09:09,321 --> 00:09:10,196
KÖZÖNSÉG: [hallható]

192
00:09:10,196 --> 00:09:13,859

193
00:09:13,859 --> 00:09:16,900
DAVID MALAN: OK, ha tudod, hogy a
karakterlánc hossza elég meggyőző

194
00:09:16,900 --> 00:09:19,316
csak használja char, mert ha
te is tudod, csak tedd le.

195
00:09:19,316 --> 00:09:23,390
És lehet, hogy ez igaz a zip
kódot, az USA-ban, legalábbis, 02138,

196
00:09:23,390 --> 00:09:26,660
ez mindig lesz öt
karakter, amíg hozzá a műszerfal négy.

197
00:09:26,660 --> 00:09:29,750
De lehet, hogy néhány érték a
amit mindig tudja a hosszát.

198
00:09:29,750 --> 00:09:32,310
Vagy talán állami jelképek,
mint NY New York,

199
00:09:32,310 --> 00:09:33,811
és MA Massachusetts az USA-ban.

200
00:09:33,811 --> 00:09:36,560
Lehet, hogy van néhány helyzet
ahol ez teljesen ésszerű,

201
00:09:36,560 --> 00:09:39,520
hanem, hogy a logika, miért
mi is overthinking ez?

202
00:09:39,520 --> 00:09:41,800
Miért nem csak használja
varchar, aztán majd csak

203
00:09:41,800 --> 00:09:46,730
mindig két karakter egyébként, vagy
mindig öt karakter egyébként?

204
00:09:46,730 --> 00:09:50,300
Miért nem elég csak a varchar
mindent, hogy a logika?

205
00:09:50,300 --> 00:09:51,677
Ott kell lennie egy fogás.

206
00:09:51,677 --> 00:09:52,552
KÖZÖNSÉG: [hallható]

207
00:09:52,552 --> 00:09:54,952

208
00:09:54,952 --> 00:09:56,660
DAVID MALAN: Lehet
írni valamit rosszul.

209
00:09:56,660 --> 00:09:58,090
Annak érdekében, hogy ez igaz.

210
00:09:58,090 --> 00:10:01,030
De még akkor is, nem tudják használni
több memóriát hozzárendelhetek.

211
00:10:01,030 --> 00:10:03,340
Még mindig megvan a végső
mondani, mint a hosszúság,

212
00:10:03,340 --> 00:10:06,780
így nem véletlen, hogy
ezt a hibát, de egy jó gondolat.

213
00:10:06,780 --> 00:10:10,510
Ez finomabb, de ez nagyon rokon
hogy a vitát, valóban, a tömbök

214
00:10:10,510 --> 00:10:12,390
és a hozzá kapcsolódó listák korábban.

215
00:10:12,390 --> 00:10:16,290
>> Kiderül, hogy az adatbázis, ha
tudja, hogy az összes érték

216
00:10:16,290 --> 00:10:19,250
egy fix hosszúságú, akkor is, ha
néhány ilyen értékek üresek,

217
00:10:19,250 --> 00:10:22,484
egyfajta esztétikai üres,
D-A-V-I-D, majd 15 üres,

218
00:10:22,484 --> 00:10:24,650
kiderül, hogy ha minden egyes
mező azonos hosszúságú,

219
00:10:24,650 --> 00:10:28,670
hasonlóan egy sor volt annak minden dolog
háttal egymásnak háttal úgy, hogy

220
00:10:28,670 --> 00:10:33,480
akkor is csak plusz 1, hogy a következő
érték, ugyanaz a gondolat egy adatbázis tábla.

221
00:10:33,480 --> 00:10:37,550
Ha az összes karakter
húrok azonos hosszúságú,

222
00:10:37,550 --> 00:10:39,390
Van, amit az úgynevezett véletlen hozzáférésű.

223
00:10:39,390 --> 00:10:41,850
Ha minden a húrok a
hossz 20, akkor nem csak a

224
00:10:41,850 --> 00:10:45,230
do plusz 1 csak csinálni plusz
20, plusz 20, plusz 20, plusz 20,

225
00:10:45,230 --> 00:10:48,775
és akkor nagyon gyorsan lapozhat
vagy keressen az összes adatát.

226
00:10:48,775 --> 00:10:54,420
>> Egy változó char mező, ezzel szemben,
nem mindig 20 karakter.

227
00:10:54,420 --> 00:10:58,000
Lehet, hogy a 20, majd
15, majd 19, majd 10,

228
00:10:58,000 --> 00:11:00,720
és ezért ha azt szeretnénk, hogy keresni
rajta, akkor nem csak vakon

229
00:11:00,720 --> 00:11:03,050
adjunk hozzá 20 byte, hogy a következő alkalommal.

230
00:11:03,050 --> 00:11:07,280
Ha szó szerint kell keresni
mert a szélén a adatstruktúra,

231
00:11:07,280 --> 00:11:08,340
ha úgy tetszik, a rongyos.

232
00:11:08,340 --> 00:11:11,480
Ez a fajta megy be és ki alapú
a tényleges hossza a húr.

233
00:11:11,480 --> 00:11:14,460
Tehát, ha tudod, hogy a hossz, mint
Kareem mondja, használjon char mezőben

234
00:11:14,460 --> 00:11:16,460
mert kapsz, hogy
hatékonyságát, hogy

235
00:11:16,460 --> 00:11:19,170
képes keresni gyorsabb
ha keres az adatok,

236
00:11:19,170 --> 00:11:20,550
egyébként egy változót.

237
00:11:20,550 --> 00:11:24,450
>> Sajnos, nincs jó válasz
hogy milyen hosszú a neve legyen,

238
00:11:24,450 --> 00:11:26,360
de valami hasonló
egy nevet, azt mondanám,

239
00:11:26,360 --> 00:11:28,470
egy varchar gyakori
mert ez nem fog

240
00:11:28,470 --> 00:11:30,430
hogy egy fix hosszúságú mindenki számára.

241
00:11:30,430 --> 00:11:33,650
20, nem tudom, 20
úgy érzi, egy kicsit szűk.

242
00:11:33,650 --> 00:11:36,460
Mondjuk 50, 50.

243
00:11:36,460 --> 00:11:39,210
Ez nem igazán költséghatékony, hogy
sokkal több, mondjuk 50 helyett 40,

244
00:11:39,210 --> 00:11:41,260
de egy bizonyos ponton, akkor meg kell
hogy az ítélet hívást.

245
00:11:41,260 --> 00:11:43,090
>> Nagyon gyakori, őszintén szólva,
A [? történelmi?]

246
00:11:43,090 --> 00:11:47,670
okokból, annak ellenére, hogy a túlzott,
azaz 255, mert néhány évvel ezelőtt,

247
00:11:47,670 --> 00:11:51,440
a népszerű adatbázis-kezelő rendszerek, mint például a
MySQL, egy ingyenes, nyílt forráskódú eszköz

248
00:11:51,440 --> 00:11:53,790
hogy egy csomó cég
mint akár a Facebook használt,

249
00:11:53,790 --> 00:11:56,654
ez volt a legnagyobb alapértelmezett
így az emberek csak ment vele.

250
00:11:56,654 --> 00:11:59,070
Tehát nem ésszerűtlen, de majd
egy kicsit több intuíció

251
00:11:59,070 --> 00:12:02,970
és azt mondják, biztos 50, ennyi
talán egy kicsit túlzott.

252
00:12:02,970 --> 00:12:05,720
>> A nem, én szeretem enum,
és így tudjuk, ezért

253
00:12:05,720 --> 00:12:08,760
felsorolni férfi vagy nő,
vagy talán hatékonyabban,

254
00:12:08,760 --> 00:12:13,420
m vagy f vagy más szimbólumok, de
enum olyan, mint egy jó választás van.

255
00:12:13,420 --> 00:12:16,740
Ahhoz, hogy tiszta, a nemek
Lehet, hogy csak egy varchar,

256
00:12:16,740 --> 00:12:19,090
és tudnánk minden
egyetértenek a kedves emberek,

257
00:12:19,090 --> 00:12:21,010
hogy mindig fel ugyanazokat az értékeket is.

258
00:12:21,010 --> 00:12:22,720
Férfi vagy nő, vagy miegymás.

259
00:12:22,720 --> 00:12:27,800
>> De a probléma tehát az, hogy mi lehet
hibázik, például [hallható] javasolt

260
00:12:27,800 --> 00:12:29,140
korábban más összefüggésben.

261
00:12:29,140 --> 00:12:32,780
Ha hibázunk, tudnánk
helytelen értékeket az adatbázisunkban.

262
00:12:32,780 --> 00:12:36,320
Tehát mi szép a adatbázisok
mint például az Oracle és a MySQL és mások,

263
00:12:36,320 --> 00:12:39,280
az, hogy van ez az utolsó
védelmi réteget, ahol a

264
00:12:39,280 --> 00:12:43,010
A DBA, adatbázis-kezelő,
Aki tervez ebben a táblázatban, mint mi

265
00:12:43,010 --> 00:12:46,440
verbálisan, sodorhatják
helyére egy enum hogy

266
00:12:46,440 --> 00:12:51,250
véd, hogy megadásával
férfi, női, és így senki

267
00:12:51,250 --> 00:12:54,230
mást nem programozó véletlenül
helyezzen más értéket.

268
00:12:54,230 --> 00:12:55,480
Tehát ez egy jó dolog.

269
00:12:55,480 --> 00:12:56,660
Ez egy olyan funkció.

270
00:12:56,660 --> 00:13:00,760
>> Tehát egy azonosítót, feltételezve egy azonosítószám, hogy
Valószínűleg egy pozitív egész szám.

271
00:13:00,760 --> 00:13:04,380
És néha megvan
megvitatni hosszát.

272
00:13:04,380 --> 00:13:06,830
Nem tennéd jellemzően
adjon meg egy számot itt,

273
00:13:06,830 --> 00:13:11,310
akkor inkább adja
ez egy int, vagy egy nagy int,

274
00:13:11,310 --> 00:13:12,980
mivel ők általában az úgynevezett.

275
00:13:12,980 --> 00:13:18,840
De általában egy egész szám
lenne, mondjuk, 4 bájt.

276
00:13:18,840 --> 00:13:23,694
És ha ez 4 byte,
ez hány bitet?

277
00:13:23,694 --> 00:13:24,630
>> KÖZÖNSÉG: [hallható]

278
00:13:24,630 --> 00:13:26,610
>> DAVID MALAN: 32 bit.

279
00:13:26,610 --> 00:13:30,270
Tehát hány felhasználó van itt
Adatbázisunk ha mindannyian egy azonosítót

280
00:13:30,270 --> 00:13:33,320
és ezt az azonosítót egyedinek kell lennie?

281
00:13:33,320 --> 00:13:36,780
32 bit azt jelenti, hogy mintákat
egy, két, három, négy, five--

282
00:13:36,780 --> 00:13:41,000
így hány különböző mintákat nullák
és azok is van, ha van 32?

283
00:13:41,000 --> 00:13:43,235
Ez ugyanaz, mint a
kérdezi, mi kettőt a 32?

284
00:13:43,235 --> 00:13:46,472

285
00:13:46,472 --> 00:13:48,430
Ez egy nagy szám,
Nem tudom egészen kap jobb,

286
00:13:48,430 --> 00:13:50,270
de tudom, hogy nagyjából 4 milliárd.

287
00:13:50,270 --> 00:13:53,970
Tehát ez azt jelenti, hogy az adatbázisban táblázat
Négy milliárd felhasználó és ennyi.

288
00:13:53,970 --> 00:13:56,410
>> Tehát ez egy érdekes
tervezés vonzata.

289
00:13:56,410 --> 00:14:00,840
A tisztességes vállalkozások száma
úgy döntöttek, talán nem is annyira

290
00:14:00,840 --> 00:14:04,860
azok a felhasználók asztali, ugyanis a
4000000000 felhasználó egy ritka probléma.

291
00:14:04,860 --> 00:14:08,410
Ez a fajta a Facebook-stílus
probléma, nem egy tipikus vállalati probléma.

292
00:14:08,410 --> 00:14:12,670
De talán ha tranzakciónaplókat
vagy valamilyen adat, amely folyamatosan

293
00:14:12,670 --> 00:14:15,610
íródik át az adatbázist
hogy egyáltalán volna milliárdokat

294
00:14:15,610 --> 00:14:18,900
és több milliárd sorok, és
használjon egy egész számot úgy,

295
00:14:18,900 --> 00:14:22,750
mi fog történni, amint
kapsz sor száma 4000000000

296
00:14:22,750 --> 00:14:26,210
majd megpróbál beilleszteni a
4000000000. 1 úgymond?

297
00:14:26,210 --> 00:14:29,610
Én egyszerűsítve a szám egy kicsit.

298
00:14:29,610 --> 00:14:33,740
>> Akkor vágott vissza, azt jelenti,
kell kezelni valahogy.

299
00:14:33,740 --> 00:14:37,910
És mi a számítógép jellemzően nem,
belegondolunk, még a ma reggeli,

300
00:14:37,910 --> 00:14:42,430
ha van egy 4-bites érték
mint az 1, 1, 1, 1, amely,

301
00:14:42,430 --> 00:14:44,920
Csak döntetlen a reggel
együtt a délutáni, milyen

302
00:14:44,920 --> 00:14:48,369
jelent ez a szám képviseli bináris?

303
00:14:48,369 --> 00:14:49,410
OK, mi teszi könnyebbé.

304
00:14:49,410 --> 00:14:53,310
Mit jelent ez a szám
képviseli bináris?

305
00:14:53,310 --> 00:14:56,794
OK, mi teszi könnyebbé, hogy mi
jelent ez képviseli a bináris?

306
00:14:56,794 --> 00:14:57,460
KÖZÖNSÉG: Három.

307
00:14:57,460 --> 00:14:59,670
DAVID MALAN: Három, mert
van az is, column--

308
00:14:59,670 --> 00:15:00,450
[NEVETÉS]

309
00:15:00,450 --> 00:15:01,350
Tyűha!

310
00:15:01,350 --> 00:15:03,980
Mi volt az is, oszlop
és a kettes oszlopban.

311
00:15:03,980 --> 00:15:07,250
Tehát tegyük fel, hogy valóban, a mi
[? termőföld?] nem volt 32 bit,

312
00:15:07,250 --> 00:15:13,440
de két bit, tudjuk
számolni származó felhasználói szám 0, 1, 2, 3,

313
00:15:13,440 --> 00:15:18,040
és akkor nem vagyunk olyan
Vissza a felhasználói 00 újra.

314
00:15:18,040 --> 00:15:19,739
Tehát ez az, ami általában történik.

315
00:15:19,739 --> 00:15:22,780
Ha valaha is hallotta a expression--
Valószínűleg nem, de ha Rézfúvós lévén

316
00:15:22,780 --> 00:15:26,500
integer túlcsordulás, ahol
tartsa essek az összes bit

317
00:15:26,500 --> 00:15:29,640
hogy a lehető legnagyobb értéket,
és akkor te ki bit,

318
00:15:29,640 --> 00:15:30,850
mi lenne általában történni?

319
00:15:30,850 --> 00:15:32,280
Miért mondom 00?

320
00:15:32,280 --> 00:15:33,220
Nos, ez a három.

321
00:15:33,220 --> 00:15:34,230
Hogyan képviseli 4?

322
00:15:34,230 --> 00:15:36,890

323
00:15:36,890 --> 00:15:38,915
Hogyan képviseli a
A 4-es számú bináris?

324
00:15:38,915 --> 00:15:39,790
KÖZÖNSÉG: [hallható]

325
00:15:39,790 --> 00:15:41,780
DAVID MALAN: One-- igen,
Nem mondjuk 100 önmagában,

326
00:15:41,780 --> 00:15:44,190
mert a rossz
jelentésű, de 1-0-0.

327
00:15:44,190 --> 00:15:48,920
Tehát ez a szám 1-0-0 valóban
helyes, de ha csak két bit,

328
00:15:48,920 --> 00:15:50,820
mit igazán történt?

329
00:15:50,820 --> 00:15:53,219
Már gurult 00.

330
00:15:53,219 --> 00:15:54,760
És valóban, ez az, ami történni fog.

331
00:15:54,760 --> 00:15:56,884
Tulajdonképpen, akkor szerintem
erről több ismerős.

332
00:15:56,884 --> 00:15:59,350
Ha emlékszik, mi,
16 évvel ezelőtt, a világ

333
00:15:59,350 --> 00:16:03,380
véget ért volna, ha
Y2K probléma történt.

334
00:16:03,380 --> 00:16:04,330
Miért volt ez?

335
00:16:04,330 --> 00:16:08,170
Nos a legtöbb számítógépek
ésszerű döntéseket,

336
00:16:08,170 --> 00:16:15,320
voltak számok tárolása, mint a
1975-ben vagy 1999-es évben

337
00:16:15,320 --> 00:16:19,010
mindössze két számjeggyel
a számítógép memóriájában.

338
00:16:19,010 --> 00:16:21,950
Így persze, hogy mi történik
ha kap, hogy 2000-ben,

339
00:16:21,950 --> 00:16:25,790
megy ez, vagy inkább, igen.

340
00:16:25,790 --> 00:16:30,120
Szóval megy a 2000, de ha
te csak két számjeggyel úgy néz ki,

341
00:16:30,120 --> 00:16:32,660
mint az év 00 és
így már átfordult.

342
00:16:32,660 --> 00:16:36,820
És ez az, amiért sok rendszer
megújításra szorultak idején.

343
00:16:36,820 --> 00:16:42,500
>> Tehát, hogy azt mondta, a vállalatok, mint
Facebook fut fel ez ellen.

344
00:16:42,500 --> 00:16:46,147
Így az egyetlen módja, hogy kezelni a
helyzet, őszintén, hogy előre meg.

345
00:16:46,147 --> 00:16:47,980
Vagy a legtisztább módja
kezelni ezt a helyzetet

346
00:16:47,980 --> 00:16:50,330
hogy előre, hogy így nem
meg kell változtatni később.

347
00:16:50,330 --> 00:16:51,970
Tehát ahelyett, hogy 8 bájt, tudod mit?

348
00:16:51,970 --> 00:16:54,261
Megyek, hogy előrelátó
itt, annak ellenére, hogy

349
00:16:54,261 --> 00:16:56,760
egy kicsit optimista, hogy
megyünk, hogy 4000000000

350
00:16:56,760 --> 00:16:58,850
1 felhasználók honlapunkon.

351
00:16:58,850 --> 00:17:01,790
De nézzük csak használni 8 byte, vagy
64 bit, amelyet általában úgy

352
00:17:01,790 --> 00:17:05,640
úgynevezett nagy egész, nagyon technikai jellegű.

353
00:17:05,640 --> 00:17:10,280
És ez csak azt jelenti, lehet
még több számjegyet a számot.

354
00:17:10,280 --> 00:17:12,599
De ez egy fontos
tervezési döntés,

355
00:17:12,599 --> 00:17:16,400
mert ha úgy dönt, hogy számos
túl kevés bit kifejező

356
00:17:16,400 --> 00:17:19,089
akkor valóban létre
egy hiba a szoftver.

357
00:17:19,089 --> 00:17:21,750
>> Rendben, szóval lezárja
e-mail és postai címét.

358
00:17:21,750 --> 00:17:26,369
Tehát az e-mail, meddig kell
egy e-mail címet is?

359
00:17:26,369 --> 00:17:26,869
50.

360
00:17:26,869 --> 00:17:29,220
Tényleg nincs ötletem, de ez
Valószínűleg valami ilyesmi,

361
00:17:29,220 --> 00:17:32,261
mert különben senki sem fog
levelet, ha nem lesz túl hosszú, így 50,

362
00:17:32,261 --> 00:17:33,360
menjünk vele most.

363
00:17:33,360 --> 00:17:35,770
Postacím, meddig kell, hogy legyen?

364
00:17:35,770 --> 00:17:38,325

365
00:17:38,325 --> 00:17:39,200
KÖZÖNSÉG: [hallható]

366
00:17:39,200 --> 00:17:41,900

367
00:17:41,900 --> 00:17:43,890
>> DAVID MALAN: Nem
Csak egy irányítószámot, mégis.

368
00:17:43,890 --> 00:17:45,720
Postacím, hallottam.

369
00:17:45,720 --> 00:17:50,720
Tehát ez olyan, mint 1 Brattle Square,
vessző, Cambridge Mass., vessző, 02138.

370
00:17:50,720 --> 00:17:53,860
És valóban, hadd húzza
egy kis munkalap itt.

371
00:17:53,860 --> 00:17:56,510
Ez olyan, mintha
egy elszalasztott lehetőség.

372
00:17:56,510 --> 00:18:01,480
Ha van 1 Brattle Square,
vessző, Cambridge, MA 02138,

373
00:18:01,480 --> 00:18:04,510
Úgy érzem, jobban csinálni
mint a postai címét.

374
00:18:04,510 --> 00:18:07,100
Miért nem robbanhat ez egy kicsit?

375
00:18:07,100 --> 00:18:08,030
Mit kapok a?

376
00:18:08,030 --> 00:18:10,970
Mit kellene ehelyett
a mi sorok itt, talán?

377
00:18:10,970 --> 00:18:12,260
>> KÖZÖNSÉG: [hallható]

378
00:18:12,260 --> 00:18:17,579
>> DAVID MALAN: Igen, úgyhogy
hívják street_number,

379
00:18:17,579 --> 00:18:20,620
és aláhúzás csak egy közös
módja annak, amit úgy néz ki, mint egy hely,

380
00:18:20,620 --> 00:18:22,360
de nem, tényleg.

381
00:18:22,360 --> 00:18:26,240
Street, majd city-- sajnálom?

382
00:18:26,240 --> 00:18:28,440
>> KÖZÖNSÉG: [hallható]

383
00:18:28,440 --> 00:18:29,690
DAVID MALAN: tudtuk csinálni.

384
00:18:29,690 --> 00:18:30,702
Vonalon, a kettesen.

385
00:18:30,702 --> 00:18:32,410
Miért nem fogja
egyszerű most,

386
00:18:32,410 --> 00:18:34,840
de ez teljesen
elfogadható döntés.

387
00:18:34,840 --> 00:18:38,180
És akkor az állami, majd menjünk
egy kicsit USA-központú most

388
00:18:38,180 --> 00:18:42,040
és csak a postai irányítószám, csak azért, mert
ez lesz vezetni egy érdekes hibát

389
00:18:42,040 --> 00:18:43,090
vagy probléma van.

390
00:18:43,090 --> 00:18:44,655
Tehát tegyük fel, hogy ez most a címet.

391
00:18:44,655 --> 00:18:47,280
Ez egy kicsit bosszantó, hogy a
mi ezeket a több területen,

392
00:18:47,280 --> 00:18:49,200
de most már tudjuk címkézni
dolgok egy kicsit jobban.

393
00:18:49,200 --> 00:18:53,210
>> Tehát most házszámot valószínűleg
nem lehet char, kell ez?

394
00:18:53,210 --> 00:18:54,835
Mi legyen?

395
00:18:54,835 --> 00:18:55,710
KÖZÖNSÉG: [hallható]

396
00:18:55,710 --> 00:18:57,835
DAVID MALAN: Lehet, számos
mint egy egész újra?

397
00:18:57,835 --> 00:19:00,170
Egy nagy egész számok?

398
00:19:00,170 --> 00:19:02,170
Valószínűleg nem élnek
A 4 milliárd Main Street

399
00:19:02,170 --> 00:19:03,490
vagy bármi őrült, mint ezt.

400
00:19:03,490 --> 00:19:06,850
Tehát egész valószínűleg
rendben van, de még senki

401
00:19:06,850 --> 00:19:13,880
valaha élt egy címet, mint például
1A Brattle Square, vagy 1 és 1/2?

402
00:19:13,880 --> 00:19:17,030
Ezek a dolgok léteznek, sajnos,
akkor is, ha nem ott élt,

403
00:19:17,030 --> 00:19:21,240
vannak anomáliák
mint lakás 1A, 1B, 1C.

404
00:19:21,240 --> 00:19:24,260
Szóval tudod mit, akkor valószínűleg
ne menjenek egész,

405
00:19:24,260 --> 00:19:27,440
különben megyünk
hogy elveszítené az értékesítés.

406
00:19:27,440 --> 00:19:29,920
>> Char területen, talán?

407
00:19:29,920 --> 00:19:30,870
Nem tudom, meddig.

408
00:19:30,870 --> 00:19:33,370
Ez valószínűleg nem lesz
hogy a hosszú, azaz 10, vagy valami.

409
00:19:33,370 --> 00:19:34,950
Senki sem fog írni
hosszabb szám, talán.

410
00:19:34,950 --> 00:19:37,070
De ismétlem, mi kéne
hogy több gondolat, hogy az.

411
00:19:37,070 --> 00:19:39,900
Talán a google, hogy némi kutatást,
de megyünk mi belek most.

412
00:19:39,900 --> 00:19:44,565
Utcák, char, 50, nem tudom.

413
00:19:44,565 --> 00:19:46,940
Egy bizonyos ponton, senki sem fog
írni, hogy a borítékon,

414
00:19:46,940 --> 00:19:49,350
is, így ott valószínűleg
Néhány felső határt is.

415
00:19:49,350 --> 00:19:54,200
City, ugyanaz, persze, így char 50.

416
00:19:54,200 --> 00:19:59,120
>> Állami, lehet USA-központú most.

417
00:19:59,120 --> 00:20:01,850
Tehát ez lehet egy listát, így a fajta
Az ítélet hívás állapotát.

418
00:20:01,850 --> 00:20:04,000
Ez lehet, mint két karakter.

419
00:20:04,000 --> 00:20:06,140
Tehát tulajdonképpen, talán, azt mondogatta char.

420
00:20:06,140 --> 00:20:09,420
Azt valószínűleg azt jelenti, varchar,
Csak néhány a hatékonyság,

421
00:20:09,420 --> 00:20:12,240
de majd jön vissza
E határozatot a pillanatban.

422
00:20:12,240 --> 00:20:16,150
Lehet, hogy a char hosszúságú 2 állapot.

423
00:20:16,150 --> 00:20:20,670
Ha az USA-ban vannak, mint az MA,
Massachusetts, NY, New York, NJ, New

424
00:20:20,670 --> 00:20:22,100
Jersey, és így tovább.

425
00:20:22,100 --> 00:20:23,630
Így lehetne rögzíteni, hogy.

426
00:20:23,630 --> 00:20:25,900
DC Washington DC.

427
00:20:25,900 --> 00:20:29,915
>> De azt hiszem, Olivier, akkor
javasolt egy másik megközelítés.

428
00:20:29,915 --> 00:20:30,790
KÖZÖNSÉG: [hallható]

429
00:20:30,790 --> 00:20:33,670
DAVID MALAN: Igen, tehát ez egy
kicsit bosszantó, hogy írja be,

430
00:20:33,670 --> 00:20:37,890
de egy enum elképzelhető, hogy több értelme van,
mert így, legalábbis az USA-ban,

431
00:20:37,890 --> 00:20:41,320
tudna sorolni, ha unalmasan, de
te csak egyszer szerepel az adatbázisban

432
00:20:41,320 --> 00:20:47,480
és soha többé nem kell gondolni
azt, az összes 50 kétjegyű kód.

433
00:20:47,480 --> 00:20:48,660
Szóval, mint enum.

434
00:20:48,660 --> 00:20:51,720
Maradjunk, hogy ott, mert
ez a fajta kikényszeríti szigor.

435
00:20:51,720 --> 00:20:53,620
És akkor a zip kódot?

436
00:20:53,620 --> 00:20:55,306
Azt hiszem, Andrew-nak a gondolat, hogy

437
00:20:55,306 --> 00:20:56,180
KÖZÖNSÉG: [hallható]

438
00:20:56,180 --> 00:20:57,240
DAVID MALAN: Igen, öt vagy kilenc.

439
00:20:57,240 --> 00:20:58,323
Nézzük csak, hogy ez egyszerű.

440
00:20:58,323 --> 00:20:59,380
Csak nem öt most.

441
00:20:59,380 --> 00:21:03,070
De talán tudnék
nem egy egész, nem igaz?

442
00:21:03,070 --> 00:21:08,750
Tudnám, de tudod, mit tettem
ezt a hibát egyszer, bizonyos értelemben.

443
00:21:08,750 --> 00:21:13,110
Évekkel ezelőtt azt vándorlását
Microsoft Outlook a Gmail,

444
00:21:13,110 --> 00:21:18,640
és az Outlook van egy módja exportáló
az összes kapcsolat, mint egy Excel fájl,

445
00:21:18,640 --> 00:21:21,280
CSV fájlba, vesszővel elválasztott értékek fájlt.

446
00:21:21,280 --> 00:21:23,950
És elkövettem azt a hibát, azt
úgy gondolja, a dupla kattintással,

447
00:21:23,950 --> 00:21:27,380
egyszer Letöltöttem az export, a
győződjön meg róla, úgy nézett ki, mint vártam.

448
00:21:27,380 --> 00:21:31,320
Azt kell megütni mentése vagy hagyja
auto-save rúgás, vagy valami.

449
00:21:31,320 --> 00:21:35,100
Mert amikor majd importált
be Gmail, minden működött.

450
00:21:35,100 --> 00:21:39,910
De évek óta, a mai napig, és
Ezt tettem öt, 10 évvel ezelőtt,

451
00:21:39,910 --> 00:21:44,380
Én még mindig találni barátok, akik
címeket, hogy néz ki, mint ez.

452
00:21:44,380 --> 00:21:45,700
Miért?

453
00:21:45,700 --> 00:21:47,900
>> KÖZÖNSÉG: [hallható]

454
00:21:47,900 --> 00:21:50,650
>> DAVID MALAN: Eltartott
A 0, nos, inkább azt

455
00:21:50,650 --> 00:21:53,810
volt az egész irányítószámot
egy számot, és ezért ez

456
00:21:53,810 --> 00:21:56,590
vezető 0, ami azt jelenti
nincs értelme.

457
00:21:56,590 --> 00:21:59,470
És így 2138 Úgy tűnik, hogy az én irányítószámot.

458
00:21:59,470 --> 00:22:07,100
És ez, őszintén szólva, egy bosszantó Excel
funkcióval, melyen azt hiszem alapértelmezett,

459
00:22:07,100 --> 00:22:10,980
akkor is, ha ez azt jelentette, hogy csak
szöveg, Microsoft Excel

460
00:22:10,980 --> 00:22:13,780
úgy határoz, hadd hasznos lehet,
és jaj, látom, csak a számokat.

461
00:22:13,780 --> 00:22:15,290
Nézzük kezelni ezeket a számokat.

462
00:22:15,290 --> 00:22:16,790
És ez levágja a nullát.

463
00:22:16,790 --> 00:22:19,165
>> Istenre esküszöm, minden pár
A hónapok találok egy címet,

464
00:22:19,165 --> 00:22:22,300
és ki egyfajta OCD, megyek vissza
és adjuk hozzá a 0, bár én soha

465
00:22:22,300 --> 00:22:23,700
küldeni az emberek leveleket, vagy bármi.

466
00:22:23,700 --> 00:22:25,510
De én még mindig találni maradványait ezt.

467
00:22:25,510 --> 00:22:28,820
Tehát ez azt, ez egy jó ötlet?

468
00:22:28,820 --> 00:22:31,610
OK, nem, mert bárki
Massachusetts, az ezen a területen,

469
00:22:31,610 --> 00:22:33,270
megy, hogy egy o vezette őket.

470
00:22:33,270 --> 00:22:38,070
Akkor menjünk együtt, mint
char, talán öt.

471
00:22:38,070 --> 00:22:41,450
>> És itt, rájövünk
jönne egy enum és mi

472
00:22:41,450 --> 00:22:44,600
sorolhatnám 10000
lehetséges irányítószámok,

473
00:22:44,600 --> 00:22:48,530
de úgy érzi, ez talán
keresztező vonal, mint a hasznot.

474
00:22:48,530 --> 00:22:51,350
Ha a bemenő
sok adat a saját adatbázis

475
00:22:51,350 --> 00:22:52,940
hogy megvédje valami ellen.

476
00:22:52,940 --> 00:22:57,400
Tehát char rájött beírhatja
H-E-L-L-O az irányítószámot,

477
00:22:57,400 --> 00:22:59,180
ami nyilvánvalóan nem numerikus.

478
00:22:59,180 --> 00:23:01,680
Tehát nincs mód, a
tipikus adatbázist,

479
00:23:01,680 --> 00:23:05,561
megadásához csak a numerikus és
csak öt karakter hosszú,

480
00:23:05,561 --> 00:23:07,310
így megyünk, hogy
kell csinálni, hogy kódot.

481
00:23:07,310 --> 00:23:11,100
Fogunk csinálni, hogy a PHP vagy
Java vagy bármilyen nyelvet vagyunk

482
00:23:11,100 --> 00:23:14,230
használja a szerver érvényesíteni
ez a fajta kényszer.

483
00:23:14,230 --> 00:23:14,860
>> Húúú!

484
00:23:14,860 --> 00:23:18,322
Rendben, tehát bármilyen kérdése csak még?

485
00:23:18,322 --> 00:23:19,780
Csináljunk egy tervezési döntés.

486
00:23:19,780 --> 00:23:22,500
Kiderült, hogy
is kap, hogy válasszon,

487
00:23:22,500 --> 00:23:26,600
tervezésekor az SQL adatbázis, vagy
tipikus relációs database-- ahol

488
00:23:26,600 --> 00:23:28,790
megint csak a relációs
azt jelenti, sorok és oszlopok,

489
00:23:28,790 --> 00:23:35,500
ez hogyan szervezi data--
és rájönnek, hogy ez mit jelent,

490
00:23:35,500 --> 00:23:37,740
Már megtévesztő
hogy én ezt drawing--

491
00:23:37,740 --> 00:23:40,190
az, ami az úgynevezett séma
egy adatbázis tábla.

492
00:23:40,190 --> 00:23:42,810
Ez olyan, mint a
előírások a table--

493
00:23:42,810 --> 00:23:48,040
de ha eljön az ideje
ténylegesen adatok tárolására,

494
00:23:48,040 --> 00:23:52,081
és mi ezt csak a példa itt.

495
00:23:52,081 --> 00:23:55,080
Megyek nyitni Excel, mert
Excel adj sorok és oszlopok.

496
00:23:55,080 --> 00:23:58,050
És pontosan ez az, amit az Oracle és a
MySQL és más eszközöket ad nekem.

497
00:23:58,050 --> 00:24:02,270
Tehát én csak fog használni
megvitatásra kedvéért.

498
00:24:02,270 --> 00:24:05,250
Hadd menjen előre, és nyit egy
reprezentatív dokumentum itt,

499
00:24:05,250 --> 00:24:06,310
nagyítás egy kicsit.

500
00:24:06,310 --> 00:24:15,200
Így például, a fejlécek már
utónév, név, nem, azonosító,

501
00:24:15,200 --> 00:24:20,980
e-mail, házszámot, utca, Hoppá.

502
00:24:20,980 --> 00:24:25,710
Utca, város, állam, csak
körülbelül illeszkedik a képernyőn.

503
00:24:25,710 --> 00:24:29,080
>> Tehát ez mit jelent az, hogy ha egy
felhasználó először regisztrál a saját honlapján,

504
00:24:29,080 --> 00:24:32,880
ez lesz valami hasonló
David, Malan, m, mondjuk 1,

505
00:24:32,880 --> 00:24:42,910
malan@harvard.edu, utca szám lesz
lenni, mint 1 Brattle Square, Cambridge, MA,

506
00:24:42,910 --> 00:24:44,780
02138, majd így tovább.

507
00:24:44,780 --> 00:24:48,290
Tehát amikor azt mondjuk, hogy egy relációs adatbázis
vagy SQL adatbázis sorok és oszlopok,

508
00:24:48,290 --> 00:24:49,350
Úgy értem ezt.

509
00:24:49,350 --> 00:24:51,900
Hogy a tényleges adatok tárolása
a sorok és oszlopok.

510
00:24:51,900 --> 00:24:53,950
Ez csak egy véletlen egybeesés,
hogy beszéltünk,

511
00:24:53,950 --> 00:24:56,033
és én csak kidolgozás
ki sorok és oszlopok.

512
00:24:56,033 --> 00:24:58,320
Ez csak a séma,
Az átfogó meghatározása.

513
00:24:58,320 --> 00:25:01,640
>> Így ezeken a területeken van,
vagy azzal egyenértékű, ott,

514
00:25:01,640 --> 00:25:06,270
amelyek a mezőket, úgy gondolja,
Én valószínűleg keresni az, ha én vagyok a felhasználó

515
00:25:06,270 --> 00:25:09,200
vagy ha én vagyok az adatbázis adminisztrátor?

516
00:25:09,200 --> 00:25:12,426
Mint, mely területek vagyok
ténylegesen fog keresni az?

517
00:25:12,426 --> 00:25:13,830
>> KÖZÖNSÉG: [hallható]

518
00:25:13,830 --> 00:25:17,690
>> DAVID MALAN: A név, igen, így
Szeretem azt a tényt hogy-- igen,

519
00:25:17,690 --> 00:25:19,750
e-mail lehet elég gyakori.

520
00:25:19,750 --> 00:25:21,440
Sajnáljuk, mondta a nevét.

521
00:25:21,440 --> 00:25:24,030
Tehát maybe-- és újra, nem vagyunk
fajta beszéd az elvont.

522
00:25:24,030 --> 00:25:25,988
Nem tudom, hogy miért lenne
keresgélhetnél nevet,

523
00:25:25,988 --> 00:25:29,340
de úgy érzi, indokolt, ha
Ön keres egy felhasználó.

524
00:25:29,340 --> 00:25:31,170
Talán azt állítja, biztos, ID.

525
00:25:31,170 --> 00:25:34,100

526
00:25:34,100 --> 00:25:36,160
>> És ez egy csúszós
lejtő, mert megtehettem

527
00:25:36,160 --> 00:25:38,890
feltalál egy olyan forgatókönyv, ahol
talán a főnököm megkért,

528
00:25:38,890 --> 00:25:40,417
hány ember van még a honlapunkon?

529
00:25:40,417 --> 00:25:42,000
Hány nő van még a honlapunkon?

530
00:25:42,000 --> 00:25:45,210
És így ezen a ponton, akkor érdemes
keresni az nemi területen is,

531
00:25:45,210 --> 00:25:45,940
és semmi más.

532
00:25:45,940 --> 00:25:47,350
Tehát van egy trade-off itt.

533
00:25:47,350 --> 00:25:49,180
Ismét nincs
helyes válasz, de

534
00:25:49,180 --> 00:25:53,760
egy jellemzője a legtöbb SQL adatbázisok
néven indexelés, amellyel

535
00:25:53,760 --> 00:25:56,100
te, a tervező, a
adatbázis adminisztrátor,

536
00:25:56,100 --> 00:26:01,730
dönthetik el, hogy előre, hogy melyik
mezők az adatbázist kell optimalizálni

537
00:26:01,730 --> 00:26:02,980
a keresésnél.

538
00:26:02,980 --> 00:26:07,620
>> Akkor nagyon naivan azt mondják, optimalizálása
Ennek optimalizálni, hogy optimalizálni ezt,

539
00:26:07,620 --> 00:26:10,300
optimalizálni, hogy, és ez,
és az adatbázis

540
00:26:10,300 --> 00:26:14,882
meg néhány varázslatos dolog alatt
motorháztető, és nem valami olyan módon

541
00:26:14,882 --> 00:26:17,090
hogy a következő alkalommal, amikor keresni
bármelyik ezeken a területeken,

542
00:26:17,090 --> 00:26:18,400
ez lesz, sőt, gyorsabb.

543
00:26:18,400 --> 00:26:19,110
Ez lehetséges.

544
00:26:19,110 --> 00:26:20,530
Ez nem törli magát.

545
00:26:20,530 --> 00:26:22,500
De kell lennie egy árat fizetett.

546
00:26:22,500 --> 00:26:27,220
>> Ha naivan, vagy túl lelkesen
mondjuk index valamennyi területen,

547
00:26:27,220 --> 00:26:29,810
hogy úgy mondjam, hogy azok minden
hatékonyan kereshető,

548
00:26:29,810 --> 00:26:31,625
milyen áron Ön valószínűleg fizet?

549
00:26:31,625 --> 00:26:32,500
KÖZÖNSÉG: [hallható]

550
00:26:32,500 --> 00:26:33,090
DAVID MALAN: Teljesítmény.

551
00:26:33,090 --> 00:26:33,798
Hogy érted?

552
00:26:33,798 --> 00:26:37,380
Nos teljesítmény, legalábbis a
összefüggésben én beszélünk, jobb most.

553
00:26:37,380 --> 00:26:38,830
Ez a meghatározás az indexelés.

554
00:26:38,830 --> 00:26:41,180
Ez teszi keresések gyorsabb.

555
00:26:41,180 --> 00:26:43,366
Tehát az idő csökken, hogy úgy mondjam.

556
00:26:43,366 --> 00:26:44,240
KÖZÖNSÉG: [hallható]

557
00:26:44,240 --> 00:26:45,031
DAVID MALAN: Space.

558
00:26:45,031 --> 00:26:46,520
Tehát ismét, ezek a közös kereskedelmi.

559
00:26:46,520 --> 00:26:50,820
Azt is felgyorsítja a kereséseket, de ez
fog kerülni több bájt területet.

560
00:26:50,820 --> 00:26:51,610
Miért?

561
00:26:51,610 --> 00:26:55,230
Nos, alapértelmezés szerint, ha már nincs meg
ezek a vörös csillag, sem a mutatók,

562
00:26:55,230 --> 00:26:58,797
ahogy mondom, hogyan keressen
Egy név az adatbázisban?

563
00:26:58,797 --> 00:27:00,630
Szóval hívják fel a
figyelmet erre példát.

564
00:27:00,630 --> 00:27:06,300
Ha van David és Scully és Kareem
és ARWA és mások ezeket a sorokat,

565
00:27:06,300 --> 00:27:06,910
például.

566
00:27:06,910 --> 00:27:08,390
>> Tehát lássuk, hogy pontosan.

567
00:27:08,390 --> 00:27:13,990
Scully van itt, majd
van Kareem és ARWA,

568
00:27:13,990 --> 00:27:18,390
és mindenki másnak, ha nem
az index meghatározása, hogy úgy mondjam,

569
00:27:18,390 --> 00:27:20,160
A legjobb, amit tehetünk, lineáris keresés.

570
00:27:20,160 --> 00:27:23,470
Ha keres ARWA, nem vagyunk
lesz képes ugrani vele

571
00:27:23,470 --> 00:27:24,140
gyorsan.

572
00:27:24,140 --> 00:27:26,556
Fogunk kezdeni és felső
menj végig az alsó,

573
00:27:26,556 --> 00:27:28,600
ellentétben nem az eredeti
Mike Smith példa.

574
00:27:28,600 --> 00:27:33,470
>> Ha azonban azt mondom, hé, adatbázis,
index az első név mezőben

575
00:27:33,470 --> 00:27:37,000
akkor ez meg fog tenni valamit
tenyésztő és támogatni valamit

576
00:27:37,000 --> 00:27:38,130
mint bináris keresés.

577
00:27:38,130 --> 00:27:39,820
Ez valószínűleg nem a bináris keresés önmagában.

578
00:27:39,820 --> 00:27:42,810
Adatbázisok hajlanak arra, hogy egy másik
adatstruktúra úgynevezett B-fák,

579
00:27:42,810 --> 00:27:46,540
Nem tévesztendő össze a bináris fák,
hogy csak gyorsabbá teszik a keresést

580
00:27:46,540 --> 00:27:48,500
valami logaritmikus jellegű.

581
00:27:48,500 --> 00:27:53,510
De az ár, amit fizetni felépíteni, hogy
jellemzője, hogy adatstruktúra a memóriában,

582
00:27:53,510 --> 00:27:54,570
több bájt.

583
00:27:54,570 --> 00:27:57,170
Tehát ez eltart egy megabájt,
néhány gigabyte, ki tudja?

584
00:27:57,170 --> 00:27:58,410
Ez attól függ, hogy az adatokat.

585
00:27:58,410 --> 00:28:02,640
>> Tehát egy bizonyos ponton, akkor el kell döntenie,
ez valószínűleg nem egy gyakori eset.

586
00:28:02,640 --> 00:28:06,000
Tehát mik a tényleges közös
esetekben, ha nagyon kellett választani,

587
00:28:06,000 --> 00:28:10,080
mi a kedvenc területeken lehet?

588
00:28:10,080 --> 00:28:10,580
Email.

589
00:28:10,580 --> 00:28:14,400
És szeretem a levelet, mert az e-mail,
elméletben, egyedinek kell lennie.

590
00:28:14,400 --> 00:28:17,650
És így általában, ha tudod,
előre, hogy az egyik területen

591
00:28:17,650 --> 00:28:20,277
vagy az lesz egyedi, hogy
inkább egy jó mező

592
00:28:20,277 --> 00:28:22,860
keressen tovább, mert így,
ha keres valamit,

593
00:28:22,860 --> 00:28:26,194
mész, hogy újra egy vagy
nulla válaszokat és akkor kész.

594
00:28:26,194 --> 00:28:28,110
Nem kell tartani
keres még mások.

595
00:28:28,110 --> 00:28:31,992
>> És így ebben az esetben is, e-mail,
mindaddig, amíg meg nem lehet regisztrálni kétszer

596
00:28:31,992 --> 00:28:33,450
ugyanazzal az e-mail, az jó.

597
00:28:33,450 --> 00:28:36,710
ID definíció szerint a
számítástechnika világában,

598
00:28:36,710 --> 00:28:39,610
ha beszélünk
ID, hogy már jobb lesz egyedi.

599
00:28:39,610 --> 00:28:42,970
Ez a fajta a konnotáció
Az ID vagy azonosító.

600
00:28:42,970 --> 00:28:46,440
És a többi ilyen lehet,
nevezzük őket szép gazdagok,

601
00:28:46,440 --> 00:28:47,860
de nem igazán szükséges.

602
00:28:47,860 --> 00:28:49,976
>> És így egy adatbázisban,
megadott indexek,

603
00:28:49,976 --> 00:28:51,350
de akkor még pontosabb.

604
00:28:51,350 --> 00:28:56,060
Azt lehet mondani, hé, adatbázis, győződjön meg róla,
hogy minden ID ebben a táblázatban egyedi.

605
00:28:56,060 --> 00:28:59,330
Ne is hagyja, hogy egy programozó
véletlenül hozott egy példányban e-mail

606
00:28:59,330 --> 00:29:00,740
vagy ismétlődő azonosító számát.

607
00:29:00,740 --> 00:29:03,140
Annyira, mint enum
megvédeni bennünket hasonlóan, akkor

608
00:29:03,140 --> 00:29:04,881
lehet ezeket az alacsonyabb szintű védelmet.

609
00:29:04,881 --> 00:29:07,130
És így adatbázis tervezés, a
Bizonyos értelemben ez a fajta szórakozás,

610
00:29:07,130 --> 00:29:08,380
mert te is védekezett.

611
00:29:08,380 --> 00:29:11,460
Azt a fajta azt feltételezik, hogy a munka
A szörnyű, szörnyű programozók

612
00:29:11,460 --> 00:29:15,550
és azt akarjuk, hogy a lehető legtöbb védelmet
csak lehet, hogy az adatok védelmére,

613
00:29:15,550 --> 00:29:18,940
de egyszerre szeretné
hogy segítsen nekik jobban teljesítenek

614
00:29:18,940 --> 00:29:21,386
választásával, amely
mezők optimalizálni.

615
00:29:21,386 --> 00:29:24,260
De nem lehet feltétlenül csinálni
vákuum, mint azt a fajta itt.

616
00:29:24,260 --> 00:29:26,480
Meg kell tudni, hogy mik
E közös ügyek lenni.

617
00:29:26,480 --> 00:29:29,397
Ha a fejlesztők
végrehajtási egy címjegyzék,

618
00:29:29,397 --> 00:29:32,230
Ön is nagyon jól akarjuk, hogy képes
keresni szinte minden területén,

619
00:29:32,230 --> 00:29:33,830
Csak a természet a kérelmet.

620
00:29:33,830 --> 00:29:37,910
Így talán töltesz
hogy további helyet.

621
00:29:37,910 --> 00:29:39,090
>> Jobb, bármilyen kérdése?

622
00:29:39,090 --> 00:29:41,820

623
00:29:41,820 --> 00:29:42,486
Igen.

624
00:29:42,486 --> 00:29:43,470
>> KÖZÖNSÉG: [hallható]

625
00:29:43,470 --> 00:29:44,404
>> DAVID MALAN: Nem

626
00:29:44,404 --> 00:29:45,279
>> KÖZÖNSÉG: [hallható]

627
00:29:45,279 --> 00:29:47,840

628
00:29:47,840 --> 00:29:48,826
>> DAVID MALAN: OK.

629
00:29:48,826 --> 00:29:49,701
>> KÖZÖNSÉG: [hallható]

630
00:29:49,701 --> 00:29:52,420

631
00:29:52,420 --> 00:29:54,850
>> DAVID MALAN: Ó, így
Beszélünk módon

632
00:29:54,850 --> 00:29:57,940
most, hogy teljesen nyelv-független.

633
00:29:57,940 --> 00:30:02,370
Így beszélünk most körülbelül
relációs adatbázisok általában

634
00:30:02,370 --> 00:30:04,760
vagy SQL adatbázisok általában.

635
00:30:04,760 --> 00:30:06,870
>> KÖZÖNSÉG: [hallható]

636
00:30:06,870 --> 00:30:10,030
>> DAVID MALAN: egy jobb szót használni
van, lehet használni bármilyen nyelven.

637
00:30:10,030 --> 00:30:15,280
Így tudok írni JavaScript kódot, C
kód, C ++ kódot, a Java kód, Ruby kódot,

638
00:30:15,280 --> 00:30:19,010
amelyek mind beszélni, hogy egy
adatbázis és végre lekérdezések.

639
00:30:19,010 --> 00:30:22,310
Tény, hogy ez nem egy rossz
segue egy példa lekérdezést.

640
00:30:22,310 --> 00:30:25,720
És ismét, nem fogunk belemenni
Java, C ++, vagy sem, hogy többé,

641
00:30:25,720 --> 00:30:29,420
de az SQL, a nyelvet, amit tartani
hivatkozva, Structured Query Language,

642
00:30:29,420 --> 00:30:32,790
ez önmagában egy programozási nyelv,
de ez azt jelentette, hogy kell használni, nem

643
00:30:32,790 --> 00:30:37,330
meglepetés, strukturált lekérdezési lekérdezések.

644
00:30:37,330 --> 00:30:38,660
>> Úgy értem, ez.

645
00:30:38,660 --> 00:30:41,190
Az út kiválasztása adatok
egy MySQL adatbázis

646
00:30:41,190 --> 00:30:49,330
A szó szerint írja be a programban
valami hasonló válassza csillag a felhasználóktól.

647
00:30:49,330 --> 00:30:52,200
Azt feltételezem, hogy ez a táblázat,
ezentúl nevezzük felhasználók.

648
00:30:52,200 --> 00:30:54,860
Nevezhetném, amit akarunk,
de ez a fajta van értelme.

649
00:30:54,860 --> 00:30:57,240
És így válasszuk egy nagyon
közös ige, ha

650
00:30:57,240 --> 00:30:59,290
akarat, az SQL, hogy a szó szoros értelmében nem ezt.

651
00:30:59,290 --> 00:31:02,730
Mit gondol csillag
azt jelenti, ebben az összefüggésben?

652
00:31:02,730 --> 00:31:04,410
>> KÖZÖNSÉG: [hallható]

653
00:31:04,410 --> 00:31:05,380
>> DAVID MALAN: Sajnálom?

654
00:31:05,380 --> 00:31:06,300
>> KÖZÖNSÉG: [hallható]

655
00:31:06,300 --> 00:31:09,580
>> DAVID MALAN: Nem szükséges, hogy
befogadóbb, mint valójában.

656
00:31:09,580 --> 00:31:11,700
Ez a helyettesítő karakter.

657
00:31:11,700 --> 00:31:14,740
Csillag szinte mindig jelent valamit,
így ez azt jelenti, ebben az esetben,

658
00:31:14,740 --> 00:31:16,510
válassza mindent az adatbázisból.

659
00:31:16,510 --> 00:31:20,730
Tehát amikor ezt mondom, úgy értem
adj vissza minden oszlop

660
00:31:20,730 --> 00:31:22,440
az én asztal nevű felhasználó.

661
00:31:22,440 --> 00:31:24,730
Így adj egy eredményhalmaz, ahogy hívják.

662
00:31:24,730 --> 00:31:28,210
Más szóval, adj egy példányt a
táblázatkezelő, amit akarok kilyukadni.

663
00:31:28,210 --> 00:31:34,890
>> De ha azt válasszuk csillag a felhasználóktól
ahol az ID = 1, milyen nagy kellene

664
00:31:34,890 --> 00:31:36,640
én eredményhalmaz lesz akkor?

665
00:31:36,640 --> 00:31:41,680
Vagy azzal egyenértékű, hogy hány sort kell
Azt adják vissza az adatbázisból?

666
00:31:41,680 --> 00:31:45,860
Lehet, hogy csak egy, ha valóban van
kezelt azonosító egyedi azonosítót,

667
00:31:45,860 --> 00:31:50,710
és ha David van, hogy egyedi azonosító, I
Vissza kell mennem egy és csak egy sort

668
00:31:50,710 --> 00:31:53,220
tartalmazza az összes Dávid információkat.

669
00:31:53,220 --> 00:31:56,390
Ha azt mondta, hogy ez hol ID
egyenlő 99 Vissza kell mennem,

670
00:31:56,390 --> 00:32:00,320
Ebben az összefüggésben, a nulla sorok,
legalább abban a pillanatban.

671
00:32:00,320 --> 00:32:03,620
>> Azonban, ha nem igazán érdekel
körülbelül minden információt,

672
00:32:03,620 --> 00:32:06,970
Tudnék mondani, hol David élni?

673
00:32:06,970 --> 00:32:10,860
Select irányítószám alapján
felhasználók számára, ahol ID 1.

674
00:32:10,860 --> 00:32:15,820
Ezzel kijelöli nekem csak Dávid zip
kódot, és nem a teljes egészében azt a sort.

675
00:32:15,820 --> 00:32:19,541
Miért lehet ezt tenném helyett
A csillag lekérdezés, a wild card?

676
00:32:19,541 --> 00:32:21,950
>> KÖZÖNSÉG: [hallható]

677
00:32:21,950 --> 00:32:24,590
>> DAVID MALAN: Igen, talán csak szüksége van rá.

678
00:32:24,590 --> 00:32:26,350
Így a teljesítmény ismét a választ itt.

679
00:32:26,350 --> 00:32:28,540
Miért kér többet
információt, mint amennyire szüksége van,

680
00:32:28,540 --> 00:32:32,020
mert még ha minden rendben együtt,
akkor is kell másolni az adatokat,

681
00:32:32,020 --> 00:32:35,560
úgy tűnik, az adatbázisból
a programba valahogy,

682
00:32:35,560 --> 00:32:38,490
és ez csak buta, ha
Csak akkor kell öt olyan számjegyet,

683
00:32:38,490 --> 00:32:40,340
nem teljes egészében a sorban.

684
00:32:40,340 --> 00:32:42,180
>> Nos, hogyan helyezze be a felhasználó?

685
00:32:42,180 --> 00:32:44,780
Tegyük fel, hogy egy felhasználó csak
regisztrált az első alkalommal.

686
00:32:44,780 --> 00:32:46,560
A szintaxis rendszerint a következőképpen néz ki.

687
00:32:46,560 --> 00:32:52,700
Helyezze be a felhasználók, és
akkor azt mondjuk, értékek,

688
00:32:52,700 --> 00:33:00,150
és akkor mi lenne mondjuk értékeket
mint, mondjuk, Lauren Scully,

689
00:33:00,150 --> 00:33:02,380
mi videósok itt.

690
00:33:02,380 --> 00:33:04,390
És a következő mező nem.

691
00:33:04,390 --> 00:33:08,020
Tehát azt fogjuk mondani erről, idézet vége
"F", akkor van egy azonosítót

692
00:33:08,020 --> 00:33:12,250
és megyek say-- nézzük
mintha ő valójában nem itt,

693
00:33:12,250 --> 00:33:14,380
így fogunk visszatekerés a történet.

694
00:33:14,380 --> 00:33:16,530
Tehát 2 lesz élete ID.

695
00:33:16,530 --> 00:33:19,130
És akkor a következő mező
Itt van ő e-mail.

696
00:33:19,130 --> 00:33:22,140
Szóval ez lesz, mint a
Lauren Scully és így tovább,

697
00:33:22,140 --> 00:33:24,360
és mi csak dot dot
dot el innen.

698
00:33:24,360 --> 00:33:26,890
Most kap egy kis
unalmas, de a betét lekérdezés

699
00:33:26,890 --> 00:33:28,310
végül kinézni.

700
00:33:28,310 --> 00:33:30,970
>> Ha azt akarom, hogy megszabaduljon
Scully, uh-oh, nézzük leregisztrálni

701
00:33:30,970 --> 00:33:37,420
neki, törli a számláján,
törölni felhasználókat ahol az ID = 2,

702
00:33:37,420 --> 00:33:38,500
megszabadulni Scully.

703
00:33:38,500 --> 00:33:48,050
Vagy tudok mondani frissítés a felhasználók létrehozását,
mondjuk, hogy mit tudnánk változtatni?

704
00:33:48,050 --> 00:33:49,430
Tegyük fel, hogy ő mozog.

705
00:33:49,430 --> 00:33:53,730
Set zip egyenlő 021-- dehogy,
hogy az ő jelenlegi zip.

706
00:33:53,730 --> 00:33:54,487
90.210.

707
00:33:54,487 --> 00:33:56,320
Az egyetlen másik irányítószámot
Tudom, hogy a világon.

708
00:33:56,320 --> 00:33:59,002
Annak érdekében, hogy változna
ő zip code-- valójában,

709
00:33:59,002 --> 00:34:00,460
ez nem változik meg az irányítószámot.

710
00:34:00,460 --> 00:34:02,170
>> Mit is csinál?

711
00:34:02,170 --> 00:34:04,292
Annak ellenére, hogy a szintaxis valószínűleg új.

712
00:34:04,292 --> 00:34:05,302
>> KÖZÖNSÉG: [hallható]

713
00:34:05,302 --> 00:34:08,010
DAVID MALAN: Igen, mentem mindenki
Beverly Hills, Kalifornia.

714
00:34:08,010 --> 00:34:11,920
Szóval ténylegesen
megmondani, hogy hol ID = 2.

715
00:34:11,920 --> 00:34:12,820
És így tovább.

716
00:34:12,820 --> 00:34:15,290
Így az SQL szól ezeket
féle utasításokat.

717
00:34:15,290 --> 00:34:20,260
SELECT, INSERT, törlés, változtatás,
ezekkel predikátumok végén

718
00:34:20,260 --> 00:34:22,139
ezek hol kikötések, hogy úgy mondjam.

719
00:34:22,139 --> 00:34:25,170
És van egy sokkal több dolgot
csinálni, de ez tényleg csak attól függ,

720
00:34:25,170 --> 00:34:29,750
egyszerűen, ha arcanely, kifejező
mit akar az adatbázist csinálni.

721
00:34:29,750 --> 00:34:31,580
>> És akkor az adatbázis
majd kitalálni, amikor

722
00:34:31,580 --> 00:34:35,630
behelyezi Lauren Scully a
adatbázis, hová tegye rá a memóriában

723
00:34:35,630 --> 00:34:38,230
hogy mi is nagyon gyorsan
ő alapuló e-mail címét

724
00:34:38,230 --> 00:34:42,610
vagy alapján ő azonosító száma vagy hasonlók.

725
00:34:42,610 --> 00:34:43,391
Ja, Dan.

726
00:34:43,391 --> 00:34:44,266
KÖZÖNSÉG: [hallható]

727
00:34:44,266 --> 00:34:46,364

728
00:34:46,364 --> 00:34:47,780
DAVID MALAN: Tényleg jó kérdés.

729
00:34:47,780 --> 00:34:50,370
Vajon ezek a szkriptek változik
Microsoft Access az Oracle

730
00:34:50,370 --> 00:34:52,290
MySQL PostgreSQL?

731
00:34:52,290 --> 00:34:53,790
A rövid válasz az, hogy attól függ.

732
00:34:53,790 --> 00:34:58,697
Elméletileg van egy nagyon
jelentős közös halmazába SQL

733
00:34:58,697 --> 00:35:00,780
ami osztozik
Ezen megvalósítások.

734
00:35:00,780 --> 00:35:03,340
Azonban a különböző gyártók
van hozzáadott funkciók

735
00:35:03,340 --> 00:35:07,120
saját adatbázisok, hogy bizonyos dolgokat
túlmutat ezeket a funkciókat,

736
00:35:07,120 --> 00:35:08,720
amelyek, sőt, eltörhet.

737
00:35:08,720 --> 00:35:11,210
>> Tehát ahogy a fejlesztők
lefedezhette,

738
00:35:11,210 --> 00:35:14,350
hogy ahelyett, írásban nyers
SQL-kódot, mint írom ide,

739
00:35:14,350 --> 00:35:19,460
ezek helyett használja a könyvtárat,
közös könyvtár maga

740
00:35:19,460 --> 00:35:23,650
egyfajta magasabb szintű és kivonatok
található, amely a termék, amit használ.

741
00:35:23,650 --> 00:35:25,710
És ez ad
funkciók és eljárások

742
00:35:25,710 --> 00:35:28,810
hívni úgy, hogy soha
valójában írni nyers SQL.

743
00:35:28,810 --> 00:35:32,609
>> Elméletileg, akkor meg lehet változtatni
termékek Oracle és a Microsoft

744
00:35:32,609 --> 00:35:34,650
vagy fordítva, vagy bármi
mást, és akkor szó

745
00:35:34,650 --> 00:35:36,920
változtatni semmit a kódot.

746
00:35:36,920 --> 00:35:40,180
A valóságban azonban az, hogy néha
feladja funkciók eredményeképpen.

747
00:35:40,180 --> 00:35:43,860
Lehet, hogy választott terméket, mert
ez van ezen értéknövelt szolgáltatások,

748
00:35:43,860 --> 00:35:46,610
és te csak most nem
használja őket tudatosan.

749
00:35:46,610 --> 00:35:51,630
>> És anecdotally, a legtöbb vállalat inkább
soha, hogy távolodjon el az adatbázisba.

750
00:35:51,630 --> 00:35:54,002
Tehát miközben ez egy szép
van funkciót, a valóság

751
00:35:54,002 --> 00:35:55,960
van, ha teljes átalakítása
az adatbázis, akkor

752
00:35:55,960 --> 00:35:59,890
Valószínűleg így fürtök egyéb változások
egyébként, hogy nem feltétlenül

753
00:35:59,890 --> 00:36:01,360
előre kell látniuk, hogy a.

754
00:36:01,360 --> 00:36:03,720
Tehát vitathatatlanul
over-mérnöki probléma,

755
00:36:03,720 --> 00:36:05,670
de ez tényleg attól függ, hogy a kontextusban.

756
00:36:05,670 --> 00:36:09,960
De elméletileg SQL megosztott
ezeken a különböző termékeket.

757
00:36:09,960 --> 00:36:11,560
Tényleg jó kérdés.

758
00:36:11,560 --> 00:36:12,272
Igen.

759
00:36:12,272 --> 00:36:13,147
>> KÖZÖNSÉG: [hallható]

760
00:36:13,147 --> 00:36:17,820

761
00:36:17,820 --> 00:36:21,480
>> DAVID MALAN: Igen, tehát
akkor gondolom egy adatbázis

762
00:36:21,480 --> 00:36:25,020
csak egy szerver, a végén
a nap, és azon belül a kiszolgáló

763
00:36:25,020 --> 00:36:28,670
egy csomó
táblázatok, sorok és oszlopok.

764
00:36:28,670 --> 00:36:33,410
És ha elküld egy lekérdezést, mint ez
a programból, a honlapon,

765
00:36:33,410 --> 00:36:39,340
Java-ban írt, Ruby, Python, bármi,
A kiszolgáló megkapja ezt a parancsot

766
00:36:39,340 --> 00:36:41,660
és értelmezés a
szó szerint azonos módon

767
00:36:41,660 --> 00:36:43,660
beszéltünk korábban
értelmezett nyelvekhez,

768
00:36:43,660 --> 00:36:47,333
majd végrehajt bizonyos műveletet nulla
vagy több sort nulla vagy több táblából.

769
00:36:47,333 --> 00:36:48,208
KÖZÖNSÉG: [hallható]

770
00:36:48,208 --> 00:36:53,540

771
00:36:53,540 --> 00:36:55,070
>> DAVID MALAN: Pontosan, pontosan.

772
00:36:55,070 --> 00:36:58,450
Tehát a pszeudokód valamit
mint hogy lehet ez.

773
00:36:58,450 --> 00:37:02,450
A PHP fájlt, vagy a
Python fájlt, vagy a Java fájlt,

774
00:37:02,450 --> 00:37:09,210
ha volna pszeudokód kód, vagy
Scratch-szerű blokkok, ha a felhasználó meglátogat

775
00:37:09,210 --> 00:37:19,870
acme.com/register~~V első alkalommal,
majd helyezze be a felhasználók, és így tovább.

776
00:37:19,870 --> 00:37:22,619
És mi lenne lefordítani ezt a
konkrétabb kódot a végén.

777
00:37:22,619 --> 00:37:24,660
De tényleg, mi minden
Az építőkockák itt,

778
00:37:24,660 --> 00:37:27,680
noha mi ugrunk néhány
A kivitelezés lépéseinek.

779
00:37:27,680 --> 00:37:31,560
>> Tehát hadd talált hibát, amit mi
csodálatosan tette Egy perce.

780
00:37:31,560 --> 00:37:36,470
Létrehozott egy szép
teljes táblázat a felhasználók számára.

781
00:37:36,470 --> 00:37:38,920
Igaz, tudtuk végrehajtani
azt egy pár különböző módon,

782
00:37:38,920 --> 00:37:43,030
de ténylegesen vezetett bennünket
le a path-- és azt mondod,

783
00:37:43,030 --> 00:37:48,080
de ez valószínűleg az én fault-- egy meglehetősen
hatékony adatbázis megvalósításhoz.

784
00:37:48,080 --> 00:37:49,950
Ez nem normalizálódott.

785
00:37:49,950 --> 00:37:52,320
>> És normalizált értem
ott lesz,

786
00:37:52,320 --> 00:37:57,380
idővel, jelentős létszámleépítés,
és így a hatékonyság,

787
00:37:57,380 --> 00:38:00,210
azaz hulladék helyet.

788
00:38:00,210 --> 00:38:05,650
Alapján csak az, amit itt látsz, tudsz
Lát ha ez hulladék helyet

789
00:38:05,650 --> 00:38:08,710
fog származik, idővel,
mivel egyre több felhasználó regisztrálja

790
00:38:08,710 --> 00:38:10,860
a honlapon?

791
00:38:10,860 --> 00:38:13,047
Mi adatok válhatnak feleslegessé?

792
00:38:13,047 --> 00:38:19,084

793
00:38:19,084 --> 00:38:20,940
>> KÖZÖNSÉG: [hallható]

794
00:38:20,940 --> 00:38:22,686
>> DAVID MALAN: Miért jelent ez?

795
00:38:22,686 --> 00:38:23,561
KÖZÖNSÉG: [hallható]

796
00:38:23,561 --> 00:38:32,180

797
00:38:32,180 --> 00:38:32,930
DAVID MALAN: Igen.

798
00:38:32,930 --> 00:38:35,622
És tegyük fel, hogy arra a célra
ma, hogy ez igaz.

799
00:38:35,622 --> 00:38:38,330
Kiderült, és megtanultuk ezt
a nehezebb utat, hogy ez nem igaz.

800
00:38:38,330 --> 00:38:41,670
Valahogy több város van,
valahogy, azonos irányítószám,

801
00:38:41,670 --> 00:38:43,390
amely megtöri ezt a csodálatos intuíció.

802
00:38:43,390 --> 00:38:46,180
De tegyük fel, hogy igaz,
mert majdnem mindig igaz.

803
00:38:46,180 --> 00:38:51,390
Tehát tegyük fel, hogy egy irányítószámot is
mindig jár együtt, ugyanabban a városban

804
00:38:51,390 --> 00:38:53,600
és az állami, ami egyfajta
ésszerű feltételezés,

805
00:38:53,600 --> 00:38:54,840
de hibás, kiderül.

806
00:38:54,840 --> 00:38:57,310
De egy ésszerű feltételezés
a mai célra.

807
00:38:57,310 --> 00:39:01,650
>> Akkor tegyük fel, hogy élek, Cambridge,
MA szerint ennek a felhasználónak a tábla,

808
00:39:01,650 --> 00:39:04,100
és tegyük fel, hogy Lauren
Scully él Cambridge, MA,

809
00:39:04,100 --> 00:39:06,120
és tegyük fel, hogy Kareem
él Cambridge, MA,

810
00:39:06,120 --> 00:39:10,400
és ARWA él Cambridge,
MA, mindannyiunk 02.138.

811
00:39:10,400 --> 00:39:15,890
Miért vagyunk emlékezve Cambridge,
MA, 02138 számára mind a négyen?

812
00:39:15,890 --> 00:39:18,903
Mi elegendőnek kell emlékezni?

813
00:39:18,903 --> 00:39:20,249
>> KÖZÖNSÉG: [hallható]

814
00:39:20,249 --> 00:39:21,540
DAVID MALAN: Csak az irányítószámot.

815
00:39:21,540 --> 00:39:25,080
Csak annyit, hogy 02.138 létezik, mert
Tudod, mit tehetnénk?

816
00:39:25,080 --> 00:39:32,650
Mi is kap egy kis díszes itt
és itt, meg egy másik tábla

817
00:39:32,650 --> 00:39:35,850
ha ez lesz a
név, ez lesz a típus,

818
00:39:35,850 --> 00:39:38,840
ez lesz a
hossz, és ezentúl én

819
00:39:38,840 --> 00:39:42,900
Felhívom az én városban asztalra.

820
00:39:42,900 --> 00:39:47,011
Ezt nevezték, a
Természetesen a felhasználók az asztalra.

821
00:39:47,011 --> 00:39:49,885
És akkor mi rakjam ide
én városok asztal, mit gondolsz?

822
00:39:49,885 --> 00:39:53,605

823
00:39:53,605 --> 00:39:54,535
>> KÖZÖNSÉG: [hallható]

824
00:39:54,535 --> 00:39:55,930
>> DAVID MALAN: Igen.

825
00:39:55,930 --> 00:40:01,440
Tehát zip és az állam és a város.

826
00:40:01,440 --> 00:40:05,350
És így a típus van, azt fogjuk mondani
ez lesz a char 5 ismét

827
00:40:05,350 --> 00:40:06,750
figyelemmel a vitát a korábbi.

828
00:40:06,750 --> 00:40:14,810
Ez lesz egy enum, talán, mint
előtt, és a város lesz a varchar 50.

829
00:40:14,810 --> 00:40:17,960
És így most mit kapok
kitörölni ezt a táblázatot

830
00:40:17,960 --> 00:40:21,995
kiküszöbölésére, hogy a hatékonyság?

831
00:40:21,995 --> 00:40:23,100
>> KÖZÖNSÉG: [hallható]

832
00:40:23,100 --> 00:40:23,850
DAVID MALAN: Nice.

833
00:40:23,850 --> 00:40:30,239
Állami és városi elmegy, úgyhogy most
Kiesett a lehetséges eredménytelenségét

834
00:40:30,239 --> 00:40:33,280
A redundáns emlékezés, Cambridge,
MA, Cambridge, MA, Cambridge, MA,

835
00:40:33,280 --> 00:40:35,712
Cambridge, MA, amely remélhetőleg
soha nem fog megváltozni.

836
00:40:35,712 --> 00:40:37,670
És még ha ez így van, akkor
minorly bosszantó, most

837
00:40:37,670 --> 00:40:39,750
hogy meg kell változtatni
ez több sorban,

838
00:40:39,750 --> 00:40:43,770
míg itt, én is csak
változtassa meg egy helyen.

839
00:40:43,770 --> 00:40:46,890
>> Most mi a trade-off, talán?

840
00:40:46,890 --> 00:40:48,020
Ez szuper volt kényelmes.

841
00:40:48,020 --> 00:40:50,730
Ha minden adataimat szépen együtt.

842
00:40:50,730 --> 00:40:53,644
De mi pontosan a helyzet most?

843
00:40:53,644 --> 00:40:55,684
>> KÖZÖNSÉG: [hallható]

844
00:40:55,684 --> 00:40:58,100
DAVID MALAN: Pontosan, és én
örülök, hogy ezt a szót használta csatlakozni,

845
00:40:58,100 --> 00:41:01,320
mert ez valójában a kulcsszó,
a világon a relációs adatbázisok

846
00:41:01,320 --> 00:41:05,270
SQL, ez egy valódi szó, amit
is írja, vagy legalábbis közvetíteni.

847
00:41:05,270 --> 00:41:09,280
És valóban, amit most már nem
válassza ki Dávid teljes információ

848
00:41:09,280 --> 00:41:19,700
valami hasonló válassza csillag
felhasználók csatlakozhatnak a városok, on-- és most

849
00:41:19,700 --> 00:41:24,010
Megyek csak mozgatni a második sorban
így ez a fits-- users.zip megegyezik

850
00:41:24,010 --> 00:41:34,570
cities.zip, ahol users.ID értéke 1.

851
00:41:34,570 --> 00:41:35,550
>> Nos, miújság?

852
00:41:35,550 --> 00:41:38,970
Ez csúnya, de akkor milyen
olvasni balról jobbra, fentről lefelé.

853
00:41:38,970 --> 00:41:41,030
Select csillag felhasználó
ugyanaz, mint korábban,

854
00:41:41,030 --> 00:41:42,930
de ez nem a felhasználók, a per se.

855
00:41:42,930 --> 00:41:45,910
Ez a felhasználóktól csatlakozzon városokban.

856
00:41:45,910 --> 00:41:48,520
Mi vagyok én csatlakozott az említett két asztal?

857
00:41:48,520 --> 00:41:51,820
Nos, úgy tűnik, a
felhasználók asztalok zip területén,

858
00:41:51,820 --> 00:41:54,810
és ez az időszak csak speciális
szintaxis kifejezni, hogy a gondolat,

859
00:41:54,810 --> 00:41:58,130
és ez a városok táblázatok zip mezőben.

860
00:41:58,130 --> 00:42:01,580
Azt akarjuk, hogy ezek két egyenlő,
de azt akarom, hogy végül válassza

861
00:42:01,580 --> 00:42:06,280
csak azokat a sorokat, ahol
ID a felhasználók tábla

862
00:42:06,280 --> 00:42:08,730
= 1, ami történt, hogy az enyém.

863
00:42:08,730 --> 00:42:11,781
>> És csak azért, hogy világos legyen, a
programozó, jellemzően a

864
00:42:11,781 --> 00:42:14,780
Bedrótozhatsz olyasmi, mint a szám
1, mert különben a honlapon csak a

865
00:42:14,780 --> 00:42:17,630
támogatja David vagy a
legelső felhasználó,

866
00:42:17,630 --> 00:42:20,720
ehelyett csinálni
olyasmi, mint azonosító, ahol

867
00:42:20,720 --> 00:42:22,510
ez azt jelenti,
változó, ami

868
00:42:22,510 --> 00:42:26,210
idővel változhat, hasonló
szellemében, amit korábban mondtam

869
00:42:26,210 --> 00:42:28,080
az ilyen típusú helyőrzők.

870
00:42:28,080 --> 00:42:30,396
De most csak belekódolják azt 1.

871
00:42:30,396 --> 00:42:31,520
És így ez mit jelent?

872
00:42:31,520 --> 00:42:35,100
Nos, egy jó módja annak, hogy megjelenítsék ezt
hogy ha ez a kéz a felhasználók tábla,

873
00:42:35,100 --> 00:42:38,090
és ez a kéz a cipzár
asztal, mi fajta finding--

874
00:42:38,090 --> 00:42:41,330
és a tippeket az ujjaim zip
ide, és hegye ujjaim

875
00:42:41,330 --> 00:42:43,740
itt zip, te
fajta egymásba is

876
00:42:43,740 --> 00:42:47,950
így kap vissza a kapott
eredeti tábla, azzal, hogy valóban csatlakozott

877
00:42:47,950 --> 00:42:49,590
A két táblázat a közös területen.

878
00:42:49,590 --> 00:42:50,840
És nem kell, hogy zip.

879
00:42:50,840 --> 00:42:54,460
Ez lehet a legtöbb mást,
zip szép, mert az egyik, ez a rövid,

880
00:42:54,460 --> 00:42:56,470
két, mindig a
azonos hosszúságú, ezért van

881
00:42:56,470 --> 00:43:02,270
valódi hatékonyságát, hogy milyen
Olivier itt javasolt

882
00:43:02,270 --> 00:43:05,200
A faktoring ki a zip, és
[Hallható] azt javasolta, hogy megszabadulunk

883
00:43:05,200 --> 00:43:07,110
A város és az államok.

884
00:43:07,110 --> 00:43:11,370
>> Tehát ez a folyamat
néven normalizálás.

885
00:43:11,370 --> 00:43:14,171
Bármilyen kérdése, hogy?

886
00:43:14,171 --> 00:43:16,170
Hát hadd rámutatni
ez a fajta dolog,

887
00:43:16,170 --> 00:43:19,202
annak ellenére, hogy meglehetősen alacsony szintű,
ez a vita, hogy gondolná

888
00:43:19,202 --> 00:43:20,910
te fajta egyre
elvesztette a gyomok,

889
00:43:20,910 --> 00:43:26,690
ez a megnyilvánulása a bőséges
lehetőség a fejlesztők számára, hogy rossz.

890
00:43:26,690 --> 00:43:29,600
És valóban, még ha mi,
tanfolyamok tanítottam, amikor is megvolt,

891
00:43:29,600 --> 00:43:32,290
Például, tapasztalatlan
egyetemi programozók

892
00:43:32,290 --> 00:43:35,920
weblapok, első pillantásra,
A webhelyek nézel.

893
00:43:35,920 --> 00:43:38,280
És ezek mind a
funkcionalitás kértük,

894
00:43:38,280 --> 00:43:40,650
A fejlesztők nem jó munkát.

895
00:43:40,650 --> 00:43:43,370
>> De nem feltétlenül tudja,
elég az adatbázis-tervezés

896
00:43:43,370 --> 00:43:46,680
vagy mert nem hiszem, kemény
elég a adattípusok

897
00:43:46,680 --> 00:43:49,220
és a felhasználói típusok a
honlap megy, hogy,

898
00:43:49,220 --> 00:43:53,240
és megtaláljuk, akkor, hat hónappal később,
miután már végzett, vagy mozgott,

899
00:43:53,240 --> 00:43:56,016
hogy verje meg, honlapunkon
valóban, valóban lassú.

900
00:43:56,016 --> 00:43:58,890
És én nem is beszélek, amelynek
millió vagy több ezer felhasználó.

901
00:43:58,890 --> 00:44:02,580
Mármint néhány száz felhasználó az egyetemen,
akik mind szeretnek, például

902
00:44:02,580 --> 00:44:04,870
bolt tanfolyamok
Ugyanakkor, ők

903
00:44:04,870 --> 00:44:07,010
használ, hogy a tanfolyam katalógus
alkalmazás már említettem

904
00:44:07,010 --> 00:44:10,410
és a dolog kezd nagyon
lassú, mert nem voltak indexek.

905
00:44:10,410 --> 00:44:13,740
Nem volt vörös csillag, így
beszélni, vagy mi volt nem feltétlenül

906
00:44:13,740 --> 00:44:17,690
tényezőként ki közös adatok
egy kis megtakarítás helyet.

907
00:44:17,690 --> 00:44:21,880
>> És így, ha egy fejlesztő elbírálása
vagy adatbázis személy vagy hasonlók,

908
00:44:21,880 --> 00:44:25,864
jellegű kérdéseket át kell gondolni
még felülvizsgálatakor valaki kódot,

909
00:44:25,864 --> 00:44:28,530
mondani, nem feltétlenül néz
keresztül minden a kódot, de azt mondják,

910
00:44:28,530 --> 00:44:30,154
nézzük át az adatbázis táblákat.

911
00:44:30,154 --> 00:44:31,150
Mit tárolására?

912
00:44:31,150 --> 00:44:33,941
És akkor azt mondják, jó, várjon
perc, miért használ egy egész?

913
00:44:33,941 --> 00:44:36,224
Mi van, ha van 4000000000
és 1 ilyen sort?

914
00:44:36,224 --> 00:44:38,140
És az ilyen jellegű
kérdések egy lehetőség

915
00:44:38,140 --> 00:44:40,170
hogy milyen tolatási és
hogy egyfajta, ahol

916
00:44:40,170 --> 00:44:42,300
ha nem kényelmes csinál
azt, hogy valaki több technikai

917
00:44:42,300 --> 00:44:45,425
fel ezeket a kérdéseket, az-e vagy sem
Az ember tényleg tudja a dolgát.

918
00:44:45,425 --> 00:44:47,890
És ez a fajta
dolgok is, hogy az emberek

919
00:44:47,890 --> 00:44:50,540
az interneten, akik
autodidakta, talán

920
00:44:50,540 --> 00:44:53,920
tanulni ritkábban, mert
nem feltétlenül találkoznak az

921
00:44:53,920 --> 00:44:56,630
annyi, mert akkor kap
Az adatbázis létrehozásához és működtetéséhez,

922
00:44:56,630 --> 00:44:58,880
de ha nem olvastál
fel útmutatók vagy volt

923
00:44:58,880 --> 00:45:01,880
meséltek adatbázisok normalizálásának
és indexelés és a teljesítmény,

924
00:45:01,880 --> 00:45:04,255
Ezek azok a fajta dolgok
hogy fognak bántani.

925
00:45:04,255 --> 00:45:07,480
És azt gondolhatja, vagy rossz mérnök
Lehet mondani, ó, hát jobb fizetéssel

926
00:45:07,480 --> 00:45:09,600
egy nagyobb adatbázis
vagy gyorsabb adatbázis

927
00:45:09,600 --> 00:45:13,360
vagy csak dobja pénzt ezt,
függőlegesen skála, nem feltétlenül igaz.

928
00:45:13,360 --> 00:45:16,920
Ha megy in-- és mehetsz
után fact-- és add indexek,

929
00:45:16,920 --> 00:45:20,320
és ez eltart egy pár órát
adatbázis kiépítése, hogy az új adatok

930
00:45:20,320 --> 00:45:24,100
szerkezet utaltam korábban,
akkor is erősít ez után az a tény,

931
00:45:24,100 --> 00:45:26,180
hogy ez az, ahol
elkezdi megkülönböztetni

932
00:45:26,180 --> 00:45:28,830
jó tervezők rossz
tervezők, nem csak esztétikailag,

933
00:45:28,830 --> 00:45:32,972
de a teljesítmény-bölcs is.

934
00:45:32,972 --> 00:45:33,555
Bármi kérdés?

935
00:45:33,555 --> 00:45:36,420

936
00:45:36,420 --> 00:45:37,480
Nem?

937
00:45:37,480 --> 00:45:41,980
Tehát NoSQL, ami a másik típusú
Az adatbázis, amelyre utaltam korábban,

938
00:45:41,980 --> 00:45:43,490
nincs sorok és oszlopok.

939
00:45:43,490 --> 00:45:47,000
Ehelyett, ha volna valami
úgy néz ki, egy kicsit több, mint ez.

940
00:45:47,000 --> 00:45:48,630
Azt fogom használni a közös szintaxis.

941
00:45:48,630 --> 00:45:51,270
Kapcsos zárójelek megtörténhet
használható itt elég sokat.

942
00:45:51,270 --> 00:45:55,400
Lehet, hogy valami
mint az első neve David,

943
00:45:55,400 --> 00:46:00,180
lehet, hogy az utolsó
név Malan, idézetek,

944
00:46:00,180 --> 00:46:07,530
lehet, hogy ID is--
elnézést, whoops-- azonosító értéke 1,

945
00:46:07,530 --> 00:46:13,410
e-mail malan@harvard.edu, és nem is fogok
zavarja gépelési ki a többit, majd

946
00:46:13,410 --> 00:46:14,380
néhány más dolog.

947
00:46:14,380 --> 00:46:17,380
>> Más szavakkal, ez az
egy szöveges megjelenítése

948
00:46:17,380 --> 00:46:20,720
Az, amit mi általában hívni
egy objektum egy számítógépes program.

949
00:46:20,720 --> 00:46:26,079
És egy tárgy általában csak
gyűjteménye kulcs érték párok.

950
00:46:26,079 --> 00:46:27,370
Tehát újra, ez visszatérő téma.

951
00:46:27,370 --> 00:46:30,440
Láttuk kulcs-érték párok HTML,
láttuk kulcs érték párok most

952
00:46:30,440 --> 00:46:34,020
keretében adatbázisok, és mi
látta kulcs érték párok keretében

953
00:46:34,020 --> 00:46:35,970
, azt hiszem, a nyelv a korábbi ma.

954
00:46:35,970 --> 00:46:36,890
Tartja jön.

955
00:46:36,890 --> 00:46:39,620
És valóban, ez nagyon
milyen adatokat csapódik le, hogy,

956
00:46:39,620 --> 00:46:44,240
adatok és metaadatok, vagy értékek
és kulcsok, ill.

957
00:46:44,240 --> 00:46:47,430
>> Tehát egy nem-relációs
adatbázis, valami alapja

958
00:46:47,430 --> 00:46:50,680
tárgyakra, ahol csak facsoport
mindent együtt, és tegye

959
00:46:50,680 --> 00:46:55,640
a memóriába, akkor általában
ábrázolták, vagy gondolt, mint ez.

960
00:46:55,640 --> 00:47:00,500
És elmegyek, hogy most a
egyfajta alternatív megközelítés.

961
00:47:00,500 --> 00:47:03,750
És az ember nem feltétlenül
jobb, mint a többi.

962
00:47:03,750 --> 00:47:07,310
Tény, hogy nagyon divatos
manapság adatbázis rendszerek

963
00:47:07,310 --> 00:47:11,942
mint MongoDB és Redis és néhány
más hasonló eszközök, szabadon álló,

964
00:47:11,942 --> 00:47:13,400
de egyre En Vogue.

965
00:47:13,400 --> 00:47:18,850
Részben azért, mert az általuk kínált további
Jellemzők át ezeket táblázatos megközelítés,

966
00:47:18,850 --> 00:47:20,850
hanem azért is, mert ők
egy kicsit könnyebb használni,

967
00:47:20,850 --> 00:47:24,099
mert nem kell gondolni, mint a kemény
egy csomó ilyen tervezési döntéseket.

968
00:47:24,099 --> 00:47:25,970
Tehát pluses és hátrányával.

969
00:47:25,970 --> 00:47:29,740
Így észre van lehetőség
túl, amit most töltöttem időt.

970
00:47:29,740 --> 00:47:32,310
>> Tehát lássuk ezt.

971
00:47:32,310 --> 00:47:37,870
Nézzük átmenet egy kicsit
vissza most a webes programozás,

972
00:47:37,870 --> 00:47:40,470
így azt a fajta kötni
Ma valami

973
00:47:40,470 --> 00:47:43,930
ez egy kicsit gyakorlati, töltő
Egyes hiányosságok a tegnapi.

974
00:47:43,930 --> 00:47:45,340
Hadd menjen az első.

975
00:47:45,340 --> 00:47:49,310
Így emlékeztetni arra, hogy tegnap
volt néhány kanonikus HTML

976
00:47:49,310 --> 00:47:55,110
oldalak eleinte csak
HTML, majd másodsorban volt CSS,

977
00:47:55,110 --> 00:47:56,620
Cascading Style Sheets.

978
00:47:56,620 --> 00:47:59,830
Ez egy új tag, hogy mi nem
lásd a tegnapi, vagy laknak,

979
00:47:59,830 --> 00:48:01,490
úgynevezett script tag.

980
00:48:01,490 --> 00:48:05,830
>> Kiderült, hogy valójában beágyazza a
nyelv nevű JavaScript a web

981
00:48:05,830 --> 00:48:08,310
oldal, és a web
oldalak tenni valamit.

982
00:48:08,310 --> 00:48:09,710
Szóval mit jelent ez?

983
00:48:09,710 --> 00:48:12,630
Nos, hadd menjen előre, és csak
kölcsön ezt a kódot egy pillanatra.

984
00:48:12,630 --> 00:48:15,860
Én megyek be Cloud9, nincs szükség
hogy ott magatokat csak még,

985
00:48:15,860 --> 00:48:21,350
és fogom hívni ezt alert.HTML.

986
00:48:21,350 --> 00:48:23,650
Megyek illessze be a fájlt, itt.

987
00:48:23,650 --> 00:48:32,070
És csak azért, hogy tisztázza, mit tettem, hadd
menjek erre a címre, és megy, hogy figyelmeztesse,

988
00:48:32,070 --> 00:48:33,870
és látod a Hello World.

989
00:48:33,870 --> 00:48:35,440
>> De ez a fajta underwhelming.

990
00:48:35,440 --> 00:48:37,410
Szeretnék tenni valamit
egy kicsit más.

991
00:48:37,410 --> 00:48:40,610
Így fogok ténylegesen ezt.

992
00:48:40,610 --> 00:48:43,820
Fogok menni itt e,
és a kettő között én szkriptcímkéket,

993
00:48:43,820 --> 00:48:53,460
mondjuk alert ( 'hello, világ'); így közlemény
ez egy kicsit hanyag, de megvan a HTML,

994
00:48:53,460 --> 00:48:56,180
belsejében, amely egy
nyelv nevű JavaScript,

995
00:48:56,180 --> 00:48:59,420
és ez az, amit az úgynevezett a
függvényhívás vagy eljárás hívás.

996
00:48:59,420 --> 00:49:04,500
Ez egy ige, a szó szoros értelmében, ebben az esetben,
és én hivatkozva kód funkcionalitás

997
00:49:04,500 --> 00:49:06,310
hogy valaki más írta.

998
00:49:06,310 --> 00:49:09,630
>> Annak érdekében, hogy a funkció egy
éber, akkor menjünk erre az oldalra

999
00:49:09,630 --> 00:49:14,046
most és kattintson reload, és most
látni egy kicsit az interaktivitás.

1000
00:49:14,046 --> 00:49:15,420
Elég régi iskola és csúnya.

1001
00:49:15,420 --> 00:49:18,580
Ez a fajta emlékeztet a
pop-up, talán a múlt

1002
00:49:18,580 --> 00:49:22,030
de ez nem csinál valamit a
kicsit automatizálni.

1003
00:49:22,030 --> 00:49:26,940
>> Így több, mint, hogy csináljuk
valami sokkal érdekesebb.

1004
00:49:26,940 --> 00:49:30,980
Hadd menjen ide, és megszabadulni a.

1005
00:49:30,980 --> 00:49:33,840
És én megyek előre, és
hozzon létre egy űrlapot, mint mi tegnap.

1006
00:49:33,840 --> 00:49:34,840
Valójában, tudod mit?

1007
00:49:34,840 --> 00:49:37,350
Megyek, hogy menjen be
google.html, amit

1008
00:49:37,350 --> 00:49:43,027
kezdődött tegnap, ami úgy nézett ki, mint a
Ezen keresztül, amit keresett macska

1009
00:49:43,027 --> 00:49:45,360
De észre, hogy egyfajta
hiba a jelenlegi változat.

1010
00:49:45,360 --> 00:49:49,770
Úgy működik, macskák, de tegyük fel, hogy
Én nem működnek együtt, és azt írja semmi,

1011
00:49:49,770 --> 00:49:53,290
és én egyszerűen kattintson be.

1012
00:49:53,290 --> 00:49:54,540
Ez furcsa viselkedését.

1013
00:49:54,540 --> 00:49:57,300
Elvitt a valódi Google,
nem ad nekem egy hibaüzenetet.

1014
00:49:57,300 --> 00:50:00,590
Szeretném elmondani a felhasználó
meg kell, hogy adjanak nekünk egy értéket.

1015
00:50:00,590 --> 00:50:01,780
>> Tehát hogyan lehet ezt megtenni?

1016
00:50:01,780 --> 00:50:06,790
Hát hadd menjen vissza Cloud9 és
hadd menjen be a legjobb oldalam

1017
00:50:06,790 --> 00:50:11,980
és adjunk hozzá egy script tag, mint ez, ahol
Megyek, hogy írja néhány JavaScript kódot.

1018
00:50:11,980 --> 00:50:15,420
És fogok csinálni a következő.

1019
00:50:15,420 --> 00:50:22,910
Ha (document.getelementByID-- és visszahívás
hogy beszéltünk, hogy a korábbi,

1020
00:50:22,910 --> 00:50:23,960
ezt a funkciót.

1021
00:50:23,960 --> 00:50:25,310
Mit ID akarok kapni?

1022
00:50:25,310 --> 00:50:33,050
Azt akarom, hogy q, és megyek
mondjuk egyenlő semmit, Így--

1023
00:50:33,050 --> 00:50:38,220
valójában engedi dupla idézőjel
csak consistency-- egyenlő semmit,

1024
00:50:38,220 --> 00:50:46,650
majd alert ( "Kérem, írja be a lekérdezést") itt.

1025
00:50:46,650 --> 00:50:49,200
>> Szóval van, amit úgy tűnik, hogy
olyasmi, mint egy állapot.

1026
00:50:49,200 --> 00:50:51,410
Láttuk ezt a közvélekedést a Scratch.

1027
00:50:51,410 --> 00:50:54,240
Ez olyan, mint egy ilyen puzzle
darabokat, hogy nézett ki, mint ez.

1028
00:50:54,240 --> 00:50:55,780
És mit beszélek?

1029
00:50:55,780 --> 00:50:59,520
Nos, itt lent, észre vagyok
majd tegye a következőket.

1030
00:50:59,520 --> 00:51:02,790
Megyek, hogy ebben a formában
mező nem csak a neve q, ami

1031
00:51:02,790 --> 00:51:06,630
mi lesz a Google felé, de én
megy, hogy ez egy helyi azonosító

1032
00:51:06,630 --> 00:51:07,630
is nevezik q.

1033
00:51:07,630 --> 00:51:11,780
De nevezhetnénk ezt, amit csak
akar, én csak fog tartani, hogy egyszerű

1034
00:51:11,780 --> 00:51:14,570
és azt is nevezni q, csak az egyszerűség kedvéért.

1035
00:51:14,570 --> 00:51:17,650
>> És most fogok csinálni
valami egy kicsit.

1036
00:51:17,650 --> 00:51:22,600
Az űrlap mezők itt, megyek
hozzá az úgynevezett egy eseménykezelő.

1037
00:51:22,600 --> 00:51:32,260
A nyújtson, akarom hívni
olyan függvény validate.

1038
00:51:32,260 --> 00:51:35,520
Ez még nem létezik, ez
szó, vagy ez az ige érvényesít,

1039
00:51:35,520 --> 00:51:38,560
mert mit fogok csinálni
itt most néhány kódot hozzá.

1040
00:51:38,560 --> 00:51:42,200
>> Azt fogom mondani funkció érvényesít.

1041
00:51:42,200 --> 00:51:48,280
Megyek behúzni ezt, és egy újabb
zárójel itt és egy másik itt.

1042
00:51:48,280 --> 00:51:50,110
Nézzük meg, mi ez most csinál.

1043
00:51:50,110 --> 00:51:54,210
Van now-- gondolni ezt készítettem el
saját puzzle-darab, ami korábban nem

1044
00:51:54,210 --> 00:51:57,440
létezik, és hívtam a kirakós
darabja a validate puzzle-darabot.

1045
00:51:57,440 --> 00:52:01,620
Ennek célja az életben, hogy végre
A négy sor kódot belsejébe.

1046
00:52:01,620 --> 00:52:04,940
>> Ha document.getElementById
így fogalmilag,

1047
00:52:04,940 --> 00:52:09,380
hogy fog menni az elem,
A HTML elem, amelynek egyedülálló

1048
00:52:09,380 --> 00:52:12,930
ötlet csak q, majd annak ellenére
A szintaxis néz ki egy kicsit furcsa,

1049
00:52:12,930 --> 00:52:16,430
hogy az egyenlő egyenlő csak azt jelenti, egyenlők.

1050
00:52:16,430 --> 00:52:20,950
Tehát ez azt jelenti, ha az elem a
egyedi azonosítója q, amikor ütött,

1051
00:52:20,950 --> 00:52:25,700
nincs értéke, csak egyenlő
idézet idézőjel bezárva, semmi ott,

1052
00:52:25,700 --> 00:52:27,170
akkor mit akarok csinálni?

1053
00:52:27,170 --> 00:52:29,360
Azt akarom kiabálni a felhasználó.

1054
00:52:29,360 --> 00:52:31,710
>> És nem fogunk részletesen itt.

1055
00:52:31,710 --> 00:52:32,960
Megyek vissza hamis.

1056
00:52:32,960 --> 00:52:34,380
Ez egy hiba.

1057
00:52:34,380 --> 00:52:38,746
Else, megyek vissza igaz.

1058
00:52:38,746 --> 00:52:40,120
Tehát vagy működött, vagy nem.

1059
00:52:40,120 --> 00:52:41,800
Hamis vagy igaz.

1060
00:52:41,800 --> 00:52:47,820
És most, ha nem hibázni,
hadd menteni ezt, és töltse be újra ezt.

1061
00:52:47,820 --> 00:52:50,940
És hadd ellenőrizze, hogy
Nem, sőt, hogy elírás,

1062
00:52:50,940 --> 00:52:52,690
úgyhogy nem zavarba magam.

1063
00:52:52,690 --> 00:52:54,240
Lássuk, ez működik.

1064
00:52:54,240 --> 00:52:56,930
>> Tehát most megyek írja macskák.

1065
00:52:56,930 --> 00:52:59,421
Még mindig működik, vagy fél műveit, legalábbis.

1066
00:52:59,421 --> 00:53:02,170
Most hadd töltse be, és most hagyjuk
Megpróbálom benyújtása gépelés nélkül

1067
00:53:02,170 --> 00:53:05,860
bármit verje meg, mert elszakadt.

1068
00:53:05,860 --> 00:53:06,430
Egy pillanat.

1069
00:53:06,430 --> 00:53:09,380

1070
00:53:09,380 --> 00:53:12,660
Hadd nyissa meg a konzolt,
[Hallható] log, az oldal újratöltődik.

1071
00:53:12,660 --> 00:53:13,576
Hadd próbáljam meg újra.

1072
00:53:13,576 --> 00:53:17,000

1073
00:53:17,000 --> 00:53:17,501
Ó, a fenébe is.

1074
00:53:17,501 --> 00:53:18,000
Elfelejtettem.

1075
00:53:18,000 --> 00:53:18,630
Csináltam egy elírás.

1076
00:53:18,630 --> 00:53:20,760
Emlékszem, mi ez.

1077
00:53:20,760 --> 00:53:21,350
.érték.

1078
00:53:21,350 --> 00:53:27,060
Azt akartam mondani, hogy ha az érték
Az elem, amelynek azonosítója q

1079
00:53:27,060 --> 00:53:29,800
megegyezik, akkor kiabálni a felhasználó.

1080
00:53:29,800 --> 00:53:31,870
>> Tehát most hadd tartsa a levegőt újra.

1081
00:53:31,870 --> 00:53:33,480
Essünk neki.

1082
00:53:33,480 --> 00:53:34,130
Ott vagyunk.

1083
00:53:34,130 --> 00:53:35,010
Kérjük írja be a lekérdezést.

1084
00:53:35,010 --> 00:53:36,840
Tehát ez nem engedte át.

1085
00:53:36,840 --> 00:53:40,210
Azt lehet egyfajta játékos ezzel,
és ellenőrzés helyett az értéktelen,

1086
00:53:40,210 --> 00:53:46,720
Azt lehet mondani valami ilyesmit,
Nincs több keres macskák,

1087
00:53:46,720 --> 00:53:51,150
és most már csak több játékosan hagyja
a felhasználó keresési kutyák, ha ő

1088
00:53:51,150 --> 00:53:57,490
akar, vagy ha bemegyek itt
keresni macskák, most nem tudom.

1089
00:53:57,490 --> 00:53:58,690
>> Tehát mi a elvihető itt?

1090
00:53:58,690 --> 00:54:03,010
Tehát az egyik, most már be
világunkban a HTML és CSS,

1091
00:54:03,010 --> 00:54:04,320
programozási funkciók.

1092
00:54:04,320 --> 00:54:06,300
Tudok valójában most
döntéseket hozni kódot.

1093
00:54:06,300 --> 00:54:10,570
Korábban csak annyit tehet, hogy jelölje ki
szöveges tartalom és képi tartalom

1094
00:54:10,570 --> 00:54:13,080
és mondd el, mit kell keresni
tetszik, és hol jelenjen meg.

1095
00:54:13,080 --> 00:54:16,650
Most már tényleg kérni
kérdéseket a weboldal

1096
00:54:16,650 --> 00:54:20,010
és döntések alapján
rajta, és figyelmezteti a felhasználót

1097
00:54:20,010 --> 00:54:22,780
ha kell kiabálni vele.

1098
00:54:22,780 --> 00:54:28,740
>> Így próbáljuk valami
a saját ezzel.

1099
00:54:28,740 --> 00:54:33,350
Rajta, hadd nyissa meg a következő dia
itt, és csak rámutatni egy dolog.

1100
00:54:33,350 --> 00:54:37,250
Csakúgy, mint a CSS, akkor vegye ki a számításból
JavaScript kódot egy külön fájlban,

1101
00:54:37,250 --> 00:54:40,660
akkor nem ugyanaz a dolog
A JavaScript a CSS.

1102
00:54:40,660 --> 00:54:44,520
És, hogy használja ezt a forrást
attribútum a script tag.

1103
00:54:44,520 --> 00:54:46,540
De mi nem bonyolítja a dolgokat most.

1104
00:54:46,540 --> 00:54:50,440
Ehelyett, ha tudnál
megy nem ezen az oldalon,

1105
00:54:50,440 --> 00:55:02,690
de-- hadd mozgatni ezt körül order--
megy, ha lehetne, ezt az oldalt itt.

1106
00:55:02,690 --> 00:55:03,592
Ez az URL itt.

1107
00:55:03,592 --> 00:55:04,550
Ez a mai diák.

1108
00:55:04,550 --> 00:55:07,133
Lehet, hogy újra, mert
Adtam egy pár dolog.

1109
00:55:07,133 --> 00:55:09,970

1110
00:55:09,970 --> 00:55:13,890
>> De ott, ahol néhány rejtvényeket várja.

1111
00:55:13,890 --> 00:55:16,670
És ez ad nekünk egy esélyt,
egy kicsit több móka összefüggésben

1112
00:55:16,670 --> 00:55:20,610
a pancsolás néhány JavaScript.

1113
00:55:20,610 --> 00:55:25,505
És amikor odaér,
Elmagyarázom, mi vár.

1114
00:55:25,505 --> 00:55:47,350

1115
00:55:47,350 --> 00:55:47,850
Get zöld.

1116
00:55:47,850 --> 00:56:03,063

1117
00:56:03,063 --> 00:56:03,562
Állítsa kék.

1118
00:56:03,562 --> 00:56:11,030

1119
00:56:11,030 --> 00:56:13,930
Beállítja a zöld, beállítja a vörös.

1120
00:56:13,930 --> 00:56:19,220

1121
00:56:19,220 --> 00:56:20,220
Hoppá.

1122
00:56:20,220 --> 00:56:22,330
Sajnálom.

1123
00:56:22,330 --> 00:56:27,630
>> Ez a mértéke a mi
dokumentáció a kihívásra.

1124
00:56:27,630 --> 00:56:29,920
És ez működni fog a következő.

1125
00:56:29,920 --> 00:56:33,340
Tehát mi van ezen a
az oldal egy csomó

1126
00:56:33,340 --> 00:56:38,024
A kép rejtvényeket egy haver
a Stanford Egyetemen.

1127
00:56:38,024 --> 00:56:41,190
Tehát, amit látsz itt szinte
fajta egyik ilyen mágikus szeme rejtvények,

1128
00:56:41,190 --> 00:56:43,815
de ha csak bámult rá,
az nem, hogy kiugrik rád.

1129
00:56:43,815 --> 00:56:46,000
Inkább valami
rejtve a képen.

1130
00:56:46,000 --> 00:56:47,790
És el van rejtve a következő módon.

1131
00:56:47,790 --> 00:56:51,740
Képek, mint Ön is tudja, lehet
tagjai csak három színben.

1132
00:56:51,740 --> 00:56:53,346
Néhány piros, kék, és néhány zöld.

1133
00:56:53,346 --> 00:56:55,220
És tudjuk, hogy az összes
színek a szivárvány

1134
00:56:55,220 --> 00:56:57,570
keverésével e három szín valahogy.

1135
00:56:57,570 --> 00:57:01,940
>> Tehát ez úgy néz ki, főleg a zöld és a
kék, de Nick azt mondja itt,

1136
00:57:01,940 --> 00:57:04,060
ez a vas puzzle kép egy puzzle.

1137
00:57:04,060 --> 00:57:06,780
Tartalmaz egy képet
valami híres, azonban

1138
00:57:06,780 --> 00:57:08,310
A kép már torzult.

1139
00:57:08,310 --> 00:57:11,500
A híres tárgy a piros értékek.

1140
00:57:11,500 --> 00:57:13,810
Ugyanakkor a piros értékek
már mind osztva 10.

1141
00:57:13,810 --> 00:57:16,230
Tehát ezek túl kicsi egy 10-es faktorral.

1142
00:57:16,230 --> 00:57:18,280
Más szóval, Nick
vett egy eredeti kép,

1143
00:57:18,280 --> 00:57:21,500
és ő deszaturált minden
A piros belőle,

1144
00:57:21,500 --> 00:57:23,850
csökkenti a mennyiségű vörös
tinta, ha úgy tetszik, benne.

1145
00:57:23,850 --> 00:57:26,060
>> A kék és a zöld értékek
mind csak értelmetlen,

1146
00:57:26,060 --> 00:57:30,000
véletlenszerű értékek, más néven a zaj tervezett
eltakarni a valós képet.

1147
00:57:30,000 --> 00:57:32,250
Tehát mi Nick az volt, hogy
enyhítettek a piros, majd a

1148
00:57:32,250 --> 00:57:34,380
ő csak dobott véletlenszerűen
mennyiségű kék ​​és zöld

1149
00:57:34,380 --> 00:57:37,590
A kép, hogy milyen homályos
mi valójában még mindig ott van.

1150
00:57:37,590 --> 00:57:41,089
Vissza kell vonni ezeket a torzulásokat
hogy felfedje a képet.

1151
00:57:41,089 --> 00:57:44,255
Először is, meg az összes kék és zöld értékek
nullára, hogy őket az útból,

1152
00:57:44,255 --> 00:57:48,700
és nézd meg az eredményt. Akkor
szorozza minden piros érték 10,

1153
00:57:48,700 --> 00:57:51,720
méretezés vissza a
mintegy végső értékét.

1154
00:57:51,720 --> 00:57:53,035
Mi a híres tárgy?

1155
00:57:53,035 --> 00:57:57,920
>> Tehát minden van a téglalap
a böngésző most.

1156
00:57:57,920 --> 00:58:00,830
És észre, hogy van valami
starter kódot, hogy úgy mondjam.

1157
00:58:00,830 --> 00:58:04,370
Ez a JavaScript kód, amely
Nick írt neked.

1158
00:58:04,370 --> 00:58:07,250
És észreveszed, hogy létezik
egy sor közepén, hogy

1159
00:58:07,250 --> 00:58:10,380
kezdődik perjel perjel, az
mi általában az úgynevezett megjegyzést.

1160
00:58:10,380 --> 00:58:14,660
Ez azt jelenti, hogy egy kifejezés a programozó
hogy nincs funkcionális értelme.

1161
00:58:14,660 --> 00:58:16,520
Ez csak egy látjel az ember.

1162
00:58:16,520 --> 00:58:18,670
>> Így megy előre, és
csak azt az egy sort,

1163
00:58:18,670 --> 00:58:22,214
és szuper óvatos, hogy ne
törölni vagy megváltoztatni semmit.

1164
00:58:22,214 --> 00:58:25,130
És hadd végigvezeti
mi ez a kód, és én majd hagyja

1165
00:58:25,130 --> 00:58:28,580
hogy ki lehessen deríteni a titkos képet.

1166
00:58:28,580 --> 00:58:32,226
Ez első sorban van, hogy most
kiemelt ad a következő.

1167
00:58:32,226 --> 00:58:34,100
A bal oldali,
Van, amit az úgynevezett

1168
00:58:34,100 --> 00:58:39,140
olyan változó, amely Nick önkényesen,
de ésszerűen hívott im a képet.

1169
00:58:39,140 --> 00:58:41,660
A jobb oldali
Az, hogy az egyenlő jel,

1170
00:58:41,660 --> 00:58:45,240
azt mondja, hogy nekem egy új
idézet, idézet vége "egyszerű kép".

1171
00:58:45,240 --> 00:58:49,680
>> Egyszerű kép, ebben az összefüggésben
van egy úgynevezett osztály, nos,

1172
00:58:49,680 --> 00:58:53,910
ez olyan, mint egy class--
technikailag prototype-- de tényleg,

1173
00:58:53,910 --> 00:58:58,000
ez ad nekem egy új objektumot,
a tartalmát, amelyek a fájlt,

1174
00:58:58,000 --> 00:58:59,610
vas-puzzle.png.

1175
00:58:59,610 --> 00:59:03,190
Más szóval, a Nick teremtett
ez a fogalom egy egyszerű kép

1176
00:59:03,190 --> 00:59:05,920
hogy tudjuk, a pedagógiai
célokra, játszani a kép

1177
00:59:05,920 --> 00:59:09,790
és módosítsa a piros,
zöld és kék értékeket.

1178
00:59:09,790 --> 00:59:11,750
>> És hogyan csinálod?

1179
00:59:11,750 --> 00:59:15,360
Ez a kissé rejtélyes szintaxis itt
olyan, mint az ismétlődő mondat

1180
00:59:15,360 --> 00:59:19,140
hogy néhány láttál Scratch korábbi
ma, ahol lehet ismételni 10-szer.

1181
00:59:19,140 --> 00:59:22,220
Ebben az esetben a Nick nem
bedrótoztak több mint 10.

1182
00:59:22,220 --> 00:59:28,020
Ehelyett mond, inicializálja
változó nevű x 0,

1183
00:59:28,020 --> 00:59:33,180
ellenőrizze, ha x kisebb mint
a szélessége a képet.

1184
00:59:33,180 --> 00:59:38,160
>> És így, hogy több megfelelő, a kép a
változó, pont azt jelenti, megy belsejébe

1185
00:59:38,160 --> 00:59:40,900
és kap a szélessége, és
majd nyitott zárójel, zárt

1186
00:59:40,900 --> 00:59:43,687
zárójel csak egy programozó módja
mondván ez a funkció.

1187
00:59:43,687 --> 00:59:44,520
Ez egy olyan eljárás.

1188
00:59:44,520 --> 00:59:46,430
Ez funkcionalitás
valaki más írta.

1189
00:59:46,430 --> 00:59:48,570
Használd és add vissza a választ.

1190
00:59:48,570 --> 00:59:53,610
És akkor x ++ egy divatos módon
mondván, miután ezt megtette egyszer,

1191
00:59:53,610 --> 00:59:55,850
növekmény x 1.

1192
00:59:55,850 --> 00:59:58,760
Más szavakkal, ez a
egy programozó módja

1193
00:59:58,760 --> 01:00:05,760
indukálni hurok, ami
fog végighaladni

1194
01:00:05,760 --> 01:00:10,410
összes oszlopot a képen.

1195
01:00:10,410 --> 01:00:14,790
>> Egy kép csak egy rács
pontok, sorok és oszlopok a pontok.

1196
01:00:14,790 --> 01:00:18,270
Ez egy módja annak iterációjával
át az összes ezeket az oszlopokat.

1197
01:00:18,270 --> 01:00:20,770
És a belsejében,
Közben mi iterációjával

1198
01:00:20,770 --> 01:00:24,030
fölött a magasba, itt
és itt és itt.

1199
01:00:24,030 --> 01:00:29,442
Tehát ez csak egy módja traipsing,
majdnem olyan, mint egy régi iskola írógép,

1200
01:00:29,442 --> 01:00:32,230
hogy csak menjen át a
teljes kép iteratív.

1201
01:00:32,230 --> 01:00:36,370
Még ez nem egészen teljes
világos, csak hogy a hit most,

1202
01:00:36,370 --> 01:00:38,880
hogy e három sor
A kód együtt

1203
01:00:38,880 --> 01:00:43,090
majd lehetővé teszi, hogy iteratív néz
minden pixel, minden pont a képen.

1204
01:00:43,090 --> 01:00:43,790
>> Mi a pixel?

1205
01:00:43,790 --> 01:00:46,250
Nos, hogy egyértelmű, ha megnézzük
az eredeti és a nagyítás,

1206
01:00:46,250 --> 01:00:49,060
ha tényleg fel a szemed
a számítógép képernyőjén, ez

1207
01:00:49,060 --> 01:00:53,510
Csak egy csomó pontok, több
ezer képpont összezsúfolva vannak.

1208
01:00:53,510 --> 01:00:56,180
És akkor mi van tenni?

1209
01:00:56,180 --> 01:00:59,240
Mindegyik azok a pontok,
végső meghatározása,

1210
01:00:59,240 --> 01:01:06,350
az eredmény a mi általában
nevezett RGB, piros, zöld, kék, amely

1211
01:01:06,350 --> 01:01:09,940
ismét, lehet kombinálni, hogy
ad semmiféle színek száma.

1212
01:01:09,940 --> 01:01:13,200
>> Sőt, ha emlékszel
sok-sok évvel ezelőtt,

1213
01:01:13,200 --> 01:01:17,320
vetítőernyők mint ezek a dolgok
Régebben nem egy objektív, hanem három.

1214
01:01:17,320 --> 01:01:20,700
Egyikük kiköp vörös fény, az egyik
őket kiköp zöld fény, egyikük

1215
01:01:20,700 --> 01:01:21,600
kiköpte kék fény.

1216
01:01:21,600 --> 01:01:24,391
És ha egy középiskolás
mint én, ahol soha nem voltak

1217
01:01:24,391 --> 01:01:27,000
egyenesek, te
Mindig figyeljük történelem filmek

1218
01:01:27,000 --> 01:01:29,770
hogy kissé torz,
mert a három szín nem voltak

1219
01:01:29,770 --> 01:01:30,970
kombinálása megfelelően.

1220
01:01:30,970 --> 01:01:36,330
>> De kiderül, hogy az egyes
ezek az értékek a vörös, zöld, és kék,

1221
01:01:36,330 --> 01:01:37,980
lehet egy szám van hozzárendelve.

1222
01:01:37,980 --> 01:01:42,500
Például, 0 piros jelenti, hogy nem
piros, 0 a zöld azt jelenti, nem zöld,

1223
01:01:42,500 --> 01:01:45,120
és 0 kék jelenti, hogy nem kék.

1224
01:01:45,120 --> 01:01:49,403
Tehát, ha nincs piros, nem zöld,
és nem kék, milyen színű van?

1225
01:01:49,403 --> 01:01:51,009
>> KÖZÖNSÉG: [hallható]

1226
01:01:51,009 --> 01:01:52,800
DAVID MALAN: Tényleg
remélem, ez fehér.

1227
01:01:52,800 --> 01:01:55,333
Sajnos, ez a operates-- sajnálom?

1228
01:01:55,333 --> 01:01:56,380
>> KÖZÖNSÉG: [hallható]

1229
01:01:56,380 --> 01:01:58,630
DAVID MALAN: Tehát valójában
fekete, ebben az esetben.

1230
01:01:58,630 --> 01:02:01,530
Tehát, ha ezek egyike sem
színek kapcsolva, akkor fekete.

1231
01:02:01,530 --> 01:02:06,510
Azonban, ha van, mondjuk egy csomó
őket, mint a sok piros, 255 belőle,

1232
01:02:06,510 --> 01:02:10,340
sok zöld, és sokkal
kék, hogy fehér.

1233
01:02:10,340 --> 01:02:12,230
Tehát ez a két véglet.

1234
01:02:12,230 --> 01:02:17,460
Tehát ez a logika, ha van egy csomó
piros, és nem zöld és nem kék,

1235
01:02:17,460 --> 01:02:18,485
milyen színű ez?

1236
01:02:18,485 --> 01:02:19,360
KÖZÖNSÉG: [hallható]

1237
01:02:19,360 --> 01:02:20,610
DAVID MALAN: Jobb, nyilván.

1238
01:02:20,610 --> 01:02:25,940
És akkor nem piros, csomó
zöld, nem kék, majd

1239
01:02:25,940 --> 01:02:29,590
Ha Rézfúvós lévén jól, akkor csak befejezni
IT, csak azért, mert, de ez természetesen,

1240
01:02:29,590 --> 01:02:31,350
Most, a kék.

1241
01:02:31,350 --> 01:02:33,030
És most akkor össze ezeket a színeket.

1242
01:02:33,030 --> 01:02:36,430
Most, hogy félre, ha valakinek van
valaha valamilyen aktuális weboldal tervezés,

1243
01:02:36,430 --> 01:02:38,360
lehet, hogy tényleg
lásd szimbólumok, mint ez.

1244
01:02:38,360 --> 01:02:42,030
FFF-- és valóban, ez
valószínűleg még azt sem.

1245
01:02:42,030 --> 01:02:44,380
Ez FFFFFF.

1246
01:02:44,380 --> 01:02:48,970
>> Bárki látott F és E a
és A through-- így kiderül,

1247
01:02:48,970 --> 01:02:52,970
beszéltünk tegnap a tizedes,
és ma, a fajta kb tizedes.

1248
01:02:52,970 --> 01:02:54,570
Ma beszéltünk bináris.

1249
01:02:54,570 --> 01:02:59,010
Kiderült, hexadecimális egy nagyon
közös alap rendszer használata a számítástechnikában.

1250
01:02:59,010 --> 01:03:04,960
Binary két, decimális 10, hexadecimális 16.

1251
01:03:04,960 --> 01:03:08,640
És kiderül, hogyan
számít hexadecimális?

1252
01:03:08,640 --> 01:03:11,620
Nulla, egy, kettő, három, négy,
öt, hat, hét, nyolc,

1253
01:03:11,620 --> 01:03:14,730
kilenc, mire használja kilenc után?

1254
01:03:14,730 --> 01:03:16,600
Mi a következő szám?

1255
01:03:16,600 --> 01:03:19,180
Már használt nulla.

1256
01:03:19,180 --> 01:03:20,570
Kell 16 ilyen.

1257
01:03:20,570 --> 01:03:25,770
Nulla, egy, kettő, három, négy,
öt, hat, hét, nyolc, kilenc,

1258
01:03:25,770 --> 01:03:27,520
szükség van néhány önkényes konvenció.

1259
01:03:27,520 --> 01:03:30,810
>> És mi az emberiség úgy döntött, egy ideig
ezelőtt, hogy kilenc után jön a levél

1260
01:03:30,810 --> 01:03:34,450
A, majd a B, majd C. Így a
Így számolni hexadecimális

1261
01:03:34,450 --> 01:03:37,040
nulla, egy, kettő, három, négy,
öt, hat, hét, nyolc, kilenc,

1262
01:03:37,040 --> 01:03:42,880
A, B, C, D, E, F, és hogy fog számolni
akkor egészen, kiderül, hogy 15.

1263
01:03:42,880 --> 01:03:47,850
Tehát nulla és 15 nulla keresztül
F. Most miért is fontos?

1264
01:03:47,850 --> 01:03:51,570
Nos, ha van két F-nek,
ez hogyan kifejezni 255.

1265
01:03:51,570 --> 01:03:54,350
>> Tehát hosszú történet rövid, a
A világ a Photoshop,

1266
01:03:54,350 --> 01:03:57,299
hogy grafikai szoftver,
A világ a webes fejlesztés,

1267
01:03:57,299 --> 01:03:59,590
ahol sok a színek,
Természetesen játszani,

1268
01:03:59,590 --> 01:04:02,350
Gyakran programozók
fogalmazzák meg ezeket hexadecimális,

1269
01:04:02,350 --> 01:04:05,260
csak azért, mert hajlamos
hogy egy kicsit egyszerűbb.

1270
01:04:05,260 --> 01:04:07,850
Noha első pillantásra
ez sokkal bonyolultabb.

1271
01:04:07,850 --> 01:04:11,590
>> Tehát minden esetben, ez fontos
mert Nick Stanford

1272
01:04:11,590 --> 01:04:15,100
adott nekünk hat darab funkcionalitás
hogy te, a bimbózó programozók,

1273
01:04:15,100 --> 01:04:17,060
most már képes használni.

1274
01:04:17,060 --> 01:04:19,960
Beépítve ebbe a web
oldal hat funkciók,

1275
01:04:19,960 --> 01:04:21,820
Hat eljárások Nick írta.

1276
01:04:21,820 --> 01:04:26,800
Három közülük kap egy számot,
egy piros, egy zöld, vagy egy kék érték.

1277
01:04:26,800 --> 01:04:28,787
Három közülük beállíthatja az értéket.

1278
01:04:28,787 --> 01:04:30,620
És ezek az aláhúzás
csak helyőrzők,

1279
01:04:30,620 --> 01:04:32,600
így meg kell tudni, hogy mik ezek.

1280
01:04:32,600 --> 01:04:36,240
>> Tehát ez a három funkció,
Az első ilyen dolog

1281
01:04:36,240 --> 01:04:39,190
lesz egy x-koordináta,
és a második ezeket a dolgokat

1282
01:04:39,190 --> 01:04:40,700
lesz egy y-koordináta.

1283
01:04:40,700 --> 01:04:44,650
Más szóval, amely DOT, amely
pixel akarsz, hogy a zöld,

1284
01:04:44,650 --> 01:04:46,480
kap a kék, kap a piros.

1285
01:04:46,480 --> 01:04:51,440
És akkor itt ez lesz
x, ez lesz egy y érték,

1286
01:04:51,440 --> 01:04:55,379
és ez lesz a szám.

1287
01:04:55,379 --> 01:04:57,170
Tehát lássuk az első
sorban ennek együtt

1288
01:04:57,170 --> 01:05:00,220
aztán majd hagyjuk meg
próbálja levezetni a többit.

1289
01:05:00,220 --> 01:05:03,100
Tehát egy az utasításokat
Az ezen az oldalon, meg kell

1290
01:05:03,100 --> 01:05:08,960
hogy növelje a vörös faktorral
10, és el kell távolítani a zöld

1291
01:05:08,960 --> 01:05:09,930
és távolítsa el a kék.

1292
01:05:09,930 --> 01:05:12,410
Kezdjük az utóbbival forgatókönyveket.

1293
01:05:12,410 --> 01:05:17,760
Tehát, ha azt akarom, hogy, és megyek
behúzni segítségével néhány terek,

1294
01:05:17,760 --> 01:05:22,291
ha azt akarom, hogy állítsa be a piros,
A zöld, illetve a kék érték,

1295
01:05:22,291 --> 01:05:23,540
Megyek tegye a következőket.

1296
01:05:23,540 --> 01:05:31,280
>> Kép, im.setBlue, majd
alapján én itt található utasításokat,

1297
01:05:31,280 --> 01:05:36,700
Mi az a három dolog, kéne
írja belsejében zárójelben most?

1298
01:05:36,700 --> 01:05:41,960
Kell az x értéket, a
y értéket, és milyen számot

1299
01:05:41,960 --> 01:05:48,770
rakjam itt, ha én szeretnék megszabadulni
A kék alapján ez a történet itt?

1300
01:05:48,770 --> 01:05:49,630
Csak nulla.

1301
01:05:49,630 --> 01:05:52,420
Ha azt akarom, nem kék, én csak
fog változni, hogy nulla.

1302
01:05:52,420 --> 01:05:54,465
>> Most csak összefoglaljuk, amit ez csinál.

1303
01:05:54,465 --> 01:05:56,970

1304
01:05:56,970 --> 01:06:01,170
Van itt ilyen top
második és harmadik sor,

1305
01:06:01,170 --> 01:06:04,080
Azt állította, két hurkot,
ágyazott hurkok, ha

1306
01:06:04,080 --> 01:06:08,360
majd, hogy megy, hogy a hatás
A halad balról jobbra,

1307
01:06:08,360 --> 01:06:11,590
fentről lefelé át az összes X
értékek és az összes Y értékek.

1308
01:06:11,590 --> 01:06:15,167
Mert megint egy kép
Csak egy rács a sorok és oszlopok.

1309
01:06:15,167 --> 01:06:17,000
Tehát ez fog kapni
megszabadulni az összes kék.

1310
01:06:17,000 --> 01:06:18,627
Hadd hagyjuk a következő sorban az Ön számára.

1311
01:06:18,627 --> 01:06:20,043
Hogyan lehet megszabadulni az összes zöld?

1312
01:06:20,043 --> 01:06:23,747

1313
01:06:23,747 --> 01:06:25,140
>> KÖZÖNSÉG: [hallható]

1314
01:06:25,140 --> 01:06:26,151
>> DAVID MALAN: Nice.

1315
01:06:26,151 --> 01:06:28,260
>> KÖZÖNSÉG: [hallható]

1316
01:06:28,260 --> 01:06:30,850
>> DAVID MALAN: Nice.

1317
01:06:30,850 --> 01:06:36,120
És fogok kicsinyítés és csak úgy
érdekel az, hogy már nem történt semmilyen elírás.

1318
01:06:36,120 --> 01:06:39,390
És ha elégedett
azzal, amit tettél,

1319
01:06:39,390 --> 01:06:42,936
kattints erre a gombra
Run / Mentés és mit kapsz.

1320
01:06:42,936 --> 01:06:46,982

1321
01:06:46,982 --> 01:06:48,690
És ismét tettünk
Csak három változás.

1322
01:06:48,690 --> 01:06:52,130
Mi kell hagyni, hogy az első
megjegyzést, és helyette

1323
01:06:52,130 --> 01:06:53,575
a két sornyi kódot.

1324
01:06:53,575 --> 01:06:55,742

1325
01:06:55,742 --> 01:06:58,450
És ez rendben van, ha meg kell, hogy elérje
A Run / Save gombot néhányszor

1326
01:06:58,450 --> 01:07:01,190
rögzíteni valamit.

1327
01:07:01,190 --> 01:07:03,610
>> És hadd nagyítás én
kódot, így átírhatja.

1328
01:07:03,610 --> 01:07:04,110
Jó.

1329
01:07:04,110 --> 01:07:08,720
Látom Andrew mi
Úgy tűnik, hogy a hiba.

1330
01:07:08,720 --> 01:07:11,110
Ő csak kapott egy nagy fekete
téglalap az ő képernyőjén.

1331
01:07:11,110 --> 01:07:13,120
Tudja valaki másnak
egy nagy fekete téglalap?

1332
01:07:13,120 --> 01:07:13,390
>> KÖZÖNSÉG: Igen.

1333
01:07:13,390 --> 01:07:14,360
>> DAVID MALAN: Nagy fekete téglalap?

1334
01:07:14,360 --> 01:07:16,068
OK, úgyhogy gondolom
mit jelent ez.

1335
01:07:16,068 --> 01:07:20,560
Azt mondta, hogy nulla, nulla, nulla,
így nem zöld, nem piros, nem kék,

1336
01:07:20,560 --> 01:07:21,980
fog adni a fekete.

1337
01:07:21,980 --> 01:07:24,467
És kiderül, hogy
a legtöbb laptop

1338
01:07:24,467 --> 01:07:25,800
Csak nem elég hűséget.

1339
01:07:25,800 --> 01:07:27,750
Nem lehet eléggé elmondani ott
valójában ott valami.

1340
01:07:27,750 --> 01:07:30,340
És ha a fajta talán sovány
a képernyő előre és hátra,

1341
01:07:30,340 --> 01:07:32,850
Talán látsz
kis valamit ott?

1342
01:07:32,850 --> 01:07:34,820
Lehet, egyfajta, egyfajta?

1343
01:07:34,820 --> 01:07:36,640
Ez nem teljesen fekete.

1344
01:07:36,640 --> 01:07:38,050
>> KÖZÖNSÉG: [hallható]

1345
01:07:38,050 --> 01:07:39,510
>> DAVID MALAN: Spoiler!

1346
01:07:39,510 --> 01:07:42,610
Van némi vörös ott van, de
emlékszik a műszaki

1347
01:07:42,610 --> 01:07:44,940
A probléma, Nick tónusú le.

1348
01:07:44,940 --> 01:07:47,860
Ő deszaturált némileg,
de nem egészen a nulla.

1349
01:07:47,860 --> 01:07:51,670
Tehát ha azt akarjuk, hogy magasztalja az összeget
piros, hadd javasolni ezt a trükköt.

1350
01:07:51,670 --> 01:07:53,750
Hadd nagyítás a monitoron.

1351
01:07:53,750 --> 01:07:58,678
És hadd menjen előre, és azt mondják,
összeg megegyezik im.getRed (x, y).

1352
01:07:58,678 --> 01:08:02,440

1353
01:08:02,440 --> 01:08:05,790
>> Ezt a kódsort, hogy nekem
egy úgynevezett változó.

1354
01:08:05,790 --> 01:08:09,643
Van önkényesen, de vitathatatlanul
ésszerűen felhívtam a változó milyen,

1355
01:08:09,643 --> 01:08:10,143
látszólag?

1356
01:08:10,143 --> 01:08:13,530

1357
01:08:13,530 --> 01:08:14,340
Összeg.

1358
01:08:14,340 --> 01:08:14,980
Csak összeget.

1359
01:08:14,980 --> 01:08:16,960
Tudtam volna nevezte
bármi, amit akar, de én

1360
01:08:16,960 --> 01:08:19,490
Ezzel a többi funkció
hogy én korábban leírt

1361
01:08:19,490 --> 01:08:25,359
hogy az összeget a piros x vessző y.

1362
01:08:25,359 --> 01:08:27,520
Miért tettem ezt?

1363
01:08:27,520 --> 01:08:30,004
Mit akar itt csinálni?

1364
01:08:30,004 --> 01:08:32,910

1365
01:08:32,910 --> 01:08:33,619
Meg kell add--

1366
01:08:33,619 --> 01:08:34,493
KÖZÖNSÉG: [hallható]

1367
01:08:34,493 --> 01:08:36,279
DAVID MALAN: Igen, talán
szorozza meg 10.

1368
01:08:36,279 --> 01:08:38,862
És ha nem tudja ezt, én
fog menni előre, és erre a célra.

1369
01:08:38,862 --> 01:08:42,060
Megyek megy előre, és
mondjuk, azt akarjuk, hogy a piros szín mennyisége

1370
01:08:42,060 --> 01:08:46,550
Azt akarom, hogy bármi
ez a piros, szor 10,

1371
01:08:46,550 --> 01:08:50,330
és a csillag, a csillag a
billentyűzet the-- ne használjon x.

1372
01:08:50,330 --> 01:08:51,569
Használja a csillag.

1373
01:08:51,569 --> 01:08:55,350
Így szaporodnak a dolgokat
a legtöbb programozási nyelvben.

1374
01:08:55,350 --> 01:08:59,790
>> Így szerint Kareem intuíció,
a változóban tárolt úgynevezett összeg,

1375
01:08:59,790 --> 01:09:03,649
hogy mennyi vörös szeretnék a helyszínen xy.

1376
01:09:03,649 --> 01:09:11,500
Hogy most, tudom, hogy hogy
Pixel van ez a szám?

1377
01:09:11,500 --> 01:09:12,859
Már csináltam ilyet.

1378
01:09:12,859 --> 01:09:17,666
Te meg a zöld és a
kék nincs értéke, hogy nulla.

1379
01:09:17,666 --> 01:09:18,540
KÖZÖNSÉG: [hallható]

1380
01:09:18,540 --> 01:09:20,040
DAVID MALAN: Igen, jól
nem akarja, hogy 10.

1381
01:09:20,040 --> 01:09:21,460
Már nem a matematika itt.

1382
01:09:21,460 --> 01:09:24,779
Tehát egyre értékét piros,
amely egy alacsony száma, feltehetően.

1383
01:09:24,779 --> 01:09:26,180
Mi megszorozzuk fel 10.

1384
01:09:26,180 --> 01:09:29,139
Mit szeretne tenni
a változó összeget most?

1385
01:09:29,139 --> 01:09:30,130
>> KÖZÖNSÉG: [hallható]

1386
01:09:30,130 --> 01:09:30,880
>> DAVID MALAN: Nice.

1387
01:09:30,880 --> 01:09:34,616
Tehát im.set-- mi?

1388
01:09:34,616 --> 01:09:35,640
>> KÖZÖNSÉG: setRed.

1389
01:09:35,640 --> 01:09:39,760
>> DAVID MALAN: setRed, a helyszínen xy.

1390
01:09:39,760 --> 01:09:40,260
Igen.

1391
01:09:40,260 --> 01:09:41,200
És csak az összeget.

1392
01:09:41,200 --> 01:09:44,257
Más szavakkal, egy változó
egy átmeneti helykitöltő

1393
01:09:44,257 --> 01:09:45,840
hogy meg tudja fogalmazni, amit akarsz itt.

1394
01:09:45,840 --> 01:09:48,680
Mi történetesen amivel egy
szám benne, abban a pillanatban.

1395
01:09:48,680 --> 01:09:51,569
Már szorozva azt
10, hogy ez nagyobb.

1396
01:09:51,569 --> 01:09:56,480
És most helyett, hogy a változó
mint a harmadik érv, vagy bemeneti

1397
01:09:56,480 --> 01:09:57,810
beállítani piros.

1398
01:09:57,810 --> 01:10:00,440
És így, hogy ha egyszer
befejezni ezt, és tudomásul veszik

1399
01:10:00,440 --> 01:10:02,330
A félig kettőspont és a zárójelben.

1400
01:10:02,330 --> 01:10:06,290
>> Menj előre, és kattintson
run / menteni újra, és meg

1401
01:10:06,290 --> 01:10:10,690
kell látni, varázslatosan, mi volt valójában
ott. [? ARWA,?], Mi van ott?

1402
01:10:10,690 --> 01:10:16,412
Az Eiffel-torony teljes körű
piros, nem egészen sötét.

1403
01:10:16,412 --> 01:10:17,870
meg kell még nyilvánvaló most, igaz?

1404
01:10:17,870 --> 01:10:18,840
RENDBEN.

1405
01:10:18,840 --> 01:10:20,215
És Andrew, nincs több fekete doboz?

1406
01:10:20,215 --> 01:10:21,090
KÖZÖNSÉG: [hallható]

1407
01:10:21,090 --> 01:10:22,180
DAVID MALAN: Rendben.

1408
01:10:22,180 --> 01:10:23,610
Így fogom tartani ezt a képernyőn.

1409
01:10:23,610 --> 01:10:27,010
Ha azt szeretnénk, hogy játszani ezt a
Később, én újra ezt az Ön számára.

1410
01:10:27,010 --> 01:10:29,140
Azonban ez a kód itt pontosan ezt tette.

1411
01:10:29,140 --> 01:10:31,460
Miért nem csinálunk egy másik.

1412
01:10:31,460 --> 01:10:33,880
Hadd lépjünk le kissé.

1413
01:10:33,880 --> 01:10:36,760
>> Tehát ebben az esetben, a kivetítő
nem igazán csinálni igazságszolgáltatás.

1414
01:10:36,760 --> 01:10:40,486
De a képernyők, akkor valószínűleg
Van egy nagyon piros, és nagyon fekete doboz.

1415
01:10:40,486 --> 01:10:42,610
Ez is egy puzzle, amely
mutat valami híres.

1416
01:10:42,610 --> 01:10:44,193
Azonban a kép torzult.

1417
01:10:44,193 --> 01:10:47,740
Az igazi kép, ezúttal a
a kék és zöld értékeket.

1418
01:10:47,740 --> 01:10:51,820
Azonban ők minden osztva
20 így az értékek nagyon kicsi.

1419
01:10:51,820 --> 01:10:54,660
A piros értékek csak
véletlen számok, a zaj.

1420
01:10:54,660 --> 01:10:57,190
Undo ezek a torzulások
hogy felfedje az igazi képet.

1421
01:10:57,190 --> 01:10:59,200
>> Tehát Nick majd megmondja, hogy mit kell tennie.

1422
01:10:59,200 --> 01:11:04,290
Állítsa be a piros értékek nullára, és
akkor nem rontja el, mi az.

1423
01:11:04,290 --> 01:11:07,110
Majd szorozzuk meg a kék
és a zöld értékek 20.

1424
01:11:07,110 --> 01:11:09,820
Tehát majdnem
ugyanaz a program, mint korábban,

1425
01:11:09,820 --> 01:11:11,380
de te megfordult a folyamat.

1426
01:11:11,380 --> 01:11:13,780
És én tettem kódot
előtt a képernyőn esetén

1427
01:11:13,780 --> 01:11:16,650
azt szeretnénk, hogy utalja vissza az
vagy játszani tovább, hogy az egyik.

1428
01:11:16,650 --> 01:11:18,100
Hadd fókuszálva az adott.

1429
01:11:18,100 --> 01:11:21,450
De megoldani réz kép
puzzle, a kettes számú.

1430
01:11:21,450 --> 01:11:37,623

1431
01:11:37,623 --> 01:11:40,580
>> KÖZÖNSÉG: [hallható]

1432
01:11:40,580 --> 01:11:44,010
>> DAVID MALAN: OK, így ez vagyok
nem megy, hogy annyi tippeket.

1433
01:11:44,010 --> 01:11:47,220
Szóval would-- ó, hadd
lásd, van egy elírás itt.

1434
01:11:47,220 --> 01:11:49,621
Tehát ne feledd, ez itt
valójában szüksége van, hogy menjen oda.

1435
01:11:49,621 --> 01:11:52,870
Tehát mi azt javaslom, ha azt akarjuk,
összpontosít ez, ott van a válasz.

1436
01:11:52,870 --> 01:11:57,060
Ha azt szeretnénk, hogy átírását, hogy
kapjon az első munkanapon.

1437
01:11:57,060 --> 01:11:59,910
És akkor tudod használni, hogy a
ihletet a másodikat.

1438
01:11:59,910 --> 01:12:02,230
Szép.

1439
01:12:02,230 --> 01:12:02,730
Jó.

1440
01:12:02,730 --> 01:12:05,430

1441
01:12:05,430 --> 01:12:08,180
>> És a furcsa,
Ez egy egyszerű példa

1442
01:12:08,180 --> 01:12:11,080
A tudomány vagy művészet
úgynevezett szteganográfia

1443
01:12:11,080 --> 01:12:14,100
a művészet bujkál információk a képeken.

1444
01:12:14,100 --> 01:12:16,890
Jellemzően a képeket lehet
vízjellel nagyon otrombán

1445
01:12:16,890 --> 01:12:19,500
a logó az alján
sarok, de tisztán, akkor

1446
01:12:19,500 --> 01:12:22,070
lehet sokkal kifinomultabb
róla, és valójában

1447
01:12:22,070 --> 01:12:25,050
elrejtése más képek a Képek
valahogy ezzel a technikával.

1448
01:12:25,050 --> 01:12:59,890

1449
01:12:59,890 --> 01:13:05,770
>> Vegyünk egy másik 30 másodperc, és aztán
legalább be, amit látnod kell.

1450
01:13:05,770 --> 01:13:08,330
És én hagyja el a harmadik
ont egy otthoni edzés,

1451
01:13:08,330 --> 01:13:11,353
Ha szeretne többet egy
kihívás ezen a hétvégén.

1452
01:13:11,353 --> 01:13:18,240

1453
01:13:18,240 --> 01:13:20,390
És azt hiszem, Andrew talán
ütött először.

1454
01:13:20,390 --> 01:13:22,645
Mi a második kép, Andrew?

1455
01:13:22,645 --> 01:13:23,920
>> KÖZÖNSÉG: Szabadság-szobor.

1456
01:13:23,920 --> 01:13:28,500
>> DAVID MALAN: Szabadság-szobor
lesz a válasz ebben az időben.

1457
01:13:28,500 --> 01:13:31,140
Tehát újra, csak néhány egyszerű
példák, a cél az, amely

1458
01:13:31,140 --> 01:13:35,040
az, hogy érzékeltessem, milyen
mi már lefordított képi Scratch

1459
01:13:35,040 --> 01:13:40,410
blokkok több bosszantó és több
bonyolult kódot, de minden ötletet

1460
01:13:40,410 --> 01:13:42,980
még mindig pontosan ugyanaz,
jóllehet a bevezetése

1461
01:13:42,980 --> 01:13:48,380
most fogalmának egy változó, mivel
képes tárolni valamit átmenetileg.

1462
01:13:48,380 --> 01:13:51,750
>> Csináljunk még egy hands-on,
csak azért, hogy most csatlakoztassa a pontok

1463
01:13:51,750 --> 01:13:53,880
hogy valami egy kicsit több valós.

1464
01:13:53,880 --> 01:13:56,610
Ha készen áll, ha tehetnék
megy ez az URL a képernyőn.

1465
01:13:56,610 --> 01:14:00,610
Ez is a másolatot a
diák, developers.google.com/maps~~V.

1466
01:14:00,610 --> 01:14:03,660
Nézzük valóban tenni valamit
igazi, hogy úgy mondjam, az interneten

1467
01:14:03,660 --> 01:14:07,600
a Google Maps API, vagy
application programming interface,

1468
01:14:07,600 --> 01:14:08,940
a következő módon.

1469
01:14:08,940 --> 01:14:12,341
>> Google, mint sok vállalat,
ad egy csomó ingyenes funkciót

1470
01:14:12,341 --> 01:14:14,840
amelyek segítségével építeni a
saját érdekes alkalmazásokat.

1471
01:14:14,840 --> 01:14:18,890
Sőt, ha valaha is használt
Uber kap egy taxit, vagy egy autó,

1472
01:14:18,890 --> 01:14:21,640
Ön valószínűleg tudja, hogy über van
A térkép és ez azt mutatja, autók rajta.

1473
01:14:21,640 --> 01:14:24,870
Azaz, a legjobb, ahogy csak tudok
mondja, a Google Maps API-t.

1474
01:14:24,870 --> 01:14:28,884
Ezek tulajdonképpen a Google Maps,
de Uber nem térképészeti cég,

1475
01:14:28,884 --> 01:14:31,050
sem lenne az a
Különösen érdekes probléma

1476
01:14:31,050 --> 01:14:33,510
hogy megoldja a tetején a
autószerviz probléma.

1477
01:14:33,510 --> 01:14:35,510
És így állunk,
megint a vállán

1478
01:14:35,510 --> 01:14:37,520
mások, a Google ebben az esetben.

1479
01:14:37,520 --> 01:14:42,850
Így használja a Google Maps, de a saját
szervizek és más hasonló funkciók.

1480
01:14:42,850 --> 01:14:47,770
>> Így megyünk, hogy kihasználják
Az ezt tegye a következőket.

1481
01:14:47,770 --> 01:14:50,230
És ha már ment túl gyorsan,
csak hívj át egy pillanat alatt.

1482
01:14:50,230 --> 01:14:53,500
Örülök, hogy újra bedugni néhány kép dolgokat.

1483
01:14:53,500 --> 01:14:56,290
Meg kell látni magad
egy oldal, mint ez.

1484
01:14:56,290 --> 01:14:58,230
Tehát a Google szép, és
ők a legjobbak között

1485
01:14:58,230 --> 01:15:01,364
Az, hogy nem csak API-kat,
de a szabad API-kat

1486
01:15:01,364 --> 01:15:02,780
lehet játszani, vagy használjon a kereskedelemben.

1487
01:15:02,780 --> 01:15:06,450
Ők megkezdi a töltést, ha a használati
magas, de mentem előre előre

1488
01:15:06,450 --> 01:15:10,490
és aláírt minket egy ingyenes fiókot
hogy remélhetőleg 10 számítógépek

1489
01:15:10,490 --> 01:15:12,480
nem zárja minket váratlanul.

1490
01:15:12,480 --> 01:15:14,320
Így remélhetőleg ez
bemutató fog működni.

1491
01:15:14,320 --> 01:15:18,840
>> Azt tapasztaljuk, hogy azok API-k
Android, iOS, webes és internetes szolgáltatások,

1492
01:15:18,840 --> 01:15:19,620
bármi legyen is az.

1493
01:15:19,620 --> 01:15:20,700
Nézzük összpontosít interneten.

1494
01:15:20,700 --> 01:15:26,560
Tehát kattintson a rózsaszín doboz, web, és hogy
vezet, remélhetőleg egy oldalra

1495
01:15:26,560 --> 01:15:27,630
itt.

1496
01:15:27,630 --> 01:15:29,335
És van egy csomó API-kat.

1497
01:15:29,335 --> 01:15:31,210
És ez lehet egy kicsit
nyomasztó az első,

1498
01:15:31,210 --> 01:15:33,000
de én irányítani minket, mit akarunk.

1499
01:15:33,000 --> 01:15:38,500
>> A bal felső sarokban van a Google Maps
JavaScript API, a JavaScript API.

1500
01:15:38,500 --> 01:15:40,380
Így megy előre, és kattintson, hogy az egyik.

1501
01:15:40,380 --> 01:15:49,360
És hogy vezet, most a
következő oldal, demók és a minta kódot.

1502
01:15:49,360 --> 01:15:51,190
Hadd kicsinyítés itt.

1503
01:15:51,190 --> 01:15:56,300
És hadd minket az alábbiakra: lépjünk le
ahol azt mondja gyorsindítás lépéseket.

1504
01:15:56,300 --> 01:15:57,970
A képernyő kell kinéznie, mint az enyém.

1505
01:15:57,970 --> 01:16:01,130
>> És van két lépést, hogy
egy gombot, és indítsa el a fejlődő.

1506
01:16:01,130 --> 01:16:04,190
Már megtettem az első lépés a
minket, kapok egy úgynevezett kulcsot.

1507
01:16:04,190 --> 01:16:05,320
És ez egy közös ötlet.

1508
01:16:05,320 --> 01:16:09,210
Egy API kulcs általában csak
nagy véletlen számot vagy karakterláncot

1509
01:16:09,210 --> 01:16:11,130
hogy elvárják
hogy illessze be a kódot,

1510
01:16:11,130 --> 01:16:15,280
hogy a Google tudja, hogy ki vagy, ha
Ön használja a szolgáltatás, a API-t.

1511
01:16:15,280 --> 01:16:17,370
Nem azt jelenti, vagyunk
töltődik semmit.

1512
01:16:17,370 --> 01:16:21,030
És most, kattintson helyett
Egy kattintva indítsa el a fejlődő.

1513
01:16:21,030 --> 01:16:25,990
Ha tudna csak integetni nekem
vége, ha nem tudja, hol vagyunk.

1514
01:16:25,990 --> 01:16:28,040
>> Ezért most is csak karcolja
felület, de itt mi

1515
01:16:28,040 --> 01:16:31,000
Azt hittem lesz kényszerítő
az, hogy valójában mindannyian,

1516
01:16:31,000 --> 01:16:34,240
segítségével Cloud9 az egyik ablakban, és
Ez a bemutató egy másik ablakban,

1517
01:16:34,240 --> 01:16:37,120
lets valójában a saját
alkalmazás létrehozásához és működtetéséhez

1518
01:16:37,120 --> 01:16:40,920
hogy tartalmaz egy egyéni Google
Térkép a saját weboldal,

1519
01:16:40,920 --> 01:16:43,010
majd hozzáteszi, egy vagy két funkció.

1520
01:16:43,010 --> 01:16:45,520
De mi csak karcolja
felülete, amit tehetünk.

1521
01:16:45,520 --> 01:16:47,020
>> Tehát csak egy gyors biztonsági ellenőrzést.

1522
01:16:47,020 --> 01:16:49,740
Mindenki ezen az oldalon,
Google Maps JavaScript API?

1523
01:16:49,740 --> 01:16:50,872
Kell mondani a kezdetekhez.

1524
01:16:50,872 --> 01:16:53,330
Nem fogunk átmenni
az egész dolog, bármilyen eszközzel.

1525
01:16:53,330 --> 01:16:58,090
OK, egy másik lapon, ha nem
meg van nyitva, akkor menj be Cloud9

1526
01:16:58,090 --> 01:17:03,500
és kap magának, hogy csak
Új lap végül.

1527
01:17:03,500 --> 01:17:11,070
Tehát megint c9.io a tegnapi,
c9.io, és csak új fájlt hoz létre.

1528
01:17:11,070 --> 01:17:13,500
És megy előre, és hívás
azt, amit szeretne.

1529
01:17:13,500 --> 01:17:16,495
Felhívtam az enyém map.html.

1530
01:17:16,495 --> 01:17:17,870
Nevezzük semmit végződő .html.

1531
01:17:17,870 --> 01:17:23,930

1532
01:17:23,930 --> 01:17:26,580
És ha kell, durván
ahol én vagyok ebben a folyamatban

1533
01:17:26,580 --> 01:17:31,470
csak egy villogó prompt egy üres
lapon valami olyasmi map.html.

1534
01:17:31,470 --> 01:17:35,808

1535
01:17:35,808 --> 01:17:38,148
Vagy fájl új fájl ebben az időben.

1536
01:17:38,148 --> 01:17:41,960

1537
01:17:41,960 --> 01:17:48,000
>> És most, több mint a
Google Maps JavaScript API,

1538
01:17:48,000 --> 01:17:50,010
fogunk kihagyja
végig ezt a szöveget.

1539
01:17:50,010 --> 01:17:53,760
De észre, hogy helló világ
Valóban mindenhol, látod most.

1540
01:17:53,760 --> 01:17:58,020
Helló világ a nagy színes
Például egy csomó HTML.

1541
01:17:58,020 --> 01:18:03,590
Menj előre, és másolja csak azt
HTML, így a doc típusú tetején

1542
01:18:03,590 --> 01:18:08,810
egészen a közeli HTML tag, lépjen
előre, és másolja át az összes hogy-- ismét

1543
01:18:08,810 --> 01:18:14,430
ez alatt a hello world example--
és illessze be, hogy Cloud9 lapon

1544
01:18:14,430 --> 01:18:17,996
így most a képernyőn
meg kell nézni durván, mint az enyém.

1545
01:18:17,996 --> 01:18:22,280

1546
01:18:22,280 --> 01:18:24,520
>> És tudod menteni, de
Nem teher ez csak még.

1547
01:18:24,520 --> 01:18:26,290
Nézzük először pillantást
a kódot, és nézd meg, mi

1548
01:18:26,290 --> 01:18:29,110
nem következtethetett vagy megtanulni
attól, amit a Google

1549
01:18:29,110 --> 01:18:30,860
volt számunkra vakon másolás és beillesztés.

1550
01:18:30,860 --> 01:18:33,334
Ők csak segíteni akar,
szó, hogy itt kezdte,

1551
01:18:33,334 --> 01:18:35,500
de nincs olyan sok
komplexitás valójában van.

1552
01:18:35,500 --> 01:18:40,100

1553
01:18:40,100 --> 01:18:42,210
Bármilyen kérdése csak még?

1554
01:18:42,210 --> 01:18:43,790
Biztonságban vagyunk, hogy haladjanak előre?

1555
01:18:43,790 --> 01:18:44,330
RENDBEN.

1556
01:18:44,330 --> 01:18:46,800
>> Olyan gyorsan, nézzük csak ezt
néhány gyors alapvető ellenőrzést.

1557
01:18:46,800 --> 01:18:48,800
Vonal egyik, amit én
látni, és remélhetőleg, akkor

1558
01:18:48,800 --> 01:18:51,710
Lásd, mit jelent az, hogy DOCTYPE HTML?

1559
01:18:51,710 --> 01:18:52,385
Kareem, felidézni?

1560
01:18:52,385 --> 01:18:53,260
KÖZÖNSÉG: [hallható]

1561
01:18:53,260 --> 01:18:53,968
DAVID MALAN: Igen.

1562
01:18:53,968 --> 01:18:54,870
Itt jön a HTML 5.

1563
01:18:54,870 --> 01:18:57,950
Közben sorban kettő a
képernyő itt azt jelenti hé böngésző,

1564
01:18:57,950 --> 01:18:59,482
Itt jön az aktuális HTML.

1565
01:18:59,482 --> 01:19:01,440
Hármason van hé böngésző,
Itt jön a fejét.

1566
01:19:01,440 --> 01:19:04,260
Vonal négy, természetesen, hé
böngésző, itt jön a cím.

1567
01:19:04,260 --> 01:19:07,780
Mit jelent az ötös vonalon csinálni?

1568
01:19:07,780 --> 01:19:09,930
Tulajdonképpen ez nem
igazán semmit számunkra.

1569
01:19:09,930 --> 01:19:13,340
Ebben az esetben, csak átméretezi
Az oldal az alapértelmezett. Soros hathengeres,

1570
01:19:13,340 --> 01:19:16,140
mi még nem beszéltünk, de
meghatározza a karakterkódolást.

1571
01:19:16,140 --> 01:19:19,181
Van különböző módon kódolni a fájlokat,
különösen az idegen nyelveket.

1572
01:19:19,181 --> 01:19:21,100
UTF-8 csak hajlamos az alapértelmezett.

1573
01:19:21,100 --> 01:19:26,580
>> Tehát most fogjuk látni a sorban
Hét-től 16, CSS.

1574
01:19:26,580 --> 01:19:29,260
És bár már nem látott
mindezen dolgok előtt,

1575
01:19:29,260 --> 01:19:30,810
tudjuk milyen következtetni.

1576
01:19:30,810 --> 01:19:37,075
Tehát sorban nyolc eszközzel, hé böngésző, alkalmazni
az összes következő, melyhez két tag,

1577
01:19:37,075 --> 01:19:37,575
látszólag?

1578
01:19:37,575 --> 01:19:40,650

1579
01:19:40,650 --> 01:19:41,701
A HTML és a test szöveget.

1580
01:19:41,701 --> 01:19:43,200
Tehát a vessző az új dolog van.

1581
01:19:43,200 --> 01:19:46,140
És ez csak egy módja
megadásával több címke egyszerre.

1582
01:19:46,140 --> 01:19:47,640
>> Akkor megvan a kapcsos zárójelek.

1583
01:19:47,640 --> 01:19:51,170
Tehát úgy tűnik, ez azt jelzi a böngésző
hogy a papír magassága 100%.

1584
01:19:51,170 --> 01:19:54,170
Tehát akkor is, ha nagyon kevés
tartalmát, hogy az egész oldal,

1585
01:19:54,170 --> 01:19:55,530
hogy a dolog töltse ki az oldalt.

1586
01:19:55,530 --> 01:19:57,524
Hogy a térkép végül töltse ki az oldalt.

1587
01:19:57,524 --> 01:19:58,690
Margó, ez mit jelent?

1588
01:19:58,690 --> 01:20:01,559
Ez általában olyan, mint az önkényes
fehér térben a szélek körül

1589
01:20:01,559 --> 01:20:04,350
hogy bizonyos böngésző tervező csak
határozott legyen ott, mert

1590
01:20:04,350 --> 01:20:05,540
fajta teszi dolgok tisztább.

1591
01:20:05,540 --> 01:20:06,498
De mi nem akarjuk.

1592
01:20:06,498 --> 01:20:08,710
Azt akarjuk, hogy a térkép megy
egészen az éleket.

1593
01:20:08,710 --> 01:20:10,930
Padding, hasonló szellemiségben árrés.

1594
01:20:10,930 --> 01:20:14,980
Margók jelenti kívül, padding eszközök
belül, de ez ugyanaz a fajta foglalkozik.

1595
01:20:14,980 --> 01:20:17,520
Ez egy kicsit a puffer
közted és a széleket.

1596
01:20:17,520 --> 01:20:21,170
>> És akkor 13-as vonal jó
esély a gyors felülvizsgálat.

1597
01:20:21,170 --> 01:20:26,440
Mit éles map
Vagyis, vagy hashtag térkép jelent?

1598
01:20:26,440 --> 01:20:29,650
Mit jelent, hogy olvassa el, elvileg?

1599
01:20:29,650 --> 01:20:31,485
>> KÖZÖNSÉG: [hallható]

1600
01:20:31,485 --> 01:20:32,360
DAVID MALAN: Pontosan.

1601
01:20:32,360 --> 01:20:36,900
Ez a tulajdonság, ez CSS tulajdonság
vonatkozik, hogy csak egy dolog, a HTML-címke

1602
01:20:36,900 --> 01:20:41,180
hogy van egy azonosítója idézet, idézet vége "map".

1603
01:20:41,180 --> 01:20:44,460
És most nézzük gyorsan előre, lépjünk
aljára a fájl, amely

1604
01:20:44,460 --> 01:20:49,860
nem túl messze, és vegyük észre on-line
19, ha illessze pontosan olyan, mint én,

1605
01:20:49,860 --> 01:20:53,405
19 vezetéken van csak egy div, amely egy
felosztása a lapot, amely tegnap

1606
01:20:53,405 --> 01:20:54,820
úgynevezett téglalap alakú területet.

1607
01:20:54,820 --> 01:20:55,820
Ennek semmi benne.

1608
01:20:55,820 --> 01:20:57,550
Ez egy nyitott tag, közel tag.

1609
01:20:57,550 --> 01:20:59,490
De ez nem is egy egyedi azonosítót.

1610
01:20:59,490 --> 01:21:02,090
>> Tehát mi úgy tűnik, hogy
itt történik a Google

1611
01:21:02,090 --> 01:21:05,880
A readying a weboldalt
Van egy teljes 100% magasság,

1612
01:21:05,880 --> 01:21:09,680
és nincs keret, nincs tőke, mert
mit fogunk betenni

1613
01:21:09,680 --> 01:21:13,647
E div, melynek egyedi azonosító
térkép, egy valódi beágyazott térképen.

1614
01:21:13,647 --> 01:21:15,480
És azt akarjuk, hogy töltse
Az oldal, és nem csak

1615
01:21:15,480 --> 01:21:17,560
valami kis téglalap közepén.

1616
01:21:17,560 --> 01:21:24,220
Tehát 14. sor szintén hangsúlyozza a
térképpel kell egy magassága 100%.

1617
01:21:24,220 --> 01:21:29,220
>> Tehát most észre a sorok között 20
és 28, ez a JavaScript kódot.

1618
01:21:29,220 --> 01:21:33,020
És ez, annak ellenére, hogy
szintaktikailag egy kicsit furcsa,

1619
01:21:33,020 --> 01:21:34,730
Ott nem olyan sok folyik itt.

1620
01:21:34,730 --> 01:21:39,310
Összhangban 21, ez kijelenti
egy úgynevezett változó.

1621
01:21:39,310 --> 01:21:42,030
Ahelyett, hogy azt
összegek, mint tettük azt korábban,

1622
01:21:42,030 --> 01:21:44,500
mi pontosabban mondja
var, ami csak annyit jelent, változó.

1623
01:21:44,500 --> 01:21:46,520
Mi lehetett volna használni, hogy
Nick kódot, de nem tette, úgyhogy

1624
01:21:46,520 --> 01:21:48,190
nem zavar csinálja sem.

1625
01:21:48,190 --> 01:21:50,240
Ez egy változó nevű
térkép, és akkor ott van

1626
01:21:50,240 --> 01:21:53,360
egy függvény, ami
látszólag úgynevezett initMap.

1627
01:21:53,360 --> 01:21:55,780
>> Tehát ez olyan, mint a saját egyéni
puzzle darab Scratch.

1628
01:21:55,780 --> 01:21:58,830
Készítettünk egy darab
funkcionalitás úgynevezett initMap,

1629
01:21:58,830 --> 01:22:00,980
és akkor milyen következtetni
mi folyik itt.

1630
01:22:00,980 --> 01:22:02,930
A bal oldali,
megvan egy változó,

1631
01:22:02,930 --> 01:22:06,000
így fogunk tenni a következő
dolog benne, hogy a változó,

1632
01:22:06,000 --> 01:22:07,362
jobbról balra.

1633
01:22:07,362 --> 01:22:11,940
A jobb oldali mondja, hé
böngésző, adj egy új Google térkép.

1634
01:22:11,940 --> 01:22:16,490
És google.maps.map csak egy funky módon
A meghatározza, hogy ezt a funkciót

1635
01:22:16,490 --> 01:22:19,790
tartozik a Google Maps.

1636
01:22:19,790 --> 01:22:23,010
>> Miután a zárójelben, láttunk
ezt korábban, hé böngésző, hogy

1637
01:22:23,010 --> 01:22:29,210
nekem az elemeket az oldalon, a
tag az oldalon, amelynek egyedi azonosító is--

1638
01:22:29,210 --> 01:22:30,710
>> KÖZÖNSÉG: [hallható]

1639
01:22:30,710 --> 01:22:31,790
>> DAVID MALAN: --map.

1640
01:22:31,790 --> 01:22:35,770
És mi történik, nos,
ezt a sort együtt a 23. sort,

1641
01:22:35,770 --> 01:22:38,630
lényegében azt mondja,
hé böngésző, megy nekem

1642
01:22:38,630 --> 01:22:42,800
hogy az üres div az oldalon
akinek egyedi azonosító térkép,

1643
01:22:42,800 --> 01:22:45,600
mert azt szeretné szúrni
figyelembe it-- adja bele,

1644
01:22:45,600 --> 01:22:49,520
ha will-- egy csomó tartalom
ami történik, hogy jön le az internetről,

1645
01:22:49,520 --> 01:22:50,427
később.

1646
01:22:50,427 --> 01:22:52,010
És a Google mindent megtesz, hogy a számunkra.

1647
01:22:52,010 --> 01:22:55,350
>> Tehát ismét, a legvégén a nap,
itt van ez a példa az absztrakció.

1648
01:22:55,350 --> 01:22:58,610
Fogalmam sincs, hogy mi az a térkép
vagy hogyan kell végrehajtani egy térkép API-t.

1649
01:22:58,610 --> 01:22:59,460
Nem kell.

1650
01:22:59,460 --> 01:23:02,740
Csak meg kell mondani a térképen
hová tegye magát, és hagyja

1651
01:23:02,740 --> 01:23:04,880
alapjául szolgáló végrehajtási
részletek a Google.

1652
01:23:04,880 --> 01:23:08,190
Most van látszólag
két adat

1653
01:23:08,190 --> 01:23:11,940
hogy ez a példa
amely a Google API-t.

1654
01:23:11,940 --> 01:23:16,450
Úgy látszik, a térkép közepén,
és a nagyítási szintet, hogy úgy mondjam.

1655
01:23:16,450 --> 01:23:21,390
>> És nem mindenki ismeri fel ezeket
koordinátákat, a szélességi és hosszúsági?

1656
01:23:21,390 --> 01:23:24,364
Valószínűleg nem, de mehetünk vissza
A bemutató, szó szerint látni.

1657
01:23:24,364 --> 01:23:25,780
De majd meglátjuk, hogy csak egy pillanatra.

1658
01:23:25,780 --> 01:23:29,880
Nagyítási szint közötti érték, én nem
tudom, az egyik a 13, vagy valami ilyesmi.

1659
01:23:29,880 --> 01:23:32,880
Csak van köze, hogy milyen messze vagytok
nagyított, vagy ki, és ennyi.

1660
01:23:32,880 --> 01:23:35,690
És most a legvégén
Az oldal közlemény sorban 29--

1661
01:23:35,690 --> 01:23:39,960
ez egy kicsit csúnya, mert
ez wraps-- ezt a kódsort

1662
01:23:39,960 --> 01:23:44,570
ami letölti a
böngésző a Google tényleges API.

1663
01:23:44,570 --> 01:23:47,500
Az összes kódot, hogy a Google
mérnökök írva, hogy végre

1664
01:23:47,500 --> 01:23:50,000
ez az egész jellemzője beágyazható térképeket.

1665
01:23:50,000 --> 01:23:51,470
>> Most nem változtat semmin.

1666
01:23:51,470 --> 01:23:54,761
Ha követi végig, megy előre, és
csak menteni a fájlt, ha valóban

1667
01:23:54,761 --> 01:23:55,760
amim van.

1668
01:23:55,760 --> 01:23:57,370
Tovább a saját URL-t.

1669
01:23:57,370 --> 01:23:59,820
Akkor kattintson a Futtatás gombra
fel tetején, és megmondja

1670
01:23:59,820 --> 01:24:03,050
Ön az URL a web szerver újra.

1671
01:24:03,050 --> 01:24:06,010
És ez vezet, hogy egy új lapot.

1672
01:24:06,010 --> 01:24:11,910
Ha rákattint a Megnyitás
map.html, és esély te

1673
01:24:11,910 --> 01:24:15,520
fog kapni egy figyelmeztető,
hibaüzenetet, igen?

1674
01:24:15,520 --> 01:24:18,570
Hibaüzenet, hibaüzenetet?

1675
01:24:18,570 --> 01:24:21,170
>> Így sajnos a hiba
üzenet nem az, hogy a felvilágosító

1676
01:24:21,170 --> 01:24:23,890
ha valóban megnyitja a
konzol, hogy külön lapon mi

1677
01:24:23,890 --> 01:24:27,110
nyitogatta tegnap és
Egy kicsit korábban még ma.

1678
01:24:27,110 --> 01:24:29,445
De én botlott
ez a korábbi, így már

1679
01:24:29,445 --> 01:24:30,820
rájött, hogy mi a megoldás.

1680
01:24:30,820 --> 01:24:34,440
A mai diák, vagy
inkább a Cloud9, értesítés

1681
01:24:34,440 --> 01:24:36,430
hogy nem tettünk
valami szándékosan.

1682
01:24:36,430 --> 01:24:40,690
Figyeljük meg, hogy ez a script tag
29. sor, ha olvassa át,

1683
01:24:40,690 --> 01:24:44,440
ez olyan, mint maps.googleapis.com/
valami, valami, valami,

1684
01:24:44,440 --> 01:24:46,430
majd észre, hogy valaki,
Az egyik fejlesztő,

1685
01:24:46,430 --> 01:24:50,040
írta csupa nagybetűvel
levelek, az API kulcsot.

1686
01:24:50,040 --> 01:24:51,700
>> Meg kell illeszteni valamit ott.

1687
01:24:51,700 --> 01:24:53,450
És ez volt a lépés
Tettem nekünk korábban,

1688
01:24:53,450 --> 01:24:57,190
és megint lehet, hogy feketelistára
minket, ha hirtelen, 12 vagy többen

1689
01:24:57,190 --> 01:24:59,470
kezdi el használni ugyanazt a kulcsot,
de lássuk, mi történik.

1690
01:24:59,470 --> 01:25:03,030
Tehát, ha bemegy a mai
diák, egy csúszda később, van

1691
01:25:03,030 --> 01:25:07,070
ez nagyon funky látszó sztring.

1692
01:25:07,070 --> 01:25:12,230
Menj előre, és csak másolja és
illessze, ha azt mondja az API kulcsot.

1693
01:25:12,230 --> 01:25:15,120
Ez az egyik regisztráltam.

1694
01:25:15,120 --> 01:25:17,700
>> És biztosan nem próbálja
kiírni kézzel,

1695
01:25:17,700 --> 01:25:21,210
mert úgy érzi, tele
A helyesírási, potenciálisan.

1696
01:25:21,210 --> 01:25:23,260
Tehát csak másolja be ezt.

1697
01:25:23,260 --> 01:25:26,090
És ez megy, hogy a vonal
hosszabb, de most, csak hogy tisztázzuk,

1698
01:25:26,090 --> 01:25:29,540
meg kell nézni egy kicsit
mint ez, ahol kulcsfontosságú egyenlő nem

1699
01:25:29,540 --> 01:25:32,200
aktivált kiabál rád.

1700
01:25:32,200 --> 01:25:34,810
Az oldal mentéséhez, menjen vissza
a másik lapot, újra

1701
01:25:34,810 --> 01:25:36,770
és reméljük, hogy a térképet, hogy hol?

1702
01:25:36,770 --> 01:25:37,790
>> KÖZÖNSÉG: Ausztrália.

1703
01:25:37,790 --> 01:25:38,748
>> DAVID MALAN: Ausztrália.

1704
01:25:38,748 --> 01:25:41,200
Tehát nyilvánvalóan ezek a
GPS koordináták Ausztrália.

1705
01:25:41,200 --> 01:25:44,491
És hadd sétálni egy pillanatra
és segít, aki nem egészen ott,

1706
01:25:44,491 --> 01:25:47,729
de hadd javasolni, a Google, meg
A GPS koordináták a saját szülővárosában

1707
01:25:47,729 --> 01:25:48,770
vagy a saját hazájában.

1708
01:25:48,770 --> 01:25:51,436
És valószínűleg a Google viszont ez
fel, vagy a Wikipédia lehet mondani.

1709
01:25:51,436 --> 01:25:54,410
De választani két különböző értékeket
A szélesség és hosszúság,

1710
01:25:54,410 --> 01:25:57,530
visszamenni, és illessze be őket, és
majd töltse újra az oldalt mentés után

1711
01:25:57,530 --> 01:26:00,718
és nézd meg, hogy van egy
Térkép a saját szülővárosában.

1712
01:26:00,718 --> 01:26:04,500

1713
01:26:04,500 --> 01:26:08,042
>> És ha végeztél
hogy a nyomon követési challenge--

1714
01:26:08,042 --> 01:26:11,250
és adok egy kicsit kevesebb irányba,
szándékosan úgy, hogy szándékosan

1715
01:26:11,250 --> 01:26:13,791
kell küzdeni egy pár
percig a dokumentációt,

1716
01:26:13,791 --> 01:26:18,740
változtassa meg a térképen, hogy nem ez a
rajzfilmszerű alapértelmezett, de a műholdas térkép.

1717
01:26:18,740 --> 01:26:24,600
Szóval valóban látni a műholdas
képekkel helyett szép színek.

1718
01:26:24,600 --> 01:26:29,710
>> És a célzást adok
megváltozik a térkép típusát.

1719
01:26:29,710 --> 01:26:33,084
Menj vissza, hogy egyre
kezdett oldal inspirációt.

1720
01:26:33,084 --> 01:26:40,599

1721
01:26:40,599 --> 01:26:42,390
Ahogy már félretett,
ha keres,

1722
01:26:42,390 --> 01:26:44,250
van olyan sok
dolog, amit tehetünk.

1723
01:26:44,250 --> 01:26:46,380
Néhányan közületek már
megváltoztatta a térkép típusát.

1724
01:26:46,380 --> 01:26:49,890
De lehet do-- például, hadd
megy valami tettük a tanfolyam

1725
01:26:49,890 --> 01:26:52,050
Azt teach-- maps.cs50.net.

1726
01:26:52,050 --> 01:26:53,470
Egyik undergrads tette ezt.

1727
01:26:53,470 --> 01:26:58,890
Mi középre a térkép felett Harvard Yard és
overlay mindezen épület nevét,

1728
01:26:58,890 --> 01:27:01,070
és mi volt rá adni ezt.

1729
01:27:01,070 --> 01:27:04,270
Tehát, ha azt szeretnénk, hogy keresni,
például, Matthews Hall,

1730
01:27:04,270 --> 01:27:05,730
van egy kis legördülő menüt.

1731
01:27:05,730 --> 01:27:09,080
És azt hiszem, a Bootstrap, a
könyvtár korábban tárgyalt erre.

1732
01:27:09,080 --> 01:27:12,190
És ha rákattint a Matthews
Hall, azonnal

1733
01:27:12,190 --> 01:27:14,790
ugrik a térkép egy bizonyos
hely, és ez azt mutatja,

1734
01:27:14,790 --> 01:27:16,440
egy képet ebben a kis pop-up.

1735
01:27:16,440 --> 01:27:18,670
>> De még ez a kis
pop-up, azt nem hajtotta végre.

1736
01:27:18,670 --> 01:27:27,521
Ha lépjünk le a mi egyre
kezdett oldalon, és keresse meg az információs ablakokat,

1737
01:27:27,521 --> 01:27:29,770
látni fogja, hogy bizonyos
funkcionalitás te magad

1738
01:27:29,770 --> 01:27:31,561
felvehet, jóllehet
egy kicsit a komplexitás,

1739
01:27:31,561 --> 01:27:33,970
van egy úgynevezett információs ablak.

1740
01:27:33,970 --> 01:27:37,190
És ha rákattintok egy példát
itt, és ez az, ami szórakoztató,

1741
01:27:37,190 --> 01:27:40,530
meg tudod csinálni a dolgokat, mint ez,
rákattint egy marker, majd íme,

1742
01:27:40,530 --> 01:27:42,400
információ bukkan fel.

1743
01:27:42,400 --> 01:27:45,874
>> Így már nem is vezetett
elég funkciók JavaScript

1744
01:27:45,874 --> 01:27:49,040
festeni egy képet, hogy pontosan hogyan
lehet bekötni az összes ezt a cuccot össze,

1745
01:27:49,040 --> 01:27:50,706
de már olyan karcos a felület.

1746
01:27:50,706 --> 01:27:53,140
Sőt, amit most tettem, amikor
Rákattintottam, hogy marker,

1747
01:27:53,140 --> 01:27:55,819
volt kiváltó eseményt,
úgynevezett on click esemény.

1748
01:27:55,819 --> 01:27:57,610
És valóban látta egy
Amennyiben a korábbi ma,

1749
01:27:57,610 --> 01:28:00,670
az úgynevezett nyújtson esemény,
amikor mi voltunk megelőzése

1750
01:28:00,670 --> 01:28:02,490
a felhasználó keres macskák.

1751
01:28:02,490 --> 01:28:06,560
Így már egyfajta szedett és választottunk
az összes közül a különböző funkciókat,

1752
01:28:06,560 --> 01:28:08,990
hogy ad egyfajta remélhetőleg
Az mit tud valójában

1753
01:28:08,990 --> 01:28:11,000
köze egy kicsit
kényelmet programozás,

1754
01:28:11,000 --> 01:28:12,587
és teljesen szabad források.

1755
01:28:12,587 --> 01:28:15,856

1756
01:28:15,856 --> 01:28:18,770
>> Bármi kérdés?

1757
01:28:18,770 --> 01:28:19,790
Nem?

1758
01:28:19,790 --> 01:28:22,542
Ez az utolsó esély,
Legalább ma, pénteken,

1759
01:28:22,542 --> 01:28:25,000
hogy bármit le a mellkas
úgy, hogy kisétál

1760
01:28:25,000 --> 01:28:27,067
magabiztosan és kényelmes.

1761
01:28:27,067 --> 01:28:27,566
Igen.

1762
01:28:27,566 --> 01:28:29,740
>> KÖZÖNSÉG: Miért nem
hozzá még egy dolog?

1763
01:28:29,740 --> 01:28:32,720
>> DAVID MALAN: Te jó ég.

1764
01:28:32,720 --> 01:28:35,260
Meg kell pihenni a hétvégén, azt hiszem.

1765
01:28:35,260 --> 01:28:36,180
Más kérdés?

1766
01:28:36,180 --> 01:28:37,055
>> KÖZÖNSÉG: [hallható]

1767
01:28:37,055 --> 01:28:44,130

1768
01:28:44,130 --> 01:28:46,810
>> DAVID MALAN: Te can-- a
Internet Explorer, nyugodjék békében,

1769
01:28:46,810 --> 01:28:49,310
amivel tudja tenni VB
script, virtuális alap forgatókönyv,

1770
01:28:49,310 --> 01:28:50,643
de tényleg soha nem fogott.

1771
01:28:50,643 --> 01:28:52,490
Tehát a rövid válasz az, csak a JavaScript.

1772
01:28:52,490 --> 01:28:55,144

1773
01:28:55,144 --> 01:28:55,810
Más kérdés?

1774
01:28:55,810 --> 01:28:58,427

1775
01:28:58,427 --> 01:28:59,760
Rendben, hadd tegye ezt.

1776
01:28:59,760 --> 01:29:02,070
Hadd megragad kollégáink kívül.

1777
01:29:02,070 --> 01:29:04,500
Van néhány értékelést
formákat, hogy szeretnénk, ha mindenki

1778
01:29:04,500 --> 01:29:06,310
eltölteni néhány percet kitöltésével.

1779
01:29:06,310 --> 01:29:08,775
Azt akarják összegyűjteni, hogy a forma és bármely
mentességek hogy lehet, hogy kívülről.

1780
01:29:08,775 --> 01:29:10,240
Ők is tanúsítványokat.

1781
01:29:10,240 --> 01:29:12,380
Gondolom van
még néhány snack kívül.

1782
01:29:12,380 --> 01:29:14,360
Engedj ki ezeket, és ha
bármilyen kérdése van az időközben

1783
01:29:14,360 --> 01:29:17,120
Majd sétálni több egyénileg
és mi lehet a kezdéshez.

1784
01:29:17,120 --> 01:29:17,879
Természetesen.

1785
01:29:17,879 --> 01:29:18,754
KÖZÖNSÉG: [hallható]

1786
01:29:18,754 --> 01:29:26,737

1787
01:29:26,737 --> 01:29:28,570
DAVID MALAN: Ez
Általában igaz ezekben a napokban.

1788
01:29:28,570 --> 01:29:30,730
Természetesen az interneten
szoftvert, akkor támaszkodva

1789
01:29:30,730 --> 01:29:32,901
mások te vagy
esztétikailag segítségével dolgok

1790
01:29:32,901 --> 01:29:35,400
mint Bootstrap, így nem
végre kell hajtania az alacsony szintű

1791
01:29:35,400 --> 01:29:37,169
részletek menük és
gombokat, és ennyi.

1792
01:29:37,169 --> 01:29:39,210
Te támaszkodva valaki
mint a Google, így

1793
01:29:39,210 --> 01:29:42,050
Nem kell építeni egy Uber
az üzleti és a térképészeti üzleti,

1794
01:29:42,050 --> 01:29:44,850
és tetszőleges számú hasonló
alkalmazásokat is.

1795
01:29:44,850 --> 01:29:46,350
>> Tény, bejelentkezések népszerű is.

1796
01:29:46,350 --> 01:29:48,500
Ha már használt Spotify vagy
akárhány honlapot,

1797
01:29:48,500 --> 01:29:51,210
akkor jelentkezzen be, hogy néhány
honlapok segítségével Facebook.

1798
01:29:51,210 --> 01:29:53,350
Tehát mi szép, ott
olyan API-k bejelentkezések

1799
01:29:53,350 --> 01:29:56,570
manapság, így nem kell
hogy a saját felhasználói tábla

1800
01:29:56,570 --> 01:29:59,440
és az összes saját adatbázis
szükségszerűen ugyanolyan mértékben.

1801
01:29:59,440 --> 01:30:01,795
Akkor hagyja Facebook mindezt
Az, hogy a komplexitás az Ön számára.

1802
01:30:01,795 --> 01:30:03,920
Tehát ez egy izgalmas időszak,
Őszintén, a programozás,

1803
01:30:03,920 --> 01:30:07,200
mert olyan sok harmadik fél
szolgáltatásokat, melyeket építeni a tetején.

1804
01:30:07,200 --> 01:30:10,890
>> És ismét, az ár, amit fizetni kell
pénzügyi vagy leállás.

1805
01:30:10,890 --> 01:30:13,750
Ha a Google megy le,
így nem Uber, vitathatatlanul,

1806
01:30:13,750 --> 01:30:15,690
de talán ez egy
ésszerű kompromisszum.

1807
01:30:15,690 --> 01:30:18,040
És ismét, ez volt az egyik témája,
remélhetőleg, az elmúlt pár napban,

1808
01:30:18,040 --> 01:30:18,780
ezek kompromisszumokat.

1809
01:30:18,780 --> 01:30:20,738
És ritkán van megy
hogy egy helyes válasz.

1810
01:30:20,738 --> 01:30:25,700
Ez tényleg a jobb
két vagy több válasz.

1811
01:30:25,700 --> 01:30:26,682
>> Adja át ezeket körül.

1812
01:30:26,682 --> 01:30:36,830

1813
01:30:36,830 --> 01:30:41,110
>> És ezek Cloud9 számlákat továbbra
dolgozni, elméletileg örökre.

1814
01:30:41,110 --> 01:30:45,000
Lehet, hogy megtalálja, ha várni néhány napot,
vagy egy vagy több hétig, hogy jelentkezzen vissza őket,

1815
01:30:45,000 --> 01:30:49,170
ez eltarthat, mint egy vagy
Öt perc, hogy nyissa vissza,

1816
01:30:49,170 --> 01:30:54,090
de ez csak azért, mert fel
hogy aludni, hogy mentse a forrásokat.

1817
01:30:54,090 --> 01:31:10,527

