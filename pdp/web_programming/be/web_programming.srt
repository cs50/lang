1
00:00:00,000 --> 00:00:00,060

2
00:00:00,060 --> 00:00:01,560
>> DAVID Малання: Добра, мы вярнуліся.

3
00:00:01,560 --> 00:00:03,830
Так што для узбуджаюцца
заключэнне, наш апошні раздзел

4
00:00:03,830 --> 00:00:06,900
на вэб-праграмавання, які я
думалі, што мы выкарыстоўваем у якасці агульнага тэрміна

5
00:00:06,900 --> 00:00:08,440
каб захапіць некалькі пакінутых тэм.

6
00:00:08,440 --> 00:00:10,390
Так што ў канцы
дзень, мы на самай справе робім

7
00:00:10,390 --> 00:00:14,830
трохі практычны вэб-праграмаванне
з мовай называецца JavaScript.

8
00:00:14,830 --> 00:00:17,510
І я думаю, што мы будзем глядзець
на што-то звязана з выявамі

9
00:00:17,510 --> 00:00:20,040
і адкрываць нешта
таемна схаваны ў малюнку,

10
00:00:20,040 --> 00:00:23,230
а таксама зірнуць на Google
API Карт, прыкладнога праграмавання

11
00:00:23,230 --> 00:00:26,040
Інтэрфейс, як нешта
прадстаўнік ад тыпу праграмнага забеспячэння

12
00:00:26,040 --> 00:00:28,800
гэта ўсё больш і
свабодна даступных сёння.

13
00:00:28,800 --> 00:00:32,029
>> Але чаму не мы паглядзім
у якасці інгрэдыента ў гэтым свеце

14
00:00:32,029 --> 00:00:34,070
што мы збольшага было
прымаючы як належнае існуе

15
00:00:34,070 --> 00:00:36,720
на працягу некаторага часу, база дадзеных.

16
00:00:36,720 --> 00:00:39,150
За мінулыя суткі і
паўтара мы меркавалі

17
00:00:39,150 --> 00:00:42,910
што ў нас ёсць доступ да базы дадзеных, але
Якую праблему вырашыць базы дадзеных?

18
00:00:42,910 --> 00:00:45,540
Што гэта робіць для нас?

19
00:00:45,540 --> 00:00:47,030
Што гэта?

20
00:00:47,030 --> 00:00:48,679
>> ГЛЕДАЧЫ: [неразборліва]

21
00:00:48,679 --> 00:00:51,720
DAVID Малання: змяшчае ўсю інфармацыю,
ОК, а якія віды інфармацыі

22
00:00:51,720 --> 00:00:53,186
вы маглі б пакласці ў яго?

23
00:00:53,186 --> 00:00:54,590
>> ГЛЕДАЧЫ: [неразборліва]

24
00:00:54,590 --> 00:00:56,450
>> DAVID Малання: Любая інфармацыя
вы паклалі ў яго, вы атрымаеце назад.

25
00:00:56,450 --> 00:00:57,070
Гэта дакладна.

26
00:00:57,070 --> 00:01:01,900
А на тыповага вэб-сайта або вэб
дадатак, якія віды інфармацыі,

27
00:01:01,900 --> 00:01:03,385
у прыватнасці, маглі б вы паклалі ў?

28
00:01:03,385 --> 00:01:04,260
ГЛЕДАЧЫ: [неразборліва]

29
00:01:04,260 --> 00:01:05,051
DAVID Малання: Карыстальнікі.

30
00:01:05,051 --> 00:01:07,000
Так што карыстальнік?

31
00:01:07,000 --> 00:01:09,765
>> ГЛЕДАЧЫ: [неразборліва]

32
00:01:09,765 --> 00:01:11,640
DAVID Малання: OK, зарэгістравана
Карыстальнік сайта.

33
00:01:11,640 --> 00:01:15,100
А што гэта значыць
Захоўваць інфармацыю карыстальнікаў?

34
00:01:15,100 --> 00:01:17,260
Што складае карыстальніка?

35
00:01:17,260 --> 00:01:18,331
Карыстальнік мае тое, што?

36
00:01:18,331 --> 00:01:19,206
ГЛЕДАЧЫ: [неразборліва]

37
00:01:19,206 --> 00:01:21,040
DAVID Малання: Так, асабісты
дадзеныя, і мне гэта падабаецца.

38
00:01:21,040 --> 00:01:21,970
Давайце быць больш дакладным.

39
00:01:21,970 --> 00:01:25,275
Такім чынам, карыстальнік, як правіла, мае імя,
што яшчэ можа мець карыстальнік?

40
00:01:25,275 --> 00:01:26,150
ГЛЕДАЧЫ: [неразборліва]

41
00:01:26,150 --> 00:01:29,130
DAVID Малання: addr-- ОК,
таму спачатку імя, прозвішча.

42
00:01:29,130 --> 00:01:29,630
Гэта добра.

43
00:01:29,630 --> 00:01:31,463
На самай справе, давайце выправім
што, так як гэта будзе

44
00:01:31,463 --> 00:01:35,010
каб адкрыць магчымасць для
абмеркаванне, па-ранейшаму, у далейшым.

45
00:01:35,010 --> 00:01:39,090
Імя, прозвішча, пол.

46
00:01:39,090 --> 00:01:41,820

47
00:01:41,820 --> 00:01:43,481
ID нейкі.

48
00:01:43,481 --> 00:01:43,980
Што яшчэ?

49
00:01:43,980 --> 00:01:45,438
Я чуў сёе-тое яшчэ раней, таксама.

50
00:01:45,438 --> 00:01:51,600
Электронная пошта, паштовы адрас.

51
00:01:51,600 --> 00:01:58,170
>> Так што давайце спынімся там і зараз разгледзім
не тое, што мы захоўваем у базе дадзеных,

52
00:01:58,170 --> 00:02:01,980
но--, а не чаму, так як гэта, магчыма,
Відавочна, што пасля рэгістрацыі карыстальніка,

53
00:02:01,980 --> 00:02:03,730
Вы хочаце, каб памятаць пра іх на працягу некаторага часу.

54
00:02:03,730 --> 00:02:05,480
Вы не жадаеце яго
проста захоўваць у АЗП

55
00:02:05,480 --> 00:02:08,690
і быць forgotten-- так
давайце засяродзімся на як.

56
00:02:08,690 --> 00:02:11,700
>> Аказваецца, што ў
свет баз дадзеных,

57
00:02:11,700 --> 00:02:14,410
ёсць па меншай меры два тыпу ў гэтыя дні.

58
00:02:14,410 --> 00:02:20,010
Тое, што называецца базай дадзеных SQL,
Structured Query Language,

59
00:02:20,010 --> 00:02:24,770
або, сімпатычна па імені,
NoSQL, які не з'яўляецца SQL.

60
00:02:24,770 --> 00:02:26,980
І апошняя з'яўляецца
прыклад таго, што можа

61
00:02:26,980 --> 00:02:30,660
можна назваць аб'ектна-арыентаваным,
або аб'ект магазін, база дадзеных

62
00:02:30,660 --> 00:02:36,010
які захоўвае аб'екты, а не, прабачце
мне, як мы неўзабаве ўбачым, радка.

63
00:02:36,010 --> 00:02:41,800
>> Такім чынам, мы засяродзімся на імгненне на
першы з іх, а менавіта, SQL

64
00:02:41,800 --> 00:02:46,850
базы дадзеных, калі толькі таму, што
так добра знаёмыя ўжо, каму-небудзь

65
00:02:46,850 --> 00:02:51,070
які выкарыстаў Excel або
Табліцы Google або Apple,

66
00:02:51,070 --> 00:02:53,740
Колькасці або любы стандартны
праграмы электронных табліц,

67
00:02:53,740 --> 00:02:56,040
або, што тое ж самае, або
больш выдасканалена,

68
00:02:56,040 --> 00:02:58,610
нешта накшталт Microsoft
Доступ або Oracle

69
00:02:58,610 --> 00:03:03,890
або MySQL або PostgreSQL, усе з якіх
з'яўляюцца назвы прадуктаў для рэалізацый

70
00:03:03,890 --> 00:03:04,865
ў наступнай ідэі.

71
00:03:04,865 --> 00:03:10,350
>> Рэляцыйная база дадзеных проста
тое, што ёсць радкі і слупкі.

72
00:03:10,350 --> 00:03:12,850
І па радках і слупках,
Я літаральна маю на ўвазе нешта

73
00:03:12,850 --> 00:03:21,860
як гэта, так, дзе мы маглі б мець
імя поля і яго тып тут.

74
00:03:21,860 --> 00:03:25,800
І на самай справе, дазвольце мне
Цяпер пачынаюць адлюстраваць іх.

75
00:03:25,800 --> 00:03:29,420
Так што на самой справе, я не ведаю,
чаму я звярнуў асобную дыяграму.

76
00:03:29,420 --> 00:03:30,780
Давайце трымаць гэта проста.

77
00:03:30,780 --> 00:03:34,830
>> Мы маем права тут
Пачатак нашага стала, дзе

78
00:03:34,830 --> 00:03:40,150
гэтае імя поля
і гэта тып дадзеных,

79
00:03:40,150 --> 00:03:41,660
а таксама па тыпу Я маю на ўвазе наступнае.

80
00:03:41,660 --> 00:03:45,510
Ці з'яўляецца гэты лік, ці сапраўды гэта радок,
кароткая радок, як слова,

81
00:03:45,510 --> 00:03:49,340
гэта абзац, гэта
двайковыя дадзеныя, такія як малюнкі?

82
00:03:49,340 --> 00:03:51,980
І давайце проста дражніць гэта
адзін ад аднаго на імгненне.

83
00:03:51,980 --> 00:03:57,575
Такім чынам, першае імя, нумар,
Радок, вялікі кавалак text--

84
00:03:57,575 --> 00:03:58,450
ГЛЕДАЧЫ: [неразборліва]

85
00:03:58,450 --> 00:03:59,616
DAVID Малання: Так, таму радок.

86
00:03:59,616 --> 00:04:04,744
І ў кантэксце базы дадзеных, мы будзем
звычайна называем гэта поле CHAR.

87
00:04:04,744 --> 00:04:07,660
Скажу толькі паўкокс зараз, але мы
збіраецца ўдакладніць гэта ў адзін момант.

88
00:04:07,660 --> 00:04:09,180
Характар ​​поля.

89
00:04:09,180 --> 00:04:11,365
Прозвішча, верагодна, тое ж самае.

90
00:04:11,365 --> 00:04:11,865
Падлогу?

91
00:04:11,865 --> 00:04:16,230

92
00:04:16,230 --> 00:04:18,310
>> Мужчына ці жанчына, дык гэта тое,
можа быць полем сімвал.

93
00:04:18,310 --> 00:04:21,380
Гэта можа быць альбо цытата, канец цытаты
"Мужчынскі" або цытата, канец цытаты "жаночы"

94
00:04:21,380 --> 00:04:23,650
ці гэта можа быць м або п.

95
00:04:23,650 --> 00:04:26,540
Калі вы хочаце быць больш шырокім,
вам можа спатрэбіцца трэцяе значэнне

96
00:04:26,540 --> 00:04:28,640
або нейкай іншай вобласці ў цэлым.

97
00:04:28,640 --> 00:04:31,350
І такім чынам вы маглі б выкарыстоўваць дакладна няправільна.

98
00:04:31,350 --> 00:04:35,036
Поле можна назваць мужчынам, і
то можна сказаць, што сапраўдным або ілжывым.

99
00:04:35,036 --> 00:04:38,160
Але гэта не абавязкова захопліваць
ўсю інфармацыю, вы можаце захацець.

100
00:04:38,160 --> 00:04:41,118
>> Так атрымліваецца, што ёсць іншы тып
поля, якія могуць быць карыснымі тут

101
00:04:41,118 --> 00:04:46,040
у тыповай базе дадзеных, называецца
пералік, дзе гэта поле характар,

102
00:04:46,040 --> 00:04:50,480
але вы, дызайнер, дабрацца да
пералічыць магчымыя значэнні,

103
00:04:50,480 --> 00:04:54,630
як цытата, Unquote "мужчынскі", цытата,
Unquote "жаночы" і гэтак далей.

104
00:04:54,630 --> 00:04:57,620
Так што любое значэнне
знаходзіцца ў вашай базе даных,

105
00:04:57,620 --> 00:05:00,670
на самай справе характар ​​на аснове, але
ён павінен быць адным з гэтых значэнняў.

106
00:05:00,670 --> 00:05:03,520
Мы, верагодна, не жадалі б мець
пералiчэнне для імя або прозвішча.

107
00:05:03,520 --> 00:05:05,630
У адваротным выпадку мы мелі б
пералічыць, як імя

108
00:05:05,630 --> 00:05:09,570
паходзіць ад, літаральна кожны
магчыма першае імя і прозвішча.

109
00:05:09,570 --> 00:05:13,960
>> ОК, так што ID павінен быць ідэнтыфікатар?

110
00:05:13,960 --> 00:05:15,200
Так, так, можа быць некалькі.

111
00:05:15,200 --> 00:05:17,870
Так давайце прытрымлівацца
што на дадзены момант лік.

112
00:05:17,870 --> 00:05:22,010
І па колькасці, лік гэта
трохі занадта шырокі ў цяперашні час.

113
00:05:22,010 --> 00:05:23,900
На канец другога
дзень, я адчуваю, што мы

114
00:05:23,900 --> 00:05:25,280
павінен быць трохі больш дакладным.

115
00:05:25,280 --> 00:05:29,280
Нумар можа азначаць, як, гэта
можа быць нешта накшталт 1.236.

116
00:05:29,280 --> 00:05:31,500
І гэта, верагодна, не
што мы маем на ўвазе пад ідэнтыфікатарам.

117
00:05:31,500 --> 00:05:34,635
Што мы, верагодна, маем на ўвазе пад ідэнтыфікатарам?

118
00:05:34,635 --> 00:05:36,382
>> ГЛЕДАЧЫ: [неразборліва]

119
00:05:36,382 --> 00:05:38,590
DAVID Малання: О, добра, так што
можа быць, гэта нават не лік.

120
00:05:38,590 --> 00:05:42,840
Можа быць, гэта на самай справе унікальны ідэнтыфікатар
гэта радок, як імя карыстальніка.

121
00:05:42,840 --> 00:05:44,580
Так што цалкам, можа быць.

122
00:05:44,580 --> 00:05:46,730
Я думаю, што хто-то, верагодна,
меў на ўвазе лікавыя, хоць.

123
00:05:46,730 --> 00:05:48,460
Так што давайце застанемся з гэтым.

124
00:05:48,460 --> 00:05:49,320
Што гэта за нумар?

125
00:05:49,320 --> 00:05:51,960
Што больш precise-- цэлы лік.

126
00:05:51,960 --> 00:05:56,710
Так як лік 0, 1, 2, 3,
таму мы будзем называць гэта цэлы лік.

127
00:05:56,710 --> 00:05:58,909
І нават тады, я мог
быць прыдзіркі, гэта

128
00:05:58,909 --> 00:06:00,700
на самай справе не проста
агульная колькасць вы хочаце.

129
00:06:00,700 --> 00:06:04,340
Вы, верагодна, не хочуць адмоўныя значэння,
толькі таму, што ён проста адчувае сябе дзіўна.

130
00:06:04,340 --> 00:06:06,070
Вы, верагодна, хочаце станоўчыя цэлыя лікі.

131
00:06:06,070 --> 00:06:07,920
Такім чынам, вы можаце таксама выказаць
што ў базе даных,

132
00:06:07,920 --> 00:06:09,450
але цяпер мы будзем казаць цэлы лік.

133
00:06:09,450 --> 00:06:10,650
>> E-mail?

134
00:06:10,650 --> 00:06:13,550
Гэта, верагодна, просто-- што?

135
00:06:13,550 --> 00:06:14,460
>> ГЛЕДАЧЫ: [неразборліва]

136
00:06:14,460 --> 00:06:16,980
>> DAVID Малання: Гэты ліст,
але гэта знакі, ці не так?

137
00:06:16,980 --> 00:06:19,813
У яго ёсць толькі баязлівы характар, як
Эн "на знак" ці нешта іншае,

138
00:06:19,813 --> 00:06:21,580
але гэта па-ранейшаму знакавае поле.

139
00:06:21,580 --> 00:06:23,900
І паштовы адрас?

140
00:06:23,900 --> 00:06:25,360
Характар ​​поля.

141
00:06:25,360 --> 00:06:31,400
Так што гэта добры пачатак, але
давайце быць трохі больш дакладным у цяперашні час.

142
00:06:31,400 --> 00:06:34,540
>> Так атрымліваецца, што ў
базы дадзеных, вы часта

143
00:06:34,540 --> 00:06:39,120
ёсць выбар над больш вытанчанай
версіі гэтых рэчаў.

144
00:06:39,120 --> 00:06:44,330
На самай справе, у тыповай базе дадзеных SQL, SQL,
ці ў больш агульным плане, рэляцыйная база дадзеных,

145
00:06:44,330 --> 00:06:46,680
базы дадзеных з радамі
і калоны, часта

146
00:06:46,680 --> 00:06:53,610
атрымаць паказаць не толькі ад тыпу
field-- дазвольце мне зрабіць некаторую пакой here--

147
00:06:53,610 --> 00:06:56,600
але і даўжыню.

148
00:06:56,600 --> 00:06:59,900
>> Так як доўга гэтае імя?

149
00:06:59,900 --> 00:07:07,060
Я думаю, D-A-V-I-D. ОК, я атрымаў яго
верагодна, проста абураныя як палова

150
00:07:07,060 --> 00:07:11,260
людзей у пакоі, справа,
так як вашы імёны даўжэй, чым пяць

151
00:07:11,260 --> 00:07:16,608
лісты, так што пяць здаецца трохі эгаістычна
і наіўныя, так што лепшая каштоўнасць?

152
00:07:16,608 --> 00:07:19,320

153
00:07:19,320 --> 00:07:24,330
10, усё ў парадку, і я думаю,
мы ўсё ў парадку ў пакоі.

154
00:07:24,330 --> 00:07:26,254
13?

155
00:07:26,254 --> 00:07:27,541
30?

156
00:07:27,541 --> 00:07:29,540
Чаму б мне не ўзяць
Падыход раней, калі мы

157
00:07:29,540 --> 00:07:31,081
казалі пра масівах і памяці?

158
00:07:31,081 --> 00:07:32,450
Чаму я не магу проста сказаць, як 1000?

159
00:07:32,450 --> 00:07:35,260
Імя Ніхто не збіраецца
каб быць больш, за 1000.

160
00:07:35,260 --> 00:07:36,706
Зрушыць таму.

161
00:07:36,706 --> 00:07:38,005
>> ГЛЕДАЧЫ: [неразборліва]

162
00:07:38,005 --> 00:07:40,130
DAVID Малання: Так, гэта
марнатраўна, права, асабліва

163
00:07:40,130 --> 00:07:44,630
калі большасць імёнаў толькі пяць ці 10 ці
15 сімвалаў, гэта вельмі марнатраўна.

164
00:07:44,630 --> 00:07:45,810
Такім чынам, вы ведаеце, што?

165
00:07:45,810 --> 00:07:48,020
Гэта свайго роду складанае пытанне.

166
00:07:48,020 --> 00:07:51,721
Цяпер мы можам, вядома, аналізаваць англійская мова
і назвы любой іншай мовы ў

167
00:07:51,721 --> 00:07:54,470
і высветліць, добра, што такое
average-- сярэднім не рэальна

168
00:07:54,470 --> 00:07:57,150
дапамагчы us-- што максімальная з'яўляецца
верагодна, што мы сапраўды хочам.

169
00:07:57,150 --> 00:07:59,920
Але аказваецца, у нас нават ёсць
некаторы выбар па тыпу тут.

170
00:07:59,920 --> 00:08:03,400
>> У тыповай базе дадзеных SQL, вы
ёсць нешта, званае голец поле

171
00:08:03,400 --> 00:08:07,505
а таксама VARCHAR, V-A-R,
для пераменнага поля паўкокс.

172
00:08:07,505 --> 00:08:08,630
А розніца заключаецца ў наступным.

173
00:08:08,630 --> 00:08:12,400
Поле голец, вы дызайнер,
павінны паказаць загадзя

174
00:08:12,400 --> 00:08:14,900
дакладная даўжыня поля.

175
00:08:14,900 --> 00:08:20,530
Так што, можа быць, першае імя
як 20 адчувае сябе свайго роду сейф.

176
00:08:20,530 --> 00:08:23,950
Магчыма, прыйдзецца зрабіць некаторыя Googling да
убачыць, калі гэта на самай справе дастаткова бяспечна.

177
00:08:23,950 --> 00:08:26,910
Там, напэўна, імя з 21
персанажы, але цяпер, выкажам здагадку, 20

178
00:08:26,910 --> 00:08:27,620
з'яўляецца бяспечным.

179
00:08:27,620 --> 00:08:30,070
>> Поле сімвал будзе азначаць,
ў базе дадзеных, вам

180
00:08:30,070 --> 00:08:33,289
выкарыстоўваюць 20 і заўсёды 20 сімвалаў.

181
00:08:33,289 --> 00:08:37,419
Цяпер, калі гэта толькі D-A-V-I-D, 15 з іх
толькі збіраецца быць пустым сімвалаў,

182
00:08:37,419 --> 00:08:40,450
але вы ўсё яшчэ выкарыстоўваеце ўсе 20 байт.

183
00:08:40,450 --> 00:08:46,302
Поле VARCHAR, наадварот, азначае,
Радок павінна быць да 20 знакаў

184
00:08:46,302 --> 00:08:48,260
але калі гэта толькі пяць,
вы толькі збіраецеся выкарыстоўваць

185
00:08:48,260 --> 00:08:51,270
пяць, шэсць ці, можа быць, для
асаблівае значэнне ў канцы,

186
00:08:51,270 --> 00:08:54,980
як што 0 мы абмяркоўвалі, што
азначае канец сімвала

187
00:08:54,980 --> 00:08:56,790
Паслядоўнасць у памяці.

188
00:08:56,790 --> 00:08:59,950
>> Так што, калі вы думаеце
вы можаце выбраць сімвал

189
00:08:59,950 --> 00:09:05,240
у параўнанні з VARCHAR, улічваючы, што кампраміс?

190
00:09:05,240 --> 00:09:09,321
Char выкарыстоўвае гэта шмат знакаў, VARCHAR
выкарыстоўвае не больш, што многія персанажы.

191
00:09:09,321 --> 00:09:10,196
ГЛЕДАЧЫ: [неразборліва]

192
00:09:10,196 --> 00:09:13,859

193
00:09:13,859 --> 00:09:16,900
DAVID Малання: Добра, калі вы ведаеце,
даўжыня радка даволі пераканаўчым

194
00:09:16,900 --> 00:09:19,316
проста выкарыстоўваць сімвал, таму што, калі
вы гэта ведаеце, проста пакласці яго ўніз.

195
00:09:19,316 --> 00:09:23,390
А можа быць, гэта дакладна для маланкі
код, у ЗША, па меншай меры, 02138,

196
00:09:23,390 --> 00:09:26,660
гэта заўсёды будзе пяць
сімвалы, пакуль дадаць працяжнік чатыры.

197
00:09:26,660 --> 00:09:29,750
Але вы маглі б мець некаторыя значэння
які вы заўсёды ведаеце даўжыню.

198
00:09:29,750 --> 00:09:32,310
Ці, можа быць, дзяржаўныя сімвалы,
як Нью-Ёрк у Нью-Ёрк,

199
00:09:32,310 --> 00:09:33,811
і MA для штата Масачусэтс у ЗША.

200
00:09:33,811 --> 00:09:36,560
Можа быць, у вас ёсць нейкія сітуацыі,
дзе гэта цалкам разумна,

201
00:09:36,560 --> 00:09:39,520
але гэтай логіцы, чаму
мы нават overthinking гэта?

202
00:09:39,520 --> 00:09:41,800
Чаму б нам не выкарыстоўваць
VARCHAR, а затым мы проста

203
00:09:41,800 --> 00:09:46,730
заўсёды выкарыстоўвайце два знака ў любым выпадку, ці
заўсёды выкарыстоўваць пяць знакаў у любым выпадку?

204
00:09:46,730 --> 00:09:50,300
Чаму б не проста захаваць для VARCHAR
усе, па гэтай логіцы?

205
00:09:50,300 --> 00:09:51,677
Там павінна быць падвох.

206
00:09:51,677 --> 00:09:52,552
ГЛЕДАЧЫ: [неразборліва]

207
00:09:52,552 --> 00:09:54,952

208
00:09:54,952 --> 00:09:56,660
DAVID Малання: Ці маглі
напісаць нешта няправільна.

209
00:09:56,660 --> 00:09:58,090
Так што гэта праўда.

210
00:09:58,090 --> 00:10:01,030
Але нават тады, яны не могуць выкарыстоўваць
больш памяці, чым я вылучаю.

211
00:10:01,030 --> 00:10:03,340
Я да гэтага часу канчатковае
гавораць па ўсёй даўжыні,

212
00:10:03,340 --> 00:10:06,780
таму яны не могуць выпадкова зрабіць
гэтая памылка, але добрая думка.

213
00:10:06,780 --> 00:10:10,510
Гэта больш тонкі, але гэта вельмі роднасны
да нашай дыскусіі, на самай справе, масіваў

214
00:10:10,510 --> 00:10:12,390
і звязаныя спісы раней.

215
00:10:12,390 --> 00:10:16,290
>> Аказваецца, што ў базе даных, калі
ён ведае, што ўсе значэнні з'яўляюцца

216
00:10:16,290 --> 00:10:19,250
фіксаванай даўжыні, нават калі
некаторыя з гэтых значэнняў з'яўляюцца пустымі,

217
00:10:19,250 --> 00:10:22,484
выгляд эстэтычна пустым,
D-A-V-I-D, а затым 15 нарыхтовак,

218
00:10:22,484 --> 00:10:24,650
атрымліваецца, што калі кожны
Поле мае тую ж даўжыню,

219
00:10:24,650 --> 00:10:28,670
гэтак жа, як масіў былі ўсе яго рэчы
спіна да спіны, каб спіна да спіны, так што

220
00:10:28,670 --> 00:10:33,480
вы маглі б проста плюс 1, каб дабрацца да наступнага
значэнне, тая ж ідэя ў табліцы базы дадзеных.

221
00:10:33,480 --> 00:10:37,550
Калі ўсё вашага персанажа
радкі маюць аднолькавую даўжыню,

222
00:10:37,550 --> 00:10:39,390
ў вас ёсць тое, што называецца адвольным доступам.

223
00:10:39,390 --> 00:10:41,850
Калі ўсе радкі маюць
даўжыня 20, вы не проста

224
00:10:41,850 --> 00:10:45,230
зрабіць плюс 1 вы проста робіце плюс
20, плюс 20, плюс 20, плюс 20,

225
00:10:45,230 --> 00:10:48,775
і вы можаце вельмі хутка пракруціць
або пошук па ўсіх дадзеных.

226
00:10:48,775 --> 00:10:54,420
>> Поле зменнай сімвал, насупраць,
не заўсёды мае 20 знакаў.

227
00:10:54,420 --> 00:10:58,000
Гэта можа мець 20, а затым
15, а затым 19, а затым 10,

228
00:10:58,000 --> 00:11:00,720
і таму, калі вы хочаце знайсці
праз яго, вы не можаце проста слепа

229
00:11:00,720 --> 00:11:03,050
дадаць 20 байт, каб дабрацца да наступнай.

230
00:11:03,050 --> 00:11:07,280
Вы ў літаральным сэнсе прыйдзецца шукаць праз
так як край структуры дадзеных,

231
00:11:07,280 --> 00:11:08,340
калі вы будзеце, з'яўляецца няроўным.

232
00:11:08,340 --> 00:11:11,480
Гэта збольшага ўваходзіць і выходзіць на аснове
па фактычнай даўжыні радка.

233
00:11:11,480 --> 00:11:14,460
Такім чынам, калі вы ведаеце даўжыню, як
Карыма кажа, выкарыстоўвайце поле голец,

234
00:11:14,460 --> 00:11:16,460
таму што вы атрымліваеце, што
эфектыўнасць быцця

235
00:11:16,460 --> 00:11:19,170
умее шукаць праз яго хутчэй
калі вы шукаеце дадзеных,

236
00:11:19,170 --> 00:11:20,550
у адваротным выпадку выкарыстоўваць зменную.

237
00:11:20,550 --> 00:11:24,450
>> На жаль, у мяне няма добрага адказу
як доўга назва павінна быць,

238
00:11:24,450 --> 00:11:26,360
але нешта накшталт
імя, я б сказаў,

239
00:11:26,360 --> 00:11:28,470
VARCHAR з'яўляецца агульным
таму што ён не збіраецца

240
00:11:28,470 --> 00:11:30,430
быць фіксаванай даўжыні для ўсіх.

241
00:11:30,430 --> 00:11:33,650
20, я не ведаю, 20
адчувае сябе трохі жорсткай.

242
00:11:33,650 --> 00:11:36,460
Давайце проста скажам, 50, 50.

243
00:11:36,460 --> 00:11:39,210
Гэта на самай справе не варта вам, што
значна больш, каб сказаць 50 замест 40,

244
00:11:39,210 --> 00:11:41,260
але ў нейкі момант, што вам трэба
каб зрабіць званок меркаванні.

245
00:11:41,260 --> 00:11:43,090
>> Вельмі часта, калі шчыра,
для [? гістарычнае?]

246
00:11:43,090 --> 00:11:47,670
прычыны, нават калі гэта празмерным,
ёсць 255, таму што некаторы час таму,

247
00:11:47,670 --> 00:11:51,440
ў папулярных сістэмах баз дадзеных, як
MySQL, бясплатны інструмент з адкрытым зыходным кодам

248
00:11:51,440 --> 00:11:53,790
што шмат кампаній
як нават Facebook выкарыстоўваецца,

249
00:11:53,790 --> 00:11:56,654
гэта быў максімум па змаўчанні
так што людзі проста пайшлі з ім.

250
00:11:56,654 --> 00:11:59,070
Так што не пазбаўлена сэнсу, але мы будзем
выкарыстоўваць трохі больш інтуіцыі

251
00:11:59,070 --> 00:12:02,970
і сказаць, упэўнены 50, гэта
верагодна, крыху празмерным.

252
00:12:02,970 --> 00:12:05,720
>> Падлогу, я, як пералік,
і таму мы можам таму

253
00:12:05,720 --> 00:12:08,760
пералічыць мужчыны ці жанчыны,
або, можа быць больш эфектыўна,

254
00:12:08,760 --> 00:12:13,420
м або е або якой-небудзь іншай сімвалізм, але
перечислимый адчувае, як добры выбар там.

255
00:12:13,420 --> 00:12:16,740
Каб было ясна, падлогі
можа быць проста VARCHAR,

256
00:12:16,740 --> 00:12:19,090
і мы маглі б проста ўсе
згодны, як добрыя людзі,

257
00:12:19,090 --> 00:12:21,010
заўсёды ставіць адны і тыя ж каштоўнасці там.

258
00:12:21,010 --> 00:12:22,720
Мужчына ці жанчына ці этажэрку.

259
00:12:22,720 --> 00:12:27,800
>> Але праблема тое, што мы маглі б
дапушчана памылка, так як [неразборліва] прапанаваў

260
00:12:27,800 --> 00:12:29,140
раней у іншым кантэксце.

261
00:12:29,140 --> 00:12:32,780
Калі мы робім памылку, мы маглі б атрымаць
няправільныя значэння ў нашай базе.

262
00:12:32,780 --> 00:12:36,320
Так што прыемна аб базах дадзеных
як Oracle і MySQL і іншыя,

263
00:12:36,320 --> 00:12:39,280
з'яўляецца тое, што ў вас ёсць гэтая апошняя
ўзровень абароны дзе

264
00:12:39,280 --> 00:12:43,010
адміністратар Абд, базы дадзеных,
хто распрацоўвае гэтую табліцу, як мы

265
00:12:43,010 --> 00:12:46,440
ў вуснай форме, маглі б паставіць
на месца пералік, што

266
00:12:46,440 --> 00:12:51,250
абараняе супраць гэтага, паказаўшы
мужчына, жанчына, і так ніхто не

267
00:12:51,250 --> 00:12:54,230
яшчэ не праграміст можа выпадкова
ўставіць любое іншае значэнне.

268
00:12:54,230 --> 00:12:55,480
Так што гэта было б добра.

269
00:12:55,480 --> 00:12:56,660
Гэта асаблівасць.

270
00:12:56,660 --> 00:13:00,760
>> Так ідэнтыфікатар, мяркуючы, што лікавы ідэнтыфікатар, яго
верагодна, павінен быць станоўчым цэлым лікам.

271
00:13:00,760 --> 00:13:04,380
І часам мы маем
магчымасць абмеркаваць даўжыню.

272
00:13:04,380 --> 00:13:06,830
Вы не звычайна
паказаць нумар тут,

273
00:13:06,830 --> 00:13:11,310
вы б замест таго, каб паказаць
гэта INT, ці вялікі INT,

274
00:13:11,310 --> 00:13:12,980
так як яны звычайна называюць.

275
00:13:12,980 --> 00:13:18,840
Але, як правіла, цэлы лік
было б, скажам, 4 байта.

276
00:13:18,840 --> 00:13:23,694
І калі гэта 4 байта,
гэта колькі біт?

277
00:13:23,694 --> 00:13:24,630
>> ГЛЕДАЧЫ: [неразборліва]

278
00:13:24,630 --> 00:13:26,610
>> DAVID Малання: 32 біта.

279
00:13:26,610 --> 00:13:30,270
Дык колькі карыстальнікаў мы можам мець на
у нашай базе дадзеных, калі ўсе яны маюць ідэнтыфікатар

280
00:13:30,270 --> 00:13:33,320
і гэты ідэнтыфікатар павінен быць унікальным?

281
00:13:33,320 --> 00:13:36,780
32 біта азначае, што мы маем шаблоны
аднаго, два, тры, чатыры, five--

282
00:13:36,780 --> 00:13:41,000
так як шмат розных мадэляў нулёў
і тыя, вы можаце мець, калі ёсць 32?

283
00:13:41,000 --> 00:13:43,235
Гэта тое ж самае,
пытаючыся, што гэта ад двух да 32?

284
00:13:43,235 --> 00:13:46,472

285
00:13:46,472 --> 00:13:48,430
Гэта вялікі лік,
Я зусім не магу атрымаць права,

286
00:13:48,430 --> 00:13:50,270
але я ведаю, што гэта прыкладна 4 млрд.

287
00:13:50,270 --> 00:13:53,970
Такім чынам, гэта азначае, што ваша табліца базы дадзеных можа
чатыры мільярды карыстальнікаў, і гэта ўсё.

288
00:13:53,970 --> 00:13:56,410
>> Так што гэта цікава
дызайн падтэкст.

289
00:13:56,410 --> 00:14:00,840
Прыстойнае колькасць кампаній
вырашылі, магчыма, не так шмат

290
00:14:00,840 --> 00:14:04,860
для іх карыстальнікаў табліцы, таму што наяўнасць
4 мільярды карыстальнікаў з'яўляецца рэдкай праблемай.

291
00:14:04,860 --> 00:14:08,410
Гэта свайго роду Facebook-стылі
праблема, а не тыповая праблема кампаніі.

292
00:14:08,410 --> 00:14:12,670
Але, можа быць, калі ў вас ёсць часопісы транзакцый
ці нейкі дадзеныя, якія пастаянна

293
00:14:12,670 --> 00:14:15,610
будзе запісана ў вашу базу дадзеных
што абсалютна можа мець мільярды

294
00:14:15,610 --> 00:14:18,900
і мільярды радкоў, і
Вы карыстаецеся цэлы лік для яго,

295
00:14:18,900 --> 00:14:22,750
што адбудзецца, як толькі
вы атрымліваеце нумар радка 4 млрд

296
00:14:22,750 --> 00:14:26,210
а затым вы спрабуеце ўставіць
Четырёхмилиардное і 1, так бы мовіць?

297
00:14:26,210 --> 00:14:29,610
Я спрасціўшы лік біт.

298
00:14:29,610 --> 00:14:33,740
>> Вы можаце адрэзаць назад, я маю на ўвазе вас
павінны справіцца з гэтым так ці інакш.

299
00:14:33,740 --> 00:14:37,910
І тое, што кампутар, як правіла, робяць,
думаць пра гэта нават з раніцы,

300
00:14:37,910 --> 00:14:42,430
калі ў вас ёсць 4-бітнае значэнне
як 1, 1, 1, 1, якая,

301
00:14:42,430 --> 00:14:44,920
проста, каб звязаць раніцу
разам у другой палове дня, то,

302
00:14:44,920 --> 00:14:48,369
робіць гэты лік прадстаўляюць у двайковай сістэме?

303
00:14:48,369 --> 00:14:49,410
Добра, мы зробім гэта прасцей.

304
00:14:49,410 --> 00:14:53,310
Што робіць гэты нумар
прадстаўляюць у двайковай сістэме?

305
00:14:53,310 --> 00:14:56,794
Добра, мы зробім гэта прасцей, чым
гэта прадстаўляе ў двайковай сістэме?

306
00:14:56,794 --> 00:14:57,460
ГЛЕДАЧЫ: Тры.

307
00:14:57,460 --> 00:14:59,670
DAVID Малання: Тры, таму што
мы маем тыя column--

308
00:14:59,670 --> 00:15:00,450
[СМЕХ]

309
00:15:00,450 --> 00:15:01,350
Уф!

310
00:15:01,350 --> 00:15:03,980
Мы мелі слупок з іх
і слупок двоек.

311
00:15:03,980 --> 00:15:07,250
Таму выкажам здагадку, што, сапраўды, наш
[? прысядзібнага ўчастка?] не 32 біта,

312
00:15:07,250 --> 00:15:13,440
але гэта былі два біта, мы можам
лічыць ад колькасці 0, 1, 2, 3 карыстальніка,

313
00:15:13,440 --> 00:15:18,040
а потым мы накшталт
назад да карыстача 00 разоў.

314
00:15:18,040 --> 00:15:19,739
Так што гэта тое, што звычайна адбываецца.

315
00:15:19,739 --> 00:15:22,780
Калі вы калі-небудзь чулі expression--
верагодна, няма, але калі вы have--

316
00:15:22,780 --> 00:15:26,500
Цэлалікавымі перапаўненне, дзе вы
трымаць гартаць ўсе вашы біты

317
00:15:26,500 --> 00:15:29,640
каб быць самымі вялікімі магчымымі значэннямі,
а потым вы з бітаў,

318
00:15:29,640 --> 00:15:30,850
што звычайна адбываецца?

319
00:15:30,850 --> 00:15:32,280
Чаму я кажу 00?

320
00:15:32,280 --> 00:15:33,220
Ну, гэта тры.

321
00:15:33,220 --> 00:15:34,230
Як я ўяўляю 4?

322
00:15:34,230 --> 00:15:36,890

323
00:15:36,890 --> 00:15:38,915
калі паказваюць
для ліку 4 у двайковай сістэме?

324
00:15:38,915 --> 00:15:39,790
ГЛЕДАЧЫ: [неразборліва]

325
00:15:39,790 --> 00:15:41,780
DAVID Малання: одно-- ды,
не кажаце, 100 само па сабе,

326
00:15:41,780 --> 00:15:44,190
таму што ён мае няправільны
Канатацыя, але 1-0-0.

327
00:15:44,190 --> 00:15:48,920
Так што нумар 1-0-0 сапраўды
правільна, але калі ў вас ёсць толькі два біта,

328
00:15:48,920 --> 00:15:50,820
што вы сапраўды зрабілі?

329
00:15:50,820 --> 00:15:53,219
Вы перавярнулася 00.

330
00:15:53,219 --> 00:15:54,760
І на самай справе, гэта тое, што будзе адбывацца.

331
00:15:54,760 --> 00:15:56,884
На самай справе, вы можаце думаць
пра гэта больш фамільярна.

332
00:15:56,884 --> 00:15:59,350
Калі вы памятаеце, тое, што,
16 гадоў таму, свет

333
00:15:59,350 --> 00:16:03,380
павінна была скончыцца, калі
праблема Y2K здарылася.

334
00:16:03,380 --> 00:16:04,330
Чаму гэта было?

335
00:16:04,330 --> 00:16:08,170
Ну большасць кампутараў, для
разумныя рашэнні,

336
00:16:08,170 --> 00:16:15,320
захоўвалі нумары Спадабаўся
1975 год ці 1999 год

337
00:16:15,320 --> 00:16:19,010
толькі з дапамогай двух лічбаў
ў памяці кампутара.

338
00:16:19,010 --> 00:16:21,950
Так што, вядома, што адбываецца,
калі вы атрымліваеце да 2000 года,

339
00:16:21,950 --> 00:16:25,790
вы ідзяце да гэтага, ці, дакладней, да.

340
00:16:25,790 --> 00:16:30,120
Такім чынам, вы ідзяце да 2000 году, але калі
вы карыстаецеся толькі дзве лічбы гэта выглядае

341
00:16:30,120 --> 00:16:32,660
як год 00 і
так што вы перакулілася.

342
00:16:32,660 --> 00:16:36,820
І вось чаму шмат сістэм
неабходна абнавіць ў той час.

343
00:16:36,820 --> 00:16:42,500
>> Так з гэтым сказаў, такія кампаніі, як
Facebook запусціць супраць гэтага.

344
00:16:42,500 --> 00:16:46,147
Такім чынам, адзіны спосаб справіцца з
Сітуацыя, шчыра кажучы, прадбачыць яго.

345
00:16:46,147 --> 00:16:47,980
Або чысты спосаб
справіцца з гэтай сітуацыяй

346
00:16:47,980 --> 00:16:50,330
гэта прадбачыць яго, так што вы не
павінны ўнесці змены пазней.

347
00:16:50,330 --> 00:16:51,970
Такім чынам, замест 8 байт, вы ведаеце, што?

348
00:16:51,970 --> 00:16:54,261
Я збіраюся быць дальнабачнымі
тут, нават калі гэта

349
00:16:54,261 --> 00:16:56,760
трохі аптымістычна, што
мы будзем мець 4 млрд

350
00:16:56,760 --> 00:16:58,850
і 1 карыстальнікаў на нашым сайце.

351
00:16:58,850 --> 00:17:01,790
Але давайце проста выкарыстаць 8 байт, або
64 біта, якія ў цэлым будуць

352
00:17:01,790 --> 00:17:05,640
называецца вялікая цэлы лік, вельмі тэхнічны.

353
00:17:05,640 --> 00:17:10,280
І гэта проста азначае, што вы можаце мець
яшчэ больш лічбаў вашага нумара.

354
00:17:10,280 --> 00:17:12,599
Але гэта важна
праектнае рашэнне,

355
00:17:12,599 --> 00:17:16,400
таму што калі вы выбіраеце нумар,
мае занадта мала бітаў выразнасці

356
00:17:16,400 --> 00:17:19,089
вы маглі б на самай справе стварыць
памылка ў вашым праграмным забеспячэнні.

357
00:17:19,089 --> 00:17:21,750
>> Добра, так што давайце ахінуць
з электроннай поштай і паштовы адрас.

358
00:17:21,750 --> 00:17:26,369
Так электронная пошта, як доўга павінен
адрас электроннай пошты будзе?

359
00:17:26,369 --> 00:17:26,869
50.

360
00:17:26,869 --> 00:17:29,220
Я сапраўды паняцця не маю, але гэта
верагодна, нешта падобнае,

361
00:17:29,220 --> 00:17:32,261
таму што інакш ніхто не збіраецца
напісаць вам, калі ён становіцца занадта доўга, так што 50,

362
00:17:32,261 --> 00:17:33,360
давайце ісці з ім на дадзены момант.

363
00:17:33,360 --> 00:17:35,770
Паштовы адрас, як доўга гэта павінна быць?

364
00:17:35,770 --> 00:17:38,325

365
00:17:38,325 --> 00:17:39,200
ГЛЕДАЧЫ: [неразборліва]

366
00:17:39,200 --> 00:17:41,900

367
00:17:41,900 --> 00:17:43,890
>> DAVID Малання: Гэта не
проста паштовы індэкс, хоць.

368
00:17:43,890 --> 00:17:45,720
Паштовы адрас, я чуў.

369
00:17:45,720 --> 00:17:50,720
Так што гэта як 1 Brattle плошчы,
коска, Cambridge Mass., коска, 02138.

370
00:17:50,720 --> 00:17:53,860
І на самай справе, дазвольце мне проста цягнуць
да невялікага ліста тут.

371
00:17:53,860 --> 00:17:56,510
Гэта адчувае, як гэта
выпушчаная магчымасць.

372
00:17:56,510 --> 00:18:01,480
Калі ў нас ёсць 1 Brattle плошчу,
коска, Cambridge MA 02138,

373
00:18:01,480 --> 00:18:04,510
Я адчуваю, што мы можам зрабіць лепш
чым проста паштовы адрас.

374
00:18:04,510 --> 00:18:07,100
Чаму мы не выбухаюць гэта крыху?

375
00:18:07,100 --> 00:18:08,030
Што я хілю?

376
00:18:08,030 --> 00:18:10,970
Што мы павінны замест таго, каб мець
для нашых шэрагаў тут, магчыма?

377
00:18:10,970 --> 00:18:12,260
>> ГЛЕДАЧЫ: [неразборліва]

378
00:18:12,260 --> 00:18:17,579
>> DAVID Малання: Так, так што давайце
называюць яго street_number,

379
00:18:17,579 --> 00:18:20,620
і падкрэсліванне проста агульны
спосаб мець тое, што выглядае як прастора,

380
00:18:20,620 --> 00:18:22,360
але гэта не так, на самай справе.

381
00:18:22,360 --> 00:18:26,240
Стрыт, а затым city-- шкада?

382
00:18:26,240 --> 00:18:28,440
>> ГЛЕДАЧЫ: [неразборліва]

383
00:18:28,440 --> 00:18:29,690
DAVID Малання: Мы маглі б зрабіць гэта.

384
00:18:29,690 --> 00:18:30,702
Лінія адна, другая радок.

385
00:18:30,702 --> 00:18:32,410
Чаму б нам не будзе трымаць
яго проста на дадзены момант,

386
00:18:32,410 --> 00:18:34,840
але гэта абсалютна
прымальнае рашэнне.

387
00:18:34,840 --> 00:18:38,180
А потым стан, а затым давайце
быць трохі амерыкана-арыентаваных зараз

388
00:18:38,180 --> 00:18:42,040
і проста зрабіць паштовы індэкс, толькі таму, што
гэта прывядзе да цікавай памылцы

389
00:18:42,040 --> 00:18:43,090
або праблема тут.

390
00:18:43,090 --> 00:18:44,655
Таму выкажам здагадку, што зараз наш адрас.

391
00:18:44,655 --> 00:18:47,280
Гэта крыху больш раздражняе, што
у нас ёсць усе гэтыя дадатковыя поля,

392
00:18:47,280 --> 00:18:49,200
але зараз мы можам пазначыць
рэчы крыху лепш.

393
00:18:49,200 --> 00:18:53,210
>> Так што цяпер нумар вуліцы, верагодна,
не павінен быць знак, ці павінен?

394
00:18:53,210 --> 00:18:54,835
Што гэта павінна быць?

395
00:18:54,835 --> 00:18:55,710
ГЛЕДАЧЫ: [неразборліва]

396
00:18:55,710 --> 00:18:57,835
DAVID Малання: Можа быць, шэраг
як цэлы лік раз?

397
00:18:57,835 --> 00:19:00,170
Вялікая колькасць?

398
00:19:00,170 --> 00:19:02,170
Вы, напэўна, не жывуць
ў 4 мільярды Main Street

399
00:19:02,170 --> 00:19:03,490
або што-небудзь вар'ят, як гэта.

400
00:19:03,490 --> 00:19:06,850
Так цэлы лік, верагодна,
добра, але хто-небудзь

401
00:19:06,850 --> 00:19:13,880
калі-небудзь жыў па адрасе, як
1A Brattle плошчы, або 1 і 1/2?

402
00:19:13,880 --> 00:19:17,030
Гэтыя рэчы існуюць, на жаль,
нават калі вы не жылі там,

403
00:19:17,030 --> 00:19:21,240
Ёсць гэтыя анамаліі
як кватэра 1A, 1B, 1C.

404
00:19:21,240 --> 00:19:24,260
Такім чынам, вы ведаеце, што мы, верагодна,
не павінны ісці з цэлымі,

405
00:19:24,260 --> 00:19:27,440
у адваротным выпадку мы будзем
страціць некаторыя продажу.

406
00:19:27,440 --> 00:19:29,920
>> Char поле, можа быць?

407
00:19:29,920 --> 00:19:30,870
Я не ведаю, як доўга.

408
00:19:30,870 --> 00:19:33,370
Гэта, верагодна, не будзе
што доўга, так што 10 ці нешта.

409
00:19:33,370 --> 00:19:34,950
Ніхто не збіраецца пісаць
больш доўгі нумар, можа быць.

410
00:19:34,950 --> 00:19:37,070
Але зноў жа, мы павінны, верагодна,
больш думаць пра тое, што.

411
00:19:37,070 --> 00:19:39,900
Можа быць, Google, зрабіць некаторыя даследаванні,
але мы пойдзем з нашымі трыбухамі на дадзены момант.

412
00:19:39,900 --> 00:19:44,565
Вуліцы, голец, 50, я не ведаю.

413
00:19:44,565 --> 00:19:46,940
У нейкі момант, ніхто не збіраецца
напісаць яго на канверце,

414
00:19:46,940 --> 00:19:49,350
таксама, так што там, напэўна,
некаторыя верхнія межы там.

415
00:19:49,350 --> 00:19:54,200
Горад, такі ж, упэўнены, так што асмальваецца 50.

416
00:19:54,200 --> 00:19:59,120
>> Дзяржава, можа быць ЗША, арыентаваных на дадзены момант.

417
00:19:59,120 --> 00:20:01,850
Так што гэта можа быць спіс, так што выгляд
судовага рашэння выкліку, дзяржавы.

418
00:20:01,850 --> 00:20:04,000
Гэта можа быць як два знака.

419
00:20:04,000 --> 00:20:06,140
Так што на самой справе, можа быць, я паўтараў паўкокс.

420
00:20:06,140 --> 00:20:09,420
Я маю на ўвазе, верагодна, VARCHAR,
як раз для некаторай эфектыўнасці,

421
00:20:09,420 --> 00:20:12,240
але мы вернемся да
што рашэнне ў дадзены момант.

422
00:20:12,240 --> 00:20:16,150
Можа быць знак даўжыні 2 для дзяржавы.

423
00:20:16,150 --> 00:20:20,670
Калі ў ЗША яны маюць, як MA,
Масачусэтс, Нью-Ёрк, Нью-Ёрк, штат Нью-Джэрсі, Нью-

424
00:20:20,670 --> 00:20:22,100
Джэрсі, і гэтак далей.

425
00:20:22,100 --> 00:20:23,630
Так што гэта можа быць выпраўлена ў гэтым.

426
00:20:23,630 --> 00:20:25,900
DC для Вашынгтона, акруга Калумбія.

427
00:20:25,900 --> 00:20:29,915
>> Але я думаю, Аліўе, ты
прапанаваў іншы падыход.

428
00:20:29,915 --> 00:20:30,790
ГЛЕДАЧЫ: [неразборліва]

429
00:20:30,790 --> 00:20:33,670
DAVID Малання: Так, так што гэта
трохі раздражняе ўвесці,

430
00:20:33,670 --> 00:20:37,890
але пералік можа мець больш сэнсу,
таму што такім чынам, па меншай меры, у ЗША,

431
00:20:37,890 --> 00:20:41,320
вы маглі б пералічыць, калі стомна, але
Вы робіце гэта толькі адзін раз у вашай базе дадзеных

432
00:20:41,320 --> 00:20:47,480
і ніколі больш не прыйдзецца думаць аб
гэта, усе 50 кодаў двух знакаў.

433
00:20:47,480 --> 00:20:48,660
Так што я люблю ENUM.

434
00:20:48,660 --> 00:20:51,720
Давайце прытрымлівацца гэтага там, таму што
гэта свайго роду забяспечвае захаванне больш строгасць.

435
00:20:51,720 --> 00:20:53,620
А потым паштовы індэкс?

436
00:20:53,620 --> 00:20:55,306
Я думаю, што Эндру была думка пра тое, што

437
00:20:55,306 --> 00:20:56,180
ГЛЕДАЧЫ: [неразборліва]

438
00:20:56,180 --> 00:20:57,240
DAVID Малання: Так, пяць-дзевяць.

439
00:20:57,240 --> 00:20:58,323
Давайце проста трымаць яго проста.

440
00:20:58,323 --> 00:20:59,380
Проста зрабіце пяць цяпер.

441
00:20:59,380 --> 00:21:03,070
Але, магчыма, я мог бы проста
зрабіць цэлы лік, ці не так?

442
00:21:03,070 --> 00:21:08,750
Я мог бы, але вы ведаеце, што я зрабіў
гэтая памылка аднойчы, у нейкім сэнсе.

443
00:21:08,750 --> 00:21:13,110
Некалькі гадоў таму я быў перенастройке з
Microsoft Перспектывы для Gmail,

444
00:21:13,110 --> 00:21:18,640
і перспектывы ёсць спосаб экспарту
усе вашыя кантакты, у якасці файла Excel,

445
00:21:18,640 --> 00:21:21,280
файл CSV, значэнні, падзеленыя коскамі файл.

446
00:21:21,280 --> 00:21:23,950
І я зрабіў памылку, я
думаю, з двайнога пстрычкі па ім,

447
00:21:23,950 --> 00:21:27,380
як толькі я запампаваў экспарт, каб
пераканайцеся, што ён выглядаў, як я чакаў.

448
00:21:27,380 --> 00:21:31,320
Павінна быць, я ўдарыў Захаваць або дазволіць
запісаны аўтаматычна ўдар у ці нешта.

449
00:21:31,320 --> 00:21:35,100
Таму што, калі я затым імпартаваць
гэта ў Gmail, усё гэта працавала.

450
00:21:35,100 --> 00:21:39,910
Але на працягу многіх гадоў, і па гэты дзень, і
Я зрабіў гэта пяць, 10 гадоў таму,

451
00:21:39,910 --> 00:21:44,380
Я да гэтага часу знайсці сяброў, якія маюць
адрасы, якія выглядаюць, як гэта.

452
00:21:44,380 --> 00:21:45,700
Чаму?

453
00:21:45,700 --> 00:21:47,900
>> ГЛЕДАЧЫ: [неразборліва]

454
00:21:47,900 --> 00:21:50,650
>> DAVID Малання: Спатрэбілася
наперад 0, ну, гэта, хутчэй,

455
00:21:50,650 --> 00:21:53,810
ўзяў увесь паштовы індэкс, як
шэраг, і, такім чынам, гэта

456
00:21:53,810 --> 00:21:56,590
вядучы 0, што азначае
гэта не мае ніякага значэння.

457
00:21:56,590 --> 00:21:59,470
І так 2138, здаецца, мой паштовы індэкс.

458
00:21:59,470 --> 00:22:07,100
І гэта, шчыра кажучы, раздражняе Excel
асаблівасць якой я думаю, што па змаўчанні,

459
00:22:07,100 --> 00:22:10,980
нават калі гэта азначала проста
быць тэкст, Microsoft Excel

460
00:22:10,980 --> 00:22:13,780
вырашае, дазвольце мне быць карысным,
і о, я бачу толькі лічбы.

461
00:22:13,780 --> 00:22:15,290
Давайце разглядаць іх як лікі.

462
00:22:15,290 --> 00:22:16,790
І гэта ўсячэнне вядучыя нулі.

463
00:22:16,790 --> 00:22:19,165
>> Я клянуся перад Богам, кожная пара
месяцаў я знайсці адрас,

464
00:22:19,165 --> 00:22:22,300
і са свайго роду обсессивно-кампульсіўныя засмучэнні, я вяртаюся
ў і дадаць 0, хоць я ніколі

465
00:22:22,300 --> 00:22:23,700
паслаць людзей лісты або што-небудзь.

466
00:22:23,700 --> 00:22:25,510
Але я да гэтага часу знаходзяць рэшткі гэтага.

467
00:22:25,510 --> 00:22:28,820
Так што гэта сказаць, ці з'яўляецца гэта добрай ідэяй?

468
00:22:28,820 --> 00:22:31,610
ОК, няма, таму што нехта ў
Масачусэтс, у гэтай галіне,

469
00:22:31,610 --> 00:22:33,270
будзе мець O вядучую іх.

470
00:22:33,270 --> 00:22:38,070
Так што давайце ісці з падобным
голец, напэўна, пяць.

471
00:22:38,070 --> 00:22:41,450
>> І вось, мы разумеем,
можа выкарыстоўваць пералік і мы

472
00:22:41,450 --> 00:22:44,600
можа пералічыць 10000
магчымыя коды ZIP,

473
00:22:44,600 --> 00:22:48,530
але гэта адчувае, як гэта, верагодна,
перасякаючы лінію, як, выгады.

474
00:22:48,530 --> 00:22:51,350
Калі вы павінны ўвесці, што
вялікі аб'ём дадзеных у вашу базу дадзеных

475
00:22:51,350 --> 00:22:52,940
для абароны ад чагосьці.

476
00:22:52,940 --> 00:22:57,400
Так сімвал зразумеў, што вы маглі б увесці
у Н-Е-Л-Л-О, як ваш паштовы індэкс,

477
00:22:57,400 --> 00:22:59,180
які, відавочна, не лікавы.

478
00:22:59,180 --> 00:23:01,680
Так што няма ніякага спосабу, у
тыповая база дадзеных,

479
00:23:01,680 --> 00:23:05,561
паказаць толькі лікавыя і
толькі пяць сімвалаў,

480
00:23:05,561 --> 00:23:07,310
такім чынам, мы будзем мець
каб зрабіць гэта ў кодзе.

481
00:23:07,310 --> 00:23:11,100
Мы збіраемся зрабіць гэта ў PHP або
Java або любы іншы мову мы

482
00:23:11,100 --> 00:23:14,230
выкарыстоўваючы на ​​сэрвэры для забеспячэння
такога роду абмежаванні.

483
00:23:14,230 --> 00:23:14,860
>> Ого!

484
00:23:14,860 --> 00:23:18,322
Добра, таму ўсе пытанні толькі пакуль?

485
00:23:18,322 --> 00:23:19,780
Давайце зробім яшчэ адно праектнае рашэнне.

486
00:23:19,780 --> 00:23:22,500
Аказваецца, што вам
таксама можаце выбраць,

487
00:23:22,500 --> 00:23:26,600
пры праектаванні базы дадзеных SQL, або
тыповыя рэляцыйныя database-- дзе

488
00:23:26,600 --> 00:23:28,790
зноў жа, рэляцыйная проста
азначае радкі і слупкі,

489
00:23:28,790 --> 00:23:35,500
вось як вы арганізаваць вашыя data--
і ўсвядоміць, што гэта азначае,

490
00:23:35,500 --> 00:23:37,740
Я ўводзіць у зман
што, я гэта drawing--

491
00:23:37,740 --> 00:23:40,190
тое, што называецца схема
для табліцы базы дадзеных.

492
00:23:40,190 --> 00:23:42,810
гэта як
спецыфікацыі для table--

493
00:23:42,810 --> 00:23:48,040
але калі прыходзіць час,
на самай справе захоўвання дадзеных,

494
00:23:48,040 --> 00:23:52,081
і мы будзем рабіць гэта толькі прыклад тут.

495
00:23:52,081 --> 00:23:55,080
Я збіраюся адкрыць Excel, таму што
Excel дасць мне радкі і слупкі.

496
00:23:55,080 --> 00:23:58,050
І гэта менавіта тое, што Oracle і
MySQL і іншыя інструменты дадуць мне.

497
00:23:58,050 --> 00:24:02,270
Так што я проста буду выкарыстоўваць
гэта дзеля Абмеркаванне ст.

498
00:24:02,270 --> 00:24:05,250
Дазвольце мне ісці наперад і адкрыць
Прадстаўнік дакумент тут,

499
00:24:05,250 --> 00:24:06,310
павялічыць няшмат.

500
00:24:06,310 --> 00:24:15,200
Так, напрыклад, нашы загалоўкі цяпер
прозвішча, імя, пол, ID,

501
00:24:15,200 --> 00:24:20,980
адрас электроннай пошты, нумар вуліцы, вуліца, воклічы.

502
00:24:20,980 --> 00:24:25,710
Вуліца, горад, штат, проста
аб змяшчаецца на экране.

503
00:24:25,710 --> 00:24:29,080
>> Дык што ж гэта азначае, што, калі
Спачатку карыстальнік рэгіструецца на маім сайце,

504
00:24:29,080 --> 00:24:32,880
гэта будзе нешта накшталт
Давід, малая, м, скажам, 1,

505
00:24:32,880 --> 00:24:42,910
malan@harvard.edu, вуліца нумар будзе
быць як 1 Brattle плошчы, Кембрыдж, Масачусэтс,

506
00:24:42,910 --> 00:24:44,780
02138, а затым гэтак далей.

507
00:24:44,780 --> 00:24:48,290
Таму, калі я кажу, што рэляцыйная база дадзеных
або базы дадзеных SQL гэта радкі і слупкі,

508
00:24:48,290 --> 00:24:49,350
Я маю на ўвазе гэта.

509
00:24:49,350 --> 00:24:51,900
Што фактычныя дадзеныя захоўваюцца
у радках і слупках.

510
00:24:51,900 --> 00:24:53,950
Гэта проста супадзенне,
што мы гаварылі,

511
00:24:53,950 --> 00:24:56,033
і я быў проста малюнак яго
у радках і слупках.

512
00:24:56,033 --> 00:24:58,320
Гэта проста схема,
ўсёабдымная вызначэнне.

513
00:24:58,320 --> 00:25:01,640
>> Так што з гэтых палёў тут,
ці што тое ж, там,

514
00:25:01,640 --> 00:25:06,270
якія з'яўляюцца поля, якія вы думаеце
Я, верагодна, шукаць на, калі я з'яўляюся карыстальнікам

515
00:25:06,270 --> 00:25:09,200
або калі я з'яўляюся адміністратарам базы дадзеных?

516
00:25:09,200 --> 00:25:12,426
Маўляў, якія поля я такі
на самай справе будзе шукаць далей?

517
00:25:12,426 --> 00:25:13,830
>> ГЛЕДАЧЫ: [неразборліва]

518
00:25:13,830 --> 00:25:17,690
>> DAVID Малання: Імя, ды так
Мне падабаецца той факт, that-- ды,

519
00:25:17,690 --> 00:25:19,750
электронная пошта можа быць даволі распаўсюджанай з'явай.

520
00:25:19,750 --> 00:25:21,440
На жаль, вы сказалі імя.

521
00:25:21,440 --> 00:25:24,030
Так maybe-- і зноў, мы
выгляд казаць абстрактна.

522
00:25:24,030 --> 00:25:25,988
Я не ведаю, чаму вы б
шукаць для імя,

523
00:25:25,988 --> 00:25:29,340
але гэта адчувае сябе разумным, калі
вы шукаеце карыстальнік.

524
00:25:29,340 --> 00:25:31,170
Можа быць, сцвярджае, вядома, ID.

525
00:25:31,170 --> 00:25:34,100

526
00:25:34,100 --> 00:25:36,160
>> І гэта слізкі
схіл, таму што я мог

527
00:25:36,160 --> 00:25:38,890
злаўчыцца сцэнар, пры якім
можа быць, мой бос папрасіў мяне,

528
00:25:38,890 --> 00:25:40,417
колькі мужчын у нас ёсць на нашым сайце?

529
00:25:40,417 --> 00:25:42,000
Колькі жанчын у нас ёсць на нашым сайце?

530
00:25:42,000 --> 00:25:45,210
І вось у гэты момант, вы можаце захацець
шукаць па гендэрнай вобласці, таксама,

531
00:25:45,210 --> 00:25:45,940
і нічога іншага.

532
00:25:45,940 --> 00:25:47,350
Такім чынам, ёсць кампраміс тут.

533
00:25:47,350 --> 00:25:49,180
Зноў жа, няма ніякіх
правільны адказ, але ёсць

534
00:25:49,180 --> 00:25:53,760
гэта функцыя ў большасці баз дадзеных SQL
вядомы як індэксацыі, у выніку чаго

535
00:25:53,760 --> 00:25:56,100
вы, дызайнер,
адміністратар базы дадзеных,

536
00:25:56,100 --> 00:26:01,730
можаце вырашыць загадзя, якія
Поля базы дадзеных павінны аптымізаваць

537
00:26:01,730 --> 00:26:02,980
для пошуку па.

538
00:26:02,980 --> 00:26:07,620
>> Вы маглі б вельмі наіўна сказаць, аптымізаваць
гэта, аптымізаваць, што, аптымізаваць гэта,

539
00:26:07,620 --> 00:26:10,300
аптымізацыі, што і ў гэтым,
і база дадзеных будзе

540
00:26:10,300 --> 00:26:14,882
зрабіць некаторыя магічныя рэчы пад
капот, і рабіць што-то такім чынам,

541
00:26:14,882 --> 00:26:17,090
што ў наступны раз вы будзеце шукаць
на любым з гэтых палёў,

542
00:26:17,090 --> 00:26:18,400
гэта, па сутнасці, будзе хутчэй.

543
00:26:18,400 --> 00:26:19,110
Гэта магчыма.

544
00:26:19,110 --> 00:26:20,530
Гэта не адмяняе сам сябе.

545
00:26:20,530 --> 00:26:22,500
Але павінна быць расплата.

546
00:26:22,500 --> 00:26:27,220
>> Калі вы па наіўнасьці, ці з празмерным энтузіязмам
скажам, індэкс ўсіх гэтых галінах,

547
00:26:27,220 --> 00:26:29,810
так бы мовіць, зрабіць іх усіх
эфектыўнага пошуку,

548
00:26:29,810 --> 00:26:31,625
якую цану вы, верагодна, плаціць?

549
00:26:31,625 --> 00:26:32,500
ГЛЕДАЧЫ: [неразборліва]

550
00:26:32,500 --> 00:26:33,090
DAVID Малання: Прадукцыйнасць.

551
00:26:33,090 --> 00:26:33,798
Што ты маеш на ўвазе?

552
00:26:33,798 --> 00:26:37,380
Ну прадукцыйнасць, па меншай меры ў
Кантэкст я абмяркоўваю, гэта лепш зараз.

553
00:26:37,380 --> 00:26:38,830
Гэта вызначэнне індэксацыі.

554
00:26:38,830 --> 00:26:41,180
Гэта зробіць пошук хутчэй.

555
00:26:41,180 --> 00:26:43,366
Так што час змяншаецца, так бы мовіць.

556
00:26:43,366 --> 00:26:44,240
ГЛЕДАЧЫ: [неразборліва]

557
00:26:44,240 --> 00:26:45,031
DAVID Малання: Space.

558
00:26:45,031 --> 00:26:46,520
Такім чынам, яшчэ раз, гэта агульная гандаль.

559
00:26:46,520 --> 00:26:50,820
Я магу паскорыць пошук, але гэта
будзе каштаваць вам больш байт прасторы.

560
00:26:50,820 --> 00:26:51,610
Чаму?

561
00:26:51,610 --> 00:26:55,230
Ну, па змаўчанні, калі ў нас няма ні аднаго з
гэтыя чырвоныя зоркі, ні адзін з гэтых паказчыкаў,

562
00:26:55,230 --> 00:26:58,797
як я кажу, як вы пошук
імя ў гэтай базе дадзеных?

563
00:26:58,797 --> 00:27:00,630
Такім чынам, давайце звернем
Увагу да гэтага прыклад.

564
00:27:00,630 --> 00:27:06,300
Калі ў нас ёсць Дэвід і Скалі і Kareem
і Arwa і іншыя ў гэтых радках,

565
00:27:06,300 --> 00:27:06,910
напрыклад.

566
00:27:06,910 --> 00:27:08,390
>> Так што давайце рабіць менавіта гэта.

567
00:27:08,390 --> 00:27:13,990
Скалі знаходзіцца тут, а затым
мы маем Карыма і Arwa,

568
00:27:13,990 --> 00:27:18,390
і ўсе астатнія, калі вы гэтага не зробіце
маюць пэўны індэкс, так бы мовіць,

569
00:27:18,390 --> 00:27:20,160
лепшае, што вы можаце зрабіць, гэта лінейны пошук.

570
00:27:20,160 --> 00:27:23,470
Калі вы шукаеце Arwa, мы не
будзе мець магчымасць перайсці прама да яе

571
00:27:23,470 --> 00:27:24,140
хутка.

572
00:27:24,140 --> 00:27:26,556
Мы збіраемся пачаць вяршыню і
прайсці ўвесь шлях да дна,

573
00:27:26,556 --> 00:27:28,600
не ў адрозненне ад нашага арыгінала
Майк Сміт прыклад.

574
00:27:28,600 --> 00:27:33,470
>> Аднак, калі я кажу, эй, базы дадзеных,
Індэкс першае поле імя,

575
00:27:33,470 --> 00:27:37,000
то гэта будзе нешта рабіць
спрактыкаваней і падтрымліваць нешта

576
00:27:37,000 --> 00:27:38,130
як бінарны пошук.

577
00:27:38,130 --> 00:27:39,820
Гэта, верагодна, не бінарны пошук па сабе.

578
00:27:39,820 --> 00:27:42,810
Базы дадзеных, як правіла, выкарыстаць іншы
Структура дадзеных пад назвай B-дрэвы,

579
00:27:42,810 --> 00:27:46,540
не варта блытаць з бінарнымі дрэвамі,
што проста зрабіць гэта хутчэй шукаць

580
00:27:46,540 --> 00:27:48,500
нешта лагарыфмічная ў прыродзе.

581
00:27:48,500 --> 00:27:53,510
Але цана, якую вы плаціце, каб стварыць што
асаблівасць, што структура дадзеных у памяці,

582
00:27:53,510 --> 00:27:54,570
гэта больш байт.

583
00:27:54,570 --> 00:27:57,170
Так што гэта можа заняць некалькі мегабайт,
некаторыя гігабайты, хто ведае?

584
00:27:57,170 --> 00:27:58,410
Гэта залежыць ад дадзеных.

585
00:27:58,410 --> 00:28:02,640
>> Так што ў нейкі момант, вы павінны вырашыць,
гэта, верагодна, не з'яўляецца агульным выпадкам.

586
00:28:02,640 --> 00:28:06,000
Дык што ж фактычная агульная
выпадкі, калі вы сапраўды павінны былі выбраць,

587
00:28:06,000 --> 00:28:10,080
што вашы любімыя палі могуць быць?

588
00:28:10,080 --> 00:28:10,580
Электронная пошта.

589
00:28:10,580 --> 00:28:14,400
І мне падабаецца, таму што адрас электроннай пошты,
у тэорыі, павінны быць унікальнымі.

590
00:28:14,400 --> 00:28:17,650
А так звычайна, калі вы ведаеце,
загадзя, што адзін з вашых палёў

591
00:28:17,650 --> 00:28:20,277
ці будзе унікальным, што
як правіла, добрае поле

592
00:28:20,277 --> 00:28:22,860
шукаць далей, таму што такім чынам,
калі вы шукаеце что-то,

593
00:28:22,860 --> 00:28:26,194
вы збіраецеся атрымаць назад адзін або
нуль адказаў, а затым вы зрабілі.

594
00:28:26,194 --> 00:28:28,110
Вам не трэба трымаць
шукае ўсё ж іншыя.

595
00:28:28,110 --> 00:28:31,992
>> І таму ў дадзеным выпадку тут, электронная пошта,
да таго часу, пакуль вы не можаце двойчы зарэгістравацца

596
00:28:31,992 --> 00:28:33,450
з той жа электроннай пошты, з'яўляецца добрым.

597
00:28:33,450 --> 00:28:36,710
ID па вызначэнні, у
інфарматыка свет,

598
00:28:36,710 --> 00:28:39,610
калі вы кажаце пра
ID, што лепш быць унікальным.

599
00:28:39,610 --> 00:28:42,970
Гэта свайго роду канатацыі
пасведчання асобы або ідэнтыфікатара.

600
00:28:42,970 --> 00:28:46,440
А астатнія з іх могуць быць,
давайце назавем іх прыемна заможным,

601
00:28:46,440 --> 00:28:47,860
але на самой справе не патрабуецца.

602
00:28:47,860 --> 00:28:49,976
>> І таму ў базе дадзеных,
Вы вызначаеце індэксы,

603
00:28:49,976 --> 00:28:51,350
але вы можаце быць яшчэ больш дакладным.

604
00:28:51,350 --> 00:28:56,060
Вы можаце сказаць, эй, базы дадзеных, пераканайцеся,
што кожны ідэнтыфікатар ў гэтай табліцы з'яўляецца унікальным.

605
00:28:56,060 --> 00:28:59,330
Нават не дазваляйце праграміста
выпадкова пакласці ў дублікаце электроннай пошце

606
00:28:59,330 --> 00:29:00,740
ці дубляваць ідэнтыфікацыйны нумар.

607
00:29:00,740 --> 00:29:03,140
Гэтак жа, як пералічэнняў
абараніць нас так жа, вас

608
00:29:03,140 --> 00:29:04,881
можа мець такія пярэчанні больш нізкага ўзроўню.

609
00:29:04,881 --> 00:29:07,130
І таму праектаванне баз дадзеных, у
нейкім сэнсе, гэта свайго роду задавальненне,

610
00:29:07,130 --> 00:29:08,380
таму што вы робіце гэта абараняючыся.

611
00:29:08,380 --> 00:29:11,460
Вы, здаецца, выказаць здагадку, што вы працуеце
з жудасны, жудасны праграмістаў

612
00:29:11,460 --> 00:29:15,550
і вы хочаце, каб пакласці ў столькі абароны
як вы можаце абараніць вашы дадзеныя,

613
00:29:15,550 --> 00:29:18,940
але адначасова вы хочаце
каб дапамагчы ім працаваць лепш

614
00:29:18,940 --> 00:29:21,386
выбраўшы які
поля для аптымізацыі.

615
00:29:21,386 --> 00:29:24,260
Але вы не можаце абавязкова рабіць гэта ў
вакуум, як мы накшталт тут.

616
00:29:24,260 --> 00:29:26,480
Вы павінны ведаць, якія
гэтыя агульныя выпадкі быцця.

617
00:29:26,480 --> 00:29:29,397
Калі распрацоўшчыкі
ажыццяўленне адраснай кнігі,

618
00:29:29,397 --> 00:29:32,230
вы можаце вельмі добра хочаце, каб мець магчымасць
шукаць амаль на кожным полі,

619
00:29:32,230 --> 00:29:33,830
толькі па сваёй прыродзе прыкладання.

620
00:29:33,830 --> 00:29:37,910
Так што, можа быць, вы праводзіце
што дадатковае прастору.

621
00:29:37,910 --> 00:29:39,090
>> Права, усе пытанні?

622
00:29:39,090 --> 00:29:41,820

623
00:29:41,820 --> 00:29:42,486
Так.

624
00:29:42,486 --> 00:29:43,470
>> ГЛЕДАЧЫ: [неразборліва]

625
00:29:43,470 --> 00:29:44,404
>> DAVID Малання: Няма

626
00:29:44,404 --> 00:29:45,279
>> ГЛЕДАЧЫ: [неразборліва]

627
00:29:45,279 --> 00:29:47,840

628
00:29:47,840 --> 00:29:48,826
>> DAVID Малання: OK.

629
00:29:48,826 --> 00:29:49,701
>> ГЛЕДАЧЫ: [неразборліва]

630
00:29:49,701 --> 00:29:52,420

631
00:29:52,420 --> 00:29:54,850
>> DAVID Малання: О, так што мы
гаворка ідзе ў шляху

632
00:29:54,850 --> 00:29:57,940
Зараз гэта цалкам залежыць ад канкрэтнага мовы.

633
00:29:57,940 --> 00:30:02,370
Такім чынам, мы зараз гаворым пра
рэляцыйных баз дадзеных, у больш агульным плане

634
00:30:02,370 --> 00:30:04,760
або SQL базы дадзеных у больш агульным плане.

635
00:30:04,760 --> 00:30:06,870
>> ГЛЕДАЧЫ: [неразборліва]

636
00:30:06,870 --> 00:30:10,030
>> DAVID Малання: Лепшае слова, каб выкарыстоўваць
гэта, можа быць выкарыстаны любы мову.

637
00:30:10,030 --> 00:30:15,280
Так што я магу пісаць код JavaScript, C
код код, C ++, Java-код, Ruby код,

638
00:30:15,280 --> 00:30:19,010
усе з якіх кажуць да
базы дадзеных і выконваць запыты.

639
00:30:19,010 --> 00:30:22,310
На самай справе, гэта не дрэнна
непасрэдна перайсці да прыклад запыту.

640
00:30:22,310 --> 00:30:25,720
І зноў жа, мы не збіраемся ўдавацца ў
Java або C ++ або любой з гэтага больш,

641
00:30:25,720 --> 00:30:29,420
але ў SQL, мова, да якога я працягваю
спасылаючыся, Structured Query Language,

642
00:30:29,420 --> 00:30:32,790
гэта само па сабе з'яўляецца мовай праграмавання,
але гэта азначала быць выкарыстаны для, няма

643
00:30:32,790 --> 00:30:37,330
здзіўленне, структураваных запытаў запытаў.

644
00:30:37,330 --> 00:30:38,660
>> Пад гэтым я маю на ўвазе гэта.

645
00:30:38,660 --> 00:30:41,190
Спосаб выбару дадзеных
з базы дадзеных MySQL

646
00:30:41,190 --> 00:30:49,330
гэта вы ў літаральным сэнсе тыпу ў вашай праграме
нешта накшталт абярыце зорку ад карыстальнікаў.

647
00:30:49,330 --> 00:30:52,200
Я мяркую, што гэтая табліца,
з гэтага часу называецца карыстальнікаў.

648
00:30:52,200 --> 00:30:54,860
Я мог бы назваць гэта ўсё, што мы хочам,
але гэта свайго роду мае сэнс.

649
00:30:54,860 --> 00:30:57,240
І таму выбар вельмі
агульны дзеяслоў, калі вы

650
00:30:57,240 --> 00:30:59,290
будзе, у SQL, якая літаральна робіць гэта.

651
00:30:59,290 --> 00:31:02,730
Як вы думаеце, зорка
азначае, што ў дадзеным кантэксце?

652
00:31:02,730 --> 00:31:04,410
>> ГЛЕДАЧЫ: [неразборліва]

653
00:31:04,410 --> 00:31:05,380
>> DAVID Малання: Я шкадую?

654
00:31:05,380 --> 00:31:06,300
>> ГЛЕДАЧЫ: [неразборліва]

655
00:31:06,300 --> 00:31:09,580
>> DAVID Малання: Не патрабуецца, гэта
больш шырокім, чым гэта, на самой справе.

656
00:31:09,580 --> 00:31:11,700
Гэта дзікі сімвал карты.

657
00:31:11,700 --> 00:31:14,740
Зорка амаль заўсёды азначае што-небудзь,
так што гэта азначае, што, у дадзеным выпадку,

658
00:31:14,740 --> 00:31:16,510
выбраць усе з базы дадзеных.

659
00:31:16,510 --> 00:31:20,730
Таму, калі я кажу пра гэта, я маю на ўвазе
вярні мне кожны слупок

660
00:31:20,730 --> 00:31:22,440
ад майго стала называецца карыстальнікаў.

661
00:31:22,440 --> 00:31:24,730
Так дайце мне набор вынікаў, як гэта называецца.

662
00:31:24,730 --> 00:31:28,210
Іншымі словамі, дайце мне копію
электроннымі табліцамі, з'яўляецца тое, што я хілю.

663
00:31:28,210 --> 00:31:34,890
>> Але калі б я сказаў, абярыце зорка ад карыстальнікаў
дзе ID роўна 1, наколькі вялікі павінна

664
00:31:34,890 --> 00:31:36,640
мой выніковы набор будзе тады?

665
00:31:36,640 --> 00:31:41,680
Ці тое ж, колькі радкоў павінна
Я быць перададзены назад з базы дадзеных?

666
00:31:41,680 --> 00:31:45,860
Напэўна, толькі адзін, калі ў мяне ёсць на самой справе
апрацоўваюць ID ў якасці унікальнага ідэнтыфікатара,

667
00:31:45,860 --> 00:31:50,710
і калі Дэвід мае той унікальны ідэнтыфікатар, я
павінны атрымаць назад адну і толькі адзін радок

668
00:31:50,710 --> 00:31:53,220
які змяшчае ўсю інфармацыю Давіда.

669
00:31:53,220 --> 00:31:56,390
Калі б я сказаў, што гэта дзе ID
роўная 99, я павінен вярнуцца,

670
00:31:56,390 --> 00:32:00,320
У гэтым кантэксце, нулявыя радкі,
па меншай меры на дадзены момант.

671
00:32:00,320 --> 00:32:03,620
>> Аднак, калі я на самой справе не хвалюе
аб усёй гэтай інфармацыі,

672
00:32:03,620 --> 00:32:06,970
Я мог бы проста сказаць, дзе жыве Дэвід?

673
00:32:06,970 --> 00:32:10,860
Выберыце паштовы індэкс з
карыстальнікаў, дзе ідэнтыфікатар 1.

674
00:32:10,860 --> 00:32:15,820
Гэта дазволіць выбраць для мяне толькі паштовы Давіда
код, а не паўната гэтага радка.

675
00:32:15,820 --> 00:32:19,541
Чаму я мог бы зрабіць гэта замест таго,
зорка запыту, дзікая карта?

676
00:32:19,541 --> 00:32:21,950
>> ГЛЕДАЧЫ: [неразборліва]

677
00:32:21,950 --> 00:32:24,590
>> DAVID Малання: Так, я, магчыма, спатрэбіцца толькі яго.

678
00:32:24,590 --> 00:32:26,350
Так што прадукцыйнасць зноў тут адказ.

679
00:32:26,350 --> 00:32:28,540
Навошта прасіць больш
інфармацыі, чым вам трэба,

680
00:32:28,540 --> 00:32:32,020
таму што нават калі гэта ўсё ў парадку разам,
вы ўсё роўна павінны скапіяваць гэтыя дадзеныя,

681
00:32:32,020 --> 00:32:35,560
здавалася б, з базы дадзеных
ў вашу праграму так ці інакш,

682
00:32:35,560 --> 00:32:38,490
і гэта проста недарэчна, калі вам
трэба толькі пяць з гэтых лічбаў,

683
00:32:38,490 --> 00:32:40,340
ня сукупнасць шэрагу.

684
00:32:40,340 --> 00:32:42,180
>> Дык як жа я ўстаўляю карыстальніка?

685
00:32:42,180 --> 00:32:44,780
Выкажам здагадку, што карыстальнік мае толькі
зарэгістраваны ў першы раз.

686
00:32:44,780 --> 00:32:46,560
Сінтаксіс звычайна выглядае наступным чынам.

687
00:32:46,560 --> 00:32:52,700
Уставіць у карыстальнікаў, і
то мы сказалі б значэння,

688
00:32:52,700 --> 00:33:00,150
і тады мы сказалі б значэння
як, скажам, Ларэн Скалі,

689
00:33:00,150 --> 00:33:02,380
наш відэааператар прама тут.

690
00:33:02,380 --> 00:33:04,390
І наступнае поле з'яўляецца падлогу.

691
00:33:04,390 --> 00:33:08,020
Так што мы будзем казаць цытата, канец цытаты
"Е", гэта значыць ідэнтыфікатар

692
00:33:08,020 --> 00:33:12,250
і я збіраюся say-- давайце
рабіць выгляд, што яна на самай справе не тут,

693
00:33:12,250 --> 00:33:14,380
таму мы пераматаць у гісторыі.

694
00:33:14,380 --> 00:33:16,530
Так 2 будзе яе ID.

695
00:33:16,530 --> 00:33:19,130
А потым наступнае поле
Вось яе электронная пошта.

696
00:33:19,130 --> 00:33:22,140
Так што гэта будзе падобна
Ларэн Скалі і гэтак далей,

697
00:33:22,140 --> 00:33:24,360
і мы проста кропка кропка
кропка яго адсюль на.

698
00:33:24,360 --> 00:33:26,890
Цяпер ён будзе атрымліваць трохі
стомна, але запыт ўстаўкі

699
00:33:26,890 --> 00:33:28,310
у канчатковым выніку выглядаць.

700
00:33:28,310 --> 00:33:30,970
>> Калі я хачу, каб пазбавіцца ад
Скалі, э-э-о, давайце дерегистрировать

701
00:33:30,970 --> 00:33:37,420
яе, яна выдаляе яе кошт,
выдаліць з карыстальнікаў, дзе ID роўна 2,

702
00:33:37,420 --> 00:33:38,500
пазбавяцца ад Скалі.

703
00:33:38,500 --> 00:33:48,050
Ці я магу сказаць ўсталяваць абнаўленне карыстальнікаў,
скажам, што мы можам змяніць?

704
00:33:48,050 --> 00:33:49,430
Выкажам здагадку, што яна рухаецца.

705
00:33:49,430 --> 00:33:53,730
Набор на маланкі роўная 021-- Няма,
гэта яе ток маланкі.

706
00:33:53,730 --> 00:33:54,487
90210.

707
00:33:54,487 --> 00:33:56,320
Адзіны іншы паштовы індэкс
Я ведаю, што ў сьвеце.

708
00:33:56,320 --> 00:33:59,002
Так што зменіцца
яе паштовы code-- на самай справе,

709
00:33:59,002 --> 00:34:00,460
гэта не змяніла б яе паштовы індэкс.

710
00:34:00,460 --> 00:34:02,170
>> Што я толькі што рабіць?

711
00:34:02,170 --> 00:34:04,292
Нягледзячы на ​​тое, што сінтаксіс, верагодна, новы.

712
00:34:04,292 --> 00:34:05,302
>> ГЛЕДАЧЫ: [неразборліва]

713
00:34:05,302 --> 00:34:08,010
DAVID Малання: Так, я пераехаў ўсіх
ў Бэвэрлі-Хілз, штат Каліфорнія.

714
00:34:08,010 --> 00:34:11,920
Так што я павінен на самай справе
сказаць, дзе ID роўна 2.

715
00:34:11,920 --> 00:34:12,820
І гэтак далей.

716
00:34:12,820 --> 00:34:15,290
Так што SQL усё пра іх
віды інструкцый.

717
00:34:15,290 --> 00:34:20,260
Выберыце, ўстаўляць, выдаляць, абнаўляць,
з гэтымі прэдыкатамі ў канцы

718
00:34:20,260 --> 00:34:22,139
гэтыя пункты, дзе, так бы мовіць.

719
00:34:22,139 --> 00:34:25,170
І ёсць нашмат больш, вы можаце
рабіць, але гэта на самай справе проста зводзіцца

720
00:34:25,170 --> 00:34:29,750
проста, калі arcanely, выказваючы
што вы хочаце зрабіць базу дадзеных.

721
00:34:29,750 --> 00:34:31,580
>> А потым база дадзеных
будзе высветліць, калі

722
00:34:31,580 --> 00:34:35,630
ўставіць Lauren Скалі ў
базы дадзеных, куды змясціць яе ў памяці

723
00:34:35,630 --> 00:34:38,230
так што мы можам вельмі хутка атрымаць
яна заснаваная на яе адрас электроннай пошты

724
00:34:38,230 --> 00:34:42,610
або на аснове яе ідэнтыфікацыйны нумар ці таму падобнае.

725
00:34:42,610 --> 00:34:43,391
Так, Дэн.

726
00:34:43,391 --> 00:34:44,266
ГЛЕДАЧЫ: [неразборліва]

727
00:34:44,266 --> 00:34:46,364

728
00:34:46,364 --> 00:34:47,780
DAVID Малання: Сапраўды добры пытанне.

729
00:34:47,780 --> 00:34:50,370
Ці будуць гэтыя сцэнары пераходу ад
Microsoft Access ў Oracle

730
00:34:50,370 --> 00:34:52,290
да MySQL у PostgreSQL?

731
00:34:52,290 --> 00:34:53,790
Кароткі адказ: гэта залежыць.

732
00:34:53,790 --> 00:34:58,697
Тэарэтычна існуе вельмі
значнае агульнае падмноства SQL

733
00:34:58,697 --> 00:35:00,780
які выкарыстоўваецца ва ўсіх
з гэтых рэалізацый.

734
00:35:00,780 --> 00:35:03,340
Тым не менш, розныя вытворцы
маюць дадатковыя функцыі

735
00:35:03,340 --> 00:35:07,120
да іх баз дадзеных, каб рабіць пэўныя рэчы
выходзіць за рамкі гэтых функцый,

736
00:35:07,120 --> 00:35:08,720
якія маглі б, на самай справе, перапынак.

737
00:35:08,720 --> 00:35:11,210
>> Так што распрацоўшчыкі шляху
хеджировать супраць гэтага,

738
00:35:11,210 --> 00:35:14,350
з'яўляецца тое, што замест таго, каб пісаць сырой
SQL-код, як я пішу тут,

739
00:35:14,350 --> 00:35:19,460
яны замест таго, каб выкарыстоўваць бібліятэку,
агульная бібліятэка, якая сама па сабе

740
00:35:19,460 --> 00:35:23,650
з'яўляецца свайго роду больш высокага ўзроўню і тэзісы
прэч, які прадукт вы выкарыстоўваеце.

741
00:35:23,650 --> 00:35:25,710
І гэта дае вам
функцыі і працэдуры

742
00:35:25,710 --> 00:35:28,810
каб патэлефанаваць, так што вы ніколі
на самай справе пісаць сырой SQL.

743
00:35:28,810 --> 00:35:32,609
>> У тэорыі, то вы можаце змяніць
прадукты з Oracle ў Microsoft

744
00:35:32,609 --> 00:35:34,650
ці наадварот, або што-небудзь
яшчэ, і вы ў літаральным сэнсе

745
00:35:34,650 --> 00:35:36,920
нічога не мяняюць аб вашым кодзе.

746
00:35:36,920 --> 00:35:40,180
Рэальнасць, аднак, з'яўляецца тое, вы часам
адмовіцца ад функцыі ў якасці выніку.

747
00:35:40,180 --> 00:35:43,860
Вы маглі б выбраць прадукт, таму што
ён атрымаў гэтыя функцыі з дабаўленай коштам,

748
00:35:43,860 --> 00:35:46,610
і вы толькі цяпер не
выкарыстоўваючы іх свядома.

749
00:35:46,610 --> 00:35:51,630
>> І Займальна, што большасць кампаній, як правіла,
ніколі не адыходзіць ад сваёй базы дадзеных.

750
00:35:51,630 --> 00:35:54,002
Такім чынам, у той час як гэта прыемна
ёсць асаблівасць, рэальнасць

751
00:35:54,002 --> 00:35:55,960
ёсць, калі вы капітальнага рамонту
ваша база дадзеных, вы

752
00:35:55,960 --> 00:35:59,890
верагодна, што робіць гронкі іншых змен
ва ўсякім выпадку, што вы не абавязкова

753
00:35:59,890 --> 00:36:01,360
павінны прадбачыць, што.

754
00:36:01,360 --> 00:36:03,720
Так што, магчыма,
над-інжынерныя праблемы,

755
00:36:03,720 --> 00:36:05,670
але гэта сапраўды залежыць ад кантэксту.

756
00:36:05,670 --> 00:36:09,960
Але ў тэорыі, SQL сумесна
праз гэтыя розныя прадукты.

757
00:36:09,960 --> 00:36:11,560
Сапраўды добрыя пытанні.

758
00:36:11,560 --> 00:36:12,272
Так.

759
00:36:12,272 --> 00:36:13,147
>> ГЛЕДАЧЫ: [неразборліва]

760
00:36:13,147 --> 00:36:17,820

761
00:36:17,820 --> 00:36:21,480
>> DAVID Малання: Так, так
вы можаце думаць базу дадзеных

762
00:36:21,480 --> 00:36:25,020
гэта проста сервер, у канцы
на наступны дзень, і ўнутры гэтага сервера

763
00:36:25,020 --> 00:36:28,670
гэта цэлая куча
табліц, радкоў і слупкоў.

764
00:36:28,670 --> 00:36:33,410
І калі вы пасылаеце запыт, як гэта
з вашай праграмы, ваш вэб-сайт,

765
00:36:33,410 --> 00:36:39,340
напісаная на Java, Ruby, Python, незалежна,
сервер атрымлівае гэтую каманду

766
00:36:39,340 --> 00:36:41,660
і інтэрпрэтацыі яго ў
літаральна так жа, як

767
00:36:41,660 --> 00:36:43,660
мы абмяркоўвалі раней з
інтэрпрэтаваная мова,

768
00:36:43,660 --> 00:36:47,333
а затым выконвае якое-небудзь дзеянне на нуль
або больш радкоў у нуль або больш табліц.

769
00:36:47,333 --> 00:36:48,208
ГЛЕДАЧЫ: [неразборліва]

770
00:36:48,208 --> 00:36:53,540

771
00:36:53,540 --> 00:36:55,070
>> DAVID Малання: Точно, дакладна.

772
00:36:55,070 --> 00:36:58,450
Так псевдокод для чаго-то
як гэта магло б быць гэта.

773
00:36:58,450 --> 00:37:02,450
У файле PHP ці вашы
файл Python або файл Java,

774
00:37:02,450 --> 00:37:09,210
вы б псевдокод код, або
Скрэтч-падобныя блокі, як, калі карыстальнік наведвае

775
00:37:09,210 --> 00:37:19,870
acme.com/register~~V ўпершыню,
затым ўставіць у карыстальнікаў і гэтак далей.

776
00:37:19,870 --> 00:37:22,619
І мы б перавесці гэта
больш канкрэтны код у канцы.

777
00:37:22,619 --> 00:37:24,660
Але на самой справе, у нас ёсць усе
будаўнічыя блокі тут,

778
00:37:24,660 --> 00:37:27,680
нягледзячы на ​​тое, што мы прапускаючы некаторыя
з этапаў рэалізацыі.

779
00:37:27,680 --> 00:37:31,560
>> Такім чынам, дазвольце мне прыдзірацца, што мы
цудоўна зрабіў толькі хвіліну таму.

780
00:37:31,560 --> 00:37:36,470
Вы стварылі даволі
Поўная табліца для карыстальнікаў.

781
00:37:36,470 --> 00:37:38,920
Варта прызнаць, што мы маглі б рэалізаваць
гэта ў некалькі розных спосабаў,

782
00:37:38,920 --> 00:37:43,030
але вы на самой справе прывяло нас
ўніз па path-- і я кажу вам,

783
00:37:43,030 --> 00:37:48,080
але гэта, верагодна, мой fault-- з даволі
неэфектыўная рэалізацыя базы дадзеных.

784
00:37:48,080 --> 00:37:49,950
Гэта не нармаваныя.

785
00:37:49,950 --> 00:37:52,320
>> І я маю на ўвазе нармаваная
там будзе,

786
00:37:52,320 --> 00:37:57,380
з цягам часу, значная надмернасць,
і, такім чынам, неэфектыўнасць,

787
00:37:57,380 --> 00:38:00,210
што гэта пустая трата прасторы.

788
00:38:00,210 --> 00:38:05,650
На падставе толькі тое, што вы бачыце тут, можа
Вы бачыце, дзе гэта пустая трата прасторы

789
00:38:05,650 --> 00:38:08,710
збіраецца прыбыць з цягам часу,
, Як зарэгістраваць больш і больш карыстальнікаў

790
00:38:08,710 --> 00:38:10,860
для вашага сайта?

791
00:38:10,860 --> 00:38:13,047
Якія дадзеныя могуць стаць лішнімі?

792
00:38:13,047 --> 00:38:19,084

793
00:38:19,084 --> 00:38:20,940
>> ГЛЕДАЧЫ: [неразборліва]

794
00:38:20,940 --> 00:38:22,686
>> DAVID Малання: Чаму вы маеце на ўвазе, што?

795
00:38:22,686 --> 00:38:23,561
ГЛЕДАЧЫ: [неразборліва]

796
00:38:23,561 --> 00:38:32,180

797
00:38:32,180 --> 00:38:32,930
DAVID Малання: Так.

798
00:38:32,930 --> 00:38:35,622
І давайце выкажам здагадку, што для мэтаў
На сённяшні дзень, што гэта праўда.

799
00:38:35,622 --> 00:38:38,330
Аказваецца, і мы даведаліся гэта
цяжкі шлях, гэта не так.

800
00:38:38,330 --> 00:38:41,670
Неяк некалькі гарадоў ёсць,
так ці інакш, той жа паштовы індэкс,

801
00:38:41,670 --> 00:38:43,390
які разбурае гэтую выдатную інтуіцыю.

802
00:38:43,390 --> 00:38:46,180
Але давайце выкажам здагадку, што гэта праўда,
таму што гэта амаль заўсёды дакладна.

803
00:38:46,180 --> 00:38:51,390
Таму выкажам здагадку, што паштовы індэкс
заўсёды звязана з тым жа горадам

804
00:38:51,390 --> 00:38:53,600
і стан, якое з'яўляецца свайго роду
разумнага здагадкі,

805
00:38:53,600 --> 00:38:54,840
але няслушна, атрымліваецца.

806
00:38:54,840 --> 00:38:57,310
Але разумнае здагадка
для сённяшніх мэтаў.

807
00:38:57,310 --> 00:39:01,650
>> Зараз выкажам здагадку, што я жыву ў Кембрыджы,
MA, у адпаведнасці з табліцай гэтага карыстальніка,

808
00:39:01,650 --> 00:39:04,100
і выкажам здагадку, што Ларэн
Скалі жыве ў Кембрыджы, штат Масачусэтс,

809
00:39:04,100 --> 00:39:06,120
і выкажам здагадку, што Карыма
жыве ў Кембрыджы, штат Масачусэтс,

810
00:39:06,120 --> 00:39:10,400
і Arwa жыве ў Кембрыджы,
MA, усе мы ў 02138.

811
00:39:10,400 --> 00:39:15,890
Чаму мы памятаць, Кембрыдж,
MA, 02138 для ўсіх нас чацвярых?

812
00:39:15,890 --> 00:39:18,903
Што павінна быць дастаткова, каб успомніць?

813
00:39:18,903 --> 00:39:20,249
>> ГЛЕДАЧЫ: [неразборліва]

814
00:39:20,249 --> 00:39:21,540
DAVID Малання: Проста паштовы індэкс.

815
00:39:21,540 --> 00:39:25,080
Толькі тое, што 02138 існуе, таму што
Вы ведаеце, што мы можам зрабіць?

816
00:39:25,080 --> 00:39:32,650
Мы маглі б атрымаць трохі фантазіі тут
і тут, вызначыць іншую табліцу

817
00:39:32,650 --> 00:39:35,850
дзе гэта збіраецца быць
імя, гэта будзе тып,

818
00:39:35,850 --> 00:39:38,840
гэта збіраецца быць
даўжыня, і ў далейшым, я

819
00:39:38,840 --> 00:39:42,900
буду называць гэта мой стол горада.

820
00:39:42,900 --> 00:39:47,011
Гэта было названа, з
Вядома, мае карыстальнікі табліца.

821
00:39:47,011 --> 00:39:49,885
І так, што я павінен паставіць тут
для маёй табліцы гарадоў, як вы думаеце?

822
00:39:49,885 --> 00:39:53,605

823
00:39:53,605 --> 00:39:54,535
>> ГЛЕДАЧЫ: [неразборліва]

824
00:39:54,535 --> 00:39:55,930
>> DAVID Малання: Так.

825
00:39:55,930 --> 00:40:01,440
Так маланкі і штат і горад.

826
00:40:01,440 --> 00:40:05,350
І таму тып тут, мы будзем казаць
гэта будзе сімвал 5 разоў,

827
00:40:05,350 --> 00:40:06,750
пры ўмове дыскусіі раней.

828
00:40:06,750 --> 00:40:14,810
Гэта будзе пералік, магчыма, як
раней, і горад будзе VARCHAR 50.

829
00:40:14,810 --> 00:40:17,960
Так што цяпер я атрымліваю
каб сцерці з гэтай табліцы

830
00:40:17,960 --> 00:40:21,995
каб ліквідаваць гэтую неэфектыўнасць?

831
00:40:21,995 --> 00:40:23,100
>> ГЛЕДАЧЫ: [неразборліва]

832
00:40:23,100 --> 00:40:23,850
DAVID Малання: Ніца.

833
00:40:23,850 --> 00:40:30,239
Дзяржава і горад сысці, таму я прама цяпер
ліквідавалі патэнцыйную неэфектыўнасць

834
00:40:30,239 --> 00:40:33,280
для залішне запамінання, Кембрыдж,
MA, Кембрыдж, Масачусэтс, Кембрыдж, Масачусэтс,

835
00:40:33,280 --> 00:40:35,712
Кембрыдж, штат Масачусэтс, які, мы спадзяемся,
ніколі не зменіцца.

836
00:40:35,712 --> 00:40:37,670
І нават калі гэта робіць, гэта
minorly раздражняе, цяпер

837
00:40:37,670 --> 00:40:39,750
што я павінен змяніць
ён у некалькі радкоў,

838
00:40:39,750 --> 00:40:43,770
у той час як тут, я мог бы проста
змяніць яго ў адным месцы.

839
00:40:43,770 --> 00:40:46,890
>> Цяпер тое, што кампраміс, магчыма?

840
00:40:46,890 --> 00:40:48,020
Гэта было супер зручна.

841
00:40:48,020 --> 00:40:50,730
Калі б усе мае дадзеныя добра разам.

842
00:40:50,730 --> 00:40:53,644
Але тое, што так ідзе справа цяпер?

843
00:40:53,644 --> 00:40:55,684
>> ГЛЕДАЧЫ: [неразборліва]

844
00:40:55,684 --> 00:40:58,100
DAVID Малання: Цалкам дакладна, і я
рады, што вы выкарыстоўвалі слова далучыцца,

845
00:40:58,100 --> 00:41:01,320
таму што гэта на самай справе ключавое слова,
у свеце рэляцыйных баз дадзеных

846
00:41:01,320 --> 00:41:05,270
у SQL, гэта фактычнае слова, якое вы
можа ўвесці або, па меншай меры, перадаць.

847
00:41:05,270 --> 00:41:09,280
І на самай справе, што мы зараз павінны зрабіць
каб выбраць поўную інфармацыю Дэвіда

848
00:41:09,280 --> 00:41:19,700
нешта накшталт выбару зоркі з
карыстальнікі, далучыцца горада, on-- і цяпер

849
00:41:19,700 --> 00:41:24,010
Я збіраюся проста перайсці на другой лініі
так што гэтая fits-- users.zip роўная

850
00:41:24,010 --> 00:41:34,570
cities.zip, дзе users.ID роўны 1.

851
00:41:34,570 --> 00:41:35,550
>> Дык што ж адбываецца?

852
00:41:35,550 --> 00:41:38,970
Гэта непрыгожа выглядае, але вы можаце выгляд
прачытаць яго злева направа, зверху ўніз.

853
00:41:38,970 --> 00:41:41,030
Выбар зорак ад карыстальнікаў
такі ж, як і раней,

854
00:41:41,030 --> 00:41:42,930
але гэта не ад карыстальнікаў, якія самі па сабе.

855
00:41:42,930 --> 00:41:45,910
Гэта ад карыстальнікаў далучыцца гарадоў.

856
00:41:45,910 --> 00:41:48,520
Што я, якая злучае гэтыя дзве табліцы на?

857
00:41:48,520 --> 00:41:51,820
Што ж, мяркуючы па ўсім,
карыстальнікаў табліцы паштовы індэкс поля,

858
00:41:51,820 --> 00:41:54,810
і гэты перыяд проста асаблівым
сінтаксіс, каб выказаць гэтую ідэю,

859
00:41:54,810 --> 00:41:58,130
і гэта табліцы гарадоў паштовы індэкс поля.

860
00:41:58,130 --> 00:42:01,580
Я хачу, каб гэтыя двое быць роўнымі,
але я хачу, каб у канчатковым выніку выбраць

861
00:42:01,580 --> 00:42:06,280
толькі тыя радкі, у якіх
ID ў табліцы карыстальнікаў

862
00:42:06,280 --> 00:42:08,730
роўны 1, што здарылася з маім.

863
00:42:08,730 --> 00:42:11,781
>> І проста каб быць ясна, А
праграміст, як правіла, калі

864
00:42:11,781 --> 00:42:14,780
жорстка нешта накшталт колькасці
1, так як у адваротным выпадку толькі вэб-сайт

865
00:42:14,780 --> 00:42:17,630
падтрымлівае Давіда ці таму
Самы першы карыстальнік, вы

866
00:42:17,630 --> 00:42:20,720
замест гэтага рабіць
нешта накшталт ID, дзе

867
00:42:20,720 --> 00:42:22,510
Гэта ўяўляе сабой
зменная, тое, што

868
00:42:22,510 --> 00:42:26,210
можа мяняцца з цягам часу, аналагічна
у духу таго, што я ўжо казаў раней

869
00:42:26,210 --> 00:42:28,080
з гэтымі відамі запаўняльнікаў.

870
00:42:28,080 --> 00:42:30,396
Але цяпер мы проста жорстка яго як 1.

871
00:42:30,396 --> 00:42:31,520
Дык што ж гэта азначае?

872
00:42:31,520 --> 00:42:35,100
Што ж, добры спосаб візуалізаваць гэта
што калі гэтая рука табліца карыстальнікаў,

873
00:42:35,100 --> 00:42:38,090
і гэтая рука промелькивает
стол, мы свайго роду finding--

874
00:42:38,090 --> 00:42:41,330
а кончыкі маіх пальцаў на маланкі
тут, а кончыкі маіх пальцаў

875
00:42:41,330 --> 00:42:43,740
вось зашпілька-маланка, вы
выгляд блакавання яго

876
00:42:43,740 --> 00:42:47,950
так што вы атрымаеце назад атрыманы
зыходная табліца, па-сапраўднаму далучыцца

877
00:42:47,950 --> 00:42:49,590
гэтыя дзве табліцы па агульным полі.

878
00:42:49,590 --> 00:42:50,840
І гэта не павінна быць на маланкі.

879
00:42:50,840 --> 00:42:54,460
Гэта можа быць самае што-небудзь яшчэ, але
зашпілька-маланка добрая, таму што адзін, гэта коратка,

880
00:42:54,460 --> 00:42:56,470
два, гэта заўсёды
такой жа даўжыні, так што ёсць

881
00:42:56,470 --> 00:43:02,270
рэальны каэфіцыент карыснага дзеяння да таго, што
Аліўе прапанаваў тут

882
00:43:02,270 --> 00:43:05,200
з факторизуя маланку, і
[Неразборліва] прапануе, каб мы пазбаўляемся

883
00:43:05,200 --> 00:43:07,110
горада і краіны.

884
00:43:07,110 --> 00:43:11,370
>> Так што гэта працэс
вядомы як нармалізацыя.

885
00:43:11,370 --> 00:43:14,171
Ёсць пытанні на гэты конт?

886
00:43:14,171 --> 00:43:16,170
Ну дазвольце мне адзначыць,
гэта такія рэчы,

887
00:43:16,170 --> 00:43:19,202
нягледзячы на ​​тое, што гэта даволі нізкага ўзроўню,
гэта абмеркаванне, што вы маглі б падумаць

888
00:43:19,202 --> 00:43:20,910
вы, здаецца, атрымання
страцілі ў пустазелля,

889
00:43:20,910 --> 00:43:26,690
гэта праява дастаткова
магчымасць для распрацоўнікаў, каб быць дрэнным.

890
00:43:26,690 --> 00:43:29,600
І на самай справе, нават тады, калі мы, у
курсы я вучыў, калі ў нас было,

891
00:43:29,600 --> 00:43:32,290
напрыклад, неспрактыкаваны
бакалаўрыят праграмісты

892
00:43:32,290 --> 00:43:35,920
ствараць вэб-сайты, на першы погляд,
вэб-сайты могуць выглядаць узрушаюча.

893
00:43:35,920 --> 00:43:38,280
І ў іх ёсць усе з
функцыянальнасць мы прасілі,

894
00:43:38,280 --> 00:43:40,650
распрацоўшчыкі зрабілі добрую працу.

895
00:43:40,650 --> 00:43:43,370
>> Але яны не абавязкова ведаць
досыць пра праектаванне баз дадзеных

896
00:43:43,370 --> 00:43:46,680
ці яны не думалі, цяжка
досыць пра тыпы дадзеных

897
00:43:46,680 --> 00:43:49,220
і тыпы карыстальнікаў:
Сайт будзе мець,

898
00:43:49,220 --> 00:43:53,240
і мы знаходзім, то, праз шэсць месяцаў,
пасля таго, як яны скончылі або рушылі далей,

899
00:43:53,240 --> 00:43:56,016
што, чорт вазьмі, наш вэб-сайт
на самай справе, па-сапраўднаму павольна.

900
00:43:56,016 --> 00:43:58,890
І я нават не кажу пра тое,
мільёны ці тысячы карыстальнікаў.

901
00:43:58,890 --> 00:44:02,580
Я маю на ўвазе некалькі сотняў карыстальнікаў у універсітэцкім гарадку,
усе з якіх любяць, напрыклад,

902
00:44:02,580 --> 00:44:04,870
крама для курсаў у
у той жа час, яны

903
00:44:04,870 --> 00:44:07,010
выкарыстоўваючы гэты каталог курсаў
Прымяненне я згадаў

904
00:44:07,010 --> 00:44:10,410
і рэч становіцца сапраўды
запаволіць, таму што не было ніякіх індэксаў.

905
00:44:10,410 --> 00:44:13,740
Там не было ніякіх чырвоных зорак, так
кажуць, ці ў нас было не абавязкова

906
00:44:13,740 --> 00:44:17,690
факторизовали агульныя дадзеныя
атрымаць некаторую эканомію прасторы.

907
00:44:17,690 --> 00:44:21,880
>> І таму, калі зандаж распрацоўшчык
або базу дадзеных асобы або т.п.,

908
00:44:21,880 --> 00:44:25,864
віды пытанняў, прадумваць
нават пры разглядзе чыйсьці код,

909
00:44:25,864 --> 00:44:28,530
сказаць, не абавязкова шукаць
праз усе іх кода, але кажуць,

910
00:44:28,530 --> 00:44:30,154
давайце паглядзім праз табліцы базы дадзеных.

911
00:44:30,154 --> 00:44:31,150
Што ты захоўваць?

912
00:44:31,150 --> 00:44:33,941
А потым сказаць, ну, пачакайце
хвіліна, чаму вы карыстаецеся цэлы лік?

913
00:44:33,941 --> 00:44:36,224
Што рабіць, калі ў нас ёсць 4 млрд
і 1 з гэтых радкоў?

914
00:44:36,224 --> 00:44:38,140
І гэтыя віды
пытанняў з'яўляецца магчымасць

915
00:44:38,140 --> 00:44:40,170
каб збольшага адціснуць і
атрымаць пачуццё, дзе

916
00:44:40,170 --> 00:44:42,300
калі вы не зручна рабіць
ён, маючы каго-то больш тэхнічны

917
00:44:42,300 --> 00:44:45,425
задаць гэтыя пытанні, ад таго, ці не
чалавек сапраўды ведае сваю справу.

918
00:44:45,425 --> 00:44:47,890
І гэта свайго роду
матэрыял таксама, што людзі

919
00:44:47,890 --> 00:44:50,540
ў Інтэрнэце, які
самавукі, можа быць,

920
00:44:50,540 --> 00:44:53,920
даведацца радзей, таму што вы
не абавязкова трапляўся

921
00:44:53,920 --> 00:44:56,630
столькі ж, таму што вы можаце атрымаць
база дадзеных і працуе,

922
00:44:56,630 --> 00:44:58,880
але калі вы не чыталі
на падручнікі ці былі

923
00:44:58,880 --> 00:45:01,880
распавёў аб нармалізацыі баз дадзеных
і індэксацыі і прадукцыйнасць,

924
00:45:01,880 --> 00:45:04,255
гэтыя віды рэчаў
што збіраюцца прычыніць вам шкоду.

925
00:45:04,255 --> 00:45:07,480
І вы маглі б падумаць, ці дрэнны інжынер
Можна сказаць, ну, добра, мы лепш плаціць

926
00:45:07,480 --> 00:45:09,600
для большай базы дадзеных
ці хутчэй базы дадзеных

927
00:45:09,600 --> 00:45:13,360
або проста выкінуць грошы на гэта,
вертыкальна маштаб, не абавязкова так.

928
00:45:13,360 --> 00:45:16,920
Калі вы ідзяце in-- і вы можаце пайсці ў
пасля fact-- і дадаць індэксы,

929
00:45:16,920 --> 00:45:20,320
і гэта можа заняць некалькі гадзін для
базы дадзеных, каб стварыць што новыя дадзеныя

930
00:45:20,320 --> 00:45:24,100
Структура, што я згадваў раней,
вы ўсё яшчэ можаце выправіць гэта пасля таго, як той факт,

931
00:45:24,100 --> 00:45:26,180
што гэта, дзе вы
пачынаюць адрозніваць

932
00:45:26,180 --> 00:45:28,830
добрыя дызайнеры з дрэнна
дызайнеры, а не толькі эстэтычна,

933
00:45:28,830 --> 00:45:32,972
але з пункту гледжання прадукцыйнасці, а таксама.

934
00:45:32,972 --> 00:45:33,555
Ёсць пытанні?

935
00:45:33,555 --> 00:45:36,420

936
00:45:36,420 --> 00:45:37,480
Няма?

937
00:45:37,480 --> 00:45:41,980
Так што для NoSQL, які быў іншы тып
базы дадзеных, да якой я згадваў раней,

938
00:45:41,980 --> 00:45:43,490
ў вас няма радкі і слупкі.

939
00:45:43,490 --> 00:45:47,000
Замест гэтага, вы б нешта
што выглядае крыху больш, як гэта.

940
00:45:47,000 --> 00:45:48,630
Я збіраюся выкарыстоўваць агульны сінтаксіс.

941
00:45:48,630 --> 00:45:51,270
Фігурныя дужкі, здараецца
выкарыстоўваецца тут даволі шмат.

942
00:45:51,270 --> 00:45:55,400
Вы маглі б мець нешта
як першае імя Давід,

943
00:45:55,400 --> 00:46:00,180
вы, магчыма, у апошні раз
імя малая, цытаты,

944
00:46:00,180 --> 00:46:07,530
Вы маглі б мець ID is--
прабачце, whoops-- ID 1,

945
00:46:07,530 --> 00:46:13,410
электронная пошта malan@harvard.edu, і я не буду
затлумляцца друкавала астатняе, а потым

946
00:46:13,410 --> 00:46:14,380
некаторыя іншыя рэчы.

947
00:46:14,380 --> 00:46:17,380
>> Іншымі словамі, гэта
тэкставае прадстаўленне

948
00:46:17,380 --> 00:46:20,720
ад таго, што мы звычайна называем
аб'ект у кампутарнай праграме.

949
00:46:20,720 --> 00:46:26,079
І аб'ект, як правіла, проста
калекцыя пар ключ-значэнне.

950
00:46:26,079 --> 00:46:27,370
Так зноў жа, гэта паўтаральная тэма.

951
00:46:27,370 --> 00:46:30,440
Мы бачылі пары ключ значэнне ў HTML,
мы ўбачылі пары ключ-значэнне ў цяперашні час

952
00:46:30,440 --> 00:46:34,020
у кантэксце баз дадзеных, і мы
бачыў пары ключ-значэнне ў кантэксце

953
00:46:34,020 --> 00:46:35,970
о, я думаю, мова раней сёння.

954
00:46:35,970 --> 00:46:36,890
Трымае прыдумляюць.

955
00:46:36,890 --> 00:46:39,620
І на самай справе, гэта сапраўды
якія дадзеныя зводзіцца да таго,

956
00:46:39,620 --> 00:46:44,240
дадзеныя і метададзеныя, або значэння
і ключы, адпаведна.

957
00:46:44,240 --> 00:46:47,430
>> таму нереляционная
базы дадзеных, што-то на аснове

958
00:46:47,430 --> 00:46:50,680
на аб'ектах, дзе вы проста камяк
ўсе разам і пакласці яго

959
00:46:50,680 --> 00:46:55,640
ў памяць, як правіла, будзе
на фота, як, ці думалі, як гэта.

960
00:46:55,640 --> 00:47:00,500
І я пакіну, што цяпер, як
свайго роду альтэрнатыўны падыход.

961
00:47:00,500 --> 00:47:03,750
І адно не абавязкова
лепш, чым іншыя.

962
00:47:03,750 --> 00:47:07,310
На самай справе, вельмі ў модзе
у гэтыя дні сістэмы кіравання базамі дадзеных

963
00:47:07,310 --> 00:47:11,942
як MongoDB і Redis і некаторыя з іх
іншыя такія інструменты, у вольным доступе,

964
00:47:11,942 --> 00:47:13,400
але яны ўсё больш у модзе.

965
00:47:13,400 --> 00:47:18,850
Збольшага таму, што яны прапануюць дадатковыя
асаблівасці над гэтымі таблічных падыходаў,

966
00:47:18,850 --> 00:47:20,850
але і таму, што яны
трохі прасцей у выкарыстанні,

967
00:47:20,850 --> 00:47:24,099
таму што вы не павінны, як цяжка думаць,
пра многіх з гэтых праектных рашэнняў.

968
00:47:24,099 --> 00:47:25,970
Так плюсы і мінусы.

969
00:47:25,970 --> 00:47:29,740
Так разумею, ёсць варыянты
звыш таго, што мы толькі што выдаткавалі час на.

970
00:47:29,740 --> 00:47:32,310
>> Дык давайце зробім гэта.

971
00:47:32,310 --> 00:47:37,870
Давайце пераход трохі
цяпер назад да вэб-праграмавання,

972
00:47:37,870 --> 00:47:40,470
так што мы як-то заключыць
сёння з чымсьці

973
00:47:40,470 --> 00:47:43,930
гэта крыху практычны, запаўняючы
некаторыя прабелы з учорашняга дня.

974
00:47:43,930 --> 00:47:45,340
Дазвольце мне перайсці да гэтага ў першую чаргу.

975
00:47:45,340 --> 00:47:49,310
Так Нагадаем, што ўчора
мы мелі некаторую кананічную HTML

976
00:47:49,310 --> 00:47:55,110
старонкі, якія былі першапачаткова, толькі
HTML, а затым у другую чаргу меў CSS,

977
00:47:55,110 --> 00:47:56,620
каскадныя табліцы стыляў.

978
00:47:56,620 --> 00:47:59,830
Гэта новы тэг, які мы не зрабілі
см учора, або спыніцца на,

979
00:47:59,830 --> 00:48:01,490
так званы скрыпт тэгаў.

980
00:48:01,490 --> 00:48:05,830
>> Аказваецца, на самай справе вы можаце ўбудаваць
мова, званы JavaScript ў вашым вэб

981
00:48:05,830 --> 00:48:08,310
старонкі і зрабіць свой вэб
старонкі зрабіць нешта.

982
00:48:08,310 --> 00:48:09,710
Дык што ж я маю на ўвазе пад гэтым?

983
00:48:09,710 --> 00:48:12,630
Што ж, дазвольце мне ісці наперад і проста
пазычаць гэты код на імгненне.

984
00:48:12,630 --> 00:48:15,860
Я не буду ўдавацца ў Cloud9, няма неабходнасці
туды сябе толькі ўсё ж,

985
00:48:15,860 --> 00:48:21,350
і я буду называць гэтую alert.HTML.

986
00:48:21,350 --> 00:48:23,650
Я збіраюся ўставіць у мой файл тут.

987
00:48:23,650 --> 00:48:32,070
І толькі ўдакладніць, што я зрабіў, хай
мне пайсці на гэты адрас і ісці, каб папярэдзіць,

988
00:48:32,070 --> 00:48:33,870
і вы ўбачыце Hello World.

989
00:48:33,870 --> 00:48:35,440
>> Але гэта свайго роду нішчыць.

990
00:48:35,440 --> 00:48:37,410
Я хачу зрабіць нешта
крыху па-іншаму.

991
00:48:37,410 --> 00:48:40,610
Так што я збіраюся зрабіць гэта на самай справе.

992
00:48:40,610 --> 00:48:43,820
Я збіраюся ісці ў тут е,
і паміж маімі тэгамі сцэнара,

993
00:48:43,820 --> 00:48:53,460
кажуць папярэджанне ( "Прывітанне, свет"); таму апавяшчэнне
гэта крыху нязграбна, але ў мяне ёсць HTML,

994
00:48:53,460 --> 00:48:56,180
усярэдзіне якога знаходзіцца
мова называецца JavaScript,

995
00:48:56,180 --> 00:48:59,420
і гэта тое, што называецца
выклік функцыі або выкліку працэдуры.

996
00:48:59,420 --> 00:49:04,500
Гэта дзеяслоў, у літаральным сэнсе, у дадзеным выпадку,
і я выкліку функцыі кода

997
00:49:04,500 --> 00:49:06,310
што нехта напісаў.

998
00:49:06,310 --> 00:49:09,630
>> Так што функцыянальнасць з'яўляецца
папярэджанне, так што давайце пойдзем на гэтую старонку

999
00:49:09,630 --> 00:49:14,046
цяпер і націсніце кнопку перазагрузкі, і зараз вы
ўбачыць трохі інтэрактыўнасці.

1000
00:49:14,046 --> 00:49:15,420
Гэта свайго роду старой школы і непрыгожа.

1001
00:49:15,420 --> 00:49:18,580
Гэты від нагадвае вам пра
усплывальныя вокны, магчыма, мінулых гадоў

1002
00:49:18,580 --> 00:49:22,030
але гэта сапраўды зрабіць што-то
трохі больш праграмнай.

1003
00:49:22,030 --> 00:49:26,940
>> Так што больш, чым гэта, давайце зробім
нешта больш цікавае.

1004
00:49:26,940 --> 00:49:30,980
Пусці тут і пазбавіцца ад гэтага.

1005
00:49:30,980 --> 00:49:33,840
І я збіраюся ісці наперад і
стварыць форму, як мы рабілі ўчора.

1006
00:49:33,840 --> 00:49:34,840
На самай справе, вы ведаеце, што?

1007
00:49:34,840 --> 00:49:37,350
Я збіраюся ісці ў
google.html, які мы

1008
00:49:37,350 --> 00:49:43,027
пачаў ўчора, які выглядаў
гэта, з дапамогай якога мы шукалі ката

1009
00:49:43,027 --> 00:49:45,360
Але зьвярніце ўвагу, што ёсць дабро з
памылка ў бягучай версіі.

1010
00:49:45,360 --> 00:49:49,770
Яна працуе для котак, але выкажам здагадку, што
Я не супрацоўнічаць, і я не ўводзіць нічога,

1011
00:49:49,770 --> 00:49:53,290
і я проста націсніце кнопку.

1012
00:49:53,290 --> 00:49:54,540
Гэта накшталт дзіўных паводзін.

1013
00:49:54,540 --> 00:49:57,300
Узяў мяне да рэальнага Google,
ня даў мне паведамленне пра памылку.

1014
00:49:57,300 --> 00:50:00,590
Я хацеў бы сказаць карыстачу
Вы павінны даць нам значэнне.

1015
00:50:00,590 --> 00:50:01,780
>> Такім чынам, як мы маглі б гэта зрабіць?

1016
00:50:01,780 --> 00:50:06,790
Ну дазвольце мне вярнуцца ў Cloud9 і
адпусьці мяне ў верхняй частцы маёй старонкі

1017
00:50:06,790 --> 00:50:11,980
і дадаць тэг сцэнара, як гэта, дзе
Я збіраюся ўвесці некаторы код JavaScript.

1018
00:50:11,980 --> 00:50:15,420
І я збіраюся зрабіць наступнае.

1019
00:50:15,420 --> 00:50:22,910
Калі (document.getelementByID-- і водгук
што мы казалі пра тое, што раней,

1020
00:50:22,910 --> 00:50:23,960
гэта функцыя.

1021
00:50:23,960 --> 00:50:25,310
Што ID вы хочаце атрымаць?

1022
00:50:25,310 --> 00:50:33,050
Я хачу, каб атрымаць д, і я збіраюся
скажам ня роўна нічога, як this--

1023
00:50:33,050 --> 00:50:38,220
на самай справе дазволіць мне выкарыстоўваць падвойныя двукоссі
толькі для consistency-- ня роўна нічога,

1024
00:50:38,220 --> 00:50:46,650
затым абвестка ( "Калі ласка, увядзіце запыт") тут.

1025
00:50:46,650 --> 00:50:49,200
>> Так што ў мяне ёсць тое, што, як уяўляецца,
нешта накшталт стану.

1026
00:50:49,200 --> 00:50:51,410
Мы ўжо бачылі гэтую агульную ідэю ў пустым месцы.

1027
00:50:51,410 --> 00:50:54,240
Гэта як адзін з тых, галаваломкі
часткі, якія выглядалі як гэта.

1028
00:50:54,240 --> 00:50:55,780
І што я кажу?

1029
00:50:55,780 --> 00:50:59,520
Ну, тут, я заўважаю
збіраецца зрабіць наступнае.

1030
00:50:59,520 --> 00:51:02,790
Я збіраюся даць гэтую форму
поле не толькі імя д, які

1031
00:51:02,790 --> 00:51:06,630
тое, што атрымлівае перадаецца ў Google, але я
збіраецца даць яму лакальны ідэнтыфікатар,

1032
00:51:06,630 --> 00:51:07,630
таксама называецца в.

1033
00:51:07,630 --> 00:51:11,780
Але я мог бы назваць гэта ўсё, што я
хочаце, я проста хачу, каб трымаць яго проста

1034
00:51:11,780 --> 00:51:14,570
а таксама называюць яго д, толькі для прастаты.

1035
00:51:14,570 --> 00:51:17,650
>> А цяпер я збіраюся зрабіць
нешта крыху больш.

1036
00:51:17,650 --> 00:51:22,600
На палі формы тут, я збіраюся
дадаць тое, што называецца апрацоўшчык падзеі.

1037
00:51:22,600 --> 00:51:32,260
На ўявіць, я хачу патэлефанаваць
функцыя называецца Validate.

1038
00:51:32,260 --> 00:51:35,520
Гэта яшчэ не існуе, гэта
слова, ці гэты дзеяслоў Validate,

1039
00:51:35,520 --> 00:51:38,560
таму што я збіраюся зрабіць
тут цяпер дадаць некаторы код.

1040
00:51:38,560 --> 00:51:42,200
>> Я хачу сказаць, функцыя Validate.

1041
00:51:42,200 --> 00:51:48,280
Я збіраюся водступу гэта і дадаць яшчэ
фігурная дужка тут і яшчэ адзін тут.

1042
00:51:48,280 --> 00:51:50,110
Падумайце, што гэта робіць цяпер.

1043
00:51:50,110 --> 00:51:54,210
У мяне ёсць now-- думаць пра гэта як стварыў свой
уласны кавалак галаваломкі, якія раней не

1044
00:51:54,210 --> 00:51:57,440
існуюць, і я назваў гэтую галаваломку
кавалачках кавалак галаваломкі Validate.

1045
00:51:57,440 --> 00:52:01,620
Яго мэта ў жыцці, каб выканаць
чатыры радкі кода ўнутры яго.

1046
00:52:01,620 --> 00:52:04,940
>> Калі document.getElementById
так канцэптуальна,

1047
00:52:04,940 --> 00:52:09,380
што збіраецца ісці ў элемент,
HTML-элемент, унікальны

1048
00:52:09,380 --> 00:52:12,930
ідэя проста д, а затым, нават калі
сінтаксіс выглядае крыху дзіўна,

1049
00:52:12,930 --> 00:52:16,430
што роўнае роўна проста азначае, што роўных.

1050
00:52:16,430 --> 00:52:20,950
Такім чынам, гэта азначае, што калі элемент з
унікальны ідэнтыфікатар д, калі атрымаў,

1051
00:52:20,950 --> 00:52:25,700
не мае значэння, яна проста роўная
цытата канец цытаты, нічога там,

1052
00:52:25,700 --> 00:52:27,170
тое, што я хачу зрабіць?

1053
00:52:27,170 --> 00:52:29,360
Я хачу крычаць на карыстальніка.

1054
00:52:29,360 --> 00:52:31,710
>> І мы не будзем вельмі падрабязна тут.

1055
00:52:31,710 --> 00:52:32,960
Я збіраюся вярнуцца ілжывым.

1056
00:52:32,960 --> 00:52:34,380
Гэта значыць памылка.

1057
00:52:34,380 --> 00:52:38,746
У адваротным выпадку, я збіраюся вярнуцца праўда.

1058
00:52:38,746 --> 00:52:40,120
Так што альбо гэта спрацавала, альбо няма.

1059
00:52:40,120 --> 00:52:41,800
Хлусня ці праўда.

1060
00:52:41,800 --> 00:52:47,820
І зараз, калі я не зрабіў ніводнай памылкі,
дазвольце мне захаваць гэта і перазагрузіць гэта.

1061
00:52:47,820 --> 00:52:50,940
І дазвольце мне проста двойчы праверыць, што
Я не, на самай справе, рабіць якія-небудзь памылкі друку,

1062
00:52:50,940 --> 00:52:52,690
так што я не абняславіцца.

1063
00:52:52,690 --> 00:52:54,240
Давайце паглядзім, калі гэта працуе.

1064
00:52:54,240 --> 00:52:56,930
>> Так што цяпер я буду набіраць котак.

1065
00:52:56,930 --> 00:52:59,421
Ён па-ранейшаму працуе, або палова працуе, па меншай меры.

1066
00:52:59,421 --> 00:53:02,170
Цяпер дазвольце мне перазагрузіць яго, а цяпер давайце
я паспрабую ўявіць без уводу

1067
00:53:02,170 --> 00:53:05,860
anything-- чорт пабяры, ён зламаўся.

1068
00:53:05,860 --> 00:53:06,430
Адзін момант.

1069
00:53:06,430 --> 00:53:09,380

1070
00:53:09,380 --> 00:53:12,660
Дазвольце мне адкрыць кансоль,
[Неразборліва] часопіс, перазагрузіце старонку.

1071
00:53:12,660 --> 00:53:13,576
Дазвольце мне паспрабаваць гэта зноў.

1072
00:53:13,576 --> 00:53:17,000

1073
00:53:17,000 --> 00:53:17,501
О, чорт вазьмі.

1074
00:53:17,501 --> 00:53:18,000
Я забыўся.

1075
00:53:18,000 --> 00:53:18,630
Я зрабіў памылку друку.

1076
00:53:18,630 --> 00:53:20,760
Я памятаю, што гэта такое.

1077
00:53:20,760 --> 00:53:21,350
.value.

1078
00:53:21,350 --> 00:53:27,060
Я меў на ўвазе, калі значэнне кажуць
элемента з ідэнтыфікатарам д

1079
00:53:27,060 --> 00:53:29,800
роўна што, то гарлапаніць на карыстальніка.

1080
00:53:29,800 --> 00:53:31,870
>> Так што цяпер дазвольце мне зноў затрымаць дыханне.

1081
00:53:31,870 --> 00:53:33,480
Тут мы ідзем.

1082
00:53:33,480 --> 00:53:34,130
Там мы ідзем.

1083
00:53:34,130 --> 00:53:35,010
Калі ласка, увядзіце запыт.

1084
00:53:35,010 --> 00:53:36,840
Так што гэта не даючы мне да канца.

1085
00:53:36,840 --> 00:53:40,210
Я магу быць свайго роду гуллівыя з гэтым,
і замест таго, каб праверка не маюць каштоўнасці,

1086
00:53:40,210 --> 00:53:46,720
Я магу сказаць нешта падобнае,
Больш не прыйдзецца шукаць для котак,

1087
00:53:46,720 --> 00:53:51,150
і зараз мы можам толькі больш гулліва хай
пошук карыстальніка для сабак, калі ён ці яна

1088
00:53:51,150 --> 00:53:57,490
хоча, або калі я пайду сюды і
шукаць котак, цяпер я не магу.

1089
00:53:57,490 --> 00:53:58,690
>> Так што вынас тут?

1090
00:53:58,690 --> 00:54:03,010
Так што, мы ўвялі ў
наш свет HTML і CSS,

1091
00:54:03,010 --> 00:54:04,320
функцыянальныя магчымасці праграмавання.

1092
00:54:04,320 --> 00:54:06,300
Я магу на самой справе ў цяперашні час
прымаць рашэнні ў кодзе.

1093
00:54:06,300 --> 00:54:10,570
Раней усё, што я мог зрабіць, гэта пазначыць
тэкставае ўтрыманне або графічнае ўтрыманне

1094
00:54:10,570 --> 00:54:13,080
і сказаць яму, што паглядзець
як і дзе, каб адлюстраваць.

1095
00:54:13,080 --> 00:54:16,650
Цяпер я магу рэальна спытаць
пытанні вэб-старонкі

1096
00:54:16,650 --> 00:54:20,010
і прымаць рашэнні, заснаваныя
на ім, і прапануе карыстачу

1097
00:54:20,010 --> 00:54:22,780
калі мне трэба крычаць на яго ці яе.

1098
00:54:22,780 --> 00:54:28,740
>> Дык давайце паспрабуем што-небудзь
самастойна з гэтым.

1099
00:54:28,740 --> 00:54:33,350
Ідзіце наперад, дазвольце мне адкрыць наступны слайд
тут, і проста паказаць на адну рэч.

1100
00:54:33,350 --> 00:54:37,250
Гэтак жа, як з дапамогай CSS, мы можам вынесці
наш код JavaScript ў асобны файл,

1101
00:54:37,250 --> 00:54:40,660
вы можаце зрабіць тое ж самае
з JavaScript, як з дапамогай CSS.

1102
00:54:40,660 --> 00:54:44,520
І вы карыстаецеся, што з дапамогай крыніцы
атрыбут тэга сцэнара.

1103
00:54:44,520 --> 00:54:46,540
Але мы не будзем ўскладняць цяпер.

1104
00:54:46,540 --> 00:54:50,440
Замест гэтага, калі вы маглі б
перайсці на гэтую старонку ня,

1105
00:54:50,440 --> 00:55:02,690
но-- дазвольце мне перанесьці гэтую вакол у order--
ісці, калі вы маглі б, гэтую старонку тут.

1106
00:55:02,690 --> 00:55:03,592
Гэтага URL тут.

1107
00:55:03,592 --> 00:55:04,550
Гэта ў сённяшніх горкамі.

1108
00:55:04,550 --> 00:55:07,133
Вы, магчыма, прыйдзецца перазагрузіць, таму што
Я дадаў пару рэч.

1109
00:55:07,133 --> 00:55:09,970

1110
00:55:09,970 --> 00:55:13,890
>> Але туды, дзе некаторыя галаваломкі чакаюць.

1111
00:55:13,890 --> 00:55:16,670
І гэта дасьць нам шанец,
ў трохі больш задавальнення кантэксце,

1112
00:55:16,670 --> 00:55:20,610
песціцца з некаторымі JavaScript.

1113
00:55:20,610 --> 00:55:25,505
І калі вы там,
Я растлумачу, што чакае.

1114
00:55:25,505 --> 00:55:47,350

1115
00:55:47,350 --> 00:55:47,850
Атрымаць зялёны.

1116
00:55:47,850 --> 00:56:03,063

1117
00:56:03,063 --> 00:56:03,562
Набор сіні.

1118
00:56:03,562 --> 00:56:11,030

1119
00:56:11,030 --> 00:56:13,930
Ўсталёўвае зялёны, ўсталёўвае чырвоны.

1120
00:56:13,930 --> 00:56:19,220

1121
00:56:19,220 --> 00:56:20,220
На жаль.

1122
00:56:20,220 --> 00:56:22,330
Прабачце.

1123
00:56:22,330 --> 00:56:27,630
>> Гэта ступень нашай
дакументацыя для гэтай задачы.

1124
00:56:27,630 --> 00:56:29,920
І гэта будзе працаваць наступным чынам.

1125
00:56:29,920 --> 00:56:33,340
Так што ў вас ёсць па гэтым пытанні
старонка ўяўляе сабой цэлы букет

1126
00:56:33,340 --> 00:56:38,024
галаваломак выявы па прыяцелем
у Стэнфардскім універсітэце.

1127
00:56:38,024 --> 00:56:41,190
Так што вы бачыце тут амаль
выгляд адной з тых чароўных вачэй галаваломак,

1128
00:56:41,190 --> 00:56:43,815
але калі вы проста глядзець на яго,
нічога не збіраецца выскачыць на цябе.

1129
00:56:43,815 --> 00:56:46,000
Хутчэй за ўсё, што-то
схаваны ў гэтым вобразе.

1130
00:56:46,000 --> 00:56:47,790
І ён схаваны наступным чынам.

1131
00:56:47,790 --> 00:56:51,740
Малюнка, як вы ведаеце, можа быць
які складаецца ўсяго з трох колераў.

1132
00:56:51,740 --> 00:56:53,346
Некаторыя чырвоны, трохі сіняга, а таксама некаторыя зялёныя.

1133
00:56:53,346 --> 00:56:55,220
І мы можам зрабіць усё
кветак у вясёлцы

1134
00:56:55,220 --> 00:56:57,570
шляхам змешвання гэтых трох колераў так ці інакш.

1135
00:56:57,570 --> 00:57:01,940
>> Так гэта выглядае ў асноўным зялёны і
сіні, але, як кажа тут Нік,

1136
00:57:01,940 --> 00:57:04,060
гэта жалеза-галаваломкі малюнак галаваломка.

1137
00:57:04,060 --> 00:57:06,780
Ён змяшчае малюнак
нешта вядомым, аднак,

1138
00:57:06,780 --> 00:57:08,310
выява было скажонае.

1139
00:57:08,310 --> 00:57:11,500
Знакаміты аб'ект знаходзіцца ў чырвоных значэнняў.

1140
00:57:11,500 --> 00:57:13,810
Тым не менш, чырвоныя значэння
ёсць усе былі падзеленыя на 10.

1141
00:57:13,810 --> 00:57:16,230
Такім чынам, яны занадта малыя, на каэфіцыент 10.

1142
00:57:16,230 --> 00:57:18,280
Такім чынам, іншымі словамі, Нік
прыняў зыходны малюнак,

1143
00:57:18,280 --> 00:57:21,500
і ён ненасычаны ўсе
чырвані ад яго,

1144
00:57:21,500 --> 00:57:23,850
зніжэнне колькасці чырвонага
чарніла, калі вы будзеце ў ім.

1145
00:57:23,850 --> 00:57:26,060
>> Сінія і зялёныя значэння
усё проста бессэнсоўна,

1146
00:57:26,060 --> 00:57:30,000
выпадковыя велічыні, інакш шум распрацаваны
каб схаваць рэальнае малюнак.

1147
00:57:30,000 --> 00:57:32,250
Так што Нік зрабіў ён
змякчыў чырвоны, а затым

1148
00:57:32,250 --> 00:57:34,380
ён проста кінуў выпадковы
колькасць сіняга і зялёнага

1149
00:57:34,380 --> 00:57:37,590
на малюнку ў выглядзе няяснымі
што на самой справе ўсё яшчэ там.

1150
00:57:37,590 --> 00:57:41,089
Неабходна адмяніць гэтыя скажэнні
каб раскрыць вобраз.

1151
00:57:41,089 --> 00:57:44,255
Па-першае, усталяваць усе сінія і зялёныя значэння
да нуля, каб атрымаць іх з шляху,

1152
00:57:44,255 --> 00:57:48,700
і паглядзець на вынік. тады
Памножым кожнае значэнне чырвонага на 10,

1153
00:57:48,700 --> 00:57:51,720
згортваюць да
прыблізна ў яго канчатковае значэнне.

1154
00:57:51,720 --> 00:57:53,035
Што такое знакаміты аб'ект?

1155
00:57:53,035 --> 00:57:57,920
>> Так што ўсё ў вас ёсць гэты прастакутнік
ў вашым браўзэры прама цяпер.

1156
00:57:57,920 --> 00:58:00,830
І да вашага ведама, што ёсць некаторыя
стартавы код, калі можна так выказацца.

1157
00:58:00,830 --> 00:58:04,370
Гэта код JavaScript, які
Нік напісаў для вас.

1158
00:58:04,370 --> 00:58:07,250
І да вашага ведама, што ёсць
лінія ў сярэдзіне, што

1159
00:58:07,250 --> 00:58:10,380
пачынаецца з касой рысы касой рысы, гэта
што звычайна называюць каментаром.

1160
00:58:10,380 --> 00:58:14,660
Гэта азначае, што гэта фраза для праграміста
што не мае ніякага функцыянальнага сэнсу.

1161
00:58:14,660 --> 00:58:16,520
Гэта проста візуальны сігнал да чалавека.

1162
00:58:16,520 --> 00:58:18,670
>> Такім чынам, вы можаце пайсці далей і
выдаліць толькі тую лінію,

1163
00:58:18,670 --> 00:58:22,214
і быць супер асцярожныя, каб не
выдаліць або змяніць што-небудзь яшчэ.

1164
00:58:22,214 --> 00:58:25,130
І дазвольце мне вас праз
што робіць гэты код, і я пакідаю яго

1165
00:58:25,130 --> 00:58:28,580
для вас, каб высветліць сакрэтнае малюнак.

1166
00:58:28,580 --> 00:58:32,226
Гэта першая лінія тут, што я проста
выдзелены дае вам наступнае.

1167
00:58:32,226 --> 00:58:34,100
З левага боку,
ў вас ёсць тое, што называецца

1168
00:58:34,100 --> 00:58:39,140
зменная, Нік адвольна,
але абгрунтавана называецца IM для малюнка.

1169
00:58:39,140 --> 00:58:41,660
На правай баку
гэтага знака роўнасці,

1170
00:58:41,660 --> 00:58:45,240
ён кажа, дайце мне новы
цытата, канец цытаты "просты вобраз".

1171
00:58:45,240 --> 00:58:49,680
>> Простае малюнак, у гэтым кантэксце
гэта тое, што называецца класам, ну,

1172
00:58:49,680 --> 00:58:53,910
гэта накшталт як class--
тэхнічна prototype-- але на самой справе,

1173
00:58:53,910 --> 00:58:58,000
гэта дае мне новы аб'ект,
змест якога з'яўляюцца файл,

1174
00:58:58,000 --> 00:58:59,610
жалеза-puzzle.png.

1175
00:58:59,610 --> 00:59:03,190
Іншымі словамі, Нік стварыў
гэта паняцце простага малюнка

1176
00:59:03,190 --> 00:59:05,920
так што мы можам, акрамя педагагічнай
мэты, гуляць з выявай

1177
00:59:05,920 --> 00:59:09,790
і змяніць яго чырвоны,
зялёнага і сіняга колераў.

1178
00:59:09,790 --> 00:59:11,750
>> І як мы робім гэта?

1179
00:59:11,750 --> 00:59:15,360
Гэта зашыфраванае сінтаксіс тут
накшталт як паўтору блока

1180
00:59:15,360 --> 00:59:19,140
што некаторыя з вас бачылі ў пустым месцы раней
Сёння, дзе вы можаце паўтарыць 10 разоў.

1181
00:59:19,140 --> 00:59:22,220
У гэтым выпадку, Нік ня
жорстка лік, напрыклад 10.

1182
00:59:22,220 --> 00:59:28,020
Замест гэтага ён кажа, ініцыялізаваць
зменная з імем х 0,

1183
00:59:28,020 --> 00:59:33,180
праверыць, калі х менш
шырыня малюнка.

1184
00:59:33,180 --> 00:59:38,160
>> І так, каб быць больш правільным, выява зьяўляецца
Зменная, кропка азначае ісці ўнутры яго

1185
00:59:38,160 --> 00:59:40,900
і атрымаць яго шырыню, і
затым адкрыць дужка, закрыты

1186
00:59:40,900 --> 00:59:43,687
дужка проста шлях праграміста
сказаць, што гэта функцыя.

1187
00:59:43,687 --> 00:59:44,520
Гэта працэдура.

1188
00:59:44,520 --> 00:59:46,430
гэта функцыянальнасць
нехта напісаў.

1189
00:59:46,430 --> 00:59:48,570
Выкарыстоўвайце яго і вярні мне адказ.

1190
00:59:48,570 --> 00:59:53,610
І тады х ++ з'яўляецца мудрагелістым спосабам
кажучы, пасля таго, як вы зрабілі гэта адзін раз,

1191
00:59:53,610 --> 00:59:55,850
прырашчэнне х на 1.

1192
00:59:55,850 --> 00:59:58,760
Іншымі словамі, гэта
гэта шлях праграміста

1193
00:59:58,760 --> 01:00:05,760
індукаваць пятлю, што гэта
збіраецца перабраць

1194
01:00:05,760 --> 01:00:10,410
усе слупкі ў малюнку.

1195
01:00:10,410 --> 01:00:14,790
>> Малюнак проста сетка
кропак, радкоў і слупкоў кропак.

1196
01:00:14,790 --> 01:00:18,270
Гэта спосаб итерирования
над усімі гэтымі калонамі.

1197
01:00:18,270 --> 01:00:20,770
А на ўнутраным боку,
У той жа час, мы пераборы

1198
01:00:20,770 --> 01:00:24,030
над вышынь, тут
і тут і тут.

1199
01:00:24,030 --> 01:00:29,442
Так што гэта проста спосаб тащась,
амаль як стары школьны машынцы,

1200
01:00:29,442 --> 01:00:32,230
проста ісці над
Увесь малюнак итеративно.

1201
01:00:32,230 --> 01:00:36,370
Нават гэта не зусім цалкам
ясна, проста прыняць на веру зараз,

1202
01:00:36,370 --> 01:00:38,880
што гэтыя тры лініі
кода разам,

1203
01:00:38,880 --> 01:00:43,090
збіраецца, каб дазволіць вам выглядаць итеративно
на кожны піксель, кожная кропка ў адлюстраванні.

1204
01:00:43,090 --> 01:00:43,790
>> Што такое піксель?

1205
01:00:43,790 --> 01:00:46,250
Ну, каб быць ясным, калі мы паглядзім
у арыгінале і павялічыць маштаб,

1206
01:00:46,250 --> 01:00:49,060
калі вы сапраўды пакласці вашы вочы
на экран кампутара, гэта

1207
01:00:49,060 --> 01:00:53,510
проста цэлая куча кропак, некалькі
тысячы кропак спакаваныя разам там.

1208
01:00:53,510 --> 01:00:56,180
І так, што вы збіраецеся рабіць?

1209
01:00:56,180 --> 01:00:59,240
Кожны з гэтых кропак,
канчатковае вызначэнне,

1210
01:00:59,240 --> 01:01:06,350
з'яўляецца вынікам таго, што гэта наогул
называецца RGB, чырвоны, зялёны, сіні, які

1211
01:01:06,350 --> 01:01:09,940
зноў жа, могуць быць аб'яднаны ў
даць вам любую колькасць кветак.

1212
01:01:09,940 --> 01:01:13,200
>> На самай справе, калі вы памятаеце,
ад многіх, шмат гадоў таму,

1213
01:01:13,200 --> 01:01:17,320
Экраны для праектараў, як гэтыя рэчы
Раней у мяне не адзін аб'ектыў, а тры.

1214
01:01:17,320 --> 01:01:20,700
Адзін з іх выплюнуць чырвонае святло, адзін з
іх выплюнуць зялёнае святло, адзін з іх

1215
01:01:20,700 --> 01:01:21,600
выплюнуць сіні святло.

1216
01:01:21,600 --> 01:01:24,391
І калі вы былі ў сярэдняй школе
як я там, дзе яны ніколі не былі

1217
01:01:24,391 --> 01:01:27,000
выраўнаваны, вы былі
заўсёды глядзець гістарычныя фільмы

1218
01:01:27,000 --> 01:01:29,770
якія былі некалькі скажоныя,
таму што тры колеру не былі

1219
01:01:29,770 --> 01:01:30,970
камбінуючы належным чынам.

1220
01:01:30,970 --> 01:01:36,330
>> Але аказваецца, што кожны з
гэтыя значэння чырвонага, зялёнага і сіняга колераў,

1221
01:01:36,330 --> 01:01:37,980
можа мець шэраг звязаных з імі.

1222
01:01:37,980 --> 01:01:42,500
Напрыклад, 0 для чырвонага азначае адсутнасць
чырвоны, 0 для зялёнага азначае не зялёны,

1223
01:01:42,500 --> 01:01:45,120
і 0 для сіняга азначае адсутнасць сіняга колеру.

1224
01:01:45,120 --> 01:01:49,403
Так што калі ў вас няма чырвонага, няма зялёнага,
няма і не сіні, якога колеру ў вас ёсць?

1225
01:01:49,403 --> 01:01:51,009
>> ГЛЕДАЧЫ: [неразборліва]

1226
01:01:51,009 --> 01:01:52,800
DAVID Малання: Вы б
спадзяюся, гэта белы.

1227
01:01:52,800 --> 01:01:55,333
На жаль, гэта operates-- шкада?

1228
01:01:55,333 --> 01:01:56,380
>> ГЛЕДАЧЫ: [неразборліва]

1229
01:01:56,380 --> 01:01:58,630
DAVID Малання: Так што вы на самай справе
маюць чорную, у гэтым выпадку.

1230
01:01:58,630 --> 01:02:01,530
Так што калі ў вас няма ні аднаго з іх
колеру уключаны, у вас ёсць чорны.

1231
01:02:01,530 --> 01:02:06,510
Тым не менш, калі ў вас ёсць, скажам, шмат
з іх, як шмат чырвонага, 255 з яго,

1232
01:02:06,510 --> 01:02:10,340
шмат зеляніны, і шмат
сіняга, гэта значыць белы.

1233
01:02:10,340 --> 01:02:12,230
Такім чынам, гэтыя дзве крайнасці.

1234
01:02:12,230 --> 01:02:17,460
Такім чынам, па гэтай логіцы, калі ў мяне ёсць шмат
чырвонага і зялёнага і сіняга,

1235
01:02:17,460 --> 01:02:18,485
які колер з'яўляецца тое, што?

1236
01:02:18,485 --> 01:02:19,360
ГЛЕДАЧЫ: [неразборліва]

1237
01:02:19,360 --> 01:02:20,610
DAVID Малання: справа, відавочна.

1238
01:02:20,610 --> 01:02:25,940
І тады няма чырвонага, шмат
зялёны, сіні няма, а затым

1239
01:02:25,940 --> 01:02:29,590
калі вы have-- добра, мы проста скончыць
гэта, проста таму, што, але гэта, вядома,

1240
01:02:29,590 --> 01:02:31,350
Цяпер, сіні.

1241
01:02:31,350 --> 01:02:33,030
І цяпер вы можаце камбінаваць гэтыя колеры.

1242
01:02:33,030 --> 01:02:36,430
Цяпер, як і ў бок, калі нехта з вас ёсць
калі-небудзь рабіў некаторыя фактычныя дызайн вэб-сайта,

1243
01:02:36,430 --> 01:02:38,360
Вы маглі б на самай справе
см сімвалы, як гэта.

1244
01:02:38,360 --> 01:02:42,030
FFF-- і на самай справе, гэта
верагодна, нават гэта не так.

1245
01:02:42,030 --> 01:02:44,380
Гэта FFFFFF.

1246
01:02:44,380 --> 01:02:48,970
>> Хто-небудзь бачыў F-е і Э
і А through-- так атрымліваецца,

1247
01:02:48,970 --> 01:02:52,970
мы казалі ўчора аб дзесятковай сістэме,
і сёння, накшталт пра дзесятковай сістэме.

1248
01:02:52,970 --> 01:02:54,570
Сёння мы гаварылі пра двайковай сістэме.

1249
01:02:54,570 --> 01:02:59,010
Аказваецца, шаснаццатковае вельмі
агульная базавая сістэма для выкарыстання ў вылічэннях.

1250
01:02:59,010 --> 01:03:04,960
Binary два, дзесятковы 10, шаснаццатковае 16.

1251
01:03:04,960 --> 01:03:08,640
І атрымліваецца, як зрабіць
вы разлічваеце у шаснаццатковым?

1252
01:03:08,640 --> 01:03:11,620
Нуль, адзін, два, тры, чатыры,
пяць, шэсць, сем, восем,

1253
01:03:11,620 --> 01:03:14,730
дзевяць, што вы карыстаецеся пасля дзевяці?

1254
01:03:14,730 --> 01:03:16,600
Які наступны нумар?

1255
01:03:16,600 --> 01:03:19,180
Мы ўжо прывыклі да нуля.

1256
01:03:19,180 --> 01:03:20,570
Мне трэба 16 з іх.

1257
01:03:20,570 --> 01:03:25,770
Нуль, адзін, два, тры, чатыры,
пяць, шэсць, сем, восем, дзевяць,

1258
01:03:25,770 --> 01:03:27,520
Вы маеце патрэбу ў некаторай адвольнай канвенцыі.

1259
01:03:27,520 --> 01:03:30,810
>> І тое, што чалавецтва вырашыла нейкі час
таму, што пасля таго, як дзевяць прыходзіць ліст

1260
01:03:30,810 --> 01:03:34,450
А, а затым B, а затым С. Такім чынам,
як вы разлічваць у шаснаццатковым

1261
01:03:34,450 --> 01:03:37,040
роўны нулю, адзін, два, тры, чатыры,
пяць, шэсць, сем, восем, дзевяць,

1262
01:03:37,040 --> 01:03:42,880
A, B, C, D, E, F, і што будзе разлічваць
вы ўсе шляхі, аказваецца, да 15.

1263
01:03:42,880 --> 01:03:47,850
Такім чынам, ад нуля да 15 роўна нулю праз
F. Цяпер чаму гэта важна?

1264
01:03:47,850 --> 01:03:51,570
Добра, калі ў вас ёсць два F-х,
вось як вы выказвае 255.

1265
01:03:51,570 --> 01:03:54,350
>> Так Карацей кажучы, у
свет Photoshop,

1266
01:03:54,350 --> 01:03:57,299
што графічны дызайн праграмнага забеспячэння,
у свеце вэб-распрацоўкі,

1267
01:03:57,299 --> 01:03:59,590
дзе ў вас ёсць шмат кветак,
вядома, гуляць,

1268
01:03:59,590 --> 01:04:02,350
часта праграмісты
выказаць тыя, у шаснаццатковай сістэме,

1269
01:04:02,350 --> 01:04:05,260
толькі таму, што, як правіла,
каб быць крыху прасцей.

1270
01:04:05,260 --> 01:04:07,850
Нават калі на першы погляд
гэта значна складаней.

1271
01:04:07,850 --> 01:04:11,590
>> Такім чынам, у любым выпадку, гэта важна
таму што Нік у Стэнфардзе

1272
01:04:11,590 --> 01:04:15,100
даў нам шэсць кавалкаў функцыянальнасці
што вы, пачаткоўцы праграмісты,

1273
01:04:15,100 --> 01:04:17,060
цяпер будуць мець магчымасць выкарыстоўваць.

1274
01:04:17,060 --> 01:04:19,960
Убудаваны ў гэтую сетку
старонка шэсць функцый,

1275
01:04:19,960 --> 01:04:21,820
шэсць працэдур, якія Нік напісаў.

1276
01:04:21,820 --> 01:04:26,800
Трое з іх атрымае Вас нумар,
чырвоны, зялёны або сіні значэнне.

1277
01:04:26,800 --> 01:04:28,787
Тры з іх будзе ўстаноўлена, што значэнне.

1278
01:04:28,787 --> 01:04:30,620
І гэтыя сімвалы падкрэслівання
проста запаўняльнікі,

1279
01:04:30,620 --> 01:04:32,600
так што вы павінны ведаць, што гэта такое.

1280
01:04:32,600 --> 01:04:36,240
>> Так што з гэтымі трыма функцыямі,
першы з гэтых рэчаў

1281
01:04:36,240 --> 01:04:39,190
будзе х-каардынатаў,
і другі з гэтых рэчаў

1282
01:04:39,190 --> 01:04:40,700
будзе у-каардынатаў.

1283
01:04:40,700 --> 01:04:44,650
Іншымі словамі, якія Дот, якая
пікселяў вы хочаце атрымаць зялёны колер,

1284
01:04:44,650 --> 01:04:46,480
атрымаць сіні колер, атрымаць чырвоны колер.

1285
01:04:46,480 --> 01:04:51,440
А потым тут, гэта будзе
х, гэта будзе мець значэнне ў,

1286
01:04:51,440 --> 01:04:55,379
і гэта будзе нумар.

1287
01:04:55,379 --> 01:04:57,170
Дык давайце зробім першы
лінія гэта разам

1288
01:04:57,170 --> 01:05:00,220
а потым я пакідаю яго вам
каб паспрабаваць вывесці ўсё астатняе.

1289
01:05:00,220 --> 01:05:03,100
Такім чынам, у адпаведнасці з інструкцыямі
На гэтай старонцы, нам трэба

1290
01:05:03,100 --> 01:05:08,960
павялічыць чырвоны колер з каэфіцыентам
10, і нам трэба выдаліць зялёны

1291
01:05:08,960 --> 01:05:09,930
і выдаліце ​​сіні колер.

1292
01:05:09,930 --> 01:05:12,410
Давайце пачнем з апошніх сцэнарыяў.

1293
01:05:12,410 --> 01:05:17,760
Так што, калі я хачу, і я збіраюся
для водступу з дапамогай некаторых прастор,

1294
01:05:17,760 --> 01:05:22,291
калі я хачу, каб усталяваць чырвоны,
зялёны або сіні значэнне,

1295
01:05:22,291 --> 01:05:23,540
Я збіраюся зрабіць наступнае.

1296
01:05:23,540 --> 01:05:31,280
>> Малюнак, im.setBlue, а затым
заснаваны на маіх інструкцый тут,

1297
01:05:31,280 --> 01:05:36,700
якія тры рэчы я павінен
тыпу ўнутры дужак цяпер?

1298
01:05:36,700 --> 01:05:41,960
Мне патрэбен х значэння,
у значэнне, і якая дата

1299
01:05:41,960 --> 01:05:48,770
я павінен паставіць тут, калі я хачу, каб пазбавіцца ад
на роўным месцы, на аснове гэтай гісторыі тут?

1300
01:05:48,770 --> 01:05:49,630
Проста нуль.

1301
01:05:49,630 --> 01:05:52,420
Калі я не жадаю, не блакітны, я проста
збіраецца змяніць яго да нуля.

1302
01:05:52,420 --> 01:05:54,465
>> Зараз давайце проста рэзюмаваць тое, што гэта робіць.

1303
01:05:54,465 --> 01:05:56,970

1304
01:05:56,970 --> 01:06:01,170
У мяне ёсць тут на вяршыні
Другая і трэцяя радкі,

1305
01:06:01,170 --> 01:06:04,080
Я сцвярджаў, дзве завесы,
укладзеныя цыклы, калі вы

1306
01:06:04,080 --> 01:06:08,360
будзе, што будзем мець эфект
прагрэсавальнай злева направа,

1307
01:06:08,360 --> 01:06:11,590
зверху ўніз па ўсіх х
каштоўнасці і ўсе значэння у.

1308
01:06:11,590 --> 01:06:15,167
Таму што зноў жа, карціна
проста сетку з радкоў і слупкоў.

1309
01:06:15,167 --> 01:06:17,000
Так што гэта збіраецца атрымаць
пазбавіцца ад усіх сіняга.

1310
01:06:17,000 --> 01:06:18,627
Дазвольце мне пакінуць у наступным радку для вас.

1311
01:06:18,627 --> 01:06:20,043
Як пазбавіцца ад усіх зялёных?

1312
01:06:20,043 --> 01:06:23,747

1313
01:06:23,747 --> 01:06:25,140
>> ГЛЕДАЧЫ: [неразборліва]

1314
01:06:25,140 --> 01:06:26,151
>> DAVID Малання: Ніца.

1315
01:06:26,151 --> 01:06:28,260
>> ГЛЕДАЧЫ: [неразборліва]

1316
01:06:28,260 --> 01:06:30,850
>> DAVID Малання: Ніца.

1317
01:06:30,850 --> 01:06:36,120
І я буду выдаляць, а проста ўзяць
клапаціцца аб тым, што вы не зрабілі ніякіх памылак друку.

1318
01:06:36,120 --> 01:06:39,390
І калі вы адчуваеце сябе камфортна
з тым, што вы зрабілі,

1319
01:06:39,390 --> 01:06:42,936
ісці наперад і націсніце на кнопку
Выканаць / Захаваць і паглядзіце, што атрымаецца.

1320
01:06:42,936 --> 01:06:46,982

1321
01:06:46,982 --> 01:06:48,690
І зноў жа, мы зрабілі
ўсяго тры змены.

1322
01:06:48,690 --> 01:06:52,130
Мы выдалілі, што першы
каментары і замяніць яго

1323
01:06:52,130 --> 01:06:53,575
з гэтымі двума радкамі кода.

1324
01:06:53,575 --> 01:06:55,742

1325
01:06:55,742 --> 01:06:58,450
І гэта нармальна, калі вам трэба патрапіць
кнопку Выканаць / Захаваць пару раз

1326
01:06:58,450 --> 01:07:01,190
каб нешта выправіць.

1327
01:07:01,190 --> 01:07:03,610
>> І дазвольце мне таксама павялічыць на мой
код, так што вы можаце транскрыбаваць.

1328
01:07:03,610 --> 01:07:04,110
Добра.

1329
01:07:04,110 --> 01:07:08,720
Так што я бачу Эндру што
здаецца памылкай.

1330
01:07:08,720 --> 01:07:11,110
Ён толькі што атрымаў вялікі чорны
прастакутнік на яго экране.

1331
01:07:11,110 --> 01:07:13,120
Хто-небудзь яшчэ ёсць
вялікі чорны прастакутнік?

1332
01:07:13,120 --> 01:07:13,390
>> ГЛЕДАЧЫ: Так.

1333
01:07:13,390 --> 01:07:14,360
>> DAVID Малання: Вялікі чорны прастакутнік?

1334
01:07:14,360 --> 01:07:16,068
ОК, так што давайце думаць
аб тым, што гэта значыць.

1335
01:07:16,068 --> 01:07:20,560
Мы сказалі, што нуль, нуль, нуль,
так што не зялёны, ні чырвоны, ні сіні,

1336
01:07:20,560 --> 01:07:21,980
збіраецца даць вам чорны.

1337
01:07:21,980 --> 01:07:24,467
І атрымліваецца, што
большасць нашых ноўтбукаў

1338
01:07:24,467 --> 01:07:25,800
проста не хапае вернасці.

1339
01:07:25,800 --> 01:07:27,750
Вы не можаце дакладна сказаць, ёсць
на самай справе нешта ёсць.

1340
01:07:27,750 --> 01:07:30,340
І калі вы выгляд, можа быць, нахіліцца
ваш экран наперад і назад,

1341
01:07:30,340 --> 01:07:32,850
можа быць, вы бачыце
сёе-тое там?

1342
01:07:32,850 --> 01:07:34,820
Можа быць, свайго роду, свайго роду?

1343
01:07:34,820 --> 01:07:36,640
Гэта не зусім чорны.

1344
01:07:36,640 --> 01:07:38,050
>> ГЛЕДАЧЫ: [неразборліва]

1345
01:07:38,050 --> 01:07:39,510
>> DAVID Малання: Спойлер!

1346
01:07:39,510 --> 01:07:42,610
Існуе некаторы чырвоны ёсць, але
памятаеце з спецыфікацый

1347
01:07:42,610 --> 01:07:44,940
праблемы, Нік таніраванае яго ўніз.

1348
01:07:44,940 --> 01:07:47,860
Ён ненасычаны яго крыху,
але не ўсе шляхі да нуля.

1349
01:07:47,860 --> 01:07:51,670
Так што, калі мы хочам, каб павялічыць колькасць
чырвонага колеру, дазвольце мне прапанаваць гэты трук.

1350
01:07:51,670 --> 01:07:53,750
Дазвольце мне павялічыць на маім экране.

1351
01:07:53,750 --> 01:07:58,678
І дазвольце мне ісці наперад і сказаць,
сума роўная im.getRed (х, у).

1352
01:07:58,678 --> 01:08:02,440

1353
01:08:02,440 --> 01:08:05,790
>> Гэты радок кода дае мне
тое, што называецца зменнай.

1354
01:08:05,790 --> 01:08:09,643
У мяне ёсць адвольна, але, магчыма,
абгрунтавана назваў сваю зменную, што,

1355
01:08:09,643 --> 01:08:10,143
па-відаць?

1356
01:08:10,143 --> 01:08:13,530

1357
01:08:13,530 --> 01:08:14,340
Сума.

1358
01:08:14,340 --> 01:08:14,980
Проста сума.

1359
01:08:14,980 --> 01:08:16,960
Я мог бы назваць яго
усё, што я хачу, але я

1360
01:08:16,960 --> 01:08:19,490
выкарыстоўваючы гэтую іншую функцыю
што я апісаў раней

1361
01:08:19,490 --> 01:08:25,359
каб атрымаць колькасць чырвонага колеру ў кропцы х коска у.

1362
01:08:25,359 --> 01:08:27,520
Чаму я зрабіў гэта?

1363
01:08:27,520 --> 01:08:30,004
Што вы хочаце тут рабіць?

1364
01:08:30,004 --> 01:08:32,910

1365
01:08:32,910 --> 01:08:33,619
Вам трэба add--

1366
01:08:33,619 --> 01:08:34,493
ГЛЕДАЧЫ: [неразборліва]

1367
01:08:34,493 --> 01:08:36,279
DAVID Малання: Так, можа быць,
памножыць яго на 10.

1368
01:08:36,279 --> 01:08:38,862
І калі вы не ведаеце гэтага, я
ісці наперад і рабіць гэта.

1369
01:08:38,862 --> 01:08:42,060
Я збіраюся ісці наперад і
скажам, я хачу колькасць чырвонага колеру

1370
01:08:42,060 --> 01:08:46,550
Я хачу быць што заўгодна
знаходзіцца ў мінусе, разоў 10,

1371
01:08:46,550 --> 01:08:50,330
і зорка, зорачка на вашым
клавіятура the-- не выкарыстоўваюць х.

1372
01:08:50,330 --> 01:08:51,569
Выкарыстоўвайце зорку.

1373
01:08:51,569 --> 01:08:55,350
Вось як вы памнажаеце рэчы
у большасці моў праграмавання.

1374
01:08:55,350 --> 01:08:59,790
>> Так, па інтуіцыі Kareem, у
захоўваецца ў гэтай зменнай называецца сума,

1375
01:08:59,790 --> 01:09:03,649
наколькі чырвоны Я хачу, каб у кропцы ху.

1376
01:09:03,649 --> 01:09:11,500
Як цяпер, я раблю што
Піксельныя гэты лік?

1377
01:09:11,500 --> 01:09:12,859
Вы ўжо зрабілі гэта раней.

1378
01:09:12,859 --> 01:09:17,666
Вы ўсталёўваеце зялёны і
сіняга да ніякага значэння, да нуля.

1379
01:09:17,666 --> 01:09:18,540
ГЛЕДАЧЫ: [неразборліва]

1380
01:09:18,540 --> 01:09:20,040
DAVID Малання: Так, добра
вы не хочаце яго 10.

1381
01:09:20,040 --> 01:09:21,460
Вы ўжо зрабілі матэматыку тут.

1382
01:09:21,460 --> 01:09:24,779
Такім чынам, мы атрымліваем значэнне чырвонага колеру,
які ўяўляе сабой невялікі лік, відаць.

1383
01:09:24,779 --> 01:09:26,180
Мы памнажаючы да +10.

1384
01:09:26,180 --> 01:09:29,139
Тое, што вы хочаце зрабіць з
пераменная велічыня цяпер?

1385
01:09:29,139 --> 01:09:30,130
>> ГЛЕДАЧЫ: [неразборліва]

1386
01:09:30,130 --> 01:09:30,880
>> DAVID Малання: Ніца.

1387
01:09:30,880 --> 01:09:34,616
Так im.set-- што?

1388
01:09:34,616 --> 01:09:35,640
>> ГЛЕДАЧЫ: setRed.

1389
01:09:35,640 --> 01:09:39,760
>> DAVID Малання: setRed, у кропцы ху.

1390
01:09:39,760 --> 01:09:40,260
Так.

1391
01:09:40,260 --> 01:09:41,200
І толькі сума.

1392
01:09:41,200 --> 01:09:44,257
Іншымі словамі, пераменная
часовы запаўняльнік

1393
01:09:44,257 --> 01:09:45,840
што вы можаце пакласці ўсё, што вы хочаце ст.

1394
01:09:45,840 --> 01:09:48,680
Мы, здараецца, мяркуючы а
колькасць у ім, у дадзены момант.

1395
01:09:48,680 --> 01:09:51,569
Мы памножыўшы яго на
10, каб зрабіць яго больш.

1396
01:09:51,569 --> 01:09:56,480
І зараз я падстаўляючы гэтую зменную
як то трэці аргумент, або ўвядзіце

1397
01:09:56,480 --> 01:09:57,810
ўсталяваць чырвоны.

1398
01:09:57,810 --> 01:10:00,440
І так, што як толькі вы
скончыць гэта, і прыняць да ведама

1399
01:10:00,440 --> 01:10:02,330
з пункту з коскай і ў дужках.

1400
01:10:02,330 --> 01:10:06,290
>> Ідзіце наперад і націсніце
запусціць / захаваць зноў, і вы

1401
01:10:06,290 --> 01:10:10,690
павінны бачыць, чароўным чынам, што было на самай справе
там. [? Arwa ,?], Што там?

1402
01:10:10,690 --> 01:10:16,412
Эйфелева вежа ў паўнапраўных
чырвоны, не зусім цёмна.

1403
01:10:16,412 --> 01:10:17,870
яна павінна быць больш відавочным зараз, так?

1404
01:10:17,870 --> 01:10:18,840
ДОБРА.

1405
01:10:18,840 --> 01:10:20,215
І Андрэй, не больш чорны скрыню?

1406
01:10:20,215 --> 01:10:21,090
ГЛЕДАЧЫ: [неразборліва]

1407
01:10:21,090 --> 01:10:22,180
DAVID Малання: Добра.

1408
01:10:22,180 --> 01:10:23,610
Так што я буду трымаць гэта на экране.

1409
01:10:23,610 --> 01:10:27,010
Калі вы жадаеце гуляць з гэтым
пазней, я узнавіць гэта для вас.

1410
01:10:27,010 --> 01:10:29,140
Але гэты код тут зрабіў менавіта гэта.

1411
01:10:29,140 --> 01:10:31,460
Чаму мы не робім адзін аднаго.

1412
01:10:31,460 --> 01:10:33,880
Дазвольце мне пракруціць ўніз трохі.

1413
01:10:33,880 --> 01:10:36,760
>> Так што ў гэтым выпадку, праектар
на самай справе не робяць гэта справядлівасць.

1414
01:10:36,760 --> 01:10:40,486
Але на вашых экранах, вы, верагодна,
маюць вельмі чырвоны і вельмі чорны скрыню.

1415
01:10:40,486 --> 01:10:42,610
Гэта таксама загадка, што
паказвае нешта вядомы.

1416
01:10:42,610 --> 01:10:44,193
Тым не менш, выява было скажонае.

1417
01:10:44,193 --> 01:10:47,740
Сапраўднае малюнак, на гэты раз, з'яўляецца
у сініх і зялёных каштоўнасцяў.

1418
01:10:47,740 --> 01:10:51,820
Тым не менш, яны ўсе былі падзеленыя
на 20 так што значэнні вельмі малыя.

1419
01:10:51,820 --> 01:10:54,660
Чырвоныя значэння проста
выпадковыя ліку, шум.

1420
01:10:54,660 --> 01:10:57,190
Адмяніць гэтыя скажэнні
раскрыць праўдзівы вобраз.

1421
01:10:57,190 --> 01:10:59,200
>> Так што Нік тады кажа вам, што рабіць.

1422
01:10:59,200 --> 01:11:04,290
Ўсталяваць чырвоныя значэння да нуля, і
то не сапсуе, што гэта такое.

1423
01:11:04,290 --> 01:11:07,110
Затым памножце сіні
і зялёныя значэння на 20.

1424
01:11:07,110 --> 01:11:09,820
Так што гэта амаль
тая ж праграма, як і раней,

1425
01:11:09,820 --> 01:11:11,380
але вы заднім ходам працэсу.

1426
01:11:11,380 --> 01:11:13,780
І я змесціць свой код з
пакуль на экране ў выпадку

1427
01:11:13,780 --> 01:11:16,650
Вы хочаце, каб вярнуцца да яго
або гуляць далей з тым.

1428
01:11:16,650 --> 01:11:18,100
Дазвольце мне павялічыць на гэта.

1429
01:11:18,100 --> 01:11:21,450
Але вырашыць медны выява
галаваломка, нумар два.

1430
01:11:21,450 --> 01:11:37,623

1431
01:11:37,623 --> 01:11:40,580
>> ГЛЕДАЧЫ: [неразборліва]

1432
01:11:40,580 --> 01:11:44,010
>> DAVID Малання: Добра, так што гэта адзін я
не збіраецца даваць столькі падказак.

1433
01:11:44,010 --> 01:11:47,220
Так што я would-- ой, давайце
Разумееце, у вас ёсць памылка друку тут.

1434
01:11:47,220 --> 01:11:49,621
Так што памятаеце, гэта тут
на самой справе трэба ісці туды.

1435
01:11:49,621 --> 01:11:52,870
Так што я хацеў бы прапанаваць, калі вы хочаце
засяродзіць увагу на гэтым, ёсць адказ.

1436
01:11:52,870 --> 01:11:57,060
Калі вы хочаце запісаць, што, што
павінен атрымаць першы адзін рабочы.

1437
01:11:57,060 --> 01:11:59,910
І тады вы можаце выкарыстоўваць яго ў якасці
натхненне для другой.

1438
01:11:59,910 --> 01:12:02,230
Ніца.

1439
01:12:02,230 --> 01:12:02,730
Добра.

1440
01:12:02,730 --> 01:12:05,430

1441
01:12:05,430 --> 01:12:08,180
>> І для цікаўных,
гэта просты прыклад

1442
01:12:08,180 --> 01:12:11,080
навукі або мастацтва
называецца стеганография,

1443
01:12:11,080 --> 01:12:14,100
мастацтва ўтойвання інфармацыі ў малюнках.

1444
01:12:14,100 --> 01:12:16,890
Як правіла, выявы могуць быць
вадзянымі вельмі груба

1445
01:12:16,890 --> 01:12:19,500
з лагатыпам ў ніжняй частцы
кут, але ясна, што вы

1446
01:12:19,500 --> 01:12:22,070
можа быць нашмат больш складанымі
пра гэта і на самай справе

1447
01:12:22,070 --> 01:12:25,050
схаваць іншыя выявы ў малюнках
як-то з гэтай тэхнікай.

1448
01:12:25,050 --> 01:12:59,890

1449
01:12:59,890 --> 01:13:05,770
>> Вазьміце яшчэ 30 секунд, а затым мы
па меншай меры, аб'явіць, што вы павінны ўбачыць.

1450
01:13:05,770 --> 01:13:08,330
І я пакіну трэці
адзін, як у хатніх умовах практыкаванні,

1451
01:13:08,330 --> 01:13:11,353
калі вы хочаце больш з
выклік у гэтыя выходныя.

1452
01:13:11,353 --> 01:13:18,240

1453
01:13:18,240 --> 01:13:20,390
І я думаю, што Андрэй можа
атрымалі яго ў першую чаргу.

1454
01:13:20,390 --> 01:13:22,645
Што такое другі малюнак, Эндру?

1455
01:13:22,645 --> 01:13:23,920
>> ГЛЕДАЧЫ: Статуя Свабоды.

1456
01:13:23,920 --> 01:13:28,500
>> DAVID Малання: Статуя Свабоды
будзе адказам на гэты раз.

1457
01:13:28,500 --> 01:13:31,140
Так зноў жа, проста некаторыя простыя
прыклады, мэта якіх

1458
01:13:31,140 --> 01:13:35,040
каб даць вам адчуванне таго, як
мы перавялі выяўленчы драпіна

1459
01:13:35,040 --> 01:13:40,410
блокі да больш раздражняльным і многае іншае
складаны код, але ўсе ідэі

1460
01:13:40,410 --> 01:13:42,980
да гэтага часу дакладна гэтак жа,
хоць і з увядзеннем

1461
01:13:42,980 --> 01:13:48,380
Цяпер паняцці зменнай, будучы
ў стане захоўваць нешта часова.

1462
01:13:48,380 --> 01:13:51,750
>> Давайце зробім яшчэ адзін практычны,
толькі цяпер злучаюць пункты

1463
01:13:51,750 --> 01:13:53,880
да чаго-то трохі больш рэальнага свету.

1464
01:13:53,880 --> 01:13:56,610
Калі вы будзеце гатовыя, калі вы маглі б
перайсці да гэтага URL на экране.

1465
01:13:56,610 --> 01:14:00,610
Гэта таксама ў сваю копію
слайды, developers.google.com/maps~~V.

1466
01:14:00,610 --> 01:14:03,660
Давайце на самай справе зрабіць нешта
рэальны, так бы мовіць, на вэб-сайце

1467
01:14:03,660 --> 01:14:07,600
з дапамогай API Карт Google, або
інтэрфейс прыкладнога праграмавання,

1468
01:14:07,600 --> 01:14:08,940
наступным чынам.

1469
01:14:08,940 --> 01:14:12,341
>> Google, як і многія іншыя кампаніі,
забяспечвае шмат вольнага функцыянальнасці

1470
01:14:12,341 --> 01:14:14,840
што вы можаце выкарыстоўваць, каб пабудаваць свой
ўласныя цікавыя прыкладання.

1471
01:14:14,840 --> 01:14:18,890
На самай справе, калі вы калі-небудзь выкарыстоўвалі
Uber, каб атрымаць таксі або аўтамабіль,

1472
01:14:18,890 --> 01:14:21,640
Вы, напэўна, ведаеце, што ёсць Uber
карту, і гэта паказвае аўтамабілі на ім.

1473
01:14:21,640 --> 01:14:24,870
Гэта значыць, як лепш за ўсё, як я магу
скажыце, Google Maps API.

1474
01:14:24,870 --> 01:14:28,884
Яны на самой справе з дапамогай карт Google,
але Uber не з'яўляецца адлюстраваннем кампаніі,

1475
01:14:28,884 --> 01:14:31,050
і не будзе, што будзе
Асабліва цікавай праблемай

1476
01:14:31,050 --> 01:14:33,510
вырашыць на вяршыні сваёй
праблема аўтасэрвісу.

1477
01:14:33,510 --> 01:14:35,510
І вось яны стаяць,
зноў жа, на плячах

1478
01:14:35,510 --> 01:14:37,520
іншых, Google у гэтым выпадку.

1479
01:14:37,520 --> 01:14:42,850
Такім чынам, яны выкарыстоўваюць карты Google, але іх уласныя
аўтасэрвісы і іншыя падобныя функцыі.

1480
01:14:42,850 --> 01:14:47,770
>> Такім чынам, мы збіраемся, каб скарыстацца
гэта зрабіць наступнае.

1481
01:14:47,770 --> 01:14:50,230
І калі я зайшоў занадта хутка,
проста патэлефануеце мяне ў дадзены момант.

1482
01:14:50,230 --> 01:14:53,500
Шчаслівы рэзюмаваць некаторыя рэчы малюнка.

1483
01:14:53,500 --> 01:14:56,290
Вы павінны бачыць сябе
на старонцы, як гэта.

1484
01:14:56,290 --> 01:14:58,230
Так прыемна Google, і
яны аднымі з лепшых

1485
01:14:58,230 --> 01:15:01,364
забяспечыць не толькі API-інтэрфейсы,
але свабодныя API-інтэрфейсы, якія вы

1486
01:15:01,364 --> 01:15:02,780
можа гуляць з або выкарыстоўваць у камерцыйных мэтах.

1487
01:15:02,780 --> 01:15:06,450
Яны пачынаюць, калі ваша выкарыстанне спагнанні платы
высокая, але я пайшоў наперад, загадзя

1488
01:15:06,450 --> 01:15:10,490
і падпісаў нас для бясплатнай ўліковага запісу
што, спадзяюся, 10 кампутараў

1489
01:15:10,490 --> 01:15:12,480
ня будзе дыскваліфікаваць нас за раптоўна.

1490
01:15:12,480 --> 01:15:14,320
Такім чынам, мы спадзяемся, гэта
дэманстрацыя будзе працаваць.

1491
01:15:14,320 --> 01:15:18,840
>> І заўважце, што ў іх ёсць API-інтэрфейсы для
Android, IOS, вэб, і вэб-сэрвісы,

1492
01:15:18,840 --> 01:15:19,620
што б гэта ні.

1493
01:15:19,620 --> 01:15:20,700
Давайце засяродзімся на Інтэрнэце.

1494
01:15:20,700 --> 01:15:26,560
Такім чынам, націсніце на ружовы скрыню, вэб-старонак, і што
прывядзе вас, спадзяюся, на старонку

1495
01:15:26,560 --> 01:15:27,630
тут.

1496
01:15:27,630 --> 01:15:29,335
І ў іх ёсць цэлая куча API.

1497
01:15:29,335 --> 01:15:31,210
І гэта можа быць трохі
пераважнай спачатку,

1498
01:15:31,210 --> 01:15:33,000
але я буду накіраваць нас праз тое, што мы хочам.

1499
01:15:33,000 --> 01:15:38,500
>> У левым верхнім куце знаходзіцца Карт Google
JavaScript API, то API JavaScript.

1500
01:15:38,500 --> 01:15:40,380
Так ісці наперад і націсніце гэтую.

1501
01:15:40,380 --> 01:15:49,360
І гэта прывядзе вас цяпер да
наступная старонка, дэманстрацыйныя і прыклады кода.

1502
01:15:49,360 --> 01:15:51,190
Дазвольце мне павялічыць тут.

1503
01:15:51,190 --> 01:15:56,300
І дазвольце мне прымусіць нас пракруціць ўніз, мэтай якіх
дзе ён кажа, што хуткія крокі запуску.

1504
01:15:56,300 --> 01:15:57,970
Ваш экран павінен выглядаць, як у мяне.

1505
01:15:57,970 --> 01:16:01,130
>> І ёсць два крокі, атрымаць
ключ і прыступіць да распрацоўкі.

1506
01:16:01,130 --> 01:16:04,190
Я ўжо зрабіў крок адзін для
нам, атрымліваючы так званую ключ.

1507
01:16:04,190 --> 01:16:05,320
І гэта агульная ідэя.

1508
01:16:05,320 --> 01:16:09,210
Ключ API, як правіла, толькі
большое выпадковы лік або радок

1509
01:16:09,210 --> 01:16:11,130
што вы павінны
ўставіць у код,

1510
01:16:11,130 --> 01:16:15,280
так што Google ведае, хто ты, калі
вы выкарыстоўваеце іх службы, іх API.

1511
01:16:15,280 --> 01:16:17,370
Гэта не значыць, што мы
зараджаецца нічога.

1512
01:16:17,370 --> 01:16:21,030
А зараз, націсніце, замест таго, каб
адзін, націсніце пачаць распрацоўку.

1513
01:16:21,030 --> 01:16:25,990
Калі б вы маглі проста памахаць мне
больш, калі не ўпэўнены, дзе мы знаходзімся.

1514
01:16:25,990 --> 01:16:28,040
>> Такім чынам, мы проста падрапаць
паверхню, тут, але тое, што

1515
01:16:28,040 --> 01:16:31,000
Я думаў, што было б пераканаўчым
гэта на самай справе ёсць усе мы,

1516
01:16:31,000 --> 01:16:34,240
выкарыстоўваючы Cloud9 ў адным акне і
гэты падручнік у іншым акне,

1517
01:16:34,240 --> 01:16:37,120
дазваляе фактычна атрымаць нашы ўласныя
прыкладанняў і працуе

1518
01:16:37,120 --> 01:16:40,920
якая ўбудоўвае звычай Google
карту ў нашым уласным вэб-старонцы,

1519
01:16:40,920 --> 01:16:43,010
а затым дадае адну ці дзве функцыі.

1520
01:16:43,010 --> 01:16:45,520
Але мы проста падрапаць
паверхню таго, што мы можам зрабіць.

1521
01:16:45,520 --> 01:16:47,020
>> Так проста хуткая праверка наяўнасці свядомасці.

1522
01:16:47,020 --> 01:16:49,740
Гэта ўсё на гэтай старонцы,
Google Maps JavaScript API?

1523
01:16:49,740 --> 01:16:50,872
Павінен сказаць, пачаць працу.

1524
01:16:50,872 --> 01:16:53,330
Мы не збіраемся прайсці праз
усё гэта любымі сродкамі.

1525
01:16:53,330 --> 01:16:58,090
ОК, у іншай ўкладцы, калі вы гэтага не зробіце
адкрыць яго, не ідуць у Cloud9

1526
01:16:58,090 --> 01:17:03,500
і атрымаць сябе толькі
новая ўкладка, у канчатковым рахунку.

1527
01:17:03,500 --> 01:17:11,070
Так зноў жа, c9.io з учорашняга дня,
c9.io, і проста стварыць новы файл.

1528
01:17:11,070 --> 01:17:13,500
І ісці наперад і выклік
гэта ўсё, што вы хочаце.

1529
01:17:13,500 --> 01:17:16,495
Я назваў маё map.html.

1530
01:17:16,495 --> 01:17:17,870
Назавіце гэта што-небудзь сканчаецца на .html.

1531
01:17:17,870 --> 01:17:23,930

1532
01:17:23,930 --> 01:17:26,580
І вы павінны быць прыкладна
дзе я знаходжуся ў гэтым працэсе

1533
01:17:26,580 --> 01:17:31,470
толькі з якая мігціць радкі ў пусты
ўкладка пад назвай нешта накшталт map.html.

1534
01:17:31,470 --> 01:17:35,808

1535
01:17:35,808 --> 01:17:38,148
Або файл, новы файл на гэты раз.

1536
01:17:38,148 --> 01:17:41,960

1537
01:17:41,960 --> 01:17:48,000
>> А цяпер, на працягу
Google Maps JavaScript API,

1538
01:17:48,000 --> 01:17:50,010
мы прапусцім чытанне
праз увесь гэты тэкст.

1539
01:17:50,010 --> 01:17:53,760
Але заўважце, што гэта прывітанне свет
на самай справе ўсюды, вы бачыце яго цяпер.

1540
01:17:53,760 --> 01:17:58,020
Прывітанне свет мае такі вялікі маляўнічы
Прыклад цэлай кучай HTML.

1541
01:17:58,020 --> 01:18:03,590
Ідзем далей і скапіяваць і ўставіць толькі што
HTML, таму ад тыпу дакумента ў верхняй

1542
01:18:03,590 --> 01:18:08,810
ўсе шляхі да цеснай HTML тэга, перайдзіце
наперад і скапіяваць ўсе that-- зноў,

1543
01:18:08,810 --> 01:18:14,430
гэта пад прывітанне свет example--
і ўстаўце яго ў вашу ўкладку Cloud9,

1544
01:18:14,430 --> 01:18:17,996
так што зараз ваш экран
павінен выглядаць прыкладна як у мяне.

1545
01:18:17,996 --> 01:18:22,280

1546
01:18:22,280 --> 01:18:24,520
>> І вы можаце захаваць яго, але
не загружаць яго толькі пакуль.

1547
01:18:24,520 --> 01:18:26,290
Давайце спачатку паглядзім на
код і паглядзець, калі мы

1548
01:18:26,290 --> 01:18:29,110
не можа вывесці або даведацца
ад таго, што гэта Google

1549
01:18:29,110 --> 01:18:30,860
была нам слепа капіяваць і ўстаўляць.

1550
01:18:30,860 --> 01:18:33,334
Яны проста хочуць, каб дапамагчы,
у літаральным сэнсе, каб нас пачалі,

1551
01:18:33,334 --> 01:18:35,500
але там не так шмат
складанасць на самай справе ёсць.

1552
01:18:35,500 --> 01:18:40,100

1553
01:18:40,100 --> 01:18:42,210
Ёсць пытанні толькі пакуль?

1554
01:18:42,210 --> 01:18:43,790
Мы ў бяспецы, каб прасоўвацца наперад?

1555
01:18:43,790 --> 01:18:44,330
ДОБРА.

1556
01:18:44,330 --> 01:18:46,800
>> Так хутка, давайце проста рабіць
некаторыя хуткія праверкі здаровае.

1557
01:18:46,800 --> 01:18:48,800
Лінія адзін з таго, што я
см, і, спадзяюся, вам

1558
01:18:48,800 --> 01:18:51,710
Разумееце, што гэта значыць, DOCTYPE HTML?

1559
01:18:51,710 --> 01:18:52,385
Карыма, нагадаць?

1560
01:18:52,385 --> 01:18:53,260
ГЛЕДАЧЫ: [неразборліва]

1561
01:18:53,260 --> 01:18:53,968
DAVID Малання: Так.

1562
01:18:53,968 --> 01:18:54,870
Вось ідзе HTML 5.

1563
01:18:54,870 --> 01:18:57,950
У той жа час, лінія два на
Экран тут азначае, эй браўзэр,

1564
01:18:57,950 --> 01:18:59,482
тут прыходзіць фактычны HTML.

1565
01:18:59,482 --> 01:19:01,440
Лінія тры з'яўляецца эй-браўзэр,
тут ідзе галава.

1566
01:19:01,440 --> 01:19:04,260
Лінія чатыры, вядома ж, эй
браўзэр, тут прыходзіць назву.

1567
01:19:04,260 --> 01:19:07,780
Што лінія пяць рабіць?

1568
01:19:07,780 --> 01:19:09,930
На самай справе, гэта не
сапраўды зрабіць што-небудзь для нас.

1569
01:19:09,930 --> 01:19:13,340
У гэтым выпадку ён проста змяняе памеры
старонка да дэфолту. Лінія шэсць,

1570
01:19:13,340 --> 01:19:16,140
мы не казалі пра гэта, але гэта
вызначае кадыроўку.

1571
01:19:16,140 --> 01:19:19,181
Там у розныя спосабы кадавання файлаў,
асабліва для замежных моў.

1572
01:19:19,181 --> 01:19:21,100
UTF-8 проста, як правіла, па змаўчанні.

1573
01:19:21,100 --> 01:19:26,580
>> Так што цяпер мы ўбачым у радку
сем праз 16 гадоў, некаторыя CSS.

1574
01:19:26,580 --> 01:19:29,260
І нягледзячы на ​​тое, што мы не бачылі
усе гэтыя рэчы раней,

1575
01:19:29,260 --> 01:19:30,810
мы можам зрабіць выснову, свайго роду.

1576
01:19:30,810 --> 01:19:37,075
Так лінія восем сродкаў, эй браўзэр, прымяніць
усе наступныя, да якіх два тэга,

1577
01:19:37,075 --> 01:19:37,575
па-відаць?

1578
01:19:37,575 --> 01:19:40,650

1579
01:19:40,650 --> 01:19:41,701
HTML і цела тэксту.

1580
01:19:41,701 --> 01:19:43,200
Так коска новая рэч ёсць.

1581
01:19:43,200 --> 01:19:46,140
І гэта проста спосаб
паказаўшы некалькі тэгаў адразу.

1582
01:19:46,140 --> 01:19:47,640
>> Тады ў нас ёсць фігурныя дужкі.

1583
01:19:47,640 --> 01:19:51,170
Так што, па-відаць, гэта кажа браўзэру,
зрабіць вышыню старонкі 100%.

1584
01:19:51,170 --> 01:19:54,170
Так што нават калі ёсць вельмі мала
змест, зрабіць усю старонку,

1585
01:19:54,170 --> 01:19:55,530
зрабіць рэч запаўнення старонкі.

1586
01:19:55,530 --> 01:19:57,524
Зрабіць карту ў канчатковым рахунку, запаўнення старонкі.

1587
01:19:57,524 --> 01:19:58,690
Маржа, што гэта значыць?

1588
01:19:58,690 --> 01:20:01,559
Гэта, як правіла, як адвольнае
белае прастору па краях

1589
01:20:01,559 --> 01:20:04,350
што некаторыя браўзэра дызайнер проста
вырашыў павінен быць там, таму што

1590
01:20:04,350 --> 01:20:05,540
выгляд робіць рэчы выглядаюць чысцей.

1591
01:20:05,540 --> 01:20:06,498
Але мы не хочам гэтага.

1592
01:20:06,498 --> 01:20:08,710
Мы хочам, каб карта збіраецца
ўсе шляхі да бакоў.

1593
01:20:08,710 --> 01:20:10,930
Перацяжка, падобныя па духу з ускраін.

1594
01:20:10,930 --> 01:20:14,980
Поля азначаюць звонку, сродкі абіўка
ўнутры, але гэта той жа самы выгляд здзелкі.

1595
01:20:14,980 --> 01:20:17,520
Гэта крыху буфера
паміж вамі і бакамі.

1596
01:20:17,520 --> 01:20:21,170
>> І тады лінія 13 з'яўляецца добрым
шанец для хуткага агляду.

1597
01:20:21,170 --> 01:20:26,440
Што робіць рэзкі знак карты
значыць, або хэштэгу карта азначае?

1598
01:20:26,440 --> 01:20:29,650
Што азначае, што адносяцца, у прынцыпе?

1599
01:20:29,650 --> 01:20:31,485
>> ГЛЕДАЧЫ: [неразборліва]

1600
01:20:31,485 --> 01:20:32,360
DAVID Малання: Вы маеце рацыю.

1601
01:20:32,360 --> 01:20:36,900
Гэта ўласцівасць, гэта ўласцівасць CSS
ставіцца да толькі адной рэчы, тэг HTML

1602
01:20:36,900 --> 01:20:41,180
што мае ідэнтыфікатар цытаты, Unquote "карце".

1603
01:20:41,180 --> 01:20:44,460
А цяпер давайце хутка наперад, пракруткі
аж да ніжняй часткі файла, які

1604
01:20:44,460 --> 01:20:49,860
не занадта далёка, і апавяшчэнне аб лініі
19, калі ўставіць яго ў дакладнасці, як я зрабіў,

1605
01:20:49,860 --> 01:20:53,405
радок 19 мае толькі DIV, які з'яўляецца
раздзел старонкі, які я ўчора

1606
01:20:53,405 --> 01:20:54,820
называецца прастакутная вобласць.

1607
01:20:54,820 --> 01:20:55,820
Гэта не мае нічога ў ім.

1608
01:20:55,820 --> 01:20:57,550
Гэта адкрыты тэг, які зачыняе тэг.

1609
01:20:57,550 --> 01:20:59,490
Але ў яго ёсць унікальны ідэнтыфікатар.

1610
01:20:59,490 --> 01:21:02,090
>> Так што, як уяўляецца,
што тут адбываецца Google

1611
01:21:02,090 --> 01:21:05,880
рыхтуе нашу вэб-старонку
маюць поўную вышыню 100%,

1612
01:21:05,880 --> 01:21:09,680
і без водступаў, без палёў, таму што
тое, што мы збіраемся пакласці ўнутр

1613
01:21:09,680 --> 01:21:13,647
гэтага DIV, унікальны ідэнтыфікатар
карта, з'яўляецца актуальнай убудаванай карты.

1614
01:21:13,647 --> 01:21:15,480
І мы хочам, каб запоўніць
старонкі, а не толькі

1615
01:21:15,480 --> 01:21:17,560
быць нейкі маленькі прастакутнік ў цэнтры.

1616
01:21:17,560 --> 01:21:24,220
Такім чынам, лінія 14 гэтак жа падкрэслівае, то
карта сама павінна мець вышыню 100%.

1617
01:21:24,220 --> 01:21:29,220
>> Так што цяпер заўважыць паміж лініямі 20
і 28, гэта JavaScript код.

1618
01:21:29,220 --> 01:21:33,020
І гэта, нават калі гэта
сінтаксічна крыху дзіўна,

1619
01:21:33,020 --> 01:21:34,730
там не ўсё, што многае тут адбываецца.

1620
01:21:34,730 --> 01:21:39,310
У радку 21, гэта аб'яўляе
тое, што называецца зменнай.

1621
01:21:39,310 --> 01:21:42,030
Замест таго, каб называць яго
складае, як мы гэта рабілі раней,

1622
01:21:42,030 --> 01:21:44,500
мы больш дакладна кажучы
зменная, якая проста азначае зменную.

1623
01:21:44,500 --> 01:21:46,520
Мы маглі б выкарыстоўваць, што ў
код Ніка, але ён гэтага не зрабіў, так што я

1624
01:21:46,520 --> 01:21:48,190
не папрацаваў рабіць гэта альбо.

1625
01:21:48,190 --> 01:21:50,240
Гэта зменная называецца
карту, а затым ёсць

1626
01:21:50,240 --> 01:21:53,360
функцыю, якая
па-відаць, называецца initMap.

1627
01:21:53,360 --> 01:21:55,780
>> Так што гэта як наш уласны карыстацкі
кавалак галаваломкі ў пустым месцы.

1628
01:21:55,780 --> 01:21:58,830
Мы стварылі кавалак
Функцыянальнасць называецца initMap,

1629
01:21:58,830 --> 01:22:00,980
і вы можаце збольшага зрабіць выснову
што адбываецца тут.

1630
01:22:00,980 --> 01:22:02,930
З левага боку,
у нас ёсць пераменная,

1631
01:22:02,930 --> 01:22:06,000
таму мы збіраемся паставіць наступнае
рэч ўнутры гэтай зменнай,

1632
01:22:06,000 --> 01:22:07,362
справа налева.

1633
01:22:07,362 --> 01:22:11,940
Правая рука кажа, эй
браўзэр, дайце мне новую карту Google.

1634
01:22:11,940 --> 01:22:16,490
І google.maps.Map гэта проста ачмуральны спосаб
ўказанні, што гэтая функцыянальнасць

1635
01:22:16,490 --> 01:22:19,790
належыць Google Maps.

1636
01:22:19,790 --> 01:22:23,010
>> Пасля таго, як у дужках, мы ўжо бачылі
гэта раней, эй браўзэр, атрымаць

1637
01:22:23,010 --> 01:22:29,210
мне элементы на старонцы, то
тэг на старонцы, чый унікальны ідэнтыфікатар is--

1638
01:22:29,210 --> 01:22:30,710
>> ГЛЕДАЧЫ: [неразборліва]

1639
01:22:30,710 --> 01:22:31,790
>> DAVID Малання: --map.

1640
01:22:31,790 --> 01:22:35,770
А што адбываецца, ну,
гэтая лінія разам, радок 23,

1641
01:22:35,770 --> 01:22:38,630
па сутнасці кажучы,
эй браўзэр, ідзі са мной

1642
01:22:38,630 --> 01:22:42,800
што пусты DIV на старонцы
чый унікальны ідэнтыфікатар карты,

1643
01:22:42,800 --> 01:22:45,600
таму што я хачу, каб ўставіць
у it-- ўпырснуць у яго,

1644
01:22:45,600 --> 01:22:49,520
калі вы will-- цэлую кучу кантэнту
што здараецца, прыходзіць з Інтэрнэту,

1645
01:22:49,520 --> 01:22:50,427
пасля.

1646
01:22:50,427 --> 01:22:52,010
І Google, рабіць усё, што для нас.

1647
01:22:52,010 --> 01:22:55,350
>> Такім чынам, яшчэ раз, у самым канцы дня,
у нас ёсць гэты прыклад абстракцыі.

1648
01:22:55,350 --> 01:22:58,610
Я паняцця не маю, што такое карта
ці як рэалізаваць карту API.

1649
01:22:58,610 --> 01:22:59,460
Нам не трэба.

1650
01:22:59,460 --> 01:23:02,740
Нам проста трэба сказаць карту
дзе паставіць сябе, і пакінуць

1651
01:23:02,740 --> 01:23:04,880
якія ляжаць у аснове рэалізацыі
дэталі да Google.

1652
01:23:04,880 --> 01:23:08,190
У цяперашні час існуе, па-відаць
дзве часткі дадзеных

1653
01:23:08,190 --> 01:23:11,940
што гэты прыклад
прадастаўленне ў API Google.

1654
01:23:11,940 --> 01:23:16,450
Па-відаць, цэнтр карты,
і ўзровень маштабавання, так бы мовіць.

1655
01:23:16,450 --> 01:23:21,390
>> І хто-небудзь распазнаць іх
каардынаты, шырыня і даўжыня?

1656
01:23:21,390 --> 01:23:24,364
Хутчэй за ўсё, няма, але мы можам вярнуцца
у падручніку, у літаральным сэнсе бачыць.

1657
01:23:24,364 --> 01:23:25,780
Але мы ўбачым яго ў імгненне.

1658
01:23:25,780 --> 01:23:29,880
Ўзровень маштабавання з'яўляецца значэнне паміж, я не
ведаеце, адзін у 13 ці нешта ў гэтым родзе.

1659
01:23:29,880 --> 01:23:32,880
Гэта проста трэба зрабіць з тым, як далёка вы
сціснутая або расцягнутая, і гэта ўсё.

1660
01:23:32,880 --> 01:23:35,690
І цяпер у самым канцы
старонка, апавяшчэнне лініі 29--

1661
01:23:35,690 --> 01:23:39,960
гэта крыху непрыгожа, таму што
яна wraps-- гэты радок кода

1662
01:23:39,960 --> 01:23:44,570
што загружае да
браўзэр фактычнай API Google.

1663
01:23:44,570 --> 01:23:47,500
Увесь код, што кампаніі Google
інжынеры напісалі, якія рэалізуюць

1664
01:23:47,500 --> 01:23:50,000
Уся гэтая асаблівасць вложимых карт.

1665
01:23:50,000 --> 01:23:51,470
>> Зараз давайце нічога не зменіцца.

1666
01:23:51,470 --> 01:23:54,761
Калі вы вынікаеце, ісці наперад і
проста захавайце гэты файл, калі ў вас сапраўды ёсць

1667
01:23:54,761 --> 01:23:55,760
што ў мяне ёсць.

1668
01:23:55,760 --> 01:23:57,370
Перайсці да яго URL.

1669
01:23:57,370 --> 01:23:59,820
Вы можаце націснуць кнопку Run
наверсе і што скажа

1670
01:23:59,820 --> 01:24:03,050
Вам URL вашага вэб-сервера зноў.

1671
01:24:03,050 --> 01:24:06,010
І гэта прывядзе вас да новай ўкладцы.

1672
01:24:06,010 --> 01:24:11,910
Калі для Вас націсніце кнопку Адкрыць
map.html, і шанцы вы

1673
01:24:11,910 --> 01:24:15,520
збіраецца атрымаць папярэджанне,
паведамленне пра памылку, так?

1674
01:24:15,520 --> 01:24:18,570
Паведамленне пра памылку, паведамленні пра памылкі?

1675
01:24:18,570 --> 01:24:21,170
>> Такім чынам, на жаль, памылка
паведамленне не тое, што асветніцкая

1676
01:24:21,170 --> 01:24:23,890
калі вы на самой справе не адкрыць
Кансоль, што ўкладка спецыяльны мы

1677
01:24:23,890 --> 01:24:27,110
адкрываў ўчора і
крыху раней сёння.

1678
01:24:27,110 --> 01:24:29,445
Але я наткнуўся
гэта раней, так што я ўжо

1679
01:24:29,445 --> 01:24:30,820
зразумеў, што рашэнне.

1680
01:24:30,820 --> 01:24:34,440
У сённяшніх слайдаў, або
хутчэй, у Cloud9, апавяшчэнне

1681
01:24:34,440 --> 01:24:36,430
што мы не рабілі
нешта наўмысна.

1682
01:24:36,430 --> 01:24:40,690
Звярніце ўвагу на тое, што гэты сцэнар тэг
радок 29, калі вы прачытаеце яго,

1683
01:24:40,690 --> 01:24:44,440
гэта як maps.googleapis.com/~~pobj
нешта, што-то, что-то,

1684
01:24:44,440 --> 01:24:46,430
зьвярніце ўвагу на тое хто-то,
адзін з распрацоўшчыкаў,

1685
01:24:46,430 --> 01:24:50,040
піша ва ўсёй сталіцы
лісты, ваш ключ API.

1686
01:24:50,040 --> 01:24:51,700
>> Нам трэба ўставіць нешта там.

1687
01:24:51,700 --> 01:24:53,450
І гэта быў крок
Я зрабіў для нас перш,

1688
01:24:53,450 --> 01:24:57,190
і зноў яны маглі б чорны спіс
нам, калі раптам, 12 або больш з нас

1689
01:24:57,190 --> 01:24:59,470
пачаць выкарыстоўваць адзін і той жа ключ,
але давайце паглядзім, што адбудзецца.

1690
01:24:59,470 --> 01:25:03,030
Так што калі вы ідзяце ў сённяшніх
слайды, адзін слайд пазней, ёсць

1691
01:25:03,030 --> 01:25:07,070
гэта вельмі ачмуральны выгляд радкі тэксту.

1692
01:25:07,070 --> 01:25:12,230
Ідзіце наперад і проста скапіяваць, што і
ўставіць яго, дзе ён кажа, што ваш ключ API.

1693
01:25:12,230 --> 01:25:15,120
Гэта той, які я падпісаўся на.

1694
01:25:15,120 --> 01:25:17,700
>> І, безумоўна, не спрабуйце
набраўшы яго ўручную,

1695
01:25:17,700 --> 01:25:21,210
таму што ён адчувае сябе тоіць у сабе
з памылкамі друку, патэнцыйна.

1696
01:25:21,210 --> 01:25:23,260
Так проста скапіяваць і ўставіць гэта.

1697
01:25:23,260 --> 01:25:26,090
І гэта збіраецца зрабіць лінію
больш, але цяпер, проста каб быць ясна,

1698
01:25:26,090 --> 01:25:29,540
яна павінна выглядаць трохі больш
як гэта, дзе ключ ня роўны

1699
01:25:29,540 --> 01:25:32,200
капитализируются крычаць на вас.

1700
01:25:32,200 --> 01:25:34,810
Захавайце старонку, вярніцеся назад
на ўкладку іншы, перазагрузіць,

1701
01:25:34,810 --> 01:25:36,770
і спадзяемся ўбачыць карту, дзе?

1702
01:25:36,770 --> 01:25:37,790
>> ГЛЕДАЧЫ: Аўстралія.

1703
01:25:37,790 --> 01:25:38,748
>> DAVID Малання: Аўстралія.

1704
01:25:38,748 --> 01:25:41,200
Так што, па-відаць, з'яўляюцца тыя,
GPS-каардынаты Аўстраліі.

1705
01:25:41,200 --> 01:25:44,491
І дазвольце мне хадзіць на імгненне
і дапамагчы ўсім, хто не зусім там,

1706
01:25:44,491 --> 01:25:47,729
але дазвольце мне прапанаваць, з дапамогай Google, знайсці
GPS-каардынаты вашага роднага горада

1707
01:25:47,729 --> 01:25:48,770
ці ваш уласны роднай краіне.

1708
01:25:48,770 --> 01:25:51,436
І, верагодна, Google можа ператварыць гэта
уверх ці Wikipedia можа сказаць вам.

1709
01:25:51,436 --> 01:25:54,410
Але выбраць два розных значэння
для шыраты і даўгаты,

1710
01:25:54,410 --> 01:25:57,530
вярнуцца і ўставіць іх, і
Затым перазагрузіце старонку пасля захавання

1711
01:25:57,530 --> 01:26:00,718
і паглядзець, калі вы можаце мець
карта для вашага роднага горада.

1712
01:26:00,718 --> 01:26:04,500

1713
01:26:04,500 --> 01:26:08,042
>> А калі вы скончыце з
што наступная дзейнасць challenge--

1714
01:26:08,042 --> 01:26:11,250
і я дам трохі менш кірунак,
свядома, так што вы свядома

1715
01:26:11,250 --> 01:26:13,791
прыйдзецца змагацца за пару
хвілін з дакументацыяй,

1716
01:26:13,791 --> 01:26:18,740
змяніць карту, каб быць не ў гэтым
мультяшным па змаўчанні, але спадарожнікавая карта.

1717
01:26:18,740 --> 01:26:24,600
Так што вы на самай справе бачыце спадарожнік
вобразы замест прыгожых кветак.

1718
01:26:24,600 --> 01:26:29,710
>> І намёк я дам вам
гэта змяніць тып карты.

1719
01:26:29,710 --> 01:26:33,084
Вярнуцца да таго, што атрыманне
пачаў старонку для натхнення.

1720
01:26:33,084 --> 01:26:40,599

1721
01:26:40,599 --> 01:26:42,390
Як вы запазычылі,
калі вы шукаеце,

1722
01:26:42,390 --> 01:26:44,250
Ёсць так шмат больш
рэчы, якія вы можаце зрабіць.

1723
01:26:44,250 --> 01:26:46,380
Некаторыя з вас ужо
зменены тып карты.

1724
01:26:46,380 --> 01:26:49,890
Але вы можаце do--, напрыклад, дазвольце мне
перайсці да чаму-то мы зрабілі для курса

1725
01:26:49,890 --> 01:26:52,050
Я teach-- maps.cs50.net.

1726
01:26:52,050 --> 01:26:53,470
Адзін з нашых старшакурснікаў зрабіў гэта.

1727
01:26:53,470 --> 01:26:58,890
Мы цэнтравання нашу карту над Harvard Yard і
Накладанне ўсіх гэтых назваў будынкаў,

1728
01:26:58,890 --> 01:27:01,070
і мы павінны былі яго дадаць гэта.

1729
01:27:01,070 --> 01:27:04,270
Так што, калі я хачу, каб шукаць,
напрыклад, Мэццюз зала,

1730
01:27:04,270 --> 01:27:05,730
у нас ёсць трохі выпадальнае меню.

1731
01:27:05,730 --> 01:27:09,080
І я думаю, што ён выкарыстоўвае Bootstrap, у
Бібліятэка мы абмяркоўвалі раней для гэтага.

1732
01:27:09,080 --> 01:27:12,190
І калі вы націснеце на Matthews
Хол, ён неадкладна

1733
01:27:12,190 --> 01:27:14,790
скачкі карту да вызначанага
размяшчэнне, і гэта паказвае,

1734
01:27:14,790 --> 01:27:16,440
вы карціна ў гэтым маленькім ўсплываючым акне.

1735
01:27:16,440 --> 01:27:18,670
>> Але нават гэтая маленькая
усплываючых вокнаў, мы не рэалізавалі.

1736
01:27:18,670 --> 01:27:27,521
Калі я пракруціць ўніз на нашым атрыманні
пачаў старонку і шукаць інфармацыйныя вокны,

1737
01:27:27,521 --> 01:27:29,770
вы ўбачыце, што некаторыя з
функцыянальнасць вы самі

1738
01:27:29,770 --> 01:27:31,561
можна дадаць, хоць і з
трохі больш складанасці,

1739
01:27:31,561 --> 01:27:33,970
нешта, званае інфармацыйнае акно.

1740
01:27:33,970 --> 01:27:37,190
І калі я націскаю прыклад
тут, і гэта тое, што цікава,

1741
01:27:37,190 --> 01:27:40,530
вы можаце зрабіць нешта накшталт гэтага,
націснуўшы на маркер, а затым вуаля,

1742
01:27:40,530 --> 01:27:42,400
інфармацыя ўсплывае.

1743
01:27:42,400 --> 01:27:45,874
>> Такім чынам, мы не зусім ўведзеныя
дастаткова асаблівасці JavaScript

1744
01:27:45,874 --> 01:27:49,040
каб намаляваць карціну таго, як менавіта вам
можа падключыць усе гэтыя рэчы разам,

1745
01:27:49,040 --> 01:27:50,706
але мы-то падрапаў паверхню.

1746
01:27:50,706 --> 01:27:53,140
На самай справе, што я толькі што зрабіў, калі
Я націснуў на гэты маркер,

1747
01:27:53,140 --> 01:27:55,819
быў выклікаючы падзея,
так званае на падзею пстрычкі.

1748
01:27:55,819 --> 01:27:57,610
І мы на самай справе ўбачыў
падзея раней сёння,

1749
01:27:57,610 --> 01:28:00,670
так званы прадставіць падзея,
калі мы прадухілялі

1750
01:28:00,670 --> 01:28:02,490
карыстальнік ад пошуку для котак.

1751
01:28:02,490 --> 01:28:06,560
Такім чынам, мы абралі выгляд і абраў
з ліку ўсіх гэтых розных функцый,

1752
01:28:06,560 --> 01:28:08,990
каб даць вам адчуванне таго, мы спадзяемся,
аб тым, што вы можаце на самой справе

1753
01:28:08,990 --> 01:28:11,000
рабіць з трохі больш
камфорт у праграмаванні,

1754
01:28:11,000 --> 01:28:12,587
і цалкам свабодныя рэсурсы.

1755
01:28:12,587 --> 01:28:15,856

1756
01:28:15,856 --> 01:28:18,770
>> Ёсць пытанні?

1757
01:28:18,770 --> 01:28:19,790
Няма?

1758
01:28:19,790 --> 01:28:22,542
Гэта ваш апошні шанец,
скажам, сёння, у пятніцу,

1759
01:28:22,542 --> 01:28:25,000
каб атрымаць што-небудзь ад грудзей
так што ты выходзіш адсюль

1760
01:28:25,000 --> 01:28:27,067
адчуваючы сябе ўпэўнена і камфортна.

1761
01:28:27,067 --> 01:28:27,566
Так.

1762
01:28:27,566 --> 01:28:29,740
>> ГЛЕДАЧЫ: Почему не
Вы дадаеце яшчэ адну рэч?

1763
01:28:29,740 --> 01:28:32,720
>> DAVID Малання: О, божа мой.

1764
01:28:32,720 --> 01:28:35,260
Мне трэба, каб адпачыць у гэтыя выхадныя, я думаю.

1765
01:28:35,260 --> 01:28:36,180
Іншыя пытанні?

1766
01:28:36,180 --> 01:28:37,055
>> ГЛЕДАЧЫ: [неразборліва]

1767
01:28:37,055 --> 01:28:44,130

1768
01:28:44,130 --> 01:28:46,810
>> DAVID Малання: Вы ў can--
Internet Explorer, у астатнім свеце,

1769
01:28:46,810 --> 01:28:49,310
вы выкарыстоўвалі, каб мець магчымасць паставіць VB
Сцэнар, віртуальны базавы сцэнар,

1770
01:28:49,310 --> 01:28:50,643
але гэта на самай справе ніколі не прыжыўся.

1771
01:28:50,643 --> 01:28:52,490
Таму кароткі адказ проста JavaScript.

1772
01:28:52,490 --> 01:28:55,144

1773
01:28:55,144 --> 01:28:55,810
Іншыя пытанні?

1774
01:28:55,810 --> 01:28:58,427

1775
01:28:58,427 --> 01:28:59,760
Добра, ну, дазвольце мне зрабіць гэта.

1776
01:28:59,760 --> 01:29:02,070
Дазвольце мне захапіць з нашымі калегамі за межамі.

1777
01:29:02,070 --> 01:29:04,500
Яны маюць некаторую ацэнку
формы, якія яны хочуць, каб усе

1778
01:29:04,500 --> 01:29:06,310
каб правесці некалькі хвілін запаўнення.

1779
01:29:06,310 --> 01:29:08,775
Яны хочуць, каб сабраць гэтую форму і любыя
адмовы, якія вы маглі б мець звонку.

1780
01:29:08,775 --> 01:29:10,240
Яны таксама будуць мець сертыфікаты.

1781
01:29:10,240 --> 01:29:12,380
Я мяркую, што ёсць
яшчэ некаторыя закускі звонку.

1782
01:29:12,380 --> 01:29:14,360
Дазвольце мне перадаць іх, і калі вам
ёсць якія-небудзь пытанні ў той жа час,

1783
01:29:14,360 --> 01:29:17,120
Я буду хадзіць вакол больш індывідуальна
і мы можам вам пачаць.

1784
01:29:17,120 --> 01:29:17,879
Так, канечне.

1785
01:29:17,879 --> 01:29:18,754
ГЛЕДАЧЫ: [неразборліва]

1786
01:29:18,754 --> 01:29:26,737

1787
01:29:26,737 --> 01:29:28,570
DAVID Малання: Гэта
як правіла, праўда, у гэтыя дні.

1788
01:29:28,570 --> 01:29:30,730
Вядома, з вэб
праграмнае забеспячэнне, вы належыце

1789
01:29:30,730 --> 01:29:32,901
на іншых вы альбо
эстэтычна выкарыстоўваючы рэчы

1790
01:29:32,901 --> 01:29:35,400
як Bootstrap, так што вы не
павінны рэалізаваць нізкі ўзровень

1791
01:29:35,400 --> 01:29:37,169
Падрабязная інфармацыя аб меню і
кнопкі і ўсё такое.

1792
01:29:37,169 --> 01:29:39,210
Вы, абапіраючыся на каго-то
як Google, так што вы

1793
01:29:39,210 --> 01:29:42,050
не павінны будаваць Uber
бізнес і адлюстраванне бізнес,

1794
01:29:42,050 --> 01:29:44,850
і любую колькасць падобнае
прыкладанняў, а таксама.

1795
01:29:44,850 --> 01:29:46,350
>> На самай справе, лагіны папулярныя, таксама.

1796
01:29:46,350 --> 01:29:48,500
Калі вы выкарыстоўвалі Spotify або
любую колькасць вэб-сайтаў,

1797
01:29:48,500 --> 01:29:51,210
вы будзеце увайсці ў некаторыя
сайтаў з дапамогай Facebook.

1798
01:29:51,210 --> 01:29:53,350
Так што добра, там
з'яўляюцца API-інтэрфейсы для ўваходу ў сістэму

1799
01:29:53,350 --> 01:29:56,570
у цяперашні час, так што вы не маеце
каб мець свой уласны стол карыстальнікаў

1800
01:29:56,570 --> 01:29:59,440
і ўсе вашай уласнай базы дадзеных
абавязкова ў той жа ступені.

1801
01:29:59,440 --> 01:30:01,795
Вы можаце дазволіць Facebook зрабіць усё
з гэтай складанасці для вас.

1802
01:30:01,795 --> 01:30:03,920
Так што гэта захапляльнае час,
калі шчыра, у праграмаванні,

1803
01:30:03,920 --> 01:30:07,200
таму што ёсць так шмат трэці бок
паслугі, якія вы можаце пабудаваць на вяршыні.

1804
01:30:07,200 --> 01:30:10,890
>> І зноў жа, цана, якую вы плаціце
небудзь фінансавых або часу прастою.

1805
01:30:10,890 --> 01:30:13,750
Калі Google ідзе ўніз,
так што робіць Uber, магчыма,

1806
01:30:13,750 --> 01:30:15,690
але, магчыма, што гэта
разумны кампраміс.

1807
01:30:15,690 --> 01:30:18,040
І зноў жа, гэта было адной з тэм,
Будзем спадзявацца, што за апошнія пару дзён,

1808
01:30:18,040 --> 01:30:18,780
гэтыя кампрамісы.

1809
01:30:18,780 --> 01:30:20,738
І рэдка там адбываецца
каб быць правільным адказам.

1810
01:30:20,738 --> 01:30:25,700
Гэта на самай справе, тым лепш
з двух або больш адказаў.

1811
01:30:25,700 --> 01:30:26,682
>> Перадайце іх вакол.

1812
01:30:26,682 --> 01:30:36,830

1813
01:30:36,830 --> 01:30:41,110
>> І гэтыя рахункі Cloud9 будзе працягвацца
працаваць, у тэорыі, на неабмежаваны тэрмін.

1814
01:30:41,110 --> 01:30:45,000
Вы можаце выявіць, калі вы будзеце чакаць некалькі дзён
або на тыдзень ці больш, каб зноў увайсці ў іх,

1815
01:30:45,000 --> 01:30:49,170
гэта можа заняць як адзін ці
пяць хвілін, каб адкрыць назад уверх,

1816
01:30:49,170 --> 01:30:54,090
але гэта толькі таму, што яны паклалі
у спячы рэжым, каб зэканоміць рэсурсы.

1817
01:30:54,090 --> 01:31:10,527

