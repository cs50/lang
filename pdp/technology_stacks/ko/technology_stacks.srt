1
00:00:00,000 --> 00:00:01,291
>> 데이비드 J. 마란 : 그래서 우리는 다시 수 있습니다.

2
00:00:01,291 --> 00:00:03,050
고급 그래서
순간 지금 화제

3
00:00:03,050 --> 00:00:06,440
하지 않은 기술 스택 인
특히 전문 용어,

4
00:00:06,440 --> 00:00:09,960
그것은 어떤 모든 캐치의 더
기술의 조합의 수

5
00:00:09,960 --> 00:00:11,840
것을 당신은 문제를 해결하기 위해 사용할 수 있습니다.

6
00:00:11,840 --> 00:00:14,850
그리고 아마도 가장
시작 피팅 방법

7
00:00:14,850 --> 00:00:18,110
때문에 언어 보는 것
나는 전체 무리를 잡았다 계속

8
00:00:18,110 --> 00:00:21,000
방에있는 대부분의 사람들은이
아마 적어도 하나의 들었어요.

9
00:00:21,000 --> 00:00:25,730
>> 그리고 왜 우리가 구별하려고하지 않는다
다음 언어를 구별 뭐 ...

10
00:00:25,730 --> 00:00:28,932
시는 것과에 대해 간단히 이야기
그들이있어 어떻게 다른 통해 하나를 선택

11
00:00:28,932 --> 00:00:30,890
일종의 근본적으로
다른, 특히

12
00:00:30,890 --> 00:00:34,830
당신이 엔지니어들과 채팅을 할 때,
또는, 누구를 고용하기로 결정하려고

13
00:00:34,830 --> 00:00:37,652
또는 어떤 구현
제안은 승인 할 수 있습니다

14
00:00:37,652 --> 00:00:39,860
당신은 실제로 만들 것입니다 방법
의사 결정의 그 종류.

15
00:00:39,860 --> 00:00:41,890
>> 그래서 그냥 몇 가지를 흔들어 보자.

16
00:00:41,890 --> 00:00:45,300
사람들이 가지고있는 언어
에 대해 들어, 어떤 일이 마음에 온다?

17
00:00:45,300 --> 00:00:48,030
C. OK.

18
00:00:48,030 --> 00:00:48,757
OK, C ++.

19
00:00:48,757 --> 00:00:51,400

20
00:00:51,400 --> 00:00:51,990
그게 뭔데?

21
00:00:51,990 --> 00:00:52,390
>> 청중 : 파이썬.

22
00:00:52,390 --> 00:00:53,348
>> 데이비드 J. 마란 : 파이썬.

23
00:00:53,348 --> 00:00:55,330
우수한.

24
00:00:55,330 --> 00:00:57,000
그 밖의 무엇?

25
00:00:57,000 --> 00:00:58,810
비쥬얼 베이직.

26
00:00:58,810 --> 00:01:01,100
나는 자바를 들었다.

27
00:01:01,100 --> 00:01:02,610
비주얼 Basic--의 일명

28
00:01:02,610 --> 00:01:03,150
VB.

29
00:01:03,150 --> 00:01:03,650
자바.

30
00:01:03,650 --> 00:01:07,294

31
00:01:07,294 --> 00:01:12,810
캐치 더 전부입니다 .NET,
의 언어로 일반적으로 C #을 무엇

32
00:01:12,810 --> 00:01:13,770
문제의.

33
00:01:13,770 --> 00:01:14,770
그리고 내가 그 말할 수 있습니다.

34
00:01:14,770 --> 00:01:15,900
그래서 우리는 다시 그에게 올 것이다.

35
00:01:15,900 --> 00:01:17,560
죄송 해요?

36
00:01:17,560 --> 00:01:18,170
죄송합니다?

37
00:01:18,170 --> 00:01:19,877
>> 청중 : SQL.

38
00:01:19,877 --> 00:01:20,876
데이비드 J. 마란 : 스크래치?

39
00:01:20,876 --> 00:01:21,610
청중 : SQL.

40
00:01:21,610 --> 00:01:22,610
데이비드 J. 마란 : 아, SQL.

41
00:01:22,610 --> 00:01:23,110
승인.

42
00:01:23,110 --> 00:01:23,750
SQL.

43
00:01:23,750 --> 00:01:29,510
그래서 우리가 실제로 that-- 다시 올 것이다,
그것은뿐만 아니라 휴식 후 ... 당연합니다.

44
00:01:29,510 --> 00:01:30,572
그 밖의 무엇?

45
00:01:30,572 --> 00:01:32,530
>> 청중 : 오라클.

46
00:01:32,530 --> 00:01:34,670
>> 데이비드 J. 마란 : 그래서
오라클이 아닌 언어입니다.

47
00:01:34,670 --> 00:01:36,560
사실 그들은뿐만 아니라 SQL을 사용합니다.

48
00:01:36,560 --> 00:01:38,360
그럼 후에 그 넣어 보자
뿐만 아니라 휴식.

49
00:01:38,360 --> 00:01:39,744
그리고 죄송합니다, 여기 뭔가?

50
00:01:39,744 --> 00:01:40,660
청중 : 매스 매 티카.

51
00:01:40,660 --> 00:01:41,390
데이비드 J. 마란 : 매스 매 티카?

52
00:01:41,390 --> 00:01:42,303
확인, 확인을 클릭합니다.

53
00:01:42,303 --> 00:01:46,150

54
00:01:46,150 --> 00:01:49,180
그리고 MATLAB은의 종류
거기에 가끔.

55
00:01:49,180 --> 00:01:50,060
>> 청중 : R.

56
00:01:50,060 --> 00:01:51,755
>> 데이비드 J. 마란은 : R.는 이제 여기에 가자.

57
00:01:51,755 --> 00:01:54,710

58
00:01:54,710 --> 00:01:55,210
포트란.

59
00:01:55,210 --> 00:01:55,880
확실한.

60
00:01:55,880 --> 00:01:57,910
이전 학교.

61
00:01:57,910 --> 00:01:59,390
포트란.

62
00:01:59,390 --> 00:02:01,550
COBOL.

63
00:02:01,550 --> 00:02:02,410
나는 기본을 던져 것입니다.

64
00:02:02,410 --> 00:02:05,990

65
00:02:05,990 --> 00:02:08,539
기본.

66
00:02:08,539 --> 00:02:09,390
어떤--

67
00:02:09,390 --> 00:02:10,352
>> 청중 : MATLAB?

68
00:02:10,352 --> 00:02:11,310
데이비드 J. 마란 : MATLAB.

69
00:02:11,310 --> 00:02:12,248
오, 당신은 그것을 이길.

70
00:02:12,248 --> 00:02:15,370

71
00:02:15,370 --> 00:02:15,870
아무것도?

72
00:02:15,870 --> 00:02:18,700
나는 다른 사람의 몇 가지 생각할 수 있습니다.

73
00:02:18,700 --> 00:02:21,876
나는 몇 가지 다른 생각할 수 있습니다.

74
00:02:21,876 --> 00:02:22,792
그리고 마지막으로 무엇입니까?

75
00:02:22,792 --> 00:02:23,970
>> 청중 : ASP.

76
00:02:23,970 --> 00:02:25,030
>> 데이비드 J. 마란 : ASP?

77
00:02:25,030 --> 00:02:26,100
네.

78
00:02:26,100 --> 00:02:27,100
액티브 서버 페이지.

79
00:02:27,100 --> 00:02:30,270
즉, 일반적으로 아래 떨어질 것
다른 언어로, 때로는 C 번호,

80
00:02:30,270 --> 00:02:32,040
그래서 그걸 생략 할 수 있습니다.

81
00:02:32,040 --> 00:02:35,510
그러나 우리는 그에게 돌아올 것이다
프레임 워크와 같은합니다.

82
00:02:35,510 --> 00:02:36,290
다른 건?

83
00:02:36,290 --> 00:02:39,020
PHP는 인기가있다.

84
00:02:39,020 --> 00:02:41,710
루비는 다른 것입니다.

85
00:02:41,710 --> 00:02:48,230
자바 스크립트, 혼동하지 말 것
자바와 다른 것입니다.

86
00:02:48,230 --> 00:02:49,570
즉, 많은 종류입니다.

87
00:02:49,570 --> 00:02:53,590
>> 그래서, 확실히 압도 할 수있다
목록이 아직없는 경우로,

88
00:02:53,590 --> 00:02:55,650
당신이 시작 위치를 알고 시작합니다.

89
00:02:55,650 --> 00:02:58,130
그리고 다행히하자
몇 가지 각도에서이 문제를 접근.

90
00:02:58,130 --> 00:03:03,520
먼저, 분류 해보자
다음 언어 중 적어도 일부

91
00:03:03,520 --> 00:03:06,790
를 연상시키는 두 가지 버킷에
우리가 휴식 전의 대화,

92
00:03:06,790 --> 00:03:09,630
여기서 우리는, 컴파일에 대해 이야기
소스 코드, 머신 코드,

93
00:03:09,630 --> 00:03:11,440
그뿐만 방법이기 때문에
모든 언어가 작동합니다.

94
00:03:11,440 --> 00:03:15,640
그래서 우리는 몇 가지 예를 뽑은 것이다 동행입니다
또는 모델에 반대 examples--.

95
00:03:15,640 --> 00:03:18,490
>> 그리고, 왜 우리는하지 않습니다
응용 프로그램에 대해 이야기

96
00:03:18,490 --> 00:03:20,390
다음 언어로 그
일반적으로 사용됩니다.

97
00:03:20,390 --> 00:03:22,840
그리고 솔직히, 비록
이것은 꽤 긴 목록입니다

98
00:03:22,840 --> 00:03:26,320
그리스트의 일부만 있다는
당신은 일반적으로 이러한 일에서 그릴 것

99
00:03:26,320 --> 00:03:27,220
과제를 해결한다.

100
00:03:27,220 --> 00:03:29,150
일부 언어는 다른 사람보다 최신 인.

101
00:03:29,150 --> 00:03:31,170
특정 언어는
다른 사람보다 더 인기.

102
00:03:31,170 --> 00:03:34,370
그래서 당신은이 같지
당신이 전에 압도적 인 작업

103
00:03:34,370 --> 00:03:36,970
중 결정할 때
이러한 다양한 언어.

104
00:03:36,970 --> 00:03:40,110
>> 그래서이 작업을 수행 할 수 있습니다.

105
00:03:40,110 --> 00:03:45,870
우리는, 이전, 소스 코드를했다
그리고, 우리는 기계 코드를 가지고 있었다.

106
00:03:45,870 --> 00:03:48,590

107
00:03:48,590 --> 00:03:49,400
으악.

108
00:03:49,400 --> 00:03:50,910
잘못된 단어를 작성합니다.

109
00:03:50,910 --> 00:03:52,740
기계 코드입니다.

110
00:03:52,740 --> 00:03:57,549
그리고 우리는 몇 가지 과정이 있었다
중간, 그래 컴파일러 called--.

111
00:03:57,549 --> 00:03:58,215
그래서 컴파일러.

112
00:03:58,215 --> 00:04:00,760

113
00:04:00,760 --> 00:04:03,910
>> 그리고 어떤 기계 코드
실제로 결국 실행되는

114
00:04:03,910 --> 00:04:05,680
실제 CPU 될 것입니다.

115
00:04:05,680 --> 00:04:09,660
기계어에 의해 즉,, I
가장 낮은 수준의 지침을 의미

116
00:04:09,660 --> 00:04:11,330
는 CPU가 실제로 이해하고있다.

117
00:04:11,330 --> 00:04:15,100
덧셈, 뺄셈, 이동,
저장하고, 그런 작업.

118
00:04:15,100 --> 00:04:19,700
그리고 이것은 무엇을위한 모델이다
일반적으로 컴파일 된 언어라고도합니다.

119
00:04:19,700 --> 00:04:21,000
아마도 당연한.

120
00:04:21,000 --> 00:04:23,550
>> 따라서이 모델은
컴파일 된 언어.

121
00:04:23,550 --> 00:04:25,970
하지만이의를 밝혀
언어의 다른 클래스

122
00:04:25,970 --> 00:04:32,650
라는 languages​​-- 해석
languages​​-- 해석

123
00:04:32,650 --> 00:04:34,030
약간 다릅니다 그.

124
00:04:34,030 --> 00:04:41,660
당신은 실행, 소스 코드 작성
통역을 통해,

125
00:04:41,660 --> 00:04:45,440
그 인터프리터입니다
무엇은 CPU에서 실행됩니다.

126
00:04:45,440 --> 00:04:50,120
즉, 무엇을하지 않습니다
발광 분명히 무엇인가?

127
00:04:50,120 --> 00:04:50,980
기계 코드입니다.

128
00:04:50,980 --> 00:04:54,290
는 CPU하는 0과 1
그 자체가 궁극적으로 이해한다.

129
00:04:54,290 --> 00:04:59,780
>> 그래서이 첫 번째 버전과
C 같은 언어, 우리가 본 것처럼,

130
00:04:59,780 --> 00:05:02,040
당신은 소스 코드 작성
그건 좀 비전이다,

131
00:05:02,040 --> 00:05:05,300
하지만 적어도 그것은 영어와 같은 종류의
및 적어도 판독있어

132
00:05:05,300 --> 00:05:06,780
일단 당신이 그것에 익숙해.

133
00:05:06,780 --> 00:05:10,100
당신은 컴파일러를 통해 밖으로 실행
당신은, 궁극적으로 0과 1을 찾으실 수 있습니다.

134
00:05:10,100 --> 00:05:11,340
>> 지나치게 단순화 그.

135
00:05:11,340 --> 00:05:12,839
거기에 다른 단계가 있습니다.

136
00:05:12,839 --> 00:05:15,530
사실, 당신은 들어 본 적이 있다면
용어 "어셈블리 언어"

137
00:05:15,530 --> 00:05:17,990
즉, 한 단계 이전의
0과 1.

138
00:05:17,990 --> 00:05:20,949
좀 더 읽기 즉,
하지만 여전히 꽤 난해한.

139
00:05:20,949 --> 00:05:23,740
그래서 중간 단계에있다
즉, 사실, 여기에 갈 수 있습니다.

140
00:05:23,740 --> 00:05:26,360
그러나 출력 궁극적
이러한 0과 1이다.

141
00:05:26,360 --> 00:05:28,990
>> 그러나에서의 해석
세계 어디 당신이

142
00:05:28,990 --> 00:05:32,680
해석되는 언어
언어, 당신은 실제로 그 단계를 건너 뜁니다.

143
00:05:32,680 --> 00:05:36,010
즉,이 때 쓰기
이 프로그램은, 당신은 즉시 실행합니다.

144
00:05:36,010 --> 00:05:38,960
당신은 그것을 컴파일하지 않고
내가 전에했던 것처럼 다음을 실행합니다.

145
00:05:38,960 --> 00:05:41,132
당신은 그것을 작성하고 실행합니다.

146
00:05:41,132 --> 00:05:44,340
그리고 짧은 변경하려면,
당신은 신속하게 변경하고 다시 실행하십시오.

147
00:05:44,340 --> 00:05:46,640
그래서 여기에는 중간 단계가 없다.

148
00:05:46,640 --> 00:05:50,840
>> 이제 프로그램에 내가 이전에 쓴
이는이 "안녕하세요"프로그램이었다

149
00:05:50,840 --> 00:05:53,660
당신은 합리적으로 수도
wonder-- 또는 합리적 수도

150
00:05:53,660 --> 00:05:58,570
state-- 그 시간이 아니었다
내 프로그램을 컴파일하는 데 소요.

151
00:05:58,570 --> 00:06:00,337
그냥 그런 식으로 일을 것으로 보인다.

152
00:06:00,337 --> 00:06:02,170
그리고 그래픽이있다
컴파일러의 버전.

153
00:06:02,170 --> 00:06:05,270
나는 매우 모호한 버전을 사용하고 있습니다
하지만 당신은 재생 버튼을 클릭 할 수

154
00:06:05,270 --> 00:06:07,887
그리고 실제로 할 것
당신을위한 컴파일.

155
00:06:07,887 --> 00:06:10,720
I는 프로그램을 컴파일 한 후
다시, 그것을 실행하는 데, 난 그냥 이렇게.

156
00:06:10,720 --> 00:06:13,820
그리고 "안녕하세요!"가 왼쪽 출력

157
00:06:13,820 --> 00:06:15,530
즉, 모든 것을 부담하지 않는 것 같습니다.

158
00:06:15,530 --> 00:06:19,920
그러나 프로그램이있는 경우
하나보다, 둘, 셋,

159
00:06:19,920 --> 00:06:25,470
네, 다섯 줄 길이는 수
컴파일 훨씬 더 초가 걸릴.

160
00:06:25,470 --> 00:06:28,310
때로는 분
시간이 꽤 컴파일합니다.

161
00:06:28,310 --> 00:06:30,480
의 모든 후, 몇 가지
세계 최대의 제품

162
00:06:30,480 --> 00:06:35,040
운영 시스템과 같은 것들이 있습니다,
마이크로 소프트 워드, 마이크로 소프트 엑셀,

163
00:06:35,040 --> 00:06:39,070
수십만 될 수있는
또는 긴 코드 라인의 수백만,

164
00:06:39,070 --> 00:06:41,300
그는하지 않습니다
즉시 실행합니다.

165
00:06:41,300 --> 00:06:44,560
>> 또한, 웹에, 그것의
사용하는 것이 유행이 될

166
00:06:44,560 --> 00:06:47,600
단순히 해석 언어,
일부 당신 때문에

167
00:06:47,600 --> 00:06:50,570
개발자로 변경할 수 있습니다
다음 그냥 바로 다시로드

168
00:06:50,570 --> 00:06:52,570
브라우저 페이지
즉시 결과를 참조하십시오.

169
00:06:52,570 --> 00:06:56,160
그래서 HTML, 동안하지
프로그래밍 언어

170
00:06:56,160 --> 00:06:58,860
해석이야 언어입니다.

171
00:06:58,860 --> 00:07:00,770
그리고 우리는 어제 같은 효과를 보았다.

172
00:07:00,770 --> 00:07:04,070
당신은 단지 한 후 페이지를 다시로드
Cloud9의 변화 그리고 - voila--

173
00:07:04,070 --> 00:07:05,560
당신은 새로운 결과를 참조하십시오.

174
00:07:05,560 --> 00:07:07,090
>> 그래서 차이는 여기에 무엇입니까?

175
00:07:07,090 --> 00:07:13,190
HTML에서, 리콜, 우리는 열린 HTML을했다,
열린 머리, 열린 제목, 가까이 제목,

176
00:07:13,190 --> 00:07:15,250
등 가까운 머리, 열린 몸합니다.

177
00:07:15,250 --> 00:07:19,149
우리는이 모든 태그를 한 것으로 우리 예쁜
많은 일을 할 수있는 브라우저에게 말했다.

178
00:07:19,149 --> 00:07:20,690
헤이 브라우저, 여기 HTML 페이지 온다.

179
00:07:20,690 --> 00:07:22,170
이봐 브라우저, 여기에 제목을 온다.

180
00:07:22,170 --> 00:07:24,429
브라우저 이봐, 여기에 오는 일부
굵은해야 텍스트입니다.

181
00:07:24,429 --> 00:07:25,720
그리고 당신은 반대를 말한다.

182
00:07:25,720 --> 00:07:27,330
브라우저 이봐, 그게 다입니다
굵은 얼굴 텍스트.

183
00:07:27,330 --> 00:07:28,830
브라우저 봐, 몸을 위해 그것을이다.

184
00:07:28,830 --> 00:07:29,740
기타 등등.

185
00:07:29,740 --> 00:07:31,130
>> 그리고 브라우저는 무엇인가?

186
00:07:31,130 --> 00:07:33,170
브라우저는 통역입니다.

187
00:07:33,170 --> 00:07:36,090
이 같은 누군가 프로그램입니다
마이크로 소프트 나 구글은 작성했습니다,

188
00:07:36,090 --> 00:07:39,160
인생에서 누구의 목적이다
, HTML로 알려진 언어를 읽고

189
00:07:39,160 --> 00:07:39,890
이를 해석한다.

190
00:07:39,890 --> 00:07:41,290
왼쪽에서 오른쪽으로 위에서 아래로,.

191
00:07:41,290 --> 00:07:46,880
그리고 언제든지 브라우저가 열려 본다
브래킷, 제목, 가까운 브래킷,

192
00:07:46,880 --> 00:07:48,960
그것은 그 해석해야한다
의미로, 오, 그

193
00:07:48,960 --> 00:07:52,490
나는 방법이 단어를 넣어해야 의미
브라우저의 상단에 여기.

194
00:07:52,490 --> 00:07:55,700
>> 그래서 그냥 HTML 코드가 말하는 않습니다.

195
00:07:55,700 --> 00:07:57,240
하지만 0과 1이 없습니다.

196
00:07:57,240 --> 00:07:58,250
더 컴파일이 없습니다.

197
00:07:58,250 --> 00:07:58,890
당신은 그것을하지 않았다.

198
00:07:58,890 --> 00:07:59,931
브라우저는 그것을하지 않았다.

199
00:07:59,931 --> 00:08:01,710
그것은 단지 참여 아니에요.

200
00:08:01,710 --> 00:08:05,890
>> 이러한 진행의 정신에 따라서
주제, 오늘과 어제,

201
00:08:05,890 --> 00:08:08,400
그 멋진 기능이 될 것으로 보인다.

202
00:08:08,400 --> 00:08:11,410
그런 다음 코드를 저장하고
그냥 실행하거나 해석한다.

203
00:08:11,410 --> 00:08:13,790
어떤 중간 단계가 없습니다.

204
00:08:13,790 --> 00:08:15,690
확실히 비용이있다?

205
00:08:15,690 --> 00:08:16,810
모든 그나 할 수 없습니다.

206
00:08:16,810 --> 00:08:19,964
그래서 비용은 무엇을 할 수 있는가?

207
00:08:19,964 --> 00:08:20,940
>> 청중 : 공간.

208
00:08:20,940 --> 00:08:22,370
>> 데이비드 J. 마란 : 공간.

209
00:08:22,370 --> 00:08:23,370
그래서 확인하십시오.

210
00:08:23,370 --> 00:08:26,920
컴파일 된 세계에서, 당신은
뿐만 아니라, 원래의 소스 코드

211
00:08:26,920 --> 00:08:29,657
당신은 또한 생성하고,
다음 아마도 절약

212
00:08:29,657 --> 00:08:31,740
기계가 code--
0과 1 ones-- 그이다

213
00:08:31,740 --> 00:08:33,870
공간의 일부 금액을 차지하게되었다.

214
00:08:33,870 --> 00:08:34,429
전혀.

215
00:08:34,429 --> 00:08:35,765
그래서 그것은 당신에게 더 많은 공간을 비용 것.

216
00:08:35,765 --> 00:08:39,289

217
00:08:39,289 --> 00:08:39,789
네?

218
00:08:39,789 --> 00:08:43,280
>> 청중 : 브라우저 수도
다르게 해석한다.

219
00:08:43,280 --> 00:08:46,770
>> 데이비드 J. 마란 : 브라우저 수도
다르게 해석한다.

220
00:08:46,770 --> 00:08:48,622
그건 사실이다.

221
00:08:48,622 --> 00:08:50,330
하지만 난 잘 모르겠어요
주장 편안한

222
00:08:50,330 --> 00:08:51,840
이 해석 있기 때문에 그건.

223
00:08:51,840 --> 00:08:56,340
이 때문에 그게 더 그냥
언어의 구현

224
00:08:56,340 --> 00:08:58,050
자체 것으로 모호성이있다.

225
00:08:58,050 --> 00:09:01,570
그럼 확실히 확인하지 말자
하나,하지만 좋은 예감.

226
00:09:01,570 --> 00:09:03,103
가격은 다른 무엇을 지불 할 수 있는가?

227
00:09:03,103 --> 00:09:03,602
앤드류?

228
00:09:03,602 --> 00:09:05,912
>> 청중 : 당신은 결합하고
두 단계, 당신이 그렇게 때문에

229
00:09:05,912 --> 00:09:08,300
뿐만 아니라 복잡성이 증가합니다.

230
00:09:08,300 --> 00:09:11,040
>> 데이비드 J. 마란 다음 complex--
복잡성의 증가?

231
00:09:11,040 --> 00:09:12,270
누구를 위해?

232
00:09:12,270 --> 00:09:16,748
>> 인터프리터 그래서 : 청중
단계, 당신은 통역을 결합하고

233
00:09:16,748 --> 00:09:19,120
컴파일러가 그냥 최고의 건 ...

234
00:09:19,120 --> 00:09:21,100
>> 데이비드 J. 마란 : OK, 아.

235
00:09:21,100 --> 00:09:25,240
아이러니하게도, 그것은 아마 약간의
간단한 인터프리터를 구현하는,

236
00:09:25,240 --> 00:09:29,530
심지어가 보일 것입니다하지만
이 편리 항복 그나.

237
00:09:29,530 --> 00:09:30,550
그래서 아마도 사실.

238
00:09:30,550 --> 00:09:32,716
그러나 그것은 종류의 난, 따라
언어에 말할 것

239
00:09:32,716 --> 00:09:35,720
그들은 갔다 방법에
그것을 구현하는 방법에 대한.

240
00:09:35,720 --> 00:09:38,535
더 많은 복잡성이있을 수있다,
실제로, 컴파일러,

241
00:09:38,535 --> 00:09:41,410
당신은 가야해서
뭔가 뭔가 너무 높은 수준의

242
00:09:41,410 --> 00:09:42,560
너무 낮은 수준.

243
00:09:42,560 --> 00:09:45,340
하지만 좋은 생각.

244
00:09:45,340 --> 00:09:50,770
>> 그래서 다른 방법을 넣어, 컴파일 된 프로그램,
이 0과 1로 설정하면,

245
00:09:50,770 --> 00:09:54,470
언어에 종료
, CPU가 말하는 그

246
00:09:54,470 --> 00:09:57,850
의이 측면 반면,
세계는, 프로그램이 당신은 서면으로 작성했습니다,

247
00:09:57,850 --> 00:10:02,527
코드는 결코 실제로 작성했습니다
실제 언어로 변환됩니다

248
00:10:02,527 --> 00:10:03,360
컴퓨터를 말한다.

249
00:10:03,360 --> 00:10:04,190
0과 1.

250
00:10:04,190 --> 00:10:08,480
원래,보다 인간에 남아
친절하고, 더 읽기 언어입니다.

251
00:10:08,480 --> 00:10:11,720
그래서는 의미 일 수 있습니다
거기, 당신이 할 경우 실제로

252
00:10:11,720 --> 00:10:15,020
변환 귀찮게 당신의
바로 언어 프로그램

253
00:10:15,020 --> 00:10:18,013
기본 컴퓨터가 말인가요?

254
00:10:18,013 --> 00:10:19,780
>> 관객 :하지 않을 수 있습니다
뭔가를 이해?

255
00:10:19,780 --> 00:10:21,170
>> 데이비드 J. 마란 : 마이트
뭔가를 이해하지.

256
00:10:21,170 --> 00:10:23,297
그리고 그 claim-- 수 있습니다
그것을 이해하지 않은 경우

257
00:10:23,297 --> 00:10:25,880
뭔가, 즉 버그의 부족이다
의 인터프리터에 있습니다.

258
00:10:25,880 --> 00:10:28,544
그래서 더 많은 것
비용보다 실수.

259
00:10:28,544 --> 00:10:30,419
>> 청중 : 당신은 액세스 할 수 있습니다
소스 코드?

260
00:10:30,419 --> 00:10:31,877
데이비드 J. 마란은 : 좋은 일이있다.

261
00:10:31,877 --> 00:10:34,140
그래서 여기에 단점은 당신입니다
액세스 권한이 보인다.

262
00:10:34,140 --> 00:10:37,006
사용자는 상기 최종 사용자에 보일 수도
소스 코드에 액세스 할 수있다.

263
00:10:37,006 --> 00:10:38,130
그리고 그것은 항상 사실이 아니다.

264
00:10:38,130 --> 00:10:39,660
하지만에 해당하는
자바 스크립트의 경우,

265
00:10:39,660 --> 00:10:41,660
우리는 후에 살펴 보겠습니다하는
휴식 오늘, 어떤

266
00:10:41,660 --> 00:10:45,720
해석 프로그래밍 언어입니다
당신은 소스 코드를 작성하는 것이.

267
00:10:45,720 --> 00:10:48,890
>> 하지만 그 소스 코드가 전송됩니다
브라우저로 서버에서

268
00:10:48,890 --> 00:10:51,392
인간의 브라우저에서 실행됩니다.

269
00:10:51,392 --> 00:10:54,350
그래서 여기에 그녀는 단지를 열 수 있습니다
창, 내가 크롬에서 해왔처럼,

270
00:10:54,350 --> 00:10:57,740
그리고 우리 자신으로, 그것을보고
구글 어제졌습니다.

271
00:10:57,740 --> 00:11:00,420
그것은 조금 보일 수 있습니다
이해할 수 있지만있다.

272
00:11:00,420 --> 00:11:03,482
그래서 유료 절대적으로 하나의 가격입니다.

273
00:11:03,482 --> 00:11:04,565
청중 : 성능 히트?

274
00:11:04,565 --> 00:11:05,020
데이비드 J. 마란 : 그래.

275
00:11:05,020 --> 00:11:06,260
그리고 다른 문제 야합니다.

276
00:11:06,260 --> 00:11:07,380
성능 히트가 있습니다.

277
00:11:07,380 --> 00:11:10,100
당신이이 있기 때문에
중간 남자,하는 그 자체

278
00:11:10,100 --> 00:11:13,740
프로그램은 사이입니다
상기 CPU는 바와 같이 대향

279
00:11:13,740 --> 00:11:17,880
바로 이러한 원료를 공급하는
는 CPU에 0과 1,

280
00:11:17,880 --> 00:11:21,060
성능 히트 거기에 당신을
해석 된 언어로 가라.

281
00:11:21,060 --> 00:11:24,240
되도록 임의로, 프로그램
그 1 초 걸릴 수 있습니다

282
00:11:24,240 --> 00:11:27,840
컴퓨터 나 하나를 실행합니다
분은 여기를 컴퓨터에서 실행

283
00:11:27,840 --> 00:11:32,059
10 초 10이 걸릴 수 있습니다
분은 여기를 컴퓨터에서 실행합니다.

284
00:11:32,059 --> 00:11:35,100
일반적으로하는 것이 될 것 아니에요
의 difference-- 요인의 많은 10--

285
00:11:35,100 --> 00:11:36,808
거기 때문에
당신이 할 수있는 최적화.

286
00:11:36,808 --> 00:11:38,680
그러나 그것은 거의 항상 느리다.

287
00:11:38,680 --> 00:11:43,070
그 문제에 지금, 플립 사이드
그 컴퓨터 아니라, 모든 12

288
00:11:43,070 --> 00:11:45,970
18 months--에 따라
무어의 법칙, 그래서 speak--하기

289
00:11:45,970 --> 00:11:47,600
단지 빨라지고있다.

290
00:11:47,600 --> 00:11:48,750
나는 더 많은 디스크 공간이 있습니다.

291
00:11:48,750 --> 00:11:49,791
나는 더 많은 RAM이 있습니다.

292
00:11:49,791 --> 00:11:50,620
누가 정말 걱정?

293
00:11:50,620 --> 00:11:52,328
>> 그리고는 종류의
합리적인 인수.

294
00:11:52,328 --> 00:11:55,740
실제로, 하나의 이유
우리는 느린 견딜 수있는 이유

295
00:11:55,740 --> 00:11:58,480
언어 때문입니다 해석
우리 인간은 정말 알 수 없습니다.

296
00:11:58,480 --> 00:12:00,690
컴퓨터는이
너무 터무니없는 빠른 얻었다.

297
00:12:00,690 --> 00:12:04,520
다시 하루 반면 특히
하드웨어는 더 제한 될 때,

298
00:12:04,520 --> 00:12:06,860
당신은 모든 것을 덜했다
훨씬 더 비싼

299
00:12:06,860 --> 00:12:10,570
그래서 모든 그럼, 더 많은 비용
당신은 정말 짜내 싶어

300
00:12:10,570 --> 00:12:12,590
당신이 할 수있을만큼 성능을​​ 제공합니다.

301
00:12:12,590 --> 00:12:16,400
하지만 그 서면 요구
낮은 수준, 만약에 당신,

302
00:12:16,400 --> 00:12:18,090
컴파일 된 언어.

303
00:12:18,090 --> 00:12:20,830
>> 그래서 당신은이 성능 저하를 취할 않습니다.

304
00:12:20,830 --> 00:12:24,780
그러나 일반적으로, 그나
요즘 그것을 가치가있을 것 같다.

305
00:12:24,780 --> 00:12:26,850
음, 제외의
지적 재산권 문제.

306
00:12:26,850 --> 00:12:28,641
가독성의 종류
코드, 우리는거야

307
00:12:28,641 --> 00:12:30,640
우리는 자바 스크립트를 볼 때로 돌아온다.

308
00:12:30,640 --> 00:12:33,140
>> 그럼 분류 해보자
이들 중 몇 적어도.

309
00:12:33,140 --> 00:12:41,650
그래서 컴파일 된 언어 중, 우리
C 것, C ++, 좀, 그렇다고, 자바,

310
00:12:41,650 --> 00:12:48,120
그것은 비록 예외의 비트를 들어,
이유는 그냥 순간에 당신을 보여줄 것이다.

311
00:12:48,120 --> 00:12:51,540
C #을이 목록에있을 것입니다.

312
00:12:51,540 --> 00:12:54,930
우리는 더 살펴 보자
더 현대적인 언어.

313
00:12:54,930 --> 00:12:55,430
괜찮아.

314
00:12:55,430 --> 00:12:56,804
그리고 그것은 많음이처럼 보인다.

315
00:12:56,804 --> 00:13:03,500
울타리의이 측면 반면,
우리는, 자바 스크립트, 파이썬이있을 수 있습니다

316
00:13:03,500 --> 00:13:08,040
그리고 PHP, 루비.

317
00:13:08,040 --> 00:13:13,640
그리고에 대한 충분한입니다
보다 최근의 것?

318
00:13:13,640 --> 00:13:15,410
즉, 지금은 많은 것 같은 느낌이 든다.

319
00:13:15,410 --> 00:13:16,330
승인.

320
00:13:16,330 --> 00:13:18,760
그리고 점 점 점,
이후 목록은 끝이 없다.

321
00:13:18,760 --> 00:13:22,300
>> 그리고 사실, 우리는 단지를 원하는 경우
,이 항아리 위키 백과의 감각을 얻을

322
00:13:22,300 --> 00:13:24,130
컴파일 된 언어.

323
00:13:24,130 --> 00:13:27,150
나는 우리가 얻을 수 추측하고있어
훨씬 더 완전한 목록.

324
00:13:27,150 --> 00:13:27,910
그래서 여기 우리는 간다.

325
00:13:27,910 --> 00:13:30,620
그래서 여기에 훨씬 더 철저한 목록입니다.

326
00:13:30,620 --> 00:13:34,150
그리고 나는 누군가가 D를 추측 것 기대했다
그 역시 존재하기 때문에 언어로,

327
00:13:34,150 --> 00:13:37,747
하지만 그들은 그것이 것 같다 D에 멈춰 섰다.

328
00:13:37,747 --> 00:13:39,330
실제로 E.이있을 수도 있지만

329
00:13:39,330 --> 00:13:41,496
>> 아, 사실이해야
요즘 목록에.

330
00:13:41,496 --> 00:13:47,460
스위프트는 사실이다
애플이 발명 한 것을 언어

331
00:13:47,460 --> 00:13:50,302
즉, 지금 점점 사용
그래서, 아이폰 개발한다.

332
00:13:50,302 --> 00:13:52,260
그러나 우리는 다시 올 것이다
우리의 논의와 그

333
00:13:52,260 --> 00:13:54,090
조금의 모바일뿐만 아니라.

334
00:13:54,090 --> 00:13:55,260
그래서 스위프트뿐만 아니라.

335
00:13:55,260 --> 00:13:57,540
>> 그리고 우리는에 갈 경우
language-- 해석

336
00:13:57,540 --> 00:14:05,010
language-- 다음 여기에 해석
뿐만 아니라 더 이상 목록입니다.

337
00:14:05,010 --> 00:14:07,260
그냥 구글 있다면 및
이들에 대한 위키 백과에 보면,

338
00:14:07,260 --> 00:14:09,231
당신은 언어의 모든 종류를 볼 수 있습니다.

339
00:14:09,231 --> 00:14:10,980
그러나 목적이며
오늘 정말, 단지

340
00:14:10,980 --> 00:14:13,680
어쩌면이 아래로 비등
지적 재산권 문제

341
00:14:13,680 --> 00:14:18,200
최종 사용자에 의해 가독성
성능뿐만 아니라 다른 비기이다.

342
00:14:18,200 --> 00:14:21,080
>> 다음 언어 중 그래서,
우리는 당신을 줄 수 있다면 나를 보자

343
00:14:21,080 --> 00:14:24,487
언어의 단지 일부 샘플.

344
00:14:24,487 --> 00:14:26,820
우리는을 통해 가고 싶지 않아
끝없이 모든 언어.

345
00:14:26,820 --> 00:14:29,720
혹시 궁금해 무엇
특정 언어처럼 보이는?

346
00:14:29,720 --> 00:14:31,562
우리는 잠시 전에 보았다.

347
00:14:31,562 --> 00:14:33,520
왜 우리는 몇 적용되지 않습니다
의 요청이 있습니다.

348
00:14:33,520 --> 00:14:35,380
누가 무엇을보고 싶다
다른 언어처럼 보이는?

349
00:14:35,380 --> 00:14:35,620
네.

350
00:14:35,620 --> 00:14:36,150
>> 청중 : 자바.

351
00:14:36,150 --> 00:14:36,540
>> 데이비드 J. 마란 : 자바.

352
00:14:36,540 --> 00:14:37,040
괜찮아.

353
00:14:37,040 --> 00:14:38,504
그럼 자바로 이동 할 수 있습니다.

354
00:14:38,504 --> 00:14:42,300

355
00:14:42,300 --> 00:14:44,900
그리고 당신에게 sample--를 제공합니다
우리는 모든을 쓸 수

356
00:14:44,900 --> 00:14:47,670
하지만 빠른 단지에 대한 것
누군가 다른 사람의 샘플 코드를 보면.

357
00:14:47,670 --> 00:14:48,170
괜찮아.

358
00:14:48,170 --> 00:14:50,330
그래서이 좋은 예입니다?

359
00:14:50,330 --> 00:14:52,040
으악.

360
00:14:52,040 --> 00:14:52,540
승인.

361
00:14:52,540 --> 00:14:58,810
그래서 여기의 자바 버전입니다
이 프로그램은 내가 "안녕하세요.", 이전 썼다

362
00:14:58,810 --> 00:15:01,900
>> 자바 그래서, 당신은 종종거야
키워드 "클래스"를 참조하십시오.

363
00:15:01,900 --> 00:15:03,779
그럼 당신은 그 후 몇 가지 이름을 볼 수 있습니다.

364
00:15:03,779 --> 00:15:05,570
당신은 중괄호를 볼 수 있습니다
같은 우리는 전에 본

365
00:15:05,570 --> 00:15:08,153
때때로 그들은 갈
같은 라인, 때로는 다른 라인,

366
00:15:08,153 --> 00:15:09,734
그것은 개인의 의사 결정의 종류입니다.

367
00:15:09,734 --> 00:15:11,900
당신은 같은 키워드를 볼 수 있습니다
"공공", "고정", "무효."

368
00:15:11,900 --> 00:15:13,790
그러나 우리는 보았다 "주."
"메인은"일반적으로

369
00:15:13,790 --> 00:15:17,220
기본 함수의 이름
코드 또는 기본 덩어리 그

370
00:15:17,220 --> 00:15:18,760
프로그램에서 실행됩니다.

371
00:15:18,760 --> 00:15:19,330
>> "끈."

372
00:15:19,330 --> 00:15:20,850
우리는 문자열 이전에 무엇을 의미 했습니까?

373
00:15:20,850 --> 00:15:23,480
나는 종류의 부담을 사용했다.

374
00:15:23,480 --> 00:15:25,100
문자열은 무엇입니까?

375
00:15:25,100 --> 00:15:25,601
단어.

376
00:15:25,601 --> 00:15:27,058
그것은 문자의 순서처럼.

377
00:15:27,058 --> 00:15:29,810
개별 문자, 뒤로
다시 일반적으로 배열에 백업하려면,

378
00:15:29,810 --> 00:15:30,690
우리는 논의했습니다있다.

379
00:15:30,690 --> 00:15:34,700
그리고 사실,이 구문을 참조하십시오
여기서, 두 대괄호?

380
00:15:34,700 --> 00:15:39,210
여기에 수단, 헤이 컴퓨터,
문자열 배열을 온다.

381
00:15:39,210 --> 00:15:42,636
사각 브래킷 표기법입니다
일반적으로이를 나타 내기 위해 사용.

382
00:15:42,636 --> 00:15:44,510
그리고 당신은 아마 수
봐도 돼 걸릴 것

383
00:15:44,510 --> 00:15:46,580
이 강조 않습니다
코드의 덩어리는 아마도합니까?

384
00:15:46,580 --> 00:15:49,737

385
00:15:49,737 --> 00:15:50,639
>> 청중 : 출력?

386
00:15:50,639 --> 00:15:51,090
>> 데이비드 J. 마란 : 그래.

387
00:15:51,090 --> 00:15:52,506
그것은 화면에 뭔가를 인쇄합니다.

388
00:15:52,506 --> 00:15:57,070
그래서 "시스템"은 일종의이다
컴퓨터에 대한 참조입니다.

389
00:15:57,070 --> 00:15:59,620
"아웃"은 컴퓨터의 의미
출력하거나 화면.

390
00:15:59,620 --> 00:16:04,450
그래서 "system.out.print 에선"는 아마 의미?

391
00:16:04,450 --> 00:16:05,570
"LN."

392
00:16:05,570 --> 00:16:09,570
같은 인쇄 라인은 프로그래머
분명히 밖으로 일부 단어를 철자

393
00:16:09,570 --> 00:16:11,820
및 전체적으로 취하면
다른 단어 바로 가기.

394
00:16:11,820 --> 00:16:13,260
그러나 "LN은"라인 때문에 인쇄 라인입니다.

395
00:16:13,260 --> 00:16:17,370
그래서 안녕하세요 "출력한다
세계! "새 행 하였다.

396
00:16:17,370 --> 00:16:18,300
>> 그래서 그것입니다.

397
00:16:18,300 --> 00:16:21,150
그러나 자바는 그들이 거입니다
통화 객체 지향.

398
00:16:21,150 --> 00:16:23,440
그리고 실제로 단지를 제공합니다
다른 정의의 커플

399
00:16:23,440 --> 00:16:26,420
거기에 당신이 수도
거기에, 일반적으로 참조

400
00:16:26,420 --> 00:16:30,600
많은 다른 유형은
언어는 있지만, 가장 일반적인

401
00:16:30,600 --> 00:16:37,830
절차 또는 명령형 언어이다.

402
00:16:37,830 --> 00:16:41,600
기능이 있습니다
하지 않는 언어,

403
00:16:41,600 --> 00:16:43,790
다른 사람이 작동하지 않는 것을 의미한다.

404
00:16:43,790 --> 00:16:47,740
그리고 거기에
객체 지향 언어.

405
00:16:47,740 --> 00:16:51,170
그리고 이것은 아마도 최고입니다
대부분의 언어의 분류

406
00:16:51,170 --> 00:16:56,445
혹시 종류에 대해 선택하는 것이
일반적인 상업 프로젝트.

407
00:16:56,445 --> 00:16:58,910
>> 이것은, 너무 많은 것
나는 쥐의 구멍의 생각

408
00:16:58,910 --> 00:17:01,620
아래로 이동, 설명하려고합니다
다양한 차이.

409
00:17:01,620 --> 00:17:04,599
그러나 언어
우리는 따라서 far-- C 봤어요

410
00:17:04,599 --> 00:17:07,680
절차 또는이다
필수 언어입니다.

411
00:17:07,680 --> 00:17:11,200
최근에 발명
언어, 미안, 경향

412
00:17:11,200 --> 00:17:14,430
객체 지향, 의미
그들은 그들에게 다른 기능을 가지고 있습니다.

413
00:17:14,430 --> 00:17:18,130

414
00:17:18,130 --> 00:17:19,430
나는이 방법으로 설명 할 수 있습니까?

415
00:17:19,430 --> 00:17:20,950
의도 거기 갈 수 있습니다.

416
00:17:20,950 --> 00:17:25,200
>> 객체 지향 방법
당신은 implement-- 수 있습니다

417
00:17:25,200 --> 00:17:27,930
당신은 현실 세계를 모델링 할 수
보다 효율적으로 조금.

418
00:17:27,930 --> 00:17:29,722
인류, 시간이 지남에,
와우, 파악하고있다,

419
00:17:29,722 --> 00:17:32,430
내 언어의 경우 좋은 것
이 기능 또는 그 기능을했다.

420
00:17:32,430 --> 00:17:34,830
우리가이 이유입니다
세계의 많은 언어.

421
00:17:34,830 --> 00:17:37,670
합리적인 사람들, 스마트
사람들은 동의 또는 동의

422
00:17:37,670 --> 00:17:41,000
그리고 변함없이 종류의에 모여
모두 함께 새로운 언어를 개발하고 있습니다.

423
00:17:41,000 --> 00:17:41,660
>> 적절한 예.

424
00:17:41,660 --> 00:17:45,260
애플에서 스위프트를 발명
아마도 저하의 희망

425
00:17:45,260 --> 00:17:47,950
아이폰 개발에 바,
이전 language-- 때문에

426
00:17:47,950 --> 00:17:51,080
, 목표 - C하는 수라고
또한 우리의 목록에 here--

427
00:17:51,080 --> 00:17:54,190
더 많은 비밀 등이었다
열심히 주위 사람의 마음을 포장합니다.

428
00:17:54,190 --> 00:17:57,690
그리고 프로그래밍으로 논란의 여지가되고있다
더 접근하고보다 광범위하게

429
00:17:57,690 --> 00:18:00,580
심지어 사람들에 의해 채택
작은 기술의 goal--

430
00:18:00,580 --> 00:18:04,160
그것은하려고하는 매우 용감한 목표입니다
하여 진입 장벽을 낮출

431
00:18:04,160 --> 00:18:07,400
언어 자체
시작하기 쉽게,

432
00:18:07,400 --> 00:18:09,430
하지만만큼이나 강력한 필요.

433
00:18:09,430 --> 00:18:10,560
>> 그리고 다른 한 언어입니다.

434
00:18:10,560 --> 00:18:14,110
왜 우리가 살펴하지 않는다
파이썬과 같은에서,

435
00:18:14,110 --> 00:18:18,090
이는 요즘 매우 유행이다.

436
00:18:18,090 --> 00:18:19,570
파이썬.

437
00:18:19,570 --> 00:18:20,464
샘플 프로그램입니다.

438
00:18:20,464 --> 00:18:24,600

439
00:18:24,600 --> 00:18:26,700
어디 보자.

440
00:18:26,700 --> 00:18:28,790
"안녕하세요"언어.

441
00:18:28,790 --> 00:18:30,180
이 해 보자.

442
00:18:30,180 --> 00:18:33,625
"안녕하세요."

443
00:18:33,625 --> 00:18:35,375
이받을 자격이 있는지 보자
우리가 좋은 예.

444
00:18:35,375 --> 00:18:39,450

445
00:18:39,450 --> 00:18:39,950
승인.

446
00:18:39,950 --> 00:18:41,283
그래서이 실제로 종류의 재미이다.

447
00:18:41,283 --> 00:18:43,330
혹시 구글한다면
"안녕하세요"하는

448
00:18:43,330 --> 00:18:47,000
제 프로그램 중 하나로 일어난다
지금까지 현대 언어로 작성된,

449
00:18:47,000 --> 00:18:51,830
단지 개념의 증거로, 당신은 볼 수 있습니다
이 구현의 모든 종류.

450
00:18:51,830 --> 00:18:54,240
>> 이러한 언어의 일부
난 들어 본 적이 없다.

451
00:18:54,240 --> 00:18:59,770
하지만 당신은 이제 기본 가자 see-- 수 있습니다,
내가 부분적 년 전 배운 하나.

452
00:18:59,770 --> 00:19:02,720
이것은 당신 때문에 재미있는 언어였다
프로그래머로, 숫자로했다

453
00:19:02,720 --> 00:19:03,710
당신의 모든 라인.

454
00:19:03,710 --> 00:19:05,626
아니 내가 무슨 달리
내가 쓰는 때 일

455
00:19:05,626 --> 00:19:08,380
노란색 문서에 의사
이전 이진 검색,

456
00:19:08,380 --> 00:19:09,580
전화 번호부 검색 용.

457
00:19:09,580 --> 00:19:11,810
>> 그리고 당신이 원하는 경우
다른 라인으로 이동하고,

458
00:19:11,810 --> 00:19:15,780
당신은 문자 그대로 입력합니다,
(10)로 이동, 또는 20로 이동합니다.

459
00:19:15,780 --> 00:19:19,110
그리고 당신은 라인의를 작성하는 경우
대회는이 라인 10 수행했다

460
00:19:19,110 --> 00:19:22,545
이 라인 (20)이며,이 라인은
30, 40, 사이에 아무것도,

461
00:19:22,545 --> 00:19:25,170
따라서 자신에게 여지를주는
당신이 결정하는 경우에, 잠깐,

462
00:19:25,170 --> 00:19:27,230
나는 몇 가지를 추가한다
어딘가에 더 많은 코드.

463
00:19:27,230 --> 00:19:30,960
당신은 여전히​​에 구 기회의 종류가 있었다
프로그램 사이에 그에서 짠다

464
00:19:30,960 --> 00:19:33,020
수동에 있었다 전에
모든 번호를 다시.

465
00:19:33,020 --> 00:19:35,470
>> 그래서이 무슨 뜻인지의 종류
내가 말할 때 세계 최대왔다

466
00:19:35,470 --> 00:19:36,303
새로운 기능.

467
00:19:36,303 --> 00:19:39,364
어딘가에 길을 누군가를 따라
실현, 소년이 바보입니다.

468
00:19:39,364 --> 00:19:41,280
이건 그냥 만드는 것입니다
프로그래머를위한 작동합니다.

469
00:19:41,280 --> 00:19:44,200
그래서 그 또는 그녀는 단지 종류의 내장
그 위에 새 레이어

470
00:19:44,200 --> 00:19:46,910
당신이 걱정하지 않도록
무엇을 줄 수 코드에 대한

471
00:19:46,910 --> 00:19:48,570
실제로 켜져 있습니다.

472
00:19:48,570 --> 00:19:54,940
>> 그래서 때 선택할 수 있습니다
하나의 언어 또는 다른?

473
00:19:54,940 --> 00:19:56,690
음, 그 중이
언어는 경향이

474
00:19:56,690 --> 00:20:00,960
에서 가장 많이 듣고
자신 만의 세계 요즘?

475
00:20:00,960 --> 00:20:02,680
의 너무 목표 - C 드롭 다운 보자.

476
00:20:02,680 --> 00:20:06,416

477
00:20:06,416 --> 00:20:07,739
>> 청중 : C #을.

478
00:20:07,739 --> 00:20:08,530
데이비드 J. 마란 : C #을.

479
00:20:08,530 --> 00:20:10,310
그래서 나에게 색상을 할 수 있습니다.

480
00:20:10,310 --> 00:20:13,190
우리는 어딘가에 우리의 다른 색상을 가지고 있습니까?

481
00:20:13,190 --> 00:20:14,550
그래서 C #을.

482
00:20:14,550 --> 00:20:16,390
그리고 당신은 C 번호에 대해 무엇을 알 수 있습니까?

483
00:20:16,390 --> 00:20:18,940
봄 무엇이든 상관 하는가?

484
00:20:18,940 --> 00:20:20,707
>> 청중 : 그것은 프로그래밍 언어입니다.

485
00:20:20,707 --> 00:20:22,540
데이비드 J. 마란 : 그것은이다
프로그래밍 언어.

486
00:20:22,540 --> 00:20:23,200
승인.

487
00:20:23,200 --> 00:20:24,690
그건 사실이다.

488
00:20:24,690 --> 00:20:26,440
그래서 우리는 C #을 얘기하고 있습니다.

489
00:20:26,440 --> 00:20:29,230
C 번호가 사용될 수 경향
Windows 환경,

490
00:20:29,230 --> 00:20:33,550
그래서 당신은 마이크로 소프트 소프트웨어를 작성하는 경우
Windows 용, C 번호는 매우 일반적으로 사용되며,

491
00:20:33,550 --> 00:20:38,560
여부는 데스크톱 소프트웨어, 또는
윈도우 폰에 심지어 전화 소프트웨어,

492
00:20:38,560 --> 00:20:41,820
당신이 그 있었다 한 경우,
또는 웹에도 너무.

493
00:20:41,820 --> 00:20:44,642
그리고 사실, 아마 카림
상술 한 ASP 이전?

494
00:20:44,642 --> 00:20:46,600
그래서도 거기에이
프레임 워크라는 것,

495
00:20:46,600 --> 00:20:51,040
이는 우리가 확장으로 소개 할 수 있습니다.

496
00:20:51,040 --> 00:20:53,280
ASP와 같은 프레임 워크.

497
00:20:53,280 --> 00:20:55,740
액티브 서버 페이지를 의미합니다.

498
00:20:55,740 --> 00:20:59,880
그리고이 코드이며,
프로그래밍하는 방법

499
00:20:59,880 --> 00:21:03,490
일반적으로 쉽게 만드는
웹 기반 응용 프로그램을 작성합니다.

500
00:21:03,490 --> 00:21:07,530
즉, 슈퍼 것
웹 사이트를 작성하는 슈퍼 성가신

501
00:21:07,530 --> 00:21:09,469
언어 C에 그
우리는 전에 본 적이,

502
00:21:09,469 --> 00:21:12,510
당신이 인쇄 + F를 사용해야하기 때문에,
해당 키워드를 사용하는 것

503
00:21:12,510 --> 00:21:13,940
"주"와 중괄호.

504
00:21:13,940 --> 00:21:16,720
난해한 구문의 많은
및 방식은 구현

505
00:21:16,720 --> 00:21:19,195
매우 복잡한 무언가.

506
00:21:19,195 --> 00:21:20,240
웹 페이지.

507
00:21:20,240 --> 00:21:23,800
>> 그리고 다른 언어는 진화
쉽게 그런 종류를 확인합니다.

508
00:21:23,800 --> 00:21:26,890
그리고 다시, 사람들이 올라와있다
프레임 워크, 일종의 도구

509
00:21:26,890 --> 00:21:30,520
당신은 그것을 만들 것을 사용할 수있는
웹 페이지를 작성하는 것이 훨씬 더 쉽게.

510
00:21:30,520 --> 00:21:33,070
그래서 예를 들어, 만들려면
이 훨씬 더 콘크리트,

511
00:21:33,070 --> 00:21:36,390
그냥 열어 나를 보자
잠시 텍스트 파일.

512
00:21:36,390 --> 00:21:39,380
>> 그리고 당신은 어제 불러올 수 있습니다
우리는 뭔가를 말했다

513
00:21:39,380 --> 00:21:41,210
마찬가지로이 웹 페이지이다.

514
00:21:41,210 --> 00:21:42,300
HTML.

515
00:21:42,300 --> 00:21:45,340
닫기 HTML.

516
00:21:45,340 --> 00:21:48,500
내가 머리를 이동하자
바로 여기에 몸을한다.

517
00:21:48,500 --> 00:21:52,810
내가하고 싶다고 가정하자
쓸 수 없습니다 "안녕하세요"

518
00:21:52,810 --> 00:21:57,020
다윗이 있지만 "안녕하세요 데이비드"
의 이름은 현재 로그인 한 사용자.

519
00:21:57,020 --> 00:22:00,270
같은 무엇 무엇인가
ASP는 수행 또는 것 JSP--

520
00:22:00,270 --> 00:22:04,060
이는이 자바 서버 pages-- 또는
다른 프레임 워크의 수

521
00:22:04,060 --> 00:22:05,435
그들은 그 자체, 언어하지 않은 것입니다.

522
00:22:05,435 --> 00:22:07,351
그들은 단지 같은거야
추가 소프트웨어 당신을

523
00:22:07,351 --> 00:22:10,490
사용자 환경에 설치합니다
그것은 단지 프로그래밍하기가 용이합니다.

524
00:22:10,490 --> 00:22:15,670
>> 그래서 예를 들어,보다해야
"안녕하세요,의 printf ("데이비드 ")"같은

525
00:22:15,670 --> 00:22:17,510
또는 뭔가있어 그
어떤 종류의 공동 mingling--

526
00:22:17,510 --> 00:22:20,840
우리가 before-- 본 적이 코드의 종류
당신은 훨씬 더 간단 뭔가를 할 것이다,

527
00:22:20,840 --> 00:22:26,190
"이름 %."와 같은

528
00:22:26,190 --> 00:22:28,660
그리고 이러한 프레임 워크,
ASP--와 나는 같은

529
00:22:28,660 --> 00:22:31,212
내가 갖는 경우 기억하지 않는다
ASP에 대한 바로 구문.

530
00:22:31,212 --> 00:22:33,100
JSP는 little--이 권리인가?

531
00:22:33,100 --> 00:22:36,500
>> ASP와 그래서이있다
특수 구문의 종류

532
00:22:36,500 --> 00:22:39,830
일부 개발자들은 결정했다고
이 사람들을 도울 수 있습니다.

533
00:22:39,830 --> 00:22:43,000
그리고 좀 더 간결하게 표현할 수
예를 들어 자리.

534
00:22:43,000 --> 00:22:47,187
마찬가지로 여기에, 위치 값을 넣어
이 값 이름은, N-A-M-E 아니다

535
00:22:47,187 --> 00:22:48,520
거기에 저장된 일부 값입니다.

536
00:22:48,520 --> 00:22:50,728
그래서 이러한 맥락에서 "이름",
우리는 변수를 부를 것이다.

537
00:22:50,728 --> 00:22:52,760
대수는 변수가
X 및 Y 및 Z 등을들 수있다.

538
00:22:52,760 --> 00:22:56,021
프로그래머는 변수를 사용
X, Y 및 Z 이상 설명,

539
00:22:56,021 --> 00:22:56,520
일반적으로.

540
00:22:56,520 --> 00:23:01,020
그래서 "이름"문자 그대로 어떤 종류의 것
같은 메모리 컨테이너의

541
00:23:01,020 --> 00:23:05,440
D-A-V-I-D, 내 이름, 또는 누구를위한
다른 웹 사이트에 기록됩니다.

542
00:23:05,440 --> 00:23:09,300
>> 그리고이 편리의 종류
당신은 어떤 환경과 찾으실 수 있습니다.

543
00:23:09,300 --> 00:23:14,220
그래서 ASP와 같은 C # 및 뭔가 것 매우
일반적으로 윈도우 세계에서 사용되는,

544
00:23:14,220 --> 00:23:16,460
데스크톱에 대한 여부
소프트웨어 또는 웹 서버

545
00:23:16,460 --> 00:23:21,490
서버 차례에 특히
Microsoft Windows 및 마이크로 소프트를 실행

546
00:23:21,490 --> 00:23:25,810
IIS-- 또는 인터넷 정보
서버, 내가 약어를 얻는 경우에 right--

547
00:23:25,810 --> 00:23:27,800
이는 마이크로 소프트의 웹 서버입니다.

548
00:23:27,800 --> 00:23:30,820
>> 그래서 다른 언어를
익숙한 사람들은,

549
00:23:30,820 --> 00:23:35,228
또는 당신이 들어 본 적이
보다 더 자주하지?

550
00:23:35,228 --> 00:23:38,262
>> 청중 : 파이썬의 알고
[들리지] 인기의 종류.

551
00:23:38,262 --> 00:23:39,470
데이비드 J. 마란 : 매우 인기.

552
00:23:39,470 --> 00:23:45,490
그래서 여기에 파이썬은 매우 자주 사용된다
과학 응용 프로그램이나 데이터

553
00:23:45,490 --> 00:23:48,330
당신이 많다 과학,
데이터는 분석하고자하는

554
00:23:48,330 --> 00:23:50,413
당신은을 사용하려면
그것을위한 프로그래밍 언어입니다.

555
00:23:50,413 --> 00:23:53,640
R은 일반적으로 그 사용될 수도
뿐만 아니라, 통계 맥락이다.

556
00:23:53,640 --> 00:23:56,400
하지만 파이썬은 많은이
기능이 내장되어 있습니다.

557
00:23:56,400 --> 00:23:58,850
추가 이렇게 많은
라이브러리는 같은 사람들은 말한다.

558
00:23:58,850 --> 00:24:01,260
>> 도서관은 모음
코드의 다른 사람들

559
00:24:01,260 --> 00:24:04,218
당신은 그래서 당신이 사용할 수있는 썼다
그 바퀴를 재발견 할 필요가 없습니다.

560
00:24:04,218 --> 00:24:07,430
그래서 파이썬은 매우 일반적입니다
데이터 과학 분야에 사용.

561
00:24:07,430 --> 00:24:09,930
그러나 그것은 매우 일반적으로도이다
웹 응용 프로그램에 사용됩니다.

562
00:24:09,930 --> 00:24:12,780
당신은 동적를 구현할 수 있습니다
웹 사이트 Python을 사용.

563
00:24:12,780 --> 00:24:15,210
>> 그리고 동적 인 웹 사이트로, I
단지 정적이지 컨텐츠를 의미

564
00:24:15,210 --> 00:24:19,530
같은 우리가 어제 만든
그냥 하드 라틴 텍스트에 코딩

565
00:24:19,530 --> 00:24:21,820
및 다른 이러한 것들
하지만 능력이 아니라

566
00:24:21,820 --> 00:24:25,367
로그인 할 수있는 기능은 구매
뭔가 능력이 체크 아웃하기

567
00:24:25,367 --> 00:24:26,950
쇼핑 카트, 등으로.

568
00:24:26,950 --> 00:24:30,590
그 모든 역동 성과를 요구한다
이들 중 하나와 같은 일부 언어가 필요합니다.

569
00:24:30,590 --> 00:24:35,060
>> 청중 : 그래서 파이썬은 자신이 있는가
확장 좋아 유사한 [들리지]

570
00:24:35,060 --> 00:24:36,060
데이비드 J. 마란 : 그것은 않습니다.

571
00:24:36,060 --> 00:24:42,250
파이썬의 세계에서 그래서, 장고입니다
파이썬에 대한 매우 인기있는 프레임 워크입니다.

572
00:24:42,250 --> 00:24:46,520
WSGI입니다 또 다른 메커니즘입니다
이에서 종류의 다른

573
00:24:46,520 --> 00:24:47,640
그러나 정신에는 변함.

574
00:24:47,640 --> 00:24:52,200
이 추가가-에 그 당신을 수있어
서버에 파이썬 코드를 실행합니다.

575
00:24:52,200 --> 00:24:53,950
그래 다른 것이라면있다.

576
00:24:53,950 --> 00:24:57,250
그래서 이러한 우리는 프레임 워크를 호출 할 수 있습니다.

577
00:24:57,250 --> 00:24:58,870
그리고 그것은 남용 약간이다.

578
00:24:58,870 --> 00:25:00,920
이것은 웹 서버 기술의 이상이다.

579
00:25:00,920 --> 00:25:04,610
그러나 우리는 간단하게 넣어 것
그것은 그럼에도 불구하고이 열입니다.

580
00:25:04,610 --> 00:25:05,780
>> 승인.

581
00:25:05,780 --> 00:25:07,850
WSGI.

582
00:25:07,850 --> 00:25:09,020
WSGI.

583
00:25:09,020 --> 00:25:12,100
또 다른 사실이 누군지 모르겠지만 및하자
나, 자신의 칼럼에 그 이동

584
00:25:12,100 --> 00:25:17,000
나는 나 자신에 소리 때문에
같은 양동이에 이르렀.

585
00:25:17,000 --> 00:25:24,910
의 서버에이를 넣어 보자
기능은의 말을 할 수 있습니다.

586
00:25:24,910 --> 00:25:26,710
즉, 전문 용어 아니다.

587
00:25:26,710 --> 00:25:29,180
>> 그래서 여기에 우리는 WSGI 수 있습니다.

588
00:25:29,180 --> 00:25:32,580
CGI는 이전이다,있다
언어를 제공하기위한 기술

589
00:25:32,580 --> 00:25:35,890
펄 또는 PHP, 또는 다른 사람 등을들 수있다.

590
00:25:35,890 --> 00:25:39,000
다시 말하지만, 나는이 용어를 언급 한
일종의을 물들인 너무 많이하지,

591
00:25:39,000 --> 00:25:40,749
하지만 그래서 당신은 볼 경우
그들은 뭔가

592
00:25:40,749 --> 00:25:42,130
당신은 단순히 자세한 내용을 구글.

593
00:25:42,130 --> 00:25:46,110
진짜 주스가 없습니다
이러한 것들 중 일부.

594
00:25:46,110 --> 00:25:47,850
>> 그러나 이제 언어로 돌아가 보자.

595
00:25:47,850 --> 00:25:50,499
우리는 C의 #, 파이썬에 대해 이야기했다.

596
00:25:50,499 --> 00:25:52,790
다른 당신은 무엇을 사용할 수 있습니다
요즘 프로그래밍 웹?

597
00:25:52,790 --> 00:25:54,302
의가 여전히 집중하자.

598
00:25:54,302 --> 00:25:55,247
>> 대상 : PHP.

599
00:25:55,247 --> 00:25:56,080
데이비드 J. 마란 : PHP.

600
00:25:56,080 --> 00:25:57,413
그리고 이제 다시 그 일에 올 수 있습니다.

601
00:25:57,413 --> 00:25:59,310
그래서 PHP는 매우 일반적으로 사용됩니다.

602
00:25:59,310 --> 00:26:01,560
PHP는 나쁜 랩을 얻을하는 경향이있다.

603
00:26:01,560 --> 00:26:05,790
언어가 구현 된 그것은 시작했다
어쩌면 필요하지 않았다 사람들에 의해

604
00:26:05,790 --> 00:26:06,960
최고의 언어 디자이너.

605
00:26:06,960 --> 00:26:11,290
그리고 당신은 모든 종류의를 읽을 수 있습니다
PHP가 얼마나 나쁜에 대한 온라인 기사.

606
00:26:11,290 --> 00:26:13,660
그리고 불행하게도,이입니다
징후, 부분적으로,

607
00:26:13,660 --> 00:26:18,727
단지 종교적인 논쟁
그 프로그래머들 사이에서 폭발.

608
00:26:18,727 --> 00:26:20,560
그리고 이것은 뭔가
염두에두고 가치,

609
00:26:20,560 --> 00:26:24,410
비즈니스 관점에서 그
그것은 기술적 인 사람들을위한 아주 쉽게

610
00:26:24,410 --> 00:26:26,900
모두가 함께 일을 얻기 위해 자신의
어떤 일에 대한 의견.

611
00:26:26,900 --> 00:26:29,566
그리고 그것은 반드시 의미하지 않는다
하나는 가장 큰 소리 있음

612
00:26:29,566 --> 00:26:31,870
또는 강한과,
제일 많이 의견은 권리입니다.

613
00:26:31,870 --> 00:26:34,100
많은 시간, 그것은 정말
단지 문제가되지 않습니다.

614
00:26:34,100 --> 00:26:37,970
>> 그래서 사람들은 주장하는대로
자신의 편견이나 편안 영역입니다.

615
00:26:37,970 --> 00:26:40,760
그리고 당신은 유지해야
마음에 할 때 그

616
00:26:40,760 --> 00:26:42,622
결정, 그냥
누군가가 말했다 때문에

617
00:26:42,622 --> 00:26:45,080
이 적합한 언어이다
작업, 즉, 사실이 될 수 있습니다

618
00:26:45,080 --> 00:26:48,350
뿐만 아니라 단지는 것입니다 수 있습니다
자신의 능력 내에서 바로 언어

619
00:26:48,350 --> 00:26:49,267
설정하거나 안락 지역.

620
00:26:49,267 --> 00:26:52,600
어떤 나쁘지 않습니다,하지만 당신은 깨달아야한다
거기에 몇 가지 상황이있을 수있다.

621
00:26:52,600 --> 00:26:54,440
일부 객관적으로있다
잘못된 진술,

622
00:26:54,440 --> 00:26:59,080
C는 같은 잘못된 언어 사용하기
웹 사이트를 구현하는 요즘

623
00:26:59,080 --> 00:27:00,520
거의 언제나.

624
00:27:00,520 --> 00:27:03,370
하지만 무리한 아니다
이들의 말을

625
00:27:03,370 --> 00:27:05,700
우리가 지금까지 원했다고 잘못이다.

626
00:27:05,700 --> 00:27:08,180
>> PHP는 많은 버전을 통해왔다.

627
00:27:08,180 --> 00:27:11,310
그래서 언어 버전을 사용하는 경향이
그와 연관된 숫자.

628
00:27:11,310 --> 00:27:15,390
PHP는 지금, 생각, 최대 버전 7
그래서 꽤 많은 시간 동안 주변되었습니다.

629
00:27:15,390 --> 00:27:18,270
그리고 언어는 새로운 얻을로
그들은 종종 새로운 기능을 찾으실 수 있습니다.

630
00:27:18,270 --> 00:27:22,510
하지만 당신이 염두해야
당신의 웹 사이트가 된 경우 때문에

631
00:27:22,510 --> 00:27:27,539
PHP의 버전 7에서 구현하지만,
당신은 당신의 웹 사이트를 실행하려는

632
00:27:27,539 --> 00:27:29,830
또는 어쩌면 당신은 외부에서 조달 한
코드의 개발

633
00:27:29,830 --> 00:27:31,960
다른 사람과 그들이 메일에
당신에게 그것을 나에게 보내

634
00:27:31,960 --> 00:27:33,960
그들은 넣어 여기에, 말
웹 서버에서이,

635
00:27:33,960 --> 00:27:36,610
웹 서버는 몇 가지 경우
그것은 여부 outdated-- 년

636
00:27:36,610 --> 00:27:39,465
자신의 서버 또는 웹 host--
실제로 실행되지 않을 수 있습니다.

637
00:27:39,465 --> 00:27:41,340
따라서 이러한 종류에는
물건의 사람

638
00:27:41,340 --> 00:27:44,067
염두 할 필요가
사이트를 업그레이드 할 때

639
00:27:44,067 --> 00:27:45,650
또는 처음으로 구현.

640
00:27:45,650 --> 00:27:46,900
>> 나는 이전에 자바 스크립트를 들었다.

641
00:27:46,900 --> 00:27:50,570
그래서 자바 스크립트는 재미있다
그 하나 그것은 일반적으로

642
00:27:50,570 --> 00:27:53,030
클라이언트 측,로를 우리는 볼 수 있습니다
휴식 후 어떤

643
00:27:53,030 --> 00:27:55,000
이 사용자의 브라우저에서 실행되는 것을 의미한다.

644
00:27:55,000 --> 00:27:58,400
그러나 당신은 또한 실행할 수 있습니다
자바 스크립트 요즘

645
00:27:58,400 --> 00:28:03,450
라는 것을 사용
Node.js를 여기서 Node.js를

646
00:28:03,450 --> 00:28:08,000
실행을위한 메커니즘입니다
자바 스크립트 코드 서버 쪽,

647
00:28:08,000 --> 00:28:12,430
대신 파이썬 또는 사용
PHP, 또는 다른 언어.

648
00:28:12,430 --> 00:28:17,820
>> 자바 스크립트는 특히 적합하다
채팅 애플리케이션 및 실시간위한

649
00:28:17,820 --> 00:28:22,050
응용 프로그램, PHP는 크지 않다 반면,
어떤 구현 언어

650
00:28:22,050 --> 00:28:25,050
채팅 서버, 사용자 등
지속적으로 연결된있어.

651
00:28:25,050 --> 00:28:28,760
PHP는 방문 나를 더
한 번, 그 결과를 다시 얻을,

652
00:28:28,760 --> 00:28:31,790
다음 다른 링크를 클릭 일부
지금부터 몇 초 또는 몇 분.

653
00:28:31,790 --> 00:28:36,020
반면에게 Node.js를 자바 스크립트가 될 수 있습니다
영구 연결에 대한 더 사용했다.

654
00:28:36,020 --> 00:28:40,840
당신이 의심 다른 언어
일반적으로 웹 물건에 사용되는?

655
00:28:40,840 --> 00:28:42,800
>> 청중 : jQuery를이 프레임 워크가 될 것인가?

656
00:28:42,800 --> 00:28:44,050
>> 데이비드 J. 마란 : 좋은 질문입니다.

657
00:28:44,050 --> 00:28:44,700
어느 쪽도 없습니다.

658
00:28:44,700 --> 00:28:51,210
나는 도서관, jQuery를 부를 것이다
다시 라이브러리 코드의 단지 무리입니다

659
00:28:51,210 --> 00:28:53,250
다른 사람이 가지고
서면 일반적으로 그

660
00:28:53,250 --> 00:28:56,390
몇 가지 문제를 해결하는
그것은, 희망, 쉽게

661
00:28:56,390 --> 00:28:57,760
당신을 위해 일을 할 수 있습니다.

662
00:28:57,760 --> 00:29:00,820
그리고 날의 일례를하자
웹의 맥락에서이.

663
00:29:00,820 --> 00:29:03,910
>> 웹의 맥락에서있다
이 언어, 자바 스크립트,

664
00:29:03,910 --> 00:29:06,690
우리는 나중에 볼 수 있는지,있다 당신을
이 항아리 같은 것을 말할 수있다

665
00:29:06,690 --> 00:29:10,060
"중요 document.getElementById."

666
00:29:10,060 --> 00:29:11,490
그리고 내가 어제 무엇을 호출 했습니까?

667
00:29:11,490 --> 00:29:16,800
첫째, 내 생각, 내가 준 고유 한 ID이었다
이 안쪽의 요소.

668
00:29:16,800 --> 00:29:23,110
첫 번째 "P 아이디 =" ">"그리고, 우리는 있었다
"가 lorem ipsum의"등 등등.

669
00:29:23,110 --> 00:29:28,210
나는 프로그램을 작성하는 것처럼 그래서
자바 스크립트는 어떻게 든 조작하는

670
00:29:28,210 --> 00:29:30,830
웹 페이지를 변경하는 것이 우리
어제와 함께 연주했다,

671
00:29:30,830 --> 00:29:33,010
나는 이것을 사용합니다
코드의 강조 표시된 라인

672
00:29:33,010 --> 00:29:38,700
HTML의 특정 조각을 얻을 수
내 페이지에서, 특정 노드,

673
00:29:38,700 --> 00:29:39,680
우리는 그것을 전화 할게있다.

674
00:29:39,680 --> 00:29:44,540
>> 그러나, jQuery를에 대신 작성
원시 자바 스크립트 code--을 인이,

675
00:29:44,540 --> 00:29:48,870
그냥 상자에서, 그 방법을의
당신이 대신 말을 그건 ... 쓰기,

676
00:29:48,870 --> 00:29:50,260
"#먼저."

677
00:29:50,260 --> 00:29:52,330
즉, 등가입니다.

678
00:29:52,330 --> 00:29:56,040
그래서이 매우에만 기반
비밀의 예를 들어, 어떤 아마도

679
00:29:56,040 --> 00:29:57,870
jQuery를 사용하기위한 인수는 무엇입니까?

680
00:29:57,870 --> 00:30:01,390

681
00:30:01,390 --> 00:30:05,111
왜 개발자는 같은 라이브러리를 사용합니다
이 고립 된 예를 기반으로 jQuery를,

682
00:30:05,111 --> 00:30:05,610
혹시?

683
00:30:05,610 --> 00:30:06,335
>> 대상 : 적은 코드입니다.

684
00:30:06,335 --> 00:30:06,780
>> 데이비드 J. 마란 : 그래.

685
00:30:06,780 --> 00:30:07,530
그것은 적은 코드입니다.

686
00:30:07,530 --> 00:30:09,070
그것은 입력 단지 빠르다.

687
00:30:09,070 --> 00:30:11,690
대위법은
그것은 무서운 보이는 것이다.

688
00:30:11,690 --> 00:30:13,540
당신은 정말이 왼쪽에서 오른쪽으로 읽을 수 없습니다.

689
00:30:13,540 --> 00:30:16,730
사실, 대부분이기 때문에
문장 부호 지금 대신 실제 단어,

690
00:30:16,730 --> 00:30:20,950
나는 종류의 것을 추론 할 수있다
"중요 document.getElementById는"도착

691
00:30:20,950 --> 00:30:23,640
ID로 문서에서 요소.

692
00:30:23,640 --> 00:30:26,750
난 정말 그런를 사용할 수 없습니다
여기에이 일에서 니모닉.

693
00:30:26,750 --> 00:30:27,680
>> 그래서 트레이드 오프입니다.

694
00:30:27,680 --> 00:30:30,763
오는 세련미가있다
종종 특히, 라이브러리를 사용하여 함께

695
00:30:30,763 --> 00:30:31,440
jQuery를 등을들 수있다.

696
00:30:31,440 --> 00:30:34,700
그러나 현실은 jQuery를 종류가있다
의, 사실상의 표준이

697
00:30:34,700 --> 00:30:38,110
그래서 거의 모든 사람이
자바 스크립트 코드를 작성 일

698
00:30:38,110 --> 00:30:41,520
jQuery를 또는 무언가를 사용
그것 같이하고, 더 이상 기록하지

699
00:30:41,520 --> 00:30:45,200
이러한 자세한 식으로
이 다시 때문에, 인류

700
00:30:45,200 --> 00:30:47,850
배운, 와우, 그했다
놓친 기회의 종류

701
00:30:47,850 --> 00:30:49,030
우리의 삶을 쉽게 만들 수 있습니다.

702
00:30:49,030 --> 00:30:51,140
그래서 인간은 자신의 삶을 쉽게.

703
00:30:51,140 --> 00:30:53,310
좋은 질문.

704
00:30:53,310 --> 00:30:55,870
>> 다른 언어 고려해야한다.

705
00:30:55,870 --> 00:30:58,660
나는이 중 말을
목록 루비는 매우 인기가있다.

706
00:30:58,660 --> 00:31:01,310
그래서의 세계
루비, 프레임 워크있다

707
00:31:01,310 --> 00:31:03,590
인기라는 레일.

708
00:31:03,590 --> 00:31:06,880
그래서 루비 레일에 인
일반적 표현을 사용했다.

709
00:31:06,880 --> 00:31:10,330
또한이 세상에서 나를 보자
웹 물건에 대한 원 자바,

710
00:31:10,330 --> 00:31:14,160
여기서 자바의 세계
당신은 JSP, 또는 Java가있을 수 있습니다

711
00:31:14,160 --> 00:31:18,450
공통 기술 서블릿.

712
00:31:18,450 --> 00:31:22,560
그리고 이것은 사용하는 그냥 다시 방법입니다
서버 환경에서 해당 언어.

713
00:31:22,560 --> 00:31:23,520
>> 그래서 이것은 무엇을 의미합니까?

714
00:31:23,520 --> 00:31:25,770
당신은 신체를 가지고 있다면
서버, 당신은 말 그대로 것

715
00:31:25,770 --> 00:31:30,510
웹 서버 소프트웨어를 다운로드
이러한 방식으로 설치

716
00:31:30,510 --> 00:31:33,510
당신이 중 하나에 대한 지원이 있는지
이러한 프레임 워크, 어떤을 가진 당신

717
00:31:33,510 --> 00:31:37,260
차례로 하나를 사용할 수 없거나
이러한 언어의 더.

718
00:31:37,260 --> 00:31:40,260
그리고 현실에서, 당신은에 가입하는 경우
웹 호스트 또는 클라우드의 일부처럼

719
00:31:40,260 --> 00:31:41,968
서비스 우리는 이야기
대한 어제, 자주

720
00:31:41,968 --> 00:31:44,885
물건은 단지와 함께 제공
당신을위한 시스템의 구성.

721
00:31:44,885 --> 00:31:46,510
당신은 수동으로 설정할 필요가 없습니다.

722
00:31:46,510 --> 00:31:51,040
당신이 한 경우에,이 곳 역할이다
시스템 관리자, 말하자면

723
00:31:51,040 --> 00:31:51,860
놀이로 제공됩니다.

724
00:31:51,860 --> 00:31:54,151
그 또는 그녀는 실제로 할 것
당신을 위해 이런 종류의 물건,

725
00:31:54,151 --> 00:31:58,510
또는 소위 웹 마스터
당신을 위해 이렇게 자주 것입니다.

726
00:31:58,510 --> 00:31:59,010
괜찮아.

727
00:31:59,010 --> 00:32:03,300
이 여기에 몇 가지에 대한 질문?

728
00:32:03,300 --> 00:32:06,690
또는 어떤 기회에
모든 언어에 대해 물어?

729
00:32:06,690 --> 00:32:09,500
프레임 워크?

730
00:32:09,500 --> 00:32:11,530
그런 나를 소개하자
하나 다른 라이브러리

731
00:32:11,530 --> 00:32:13,150
그는 요즘 매우 일반적입니다.

732
00:32:13,150 --> 00:32:15,340
이 목록은 무한에 갈 수있다.

733
00:32:15,340 --> 00:32:19,140
>> 그리고이 라이브러리의 종류입니다
호의에서 가을 시작합니다.

734
00:32:19,140 --> 00:32:19,850
그것은 주위되었습니다.

735
00:32:19,850 --> 00:32:22,040
그것은에 의해 대중화되었다
몇 시간 동안 트위터.

736
00:32:22,040 --> 00:32:24,470
그리고 지금 웹 사이트의 많은,
개발자의 많은 그것을 사용할 수 있습니다.

737
00:32:24,470 --> 00:32:26,629
그러나 새로운 상황이오고있다
아웃과 함께 오는.

738
00:32:26,629 --> 00:32:29,420
그러나 내가 당신에게 감각을 줄 수 있습니다
무엇 그것은 라이브러리를 사용하는 것을 의미한다.

739
00:32:29,420 --> 00:32:32,250
그래서 다시, 자바 스크립트입니다
매우 인기있는 언어입니다.

740
00:32:32,250 --> 00:32:35,340
CSS 또는 캐스 케이 딩 스타일 시트,
우리는 어제에 대해 이야기했다.

741
00:32:35,340 --> 00:32:36,600
즉,도 편재된다.

742
00:32:36,600 --> 00:32:40,130
아무도 웹 페이지 오늘날하지 않는다
HTML과 CSS의 최소한을 사용하지 않고.

743
00:32:40,130 --> 00:32:42,510
하지만 항상 쉬운 일이 아닙니다
어떤 일을 할 수 있습니다.

744
00:32:42,510 --> 00:32:46,281
>> 그래서 내가 getbootstrap.com에 가자.

745
00:32:46,281 --> 00:32:46,780
으악.

746
00:32:46,780 --> 00:32:48,280
우리가 주문하는 방법 그건 아니다.

747
00:32:48,280 --> 00:32:52,410
Getbootstrap.com, 어떤
나를 이끌 것입니다

748
00:32:52,410 --> 00:32:56,140
이 라이브러리의 방문 페이지로 이동합니다.

749
00:32:56,140 --> 00:32:59,720
그래서 그들은 관대 전화
자체 프레임 워크, 어떤

750
00:32:59,720 --> 00:33:02,032
, 가지 종류의 공평
그러나 나는 아직도 그것을 부를 것이다

751
00:33:02,032 --> 00:33:03,490
프레임 워크보다 도서관의 더.

752
00:33:03,490 --> 00:33:05,760
그러나이는 논증 의미입니다.

753
00:33:05,760 --> 00:33:12,360
나 자신의 CSS 탭으로 이동하자
내가 이런 식으로 뭔가에 가자.

754
00:33:12,360 --> 00:33:15,450
>> 그래서 우리의 양식 속에서 기억
Cloud9에 어제처럼?

755
00:33:15,450 --> 00:33:16,370
그것은 꽤 추한했다.

756
00:33:16,370 --> 00:33:17,320
오래된 학교 단추입니다.

757
00:33:17,320 --> 00:33:20,420
나는 버튼에 의해 회색 생각
태만. 그리고 모든 것이 정말로

758
00:33:20,420 --> 00:33:22,420
아주 messily 포맷.

759
00:33:22,420 --> 00:33:26,940
그래서 당신이 원하는 경우 웹 양식을 볼 수 있습니다
조금 나를 여기에 확대 할 수 nicer--.

760
00:33:26,940 --> 00:33:30,050
>> 그리고 더 멋진 내가 정말로 단지로
매우 nitpicky 미학을 의미한다.

761
00:33:30,050 --> 00:33:35,390
그래서 전자 우편 상자가 얼마나 주목
그것에 둥근 사각형 모서리.

762
00:33:35,390 --> 00:33:37,010
그래서 거기에 약간의 청소기입니다.

763
00:33:37,010 --> 00:33:40,770
단어 이메일 통지
내가 입력 시작할 때까지이

764
00:33:40,770 --> 00:33:41,797
다음은 사라집니다.

765
00:33:41,797 --> 00:33:43,130
그래서 좋은 작은 기능입니다.

766
00:33:43,130 --> 00:33:46,046
물건 종류의 방법에 주목
멋지게 빛나는하는이 당신의 일부

767
00:33:46,046 --> 00:33:49,069
브라우저에서 무료로 얻을,
하지만,이 중 일부는 또한 라이브러리 인

768
00:33:49,069 --> 00:33:51,360
다른 사람들이 가지고 코드
당신이 제공하는 기록.

769
00:33:51,360 --> 00:33:53,480
>> 이 같은
나에게 암호를 제공합니다.

770
00:33:53,480 --> 00:33:58,480
이 버튼은보다 조금 섹시하다
태만. 지금 유행에 아주 많이.

771
00:33:58,480 --> 00:34:03,570
지금까지 아이폰 OS 7 이후 정도의
세계는 매우 평평 얻었다

772
00:34:03,570 --> 00:34:09,000
세계 반면에 이전했다
그림자의 제비, 제비

773
00:34:09,000 --> 00:34:11,040
아이콘에 반사.

774
00:34:11,040 --> 00:34:14,170
많은 의류의 세계처럼,
오락가락 패션 트렌드가있다.

775
00:34:14,170 --> 00:34:16,190
이제 모든 휴대 전화에 평평하다.

776
00:34:16,190 --> 00:34:19,159
>> 사실, 버튼에 당신의
아이폰은 지금 바로 블루 링크입니다.

777
00:34:19,159 --> 00:34:21,000
자주도 원형 버튼이 없습니다.

778
00:34:21,000 --> 00:34:22,791
그래서이는 일이 있습니다
그와 외출

779
00:34:22,791 --> 00:34:26,659
유행의 등이 어떻게 수도있다
보다 현대 찾고 웹 양식을합니다.

780
00:34:26,659 --> 00:34:27,159
단추입니다.

781
00:34:27,159 --> 00:34:29,190
그래서 부트 스트랩 꽤 버튼 많이 있습니다.

782
00:34:29,190 --> 00:34:33,639
당신이 파란색 버튼을 원한다면,
녹색 버튼, 블루, 오렌지, 레드.

783
00:34:33,639 --> 00:34:35,840
부트 스트랩은 쉽게
이 일을 할 수 있습니다.

784
00:34:35,840 --> 00:34:38,131
이 물건의 종류입니다
당신은 절대적으로 수

785
00:34:38,131 --> 00:34:41,840
CSS로하고 어제 짓을
HTML은 있지만 목 바로 통증이다.

786
00:34:41,840 --> 00:34:44,840
그래서 대신에, 무슨 일이 부트 스트랩 것
당신이해야하는 것은이 같은 것입니다.

787
00:34:44,840 --> 00:34:48,960
>> 당신이 원하는 경우 button--이 밝혀
우리 yesterday-- 사용하지 않았던 HTML 태그는

788
00:34:48,960 --> 00:34:53,070
당신은 그것을보고 싶지
이 녹색 버튼과 같은,

789
00:34:53,070 --> 00:34:57,380
당신은 말 그대로 그냥에게 클래스를 제공,
이는 우리가 어제 얘기했던

790
00:34:57,380 --> 00:34:59,710
"BTN-성공 btn을."의

791
00:34:59,710 --> 00:35:00,971
>> 왜 그 단어?

792
00:35:00,971 --> 00:35:03,470
트위터 부트 스트랩의 저자,
그 단어를 내놓았다.

793
00:35:03,470 --> 00:35:05,428
그들은 불렀다 수
그들이 원하는 그 무엇이든.

794
00:35:05,428 --> 00:35:08,480
그러나 당신이 지금 얻고있는 것은
이 경우, 트위터에서 다른 사람,

795
00:35:08,480 --> 00:35:12,360
당신은을 어떻게 파악하고있다
버튼을 친절하고 깨끗하고 녹색 봐.

796
00:35:12,360 --> 00:35:15,580
그들은 그 기능을 포장
CSS 클래스에서, 소위 "BTN"

797
00:35:15,580 --> 00:35:19,790
와 "BTN-성공,"우리의 할 수 있도록
이제도에 대해 생각없이 사용

798
00:35:19,790 --> 00:35:20,290
이것.

799
00:35:20,290 --> 00:35:22,880
그래서 그들은 멀리 추상화 한
녹색 버튼의 개념

800
00:35:22,880 --> 00:35:25,320
그래서 우리는 걱정하지 않아도
그것을 자신을 구현.

801
00:35:25,320 --> 00:35:28,520
우리는 실제로 구현에 초점을 맞출 수 있습니다
우리가 관심을 가지.

802
00:35:28,520 --> 00:35:30,902
>> 우리는 여기에서 아래로 스크롤합니다.

803
00:35:30,902 --> 00:35:32,110
화면에 오류 메시지.

804
00:35:32,110 --> 00:35:35,440
때때로 당신은 약간의 메시지를 원하는
브라우저의 상단에 표시합니다.

805
00:35:35,440 --> 00:35:39,729
우리 중 일부와 함께이 작업을 수행 할 수
노력, 어제의 수업 후,

806
00:35:39,729 --> 00:35:40,770
하지만 왜 귀찮게 것?

807
00:35:40,770 --> 00:35:42,540
즉, 이러한 재미이다
미적 세부 사항입니다.

808
00:35:42,540 --> 00:35:44,248
의가에 서 보자
부트 스트랩의 어깨

809
00:35:44,248 --> 00:35:49,440
그들을 우리에게이 같은 일을 줄 수 있도록,
우리는 문자 그대로, 빨간색 상자를 얻는 경우,

810
00:35:49,440 --> 00:35:53,220
단지 단락을해야 할
죄송 동행입니다 클래스와 태그입니다.

811
00:35:53,220 --> 00:35:57,307
"BG-위험이"우리를 줄 것이다
대신 붉은 상자.

812
00:35:57,307 --> 00:35:59,140
이제이 가자
더 흥미로운 것.

813
00:35:59,140 --> 00:36:02,950
난의 상단으로 돌아 가면
이 페이지는 구성 요소로 이동

814
00:36:02,950 --> 00:36:05,380
지금 세계는 더 흥미로운 가져옵니다.

815
00:36:05,380 --> 00:36:08,826
예를 들어, 매우 일반적이며
이 같은 메뉴를 드롭 다운.

816
00:36:08,826 --> 00:36:11,560
이것은 절대 것
통증이 구현합니다.

817
00:36:11,560 --> 00:36:13,610
그리고 그 길지 않았다
전 그 우리 프로그래머

818
00:36:13,610 --> 00:36:16,490
이러한 구현해야합니다
처음부터 메뉴의 종류.

819
00:36:16,490 --> 00:36:20,800
>> 그러나 이와 같은 일반적인 패러다임의
그 부트 스트랩 같은 라이브러리

820
00:36:20,800 --> 00:36:25,230
당신에게 할 수있는 능력을 제공
훨씬 더 쉽게, 훨씬 드롭 다운 메뉴.

821
00:36:25,230 --> 00:36:27,850
그것을 할 아무 방법은 없습니다,
그러나 나는이 문서를 읽으면

822
00:36:27,850 --> 00:36:32,100
나는 그것을 볼 것, OK, I 사용해야
이 HTML 나는 드롭 다운 메뉴를 원하는 경우

823
00:36:32,100 --> 00:36:34,030
그처럼 동작합니다.

824
00:36:34,030 --> 00:36:36,690
>> 마찬가지로, 이제 드롭 다운 버튼에 가자.

825
00:36:36,690 --> 00:36:38,470
그래서 심지어 애호가입니다.

826
00:36:38,470 --> 00:36:41,800
내가 원하는 경우이 버튼처럼 보이게하기
하지만 그 작은 삼각형 의미

827
00:36:41,800 --> 00:36:44,080
나는 그것을 클릭한다
이 메뉴를 얻을이

828
00:36:44,080 --> 00:36:45,760
자바 스크립트라는 언어를 사용한다.

829
00:36:45,760 --> 00:36:47,470
그리고 우리는 모두 구현할 수
자바 스크립트에서이.

830
00:36:47,470 --> 00:36:49,720
그러나 다시, 이것은 휠인
당신은 재발견하고 싶지 않아요.

831
00:36:49,720 --> 00:36:52,700
당신은 그것을 벗고 싶어
이 용 선반 라이브러리.

832
00:36:52,700 --> 00:36:58,145
>> 의 뭔가에 가자
같은 진행률.

833
00:36:58,145 --> 00:36:59,770
따라서이 같은 일종의 멋지다.

834
00:36:59,770 --> 00:37:02,910
당신은 이제까지 진행을 본 적이 있다면
화면을 가로 질러 이동하는 바,

835
00:37:02,910 --> 00:37:06,380
자주 구현
다만 회전 아이콘입니다.

836
00:37:06,380 --> 00:37:10,200
사실, 그냥 여담으로,하자
내게는 무엇 Ajax--로 이동?

837
00:37:10,200 --> 00:37:10,710
아약스 정보?

838
00:37:10,710 --> 00:37:11,720
으악.

839
00:37:11,720 --> 00:37:13,035
Ajaxinfo.

840
00:37:13,035 --> 00:37:14,800
나 주소를 기억합시다.

841
00:37:14,800 --> 00:37:15,820
우리는 거기에 갈.

842
00:37:15,820 --> 00:37:19,850
>> 만약 당신이 어떤 애니메이션을 본 적이 있다면
페이지가로드, 또는 생각하는 동안,

843
00:37:19,850 --> 00:37:25,410
또는 당신은, 저장, 또는 무언가를 만드는
이 같은 애니메이션을 볼 수 있습니다.

844
00:37:25,410 --> 00:37:28,800
그래서 뭔가를 살펴 보자
여기에이 같은,

845
00:37:28,800 --> 00:37:33,550
과의는의 전경 색상을 선택할 수 있습니다
가지 친화적 인 느낌 녹색.

846
00:37:33,550 --> 00:37:34,545
나는 이것을 클릭 할 수 있습니까?

847
00:37:34,545 --> 00:37:35,500
하나를 가자.

848
00:37:35,500 --> 00:37:36,000
승인.

849
00:37:36,000 --> 00:37:38,930
우리는 단지 때문에 빨간색으로 갈거야
그것은 우리가 있어요거야.

850
00:37:38,930 --> 00:37:40,250
그래서 여기에 우리가 있습니다.

851
00:37:40,250 --> 00:37:43,940
>> 혹시 화면에 본 적이 있다면,
이에 갑자기 나타나는 다음

852
00:37:43,940 --> 00:37:47,550
사라 갑자기 무슨이다
그것은 그 것을 구현하는거야?

853
00:37:47,550 --> 00:37:48,970
음,이 단지 GIF입니다.

854
00:37:48,970 --> 00:37:52,850
G-I-F. 그리고 이것은 애니메이션입니다
다만 즉, 파일

855
00:37:52,850 --> 00:37:54,327
그것은 오래된 학교 만화처럼.

856
00:37:54,327 --> 00:37:57,160
다른 단지 무리가있다
가는 프레임 [망가]

857
00:37:57,160 --> 00:37:58,085
그냥 반복.

858
00:37:58,085 --> 00:38:00,090
그리고 그것은을 만드는 것
운동의 환상.

859
00:38:00,090 --> 00:38:03,070
>> 그래서 빨리 페이지가 완료 될 때
로드하거나 뭔가를하고,

860
00:38:03,070 --> 00:38:04,610
프로그래머는 어떤 기능을 수행합니까?

861
00:38:04,610 --> 00:38:07,500
글쎄, 그 또는 그녀는이 이미지를 숨 깁니다.

862
00:38:07,500 --> 00:38:11,536
그래서 모든 진행률 표시 줄의 종류입니다
의 당신이보고있는 영화를 좋아한다.

863
00:38:11,536 --> 00:38:14,660
당신은 일종의 사실의 닭 대가리 야
실제로 아무것도 아니라고,

864
00:38:14,660 --> 00:38:15,940
그냥 움직이는.

865
00:38:15,940 --> 00:38:19,150
>> 그리고, 그것은 진행 끝나면,
그들은 단지 그것을 숨기거나 끕니다.

866
00:38:19,150 --> 00:38:21,115
그리고 그 모든 마술
그가에 대한 것입니다.

867
00:38:21,115 --> 00:38:22,770
부트 스트랩은 당신을 제공합니다
조금 애호가 뭔가,

868
00:38:22,770 --> 00:38:25,030
이에 실제로 수
잘 지내 비율을 참조하십시오

869
00:38:25,030 --> 00:38:27,840
하지만 너무 단지 일종의
간단한 애니메이션.

870
00:38:27,840 --> 00:38:32,250
>> 의 일부 최종 보자
여기에 좀 더 복잡한 예.

871
00:38:32,250 --> 00:38:35,526
모달 같은.

872
00:38:35,526 --> 00:38:36,900
사람이 모달이 무엇인지 알고 있나요?

873
00:38:36,900 --> 00:38:39,880

874
00:38:39,880 --> 00:38:42,550
모달 창은 일반적으로
가정 하나

875
00:38:42,550 --> 00:38:46,880
전경를 장악하고
다른 아무것도에서 당신을 방지 할 수 있습니다.

876
00:38:46,880 --> 00:38:50,290
그것은 일종의 사용자의 강제
화면의 중앙에 대한 관심,

877
00:38:50,290 --> 00:38:52,290
그들을 잠금, 일반적으로,
다른 모든 것들의.

878
00:38:52,290 --> 00:38:55,830
>> 나는이 데모의를 시작한다면
화면은 일반적으로 회색이 될 것입니다.

879
00:38:55,830 --> 00:38:57,060
음, 우리는 회색해야합니까?

880
00:38:57,060 --> 00:38:59,080
음, 아마
배경색을 변경

881
00:38:59,080 --> 00:39:01,060
같은 우리는 어제했다
또는 그런 일.

882
00:39:01,060 --> 00:39:03,490
아마 오버레이입니다
반투명 그.

883
00:39:03,490 --> 00:39:06,320
그리고 지금 당신이 할 수있는 알
이 같은 멋진 것.

884
00:39:06,320 --> 00:39:09,930
혹시 버튼을 클릭한다면
및 표시하는 작은 팝업을 원하는,

885
00:39:09,930 --> 00:39:10,710
당신은 할 수 있습니다.

886
00:39:10,710 --> 00:39:12,340
그래서 누가 그래 all--에 대한 관심?

887
00:39:12,340 --> 00:39:15,791
>> 청중 : 부트 스트랩에 따라서,
이 통합 얻기 위해,

888
00:39:15,791 --> 00:39:21,002
어제 같은 그것은 간단하다
우리는 CSS 스타일 페이지를 했습니까?

889
00:39:21,002 --> 00:39:21,960
데이비드 J. 마란 : 사실.

890
00:39:21,960 --> 00:39:22,835
정말 좋은 질문입니다.

891
00:39:22,835 --> 00:39:24,480
내가 시작하기에 가자.

892
00:39:24,480 --> 00:39:26,090
그리고 네.

893
00:39:26,090 --> 00:39:30,920
모든 경우에 위해해야​​ 할
사용 부트 스트랩은 본질적으로 복사하다

894
00:39:30,920 --> 00:39:35,910
그리고이 세 가지 긴 줄을 붙여
자신의 웹 page--의 상단에 코드

895
00:39:35,910 --> 00:39:38,892
당신의 page--의 머리
당신은 최대 실행입니다.

896
00:39:38,892 --> 00:39:41,850
그리고 일을 여러 가지 방법있다
이것은, 그러나 이것은 간단한 일 것이다.

897
00:39:41,850 --> 00:39:45,190
>> 그래서이 모든에 대한 유용한 무엇입니까?

898
00:39:45,190 --> 00:39:47,524
글쎄, 당신이하지 않으면 너무 많은
웹 사이트의 구현

899
00:39:47,524 --> 00:39:50,106
하지만 당신은 그것을 디자인에 노력하고,
또는 당신이 누군가를 제공 할

900
00:39:50,106 --> 00:39:53,220
와이어 프레임 다이어그램, 말하자면,
무엇을하거나 작가의 표현으로

901
00:39:53,220 --> 00:39:56,080
당신은 내가 이것에,하고 싶은
일, 종종 사이트로 이동합니다

902
00:39:56,080 --> 00:39:58,660
부트 스트랩처럼 어디 경우
뭔가 ...를 구현하려는

903
00:39:58,660 --> 00:40:02,290
최근 캠퍼스 등
우리가 구현하고 싶었

904
00:40:02,290 --> 00:40:06,170
탐색을위한 웹 기반 도구
하버드 과정 카탈로그,

905
00:40:06,170 --> 00:40:08,770
학생들이 쉽게 그것을 만드는
과정을 탐색합니다

906
00:40:08,770 --> 00:40:10,930
및 코스를 추가
쇼핑 목록, 말하자면,

907
00:40:10,930 --> 00:40:13,070
종류의 무엇을 결정하는
그들은 가져 가고 싶어.

908
00:40:13,070 --> 00:40:16,252
>> 나는에 대해 생각하려고했다
나 자신, 어떤 성분 것

909
00:40:16,252 --> 00:40:17,460
우리는이를 구축하는 데 사용할?

910
00:40:17,460 --> 00:40:19,050
사용자 인터페이스는 무엇을 같은 것입니까?

911
00:40:19,050 --> 00:40:22,800
그리고 단지 같은 사이트를 통해보고
이러한 또는 다른 라이브러리 사이트

912
00:40:22,800 --> 00:40:26,560
당신은, 와우, 영감을 얻을 수 있기 때문에 수
나는이 위젯,이 위젯을 사용할 수 있습니다,

913
00:40:26,560 --> 00:40:27,330
이 위젯.

914
00:40:27,330 --> 00:40:29,080
그리고 정말 무엇을
프로그래머가 시작됩니다

915
00:40:29,080 --> 00:40:32,800
특히이 이러한 일,해야 할 일
웹 프로그래밍의 현대 세계,

916
00:40:32,800 --> 00:40:35,827
프로그래밍이 점점입니다
함께 일을 배선에 대해.

917
00:40:35,827 --> 00:40:38,910
정렬, 선반이 이륙
이 선반 떨어져, 떨어져 선반이,

918
00:40:38,910 --> 00:40:41,954
당신은 스마트 하나 인
이러한 점을 모두 연결하는,

919
00:40:41,954 --> 00:40:45,120
하지만 궁극적으로 다시으로 뭔가를 구축
다른 사람의 어깨에 서,

920
00:40:45,120 --> 00:40:49,370
그래서 당신은 한 달에 지출하지 않는 것이
다운 메뉴 바보 드롭을 구현,

921
00:40:49,370 --> 00:40:52,080
어떤 경우에 할 사실은 어렵다
당신은 그것을 크롬에서 작동 할

922
00:40:52,080 --> 00:40:55,220
그리고 IE, 파이어 폭스, 및
다른 브라우저의 수입니다.

923
00:40:55,220 --> 00:40:59,060
이 부자가 이유입니다
상용 및 오픈 소스 소프트웨어

924
00:40:59,060 --> 00:41:01,220
산업뿐만 아니라.

925
00:41:01,220 --> 00:41:06,810
>> 청중 : 그래서 부트 스트랩 업데이트됩니까
당신은 다음 링크를 업데이트해야?

926
00:41:06,810 --> 00:41:07,820
>> 데이비드 J. 마란 : 그것은 않습니다.

927
00:41:07,820 --> 00:41:09,090
음, 그래, 그것은 않습니다.

928
00:41:09,090 --> 00:41:12,540
부트 스트랩 버전 3.3.6에서 현재.

929
00:41:12,540 --> 00:41:16,720
그리고 당신은 do-- 것입니다 일반적으로 어떤
이 언급 실제로 가치가있다.

930
00:41:16,720 --> 00:41:19,200
일반적으로 무엇이있다
의미 론적 버전으로 알려진

931
00:41:19,200 --> 00:41:20,160
세계 시스템.

932
00:41:20,160 --> 00:41:21,320
모든 사람이이 작업을 수행합니다.

933
00:41:21,320 --> 00:41:26,410
>> 하지만 당신은 버전 번호를 본 적이있는 경우
의 형식은 그 x.y.z--

934
00:41:26,410 --> 00:41:30,240
그래서 예를 들어, 첫 번째 버전
의 프로그램은 1.0.0 수 있습니다.

935
00:41:30,240 --> 00:41:34,970
아니면이 있다면 매우 베타 또는
사용을 의미 심지어 알파 상태,

936
00:41:34,970 --> 00:41:37,620
자신의 위험에, 그렇지 않아
프라임 타임 정말 준비,

937
00:41:37,620 --> 00:41:42,080
당신도 0.0.1을 시작할 수 있습니다
또는 일부 그러한 지정.

938
00:41:42,080 --> 00:41:47,260
그러나 소프트웨어 버전에서 시작하는 경우
1.0 또는 동등 1.0.0,

939
00:41:47,260 --> 00:41:50,530
일반적으로, 무슨 일이 일반적입니다
days--하지만하지 omnipresent--입니다

940
00:41:50,530 --> 00:41:53,520
만약 회사 또는
개별 프로그래머 수정

941
00:41:53,520 --> 00:41:56,140
일부 조각에 약간의 버그
소프트웨어의 정말

942
00:41:56,140 --> 00:42:01,620
그 보정 버그, 안했다
이 변경되지 않습니다 all--에 영향을

943
00:42:01,620 --> 00:42:03,940
프로그램의 행동,
그냥 뭔가를 해결

944
00:42:03,940 --> 00:42:06,580
그것이 작동하지 않는
properly-- 당신은 일반적으로 것

945
00:42:06,580 --> 00:42:08,890
이 Z 값을 업데이트합니다.

946
00:42:08,890 --> 00:42:12,900
어느 카림 같은 사람을 의미한다
단순히 자신의 웹 사이트에 갈 수있다,

947
00:42:12,900 --> 00:42:19,470
맹목적 버전 번호를 변경
1.0.1에 1.0.0에서, 그것은 그것을 발송 저장

948
00:42:19,470 --> 00:42:21,880
이론에서, 필요가 없습니다
그는 단지 생겼습니다 걱정

949
00:42:21,880 --> 00:42:24,430
그의 웹 사이트의 때문에
일부 기능 부족,

950
00:42:24,430 --> 00:42:25,870
뭔가 다른 파산 때문이다.

951
00:42:25,870 --> 00:42:28,740
>> 한편, 만약 i를
프로그래머 나 일부 회사

952
00:42:28,740 --> 00:42:35,500
몇 가지 중요한을했다
기능을 추가, 변경

953
00:42:35,500 --> 00:42:40,320
나는 우리를 업데이트 할 수 있습니다
내가 실제로이기 때문에 1.1.0

954
00:42:40,320 --> 00:42:42,200
라이브러리의 동작을 변경.

955
00:42:42,200 --> 00:42:44,470
나는 당신에게 어쩌면 더 많은 기능을 제공하고 있습니다.

956
00:42:44,470 --> 00:42:48,490
마지막으로, 경우에 사실에 있었다
근본적 때문에 소프트웨어를 변경

957
00:42:48,490 --> 00:42:54,380
많이는 많은 휴식 것
사용자가 웹 사이트 나 응용 프로그램,

958
00:42:54,380 --> 00:42:59,550
나는이 모델로, 의무있어
너무 주 버전 번호를 업그레이드

959
00:42:59,550 --> 00:43:01,059
이는 주요 변경입니다.

960
00:43:01,059 --> 00:43:03,725
즉, 내가있을 수 있습니다
그 드롭에 대한 지원을 중단

961
00:43:03,725 --> 00:43:04,350
다운 메뉴.

962
00:43:04,350 --> 00:43:07,790
당신은 2.0, 절반으로 업그레이드 그래서 만약
귀하의 웹 사이트가 작동하지 않을 수 있습니다.

963
00:43:07,790 --> 00:43:10,950
그리고이 신호의 일종이다
무엇에 관한 지역 사회에

964
00:43:10,950 --> 00:43:13,223
업그레이드를 제작에 참여.

965
00:43:13,223 --> 00:43:16,710

966
00:43:16,710 --> 00:43:18,020
좋은 기회를 마련한다.

967
00:43:18,020 --> 00:43:18,718
다른 질문?

968
00:43:18,718 --> 00:43:21,761

969
00:43:21,761 --> 00:43:22,260
괜찮아.

970
00:43:22,260 --> 00:43:26,945
음의 한 마지막 살펴 보자
프로그래밍이 분야에서 주제

971
00:43:26,945 --> 00:43:30,640
기술 스택,
즉 모바일 관련.

972
00:43:30,640 --> 00:43:36,232
>> 그래서 휴대 전화의 세계 오늘
당신이 잔 마셔요과 아이 패드, 및 표면,

973
00:43:36,232 --> 00:43:37,940
그리고 모든 종류의
의 당신이 devices--

974
00:43:37,940 --> 00:43:40,950
선택시 많은
그것은 구현에 관해서

975
00:43:40,950 --> 00:43:47,270
응용 프로그램 또는 웹 사이트에 대한
고객의 모바일 장치.

976
00:43:47,270 --> 00:43:51,570
그래서 단지를 명시합니다
분명, 아마도 요즘,

977
00:43:51,570 --> 00:43:54,960
플랫폼에 무엇입니까
모바일 공간에 대한 개발?

978
00:43:54,960 --> 00:43:59,650
어떤 장치 당신은 할 수 있습니다
앱 또는 웹 사이트 지원합니까?

979
00:43:59,650 --> 00:44:00,317
>> 청중 : 애플.

980
00:44:00,317 --> 00:44:01,108
데이비드 J. 마란 : OK.

981
00:44:01,108 --> 00:44:01,820
그래서 애플 장치.

982
00:44:01,820 --> 00:44:06,740
그래서 아이폰 의미하고, 그
아이 패드, 그리고 어쩌면 iPod을 의미한다.

983
00:44:06,740 --> 00:44:07,627
그 밖의 무엇?

984
00:44:07,627 --> 00:44:11,006

985
00:44:11,006 --> 00:44:11,505
올리비에?

986
00:44:11,505 --> 00:44:11,970
>> 대상 : 안드로이드.

987
00:44:11,970 --> 00:44:13,111
>> 데이비드 J. 마란 : 안드로이드.

988
00:44:13,111 --> 00:44:13,610
승인.

989
00:44:13,610 --> 00:44:17,335
그래서 안드로이드 폰, 안드로이드
태블릿, 안드로이드 시장

990
00:44:17,335 --> 00:44:21,240
심지어 지저분 이유는 -와
심지어 애플은 난장판이되고있다.

991
00:44:21,240 --> 00:44:23,960
옛날 옛적 반면
아이폰은 특정 크기이고,

992
00:44:23,960 --> 00:44:26,560
아이 패드는 특정 크기이고,
아이팟은 이제 특정 크기였다

993
00:44:26,560 --> 00:44:33,420
우리는 아이 패드 미니, 그리고 얇은있다
사람, 아이폰 6 플러스 6.

994
00:44:33,420 --> 00:44:34,407
이 엉망이되고 있어요.

995
00:44:34,407 --> 00:44:35,740
그것은 안드로이드 세상이되고 있어요.

996
00:44:35,740 --> 00:44:39,030
>> 그리고 구름의 종류와이 말을
내 눈 때문에에서 개발자의

997
00:44:39,030 --> 00:44:41,680
시각, 그것은 인
목 때 통증

998
00:44:41,680 --> 00:44:45,686
당신은 '스티브 잡스가 없습니다
절대 제어의 비전

999
00:44:45,686 --> 00:44:47,060
이러한 사양의 모든 것을.

1000
00:44:47,060 --> 00:44:49,726
그들이이기 때문에 애플은 여전히​​ 않습니다
하드웨어를 구축하는 사람.

1001
00:44:49,726 --> 00:44:52,690
그러나 그것은 좋은 점은 경우의
나는 소프트웨어 개발자입니다,

1002
00:44:52,690 --> 00:44:54,520
그냥 알고 내
아이폰은 항상 것입니다

1003
00:44:54,520 --> 00:44:56,850
이 때문에 큰 일하기
그게 내가 항상 알고 의미

1004
00:44:56,850 --> 00:44:58,847
얼마나 화면이 부동산 내가있다.

1005
00:44:58,847 --> 00:45:01,180
그래서 아이콘을 넣어하려는 경우
왼쪽 상단에,

1006
00:45:01,180 --> 00:45:04,530
동일한 될 것
모든 단일 고객의 기기에 배치합니다.

1007
00:45:04,530 --> 00:45:07,140
>> 그러나 아이폰의 세계
기가 아이폰 6 흑자

1008
00:45:07,140 --> 00:45:10,570
안드로이드의 세계
전화, 모든지도를 통해입니다.

1009
00:45:10,570 --> 00:45:13,580
그리고 그것은 프로그램에 어렵게한다
것들, 특히 사용자 인터페이스

1010
00:45:13,580 --> 00:45:18,270
이제 배치 시작해야하기 때문에
사용자 인터페이스 상대적으로,하지

1011
00:45:18,270 --> 00:45:19,730
전혀.

1012
00:45:19,730 --> 00:45:23,524
그리고 같은 브라우저에 사실이었다
년 및 데스크톱 및 노트북

1013
00:45:23,524 --> 00:45:25,690
만약 때문에 물론
다양한 화면 크기를 가지고있다.

1014
00:45:25,690 --> 00:45:26,189
>> 그 밖의 무엇?

1015
00:45:26,189 --> 00:45:30,170
당신은 표면이있을 수 있습니다
같은 Microsoft에서.

1016
00:45:30,170 --> 00:45:31,270
당신은 잔 마셔요 있습니다

1017
00:45:31,270 --> 00:45:32,270
청중 : 윈도우 전화.

1018
00:45:32,270 --> 00:45:32,816
데이비드 J. 마란 : 무엇입니까?

1019
00:45:32,816 --> 00:45:33,570
청중 : 윈도우 전화.

1020
00:45:33,570 --> 00:45:34,403
데이비드 J. 마란 : 예.

1021
00:45:34,403 --> 00:45:37,570
그래서 윈도우 폰은 아직 찾아 볼 수있다.

1022
00:45:37,570 --> 00:45:41,840
블랙 베리의 종류의 종류,
하지만 그들은 계속 시도.

1023
00:45:41,840 --> 00:45:43,900
그리고 다른 장치 큼.

1024
00:45:43,900 --> 00:45:48,020
대부분의 경우 그래서,하자
이러한 것들입니다 말

1025
00:45:48,020 --> 00:45:49,520
순간에 대한 걱정합니다.

1026
00:45:49,520 --> 00:45:51,890
물론 애플의 물건,
확실히 안드로이드 물건,

1027
00:45:51,890 --> 00:45:55,640
윈도우 중에서 표면 정제 등
꽤 잘 잡힌 것 같습니다.

1028
00:45:55,640 --> 00:45:58,030
>> 그리고 이러한 장치 중,
당신이 출시하려는 경우,

1029
00:45:58,030 --> 00:46:02,677
,의 말에 대한 모바일 존재를하자 당신의
기업, 디자인 결정의 종류

1030
00:46:02,677 --> 00:46:03,510
당신은 확인해야합니까?

1031
00:46:03,510 --> 00:46:06,350
음, 우리는 이미 말했다
애플의 세계에서,

1032
00:46:06,350 --> 00:46:08,790
적어도 두 개의 언어가
즉, 일반적으로 사용된다.

1033
00:46:08,790 --> 00:46:10,260
하나는 무엇이라고했다?

1034
00:46:10,260 --> 00:46:11,260
>> 청중 : 목표 - C.

1035
00:46:11,260 --> 00:46:11,560
>> 데이비드 J. 마란 : 그래.

1036
00:46:11,560 --> 00:46:13,600
이전 하나입니다 그래서 목표-C.

1037
00:46:13,600 --> 00:46:17,720
또한 많은 맥이 언어의
응용 프로그램은 여전히​​ 작성됩니다.

1038
00:46:17,720 --> 00:46:18,964
그런 다음 다른 새로운 일이었다?

1039
00:46:18,964 --> 00:46:19,630
청중 : 스위프트.

1040
00:46:19,630 --> 00:46:20,590
데이비드 J. 마란 : 스위프트.

1041
00:46:20,590 --> 00:46:23,900
그리고 그는의 종류입니다
두 사람 인상을 알 수 있습니다.

1042
00:46:23,900 --> 00:46:28,238
그리고 안드로이드 세계에서,
안드로이드는 어떤 언어를 사용합니까?

1043
00:46:28,238 --> 00:46:30,618
>> 청중 : C #을?

1044
00:46:30,618 --> 00:46:31,570
>> 청중 : 자바.

1045
00:46:31,570 --> 00:46:34,230
>> 데이비드 J. 마란이 : 자바입니다
의 언어 "뒤 주 르."

1046
00:46:34,230 --> 00:46:37,950
윈도우 세계에서, 물론,
우리는이 경우에 C #을 말할 수 있습니다.

1047
00:46:37,950 --> 00:46:40,590
그래서 이미이 가지입니다
무엇 때문에, 성가신

1048
00:46:40,590 --> 00:46:43,070
사업의 테이크 아웃
소유자 또는 사람이 누구 단지

1049
00:46:43,070 --> 00:46:44,570
모바일 존재를 출시하고 싶어?

1050
00:46:44,570 --> 00:46:45,220
마찬가지로, 젠장?

1051
00:46:45,220 --> 00:46:48,590
마찬가지로, 내가 지원하려는 경우
상당히 넓은 사용자 기반,

1052
00:46:48,590 --> 00:46:52,180
내가 작성해야합니다, 그것은 것 같다
세 가지 별도의 응용 프로그램.

1053
00:46:52,180 --> 00:46:55,630
이러한 언어 중 하나에 하나,
자바 하나, C #의 하나.

1054
00:46:55,630 --> 00:46:59,620
그리고 기능을 원하는 경우에도
동일하게, 그것은 중요하지 않습니다.

1055
00:46:59,620 --> 00:47:02,940
나는 아직도 다른 사용해야
언어 애플, 마이크로 소프트 때문에,

1056
00:47:02,940 --> 00:47:06,084
구글 모든 지원
다른 환경.

1057
00:47:06,084 --> 00:47:07,750
그리고이 년 동안 도전하고있다.

1058
00:47:07,750 --> 00:47:10,100
위로 날 때
사람들은 소프트웨어를 구입하는 데 사용

1059
00:47:10,100 --> 00:47:12,230
컴퓨터 저장소에서
포장 상자를 축소,

1060
00:47:12,230 --> 00:47:14,470
당신은해야 할 것 중 하나
맥 선반에 도달,

1061
00:47:14,470 --> 00:47:19,040
아니면이 매우 작은 맥을 for--
shelf-- 또는 더 큰 윈도우 선반

1062
00:47:19,040 --> 00:47:19,980
일부 소프트웨어를 구입.

1063
00:47:19,980 --> 00:47:22,813
그리고 매우 자주, 심지어는 없었다
맥 선반에 당신을 위해 아무것도.

1064
00:47:22,813 --> 00:47:23,430
왜?

1065
00:47:23,430 --> 00:47:26,900
음, 회사는 90 %의 경우 결정
세계의 세계, 95 %

1066
00:47:26,900 --> 00:47:31,180
심지어 귀찮게 왜 PC를 가지고
맥 OS에 물건을 구현?

1067
00:47:31,180 --> 00:47:34,370
>> 총 aside--로
그것을 왜 digression--

1068
00:47:34,370 --> 00:47:40,960
맥은 바이러스에 그렇게 불 투과성 보인다
웜 및 보안 위협?

1069
00:47:40,960 --> 00:47:44,040
애플이 더 나은가요?

1070
00:47:44,040 --> 00:47:45,934
컴퓨터 보안 유지에 더 나은?

1071
00:47:45,934 --> 00:47:47,750
>> 대상 : 작은 청중?

1072
00:47:47,750 --> 00:47:50,720
>> 데이비드 J. 마란 : 그건
그것은 아마 더 큰 비트.

1073
00:47:50,720 --> 00:47:54,740
그래서 맥의 많은 사용자가
긴, 오, 맥을 사용 주장

1074
00:47:54,740 --> 00:47:57,630
당신은 바이러스에 면역, 그리고 것
웜, 이러한 모든 것들

1075
00:47:57,630 --> 00:47:59,180
그 긴 PC를 괴롭혀왔다.

1076
00:47:59,180 --> 00:48:02,050
그건있을 수 있습니다 애플 때문에
더 나은 프로그래머가

1077
00:48:02,050 --> 00:48:05,250
그들은 더 나은 소프트웨어를 작성하거나,
운영 체제가 잘 설계되었다.

1078
00:48:05,250 --> 00:48:06,870
어쩌면, 그러나 아마.

1079
00:48:06,870 --> 00:48:10,840
>> 그것은 당신이있을 때하는 것이 아마
12 세, 또는 30 일

1080
00:48:10,840 --> 00:48:13,510
일종의 홈 쓰기에 앉아
악성 소프트웨어를 인수하기

1081
00:48:13,510 --> 00:48:17,480
세계, 당신은 후에 갈거야
훨씬 더 큰 타깃.

1082
00:48:17,480 --> 00:48:20,590
세계의 95 % 수도
Windows 또는 일부를 실행

1083
00:48:20,590 --> 00:48:21,740
이들의 변종.

1084
00:48:21,740 --> 00:48:23,800
그래서 양쪽에 약간이있다.

1085
00:48:23,800 --> 00:48:25,710
그러나 자신의 신용에,
애플, 내 지식,

1086
00:48:25,710 --> 00:48:28,270
정말 자신을 선전하지 않았습니다
보다 안전한되는 등,

1087
00:48:28,270 --> 00:48:32,110
당신은 단지 경우 드라마를 초대하고 있기 때문에
당신이 그 주장을, 나는 생각했다.

1088
00:48:32,110 --> 00:48:32,610
>> 괜찮아.

1089
00:48:32,610 --> 00:48:36,490
너무 멀리 아래로 점점없이
즉, 우리는 어떻게이 문제를 해결합니까?

1090
00:48:36,490 --> 00:48:39,670
할 당신은 구매해야하거나 당신이해야합니까
개발하기 위해 세 가지 다른 사람을 지불

1091
00:48:39,670 --> 00:48:41,540
앱?

1092
00:48:41,540 --> 00:48:42,870
당신은 다른 통해 하나를 선택합니까?

1093
00:48:42,870 --> 00:48:45,460
당신의 안내해야합니까
당신이 생각 여기에 생각?

1094
00:48:45,460 --> 00:48:47,960

1095
00:48:47,960 --> 00:48:48,460
카림?

1096
00:48:48,460 --> 00:48:51,001

1097
00:48:51,001 --> 00:48:51,500
아니.

1098
00:48:51,500 --> 00:48:54,190
다른 사람.

1099
00:48:54,190 --> 00:48:56,885
>> 청중 : 그냥 하드웨어와 함께 제공됩니다.

1100
00:48:56,885 --> 00:48:58,510
데이비드 J. 마란은 : 하드웨어와 함께가요?

1101
00:48:58,510 --> 00:48:59,533
당신은 무엇을 의미합니까?

1102
00:48:59,533 --> 00:49:01,282
>> 대상 : 내용은
환경. [알아들을 수 없는]

1103
00:49:01,282 --> 00:49:04,867

1104
00:49:04,867 --> 00:49:06,200
데이비드 J. 마란 : 그래서 그것은 사실이다.

1105
00:49:06,200 --> 00:49:09,280
그러나 고객,
한편, 아이폰이있을 수 있습니다,

1106
00:49:09,280 --> 00:49:13,530
그들은는 안드로이드 폰이있을 수 있습니다
마이크로 소프트가 만든 태블릿이있을 수 있습니다.

1107
00:49:13,530 --> 00:49:19,040
그렇다면 당신은 모바일 전략이 있습니까
서로 다른 모든 사용자 하시나요?

1108
00:49:19,040 --> 00:49:23,320
IT 비용을하면 것을 그것은 보인다
의 아이폰을 만들기 위해 $ 1,000 가정 해 봅시다

1109
00:49:23,320 --> 00:49:25,940
응용 프로그램, 그것은거야
수 있도록 당신에게 $ 2,000 비용

1110
00:49:25,940 --> 00:49:29,250
아이폰 응용 프로그램과
안드로이드 응용 프로그램, 또는 $ 3,000

1111
00:49:29,250 --> 00:49:31,407
또한뿐만 아니라 윈도우 장치를 지원한다.

1112
00:49:31,407 --> 00:49:33,990
그건 아마 꽤
삼가하고, 심지어 수도 있지

1113
00:49:33,990 --> 00:49:36,050
같은 선형 관계가.

1114
00:49:36,050 --> 00:49:41,065
>> 대상 : 앱을하려는 경우 또는
아니, 당신은 대응 웹 사이트를 가질 수 있습니다.

1115
00:49:41,065 --> 00:49:41,940
데이비드 J. 마란 : 좋은.

1116
00:49:41,940 --> 00:49:46,255
청중 : 아니면 네이티브 응용 프로그램을 사용할 수 있습니다.

1117
00:49:46,255 --> 00:49:47,130
데이비드 J. 마란 : 그래.

1118
00:49:47,130 --> 00:49:50,260
여기에이 모든 상황에 따라서
우리에 대해 얘기 한 내용을

1119
00:49:50,260 --> 00:49:53,190
사람들은 네이티브 응용 프로그램을 부를 것이다.

1120
00:49:53,190 --> 00:49:58,040
즉, 기록하는 응용 프로그램입니다
해당 장치의 모국어입니다.

1121
00:49:58,040 --> 00:50:02,190
그래서 기본 목표 - C 또는 스위프트
코드, 자바 또는 C #을한다.

1122
00:50:02,190 --> 00:50:06,900
어떤 당신이 다운로드 할 때,하자 의미
Snapchat에서 인기있는 응용 프로그램을 말한다

1123
00:50:06,900 --> 00:50:10,060
또는 당신이 다운로드 할 때
전화 페이스 북,

1124
00:50:10,060 --> 00:50:13,270
당신이 다운로드 중 하나
아이폰 용으로 작성된 버전,

1125
00:50:13,270 --> 00:50:16,830
또는 당신의 안드로이드 전화에 대한 기록,
또는 표면에 대한 기록.

1126
00:50:16,830 --> 00:50:18,500
>> 그러나 대안이있다.

1127
00:50:18,500 --> 00:50:26,020
올리비에가 암시 된 바와 같이,
당신은 실제로 HTML 5를 사용할 수 있습니다

1128
00:50:26,020 --> 00:50:33,440
대신, 웹라고 무엇을 사용하여
응용 프로그램, 이에 당신이 단순히

1129
00:50:33,440 --> 00:50:35,940
모바일 존재를 구현
어떤 기능을 제공합니다.

1130
00:50:35,940 --> 00:50:37,030
나는 모바일 존재에 의해 무엇을 의미합니까?

1131
00:50:37,030 --> 00:50:39,800
귀하의 웹 사이트와 마찬가지로 그것은 당신이
컨택 정보의 모든 목록

1132
00:50:39,800 --> 00:50:43,049
제품, 어쩌면 쇼핑이
카트, 어쩌면 당신은 그것을 통해 물건을 판매하고 있습니다.

1133
00:50:43,049 --> 00:50:46,850
무엇이든 응용 프로그램은 당신입니다
하지 오브젝티브 C에, 그것을 구현,

1134
00:50:46,850 --> 00:50:51,200
또는 스위프트, 또는 Java 또는 C #을하지만, HTML에서
우리는 보았다 언어이었다 5,

1135
00:50:51,200 --> 00:50:55,470
어제에, 자바 스크립트, CSS와.

1136
00:50:55,470 --> 00:50:58,700
>> 그리고 그에 대한 좋은거야
세 가지가 그들을 실행하는 것입니다,

1137
00:50:58,700 --> 00:51:01,981
당신은 소프트웨어 단지 어떤 조각을해야합니까?

1138
00:51:01,981 --> 00:51:02,980
대상 : 웹 브라우저.

1139
00:51:02,980 --> 00:51:04,229
데이비드 J. 마란 : 웹 브라우저.

1140
00:51:04,229 --> 00:51:07,610
그리고 최고의 나는,이 모든 것을 알고있다
장치는 웹 브라우저와 함께

1141
00:51:07,610 --> 00:51:10,480
그래서 사용자는 필요가있다
특별한 무언가를 설치합니다.

1142
00:51:10,480 --> 00:51:12,920
그래서 당신은 말할 수 있습니다
고객, 고객,

1143
00:51:12,920 --> 00:51:16,590
에 acme.com과로 이동하여
브라우저와 당신은거야

1144
00:51:16,590 --> 00:51:19,730
웹 기반 경험을 가지고
여전히 화면을 채우는 것으로,

1145
00:51:19,730 --> 00:51:25,100
하지만 당신은 모든에 대해 걱정할 필요가 없습니다
이러한 비용이 복잡성의 모든.

1146
00:51:25,100 --> 00:51:28,600
그러나 확실하게이 것입니다
캐치, 바로 여기에?

1147
00:51:28,600 --> 00:51:31,740
나는 지적 특히
몇 년 전 그,

1148
00:51:31,740 --> 00:51:35,700
의 첫 번째 버전
페이스 북의 모바일 응용 프로그램

1149
00:51:35,700 --> 00:51:38,810
대부분의 HTML 5 응용 프로그램이었다.

1150
00:51:38,810 --> 00:51:42,490
그리고 그들이 가지고, 더
최근에, 그것을 다시 구현

1151
00:51:42,490 --> 00:51:44,700
자신의 다른 응용 프로그램입니다.

1152
00:51:44,700 --> 00:51:46,990
>> 그런데 왜 당신에게없는 것
즉시 말하고 싶은,

1153
00:51:46,990 --> 00:51:49,190
물론, 분명히 우리는이 작업을 수행하는거야?

1154
00:51:49,190 --> 00:51:51,560
숨겨진 비용은 무엇을 할 수 있는가?

1155
00:51:51,560 --> 00:51:52,477
>> 청중 : 성능.

1156
00:51:52,477 --> 00:51:53,643
데이비드 J. 마란 : 성능?

1157
00:51:53,643 --> 00:51:54,567
무슨 말이에요?

1158
00:51:54,567 --> 00:52:01,040
>> 청중 : 네이티브 앱
더 높은 성능을 보유하고 있습니다.

1159
00:52:01,040 --> 00:52:03,850
>> 데이비드 J. 마란 : 그래서 즉
사실, 몇 가지 이유로.

1160
00:52:03,850 --> 00:52:05,270
우리는 대답을 지나치게 단순화 할 수 있습니다.

1161
00:52:05,270 --> 00:52:08,061
그리고 우리의 논의를 기억
컴파일 된 언어 대 해석했다.

1162
00:52:08,061 --> 00:52:12,030
이 HTML 5와 함께 단지로
분명, JavaScript-- 일반적으로 작성

1163
00:52:12,030 --> 00:52:15,880
JS-- 및 CSS는 모두
해석 언어,

1164
00:52:15,880 --> 00:52:21,020
심지어에만 자바 스크립트하지만
프로그래밍 언어이다.

1165
00:52:21,020 --> 00:52:25,820
>> 그리고, 이러한 대 그래서 어떤 이들 중 일부를
컴파일, 적어도이 셋 ...

1166
00:52:25,820 --> 00:52:29,990
목표 - C, 자바와 C # -이,
이론적으로, 그냥 빨리해야한다.

1167
00:52:29,990 --> 00:52:31,670
그러나 또 다른 현실이있다 for--

1168
00:52:31,670 --> 00:52:32,440
>> 청중 : 작용 성?

1169
00:52:32,440 --> 00:52:32,830
>> 데이비드 J. 마란 : 무엇입니까?

1170
00:52:32,830 --> 00:52:34,060
>> 청중 : 작용 성.

1171
00:52:34,060 --> 00:52:34,570
>> 데이비드 J. 마란 : 기능?

1172
00:52:34,570 --> 00:52:35,070
어떻게 요?

1173
00:52:35,070 --> 00:52:37,305
청중 : 카메라를 사용하여
휴대 전화 나 뭔가 끕니다.

1174
00:52:37,305 --> 00:52:41,471
당신은 브라우저들을 사용할 수 있습니다.

1175
00:52:41,471 --> 00:52:42,470
데이비드 J. 마란 : 맞아요.

1176
00:52:42,470 --> 00:52:43,011
그들은 sec--있어

1177
00:52:43,011 --> 00:52:45,034
청중 : [들리지]

1178
00:52:45,034 --> 00:52:46,700
데이비드 J. 마란 : 그건 또 다른 좋은 하나입니다.

1179
00:52:46,700 --> 00:52:49,230
오는 특징이있다
휴대 전화 오늘과

1180
00:52:49,230 --> 00:52:53,840
보안을 위해 의도적으로하지 않습니다 그
웹 브라우저에 액세스 할 이유.

1181
00:52:53,840 --> 00:52:56,410
이 종류의 것 때문에
소 름 것은 바로 그 때 경우

1182
00:52:56,410 --> 00:53:00,710
방문 google.com, 또는
cnn.com, 또는 website.com,

1183
00:53:00,710 --> 00:53:04,490
이 웹 사이트는 회전하는 힘을 가지고
카메라에, 당신의 사진을 촬영,

1184
00:53:04,490 --> 00:53:06,010
다음을 사용합니다.

1185
00:53:06,010 --> 00:53:09,280
하지만 당신은 임의의 웹 사이트를 원하지 않을 것이다
당신은 아주 처음으로 방문하는 것이

1186
00:53:09,280 --> 00:53:10,690
그 능력을 가지고 있습니다.

1187
00:53:10,690 --> 00:53:13,460
>> 그리고 무엇 전화
제조 업체는 일반적으로 수행

1188
00:53:13,460 --> 00:53:17,230
그들은 단지 액세스를 거부한다
정보의 종류

1189
00:53:17,230 --> 00:53:20,650
브라우저에있는 당신을 의미
카메라를 구현할 수 없습니다.

1190
00:53:20,650 --> 00:53:24,180
당신은 푸시 알림을 구현할 수 없습니다
당신이 화면에 얻을 경고음

1191
00:53:24,180 --> 00:53:26,120
짧은 메시지와 함께.

1192
00:53:26,120 --> 00:53:31,350
사실, 심지어는 GPS 일종
의 종류의 사용 가능한 웹 브라우저에.

1193
00:53:31,350 --> 00:53:34,140
당신은 노트북에, 이제까지 한 경우
또는 모바일 장치에서,

1194
00:53:34,140 --> 00:53:38,770
아마 같은 것을 뽑아
cnn.com뿐만 아니라 지역 뉴스 스테이션

1195
00:53:38,770 --> 00:53:43,890
이 작업을 수행하는 경향이, 당신이하라는 메시지가
자주와 message-- foxnews.com

1196
00:53:43,890 --> 00:53:45,170
사용자의 위치를​​ 알고 싶어한다.

1197
00:53:45,170 --> 00:53:46,610
승인 또는 거부합니다.

1198
00:53:46,610 --> 00:53:52,070
>> 음, 브라우저에 액세스하려고
휴대 전화에서 GPS 정보를 제공합니다.

1199
00:53:52,070 --> 00:53:54,740
그러나 다행히도 마이크로 소프트,
애플, 구글

1200
00:53:54,740 --> 00:53:57,330
같은 느낌이 결정
그것은 유용한 상황이다,

1201
00:53:57,330 --> 00:53:59,461
우리는 Google지도를 원하는
다른 도구를 작동합니다

1202
00:53:59,461 --> 00:54:02,710
그러나 우리는 사람들을 크리프 싶지 않아
다만 어떤 웹 사이트를 활성화하여이 작업을 수행 할 수 있습니다.

1203
00:54:02,710 --> 00:54:05,934
대회의 이렇게하자의 종류
반쯤 사용자하라는 메시지를 표시합니다.

1204
00:54:05,934 --> 00:54:08,850
그러나 반드시 그렇지 않다
카메라 등 모든 하드웨어와

1205
00:54:08,850 --> 00:54:10,680
푸시와
알림 등,

1206
00:54:10,680 --> 00:54:13,650
그래서 당신이해야 할 수도 있습니다
특정 기능을 희생.

1207
00:54:13,650 --> 00:54:15,100
그러나 성능도.

1208
00:54:15,100 --> 00:54:18,020
그것은 덜되고있어
요즘 눈에 띄는 아마도

1209
00:54:18,020 --> 00:54:22,400
LTE는에 빠르게 캐치로
휴대폰에 인터넷 속도,

1210
00:54:22,400 --> 00:54:24,110
하지만 당신은 종류의 차이를 느낄 수 있습니다.

1211
00:54:24,110 --> 00:54:28,190
웹 기반 응용 프로그램처럼
단은 전형적으로 느리게 느낌

1212
00:54:28,190 --> 00:54:31,100
네이티브 응용 프로그램보다 부분적으로
웹 기반 응용 프로그램 때문에

1213
00:54:31,100 --> 00:54:32,680
정의에 의해 인터넷에 있습니다.

1214
00:54:32,680 --> 00:54:35,610
이 웹 서버에 얘기.

1215
00:54:35,610 --> 00:54:39,590
그리고 네트워크 연결 인 경우
천천히, 심지어 속도가 느려질 수 있습니다 스크롤.

1216
00:54:39,590 --> 00:54:43,710
>> 그러나 네이티브 응용 프로그램, 당신은
이미 사전 downloaded-- 아마

1217
00:54:43,710 --> 00:54:45,680
당신은 집에있을 때
앱 스토어에서,

1218
00:54:45,680 --> 00:54:47,900
또는 적어도 사전 다운로드
전체에서

1219
00:54:47,900 --> 00:54:49,640
이전이든 여러분이
연결 speed--

1220
00:54:49,640 --> 00:54:52,530
그래서 지금은 모두가
당신은 일반적으로 필요 비트.

1221
00:54:52,530 --> 00:54:55,090
어쩌면 일부 데이터를 제외하고
즉, 서버에서 제공됩니다.

1222
00:54:55,090 --> 00:54:57,130
>> 그래서 이러한 절충이 여기에 있습니다.

1223
00:54:57,130 --> 00:54:59,980
중간의 종류가있다
타협 사실이다.

1224
00:54:59,980 --> 00:55:00,907
그리고 방송 해요 생각

1225
00:55:00,907 --> 00:55:02,895
>> 대상 : 데이터를 오프라인으로 사용합니다.

1226
00:55:02,895 --> 00:55:06,355
네이티브 앱에 할 수 있습니다 [들리지]

1227
00:55:06,355 --> 00:55:07,480
데이비드 J. 마란 : 물론입니다.

1228
00:55:07,480 --> 00:55:09,730
그래서 오프라인 문제가있다,
이는 정말 짜증나

1229
00:55:09,730 --> 00:55:13,120
일부 게임이나 사용을 재생할 수없는 경우
당신이있어 그냥 있기 때문에 일부 소프트웨어

1230
00:55:13,120 --> 00:55:15,110
지하 어딘가에
또는 엘리베이터한다.

1231
00:55:15,110 --> 00:55:18,700
네이티브 응용 프로그램은 탄력
그에 대한 높은 확률로,

1232
00:55:18,700 --> 00:55:20,990
당신은 모든이 가정
데이터가 로컬이 필요합니다.

1233
00:55:20,990 --> 00:55:22,900
>> 그래서 여기에 세 번째 옵션이있다.

1234
00:55:22,900 --> 00:55:30,270
그리고의이 같은 스펙트럼을 그려 보자
여기에 기본 여기에 응용 프로그램 및 웹 응용 프로그램.

1235
00:55:30,270 --> 00:55:32,460
그리고 중간에 무슨
뭔가 called--

1236
00:55:32,460 --> 00:55:35,410
그리고 당신이있을 수 있습니다 생각
전에, 어쩌면 단어를 사용?

1237
00:55:35,410 --> 00:55:37,170
하이브리드 응용 프로그램입니다.

1238
00:55:37,170 --> 00:55:40,980
그리고 단어에서 알 수 있듯이,
그것은 중간에 뭔가.

1239
00:55:40,980 --> 00:55:46,230
그것은 웹 응용 프로그램의 종류이고
그것은 네이티브 응용 프로그램의 종류입니다.

1240
00:55:46,230 --> 00:55:47,690
>> 그리고 이것은 무엇을 의미합니까?

1241
00:55:47,690 --> 00:55:51,750
그것은 frameworks--가 밝혀
earlier-- 소프트웨어의 용어를 사용하는

1242
00:55:51,750 --> 00:55:55,860
다른 사람들이 쓴 것을
이러한 플랫폼의 모든 하나.

1243
00:55:55,860 --> 00:55:57,500
이들과 또 다른 장치.

1244
00:55:57,500 --> 00:56:02,390
사실, 내가 폰갭으로 가자
어느 하나의 프레임 워크입니다 I

1245
00:56:02,390 --> 00:56:04,520
어도비는 현재 소유하고 생각합니다.

1246
00:56:04,520 --> 00:56:07,830
내가 시작하기에 가자.

1247
00:56:07,830 --> 00:56:09,430
어디 보자.

1248
00:56:09,430 --> 00:56:12,450
나는 도구의 목록을 볼 수 있는지 확인합니다.

1249
00:56:12,450 --> 00:56:13,150
하드웨어.

1250
00:56:13,150 --> 00:56:15,845
시작하기.

1251
00:56:15,845 --> 00:56:17,570
폰갭 하드웨어.

1252
00:56:17,570 --> 00:56:18,672
>> 어디 보자.

1253
00:56:18,672 --> 00:56:23,459
폰갭 하드웨어에 액세스 할 수 있습니다.

1254
00:56:23,459 --> 00:56:26,125
우리가 조금 찾을 수 있다면 나를 보자
그들이 가지고하는 데 사용 차트.

1255
00:56:26,125 --> 00:56:29,170

1256
00:56:29,170 --> 00:56:31,640
이것은 다른 사이트에 있습니다.

1257
00:56:31,640 --> 00:56:32,525
이 유용한가요?

1258
00:56:32,525 --> 00:56:33,030
아니.

1259
00:56:33,030 --> 00:56:36,330
즉거야가 우리의 시간을 낭비입니다.

1260
00:56:36,330 --> 00:56:40,185
폰갭 하드웨어.

1261
00:56:40,185 --> 00:56:40,685
장치.

1262
00:56:40,685 --> 00:56:45,190

1263
00:56:45,190 --> 00:56:48,030
디바이스 API.

1264
00:56:48,030 --> 00:56:49,270
아니, 그들은 그것을 이동했습니다.

1265
00:56:49,270 --> 00:56:50,070
>> 폰갭.

1266
00:56:50,070 --> 00:56:54,964
의이 하나의 마지막 모습을 가자
나는 당신을 보여줄 수있는 경우를 참조하십시오.

1267
00:56:54,964 --> 00:56:55,630
시작하기.

1268
00:56:55,630 --> 00:56:58,160

1269
00:56:58,160 --> 00:56:59,020
폰갭을 설치합니다.

1270
00:56:59,020 --> 00:57:02,310

1271
00:57:02,310 --> 00:57:03,270
모바일 앱을 설치합니다.

1272
00:57:03,270 --> 00:57:04,320
어서.

1273
00:57:04,320 --> 00:57:07,220

1274
00:57:07,220 --> 00:57:08,580
그들은 모든 것을 재구성했습니다.

1275
00:57:08,580 --> 00:57:09,750
괜찮아.

1276
00:57:09,750 --> 00:57:11,370
아, 알았어.

1277
00:57:11,370 --> 00:57:12,550
음, 여기 우리는 간다.

1278
00:57:12,550 --> 00:57:16,130
이것은, 모든 계몽이 아니라
이것은 내가 가지 찾고 있었던 것입니다.

1279
00:57:16,130 --> 00:57:20,940
>> 그래서 폰갭은 프레임 워크는 당신을
당신을 제공하는 무료로 다운로드 할 수 있습니다

1280
00:57:20,940 --> 00:57:22,750
일부 스타터 코드, 본질적으로.

1281
00:57:22,750 --> 00:57:26,600
그들이 쓴 그래서 몇 가지 코드
그 아무것도의 많은 일을하지 않습니다.

1282
00:57:26,600 --> 00:57:29,610
그러나 그것은 당신을 제공 무엇
본질적으로 동등한입니다

1283
00:57:29,610 --> 00:57:34,910
단지를두고 응용 프로그램의
사용자의 스크린에 큰 직사각형.

1284
00:57:34,910 --> 00:57:38,040
그것은처럼 URL 표시 줄을 넣어하지 않습니다
브라우저에 주소를 두지 않습니다.

1285
00:57:38,040 --> 00:57:39,650
그것은 단지 하나의 큰 사각형을 넣습니다.

1286
00:57:39,650 --> 00:57:43,230
그리고 당신이 큰을 구성
사각형, 후드 아래,

1287
00:57:43,230 --> 00:57:50,780
실제로 acme.com로 이동, 또는 어쩌면합니다
m.acme.com, mobile.acme.com를 들어,

1288
00:57:50,780 --> 00:57:52,910
하지만 사용자가 알 수 없습니다
그들은 그 주소입니다.

1289
00:57:52,910 --> 00:57:55,520
그들이 보는 모든 인
웹 페이지의 내용.

1290
00:57:55,520 --> 00:57:59,822
>> 하지만이 존재에 대한 좋은거야
하이브리드 앱은 그 무엇 폰갭입니다

1291
00:57:59,822 --> 00:58:03,030
다른 회사는이주는
그들은 당신에게 코드를 조금주는거야

1292
00:58:03,030 --> 00:58:05,760
목표 - C 또는 스위프트, 또는
자바 코드 약간,

1293
00:58:05,760 --> 00:58:08,320
또는 코드 약간
C #에서, 본질적으로,

1294
00:58:08,320 --> 00:58:12,990
사용자가 제공해야하는 것은 최소한으로하다
웹 기반 응용 프로그램의 주소입니다.

1295
00:58:12,990 --> 00:58:15,750
그리고 당신은이 번들
모두 함께하고

1296
00:58:15,750 --> 00:58:20,670
그것을 가지고 하나에 액세스하여
인터넷을 통해 사이트

1297
00:58:20,670 --> 00:58:24,060
또는 당신도 로컬 캐시
응용 프로그램 내에서 복사

1298
00:58:24,060 --> 00:58:28,690
다음은 응용 프로그램을 저장
아이폰 형식으로, 안드로이드 폰

1299
00:58:28,690 --> 00:58:32,030
포맷, 표면 형태, 또는
다른 장치의 임의의 수.

1300
00:58:32,030 --> 00:58:34,960
>> 당신의 각 버전을 업로드
구글 Play 스토어로,

1301
00:58:34,960 --> 00:58:37,690
앱 스토어에,에
등 윈도 스토어합니다.

1302
00:58:37,690 --> 00:58:41,570
그리고 지금, 당신은 모두를 할 수 있습니다
관객은 정말 네이티브 응용 프로그램을 다운로드,

1303
00:58:41,570 --> 00:58:44,250
대부분의 코드이었다이기는하지만
다른 사람에 의해 쓰여진,

1304
00:58:44,250 --> 00:58:49,090
하지만 기본 앱의 내용을 모든
자신의 웹 사이트, 일반적에서 왔습니다.

1305
00:58:49,090 --> 00:58:53,950
그래서 당신은 당신의 웹 사이트를 작성 계속
HTML, 자바 스크립트, CSS입니다.

1306
00:58:53,950 --> 00:58:56,400
>> 그럼 왜 이러한 라인을 흐리게?

1307
00:58:56,400 --> 00:59:00,240
왜 하이브리드 응용 프로그램이
그 고유의 종류의뿐만 아니라,

1308
00:59:00,240 --> 00:59:02,569
웹의 종류를 기반으로?

1309
00:59:02,569 --> 00:59:04,610
의 요점 무엇입니까
이러한 복잡성을 추가?

1310
00:59:04,610 --> 00:59:07,180
난 그냥에서, 심지어는 여전히 의미
이 페이지를 통해이기는,

1311
00:59:07,180 --> 00:59:11,790
시작하기 가이드는 것 같은 느낌이 든다
나를 위해 단계의 전체를 많이있어

1312
00:59:11,790 --> 00:59:13,514
내가 주는거 전에해야 할 일

1313
00:59:13,514 --> 00:59:14,430
청중 : 재사용?

1314
00:59:14,430 --> 00:59:14,960
데이비드 J. 마란 : 재사용?

1315
00:59:14,960 --> 00:59:15,618
당신은 무엇을 의미합니까?

1316
00:59:15,618 --> 00:59:16,826
>> 대상 : 소스 코드의.

1317
00:59:16,826 --> 00:59:19,438
따라서 동일한 코드를 실행할 것
모든 다른 플랫폼.

1318
00:59:19,438 --> 00:59:20,313
데이비드 J. 마란 : 그래.

1319
00:59:20,313 --> 00:59:21,188
청중 : [들리지]

1320
00:59:21,188 --> 00:59:23,200

1321
00:59:23,200 --> 00:59:24,200
데이비드 J. 마란 : 완벽한.

1322
00:59:24,200 --> 00:59:26,930
시간이 꽉하고 경우 경우
많은 developers--이 없습니다

1323
00:59:26,930 --> 00:59:28,900
어쩌면 당신은 한 개발자가
그 또는 확실히 그녀

1324
00:59:28,900 --> 00:59:31,050
이 모든 몰라
environments-- 확실히 아니라,

1325
00:59:31,050 --> 00:59:33,341
확실히 프로그램 할 수 없습니다
동시에 세에

1326
00:59:33,341 --> 00:59:35,970
그리고 세 가지 제품을 출시
시간 번 허용

1327
00:59:35,970 --> 00:59:40,360
당신은 그를 가질 수 또는 그녀의 모든 것을 구축
HTML과 자바 스크립트와 CSS에서,

1328
00:59:40,360 --> 00:59:43,260
다음 꼬마 내용
네이티브 앱에 대한 비트,

1329
00:59:43,260 --> 00:59:45,930
다운로드 충분
이 같은 프레임 워크,

1330
00:59:45,930 --> 00:59:48,750
다음에 제품을 업로드
다양한 앱 스토어의 모든

1331
00:59:48,750 --> 00:59:51,700
지금이 너무
네이티브 응용 프로그램입니다.

1332
00:59:51,700 --> 00:59:54,090
>> 그래서 윈 - 윈처럼 보인다,
그러나 다시, 명확하게하기

1333
00:59:54,090 --> 00:59:56,540
잠재적 인 무엇
비용 또는 개는?

1334
00:59:56,540 --> 01:00:00,292

1335
01:00:00,292 --> 01:00:01,209
>> 청중 : 성능?

1336
01:00:01,209 --> 01:00:02,083
데이비드 J. 마란 : 그래.

1337
01:00:02,083 --> 01:00:02,959
공연.

1338
01:00:02,959 --> 01:00:04,250
그것은 구두로 설명하기 어렵다.

1339
01:00:04,250 --> 01:00:07,590
그래서 당신은 단지에 걸릴 경우
믿음 모바일 애플리케이션,

1340
01:00:07,590 --> 01:00:11,430
웹 응용 프로그램 것
일반적으로 더 느리게 수행합니다.

1341
01:00:11,430 --> 01:00:16,500
이 때문에, 아주 제대로 보이지 않을 수도 있습니다
아이폰 및 안드로이드 폰에서,

1342
01:00:16,500 --> 01:00:19,210
및 Windows 장치, 거기에
디폴트의​​ Look 항상 일종의

1343
01:00:19,210 --> 01:00:21,780
그리고 모든 느낌
버튼과 메뉴.

1344
01:00:21,780 --> 01:00:25,160
>> 그리고 웹에서 기업은 시도 할 수 있습니다
그 미학에 근접하는

1345
01:00:25,160 --> 01:00:28,329
부트 스트랩 같은 라이브러리와,
하지만이 기민한 user--을 user--

1346
01:00:28,329 --> 01:00:30,620
것을 알 것입니다
뭔가 확실히 바로 여기 아니다.

1347
01:00:30,620 --> 01:00:32,510
그리고 어쩌면, 괜찮아요
그것은 큰 문제가 아니다.

1348
01:00:32,510 --> 01:00:35,500
그러나 성능 문제
절대적으로 큰 문제이다.

1349
01:00:35,500 --> 01:00:39,400
기본 응용 프로그램은 단지을하는 경향이
훨씬 더 반응하기 때문에 수

1350
01:00:39,400 --> 01:00:39,946
보다 나은.

1351
01:00:39,946 --> 01:00:42,070
그리고 그렇다면, 무엇이 될 수 있습니다
두 세계의 최고?

1352
01:00:42,070 --> 01:00:44,584
당신은 특히 작은 경우
회사 또는 작은 그룹,

1353
01:00:44,584 --> 01:00:47,000
당신은 자원이없는
병렬 응용 프로그램을 개발

1354
01:00:47,000 --> 01:00:50,480
세 가지 플랫폼에서, 그리고 솔직히,
그 나쁜 생각 어쨌든처럼 느낀다

1355
01:00:50,480 --> 01:00:53,526
당신이 그것을 밖으로 굴러 경우 때문에
세 가지를 동시에 실현

1356
01:00:53,526 --> 01:00:56,400
우리는 몇 가지 기능을 추가해야
또는 지금 다른 일을 수행

1357
01:00:56,400 --> 01:00:59,530
당신은 그것을 해결해야
세 곳이 아니라 하나.

1358
01:00:59,530 --> 01:01:02,390
무슨 일이 어쩌면 최적의
전략 여기에 전체,

1359
01:01:02,390 --> 01:01:04,130
자원과 시간이 꽉 경우?

1360
01:01:04,130 --> 01:01:06,420
>> 청중 : 그냥 iOS에서 그것을 할.

1361
01:01:06,420 --> 01:01:08,390
>> 데이비드 J. 마란 : 그건 무리 아니다.

1362
01:01:08,390 --> 01:01:10,670
아이폰, 최소한의
미국은 슈퍼 인기 있습니다.

1363
01:01:10,670 --> 01:01:13,820
안드로이드는 여전히 지배적 인 것 같다
시장 점유율, 전 세계적으로, 전체.

1364
01:01:13,820 --> 01:01:16,740
그래서 당신은하지 않습니다
반드시 대표

1365
01:01:16,740 --> 01:01:19,210
세계의 전체 이번 주.

1366
01:01:19,210 --> 01:01:21,180
그러나 그것은 절대적으로 한 결정입니다.

1367
01:01:21,180 --> 01:01:23,620
내가 여기 캠퍼스에 의미
일부 흉포 수를 생각한다

1368
01:01:23,620 --> 01:01:26,600
또는 대학생의 비율
아이폰과 안드로이드없는 휴대 전화를 가지고있다.

1369
01:01:26,600 --> 01:01:28,490
그러나 해외는 반대의 일종이다.

1370
01:01:28,490 --> 01:01:30,040
그래서 당신은 당신의 청중에 따라 결정합니다.

1371
01:01:30,040 --> 01:01:31,990
어떻게 당신의 청중이 무엇을 알 수 있습니까?

1372
01:01:31,990 --> 01:01:34,080
>> 음, 우리는 어제 트릭을 배웠습니다.

1373
01:01:34,080 --> 01:01:35,060
당신은 그들에게 할 수 있습니다.

1374
01:01:35,060 --> 01:01:37,910
당신은 포로 청중이있는 경우
당신은 그들에게 설문 조사 양식을 보낼 수 있습니다.

1375
01:01:37,910 --> 01:01:39,172
아니면 당신은 무엇을 할 수 있습니까?

1376
01:01:39,172 --> 01:01:40,076
>> 청중 : Google 웹 로그 분석?

1377
01:01:40,076 --> 01:01:40,680
>> 데이비드 J. 마란 : 무엇입니까?

1378
01:01:40,680 --> 01:01:41,876
>> 청중 : Google 웹 로그 분석.

1379
01:01:41,876 --> 01:01:43,250
데이비드 J. 마란 : Google 웹 로그 분석.

1380
01:01:43,250 --> 01:01:43,750
네.

1381
01:01:43,750 --> 01:01:46,970
아니면 더 많은 종류의 기술적, 단지
자신의 웹 서버 로그를 확인합니다.

1382
01:01:46,970 --> 01:01:49,100
무슨 일 때문에
때마다 브라우저,

1383
01:01:49,100 --> 01:01:51,880
여부 노트북, 데스크탑 또는
전화 당신의 웹 사이트를 방문?

1384
01:01:51,880 --> 01:01:56,847
그들은 그 프로그램이 HTTP 헤더를 보내
당신은 그들이 사용중인 브라우저와 OS.

1385
01:01:56,847 --> 01:02:00,180
그래서 당신은 높은 확률로, 추론 할 수있다,
무엇 당신의 인구 통계 학적 그런 식으로 사용

1386
01:02:00,180 --> 01:02:01,410
다음 조정합니다.

1387
01:02:01,410 --> 01:02:03,030
>> 그래서 받아 들일 수있어 가정합니다.

1388
01:02:03,030 --> 01:02:07,760
즉, 사업의 경우에 대한 일종의 나쁜
안드로이드 사용자가 우리의 위젯을 살 수 없다.

1389
01:02:07,760 --> 01:02:10,942
>> 청중 : 당신은이든
거 충전 여부?

1390
01:02:10,942 --> 01:02:12,900
데이비드 J. 마란 : 여부
당신은 충전 거 야?

1391
01:02:12,900 --> 01:02:14,900
그래서 OK, 당신은 당신이 돈을받을.

1392
01:02:14,900 --> 01:02:18,400
>> 청중 : 앱거야 여부
무료 또는 그것은 gonna-- 여부

1393
01:02:18,400 --> 01:02:19,530
>> 데이비드 J. 마란 : OK.

1394
01:02:19,530 --> 01:02:21,920
그래서 어쩌면 당신은 회수 할 수
그런 식으로 비용 or--?

1395
01:02:21,920 --> 01:02:26,195
>> 청중 : 그 말 한 번 나는 연구를 읽고
더 많은 애플 사용자는 앱을 지불 versus--

1396
01:02:26,195 --> 01:02:28,320
데이비드 J. 마란 : 그건 사실이야
그들은 이미이기 때문에

1397
01:02:28,320 --> 01:02:29,640
자신의 기기에 더 많은 비용을 지불.

1398
01:02:29,640 --> 01:02:31,295
가정 그래서 무리하지.

1399
01:02:31,295 --> 01:02:32,170
>> 청중 : [들리지]

1400
01:02:32,170 --> 01:02:34,439

1401
01:02:34,439 --> 01:02:35,230
데이비드 J. 마란 : OK.

1402
01:02:35,230 --> 01:02:38,667
그들이 지불 할 더하고자한다면,
다음 안드로이드 사용자와 지옥.

1403
01:02:38,667 --> 01:02:40,500
그들은 않을거야
어쨌든 우리에게 무엇을 지불합니다.

1404
01:02:40,500 --> 01:02:43,499
우리는뿐만 아니라 우리의 우선 순위를 초점을 맞출 수 있습니다,
적어도 처음 몇 달 동안

1405
01:02:43,499 --> 01:02:44,810
또는 년, iOS에서.

1406
01:02:44,810 --> 01:02:46,240
완전히 합리적인.

1407
01:02:46,240 --> 01:02:48,558
무엇이 더 포괄적이다
보다 전략?

1408
01:02:48,558 --> 01:02:53,740

1409
01:02:53,740 --> 01:02:54,960
그 무엇 봐 주길?

1410
01:02:54,960 --> 01:02:57,040
>> 청중 : [들리지]

1411
01:02:57,040 --> 01:03:00,142
>> 데이비드 J. 마란 : 더 expensive--
그래서 아마 가서 in-- 더 많은 투자를.

1412
01:03:00,142 --> 01:03:00,767
청중 : 네.

1413
01:03:00,767 --> 01:03:02,050
그냥 모바일 웹 사이트.

1414
01:03:02,050 --> 01:03:03,966
>> 데이비드 J. 마란은 : 그래서 할
모바일 웹 사이트가 아닌

1415
01:03:03,966 --> 01:03:05,440
심지어 이러한 복잡성에 대해 우려하고있다.

1416
01:03:05,440 --> 01:03:07,970
아니면 합리적인 전략,
이는 심지어 페이스 북이했다,

1417
01:03:07,970 --> 01:03:10,890
하이브리드로 시작된다
응용 프로그램이 아니기 때문에

1418
01:03:10,890 --> 01:03:13,582
훨씬 더 열심히이보다이 작업을 수행합니다.

1419
01:03:13,582 --> 01:03:16,040
당신은 몇 가지를 읽을 수있다
문서는 방​​법을 알아낼과

1420
01:03:16,040 --> 01:03:17,480
앱 스토어에 물건을 업로드합니다.

1421
01:03:17,480 --> 01:03:19,670
그래서 어쩌면 당신은 시작
이, 첫날에 있기 때문에,

1422
01:03:19,670 --> 01:03:21,112
당신은 모든 사용자를 지원할 수 있습니다.

1423
01:03:21,112 --> 01:03:23,570
그리고, 그냥 페이스 북을 좋아한다
다른 회사가 수행 한

1424
01:03:23,570 --> 01:03:25,330
당신은 자원이있을 때,
당신은 사람들이,

1425
01:03:25,330 --> 01:03:27,660
왜 다시 구현하지 않습니다
다만 iOS 애플리케이션.

1426
01:03:27,660 --> 01:03:31,460
당신은 여전히​​, 모두를 위해 무언가를
그것은 열등한 경험은 비록

1427
01:03:31,460 --> 01:03:33,330
아마도 하이브리드 응용 프로그램.

1428
01:03:33,330 --> 01:03:36,770
하지만 당신은 점차적으로 롤백 할 수 있습니다
당신의 단기 교체

1429
01:03:36,770 --> 01:03:40,280
와 하이브리드 앱의 조치
당신의 더 네이티브 응용 프로그램.

1430
01:03:40,280 --> 01:03:44,090
>> 청중 : 그러나와 하이브리드 앱 당신에게
모바일 기능에 액세스 할 수 있습니다?

1431
01:03:44,090 --> 01:03:45,440
>> 데이비드 J. 마란 : 꼭 그렇지는 않습니다.

1432
01:03:45,440 --> 01:03:47,810
그래서 어쩌면 당신은을
초기에 결정을 의식,

1433
01:03:47,810 --> 01:03:51,930
당신은 단지에 사진을 업로드 할 수 있습니다
페이스 북에 대한 기본 아이폰 응용 프로그램,

1434
01:03:51,930 --> 01:03:56,060
하지만 안드로이드 응용 프로그램에,
우선, 예를 들면.

1435
01:03:56,060 --> 01:04:00,600
그리고는 거짓말 때문에 약간의
웹 응용 프로그램은 더 많은 제한이

1436
01:04:00,600 --> 01:04:03,620
하이브리드 애플리케이션을보다가집니다
우리는 문서를 읽어 출력, 그리고 경우

1437
01:04:03,620 --> 01:04:07,260
그것과 같은 폰갭과 사물에 대한,
사람들은 방법과 함께 올라와있다

1438
01:04:07,260 --> 01:04:11,110
웹 기반 응용 프로그램을 제공합니다
카메라에 대한 액세스,

1439
01:04:11,110 --> 01:04:13,310
사용중인로 너무 오래
하이브리드 응용 프로그램입니다.

1440
01:04:13,310 --> 01:04:14,214
>> 그것은 어떻게 작동합니까?

1441
01:04:14,214 --> 01:04:16,130
하이브리드 때문에
응용 프로그램, 정의에 의해,

1442
01:04:16,130 --> 01:04:19,600
, 목표 - C 코드의 비트가
및 스위프트, 자바 또는 C #에서,

1443
01:04:19,600 --> 01:04:20,920
이는 하드웨어에 접근 할 수있다.

1444
01:04:20,920 --> 01:04:24,590
반드시 모든 것을,
그러나 그것은 아주 잘 수도

1445
01:04:24,590 --> 01:04:27,310
당신이 가지고있는 경우를 수
카메라를 얻을 액세스만큼,

1446
01:04:27,310 --> 01:04:32,960
심지어 안드로이드 플랫폼에 대한
예, 그 인위적인 예입니다.

1447
01:04:32,960 --> 01:04:35,515
>> 다른 질문?

1448
01:04:35,515 --> 01:04:36,279
괜찮아.

1449
01:04:36,279 --> 01:04:38,070
우리는 왜하지 않는 우리의
여기로 15 분 휴식.

1450
01:04:38,070 --> 01:04:44,060
우리는 최종 세에 다시 시작합니다
웹 프로그래밍을보고, 데이터베이스,

1451
01:04:44,060 --> 01:04:45,910
와 자바 스크립트.

1452
01:04:45,910 --> 01:04:48,877

