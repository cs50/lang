1
00:00:00,000 --> 00:00:01,291
>> DAVID J.マラン：だから我々は戻っています。

2
00:00:01,291 --> 00:00:03,050
だから、高レベル
現時点では今話題

3
00:00:03,050 --> 00:00:06,440
ない技術・スタックであり、
特に専門用語、

4
00:00:06,440 --> 00:00:09,960
それは任意のためにすべての漁獲の多くはで
技術の組み合わせの数

5
00:00:09,960 --> 00:00:11,840
あなたが問題を解決するために使用する可能性があること。

6
00:00:11,840 --> 00:00:14,850
そしておそらく最も
開始するにはフィッティング方法

7
00:00:14,850 --> 00:00:18,110
以降の言語で見ることであろう
私は全体の束をオフに威嚇保ちます

8
00:00:18,110 --> 00:00:21,000
そして部屋の中で最も誰もが持っています
おそらく、少なくとも一つのことを聞きました。

9
00:00:21,000 --> 00:00:25,730
>> だから、我々は区別しようとしない理由
これらの言語を区別するwhat--

10
00:00:25,730 --> 00:00:28,932
ときにあなたが希望とについて簡潔に話します
彼らがしているか、他の上で1つを選択

11
00:00:28,932 --> 00:00:30,890
ソートの基本的
異なる、特に

12
00:00:30,890 --> 00:00:34,830
あなたはエンジニアとチャットしているとき、
または、誰を雇うことを決定しよう

13
00:00:34,830 --> 00:00:37,652
またはどのような実装
グリーンライトする提案、

14
00:00:37,652 --> 00:00:39,860
あなたが実際に作るだろうか
意思決定のそれらの種類。

15
00:00:39,860 --> 00:00:41,890
>> それでは、ちょうどいくつかのことをオフにガラガラしましょう​​。

16
00:00:41,890 --> 00:00:45,300
人々が持つ言語の
聞いた、何が頭に浮かぶ？

17
00:00:45,300 --> 00:00:48,030
C. [OK]をクリックします。

18
00:00:48,030 --> 00:00:48,757
[OK]、C ++。

19
00:00:48,757 --> 00:00:51,400

20
00:00:51,400 --> 00:00:51,990
あれは何でしょう？

21
00:00:51,990 --> 00:00:52,390
>> AUDIENCE：Pythonの。

22
00:00:52,390 --> 00:00:53,348
>> DAVID J.マラン：Pythonの。

23
00:00:53,348 --> 00:00:55,330
優れた。

24
00:00:55,330 --> 00:00:57,000
ほかに何か？

25
00:00:57,000 --> 00:00:58,810
Visual Basicの。

26
00:00:58,810 --> 00:01:01,100
私は、Javaを聞きました。

27
00:01:01,100 --> 00:01:02,610
ビジュアルBasic--別名

28
00:01:02,610 --> 00:01:03,150
VB。

29
00:01:03,150 --> 00:01:03,650
Javaの。

30
00:01:03,650 --> 00:01:07,294

31
00:01:07,294 --> 00:01:12,810
すべての漁獲量の多いです.NET、
C＃は言語として、通常、何のために

32
00:01:12,810 --> 00:01:13,770
質問インチ

33
00:01:13,770 --> 00:01:14,770
そして、私はそれを言及してみましょう。

34
00:01:14,770 --> 00:01:15,900
だから我々は戻ってそれに来ます。

35
00:01:15,900 --> 00:01:17,560
ごめんなさい？

36
00:01:17,560 --> 00:01:18,170
ごめんなさい？

37
00:01:18,170 --> 00:01:19,877
>> AUDIENCE：SQL。

38
00:01:19,877 --> 00:01:20,876
DAVID J.マラン：スクラッチ？

39
00:01:20,876 --> 00:01:21,610
AUDIENCE：SQL。

40
00:01:21,610 --> 00:01:22,610
DAVID J.マラン：ああ、SQL。

41
00:01:22,610 --> 00:01:23,110
OK。

42
00:01:23,110 --> 00:01:23,750
SQL。

43
00:01:23,750 --> 00:01:29,510
だから我々は、実際にthat--に戻ってきます
それは同様にブレーク後good--です。

44
00:01:29,510 --> 00:01:30,572
ほかに何か？

45
00:01:30,572 --> 00:01:32,530
>> AUDIENCE：オラクル。

46
00:01:32,530 --> 00:01:34,670
>> DAVID J.マラン：だから
Oracleのではなく、言語。

47
00:01:34,670 --> 00:01:36,560
実際に彼らは同様にSQLを使用します。

48
00:01:36,560 --> 00:01:38,360
それでは、後にそれを入れてみましょう
同様にブレーク。

49
00:01:38,360 --> 00:01:39,744
そして、申し訳ありませんが、こっち何か？

50
00:01:39,744 --> 00:01:40,660
AUDIENCE：Mathematicaの。

51
00:01:40,660 --> 00:01:41,390
DAVID J.マラン：Mathematicaの？

52
00:01:41,390 --> 00:01:42,303
確認し、[OK]をクリックします。

53
00:01:42,303 --> 00:01:46,150

54
00:01:46,150 --> 00:01:49,180
そして、MATLABは、の一種であります
そこに時々。

55
00:01:49,180 --> 00:01:50,060
>> AUDIENCE：R.

56
00:01:50,060 --> 00:01:51,755
>> DAVID J.マラン：R.はのは、こっちに行ってみましょう。

57
00:01:51,755 --> 00:01:54,710

58
00:01:54,710 --> 00:01:55,210
Fortranの。

59
00:01:55,210 --> 00:01:55,880
確かに。

60
00:01:55,880 --> 00:01:57,910
古い学校。

61
00:01:57,910 --> 00:01:59,390
Fortranの。

62
00:01:59,390 --> 00:02:01,550
COBOL。

63
00:02:01,550 --> 00:02:02,410
私はBASICを放り出すだろう。

64
00:02:02,410 --> 00:02:05,990

65
00:02:05,990 --> 00:02:08,539
BASIC。

66
00:02:08,539 --> 00:02:09,390
どれか - 

67
00:02:09,390 --> 00:02:10,352
>> AUDIENCE：MATLAB？

68
00:02:10,352 --> 00:02:11,310
DAVID J.マラン：MATLAB。

69
00:02:11,310 --> 00:02:12,248
ああ、あなたはそれを破りました。

70
00:02:12,248 --> 00:02:15,370

71
00:02:15,370 --> 00:02:15,870
何か？

72
00:02:15,870 --> 00:02:18,700
私は他人のカップルを考えることができます。

73
00:02:18,700 --> 00:02:21,876
私はいくつか他の人の考えることができます。

74
00:02:21,876 --> 00:02:22,792
そして、最後に何でしたか？

75
00:02:22,792 --> 00:02:23,970
>> AUDIENCE：ASP。

76
00:02:23,970 --> 00:02:25,030
>> DAVID J.マラン：ASP？

77
00:02:25,030 --> 00:02:26,100
うん。

78
00:02:26,100 --> 00:02:27,100
アクティブサーバーページ。

79
00:02:27,100 --> 00:02:30,270
それは一般的に下に落ちます
他の言語、時にはC＃の、

80
00:02:30,270 --> 00:02:32,040
それでは、それをオフのままにしましょう​​。

81
00:02:32,040 --> 00:02:35,510
しかし、我々はそれに戻ってきます
フレームワークなどのため。

82
00:02:35,510 --> 00:02:36,290
他に何か？

83
00:02:36,290 --> 00:02:39,020
PHPは人気があります。

84
00:02:39,020 --> 00:02:41,710
Rubyは別です。

85
00:02:41,710 --> 00:02:48,230
JavaScriptを、混同しないように
Javaを使用し、別のです。

86
00:02:48,230 --> 00:02:49,570
それはたくさんのようなものです。

87
00:02:49,570 --> 00:02:53,590
>> だから、それは確かに圧倒的なことができ、
リストが存在しない場合のように、

88
00:02:53,590 --> 00:02:55,650
ちょうどあなたが始める場所を知るために開始します。

89
00:02:55,650 --> 00:02:58,130
そしてそう幸いにも、してみましょう
いくつかの角度からこの近づきます。

90
00:02:58,130 --> 00:03:03,520
まずは、分類してみましょう
これらの言語のうちの少なくともいくつか

91
00:03:03,520 --> 00:03:06,790
を連想させる二つの大きなバケツ、へ
私たちは休憩前に持っていた会話、

92
00:03:06,790 --> 00:03:09,630
ここで我々は、コンパイルについて話しました
ソースコード、機械コード、

93
00:03:09,630 --> 00:03:11,440
それはどのようにではありませんので、
すべての言語で動作します。

94
00:03:11,440 --> 00:03:15,640
だから我々はいくつかの例を引き抜きますよof--
またはそのモデルにカウンターexamples--。

95
00:03:15,640 --> 00:03:18,490
>> そして、なぜ我々はしないでください
アプリケーションについて話します

96
00:03:18,490 --> 00:03:20,390
これらの言語その
一般的に使用されます。

97
00:03:20,390 --> 00:03:22,840
そして、率直に言って、たとえ
これは、かなり長いリストであります

98
00:03:22,840 --> 00:03:26,320
それは、このリストのサブセットだけだという
あなたは、一般的に、これらの日から引きます

99
00:03:26,320 --> 00:03:27,220
問題を解決します。

100
00:03:27,220 --> 00:03:29,150
特定の言語が他のものより新しいです。

101
00:03:29,150 --> 00:03:31,170
特定の言語があります
他のものよりも人気。

102
00:03:31,170 --> 00:03:34,370
だから、あなたがそのような持っているようではありません
あなたの前に圧倒的なタスク

103
00:03:34,370 --> 00:03:36,970
間で決定するとき
これらのさまざまな言語。

104
00:03:36,970 --> 00:03:40,110
>> それでは、これを実行しましょう​​。

105
00:03:40,110 --> 00:03:45,870
我々は、以前に、ソースコードを持っていました
し、我々はマシンコードを持っていました。

106
00:03:45,870 --> 00:03:48,590

107
00:03:48,590 --> 00:03:49,400
おっと。

108
00:03:49,400 --> 00:03:50,910
間違った単語を書きます。

109
00:03:50,910 --> 00:03:52,740
マシンコード。

110
00:03:52,740 --> 00:03:57,549
そして、我々は中にいくつかのプロセスを持っていました
真ん中は、ええコンパイラをcalled--。

111
00:03:57,549 --> 00:03:58,215
だからコンパイラ。

112
00:03:58,215 --> 00:04:00,760

113
00:04:00,760 --> 00:04:03,910
>> そして、何のマシンコード
実際に最後に上に実行されます

114
00:04:03,910 --> 00:04:05,680
あなたの実際のCPUになるだろう。

115
00:04:05,680 --> 00:04:09,660
つまり、マシンコードによって、I
最低レベルの命令を意味します

116
00:04:09,660 --> 00:04:11,330
CPUは、実際には理解していること。

117
00:04:11,330 --> 00:04:15,100
加算、減算、移動、
保存し、そのような操作。

118
00:04:15,100 --> 00:04:19,700
そして、これは何のためのモデルであります
一般的にコンパイル言語として知られています。

119
00:04:19,700 --> 00:04:21,000
おそらく、驚くべきことではありません。

120
00:04:21,000 --> 00:04:23,550
>> だから、これはモデルであり、
コンパイル言語用。

121
00:04:23,550 --> 00:04:25,970
しかし、それはそこのが判明します
言語の別のクラス

122
00:04:25,970 --> 00:04:32,650
解釈と呼ばれますlanguages​​--
解釈languages​​--

123
00:04:32,650 --> 00:04:34,030
それは若干異なります。

124
00:04:34,030 --> 00:04:41,660
あなたが実行し、ソースコードで書きます
通訳を介してそれらを、

125
00:04:41,660 --> 00:04:45,440
そのインタプリタです
何がCPU上で実行されます。

126
00:04:45,440 --> 00:04:50,120
言い換えれば、あなたは何をしないでください
EMITは明らかに、何ですか？

127
00:04:50,120 --> 00:04:50,980
マシンコード。

128
00:04:50,980 --> 00:04:54,290
CPUその0と1
それ自体は最終的に理解しています。

129
00:04:54,290 --> 00:04:59,780
>> したがって、この最初のバージョンでと
Cなどの言語、私達が見たように、

130
00:04:59,780 --> 00:05:02,040
あなたがソースコードで書きます
それは少し難解です、

131
00:05:02,040 --> 00:05:05,300
しかし、少なくともそれは、英語のようなのようなものです
それは、少なくとも読み取り可能な

132
00:05:05,300 --> 00:05:06,780
一度あなたがそれに慣れます。

133
00:05:06,780 --> 00:05:10,100
あなたはコンパイラとアウトを介して実行します
あなたは、最終的には、0と1を取得します。

134
00:05:10,100 --> 00:05:11,340
>> 単純化し過ぎています。

135
00:05:11,340 --> 00:05:12,839
そこに他のいくつかのステップがあります。

136
00:05:12,839 --> 00:05:15,530
実際には、あなたが今まで聞いた場合
用語「アセンブリ言語」

137
00:05:15,530 --> 00:05:17,990
それは、前に一歩です
0と1。

138
00:05:17,990 --> 00:05:20,949
、少し読みやすくそれ
それでもかなり難解。

139
00:05:20,949 --> 00:05:23,740
そのため、中間のステップがあります
それは、実際には、ここで起こっています。

140
00:05:23,740 --> 00:05:26,360
しかし、出力、最終的に、
これらの0と1です。

141
00:05:26,360 --> 00:05:28,990
>> しかし、解釈
あなたが持っている世界では、

142
00:05:28,990 --> 00:05:32,680
解釈されている言語
言語は、あなたが実際にそのステップをスキップします。

143
00:05:32,680 --> 00:05:36,010
言い換えれば、ときにあなたが書きます
プログラムは、あなただけのそれをすぐに実行します。

144
00:05:36,010 --> 00:05:38,960
あなたはそれをコンパイルしないと
私が前に行ったように、その後、それを実行します。

145
00:05:38,960 --> 00:05:41,132
あなたはそれを書いて、それを実行します。

146
00:05:41,132 --> 00:05:44,340
そして、あなたは迅速な変更を行う場合は、
あなたは、迅速な変更を行い、それを再実行してください。

147
00:05:44,340 --> 00:05:46,640
だからここには中段はありません。

148
00:05:46,640 --> 00:05:50,840
>> 今、プログラムのために私が以前に書きました、
これは、この「Hello World」のプログラムでした

149
00:05:50,840 --> 00:05:53,660
あなたは合理的かもしれません
wonder--または合理的かもしれません

150
00:05:53,660 --> 00:05:58,570
それはその時ではなかったですstate--
私のプログラムをコンパイルするために消費します。

151
00:05:58,570 --> 00:06:00,337
ちょうどそのようにそれを行っているようです。

152
00:06:00,337 --> 00:06:02,170
そして、グラフィカルがあります
コンパイラのバージョン。

153
00:06:02,170 --> 00:06:05,270
私は、非常に難解なバージョンを使用しています
しかし、あなたは、再生ボタンを打つことができ

154
00:06:05,270 --> 00:06:07,887
それは実際に行うことになります
あなたのためにコンパイル。

155
00:06:07,887 --> 00:06:10,720
私は、プログラムをコンパイルしました
再び、それを実行するために、私はちょうどこれを行います。

156
00:06:10,720 --> 00:06:13,820
そして、それは、そこに左に出力し、「こんにちは！」

157
00:06:13,820 --> 00:06:15,530
それはすべてのことが不利いないようです。

158
00:06:15,530 --> 00:06:19,920
しかし、あなたのプログラムがある場合
ひとつ以上の、2つ、3つ、

159
00:06:19,920 --> 00:06:25,470
4、5行の長、それがすることができます
コンパイルにはるか秒かかります。

160
00:06:25,470 --> 00:06:28,310
時には分
かなりの時間をコンパイルします。

161
00:06:28,310 --> 00:06:30,480
すべての後、いくつかの
世界最大の製品

162
00:06:30,480 --> 00:06:35,040
オペレーティングシステムのようなものがあり、
Microsoft Wordの、Microsoft Excelの、

163
00:06:35,040 --> 00:06:39,070
数十万人であるかもしれません
または、長い行のコードであっても、何百万、

164
00:06:39,070 --> 00:06:41,300
そしてそれらはちょうどありません
すぐに実行されます。

165
00:06:41,300 --> 00:06:44,560
>> また、ウェブ上で、それはです
使用するファッショナブルになります

166
00:06:44,560 --> 00:06:47,600
単に言語を解釈し、
部分的にはあなたのために

167
00:06:47,600 --> 00:06:50,570
開発者として変更を行うことができます
そしてその後、ちょうどすぐにリロード

168
00:06:50,570 --> 00:06:52,570
ブラウザページと
すぐに結果を参照してください。

169
00:06:52,570 --> 00:06:56,160
それでHTML、一方ではありません
プログラミング言語

170
00:06:56,160 --> 00:06:58,860
解釈の言語です。

171
00:06:58,860 --> 00:07:00,770
そして、我々は昨日、同じ効果を見ました。

172
00:07:00,770 --> 00:07:04,070
あなただけの作った後のページをリロード
Cloud9の変化and-- voila--

173
00:07:04,070 --> 00:07:05,560
あなたは新しい結果を参照してください。

174
00:07:05,560 --> 00:07:07,090
>> だから、ここでの違いは何ですか？

175
00:07:07,090 --> 00:07:13,190
HTML、リコールでは、我々はオープンなHTMLを持っていました、
オープンヘッド、オープンタイトル、クローズタイトル、

176
00:07:13,190 --> 00:07:15,250
クローズヘッド、オープンボディなど。

177
00:07:15,250 --> 00:07:19,149
私たちは、これらのタグのすべてを持っていた、我々はかなり
多くは何をすべきかをブラウザに伝える、と述べました。

178
00:07:19,149 --> 00:07:20,690
ねえ、ブラウザ、ここでHTMLページが付属しています。

179
00:07:20,690 --> 00:07:22,170
ブラウザねえ、ここにタイトルが付いています。

180
00:07:22,170 --> 00:07:24,429
ブラウザねえ、ここに来ていくつかの
大胆でなければならないテキスト。

181
00:07:24,429 --> 00:07:25,720
そして、あなたは反対のことを言います。

182
00:07:25,720 --> 00:07:27,330
ブラウザねえ、それはそれです
太字テキストの。

183
00:07:27,330 --> 00:07:28,830
ねえ、それは体のためにブラウザです。

184
00:07:28,830 --> 00:07:29,740
など。

185
00:07:29,740 --> 00:07:31,130
>> そのため、ブラウザは何ですか？

186
00:07:31,130 --> 00:07:33,170
ブラウザだけでインタプリタです。

187
00:07:33,170 --> 00:07:36,090
それは誰かのようなことをするプログラムです
マイクロソフトやGoogleが書かれています、

188
00:07:36,090 --> 00:07:39,160
その目的は生活の中にあります
HTMLとして知られている言語を、読んで、

189
00:07:39,160 --> 00:07:39,890
それを解釈します。

190
00:07:39,890 --> 00:07:41,290
上から下、左から右へ。

191
00:07:41,290 --> 00:07:46,880
そして、任意の時間は、ブラウザが開いて見ています
ブラケット、タイトル、閉じ括弧、

192
00:07:46,880 --> 00:07:48,960
それはそれを解釈する必要があります
意味として、ああ、その

193
00:07:48,960 --> 00:07:52,490
私は道これらの単語を置く必要があることを意味
ここでは、ブラウザの上部にアップ。

194
00:07:52,490 --> 00:07:55,700
>> だから、ちょうどHTMLコードが言うことありません。

195
00:07:55,700 --> 00:07:57,240
しかし、誰0と1はありません。

196
00:07:57,240 --> 00:07:58,250
何のコンパイルはありません。

197
00:07:58,250 --> 00:07:58,890
あなたはそれをしませんでした。

198
00:07:58,890 --> 00:07:59,931
ブラウザはそれをしませんでした。

199
00:07:59,931 --> 00:08:01,710
それだけでは関与していないのです。

200
00:08:01,710 --> 00:08:05,890
>> これらの継続的なの精神でそう
トピック、今日と昨日、

201
00:08:05,890 --> 00:08:08,400
それは素晴らしい機能のようです。

202
00:08:08,400 --> 00:08:11,410
次に、あなたのコードを保存し、
ちょうどそれを実行したり、それを解釈します。

203
00:08:11,410 --> 00:08:13,790
中間のステップはありません。

204
00:08:13,790 --> 00:08:15,690
確かにコストはありますか？

205
00:08:15,690 --> 00:08:16,810
すべての五分五分ことはできません。

206
00:08:16,810 --> 00:08:19,964
だからコストは何でしょうか？

207
00:08:19,964 --> 00:08:20,940
>> AUDIENCE：スペース。

208
00:08:20,940 --> 00:08:22,370
>> DAVID J.マラン：スペース。

209
00:08:22,370 --> 00:08:23,370
だから、確認してください。

210
00:08:23,370 --> 00:08:26,920
コンパイルされた世界では、あなたが持っています
元のソースコードだけでなく、

211
00:08:26,920 --> 00:08:29,657
あなたも作成していると
その後、おそらく保存

212
00:08:29,657 --> 00:08:31,740
マシンはcode--
零点とones--、それはです

213
00:08:31,740 --> 00:08:33,870
スペースのいくつかの量を取るようになりました。

214
00:08:33,870 --> 00:08:34,429
絶対に。

215
00:08:34,429 --> 00:08:35,765
だから、それはあなたのより多くのスペースを原価計算です。

216
00:08:35,765 --> 00:08:39,289

217
00:08:39,289 --> 00:08:39,789
ええ？

218
00:08:39,789 --> 00:08:43,280
>> AUDIENCE：ブラウザかもしれません
異なった解釈。

219
00:08:43,280 --> 00:08:46,770
>> DAVID J.マラン：ブラウザかもしれません
それを異なって解釈します。

220
00:08:46,770 --> 00:08:48,622
それは本当です。

221
00:08:48,622 --> 00:08:50,330
しかし、私は私はわからないんだけど
主張快適

222
00:08:50,330 --> 00:08:51,840
それは解釈だためです。

223
00:08:51,840 --> 00:08:56,340
それはそれはちょうどので、それ以上です
言語の実装

224
00:08:56,340 --> 00:08:58,050
それ自体が曖昧さを有します。

225
00:08:58,050 --> 00:09:01,570
それでは、非常に確認しないようにしましょう
その1が、良い予感。

226
00:09:01,570 --> 00:09:03,103
価格は他に何が支払われるのでしょうか？

227
00:09:03,103 --> 00:09:03,602
アンドリュー？

228
00:09:03,602 --> 00:09:05,912
>> 観客：あなたが組み合わせています
2段階なので、したがって、あなた

229
00:09:05,912 --> 00:09:08,300
同様に複雑さを増すことがあります。

230
00:09:08,300 --> 00:09:11,040
>> DAVID J.マラン：complex--
複雑化？

231
00:09:11,040 --> 00:09:12,270
誰のため？

232
00:09:12,270 --> 00:09:16,748
>> 聴衆：だから、インタプリタで
ステップ、あなたは通訳を組み合わせています

233
00:09:16,748 --> 00:09:19,120
そしてちょうど至るまでのコンパイラto--

234
00:09:19,120 --> 00:09:21,100
>> DAVID J.マラン：ああ、[OK]をクリックします。

235
00:09:21,100 --> 00:09:25,240
皮肉なことに、それはおそらく少しです
インタプリタを実装する単純な、

236
00:09:25,240 --> 00:09:29,530
それはように思われるにもかかわらず、
この利便性の良い面が得られます。

237
00:09:29,530 --> 00:09:30,550
だから、おそらく真。

238
00:09:30,550 --> 00:09:32,716
しかし、それは一種の私が、依存します
言語に、と言うでしょう

239
00:09:32,716 --> 00:09:35,720
彼らが行った方法について
それを実装について。

240
00:09:35,720 --> 00:09:38,535
より多くの複雑さが存在することができ、
実際に、コンパイラで、

241
00:09:38,535 --> 00:09:41,410
あなたがから行かなければならないという理由だけで
何かに何か非常に高いレベル

242
00:09:41,410 --> 00:09:42,560
非常に低いレベル。

243
00:09:42,560 --> 00:09:45,340
しかし、よく考え。

244
00:09:45,340 --> 00:09:50,770
>> だから、別の言い方を、コンパイルされたプログラム、
これらの0と1になったときに、

245
00:09:50,770 --> 00:09:54,470
言語で終わります
CPUは話すこと、

246
00:09:54,470 --> 00:09:57,850
のこちら側で、一方、
世界では、あなたが書いたプログラム、

247
00:09:57,850 --> 00:10:02,527
あなたが書いたコード、決して実際に
実際の言語に変換されます

248
00:10:02,527 --> 00:10:03,360
コンピュータは話します。

249
00:10:03,360 --> 00:10:04,190
0と1。

250
00:10:04,190 --> 00:10:08,480
これは、元、より人間にとどまります
優しい、より読みやすい言語です。

251
00:10:08,480 --> 00:10:11,720
だから何が含意であるかもしれません
そこに、あなたがない場合は、実際に

252
00:10:11,720 --> 00:10:15,020
変換わざわざあなた
非常に言語へのプログラム

253
00:10:15,020 --> 00:10:18,013
根底にあるコンピュータが話していますか？

254
00:10:18,013 --> 00:10:19,780
>> AUDIENCE：ない可能性があります
何かを理解できますか？

255
00:10:19,780 --> 00:10:21,170
>> DAVID J.マラン：マイト
何かを理解していません。

256
00:10:21,170 --> 00:10:23,297
そしてそれはclaim--あり
それは理解していなかった場合

257
00:10:23,297 --> 00:10:25,880
何かが、それはバグや不足です
インタプリタでいます。

258
00:10:25,880 --> 00:10:28,544
だから、より多くのだろう
コストよりも間違い。

259
00:10:28,544 --> 00:10:30,419
>> 観客：あなたがアクセス権を持っています
ソースコードへ？

260
00:10:30,419 --> 00:10:31,877
DAVID J.マラン：良いものがあります。

261
00:10:31,877 --> 00:10:34,140
だからここの欠点は、あなたがあります
アクセス権を持っているように思われます。

262
00:10:34,140 --> 00:10:37,006
あなたは、エンドユーザは、に見えるかもしれません
ソースコードへのアクセス権を持っています。

263
00:10:37,006 --> 00:10:38,130
そして、それは必ずしも真実ではありません。

264
00:10:38,130 --> 00:10:39,660
しかし、それはで真であります
JavaScriptの場合、

265
00:10:39,660 --> 00:10:41,660
私たちは後を見て​​みましょうします
ブレーク今日、どの

266
00:10:41,660 --> 00:10:45,720
解釈されたプログラミング言語であります
あなたがソースコードで記述しています。

267
00:10:45,720 --> 00:10:48,890
>> しかし、そのソースコードが転送されます
サーバーからブラウザへ

268
00:10:48,890 --> 00:10:51,392
そして人間のブラウザで実行されます。

269
00:10:51,392 --> 00:10:54,350
だからここに彼女はちょうど開くことができます
窓、私はChromeで行ってきたように、

270
00:10:54,350 --> 00:10:57,740
そして私たち自身のように、それを見て
グーグルで昨日ちらっと見。

271
00:10:57,740 --> 00:11:00,420
それは少し見えるかもしれません
不可解なそれがあります。

272
00:11:00,420 --> 00:11:03,482
だから、絶対に支払わ1の価格です。

273
00:11:03,482 --> 00:11:04,565
AUDIENCE：パフォーマンスヒット？

274
00:11:04,565 --> 00:11:05,020
DAVID J.マラン：うん。

275
00:11:05,020 --> 00:11:06,260
そして、それは他のとても重要です。

276
00:11:06,260 --> 00:11:07,380
パフォーマンスヒットがあります。

277
00:11:07,380 --> 00:11:10,100
あなたはこれを持っているので、
真ん中の男、それ自体

278
00:11:10,100 --> 00:11:13,740
プログラムはあなたの間で、あります
そして、は対照的に、CPU、

279
00:11:13,740 --> 00:11:17,880
ただ、これらの生を供給します
CPUへの0と1、

280
00:11:17,880 --> 00:11:21,060
あなたのパフォーマンスに影響があります
インタプリタ型言語で取ります。

281
00:11:21,060 --> 00:11:24,240
その結果、任意に、プログラム
それは1秒かかる場合があります

282
00:11:24,240 --> 00:11:27,840
コンピュータまたは1で実行するには
ここでは、コンピュータ上で実行する分、

283
00:11:27,840 --> 00:11:32,059
10秒または10を取る可能性があります
ここでは、コンピュータ上で実行するための分。

284
00:11:32,059 --> 00:11:35,100
一般的ということではないだろう
10--のdifference--要因の多く

285
00:11:35,100 --> 00:11:36,808
ありますので、
あなたが行うことができます最適化。

286
00:11:36,808 --> 00:11:38,680
しかし、それはほとんど常に遅くなります。

287
00:11:38,680 --> 00:11:43,070
その懸念に今、フリップサイド
、そのコンピュータだけでなく、すべての12です

288
00:11:43,070 --> 00:11:45,970
18 months--に記載
そうspeak--するムーアの法則、

289
00:11:45,970 --> 00:11:47,600
ただ速くなっています。

290
00:11:47,600 --> 00:11:48,750
私はより多くのディスク容量を持っています。

291
00:11:48,750 --> 00:11:49,791
私はより多くのRAMを持っています。

292
00:11:49,791 --> 00:11:50,620
誰が本当に気に？

293
00:11:50,620 --> 00:11:52,328
>> そして、それはのようなものです
合理的な引数。

294
00:11:52,328 --> 00:11:55,740
確かに、理由の一つ
我々は遅い容認できる理由

295
00:11:55,740 --> 00:11:58,480
言語を解釈しているためであります
私たち人間は本当に気づきません。

296
00:11:58,480 --> 00:12:00,690
コンピュータが持っています
ちょうどそうくそ速い頂いております。

297
00:12:00,690 --> 00:12:04,520
一方戻って一日で、特に
ハードウェアは、はるかに拘束されたとき、

298
00:12:04,520 --> 00:12:06,860
あなたはすべてのあまりを持っていました、
それははるかに高価でした

299
00:12:06,860 --> 00:12:10,570
そう、すべてはよくして、より多くの費用がかかります
あなたは本当に絞り出すたかったです

300
00:12:10,570 --> 00:12:12,590
あなたはできる限りのパフォーマンス。

301
00:12:12,590 --> 00:12:16,400
しかし、それはでの書き込みに必要な
低レベル、可能ならば、

302
00:12:16,400 --> 00:12:18,090
コンパイル言語で。

303
00:12:18,090 --> 00:12:20,830
>> だから、このパフォーマンスヒットを取りますか。

304
00:12:20,830 --> 00:12:24,780
しかし、一般的に、五分五分
このごろそれだけの価値があるように見えます。

305
00:12:24,780 --> 00:12:26,850
除いて、まあ
知的財産の問題。

306
00:12:26,850 --> 00:12:28,641
読みやすさのその種
コー​​ドの、我々​​はよ

307
00:12:28,641 --> 00:12:30,640
我々はJavaScriptのを見たときに戻ってきます。

308
00:12:30,640 --> 00:12:33,140
>> それでは、分類してみましょう
これらの少なくとも数。

309
00:12:33,140 --> 00:12:41,650
だから、コンパイル言語の中で、我々
ちょっとC、C ++、みかん、Javaの、持っているだろう

310
00:12:41,650 --> 00:12:48,120
それがために、例外のビットだが、
理由は私は一瞬であなたを紹介します。

311
00:12:48,120 --> 00:12:51,540
C＃のは、このリストになります。

312
00:12:51,540 --> 00:12:54,930
私達はちょうどでより多くのを見てみましょう
より近代的な言語。

313
00:12:54,930 --> 00:12:55,430
大丈夫。

314
00:12:55,430 --> 00:12:56,804
そして、それはたくさんのように思えます。

315
00:12:56,804 --> 00:13:03,500
フェンスのこちら側のに対し、
我々は、JavaScript、およびPythonを持っている可能性があります

316
00:13:03,500 --> 00:13:08,040
そして、PHP、およびRubyの。

317
00:13:08,040 --> 00:13:13,640
そして、のそれで十分です
より最近のもの？

318
00:13:13,640 --> 00:13:15,410
それは今のところたくさんのように感じています。

319
00:13:15,410 --> 00:13:16,330
OK。

320
00:13:16,330 --> 00:13:18,760
そして、ドットドットドット、
以来、リストは無限大です。

321
00:13:18,760 --> 00:13:22,300
>> そして実際に、私たちはしたい場合
this--ウィキペディアの感覚を得ます、

322
00:13:22,300 --> 00:13:24,130
コンパイルされた言語。

323
00:13:24,130 --> 00:13:27,150
私たちは得ることができます推測しています
はるかに網羅したリスト。

324
00:13:27,150 --> 00:13:27,910
だからここに私達は行きます。

325
00:13:27,910 --> 00:13:30,620
そこでここでは、はるかに網羅したリストです。

326
00:13:30,620 --> 00:13:34,150
そして、私は誰かがDを推測する期待していました
それはあまりにも存在するための言語として、

327
00:13:34,150 --> 00:13:37,747
しかし、彼らはそれが思わDで停止しました。

328
00:13:37,747 --> 00:13:39,330
実際E.があるかもしれませんが、

329
00:13:39,330 --> 00:13:41,496
>> ああ、実際には、これはすべき
リストにこれらの日です。

330
00:13:41,496 --> 00:13:47,460
スウィフトは、実際にあります
Appleが発明した言語

331
00:13:47,460 --> 00:13:50,302
それは今、ますます、使用されています
そう、iPhone開発インチ

332
00:13:50,302 --> 00:13:52,260
しかし、我々は戻ってくるだろう
我々の議論とのこと

333
00:13:52,260 --> 00:13:54,090
ほんの少しでモバイルのも同様。

334
00:13:54,090 --> 00:13:55,260
だからスウィフトも同様。

335
00:13:55,260 --> 00:13:57,540
>> そして、我々は、に行く場合
解釈language--

336
00:13:57,540 --> 00:14:05,010
language--その後、ここに解釈
同様に、さらに長いリスト。

337
00:14:05,010 --> 00:14:07,260
だから、あなただけのGoogleと場合
これらのためにWikipediaで見て、

338
00:14:07,260 --> 00:14:09,231
あなたは言語のすべての種類が表示されます。

339
00:14:09,231 --> 00:14:10,980
しかし、目的は、あります
今日は本当に、ちょうど

340
00:14:10,980 --> 00:14:13,680
多分これに沸きます
知的財産の問題

341
00:14:13,680 --> 00:14:18,200
およびエンドユーザによるとに読みやすさ
性能は、同様に別のとても重要です。

342
00:14:18,200 --> 00:14:21,080
>> これらの言語のうち、だから、
私たちはあなたを与えることができるなら、私は見てみましょう

343
00:14:21,080 --> 00:14:24,487
言語のほんのいくつかのサンプル。

344
00:14:24,487 --> 00:14:26,820
我々はを通過する必要はありません
際限なくすべての言語。

345
00:14:26,820 --> 00:14:29,720
あなたは今まで疑問に思っているものをA
特定の言語は次のようになりますか？

346
00:14:29,720 --> 00:14:31,562
私たちは、少し前見ました。

347
00:14:31,562 --> 00:14:33,520
なぜ私たちはカップルを取ることはありません
機能要求の。

348
00:14:33,520 --> 00:14:35,380
誰が何を見てみたいです
他の言語は次のようになりますか？

349
00:14:35,380 --> 00:14:35,620
うん。

350
00:14:35,620 --> 00:14:36,150
>> AUDIENCE：Javaの。

351
00:14:36,150 --> 00:14:36,540
>> DAVID J.マラン：Javaの。

352
00:14:36,540 --> 00:14:37,040
大丈夫。

353
00:14:37,040 --> 00:14:38,504
それでは、Javaへ行ってみましょう。

354
00:14:38,504 --> 00:14:42,300

355
00:14:42,300 --> 00:14:44,900
そして、ちょうどあなたにsample--を与えるために
我々は、これらすべてを書き出すことができ、

356
00:14:44,900 --> 00:14:47,670
それは速いだけになるだろう
誰か他の人のサンプルコードを見てください。

357
00:14:47,670 --> 00:14:48,170
大丈夫。

358
00:14:48,170 --> 00:14:50,330
だから、これは良い例でしょうか？

359
00:14:50,330 --> 00:14:52,040
おっと。

360
00:14:52,040 --> 00:14:52,540
OK。

361
00:14:52,540 --> 00:14:58,810
だからここのJavaバージョンです
プログラムは、私は、以前の「Hello World」を書きました

362
00:14:58,810 --> 00:15:01,900
>> だから、Javaの、あなたが頻繁によ
キーワード「クラス」を参照してください。

363
00:15:01,900 --> 00:15:03,779
その後、その後、いくつかの名前が表示されます。

364
00:15:03,779 --> 00:15:05,570
あなたは、中括弧が表示されます
私たちは前に見たように、

365
00:15:05,570 --> 00:15:08,153
時には、彼らは上に行きます
同じライン、時には他のライン、

366
00:15:08,153 --> 00:15:09,734
それは個人的な意思決定のようなものです。

367
00:15:09,734 --> 00:15:11,900
あなたのようなキーワードが表示されます
「パブリック」、「静的」、「無効」。

368
00:15:11,900 --> 00:15:13,790
しかし、私たちは「主」を参照してくださいました
「メイン」は、一般に

369
00:15:13,790 --> 00:15:17,220
デフォルトの関数の名前
またはコードのデフォルトのチャンクは、

370
00:15:17,220 --> 00:15:18,760
プログラムで実行されます。

371
00:15:18,760 --> 00:15:19,330
>> 「文字列」。

372
00:15:19,330 --> 00:15:20,850
我々は、以前の文字列で何を意味するのですか？

373
00:15:20,850 --> 00:15:23,480
私は一種のさりげなくそれを使用していました。

374
00:15:23,480 --> 00:15:25,100
文字列は何ですか？

375
00:15:25,100 --> 00:15:25,601
単語。

376
00:15:25,601 --> 00:15:27,058
これは、文字のシーケンスのようなものです。

377
00:15:27,058 --> 00:15:29,810
個々の文字、バックに
バック、通常の配列で、背中に、

378
00:15:29,810 --> 00:15:30,690
我々が議論してきたように。

379
00:15:30,690 --> 00:15:34,700
そして、実際には、この構文を参照してください。
ここでは、2角括弧？

380
00:15:34,700 --> 00:15:39,210
ここではその手段、ちょっとコンピュータ、
文字列の配列が付属しています。

381
00:15:39,210 --> 00:15:42,636
角括弧表記はあります
一般的にそれを示すために使用されます。

382
00:15:42,636 --> 00:15:44,510
そして、あなたはおそらくすることができます
何guess--を取ります

383
00:15:44,510 --> 00:15:46,580
これは、強調表示されません
コー​​ドの塊は、おそらくのですか？

384
00:15:46,580 --> 00:15:49,737

385
00:15:49,737 --> 00:15:50,639
>> AUDIENCE：出力？

386
00:15:50,639 --> 00:15:51,090
>> DAVID J.マラン：うん。

387
00:15:51,090 --> 00:15:52,506
これは、画面に何かを出力します。

388
00:15:52,506 --> 00:15:57,070
だから、「システム」の一種であります
お使いのコンピュータへの参照。

389
00:15:57,070 --> 00:15:59,620
「アウト」は、コンピュータの意味します
出力または画面。

390
00:15:59,620 --> 00:16:04,450
だから「system.out.print LNは「おそらく意味しますか？

391
00:16:04,450 --> 00:16:05,570
「LN。」

392
00:16:05,570 --> 00:16:09,570
以下のようなプリントラインはプログラマ
明らかにいくつかの単語を綴るします

393
00:16:09,570 --> 00:16:11,820
それらの全体と取ります
他の単語とのショートカット。

394
00:16:11,820 --> 00:16:13,260
しかし、「LN」はラインなので、印刷ラインです。

395
00:16:13,260 --> 00:16:17,370
だから、こんにちは」プリントアウト
世界！ "新しい行が続きます。

396
00:16:17,370 --> 00:16:18,300
>> だから、それはそれです。

397
00:16:18,300 --> 00:16:21,150
しかし、Javaは、彼らがよです
呼び出しオブジェクト指向。

398
00:16:21,150 --> 00:16:23,440
そして実際、ちょうど与えるために
他の定義のカップル

399
00:16:23,440 --> 00:16:26,420
そこにあなたがかもしれません
そこに、一般的には、参照してください。

400
00:16:26,420 --> 00:16:30,600
多くの異なる種類があります
言語が、最も一般的な

401
00:16:30,600 --> 00:16:37,830
手順または命令型言語です。

402
00:16:37,830 --> 00:16:41,600
機能があります。
ない言語、

403
00:16:41,600 --> 00:16:43,790
他の人が非機能的であることを意味します。

404
00:16:43,790 --> 00:16:47,740
そしてあります
オブジェクト指向言語。

405
00:16:47,740 --> 00:16:51,170
そして、これはおそらく最高です
ほとんどの言語の分類

406
00:16:51,170 --> 00:16:56,445
あなたは今までの並べ替えのために選択するであろうこと
典型的な商業プロジェクトの。

407
00:16:56,445 --> 00:16:58,910
>> これは、あまりにも多くのだろう
私はラットの穴を、考えます

408
00:16:58,910 --> 00:17:01,620
説明しようとするために、ダウンして行くために
様々な違い。

409
00:17:01,620 --> 00:17:04,599
しかし、言語
私たちは、このようにfar-- Cを見てきました

410
00:17:04,599 --> 00:17:07,680
手順またはであります
命令型言語。

411
00:17:07,680 --> 00:17:11,200
さらに最近考案
言語は申し訳ありません、になる傾向があり、

412
00:17:11,200 --> 00:17:14,430
オブジェクト指向、その手段
彼らはそれらに他の機能を持っています。

413
00:17:14,430 --> 00:17:18,130

414
00:17:18,130 --> 00:17:19,430
私はこの方法でそれを説明できますか？

415
00:17:19,430 --> 00:17:20,950
のがあってもそこにダウンしないようにしましょう​​。

416
00:17:20,950 --> 00:17:25,200
>> オブジェクト指向手段
あなたがimplement--することができます

417
00:17:25,200 --> 00:17:27,930
あなたは現実の世界をモデル化することができます
もう少し効果的。

418
00:17:27,930 --> 00:17:29,722
人類、時間をかけて、
うわー、考え出しました、

419
00:17:29,722 --> 00:17:32,430
私の言語ならば、それはいいだろう
この機能またはその機能を持っていました。

420
00:17:32,430 --> 00:17:34,830
そして、私たちはそのように持っている理由です
世界の多くの言語。

421
00:17:34,830 --> 00:17:37,670
合理的な人々、スマート
人々は、同意するか反対します

422
00:17:37,670 --> 00:17:41,000
そして、常にソートの上に一緒に来て
すべて一緒に新しい言語を開発。

423
00:17:41,000 --> 00:17:41,660
>> 適例。

424
00:17:41,660 --> 00:17:45,260
Appleがでスウィフトを発明しました
おそらく低下の期待

425
00:17:45,260 --> 00:17:47,950
iPhone開発にバー、
以前language--理由

426
00:17:47,950 --> 00:17:51,080
可能性のObjective-Cと呼ばれます
また、私たちのリスト上にありますhere--

427
00:17:51,080 --> 00:17:54,190
はるかに難解なとずっとでした
周りの人の心をラップしにくいです。

428
00:17:54,190 --> 00:17:57,690
そして、プログラミングのように間違いなくなってきています
より広く、よりアクセスし、

429
00:17:57,690 --> 00:18:00,580
でも人によって採用されました
以下の技術、goal--

430
00:18:00,580 --> 00:18:04,160
それはしようとする非常に勇敢な目標です
行うことで、参入障壁を下げます

431
00:18:04,160 --> 00:18:07,400
言語そのもの
を始めるしやすく、

432
00:18:07,400 --> 00:18:09,430
しかし劣らず強力な必然。

433
00:18:09,430 --> 00:18:10,560
>> そして、もう一つ他の言語。

434
00:18:10,560 --> 00:18:14,110
なぜ私たちは見ていません
Pythonのようなもので、

435
00:18:14,110 --> 00:18:18,090
その流行に非常に多く、これらの日です。

436
00:18:18,090 --> 00:18:19,570
Pythonの。

437
00:18:19,570 --> 00:18:20,464
サンプルプログラム。

438
00:18:20,464 --> 00:18:24,600

439
00:18:24,600 --> 00:18:26,700
どれどれ。

440
00:18:26,700 --> 00:18:28,790
「Hello World」の言語。

441
00:18:28,790 --> 00:18:30,180
これをやろう。

442
00:18:30,180 --> 00:18:33,625
"こんにちは世界。"

443
00:18:33,625 --> 00:18:35,375
これは与えどうかを見てみましょう
私たちの素晴らしい例。

444
00:18:35,375 --> 00:18:39,450

445
00:18:39,450 --> 00:18:39,950
OK。

446
00:18:39,950 --> 00:18:41,283
だから、これは実際に楽しいの一種です。

447
00:18:41,283 --> 00:18:43,330
あなたがこれまでグーグルのであれば
「Hello Worldの、「その

448
00:18:43,330 --> 00:18:47,000
最初のプログラムの一つであることを起こります
これまで近代的な言語で書かれました、

449
00:18:47,000 --> 00:18:51,830
ちょうど概念の証明として、あなたが見ることができます
このの実装のすべての種類。

450
00:18:51,830 --> 00:18:54,240
>> これらの言語の一部
私ものことを聞いていませんでした。

451
00:18:54,240 --> 00:18:59,770
しかし、あなたがのが基本に手放すsee--ことができ、
私は部分的には、数年前に学んだ1。

452
00:18:59,770 --> 00:19:02,720
これはあなたのための楽しい言語でした
、プログラマーとして、数に持っていました

453
00:19:02,720 --> 00:19:03,710
あなたのすべての行。

454
00:19:03,710 --> 00:19:05,626
ではない私が何であったかとは異なり、
私が書いていたときにやって

455
00:19:05,626 --> 00:19:08,380
黄色の文書上の擬似コード
以前のバイナリサーチのため、

456
00:19:08,380 --> 00:19:09,580
電話帳を検索します。

457
00:19:09,580 --> 00:19:11,810
>> だから、あなたが望んでいた場合
別の行に移動するには、

458
00:19:11,810 --> 00:19:15,780
あなたは文字通り入力し、
10に行く、または20にアクセスしてください。

459
00:19:15,780 --> 00:19:19,110
そして、あなたが行、書いている場合
大会が何をした、これはライン10です、

460
00:19:19,110 --> 00:19:22,545
これは、ライン20で、これはラインであります
30、40、間に何もないと、

461
00:19:22,545 --> 00:19:25,170
それによって、自分自身にいくつかの部屋を与えて
あなたが決める場合は、ちょっと待って、

462
00:19:25,170 --> 00:19:27,230
私はいくつかを追加している必要があります
どこかでより多くのコード。

463
00:19:27,230 --> 00:19:30,960
あなたはまだ9チャンスへの並べ替えを持っていました
あなたのプログラムの間にそれをで絞ります

464
00:19:30,960 --> 00:19:33,020
手動に持っていた前に、
すべての番号を変更。

465
00:19:33,020 --> 00:19:35,470
>> だから、これは私が何を意味するかの一種であります
私は世界が来ていると言うとき、

466
00:19:35,470 --> 00:19:36,303
新しい機能を持ちます。

467
00:19:36,303 --> 00:19:39,364
どこかの方法誰かに沿って
これはばかげている少年、実現しました。

468
00:19:39,364 --> 00:19:41,280
これは単に作成されます
プログラマのために働きます。

469
00:19:41,280 --> 00:19:44,200
そこで彼または彼女はちょうど種類の内蔵します
その上に新しい層

470
00:19:44,200 --> 00:19:46,910
あなたが心配する必要はありませんように
何行番号コードについて

471
00:19:46,910 --> 00:19:48,570
実際にオンになっています。

472
00:19:48,570 --> 00:19:54,940
>> だから、あなたが選択した可能性がある場合
一つの言語または別の？

473
00:19:54,940 --> 00:19:56,690
まあ、これは、これらの
言語あなたは傾向があります

474
00:19:56,690 --> 00:20:00,960
最も聞きします
あなた自身の世界、これらの日？

475
00:20:00,960 --> 00:20:02,680
のは、あまりにもObjective-Cのドロップダウンしてみましょう。

476
00:20:02,680 --> 00:20:06,416

477
00:20:06,416 --> 00:20:07,739
>> AUDIENCE：C＃の。

478
00:20:07,739 --> 00:20:08,530
DAVID J.マラン：C＃の。

479
00:20:08,530 --> 00:20:10,310
だから、私は色みましょう。

480
00:20:10,310 --> 00:20:13,190
私たちはどこかで私たちの他の色を持っていますか？

481
00:20:13,190 --> 00:20:14,550
だから、C＃の。

482
00:20:14,550 --> 00:20:16,390
そして、あなたは、C＃について何を知っていますか？

483
00:20:16,390 --> 00:20:18,940
春ものは気にしますか？

484
00:20:18,940 --> 00:20:20,707
>> 観客：それはプログラミング言語です。

485
00:20:20,707 --> 00:20:22,540
DAVID J.マラン：それは
プログラミング言語。

486
00:20:22,540 --> 00:20:23,200
OK。

487
00:20:23,200 --> 00:20:24,690
それは本当です。

488
00:20:24,690 --> 00:20:26,440
だから我々は、C＃の話をしています。

489
00:20:26,440 --> 00:20:29,230
C＃がで使用される傾向にあります
Windows環境、

490
00:20:29,230 --> 00:20:33,550
あなたは、Microsoftのソフトウェアを書いている場合
Windows用の、C＃は非常に一般的に使用され、

491
00:20:33,550 --> 00:20:38,560
それは、デスクトップソフトウェアのためだかどうか、または
Windowsの携帯電話上でも電話のソフトウェア、

492
00:20:38,560 --> 00:20:41,820
あなたがそれらを持っていた場合、
またはウェブ上であっても、あまりにも。

493
00:20:41,820 --> 00:20:44,642
そして、実際には、多分カリーム
以前のASPに言及？

494
00:20:44,642 --> 00:20:46,600
したがって、これらもあります
フレームワークと呼ばれるもの、

495
00:20:46,600 --> 00:20:51,040
これは我々が拡張することによって導入することができます。

496
00:20:51,040 --> 00:20:53,280
ASPのようなフレームワーク、。

497
00:20:53,280 --> 00:20:55,740
アクティブサーバーページを意味します。

498
00:20:55,740 --> 00:20:59,880
そして、これはコードとあります
プログラミングの方法

499
00:20:59,880 --> 00:21:03,490
それは一般的に、それが容易になります
Webベースのアプリケーションを作成します。

500
00:21:03,490 --> 00:21:07,530
言い換えれば、それは、超であろう
ウェブサイトを書くことが超迷惑

501
00:21:07,530 --> 00:21:09,469
その言語Cで
我々は前に見てきました、

502
00:21:09,469 --> 00:21:12,510
あなたが印刷+ Fを使用する必要があるため、
あなたがそのキーワードを使用する必要があります

503
00:21:12,510 --> 00:21:13,940
「メイン」と中括弧。

504
00:21:13,940 --> 00:21:16,720
難解な構文の多く
そして、アプローチが実装します

505
00:21:16,720 --> 00:21:19,195
かなり複雑である何か。

506
00:21:19,195 --> 00:21:20,240
Webページ。

507
00:21:20,240 --> 00:21:23,800
>> そのため、他の言語が進化してきました
そういうことを容​​易にします。

508
00:21:23,800 --> 00:21:26,890
そして今度は、人々が出ています
フレームワーク、ツールの一種で

509
00:21:26,890 --> 00:21:30,520
あなたはそれを作ることを使用できること
Webページを記述することも簡単。

510
00:21:30,520 --> 00:21:33,070
だから例えば、作るために
このはるかに具体的な、

511
00:21:33,070 --> 00:21:36,390
私はちょうど開いてみましょう
瞬間のためのテキストフ​​ァイル。

512
00:21:36,390 --> 00:21:39,380
>> そして、あなたは昨日思い出すかもしれません
私たちは何かを言っていること

513
00:21:39,380 --> 00:21:41,210
以下のように、これはウェブページです。

514
00:21:41,210 --> 00:21:42,300
HTML。

515
00:21:42,300 --> 00:21:45,340
閉じるHTML。

516
00:21:45,340 --> 00:21:48,500
私は頭を飛ばしてみようと
ちょうどここに本文を行います。

517
00:21:48,500 --> 00:21:52,810
私が望んでいたと仮定
書かないでの "Hello World"

518
00:21:52,810 --> 00:21:57,020
ダビデはあるが、「こんにちはデビッド、 "
現在ログインしているユーザーの名前。

519
00:21:57,020 --> 00:22:00,270
どのようなもの
ASPが行う、またはJSP--ます

520
00:22:00,270 --> 00:22:04,060
これはJavaサーバpages--ですか
他のフレームワークの任意の数

521
00:22:04,060 --> 00:22:05,435
彼らはそれ自体、言語じゃないです。

522
00:22:05,435 --> 00:22:07,351
彼らはただのようにしています
そのあなたの追加のソフトウェア

523
00:22:07,351 --> 00:22:10,490
お使いの環境にインストールします
それはちょうどそれが簡単にプログラムすることを可能にします。

524
00:22:10,490 --> 00:22:15,670
>> 例えばだからではなく、しなければなりません
「こんにちは、printfの（ "デビッド"）」のようなもの

525
00:22:15,670 --> 00:22:17,510
か何かそのの
一種の共同mingling--

526
00:22:17,510 --> 00:22:20,840
私たちが見てきたコードの種類before--
あなたは、はるかに簡単な何かをするだろう、

527
00:22:20,840 --> 00:22:26,190
「名％。 "のような

528
00:22:26,190 --> 00:22:28,660
そしてそう、これらのフレームワーク、
ASP--と私のような

529
00:22:28,660 --> 00:22:31,212
私が得ている場合は覚えていません
ASPのためのちょうど右の構文。

530
00:22:31,212 --> 00:22:33,100
JSPはlittle--がこの権利ですか？

531
00:22:33,100 --> 00:22:36,500
>> ASPとなるように、これはあります
特別な構文の一種

532
00:22:36,500 --> 00:22:39,830
いくつかの開発者が決定したことを
これは人々を助けるかもしれません。

533
00:22:39,830 --> 00:22:43,000
そして、私はより簡潔に表現することができます
インスタンスのプレースホルダ、。

534
00:22:43,000 --> 00:22:47,187
同様に、ここで、どこに価値を置きます
この値の名前は、N-A-M-Eではありません

535
00:22:47,187 --> 00:22:48,520
それはそこに格納されているいくつかの値です。

536
00:22:48,520 --> 00:22:50,728
したがって、この文脈での「名前」、
我々は変数を呼び出します。

537
00:22:50,728 --> 00:22:52,760
代数は、変数を持っています
xおよびy及びz等。

538
00:22:52,760 --> 00:22:56,021
プログラマは、変数を使用します
x、y及びzよりもより記述、

539
00:22:56,021 --> 00:22:56,520
一般的に。

540
00:22:56,520 --> 00:23:01,020
だから、「名前」は、文字通りいくつかの種類になります
以下のようなもののためのメモリコンテナの

541
00:23:01,020 --> 00:23:05,440
D-A-V-I-D、私の名前、または誰のために
他のウェブサイトにログインしています。

542
00:23:05,440 --> 00:23:09,300
>> そして、これは利便性の一種であります
あなたは、特定の環境で取得します。

543
00:23:09,300 --> 00:23:14,220
だから、ASPのようなC＃と何かが非常だろう
一般的に、Windowsの世界で使用され、

544
00:23:14,220 --> 00:23:16,460
そのデスクトップ用か
ソフトウェアまたはWebサーバー、

545
00:23:16,460 --> 00:23:21,490
あなたのサーバーが順番にされている場合は特に
マイクロソフトWindowsおよびMicrosoftを実行しています

546
00:23:21,490 --> 00:23:25,810
IIS--またはインターネットインフォメーション
サーバー、私は頭字語を取得する場合right--

547
00:23:25,810 --> 00:23:27,800
これは、MicrosoftのWebサーバです。

548
00:23:27,800 --> 00:23:30,820
>> だから何他の言語を
に精通して人々は、

549
00:23:30,820 --> 00:23:35,228
または、あなたは聞いたことがあります
少なからず？

550
00:23:35,228 --> 00:23:38,262
>> 聴衆：私は、Pythonのことを知っています
[聞こえない]人気の一種。

551
00:23:38,262 --> 00:23:39,470
DAVID J.マラン：非常に人気。

552
00:23:39,470 --> 00:23:45,490
そこでここではPythonは非常に頻繁に使用されています
科学アプリケーションやデータで

553
00:23:45,490 --> 00:23:48,330
あなたは多くを持っている科学、
あなたが分析するデータの

554
00:23:48,330 --> 00:23:50,413
あなたが使用したいです
それのためのプログラミング言語。

555
00:23:50,413 --> 00:23:53,640
Rは、一般的に、そのために使用されるかもしれません
同様に、統計的な文脈インチ

556
00:23:53,640 --> 00:23:56,400
しかし、Pythonは非常に多くのを持っています
機能が組み込まれています。

557
00:23:56,400 --> 00:23:58,850
だから、多くの追加
人々が言うようにライブラリ。

558
00:23:58,850 --> 00:24:01,260
>> 図書館は、単にコレクションです
コー​​ドのそのほかの人々

559
00:24:01,260 --> 00:24:04,218
あなたがそうあなたことを使用できることを書きました
これらの車輪を再発明する必要はありません。

560
00:24:04,218 --> 00:24:07,430
それでPythonは非常に一般的です
データ科学用途に使用されます。

561
00:24:07,430 --> 00:24:09,930
しかし、それは非常に一般的にもです
Webアプリケーションで使用されます。

562
00:24:09,930 --> 00:24:12,780
あなたは、動的に実装することができます
Pythonを使用してウェブサイト。

563
00:24:12,780 --> 00:24:15,210
>> そして、動的ウェブサイトによって、I
単に静的ではないコンテンツを意味します

564
00:24:15,210 --> 00:24:19,530
我々はによって、昨日の作成のように
ちょうどハードラテン語のテキストでのコーディング

565
00:24:19,530 --> 00:24:21,820
およびその他のようなもの、
しかし、能力ではなく

566
00:24:21,820 --> 00:24:25,367
ログインするために、能力が購入します
何か、チェックアウトする能力

567
00:24:25,367 --> 00:24:26,950
あなたのショッピングカート、などと。

568
00:24:26,950 --> 00:24:30,590
それはすべて、ダイナミズムとあなたを必要とします
これらのいずれかのようないくつかの言語を必要としています。

569
00:24:30,590 --> 00:24:35,060
>> AUDIENCE：だからPythonには、独自のを持っていません
好きなのに同様の拡張、[聞こえません]

570
00:24:35,060 --> 00:24:36,060
DAVID J.マラン：それはありません。

571
00:24:36,060 --> 00:24:42,250
だからPythonの、ジャンゴの世界であります
Python用の非常に人気のフレームワーク。

572
00:24:42,250 --> 00:24:46,520
WSGIだ別のメカニズムであります
この異なるの並べ替え

573
00:24:46,520 --> 00:24:47,640
しかし、精神面で似ています。

574
00:24:47,640 --> 00:24:52,200
それはあなたがアドオンことができます
サーバー上のPythonコードを実行します。

575
00:24:52,200 --> 00:24:53,950
ええother--あります。

576
00:24:53,950 --> 00:24:57,250
したがって、これらは、我々はフレームワークを呼び出します。

577
00:24:57,250 --> 00:24:58,870
そして、それは虐待の少しです。

578
00:24:58,870 --> 00:25:00,920
これは、Webサーバ技術の以上です。

579
00:25:00,920 --> 00:25:04,610
しかし、我々はそれをシンプルに保つと出してあげます
それもかかわらず、この列インチ

580
00:25:04,610 --> 00:25:05,780
>> OK。

581
00:25:05,780 --> 00:25:07,850
WSGI。

582
00:25:07,850 --> 00:25:09,020
WSGI。

583
00:25:09,020 --> 00:25:12,100
別のthing--実際、みましょう
私は、独自の列にそれを移動し、

584
00:25:12,100 --> 00:25:17,000
私は自分自身で叫ぶ。なぜなら
同じバケツに入れます。

585
00:25:17,000 --> 00:25:24,910
のは、サーバーにこれを入れてみましょう
機能、の言わせて。

586
00:25:24,910 --> 00:25:26,710
それは技術的な用語ではありません。

587
00:25:26,710 --> 00:25:29,180
>> そこでここではWSGIかもしれません。

588
00:25:29,180 --> 00:25:32,580
古いであるCGIは、あります
言語を提供するための技術

589
00:25:32,580 --> 00:25:35,890
PerlやPHP、またはいくつかの他のような。

590
00:25:35,890 --> 00:25:39,000
繰り返しますが、私はこれらの用語を述べました
ソートのそれらを深く根付いたことが山ほどではありません、

591
00:25:39,000 --> 00:25:40,749
しかし、あなたがいることを見れば
彼らは何か

592
00:25:40,749 --> 00:25:42,130
あなたは、単により多くを読むためにグーグル。

593
00:25:42,130 --> 00:25:46,110
本当のジュースはありません
これらの事のいくつかに。

594
00:25:46,110 --> 00:25:47,850
>> しかし、ここでは、言語に戻りましょう。

595
00:25:47,850 --> 00:25:50,499
私たちは、C＃、Pythonのについて話しました。

596
00:25:50,499 --> 00:25:52,790
あなたは他に何を使用する場合があります
ウェブは、これらの日のプログラミング？

597
00:25:52,790 --> 00:25:54,302
のは、そのまだに焦点を当ててみましょう。

598
00:25:54,302 --> 00:25:55,247
>> AUDIENCE：PHP。

599
00:25:55,247 --> 00:25:56,080
DAVID J.マラン：PHP。

600
00:25:56,080 --> 00:25:57,413
とのはその1に戻ってきましょう。

601
00:25:57,413 --> 00:25:59,310
そうPHPは、非常に一般的に使用されます。

602
00:25:59,310 --> 00:26:01,560
PHPは、いわれのない非難を取得する傾向があります。

603
00:26:01,560 --> 00:26:05,790
これは、実装言語としてスタート
多分必ずしもなかった人々によって、

604
00:26:05,790 --> 00:26:06,960
最高の言語設計者。

605
00:26:06,960 --> 00:26:11,290
そして、あなたはのすべての種類を読み取ることができます
PHPがどのように悪いについてのオンライン記事。

606
00:26:11,290 --> 00:26:13,660
残念ながら、これは
症状、部分的には、

607
00:26:13,660 --> 00:26:18,727
ただ宗教的な議論の
それはプログラマーの間で噴火します。

608
00:26:18,727 --> 00:26:20,560
そして、これは何かであります
心に留めておく価値、

609
00:26:20,560 --> 00:26:24,410
ビジネスの観点から、その
それは技術的な人々のために非常に簡単です

610
00:26:24,410 --> 00:26:26,900
すべては自分で後処理を取得します
特定の事柄についての意見。

611
00:26:26,900 --> 00:26:29,566
そして、それは必ずしも意味するものではありません
1は最大音量叫んでいること

612
00:26:29,566 --> 00:26:31,870
または最強と、
angriest意見は正しいです。

613
00:26:31,870 --> 00:26:34,100
多くの時間、それは本当に
ただ問題ではありません。

614
00:26:34,100 --> 00:26:37,970
>> だから人々は何でも主張されています
独自のバイアスや快適ゾーンがあります。

615
00:26:37,970 --> 00:26:40,760
そして、あなたは維持する必要があります
作るときにこのことを念頭に置いて

616
00:26:40,760 --> 00:26:42,622
決定、ちょうどその
誰かが言うので、

617
00:26:42,622 --> 00:26:45,080
これは、のために適切な言語であります
真のかもしれない仕事、

618
00:26:45,080 --> 00:26:48,350
それはまた、ちょうどそれがあるかもしれません
自分のスキル内で適切な言語

619
00:26:48,350 --> 00:26:49,267
セットや快適ゾーン。

620
00:26:49,267 --> 00:26:52,600
これは悪いことではありませんが、あなたは認識すべきです
そこにいくつかの状況があるかもしれません。

621
00:26:52,600 --> 00:26:54,440
いくつかの客観あります
間違った文、

622
00:26:54,440 --> 00:26:59,080
Cは、使用する間違った言語であるように
ウェブサイトを実装するため、これらの日

623
00:26:59,080 --> 00:27:00,520
ほとんどいつも。

624
00:27:00,520 --> 00:27:03,370
しかし、それは不合理ではないのです
これらのいずれかと言うこと

625
00:27:03,370 --> 00:27:05,700
我々はこれまでに丸で囲まれていることを間違っています。

626
00:27:05,700 --> 00:27:08,180
>> PHPは多くのバージョンを経験してきました。

627
00:27:08,180 --> 00:27:11,310
だから言語バージョンを持っている傾向があります
それらに関連付けられている数字。

628
00:27:11,310 --> 00:27:15,390
PHPは、今、私が思うに、最大​​バージョン7であります
それはかなりの時間を回避されています。

629
00:27:15,390 --> 00:27:18,270
そして言語は、新しい取るにつれて
彼らはしばしば、新しい機能を得ます。

630
00:27:18,270 --> 00:27:22,510
しかし、あなたはこれを留意する必要があり
あなたのウェブサイトがあった場合のため

631
00:27:22,510 --> 00:27:27,539
PHPのバージョン7に実装されたが
あなたは、あなたのウェブサイトを実行しようとしています

632
00:27:27,539 --> 00:27:29,830
または多分あなたは外注してきました
あなたのコードの開発

633
00:27:29,830 --> 00:27:31,960
他の誰かに、彼らは郵送
あなたにそれか、あなたにそれを送信

634
00:27:31,960 --> 00:27:33,960
そして、彼らは入れて、ここで言います
このWebサーバー上で、

635
00:27:33,960 --> 00:27:36,610
Webサーバーは、いくつかある場合
それはだかどうかoutdated--年

636
00:27:36,610 --> 00:27:39,465
独自のサーバーまたはWeb host--
それが実際に実行されない場合があります。

637
00:27:39,465 --> 00:27:41,340
したがって、これらは種類があります
物事の誰か

638
00:27:41,340 --> 00:27:44,067
に留意する必要があります
サイトをアップグレードするとき

639
00:27:44,067 --> 00:27:45,650
初めての場合は、それを実装します。

640
00:27:45,650 --> 00:27:46,900
>> 私は以前にJavaScriptを聞きました。

641
00:27:46,900 --> 00:27:50,570
だから、JavaScriptは面白いです
その内の1つは、それが一般的です

642
00:27:50,570 --> 00:27:53,030
我々が表示されますよう、クライアント側、
休憩の後、その

643
00:27:53,030 --> 00:27:55,000
それがユーザーのブラウザで実行されますことを意味します。

644
00:27:55,000 --> 00:27:58,400
しかし、あなたはまた、実行することができます
JavaScriptのこれらの日

645
00:27:58,400 --> 00:28:03,450
呼ばれるものを使用して、
Node.jsの、Node.jsの

646
00:28:03,450 --> 00:28:08,000
ランニングのための機構であり、
JavaScriptコードサーバ側、

647
00:28:08,000 --> 00:28:12,430
代わりにPythonを使用しての、または
PHP、又は他のそのような言語。

648
00:28:12,430 --> 00:28:17,820
>> JavaScriptが特に適しています
チャットアプリケーションとリアルタイムのために

649
00:28:17,820 --> 00:28:22,050
アプリケーション、PHPは素晴らしいではありません一方、
何かを実装するための言語

650
00:28:22,050 --> 00:28:25,050
チャットサーバ、ユーザー様
常にそれに接続されたままです。

651
00:28:25,050 --> 00:28:28,760
PHPは、私を訪れるの詳細です
一度、結果を取り戻します、

652
00:28:28,760 --> 00:28:31,790
そしてその後、別のリンクをクリックして、いくつかの
今から数秒または数分。

653
00:28:31,790 --> 00:28:36,020
Node.jsのとJavaScriptをすることができ、一方、
永続的な接続のためのより多くの使用。

654
00:28:36,020 --> 00:28:40,840
あなたが疑われるその他の言語
一般的に、ウェブもののために使用されていますか？

655
00:28:40,840 --> 00:28:42,800
>> 観客：jQueryのフレームワークだろうか？

656
00:28:42,800 --> 00:28:44,050
>> DAVID J.マラン：良い質問。

657
00:28:44,050 --> 00:28:44,700
どちらでもありません。

658
00:28:44,700 --> 00:28:51,210
私は、ライブラリ、jQueryのを呼び出します
再びライブラリーは、コードのちょうど束であります

659
00:28:51,210 --> 00:28:53,250
他の誰かが持っていること
ことは、一般的に書かれました

660
00:28:53,250 --> 00:28:56,390
いくつかの問題を解決すること
簡単に、うまくいけば、それを作ります

661
00:28:56,390 --> 00:28:57,760
あなたのために仕事をします。

662
00:28:57,760 --> 00:29:00,820
そして、私は、の一例をやらせます
ウェブの文脈でこの。

663
00:29:00,820 --> 00:29:03,910
>> ウェブの文脈ではあります
この言語は、JavaScript、

664
00:29:03,910 --> 00:29:06,690
我々は後で見ること、それによってあなた
this--のようなものを言うかもしれません

665
00:29:06,690 --> 00:29:10,060
"のdocument.getElementById。」

666
00:29:10,060 --> 00:29:11,490
そして、私はそれが昨日何を呼ぶのですか？

667
00:29:11,490 --> 00:29:16,800
まず、私が思うに、私が与えた固有のIDました
このように見えた要素へ。

668
00:29:16,800 --> 00:29:23,110
最初の「PのID = ""> "とし、私たちは持っていました
「ダミーテキスト、「エトセトラのような。

669
00:29:23,110 --> 00:29:28,210
だから私はプログラムを書いていた場合
JavaScriptは何とか、操作します

670
00:29:28,210 --> 00:29:30,830
我々のWebページを変更します
昨日で遊んでいました、

671
00:29:30,830 --> 00:29:33,010
私はこれを使用します
コー​​ドの行を強調

672
00:29:33,010 --> 00:29:38,700
HTMLの特定のスニペットを取得します
私のページから、その特定のノード、

673
00:29:38,700 --> 00:29:39,680
我々はそれを呼ぶように。

674
00:29:39,680 --> 00:29:44,540
>> しかし、jQueryのではなく、執筆
この、これは生のJavaScript code--です

675
00:29:44,540 --> 00:29:48,870
ただ箱から取り出し、それはどのようにあなたです
あなただけではなく、言うit--書き込み、

676
00:29:48,870 --> 00:29:50,260
"＃最初。"

677
00:29:50,260 --> 00:29:52,330
それは同等です。

678
00:29:52,330 --> 00:29:56,040
そして、とてもこれだけに基づいて、
難解な例では、どのようなおそらく

679
00:29:56,040 --> 00:29:57,870
jQueryのを使用するための引数がありますか？

680
00:29:57,870 --> 00:30:01,390

681
00:30:01,390 --> 00:30:05,111
なぜ開発者は次のようにライブラリを使用します
この分離された例に基づいてjQueryの、

682
00:30:05,111 --> 00:30:05,610
おそらく？

683
00:30:05,610 --> 00:30:06,335
>> AUDIENCE：少ないコード。

684
00:30:06,335 --> 00:30:06,780
>> DAVID J.マラン：うん。

685
00:30:06,780 --> 00:30:07,530
これは、少ないコードです。

686
00:30:07,530 --> 00:30:09,070
これは、入力するだけで高速です。

687
00:30:09,070 --> 00:30:11,690
対位法は、
それは恐ろしい見えること。

688
00:30:11,690 --> 00:30:13,540
あなたは本当にそれが左から右に読む​​ことができません。

689
00:30:13,540 --> 00:30:16,730
実際に、それはほとんどだから
句読点今の代わりに、実際の言葉、

690
00:30:16,730 --> 00:30:20,950
私は種類のそれを推測することができます
"のdocument.getElementByIdは」を取得します

691
00:30:20,950 --> 00:30:23,640
そのIDによって文書からの要素。

692
00:30:23,640 --> 00:30:26,750
私は実際にはそのようなを使用することはできません
ここでこの事からニーモニック。

693
00:30:26,750 --> 00:30:27,680
>> だから、それはトレードオフです。

694
00:30:27,680 --> 00:30:30,763
来る洗練があります
多くの場合、特に、ライブラリを使用してで

695
00:30:30,763 --> 00:30:31,440
jQueryのような。

696
00:30:31,440 --> 00:30:34,700
しかし、現実には、jQueryのようなものがありあり
事実上の標準となって

697
00:30:34,700 --> 00:30:38,110
その結果、ほとんど誰これらの
JavaScriptコードを書き込み日

698
00:30:38,110 --> 00:30:41,520
jQueryのか何かを使用しています
それのように、とはもはや書き込むことはありません

699
00:30:41,520 --> 00:30:45,200
このような冗長な表現
この、再びなぜなら、人類

700
00:30:45,200 --> 00:30:47,850
したこと、すごい、学習しています
機会を逃したの並べ替え

701
00:30:47,850 --> 00:30:49,030
私たちの生活を容易にします。

702
00:30:49,030 --> 00:30:51,140
だから、人間は自分たちの生活を容易にします。

703
00:30:51,140 --> 00:30:53,310
良い質問。

704
00:30:53,310 --> 00:30:55,870
>> 考慮すべき他の言語。

705
00:30:55,870 --> 00:30:58,660
私はこのうち、と言うでしょう
リストRubyは非常に人気です。

706
00:30:58,660 --> 00:31:01,310
だからの世界では
Rubyは、フレームワークがあります

707
00:31:01,310 --> 00:31:03,590
非常に人気があると呼ばれるレール、。

708
00:31:03,590 --> 00:31:06,880
だから、Ruby on Railsがあります
一般的に式を使用していました。

709
00:31:06,880 --> 00:31:10,330
また、この世界では、私を聞かせて
ウェブもののためのサークルのJava、

710
00:31:10,330 --> 00:31:14,160
ここでのJavaの世界では
あなたは、JSP、またはJavaを持っている可能性があります

711
00:31:14,160 --> 00:31:18,450
一般的な技術であるサーブレット、。

712
00:31:18,450 --> 00:31:22,560
そして、これはちょうど、再び使用する方法であります
サーバー環境でその言語。

713
00:31:22,560 --> 00:31:23,520
>> だから、これは何を意味するのでしょうか？

714
00:31:23,520 --> 00:31:25,770
あなたは、物理を持っていれば
サーバー、あなたは文字通りだろう

715
00:31:25,770 --> 00:31:30,510
Webサーバーソフトウェアをダウンロード
そして、このような方法でそれをインストールします

716
00:31:30,510 --> 00:31:33,510
あなたは、のいずれかのためのサポートを持っていること
これらのフレームワーク、とあなた

717
00:31:33,510 --> 00:31:37,260
、順番に、1を使用することができますか
これらの言語のより。

718
00:31:37,260 --> 00:31:40,260
そして、現実には、あなたがサインアップする場合
Webホストまたはクラウドのいくつかのような

719
00:31:40,260 --> 00:31:41,968
我々が話をしたサービス
約昨日、多くの場合、

720
00:31:41,968 --> 00:31:44,885
ものはただ付属しています
あなたのためにマシンの構成。

721
00:31:44,885 --> 00:31:46,510
あなたはこれを手動で設定する必要はありません。

722
00:31:46,510 --> 00:31:51,040
あなたがした場合しかし、これはどこの役割です
システム管理者の、いわば、

723
00:31:51,040 --> 00:31:51,860
戦場に出ます。

724
00:31:51,860 --> 00:31:54,151
彼または彼女は実際に行うことになります
あなたのためのもの、この種の、

725
00:31:54,151 --> 00:31:58,510
いわゆるウェブマスター
あなたのためにこれを行うことが多いだろう。

726
00:31:58,510 --> 00:31:59,010
大丈夫。

727
00:31:59,010 --> 00:32:03,300
これらのここでのいくつかの上の任意の質問？

728
00:32:03,300 --> 00:32:06,690
または任意の機会に
すべての言語について質問するには？

729
00:32:06,690 --> 00:32:09,500
フレームワーク？

730
00:32:09,500 --> 00:32:11,530
そして、私が紹介しましょう
ただ一つの他のライブラリ

731
00:32:11,530 --> 00:32:13,150
それはまた、これらの日は非常に一般的です。

732
00:32:13,150 --> 00:32:15,340
このリストは無限に行くことができます。

733
00:32:15,340 --> 00:32:19,140
>> そして、このライブラリは一種のです
好意から落ち始めて。

734
00:32:19,140 --> 00:32:19,850
それは、周りされています。

735
00:32:19,850 --> 00:32:22,040
これは、によって普及しました。
いくつかの時間のためのTwitter。

736
00:32:22,040 --> 00:32:24,470
そして今、ウェブサイトの多くを、
開発者の多くは、それを使用しています。

737
00:32:24,470 --> 00:32:26,629
しかし、新しい物事が来ています
アウトに沿ってきます。

738
00:32:26,629 --> 00:32:29,420
しかし、私はちょうどあなたに意味を与えてみましょう
それはライブラリを使用するために何を意味するのか。

739
00:32:29,420 --> 00:32:32,250
だからもう一度、JavaScriptがあります
非常に人気のある言語。

740
00:32:32,250 --> 00:32:35,340
CSS、またはカスケーディングスタイルシート、
我々は昨日について話しました。

741
00:32:35,340 --> 00:32:36,600
それは、あまりにも、遍在です。

742
00:32:36,600 --> 00:32:40,130
誰も今日のWebページを行うものではありません
HTMLとCSSの最低限を使用せず。

743
00:32:40,130 --> 00:32:42,510
しかし、それは必ずしも簡単ではありません
特定の物事を行うには。

744
00:32:42,510 --> 00:32:46,281
>> だから私はgetbootstrap.comに行きましょう。

745
00:32:46,281 --> 00:32:46,780
おっと。

746
00:32:46,780 --> 00:32:48,280
それは我々が綴る方法はありません。

747
00:32:48,280 --> 00:32:52,410
Getbootstrap.com、これ
私をリードしようとしています

748
00:32:52,410 --> 00:32:56,140
このライブラリのランディングページへ。

749
00:32:56,140 --> 00:32:59,720
そこで、彼らは寛大に呼び出します
自分自身のフレームワーク、これ

750
00:32:59,720 --> 00:33:02,032
種の種類の公平です、
私はまだそれを呼び出すことになります

751
00:33:02,032 --> 00:33:03,490
フレームワークよりもライブラリのより。

752
00:33:03,490 --> 00:33:05,760
しかし、これらは単なる議論の余地のセマンティクスです。

753
00:33:05,760 --> 00:33:12,360
私は自分のCSSタブに行こうと
私はこのような何かに行ってみましょう。

754
00:33:12,360 --> 00:33:15,450
>> だから、私たちの形が見えたものを思い出します
Cloud9上の昨日のような？

755
00:33:15,450 --> 00:33:16,370
それはかなり醜いでした。

756
00:33:16,370 --> 00:33:17,320
オールドスクールボタン。

757
00:33:17,320 --> 00:33:20,420
私はボタンがによって灰色だったと思います
デフォルト。そして、すべてが本当にありました

758
00:33:20,420 --> 00:33:22,420
かなり乱雑にフォーマットされています。

759
00:33:22,420 --> 00:33:26,940
だから、あなたが見て、あなたのWeb​​フォームをしたい場合
少しは私がここにはズームインしてみましょうnicer--。

760
00:33:26,940 --> 00:33:30,050
>> そして、本当に私は立派でわずか
非常にせこい美学を意味します。

761
00:33:30,050 --> 00:33:35,390
だから、メールボックスが持っているかに気づきます
それに丸みを帯びた長方形のコーナー。

762
00:33:35,390 --> 00:33:37,010
だから、そこに少しクリーナーです。

763
00:33:37,010 --> 00:33:40,770
その単語のメールに注意してください
私が入力を開始するまであり

764
00:33:40,770 --> 00:33:41,797
そしてそれが消えます。

765
00:33:41,797 --> 00:33:43,130
だから、ちょっといい機能です。

766
00:33:43,130 --> 00:33:46,046
事は一種のであることに注目してください
あなたはこののものも、うまく輝きます

767
00:33:46,046 --> 00:33:49,069
お使いのブラウザから無料で入手、
これのいくつかは、また、ライブラリであります

768
00:33:49,069 --> 00:33:51,360
他の人が持っているコード
あなたにこれを与えること書かれました。

769
00:33:51,360 --> 00:33:53,480
>> このようなもの
私に私のパスワードを提供します。

770
00:33:53,480 --> 00:33:58,480
このボタンは、より少しセクシーです
デフォルト。今流行中の非常に。

771
00:33:58,480 --> 00:34:03,570
これまでのiOS 7以降かそこら、
世界は非常に平坦得ています、

772
00:34:03,570 --> 00:34:09,000
世界は前に持っていたのに対し、
ドロップシャドウのたくさん、たくさん

773
00:34:09,000 --> 00:34:11,040
アイコンの反射の。

774
00:34:11,040 --> 00:34:14,170
多くの衣料品の世界のように、
行ったり来たりのファッショントレンドがあります。

775
00:34:14,170 --> 00:34:16,190
これですべてがお使いの携帯電話に平坦です。

776
00:34:16,190 --> 00:34:19,159
>> 実際には、ボタン上のあなた
iPhoneは今ちょうど青いリンクです。

777
00:34:19,159 --> 00:34:21,000
多くの場合であっても円形のボタンがありません。

778
00:34:21,000 --> 00:34:22,791
したがって、これらは単なるものです
その内と外出

779
00:34:22,791 --> 00:34:26,659
流行の、そしてどのようにあなたがかもしれないので、これはあります
より近代的な探してWebフォームを作成します。

780
00:34:26,659 --> 00:34:27,159
ボタン。

781
00:34:27,159 --> 00:34:29,190
だから、ブートストラップはかなりのボタンがたくさんあり​​ます。

782
00:34:29,190 --> 00:34:33,639
ですから、青のボタンをしたい場合は、
緑のボタン、ブルー、オレンジ、赤。

783
00:34:33,639 --> 00:34:35,840
ブートストラップは、それが容易になります
これらのことを行います。

784
00:34:35,840 --> 00:34:38,131
これらは、物事の種類があります
あなたは絶対にできること

785
00:34:38,131 --> 00:34:41,840
CSSでそして昨日行っています
HTML、それは首のちょうど痛みです。

786
00:34:41,840 --> 00:34:44,840
だから代わりに、どのようなブートストラップだろう
あなたが持っていることは、このようなものです。

787
00:34:44,840 --> 00:34:48,960
>> あなたがしたい場合button--は、これを判明します
私たちが使用していなかったHTMLタグがありますyesterday--

788
00:34:48,960 --> 00:34:53,070
そしてあなたはそれが見てみたいです
この緑のボタンのように、

789
00:34:53,070 --> 00:34:57,380
あなたは文字通りそれにクラスを与え、
これは、私たちは、昨日の話をしました

790
00:34:57,380 --> 00:34:59,710
「BTN-成功BTN。」の

791
00:34:59,710 --> 00:35:00,971
>> なぜこれらの言葉？

792
00:35:00,971 --> 00:35:03,470
Twitterやブートストラップの著者、
それらの言葉を思い付きました。

793
00:35:03,470 --> 00:35:05,428
彼らは呼ばれている可能性が
彼ら彼らが望むもの。

794
00:35:05,428 --> 00:35:08,480
しかし、あなたが今得ていることです
この場合には、ツイッターで他の誰か、

795
00:35:08,480 --> 00:35:12,360
あなたが作るん方法を考え出しました
ボタンがきれいと緑に見えます。

796
00:35:12,360 --> 00:35:15,580
彼らは、その機能をパッケージ化
CSSクラスでは、「BTN」と呼ばれます

797
00:35:15,580 --> 00:35:19,790
そして「BTN-成功、「私たちのいずれかができますように
今でも考えずにそれを使用

798
00:35:19,790 --> 00:35:20,290
それ。

799
00:35:20,290 --> 00:35:22,880
そこで、彼らは離れて抽象化しています
緑のボタンの概念

800
00:35:22,880 --> 00:35:25,320
私たちは気にする必要はありません
それを自分自身を実装します。

801
00:35:25,320 --> 00:35:28,520
私たちは、実際に実装に集中することができます
私たちに興味のあるもの。

802
00:35:28,520 --> 00:35:30,902
>> ここでは下にスクロールします。

803
00:35:30,902 --> 00:35:32,110
画面上のエラーメッセージ。

804
00:35:32,110 --> 00:35:35,440
時には、あなたは少しのメッセージをしたいです
ブラウザの上部に表示されます。

805
00:35:35,440 --> 00:35:39,729
私たちのいずれかが一部でこれを行うことができます
努力、昨​​日のレッスンの後、

806
00:35:39,729 --> 00:35:40,770
しかし、なぜあなたは気にしますか？

807
00:35:40,770 --> 00:35:42,540
すなわち、このような退屈な
美的詳細。

808
00:35:42,540 --> 00:35:44,248
上に立つのをしてみましょう
ブートストラップの肩

809
00:35:44,248 --> 00:35:49,440
そして彼らは私たちにこのようなものを与えてみましょう、
我々は文字通り、赤いボックスを取得する場合には、

810
00:35:49,440 --> 00:35:53,220
ちょうど段落を行う必要があります
残念of--クラスとタグ。

811
00:35:53,220 --> 00:35:57,307
「BG-危険性は「私たちを与えるだろう
代わりにこの赤みがかっボックス。

812
00:35:57,307 --> 00:35:59,140
今度は、に行ってみましょう
より興味深いです。

813
00:35:59,140 --> 00:36:02,950
私はのトップに戻る場合
このページとは、コンポーネントにアクセスしてください

814
00:36:02,950 --> 00:36:05,380
今、世界はもっと面白いです。

815
00:36:05,380 --> 00:36:08,826
例えば、非常に一般的です
このようなドロップダウンメニュー。

816
00:36:08,826 --> 00:36:11,560
これは絶対的なものだろう
痛みが実装します。

817
00:36:11,560 --> 00:36:13,610
そして、それはそんなに長くはありませんでした
前、我々のプログラマ

818
00:36:13,610 --> 00:36:16,490
これらを実装する必要があります
最初からメニューの種類。

819
00:36:16,490 --> 00:36:20,800
>> しかし、それは、そのような共通のパラダイムです
そのブートストラップのようなライブラリ

820
00:36:20,800 --> 00:36:25,230
ちょうどあなたが行う能力を与えます
はるかに簡単に、はるかにドロップダウンメニュー。

821
00:36:25,230 --> 00:36:27,850
それを行うには一つの方法はありません、
私はドキュメントを読めば

822
00:36:27,850 --> 00:36:32,100
私はそれを見ること、[OK]を、私は使用する必要があります
このHTML私は、ドロップダウンメニューが欲しい場合

823
00:36:32,100 --> 00:36:34,030
それはそのように動作します。

824
00:36:34,030 --> 00:36:36,690
>> 同様に、のは、ドロップダウンボタンに行きましょう。

825
00:36:36,690 --> 00:36:38,470
だから、これはあっても愛好家です。

826
00:36:38,470 --> 00:36:41,800
私は、これはボタンのように見えるようにしたい場合
しかし、その小さな三角形の手段

827
00:36:41,800 --> 00:36:44,080
私はそれをクリックする必要があります
このメニューを取得し、この

828
00:36:44,080 --> 00:36:45,760
JavaScriptのと呼ばれる言語を使用しています。

829
00:36:45,760 --> 00:36:47,470
そして、我々はすべて実装することができます
JavaScriptでこれ。

830
00:36:47,470 --> 00:36:49,720
しかし、再び、これはホイールです
あなたが再発明する必要はありません。

831
00:36:49,720 --> 00:36:52,700
あなたはそれを取るにしたいです
このための棚ライブラリ。

832
00:36:52,700 --> 00:36:58,145
>> のは、何かに行こう
プログレスバーのような。

833
00:36:58,145 --> 00:36:59,770
したがって、このようなものはクールの一種です。

834
00:36:59,770 --> 00:37:02,910
あなたは今までの進捗状況を見てきた場合
画面上を移動するバー、

835
00:37:02,910 --> 00:37:06,380
多くの場合、それを実装します
ちょうどスピニングアイコンです。

836
00:37:06,380 --> 00:37:10,200
実際には、ちょうど余談として、みましょう
私はそれが何であるかAjax--に行きますか？

837
00:37:10,200 --> 00:37:10,710
Ajaxの情報？

838
00:37:10,710 --> 00:37:11,720
おっと。

839
00:37:11,720 --> 00:37:13,035
Ajaxinfo。

840
00:37:13,035 --> 00:37:14,800
私はアドレスを覚えてみましょう。

841
00:37:14,800 --> 00:37:15,820
そうしよう。

842
00:37:15,820 --> 00:37:19,850
>> だから、あなたはいくつかのアニメーションを見てきた場合
ページの読み込み、または考えている一方で、

843
00:37:19,850 --> 00:37:25,410
またはあなたは、保存、または何かを作成します
これらのようなアニメーションが表示される場合があります。

844
00:37:25,410 --> 00:37:28,800
それでは、何かを見てみましょう
ここではこのような、

845
00:37:28,800 --> 00:37:33,550
とのはのフォアグラウンドカラーを選択してみましょう
種類の優しい感じ緑、。

846
00:37:33,550 --> 00:37:34,545
私はこれをクリックすることはできますか？

847
00:37:34,545 --> 00:37:35,500
1を来ります。

848
00:37:35,500 --> 00:37:36,000
OK。

849
00:37:36,000 --> 00:37:38,930
私達はちょうどので、赤で行きますよ
それは我々が取得しているものです。

850
00:37:38,930 --> 00:37:40,250
そこでここではそれを持っています。

851
00:37:40,250 --> 00:37:43,940
>> あなたが画面上でこれを見てきたのであれば、
これにより、突然それが表示され、

852
00:37:43,940 --> 00:37:47,550
突然何であるか、消えます
そのことを実現するのですか？

853
00:37:47,550 --> 00:37:48,970
まあ、これは単なるGIFです。

854
00:37:48,970 --> 00:37:52,850
G-I-F。そして、これはアニメーションです
ファイル、ちょうど手段

855
00:37:52,850 --> 00:37:54,327
それは古い学校漫画のようなものです。

856
00:37:54,327 --> 00:37:57,160
異なるのちょうど束があります
予定のフレーム[吃音]

857
00:37:57,160 --> 00:37:58,085
そして、だけ繰り返します。

858
00:37:58,085 --> 00:38:00,090
そして、それは作成しています
運動の錯覚。

859
00:38:00,090 --> 00:38:03,070
>> だから、すぐにページが行われているように
ロードか何かをやって、

860
00:38:03,070 --> 00:38:04,610
プログラマは何をするのでしょうか？

861
00:38:04,610 --> 00:38:07,500
まあ、彼または彼女はちょうどこのイメージを非表示にします。

862
00:38:07,500 --> 00:38:11,536
したがって、すべてのプログレスバーが一種です
あなたが監視しています映画が好きです。

863
00:38:11,536 --> 00:38:14,660
あなたは、ソートの忘れ事実にしています
それは実際には何もやっていないこと、

864
00:38:14,660 --> 00:38:15,940
それだけで動いています。

865
00:38:15,940 --> 00:38:19,150
>> そして、それが進行して終了したとき、
彼らはちょうどそれを非表示にするか、オフにしてください。

866
00:38:19,150 --> 00:38:21,115
そして、それはすべての魔法です
それが起こっています。

867
00:38:21,115 --> 00:38:22,770
ブートストラップは、あなたを与えます
少し凝りました、

868
00:38:22,770 --> 00:38:25,030
それによってあなたが実際にすることができます
それが行くようにパーセンテージを参照してください、

869
00:38:25,030 --> 00:38:27,840
しかし、それはあまりにもちょうど一種であります
単純なアニメーションの。

870
00:38:27,840 --> 00:38:32,250
>> それでは、いくつかの最後のを見てみましょう
ここでは、より複雑な例。

871
00:38:32,250 --> 00:38:35,526
モーダルのような何か。

872
00:38:35,526 --> 00:38:36,900
誰もがモーダルが何であるかを知っていますか？

873
00:38:36,900 --> 00:38:39,880

874
00:38:39,880 --> 00:38:42,550
モーダルウィンドウは、一般に
想定される1

875
00:38:42,550 --> 00:38:46,880
前景の制御を取ると、
何かをやってからあなたを防ぎます。

876
00:38:46,880 --> 00:38:50,290
それは一種のユーザーの強制します
画面の中央に注目、

877
00:38:50,290 --> 00:38:52,290
一般的に、それらをロックアウト、
他のすべての。

878
00:38:52,290 --> 00:38:55,830
>> だから私は、このデモを起動した場合
画面には、一般的に灰色になります。

879
00:38:55,830 --> 00:38:57,060
さて、どのように我々はそれが灰色作るのですか？

880
00:38:57,060 --> 00:38:59,080
さて、私たちおそらくちょうど
背景色を変更

881
00:38:59,080 --> 00:39:01,060
我々は昨日のように
またはそのような何か。

882
00:39:01,060 --> 00:39:03,490
多分それはオーバーレイです
半透明です。

883
00:39:03,490 --> 00:39:06,320
そして今、あなたが行うことができます注意してください
このような派手なもの。

884
00:39:06,320 --> 00:39:09,930
だから、あなたはボタンをクリックした場合
そして、表示​​されるように少しポップをしたいです、

885
00:39:09,930 --> 00:39:10,710
出来るよ。

886
00:39:10,710 --> 00:39:12,340
だから誰がええall--気？

887
00:39:12,340 --> 00:39:15,791
>> AUDIENCE：だからブートストラップと、
それが組み込まれ得るために、

888
00:39:15,791 --> 00:39:21,002
それは昨日のようなのと同じくらい簡単です
私たちは、CSSスタイルのページをしましたか？

889
00:39:21,002 --> 00:39:21,960
DAVID J.マラン：確かに。

890
00:39:21,960 --> 00:39:22,835
本当に良い質問。

891
00:39:22,835 --> 00:39:24,480
私が入門に行きましょう。

892
00:39:24,480 --> 00:39:26,090
そして、はい。

893
00:39:26,090 --> 00:39:30,920
あなたがするためにしなければなりませんの
ブートストラップは、基本的にコピーされ、使用

894
00:39:30,920 --> 00:39:35,910
そしてこれら3つの長い行を貼り付けます
あなた自身のウェブ当ページの最上部にコード

895
00:39:35,910 --> 00:39:38,892
あなたの当ページの頭
あなたが稼働しています。

896
00:39:38,892 --> 00:39:41,850
そして、やってのさまざまな方法があります
それが、これは最も簡単になります。

897
00:39:41,850 --> 00:39:45,190
>> だから、これのすべてに関する有用な何ですか？

898
00:39:45,190 --> 00:39:47,524
さて、あなたはあまりいないのであれば
ウェブサイトの実装

899
00:39:47,524 --> 00:39:50,106
しかし、あなたはそれを設計しようとしています、
またはあなたが誰かを提供したいです

900
00:39:50,106 --> 00:39:53,220
ワイヤーフレーム図で、いわば、
何のか、単にアーティストのレンディション

901
00:39:53,220 --> 00:39:56,080
あなたは、私はこれに、やってみたいです
当日、多くの場合、サイトに移動します

902
00:39:56,080 --> 00:39:58,660
場合Iブートストラップなど
something--を実装したいです

903
00:39:58,660 --> 00:40:02,290
最近、キャンパスでのような
我々が実装したかったです

904
00:40:02,290 --> 00:40:06,170
ナビゲートするためのウェブベースのツール
ハーバード大学のコースカタログ、

905
00:40:06,170 --> 00:40:08,770
学生のために簡単にそれを作ります
コー​​スを閲覧します

906
00:40:08,770 --> 00:40:10,930
やコースを追加
買い物リスト、いわば、

907
00:40:10,930 --> 00:40:13,070
種類の何を決定します
彼らが撮りたかったです。

908
00:40:13,070 --> 00:40:16,252
>> 私はのために想像しようとしていました
私自身、何の成分だろう

909
00:40:16,252 --> 00:40:17,460
我々はこれを構築するために使用したいですか？

910
00:40:17,460 --> 00:40:19,050
ユーザーインターフェイスはどのようなものでしょうか？

911
00:40:19,050 --> 00:40:22,800
そして、ちょうどのようなサイトに目を通します
この又は他のこのようなライブラリー部位

912
00:40:22,800 --> 00:40:26,560
すごいので、あなたは、インスピレーションを得ることができ、
私はこのウィジェット、およびこのウィジェットを使用することができ、

913
00:40:26,560 --> 00:40:27,330
そしてこのウィジェット。

914
00:40:27,330 --> 00:40:29,080
そして、実際にどのような
プログラマが開始します

915
00:40:29,080 --> 00:40:32,800
特にこの中で、これらの日には、行うには
Webプログラミングのより近代的な世界、

916
00:40:32,800 --> 00:40:35,827
プログラミングはますますです
一緒に物事配線について。

917
00:40:35,827 --> 00:40:38,910
並べ替え、棚をこのオフを取ります
この既製、このオフの棚、

918
00:40:38,910 --> 00:40:41,954
あなたはスマート一つであります
これらの全てのドットを接続するため、

919
00:40:41,954 --> 00:40:45,120
しかし、最終的には再びによって何かを構築
他人の肩の上に立って、

920
00:40:45,120 --> 00:40:49,370
あなたは月に費やすことはありませんように
ダウンメニュー愚かなドロップを実装し、

921
00:40:49,370 --> 00:40:52,080
場合は、実際に行うのは難しいこれは
あなたはそれがChromeで仕事をしたいです、

922
00:40:52,080 --> 00:40:55,220
そして、IEとFirefox、および任意の
他のブラウザの数。

923
00:40:55,220 --> 00:40:59,060
この豊かな存在である理由はここにあります
商用およびオープンソースソフトウェア

924
00:40:59,060 --> 00:41:01,220
業界としても。

925
00:41:01,220 --> 00:41:06,810
>> AUDIENCE：だから、ブートストラップが更新されますん
あなたは、あなたのリンクを更新する必要がありますか？

926
00:41:06,810 --> 00:41:07,820
>> DAVID J.マラン：それはありません。

927
00:41:07,820 --> 00:41:09,090
まあ、はい、それはありません。

928
00:41:09,090 --> 00:41:12,540
ブートストラップは、バージョン3.3.6で現在あります。

929
00:41:12,540 --> 00:41:16,720
そして、一般的にはdo--なりますか
これは実際に言及する価値があります。

930
00:41:16,720 --> 00:41:19,200
一般的に何があります
セマンティックバージョニングとして知られています

931
00:41:19,200 --> 00:41:20,160
世界のシステム。

932
00:41:20,160 --> 00:41:21,320
誰もがこれを行います。

933
00:41:21,320 --> 00:41:26,410
>> しかし、あなたはバージョン番号を見てきた場合
形式であることx.y.z--

934
00:41:26,410 --> 00:41:30,240
そう例えば、最初のバージョン
プログラムは1.0.0であるかもしれません。

935
00:41:30,240 --> 00:41:34,970
それとも、それは非常に、非常にベータ版かどうか、
使用することを意味しても、アルファ状態、

936
00:41:34,970 --> 00:41:37,620
ご自身の責任で、そうではありません
プライムタイムのために実際に準備ができて、

937
00:41:37,620 --> 00:41:42,080
あなたも0.0.1を開始する可能性があります
またはそのようないくつかの指定。

938
00:41:42,080 --> 00:41:47,260
しかし、ソフトウェアがバージョンで始まる場合
1.0、または同等1.0.0、

939
00:41:47,260 --> 00:41:50,530
一般的に、これらは一般的なものです
ないomnipresent--ですがdays--

940
00:41:50,530 --> 00:41:53,520
場合は、会社または
個々のプログラマの修正

941
00:41:53,520 --> 00:41:56,140
いくつかの作品でいくつかのバグ
本当にそのソフトウェアの

942
00:41:56,140 --> 00:42:01,620
その補正バグは、べきではありませんでした
それは変更されませんall--での衝撃あなたを

943
00:42:01,620 --> 00:42:03,940
プログラムの動作、
それだけで何かを修正します

944
00:42:03,940 --> 00:42:06,580
それは働いていませんでした
properly--あなたは通常と

945
00:42:06,580 --> 00:42:08,890
そこz値を更新します。

946
00:42:08,890 --> 00:42:12,900
どのカリームのような人を意味
単に彼のウェブサイトに行くことができ、

947
00:42:12,900 --> 00:42:19,470
盲目的にバージョン番号を変更します
1.0.0から1.0.1へ、それを出荷、それを保存、

948
00:42:19,470 --> 00:42:21,880
そして理論的には、する必要はありませ
彼はちょうど壊れていることを心配

949
00:42:21,880 --> 00:42:24,430
彼のウェブサイトのため
機能の一部欠如、

950
00:42:24,430 --> 00:42:25,870
他の何かが壊れたので。

951
00:42:25,870 --> 00:42:28,740
>> 一方、私の場合
プログラマやいくつかの会社

952
00:42:28,740 --> 00:42:35,500
いくつかの重要なを作ることでした
機能を追加する変更、

953
00:42:35,500 --> 00:42:40,320
私はに私たちを更新する可能性があります
私は実際にだから1.1.0

954
00:42:40,320 --> 00:42:42,200
ライブラリの動作を変更します。

955
00:42:42,200 --> 00:42:44,470
私はあなたかもしれない多くの機能を与えています。

956
00:42:44,470 --> 00:42:48,490
最後に、私は実際にあった場合
基本的にそのようにソフトウェアを変更

957
00:42:48,490 --> 00:42:54,380
それは多くを破壊することをはるかに
ユーザのウェブサイトやアプリケーション、

958
00:42:54,380 --> 00:42:59,550
その後、私は、このモデルでは、に、義務付けられています
あまりにもメジャーバージョン番号をアップグレードし、

959
00:42:59,550 --> 00:43:01,059
これは互換性に影響する変更です。

960
00:43:01,059 --> 00:43:03,725
言い換えれば、私が持っているかもしれません
これらのドロップのためのサポートを終了

961
00:43:03,725 --> 00:43:04,350
ダウンメニュー。

962
00:43:04,350 --> 00:43:07,790
ですから、2.0にアップグレードした場合、半分
あなたのウェブサイトは、動作を停止することがあります。

963
00:43:07,790 --> 00:43:10,950
そして、これは信号の一種であります
何についてのコミュニティへ

964
00:43:10,950 --> 00:43:13,223
アップグレードを行うことに関与。

965
00:43:13,223 --> 00:43:16,710

966
00:43:16,710 --> 00:43:18,020
調達する良い機会。

967
00:43:18,020 --> 00:43:18,718
その他の質問？

968
00:43:18,718 --> 00:43:21,761

969
00:43:21,761 --> 00:43:22,260
大丈夫。

970
00:43:22,260 --> 00:43:26,945
まあのは1最後のを見てみましょう
プログラミングのこのセグメントのトピック

971
00:43:26,945 --> 00:43:30,640
技術スタックの、
すなわち、モバイルに関連します。

972
00:43:30,640 --> 00:43:36,232
>> だから、携帯電話の今日の世界で
あなたはhave--やiPad、および表面、

973
00:43:36,232 --> 00:43:37,940
これらすべての種類
あなたが持っているdevices--の

974
00:43:37,940 --> 00:43:40,950
選択肢の多いとき
それが実現することになります

975
00:43:40,950 --> 00:43:47,270
アプリケーションやWebサイトの
顧客のモバイルデバイス。

976
00:43:47,270 --> 00:43:51,570
だから状態に
明白な、おそらく、これらの日、

977
00:43:51,570 --> 00:43:54,960
プラットフォームには何ですか
モバイル空間にするために開発？

978
00:43:54,960 --> 00:43:59,650
どのデバイスあなたがしたいことがあります
あなたのアプリやウェブサイトでサポートしていますか？

979
00:43:59,650 --> 00:44:00,317
>> AUDIENCE：アップル。

980
00:44:00,317 --> 00:44:01,108
DAVID J.マラン：OK。

981
00:44:01,108 --> 00:44:01,820
だから、Appleデバイス。

982
00:44:01,820 --> 00:44:06,740
だから、iPhoneを意味し、その
iPadの、そして多分、iPodを意味します。

983
00:44:06,740 --> 00:44:07,627
ほかに何か？

984
00:44:07,627 --> 00:44:11,006

985
00:44:11,006 --> 00:44:11,505
オリビエ？

986
00:44:11,505 --> 00:44:11,970
>> AUDIENCE：アンドロイド。

987
00:44:11,970 --> 00:44:13,111
>> DAVID J.マラン：アンドロイド。

988
00:44:13,111 --> 00:44:13,610
OK。

989
00:44:13,610 --> 00:44:17,335
だから、Android携帯電話、アンドロイド
タブレット、Androidの市場

990
00:44:17,335 --> 00:44:21,240
でもメシエbecause--であり、
でも、Appleが乱雑になってきています。

991
00:44:21,240 --> 00:44:23,960
むかしむかし、一方、
iPhoneは一定の大きさでした、

992
00:44:23,960 --> 00:44:26,560
およびiPadは一定の大きさでした、
そして、iPodは今、ある程度の大きさでした

993
00:44:26,560 --> 00:44:33,420
我々はiPadのミニミニを持っている、と薄いです
もの、およびiPhone 6 Plusと6。

994
00:44:33,420 --> 00:44:34,407
それは混乱になってきています。

995
00:44:34,407 --> 00:44:35,740
これは、Androidの世界になってきています。

996
00:44:35,740 --> 00:44:39,030
>> そして、私はローリングの並べ替えでこれを言います
私の目のために開発者から

997
00:44:39,030 --> 00:44:41,680
パースペクティブは、それがあります
首の痛みとき

998
00:44:41,680 --> 00:44:45,686
あなたはスティーブ・ジョブズ」がありません
絶対的なコントロールのビジョン

999
00:44:45,686 --> 00:44:47,060
これらの仕様のすべての上に。

1000
00:44:47,060 --> 00:44:49,726
彼らがしているので、Appleはまだありません
ハードウェアを構築するもの。

1001
00:44:49,726 --> 00:44:52,690
しかし、それは場合は、いいことです
私は、ソフトウェア開発者よ、

1002
00:44:52,690 --> 00:44:54,520
ちょうどその私の知っています
iPhoneは常に起こっています

1003
00:44:54,520 --> 00:44:56,850
この大きな理由であることを
それは私が常に知っていることを意味します

1004
00:44:56,850 --> 00:44:58,847
どのくらいの画面の不動産私が持っています。

1005
00:44:58,847 --> 00:45:01,180
だから私は、アイコンを置きたい場合
左上隅で、

1006
00:45:01,180 --> 00:45:04,530
まったく同じであることになるだろう
すべての単一の顧客のデバイスに配置します。

1007
00:45:04,530 --> 00:45:07,140
>> しかし、iPhoneの世界では
6SとiPhone 6プラス

1008
00:45:07,140 --> 00:45:10,570
そして、Androidの世界では
電話は、それはすべてのマップの上です。

1009
00:45:10,570 --> 00:45:13,580
そしてそれは、プログラムにそれが難しくなります
物事、特にユーザ・インタフェース、

1010
00:45:13,580 --> 00:45:18,270
今あなたが配置を開始する必要がありますので、
あなたのユーザインタフェース比較的ではなく、

1011
00:45:18,270 --> 00:45:19,730
絶対に。

1012
00:45:19,730 --> 00:45:23,524
そして、同じことが、ブラウザ上で真となっています
年間とデスクトップ、ラップトップ

1013
00:45:23,524 --> 00:45:25,690
あなたのため、もちろん、
異なる画面サイズを持っています。

1014
00:45:25,690 --> 00:45:26,189
>> ほかに何か？

1015
00:45:26,189 --> 00:45:30,170
あなたは、表面を持っている可能性があります
Microsoftのような。

1016
00:45:30,170 --> 00:45:31,270
あなたはhave--可能性があります

1017
00:45:31,270 --> 00:45:32,270
AUDIENCE：Windowsの携帯電話。

1018
00:45:32,270 --> 00:45:32,816
DAVID J.マラン：それは何ですか？

1019
00:45:32,816 --> 00:45:33,570
AUDIENCE：Windowsの携帯電話。

1020
00:45:33,570 --> 00:45:34,403
DAVID J.マラン：はい。

1021
00:45:34,403 --> 00:45:37,570
ように、Windowsの携帯電話はまだ見つけることができます。

1022
00:45:37,570 --> 00:45:41,840
ブラックベリーの一種のようなもの、
しかし、彼らは努力を続けます。

1023
00:45:41,840 --> 00:45:43,900
そして、他のデバイスのバンチ。

1024
00:45:43,900 --> 00:45:48,020
だから、ほとんどの部分は、してみましょう
これらはものであると言います

1025
00:45:48,020 --> 00:45:49,520
現時点では気にします。

1026
00:45:49,520 --> 00:45:51,890
確かにアップルのもの、
確かにAndroidのもの、

1027
00:45:51,890 --> 00:45:55,640
そして、Windowsの間で、表面タブレットなど
かなり人気を集めているようです。

1028
00:45:55,640 --> 00:45:58,030
>> そのため、これらのデバイスのうち、
あなたがロールアウトしたい場合は、

1029
00:45:58,030 --> 00:46:02,677
あなたのためのモバイルプレゼンス、の言わせて
会社、どのような設計上の決定の種類

1030
00:46:02,677 --> 00:46:03,510
あなたは確認する必要がありますか？

1031
00:46:03,510 --> 00:46:06,350
まあ、我々はすでに述べました
アップルの世界では、

1032
00:46:06,350 --> 00:46:08,790
少なくとも二つの言語があります
それは典型的に使用されます。

1033
00:46:08,790 --> 00:46:10,260
一つは何と呼ばれていましたか？

1034
00:46:10,260 --> 00:46:11,260
>> AUDIENCE：Objective-Cの。

1035
00:46:11,260 --> 00:46:11,560
>> DAVID J.マラン：うん。

1036
00:46:11,560 --> 00:46:13,600
古いものですだから、Objective-Cの、。

1037
00:46:13,600 --> 00:46:17,720
また、多くのMacその言語です
アプリケーションがまだで書かれています。

1038
00:46:17,720 --> 00:46:18,964
その後、他の新規の方でしたか？

1039
00:46:18,964 --> 00:46:19,630
AUDIENCE：スウィフト。

1040
00:46:19,630 --> 00:46:20,590
DAVID J.マラン：スウィフト。

1041
00:46:20,590 --> 00:46:23,900
そして、それらはの一種であります
2は人々を感動させる知っています。

1042
00:46:23,900 --> 00:46:28,238
そして、Androidの世界では、
Androidのは、どのような言語を使用していますか？

1043
00:46:28,238 --> 00:46:30,618
>> AUDIENCE：C＃の？

1044
00:46:30,618 --> 00:46:31,570
>> AUDIENCE：Javaの。

1045
00:46:31,570 --> 00:46:34,230
>> DAVID J.マラン：Javaがあります
言語「今はやりの。」

1046
00:46:34,230 --> 00:46:37,950
Windowsの世界では、必ず、
私たちは、その場合のC＃のを言うでしょう。

1047
00:46:37,950 --> 00:46:40,590
だから、すでにこれは一種のです
何だから、迷惑な

1048
00:46:40,590 --> 00:46:43,070
ビジネスのためのお持ち帰り
所有者または誰か

1049
00:46:43,070 --> 00:46:44,570
モバイルプレゼンスを展開したいですか？

1050
00:46:44,570 --> 00:46:45,220
同様に、畜生！

1051
00:46:45,220 --> 00:46:48,590
同様に、私がサポートしたい場合
かなり広いユーザーベース、

1052
00:46:48,590 --> 00:46:52,180
私が書く必要があり、それが思われます、
3つの別々のアプリケーションに最適です。

1053
00:46:52,180 --> 00:46:55,630
これらの言語のいずれかで一、
Javaで1、C＃で1。

1054
00:46:55,630 --> 00:46:59,620
そして、私は機能が必要な場合でも、
同一であるように、それは問題ではありません。

1055
00:46:59,620 --> 00:47:02,940
私はまだ別の使用する必要があります
アップル、マイクロソフトのための言語、

1056
00:47:02,940 --> 00:47:06,084
そして、Googleすべてのサポート
異なる環境。

1057
00:47:06,084 --> 00:47:07,750
そして、これは年間の課題でした。

1058
00:47:07,750 --> 00:47:10,100
戻る日に、とき
ソフトウェアを購入するために使用される人々

1059
00:47:10,100 --> 00:47:12,230
コンピュータストア内で
包まれた箱を縮小、

1060
00:47:12,230 --> 00:47:14,470
あなたがしなければならないのいずれか
Macの棚に手を伸ばす、

1061
00:47:14,470 --> 00:47:19,040
または多分これは非常に小さいのMacをfor--
shelf--以上のWindows棚

1062
00:47:19,040 --> 00:47:19,980
そして、いくつかのソフトウェアを購入。

1063
00:47:19,980 --> 00:47:22,813
そして、非常に多くの場合、さえありませんでした
Macの棚上のあなたのために何でも。

1064
00:47:22,813 --> 00:47:23,430
どうして？

1065
00:47:23,430 --> 00:47:26,900
さて、企業が90％あれば決定しました
世界の世界の、95％

1066
00:47:26,900 --> 00:47:31,180
でも、なぜわざわざPCを、持っています
Mac OSで物事を実装しますか？

1067
00:47:31,180 --> 00:47:34,370
>> 総aside--として
それはなぜdigression--

1068
00:47:34,370 --> 00:47:40,960
Macはウイルスに非常に通さないと思われること、
やワーム、およびセキュリティの脅威？

1069
00:47:40,960 --> 00:47:44,040
Appleはこの時より良いですか？

1070
00:47:44,040 --> 00:47:45,934
安全なコンピュータを管理しておくのがベター？

1071
00:47:45,934 --> 00:47:47,750
>> AUDIENCE：小さい聴衆？

1072
00:47:47,750 --> 00:47:50,720
>> DAVID J.マラン：それです。
おそらくそれに大きなビット。

1073
00:47:50,720 --> 00:47:54,740
だからマックの多くのユーザーが持っています
長い主張し、ああ、Macを使っ、

1074
00:47:54,740 --> 00:47:57,630
あなたは、ウイルスに対する免疫になるだろう、と
ワーム、およびこれらの事のすべて

1075
00:47:57,630 --> 00:47:59,180
それは長い間PCを悩ませてきました。

1076
00:47:59,180 --> 00:48:02,050
それはAppleの理由が考えられます
優れたプログラマーを持っています

1077
00:48:02,050 --> 00:48:05,250
彼らはより良いソフトウェアを書きますか、
オペレーティング・システムは、より良く設計されました。

1078
00:48:05,250 --> 00:48:06,870
多分、おそらくありません。

1079
00:48:06,870 --> 00:48:10,840
>> それはあなたがいるときにすることをおそらくです
12歳、または30何か

1080
00:48:10,840 --> 00:48:13,510
自宅の書き込みの前に座ってのソート
引き継ぐ悪意のあるソフトウェア

1081
00:48:13,510 --> 00:48:17,480
世界は、あなたが後に行くつもりです
はるかに大きなターゲットオーディエンス。

1082
00:48:17,480 --> 00:48:20,590
世界の95％かもしれません
Windowsまたは一部を実行していること

1083
00:48:20,590 --> 00:48:21,740
その変異体。

1084
00:48:21,740 --> 00:48:23,800
だから、両側の少しがあります。

1085
00:48:23,800 --> 00:48:25,710
しかし、彼らの信用に、
アップル、私の知る限り、

1086
00:48:25,710 --> 00:48:28,270
本当に自分自身を売り込​​んだしていません
より安全なものとして、

1087
00:48:28,270 --> 00:48:32,110
あなただけの場合は、ドラマを招待しているので、
あなたがその請求を行う、私が思うだろう。

1088
00:48:32,110 --> 00:48:32,610
>> 大丈夫。

1089
00:48:32,610 --> 00:48:36,490
あまりにも遠く降りなし
それは、どのように我々はこの問題を解決するのですか？

1090
00:48:36,490 --> 00:48:39,670
あなたが購入しなければならないのか、する必要がありますか
開発するために、3つの異なる人々を支払います

1091
00:48:39,670 --> 00:48:41,540
アプリ？

1092
00:48:41,540 --> 00:48:42,870
あなたは他の上の1つを選ぶのですか？

1093
00:48:42,870 --> 00:48:45,460
何があなたの指針とすべき
ここで考えだと思いますか？

1094
00:48:45,460 --> 00:48:47,960

1095
00:48:47,960 --> 00:48:48,460
カリーム？

1096
00:48:48,460 --> 00:48:51,001

1097
00:48:51,001 --> 00:48:51,500
いいえ。

1098
00:48:51,500 --> 00:48:54,190
他の誰か。

1099
00:48:54,190 --> 00:48:56,885
>> AUDIENCE：ちょうどハードウェアが付属しています。

1100
00:48:56,885 --> 00:48:58,510
DAVID J.マラン：ハードウェアと一緒に来て？

1101
00:48:58,510 --> 00:48:59,533
どういう意味ですか？

1102
00:48:59,533 --> 00:49:01,282
>> AUDIENCE：について
環境。 [聞こえません]

1103
00:49:01,282 --> 00:49:04,867

1104
00:49:04,867 --> 00:49:06,200
DAVID J.マラン：だから、それは本当です。

1105
00:49:06,200 --> 00:49:09,280
しかし、あなたの顧客は、
一方、iPhoneを持っているかもしれません、

1106
00:49:09,280 --> 00:49:13,530
彼らは、Android携帯電話を持っている可能性があります
マイクロソフト製のタブレットを持っている可能性があります。

1107
00:49:13,530 --> 00:49:19,040
それでは、どのようにモバイル戦略を持っています
これらの異なるユーザのすべてのために？

1108
00:49:19,040 --> 00:49:23,320
場合、それがコストように思われます、
のは、iPhoneを作るために$ 1,000としましょう

1109
00:49:23,320 --> 00:49:25,940
アプリケーション、それが起こっています
作るためにあなたに$ 2,000費用に

1110
00:49:25,940 --> 00:49:29,250
iPhoneアプリケーションとAN
Androidアプリケーション、または$ 3,000

1111
00:49:29,250 --> 00:49:31,407
また、同様に、Windowsのデバイスをサポートします。

1112
00:49:31,407 --> 00:49:33,990
それはおそらくかなりのです
控えめ、そしてそれもないかもしれません

1113
00:49:33,990 --> 00:49:36,050
そのような線形の関係です。

1114
00:49:36,050 --> 00:49:41,065
>> 観客：あなたはアプリを持っているしたい場合、または
、あなたは、応答性のウェブサイトを持つことができません。

1115
00:49:41,065 --> 00:49:41,940
DAVID J.マラン：グッド。

1116
00:49:41,940 --> 00:49:46,255
AUDIENCE：それともネイティブアプリを持つことができます。

1117
00:49:46,255 --> 00:49:47,130
DAVID J.マラン：うん。

1118
00:49:47,130 --> 00:49:50,260
だから、すべてこの文脈でここに、
我々は何の話をしてきました

1119
00:49:50,260 --> 00:49:53,190
人々は、ネイティブアプリケーションを呼び出します。

1120
00:49:53,190 --> 00:49:58,040
それが記述されたアプリケーションです
そのデバイスのネイティブ言語インチ

1121
00:49:58,040 --> 00:50:02,190
だから、ネイティブのObjective-Cまたはスウィフト
コー​​ド、またはJava、またはC＃のインチ

1122
00:50:02,190 --> 00:50:06,900
これはあなたがダウンロードしたときに、してみましょう意味
Snapchat、人気のアプリケーションを言って、

1123
00:50:06,900 --> 00:50:10,060
またはあなたがダウンロードするとき
電話のためのFacebook、

1124
00:50:10,060 --> 00:50:13,270
あなたがダウンロードしているのいずれか
あなたのiPhoneのために書かれたバージョン、

1125
00:50:13,270 --> 00:50:16,830
またはあなたのAndroid携帯電話のために書かれ、
またはあなたの表面のために書かれました。

1126
00:50:16,830 --> 00:50:18,500
>> しかし、代替手段があります。

1127
00:50:18,500 --> 00:50:26,020
オリビエはをほのめかしたように、
あなたが実際にHTML 5を使用することができます

1128
00:50:26,020 --> 00:50:33,440
代わりに、ウェブと呼ばれるものを使用して
アプリケーション、それによって、単にあなた

1129
00:50:33,440 --> 00:50:35,940
お使いの携帯存在感を実装
そして、任意の機能を提供します。

1130
00:50:35,940 --> 00:50:37,030
私は、モバイル存在とはどういう意味ですか？

1131
00:50:37,030 --> 00:50:39,800
あなたが持っているあなたのウェブサイトと同様に
連絡先情報、全てのリスト

1132
00:50:39,800 --> 00:50:43,049
貴社の製品、多分それはショッピングを持っています
カートは、多分あなたはそれを介してものを売ります。

1133
00:50:43,049 --> 00:50:46,850
あなたのアプリケーションは、あなたが何であれ
ないObjective-Cで、それを実装し、

1134
00:50:46,850 --> 00:50:51,200
またはスウィフト、またはJava、またはC＃のが、HTMLで
私たちが見た言語だった5、

1135
00:50:51,200 --> 00:50:55,470
昨日で、JavaScriptとCSSを使用しました。

1136
00:50:55,470 --> 00:50:58,700
>> そして、それらのいいものです
3は、それらを実行することです、

1137
00:50:58,700 --> 00:51:01,981
あなたがソフトウェアのだけで何枚必要ですか？

1138
00:51:01,981 --> 00:51:02,980
AUDIENCE：Webブラウザ。

1139
00:51:02,980 --> 00:51:04,229
DAVID J.マラン：Webブラウザ。

1140
00:51:04,229 --> 00:51:07,610
そして、最高のは、私は、これらのすべてを知っています
デバイスは、Webブラウザが付属して

1141
00:51:07,610 --> 00:51:10,480
ユーザはに持っていません
何か特別なものをインストールします。

1142
00:51:10,480 --> 00:51:12,920
だから、あなたは自分を伝えることができます
聴衆、あなたの顧客、

1143
00:51:12,920 --> 00:51:16,590
あなたにacme.comに行きます
ブラウザとあなただけよ

1144
00:51:16,590 --> 00:51:19,730
Webベースの経験を持っています
まだ画面を埋めること、

1145
00:51:19,730 --> 00:51:25,100
しかし、あなたはすべてのを心配する必要はありません
これらの費用と、この複雑さのすべて。

1146
00:51:25,100 --> 00:51:28,600
しかし、確かにそこに起こっています
ここにキャッチことは、右？

1147
00:51:28,600 --> 00:51:31,740
私が指摘する場合は特に
数年前、その、

1148
00:51:31,740 --> 00:51:35,700
の非常に最初のバージョン
Facebookのモバイルアプリケーション

1149
00:51:35,700 --> 00:51:38,810
主にHTML 5のアプリケーションでした。

1150
00:51:38,810 --> 00:51:42,490
そして、彼らはより多くの、持っています
最近、それを再実装

1151
00:51:42,490 --> 00:51:44,700
そのほかのアプリケーションインチ

1152
00:51:44,700 --> 00:51:46,990
>> なぜあなたはないでしょう
すぐに言いたいです、

1153
00:51:46,990 --> 00:51:49,190
よく、明らかに我々はこれをやろうとしていますか？

1154
00:51:49,190 --> 00:51:51,560
隠れたコストは何でしょうか？

1155
00:51:51,560 --> 00:51:52,477
>> AUDIENCE：パフォーマンス。

1156
00:51:52,477 --> 00:51:53,643
DAVID J.マラン：パフォーマンス？

1157
00:51:53,643 --> 00:51:54,567
どういう意味ですか？

1158
00:51:54,567 --> 00:52:01,040
>> AUDIENCE：ネイティブアプリ
より多くの性能を有しています。

1159
00:52:01,040 --> 00:52:03,850
>> DAVID J.マラン：だからであります
真の、いくつかの理由。

1160
00:52:03,850 --> 00:52:05,270
私たちは答えを単純化し過ぎることができます。

1161
00:52:05,270 --> 00:52:08,061
との議論を思い出します
コンパイル言語に対する解釈。

1162
00:52:08,061 --> 00:52:12,030
これはHTML 5であり、それとの、ちょうどであることを
一般的に書かれた明確な、JavaScript--

1163
00:52:12,030 --> 00:52:15,880
JS--とCSSが全てです
言語を解釈し、

1164
00:52:15,880 --> 00:52:21,020
でも、JavaScriptのみかかわらず、
プログラミング言語です。

1165
00:52:21,020 --> 00:52:25,820
>> そして、これらの対ので、このことは、これらのいくつかを
コンパイルされ、少なくともこれらのthree--

1166
00:52:25,820 --> 00:52:29,990
Objective-Cの、JavaとC＃の - これらの、
理論的には、ちょうど高速にする必要があります。

1167
00:52:29,990 --> 00:52:31,670
しかし、別の現実がありますfor--

1168
00:52:31,670 --> 00:52:32,440
>> AUDIENCE：机能？

1169
00:52:32,440 --> 00:52:32,830
>> DAVID J.マラン：それは何ですか？

1170
00:52:32,830 --> 00:52:34,060
>> AUDIENCE：机能。

1171
00:52:34,060 --> 00:52:34,570
>> DAVID J.マラン：機能？

1172
00:52:34,570 --> 00:52:35,070
どうして？

1173
00:52:35,070 --> 00:52:37,305
聴衆：カメラを使用
お使いの携帯電話か何かオフ。

1174
00:52:37,305 --> 00:52:41,471
あなたはブラウザのものを使用することができます。

1175
00:52:41,471 --> 00:52:42,470
DAVID J.マラン：その通り。

1176
00:52:42,470 --> 00:52:43,011
彼らはsec--ています

1177
00:52:43,011 --> 00:52:45,034
AUDIENCE：[聞こえません]

1178
00:52:45,034 --> 00:52:46,700
DAVID J.マラン：それは別の良い一つです。

1179
00:52:46,700 --> 00:52:49,230
来の機能があります
携帯電話と今日

1180
00:52:49,230 --> 00:52:53,840
セキュリティのために、設計によって、されないこと
ウェブブラウザからアクセス可能な理由、。

1181
00:52:53,840 --> 00:52:56,410
それは一種のようになりますので
気味の悪い事ばかりであれば

1182
00:52:56,410 --> 00:53:00,710
あなたが訪問google.com、または
cnn.com、または任意のwebsite.com、

1183
00:53:00,710 --> 00:53:04,490
そのウェブサイトは、オンにする力を持っていること
お使いのカメラに、あなたの写真を撮ります、

1184
00:53:04,490 --> 00:53:06,010
し、それを使用します。

1185
00:53:06,010 --> 00:53:09,280
しかし、あなたは、ランダムなウェブサイトを望んでいないだろう
あなたは非常に初めて訪問していること

1186
00:53:09,280 --> 00:53:10,690
その能力を持っています。

1187
00:53:10,690 --> 00:53:13,460
>> だから何の電話
メーカーは一般的に行います

1188
00:53:13,460 --> 00:53:17,230
彼らはアクセスを拒否されます
情報の種類に

1189
00:53:17,230 --> 00:53:20,650
あなたを意味ブラウザへ
カメラを実装することはできません。

1190
00:53:20,650 --> 00:53:24,180
あなたは、プッシュ通知を実装することはできません
あなたが画面上に取得ビープ音

1191
00:53:24,180 --> 00:53:26,120
短いメッセージを持ちます。

1192
00:53:26,120 --> 00:53:31,350
そして実際に、でもGPSは唯一の一種であります
Webブラウザが利用可能なの並べ替えの。

1193
00:53:31,350 --> 00:53:34,140
あなたがラップトップ上で、今までしている場合
またはモバイルデバイス上で、

1194
00:53:34,140 --> 00:53:38,770
多分のようなものをプルアップ
cnn.comだけでなく、地元のニュース局

1195
00:53:38,770 --> 00:53:43,890
これを行う傾向があり、あなたが要求されます
多くの場合でmessage-- foxnews.com

1196
00:53:43,890 --> 00:53:45,170
あなたの場所を知りたいです。

1197
00:53:45,170 --> 00:53:46,610
承認または拒否します。

1198
00:53:46,610 --> 00:53:52,070
>> まあ、ブラウザがアクセスしようとしています
お使いの携帯電話からあなたのGPS情報。

1199
00:53:52,070 --> 00:53:54,740
しかし、ありがたいことに、マイクロソフト、
アップル、とGoogle

1200
00:53:54,740 --> 00:53:57,330
以下のように感じていることを決定しました
それは便利な状況ですが、

1201
00:53:57,330 --> 00:53:59,461
我々はGoogleマップをしたいと
他のツールは、動作するように

1202
00:53:59,461 --> 00:54:02,710
私たちは、人々をクリープしたくありません
ただのウェブサイトを可能にすることによってこれを行うには。

1203
00:54:02,710 --> 00:54:05,934
それでは、大会の並べ替えてみましょう
途中、ユーザーに促します。

1204
00:54:05,934 --> 00:54:08,850
しかし、それは必ずしもそうではありません
カメラのようなすべてのハードウェア、と

1205
00:54:08,850 --> 00:54:10,680
そして、押すだけで
通知など、

1206
00:54:10,680 --> 00:54:13,650
あなたがする必要があるかもしれません
特定の機能を生け贄に捧げます。

1207
00:54:13,650 --> 00:54:15,100
しかし、あまりにもパフォーマンス。

1208
00:54:15,100 --> 00:54:18,020
それは少なくなってきています
おそらく、最近は目立ちます

1209
00:54:18,020 --> 00:54:22,400
LTEは、上で​​キャッチし、より速くとして
携帯電話でのインターネット速度、

1210
00:54:22,400 --> 00:54:24,110
しかし、あなたは種類の違いを感じることができます。

1211
00:54:24,110 --> 00:54:28,190
Webベースのアプリケーションのように
ただ一般的に、遅いと感じ、

1212
00:54:28,190 --> 00:54:31,100
ネイティブアプリケーションよりも、部分的に
Webベースのアプリケーションのために

1213
00:54:31,100 --> 00:54:32,680
定義により、インターネット上にあります。

1214
00:54:32,680 --> 00:54:35,610
これは、Web上のサーバーに話しています。

1215
00:54:35,610 --> 00:54:39,590
そして、あなたのネットワーク接続がある場合
ゆっくりと、でもスクロールが遅くなる可能性があります。

1216
00:54:39,590 --> 00:54:43,710
>> しかし、ネイティブアプリケーション、あなたが持っています
すでにプレdownloaded--おそらく

1217
00:54:43,710 --> 00:54:45,680
あなたが家にいたとき、
アプリストアから、

1218
00:54:45,680 --> 00:54:47,900
またはあなたは、少なくとも事前にダウンロード
それはその全体が

1219
00:54:47,900 --> 00:54:49,640
以前、どちらがお
接続speed--

1220
00:54:49,640 --> 00:54:52,530
そして今、あなたはすべてを持っています
あなたが一般的に必要とするビット。

1221
00:54:52,530 --> 00:54:55,090
おそらくいくつかのデータを除きます
それは、サーバーから送られてきます。

1222
00:54:55,090 --> 00:54:57,130
>> したがって、これらはトレードオフはここにあります。

1223
00:54:57,130 --> 00:54:59,980
真ん中のようなものがあります
実際には妥協、。

1224
00:54:59,980 --> 00:55:00,907
そして、私はyou--思います

1225
00:55:00,907 --> 00:55:02,895
>> AUDIENCE：データをオフラインで使用してください。

1226
00:55:02,895 --> 00:55:06,355
ネイティブアプリでは、することができます[聞こえません]

1227
00:55:06,355 --> 00:55:07,480
DAVID J.マラン：もちろんです。

1228
00:55:07,480 --> 00:55:09,730
だから、オフライン問題があります、
これは本当に迷惑です

1229
00:55:09,730 --> 00:55:13,120
あなたには、いくつかのゲームや使用を再生できない場合
あなたがしているという理由だけでいくつかのソフトウェア

1230
00:55:13,120 --> 00:55:15,110
地下のどこかに
またはエレベーターインチ

1231
00:55:15,110 --> 00:55:18,700
ネイティブアプリケーションは、弾力性があります
それに対して、より高い確率で、

1232
00:55:18,700 --> 00:55:20,990
あなたはすべて持っていると仮定すると
あなたがローカルに必要なデータ。

1233
00:55:20,990 --> 00:55:22,900
>> そこでここでは3つ目のオプションがあります。

1234
00:55:22,900 --> 00:55:30,270
とののようにスペクトルを描きましょう
ここでは、ネイティブここでアプリやウェブアプリ。

1235
00:55:30,270 --> 00:55:32,460
そして、途中で何
何かがありますcalled--

1236
00:55:32,460 --> 00:55:35,410
そして、私はあなたが持っているかもしれないと思います
多分、前の単語を使用しますか？

1237
00:55:35,410 --> 00:55:37,170
ハイブリッドアプリケーション。

1238
00:55:37,170 --> 00:55:40,980
そして、言葉が示すように、
それが途中で何か。

1239
00:55:40,980 --> 00:55:46,230
これは、Webアプリケーションのようなものだと
それは、ネイティブアプリケーションのようなものです。

1240
00:55:46,230 --> 00:55:47,690
>> そして、これは何を意味するのでしょうか？

1241
00:55:47,690 --> 00:55:51,750
それはframeworks--ありますが判明します
earlier--ソフトウェアからの用語を使用するには

1242
00:55:51,750 --> 00:55:55,860
他の人が書いたこと
これらのプラットフォームの一人一人のために。

1243
00:55:55,860 --> 00:55:57,500
これらおよびまだ他のデバイス。

1244
00:55:57,500 --> 00:56:02,390
実際に、私はPhoneGapのに行かせ、
これはそのようなフレームワークであるI

1245
00:56:02,390 --> 00:56:04,520
Adobeは今所有していると信じています。

1246
00:56:04,520 --> 00:56:07,830
私が入門に行きましょう。

1247
00:56:07,830 --> 00:56:09,430
どれどれ。

1248
00:56:09,430 --> 00:56:12,450
私はツールの一覧を見ることができます参照してください。

1249
00:56:12,450 --> 00:56:13,150
ハードウェア。

1250
00:56:13,150 --> 00:56:15,845
入門。

1251
00:56:15,845 --> 00:56:17,570
PhoneGapのハードウェア。

1252
00:56:17,570 --> 00:56:18,672
>> どれどれ。

1253
00:56:18,672 --> 00:56:23,459
PhoneGapのハードウェアへのアクセス。

1254
00:56:23,459 --> 00:56:26,125
我々は少しを見つけることができるなら、私は見てみましょう
彼らが持っていたことをグラフ。

1255
00:56:26,125 --> 00:56:29,170

1256
00:56:29,170 --> 00:56:31,640
これは、別のサイトにあります。

1257
00:56:31,640 --> 00:56:32,525
これは便利ですか！

1258
00:56:32,525 --> 00:56:33,030
いいえ。

1259
00:56:33,030 --> 00:56:36,330
それはつもりが私たちの時間を無駄です。

1260
00:56:36,330 --> 00:56:40,185
PhoneGapのハードウェア。

1261
00:56:40,185 --> 00:56:40,685
デバイス。

1262
00:56:40,685 --> 00:56:45,190

1263
00:56:45,190 --> 00:56:48,030
デバイスAPI。

1264
00:56:48,030 --> 00:56:49,270
いや、彼らはそれを移動しました。

1265
00:56:49,270 --> 00:56:50,070
>> PhoneGapの。

1266
00:56:50,070 --> 00:56:54,964
のは、この1つの最後を見て行きましょう
私はあなたを示すことができるかどうかを確認します。

1267
00:56:54,964 --> 00:56:55,630
入門。

1268
00:56:55,630 --> 00:56:58,160

1269
00:56:58,160 --> 00:56:59,020
PhoneGapのをインストールします。

1270
00:56:59,020 --> 00:57:02,310

1271
00:57:02,310 --> 00:57:03,270
モバイルアプリをインストールします。

1272
00:57:03,270 --> 00:57:04,320
いい加減にして。

1273
00:57:04,320 --> 00:57:07,220

1274
00:57:07,220 --> 00:57:08,580
彼らはすべてを再編成しました。

1275
00:57:08,580 --> 00:57:09,750
大丈夫。

1276
00:57:09,750 --> 00:57:11,370
ああ、すべての権利。

1277
00:57:11,370 --> 00:57:12,550
さて、ここで私達は行きます。

1278
00:57:12,550 --> 00:57:16,130
これは、すべてのこと啓発ではありませんが、
これは私が一種の探していたものです。

1279
00:57:16,130 --> 00:57:20,940
>> だから、PhoneGapのはあなたのフレームワークです
あなたを与えること自由のためにダウンロードすることができます

1280
00:57:20,940 --> 00:57:22,750
いくつかのスターターコード、基本的に。

1281
00:57:22,750 --> 00:57:26,600
彼らが書かれているので、いくつかのコード
それは何の多くを行いません。

1282
00:57:26,600 --> 00:57:29,610
しかし、それはあなたを与えるもの
本質的に等価です

1283
00:57:29,610 --> 00:57:34,910
ただ置くアプリケーションの
ユーザの画面に大きな長方形。

1284
00:57:34,910 --> 00:57:38,040
それは次のように、URLバーを入れていません
ブラウザは、アドレスを入れていません。

1285
00:57:38,040 --> 00:57:39,650
それはちょうど、大きな長方形を置きます。

1286
00:57:39,650 --> 00:57:43,230
そして、あなたはこの大きなを設定します
長方形、ボンネットの下に、

1287
00:57:43,230 --> 00:57:50,780
実際にacme.comに行く、または多分します
m.acme.com、mobile.acme.comため、

1288
00:57:50,780 --> 00:57:52,910
しかし、ユーザーが知りません
彼らはそのアドレスにいます。

1289
00:57:52,910 --> 00:57:55,520
彼らが見るすべてがあります
ウェブページの内容。

1290
00:57:55,520 --> 00:57:59,822
>> しかし、このことについて素敵なものです
ハイブリッドアプリは何PhoneGapのことです

1291
00:57:59,822 --> 00:58:03,030
および他の企業では、ある与えています
彼らはあなたのコードを少し与えています

1292
00:58:03,030 --> 00:58:05,760
Objective-Cのまたはスウィフト中、または
Javaでコードを少し、

1293
00:58:05,760 --> 00:58:08,320
またはコードの少し
C＃で、本質的に、

1294
00:58:08,320 --> 00:58:12,990
あなたが提供しなければならないすべては、最小限であります
あなたのWeb​​ベースのアプリケーションのアドレス。

1295
00:58:12,990 --> 00:58:15,750
そして、あなたはこれをバンドル
すべて一緒に、あなた

1296
00:58:15,750 --> 00:58:20,670
それはあなたのアクセスのいずれか持っています
インターネットを経由してサイト、

1297
00:58:20,670 --> 00:58:24,060
またはあなたも地元をキャッシュ
アプリケーションの中にコピーし、

1298
00:58:24,060 --> 00:58:28,690
そして、あなたはあなたのアプリケーションを保存します
iPhoneの形式で、Androidの携帯電話

1299
00:58:28,690 --> 00:58:32,030
フォーマット、表面フォーマット、または
他の任意の数のデバイス。

1300
00:58:32,030 --> 00:58:34,960
>> あなたはこれらのバージョンのそれぞれをアップロード
Google Playストアに、

1301
00:58:34,960 --> 00:58:37,690
App Storeに、へ
等々Windowsストア、および。

1302
00:58:37,690 --> 00:58:41,570
そして今、あなたはあなたのすべてを持つことができます
観客は本当にネイティブアプリをダウンロードし、

1303
00:58:41,570 --> 00:58:44,250
コー​​ドの大部分はあったとはいえ
他の誰かによって書かれました、

1304
00:58:44,250 --> 00:58:49,090
しかし、そのネイティブアプリの内容は、すべて
あなた自身のウェブサイト、一般的に、から来ています。

1305
00:58:49,090 --> 00:58:53,950
つまり、あなたのウェブサイトを書き続けます
HTML、JavaScript、およびCSSインチ

1306
00:58:53,950 --> 00:58:56,400
>> なぜこれらのラインをぼかしますか？

1307
00:58:56,400 --> 00:59:00,240
ハイブリッドアプリケーションを持っている理由
それは、ネイティブのようなものだが、また、

1308
00:59:00,240 --> 00:59:02,569
ウェブの種類はベース？

1309
00:59:02,569 --> 00:59:04,610
の全体のポイントは何ですか
この複雑さを加えること？

1310
00:59:04,610 --> 00:59:07,180
私はちょうどから、でもまだ、意味します
このページをかすめます、

1311
00:59:07,180 --> 00:59:11,790
入門ガイドでは、のように感じています
それは私のための手順の全体の多くを持っています

1312
00:59:11,790 --> 00:59:13,514
私はcan--前に行うには

1313
00:59:13,514 --> 00:59:14,430
AUDIENCE：再利用？

1314
00:59:14,430 --> 00:59:14,960
DAVID J.マラン：再利用？

1315
00:59:14,960 --> 00:59:15,618
どういう意味ですか？

1316
00:59:15,618 --> 00:59:16,826
>> AUDIENCE：ソースコードの。

1317
00:59:16,826 --> 00:59:19,438
だから、同じコードは、上の実行されます
すべての異なるプラットフォーム。

1318
00:59:19,438 --> 00:59:20,313
DAVID J.マラン：うん。

1319
00:59:20,313 --> 00:59:21,188
AUDIENCE：[聞こえません]

1320
00:59:21,188 --> 00:59:23,200

1321
00:59:23,200 --> 00:59:24,200
DAVID J.マラン：パーフェクト。

1322
00:59:24,200 --> 00:59:26,930
時間がタイトで、あなた場合であれば
多くのdevelopers--ことはありません

1323
00:59:26,930 --> 00:59:28,900
多分あなたは1開発者を持っています
彼または彼女は確か

1324
00:59:28,900 --> 00:59:31,050
これらのすべてを知りません
environments--確かではないだけでなく、

1325
00:59:31,050 --> 00:59:33,341
確かにプログラムすることはできません
同時に3つのすべてで

1326
00:59:33,341 --> 00:59:35,970
とに3つの製品を出荷
1に許される時間、

1327
00:59:35,970 --> 00:59:40,360
あなたは彼または彼女はすべてを構築することができます
HTMLとJavaScriptとCSSで、

1328
00:59:40,360 --> 00:59:43,260
そしてその後、小さな小さなを学びます
ネイティブアプリについて少し、

1329
00:59:43,260 --> 00:59:45,930
ダウンロードするだけで十分な
このようなフレームワーク、

1330
00:59:45,930 --> 00:59:48,750
その後に製品をアップロードします
様々なアプリケーションストアのすべて

1331
00:59:48,750 --> 00:59:51,700
あなたが今持っているように、
ネイティブアプリケーション。

1332
00:59:51,700 --> 00:59:54,090
>> だから、Win-Winのように思えます
しかし、再び、明確にします

1333
00:59:54,090 --> 00:59:56,540
潜在的なものです
コストや落とし穴？

1334
00:59:56,540 --> 01:00:00,292

1335
01:00:00,292 --> 01:00:01,209
>> AUDIENCE：パフォーマンス？

1336
01:00:01,209 --> 01:00:02,083
DAVID J.マラン：うん。

1337
01:00:02,083 --> 01:00:02,959
パフォーマンス。

1338
01:00:02,959 --> 01:00:04,250
それは口頭で説明するのは難しいです。

1339
01:00:04,250 --> 01:00:07,590
だから、あなただけ取る場合
信仰モバイルアプリケーション、

1340
01:00:07,590 --> 01:00:11,430
Webアプリケーションの意志
一般的に、よりゆっくりと行います。

1341
01:00:11,430 --> 01:00:16,500
それはので、かなり右見ていない可能性があります
iPhoneで、そしてAndroid携帯電話で、

1342
01:00:16,500 --> 01:00:19,210
そこだとWindowsデバイス、
デフォルトの外観の常にソート

1343
01:00:19,210 --> 01:00:21,780
とのすべてに感じます
ボタンとメニュー。

1344
01:00:21,780 --> 01:00:25,160
>> そして、ウェブの企業は、試すことができます
それらの美学を近似します

1345
01:00:25,160 --> 01:00:28,329
ブートストラップのようなライブラリと、
しかし、抜け目のないuser--をuser--

1346
01:00:28,329 --> 01:00:30,620
ことを知ることが起こっています
何かがかなり右ここではありません。

1347
01:00:30,620 --> 01:00:32,510
そして、それは多分、大丈夫です
それは大したことではないのです。

1348
01:00:32,510 --> 01:00:35,500
しかし、パフォーマンスの問題
絶対に大したことです。

1349
01:00:35,500 --> 01:00:39,400
ネイティブアプリケーションは、ちょうどになる傾向があります
はるかに応答性のため、です

1350
01:00:39,400 --> 01:00:39,946
より良いです。

1351
01:00:39,946 --> 01:00:42,070
だから、次に何があるかもしれません
両方の長所？

1352
01:00:42,070 --> 01:00:44,584
あなたが特に小さいなら
企業や小グループ、

1353
01:00:44,584 --> 01:00:47,000
あなたは、リソースを持っていません
並行してアプリを開発します

1354
01:00:47,000 --> 01:00:50,480
すべての3つのプラットフォーム上で、と率直に言って、
それはとにかく悪い考えだように感じています

1355
01:00:50,480 --> 01:00:53,526
あなたがそれをロールアウトし、場合ので、
すべての3つを同時に実現します

1356
01:00:53,526 --> 01:00:56,400
我々はいくつかの機能を追加している必要があります
または今、異なった何かを行います

1357
01:00:56,400 --> 01:00:59,530
あなたはそれを修正する必要があります
3ヶ所ではなく、1。

1358
01:00:59,530 --> 01:01:02,390
多分最適散策
戦略ここでは全体的に、

1359
01:01:02,390 --> 01:01:04,130
リソースと時間が締まっていますか？

1360
01:01:04,130 --> 01:01:06,420
>> AUDIENCE：ちょうどiOSの上でそれを行います。

1361
01:01:06,420 --> 01:01:08,390
>> DAVID J.マラン：不合理ではないのです。

1362
01:01:08,390 --> 01:01:10,670
少なくとも中のiPhone、
米国は、超人気があります。

1363
01:01:10,670 --> 01:01:13,820
アンドロイドはまだ支配的な持っているようです
市場シェア、世界的に、全体的に。

1364
01:01:13,820 --> 01:01:16,740
だからではありません
必ずしも代表

1365
01:01:16,740 --> 01:01:19,210
地球の全体今週の。

1366
01:01:19,210 --> 01:01:21,180
しかし、それは絶対に1つの決定です。

1367
01:01:21,180 --> 01:01:23,620
私は私がここにキャンパス内に、意味します
いくつかの凶悪数を考えます

1368
01:01:23,620 --> 01:01:26,600
または大学生の割合
iPhoneやAndroidのない携帯電話を持っています。

1369
01:01:26,600 --> 01:01:28,490
しかし、海外では、反対のようなものです。

1370
01:01:28,490 --> 01:01:30,040
つまり、あなたの聴衆に基づいて決定します。

1371
01:01:30,040 --> 01:01:31,990
どのようにあなたの聴衆が持っているものを知っていますか？

1372
01:01:31,990 --> 01:01:34,080
>> まあ、我々は昨日トリックを学びました。

1373
01:01:34,080 --> 01:01:35,060
あなたがそれらを求めることができます。

1374
01:01:35,060 --> 01:01:37,910
あなたは囚われの聴衆を持っている場合
あなたは彼らに調査票を送ることができます。

1375
01:01:37,910 --> 01:01:39,172
それとも、ただ何ができますか？

1376
01:01:39,172 --> 01:01:40,076
>> AUDIENCE：Google Analyticsの？

1377
01:01:40,076 --> 01:01:40,680
>> DAVID J.マラン：それは何ですか？

1378
01:01:40,680 --> 01:01:41,876
>> AUDIENCE：Googleアナリティクス。

1379
01:01:41,876 --> 01:01:43,250
DAVID J.マラン：Googleアナリティクス。

1380
01:01:43,250 --> 01:01:43,750
うん。

1381
01:01:43,750 --> 01:01:46,970
またはそれ以上の種類の技術的、ちょうど
独自のWebサーバのログを見てください。

1382
01:01:46,970 --> 01:01:49,100
何が起こるかあるので
毎回ブラウザ、

1383
01:01:49,100 --> 01:01:51,880
かどうか、ラップトップ、デスクトップ、または
携帯電話はあなたのウェブサイトをご覧ください！

1384
01:01:51,880 --> 01:01:56,847
彼らは、そのショーそのHTTPヘッダを送信します
あなたは彼らが使用しているブラウザとOS。

1385
01:01:56,847 --> 01:02:00,180
だから、高い確率で、推測でき、
あなたの人口統計学はそのように使用しているもの

1386
01:02:00,180 --> 01:02:01,410
そしてその後、調整します。

1387
01:02:01,410 --> 01:02:03,030
>> だから、それは受け入れられないですと仮定します。

1388
01:02:03,030 --> 01:02:07,760
それはビジネスの場合のソートの悪いです
Androidユーザーは、私たちのウィジェットを購入することはできません。

1389
01:02:07,760 --> 01:02:10,942
>> 観客：あなたがいるかどうか
つもり充電するかどうか？

1390
01:02:10,942 --> 01:02:12,900
DAVID J.マラン：かどうか
あなたは充電するつもりですか？

1391
01:02:12,900 --> 01:02:14,900
それでOK、あなたは何を支払うを取得します。

1392
01:02:14,900 --> 01:02:18,400
>> AUDIENCE：あなたのアプリはつもりであるかどうか
無料であるか、またはそれはgonna--のかどうか

1393
01:02:18,400 --> 01:02:19,530
>> DAVID J.マラン：OK。

1394
01:02:19,530 --> 01:02:21,920
だから、多分あなたは回収することができ
そのように、コスト、or--？

1395
01:02:21,920 --> 01:02:26,195
>> 観客：そうは言ったら私が勉強を読みます
より多くのAppleユーザーはアプリのために支払いますversus--

1396
01:02:26,195 --> 01:02:28,320
DAVID J.マラン：それは本当です
彼らはすでにだから

1397
01:02:28,320 --> 01:02:29,640
自分のデバイスのために多くを支払います。

1398
01:02:29,640 --> 01:02:31,295
仮定だから、不合理ではありません。

1399
01:02:31,295 --> 01:02:32,170
>> AUDIENCE：[聞こえません]

1400
01:02:32,170 --> 01:02:34,439

1401
01:02:34,439 --> 01:02:35,230
DAVID J.マラン：OK。

1402
01:02:35,230 --> 01:02:38,667
彼らは支払うことをより喜んでいるのであれば、
その後、Androidユーザーと地獄へ。

1403
01:02:38,667 --> 01:02:40,500
彼らはするつもりはありません
とにかく私たちに何かを支払います。

1404
01:02:40,500 --> 01:02:43,499
我々としても私たちの優先順位を集中する可能性があり、
少なくとも最初の数ヶ月のために

1405
01:02:43,499 --> 01:02:44,810
または年、iOSの。

1406
01:02:44,810 --> 01:02:46,240
完全に合理的。

1407
01:02:46,240 --> 01:02:48,558
より包括的な何ですか
それよりも戦略？

1408
01:02:48,558 --> 01:02:53,740

1409
01:02:53,740 --> 01:02:54,960
Maybe--それは何ですか？

1410
01:02:54,960 --> 01:02:57,040
>> AUDIENCE：[聞こえません]

1411
01:02:57,040 --> 01:03:00,142
>> DAVID J.マラン：もっとexpensive--
ので、多分先に行くin​​--以上を投資しています。

1412
01:03:00,142 --> 01:03:00,767
AUDIENCE：うん。

1413
01:03:00,767 --> 01:03:02,050
ちょうど携帯サイト。

1414
01:03:02,050 --> 01:03:03,966
>> DAVID J.マラン：だからやります
携帯サイトではなく、

1415
01:03:03,966 --> 01:03:05,440
でも、この複雑さを心配します。

1416
01:03:05,440 --> 01:03:07,970
それとも合理的な戦略、
これでもFacebookがかかりました、

1417
01:03:07,970 --> 01:03:10,890
ハイブリッドで開始され、
アプリケーションそうではありませんので、

1418
01:03:10,890 --> 01:03:13,582
これよりもこれを行うには、そのはるかに困難。

1419
01:03:13,582 --> 01:03:16,040
あなただけのいくつかを読まなければなりません
ドキュメントには、どのように把握し、

1420
01:03:16,040 --> 01:03:17,480
App Storeに物事をアップロードします。

1421
01:03:17,480 --> 01:03:19,670
だから、多分あなたは、で始まります
この、初日となるよう、

1422
01:03:19,670 --> 01:03:21,112
あなたはすべてのユーザーをサポートすることができます。

1423
01:03:21,112 --> 01:03:23,570
そして、ちょうどFacebookのような
およびその他の企業が行っています、

1424
01:03:23,570 --> 01:03:25,330
あなたは、リソースを持っているとき、
あなたが人々を持って、

1425
01:03:25,330 --> 01:03:27,660
なぜあなたは再実装しません
ちょうどiOSアプリケーション。

1426
01:03:27,660 --> 01:03:31,460
あなたはまだ、みんなのために何を持っています
それは劣った経験だにもかかわらず、

1427
01:03:31,460 --> 01:03:33,330
おそらく、ハイブリッドアプリケーションと。

1428
01:03:33,330 --> 01:03:36,770
しかし、あなたは徐々にロールアウトすることができます
あなたの短期を交換

1429
01:03:36,770 --> 01:03:40,280
ハイブリッドアプリの措置
あなたのより多くのネイティブアプリケーション。

1430
01:03:40,280 --> 01:03:44,090
>> AUDIENCE：しかし、ハイブリッドアプリであなた
モバイル機能へのアクセス権を持っているのだろうか？

1431
01:03:44,090 --> 01:03:45,440
>> DAVID J.マラン：必ずしもそうではありません。

1432
01:03:45,440 --> 01:03:47,810
だから、多分あなたが作ります
早期に意識的な決定、

1433
01:03:47,810 --> 01:03:51,930
あなただけの写真をアップロードすることができます
FacebookのためのiPhoneのネイティブアプリケーション、

1434
01:03:51,930 --> 01:03:56,060
ではなくAndroidアプリケーション上で、
最初に、例えば。

1435
01:03:56,060 --> 01:04:00,600
そして、それはので、白い嘘のビットです
Webアプリケーションは、より多くの制限があります

1436
01:04:00,600 --> 01:04:03,620
ハイブリッドアプリケーションよりも、それは変わります
アウト、我々はドキュメントを読む場合

1437
01:04:03,620 --> 01:04:07,260
PhoneGapのそれのようなもののために、
人々は様々な方法が出ています

1438
01:04:07,260 --> 01:04:11,110
Webベースのアプリケーションを提供します
カメラへのアクセス、

1439
01:04:11,110 --> 01:04:13,310
あなたが使用している限り、
ハイブリッドアプリケーション。

1440
01:04:13,310 --> 01:04:14,214
>> それがどのように動作しますか？

1441
01:04:14,214 --> 01:04:16,130
ハイブリッドので、
アプリケーション、定義により、

1442
01:04:16,130 --> 01:04:19,600
、Objective-Cでのコードのビットを持っています
そして、スウィフト、およびJava、またはC＃で、

1443
01:04:19,600 --> 01:04:20,920
それはハードウェアにアクセスすることができます。

1444
01:04:20,920 --> 01:04:24,590
必ずしもすべてのもの、
しかし、それは非常によくかもしれません

1445
01:04:24,590 --> 01:04:27,310
あなたが持っている場合であります
カメラを取得するための十分なアクセス、

1446
01:04:27,310 --> 01:04:32,960
でも、Androidのプラットフォーム用、用
例えば、その不自然な例です。

1447
01:04:32,960 --> 01:04:35,515
>> 他の質問は？

1448
01:04:35,515 --> 01:04:36,279
大丈夫。

1449
01:04:36,279 --> 01:04:38,070
なぜ我々はなりません私たちの
ここで15分休憩。

1450
01:04:38,070 --> 01:04:44,060
我々は最終的に3で再開します
Webプログラミング、データベースを見て、

1451
01:04:44,060 --> 01:04:45,910
そして、Javascript。

1452
01:04:45,910 --> 01:04:48,877

