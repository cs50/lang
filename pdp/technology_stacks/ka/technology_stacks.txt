დევიდ ჯ Malan: ასე რომ, ჩვენ უკან. ასე რომ, მაღალი დონის თემის მომენტში ახლა ტექნოლოგია stacks, რომელიც არ არის განსაკუთრებით ტექნიკური ტერმინი, ეს უფრო დაჭერა ყველა ნებისმიერი რაოდენობის დაჯგუფების ტექნოლოგიები რომ თქვენ შეიძლება გამოიყენოთ პრობლემების მოსაგვარებლად. და ალბათ ყველაზე იარაღი გზა, რათა დაიწყოს იქნება შევხედოთ ენებზე მას შემდეგ, რაც მე შენარჩუნება გაისმა off მთელი bunch და ყველაზე ოთახში ყველას აქვს ალბათ მსმენია მინიმუმ ერთი. 

და რატომ არ ვცდილობთ, რომ გამოიყოს what-- განასხვავებს ამ ენებზე და გაიგო მოკლედ, როდესაც თქვენ აირჩიოს ერთი მეტი სხვა, თუ როგორ ისინი სახის ფუნდამენტურად სხვადასხვა და, განსაკუთრებით, როდესაც თქვენ chatting ინჟინერი, ან ცდილობს გადაწყვიტოს ვის აყვანის, ან რა განხორციელების წინადადება greenlight, როგორ რეალურად მიიღოს იმ სახის გადაწყვეტილებებს. 

მოდით უბრალოდ rattle ზოგიერთი რამ off. ენების ადამიანებს აქვთ სმენია, რა მოდის იბადება? C. OK. OK, C ++. რა არის ეს? 

აუდიტორია: Python. 

დევიდ ჯ Malan: Python. შესანიშნავი. სხვა რა? Visual Basic. გავიგე Java. Visual Basic-- a.k.a. VB. Java. .NET, რომელიც უფრო დაჭერა ყველა რა, როგორც წესი, C #, როგორც ენის კითხვა. და ნება მომეცით აღვნიშნო, რომ. ასე რომ, ჩვენ დავბრუნდებით რომ. ვწუხვარ? ბოდიში? 

აუდიტორია: SQL. დევიდ ჯ Malan: Scratch? აუდიტორია: SQL. დევიდ ჯ Malan: Oh, SQL. კარგი. SQL. ასე რომ, ჩვენ დავბრუნდებით that-- ფაქტობრივად, ეს good-- შესვენების შემდეგ, ასევე. სხვა რა? 

აუდიტორია: Oracle. 

დევიდ ჯ Malan: ასე რომ, Oracle, არ არის ენა. სინამდვილეში ისინი გამოიყენოთ SQL ისევე. მოდით ვთქვათ, რომ მას შემდეგ, რაც შესვენების ისევე. და ბოდიში, რაღაც აქ? აუდიტორია: Mathematica. დევიდ ჯ Malan: Mathematica? რათქმაუნდა. და MATLAB სახის იქ ზოგჯერ. 

აუდიტორია: R. 

დევიდ ჯ Malan: R. მოდით წავიდეთ მეტი აქ. Fortran. რა თქმა უნდა. ძველი სკოლა. Fortran. COBOL. მე toss გარეთ BASIC. BASIC. Any-- 

აუდიტორია: MATLAB? დევიდ ჯ Malan: MATLAB. Oh, სცემეს თქვენ მას. არაფერი? მე ვფიქრობ, რომ რამდენიმე სხვები. მე ვფიქრობ, რომ რამდენიმე სხვა. და რა იყო ბოლო? 

აუდიტორია: ASP. 

დევიდ ჯ Malan: ASP? ჰო. სერვერის აქტიური გვერდები. რომ, ზოგადად, რომ ქვეშ სხვა ენებზე, ზოგჯერ C #, მოდით დატოვება, რომ off. მაგრამ ჩვენ დავბრუნდებით, რომ for ფარგლებში და ასეთი. რაიმე სხვა? PHP პოპულარულია. Ruby სხვა. JavaScript, არ უნდა აგვერიოს ჯავის, კიდევ ერთი. სწორედ ასეთი ბევრი. 

ასე რომ, ეს შეიძლება იყოს, რა თქმა უნდა დიდი, თითქოს ეს სია არ არის უკვე, უბრალოდ უნდა დაიწყოს იცოდეს, თუ სად დაიწყება. ასე რომ, საბედნიეროდ, მოდით მივუდგეთ ამ რამდენიმე კუთხით. პირველ რიგში, მოდით ცდილობენ კატეგორიზაცია მაინც ამ ენებზე ორ ფართო თაიგულების, თქვენში საუბარი გვქონდა ადრე შესვენების სადაც ჩვენ ვისაუბრეთ შედგენა, და კოდის და მანქანა კოდი, იმიტომ, რომ ის არ არის, როგორ ყველა ენაზე მუშაობა. ასე რომ, ჩვენ pluck რამდენიმე მაგალითები of-- და კონტრ-examples-- რომ მოდელი. 

და მაშინ, რატომ არ გვაქვს ვისაუბროთ პროგრამები რომ ამ ენებზე ზოგადად გამოიყენება. და გულწრფელად, მიუხედავად იმისა, რომ ეს არის საკმაოდ გრძელი სია, ეს მხოლოდ subset ამ სიაში, რომ თქვენ, როგორც წესი მიაპყროს ამ დღეებში პრობლემების მოსაგვარებლად. გარკვეული ენებზე უფრო ახალი ვიდრე სხვები. გარკვეული ენებზე უფრო პოპულარულია, ვიდრე სხვები. ასე რომ, ეს იმას არ ნიშნავს, თქვენ გაქვთ ასეთი დაუძლეველი ამოცანა, სანამ როდესაც გადამწყვეტი შორის ამ სხვადასხვა ენებზე. 

ასე რომ, მოდით ეს. გვქონდა ადრე, კოდის, და მაშინ ჩვენ გვქონდა მანქანა კოდი. უი. წერა არასწორი სიტყვა. მანქანა კოდი. და ჩვენ გვქონდა პროცესი შუა called-- yeah, შემდგენელი. ასე რომ, შემდგენელი. 

და რა მანქანა კოდი რეალურად მუშაობს ბოლოს იქნება თქვენი ფაქტობრივი CPU. სხვა სიტყვებით, მანქანა კოდი, ნიშნავს, რომ დაბალი დონის ინსტრუქციები რომ CPU რეალურად ესმის. გარდა ამისა, გამოკლება, ნაბიჯი, შენახვა და ოპერაციების იგრძნობა. ასე რომ, ეს არის მოდელი, თუ რა საყოველთაოდ ცნობილია, როგორც შედგენილი ენებზე. ალბათ გასაკვირი არ არის. 

ასე რომ, ეს არის მოდელი for შედგენილი ენებზე. მაგრამ ეს თურმე არსებობს მეორე დონის ენებზე მოუწოდა გაგებული languages-- გაგებული languages-- რომ ოდნავ განსხვავებული. წერთ კოდის, აწარმოებს მათი მეშვეობით თარჯიმანი, და რომ თარჯიმანი რა გადის CPU. სხვა სიტყვებით, რაც თქვენ არ ასხივებენ არის ის, რაც, როგორც ჩანს? მანქანა კოდი. Zeros და პირობა, რომ CPU თავად საბოლოოდ ესმის. 

ასე რომ, ამ პირველი ვერსია და ენებზე, როგორიცაა C, როგორც ჩვენ ვნახეთ, წერთ კოდის რომ ცოტა arcane, მაგრამ მაინც, რომ ეს ერთგვარი ინგლისურ მსგავსი და ეს მაინც იკითხება კიდევ შეეგუება იგი. თქვენ გაუშვით მეშვეობით შემდგენელი და გარეთ თქვენ, საბოლოო ჯამში, zeros და პირობა. 

რომ გამარტივება. არსებობს სხვა ნაბიჯები არსებობს. სინამდვილეში, თუ თქვენ ოდესმე მსმენია ტერმინი "ასამბლეის ენაზე" რომ ერთი ნაბიჯით ადრე zeros და პირობა. რომ ცოტა მეტი იკითხება, მაგრამ მაინც საკმაოდ arcane. და ასე რომ შუალედური ნაბიჯები რომლებიც, ფაქტობრივად, ხდება აქ. მაგრამ გამომავალი, საბოლოო ჯამში, არის ამ zeros და პირობა. 

მაგრამ გაგებული მსოფლიოში, სადაც თქვენ უნდა ენებზე, რომ ინტერპრეტაცია ენებზე, თქვენ რეალურად გაფართოებული, რომ ნაბიჯი. სხვა სიტყვებით, როდესაც ვწერთ პროგრამა, თქვენ უბრალოდ დაუყოვნებლივ აწარმოებს. თქვენ არ კომპილირება და მაშინ აწარმოებს, როგორც მე ადრე. თქვენ უბრალოდ დაწერეთ და გაუშვით. და თუ გვინდა, რომ სწრაფი ცვლილება, თქვენ მიიღოს სწრაფი ცვლილების და გამეორება იგი. ასე რომ არ არის შუა ნაბიჯი აქ. 

ახლა, პროგრამის მე დავწერე ადრე, რომელიც ამ "Hello World" პროგრამის ფარგლებში, თქვენ გონივრულად wonder-- და გონივრულად state--, რომ არ იყო, რომ დრო შრომატევადი კომპილაციის ჩემი პროგრამა. როგორც ჩანს, ეს არ კეთდება ეს, ისევე, როგორც, რომ. და იქ გრაფიკული ვერსიები compilers. მე გამოყენებით ძალიან arcane ვერსია, მაგრამ თქვენ ვერ მოხვდა ღილაკს და რომ მართლაც შედგენაში თქვენთვის. მე შედგენილი პროგრამა და შემდეგ კიდევ ერთხელ, რომ აწარმოებს, მე მხოლოდ ამის გაკეთება. და ეს შედეგები მარცხენა არსებობს, "გაუმარჯოს!" რომ არ ჩანს, რომ ყველა მძიმეა. მაგრამ, როდესაც თქვენი პროგრამები მეტი, ვიდრე უბრალოდ ერთი, ორი, სამი, ოთხი, ხუთი ხაზების ხანგრძლივი, მას შეუძლია მიიღოს გაცილებით წამში ადგენენ. ზოგჯერ კი წუთი ან საკმაოდ ცოტა დრო ადგენენ. ყოველივე ამის შემდეგ, ზოგიერთი მსოფლიოში ყველაზე დიდი პროდუქცია რამ, როგორიცაა ოპერაციული სისტემები, Microsoft Word, Microsoft Excel, რომელიც შეიძლება იყოს ასობით ათასი ან თუნდაც მილიონობით ხაზი კოდი ხანგრძლივი, და იმ არ მხოლოდ დაუყოვნებლივ შეასრულოს. 

გარდა ამისა, ინტერნეტში, ეს გახდა მოდური გამოყენება უბრალოდ ინტერპრეტაცია ენები, ნაწილობრივ იმიტომ, რომ თქვენ შეუძლია ცვლილება, როგორც დეველოპერი და შემდეგ უბრალოდ დაუყოვნებლივ განაახლეთ ბრაუზერის გვერდი და დაუყოვნებლივ ვხედავთ შედეგი. ასე რომ, HTML, ხოლო არ პროგრამირების ენა, არის ენა, რომელიც ის ინტერპრეტაცია. და ჩვენ ვნახეთ, რომ იგივე ეფექტი გუშინ. თქვენ უბრალოდ განაახლეთ გვერდი მას შემდეგ, რაც ცვლილება Cloud9 and-- voila-- ხედავთ ახალ შედეგი. 

ასე რომ, რა არის განსხვავება აქ? HTML, გავიხსენოთ, რომ ჩვენ გვქონდა ღია HTML, ღია ხელმძღვანელი, ღია სახელწოდება, ახლო ტიტული, ახლო ხელმძღვანელი, ღია ორგანოს, და სხვ. ჩვენ გვქონდა ყველა ამ tags, რომ ჩვენ საკმაოდ ბევრი ამბობს, ვუთხრა ბრაუზერის რა უნდა გააკეთოს. Hey ბრაუზერი, აქ მოდის HTML გვერდი. Hey ბრაუზერი, აქ ჩნდება ტიტული. Hey ბრაუზერი, აქ მოდის ზოგიერთი ტექსტი, რომელიც უნდა იყოს გაბედული. და მაშინ გეტყვით, პირიქით. Hey ბრაუზერის, რომ ეს თამამი სახე ტექსტი. Hey ბრაუზერის, რომ ეს ორგანო. და ასე შემდეგ. 

ასე რომ, რა არის ბრაუზერი? ბრაუზერი არის მხოლოდ თარჯიმანი. ეს არის პროგრამა, რომელიც ვინმეს მოსწონს Microsoft და Google დაწერილი, რომლის მიზანი ცხოვრებაში არის ის, რომ წაიკითხა ენის, რომელიც ცნობილია როგორც HTML, და ინტერპრეტაცია მას. ყველაზე ქვედა, მარცხნიდან მარჯვნივ. და ნებისმიერ დროს, ბრაუზერის ხედავს ღია bracket, სათაური, ახლო bracket, ეს უნდა ინტერპრეტაცია, რომ ნიშნავს, oh, რომ ნიშნავს, რომ მე უნდა დააყენოს ეს სიტყვები გზა აქ ზედა ბრაუზერში. 

ასე რომ, ეს უბრალოდ აკეთებს იმას HTML კოდი ამბობს. მაგრამ არ არსებობს zeros და პირობა. არ არსებობს კოლექცია. თქვენ არ გავაკეთოთ. ბრაუზერი არ გავაკეთებთ. უბრალოდ არ არის ჩართული. 

ასე რომ, სულის ამ მიმდინარე თემა, გუშინ და დღეს, რომელიც, როგორც ჩანს, შესანიშნავი ფუნქცია. თქვენ ზოგავთ კოდი და შემდეგ უბრალოდ გაუშვით და ინტერპრეტაცია მას. არ არსებობს შუალედური ნაბიჯები. რა თქმა უნდა, არ არის ღირებულება? ყველა ვერ იქნება upsides. ასე რომ, რა შეიძლება, რომ ღირებულება იქნება? 

აუდიტორია: ფართი. 

დევიდ ჯ Malan: ფართი. ასე რომ, რა თქმა უნდა. In შედგენილი მსოფლიოში, თქვენ უნდა არა მხოლოდ ორიგინალური კოდის, თქვენ ასევე შექმნა და მაშინ, სავარაუდოდ, გადარჩენის მანქანა კოდი zeros და პირობა და ეს მივიღე მიიღოს გარკვეული რაოდენობის სივრცეში. აბსოლუტურად. ასე რომ, ის რაზეც თქვენ მეტი სივრცე. ჰო? 

აუდიტორია: ბრაუზერები შეიძლება ინტერპრეტაცია სხვადასხვაგვარად. 

დევიდ ჯ Malan: ბრაუზერები შეიძლება ინტერპრეტაცია მას განსხვავებულად. ეს სიმართლეა. მაგრამ მე არ ვარ დარწმუნებული ვარ, კომფორტული აცხადებდნენ ეს იმიტომ, რომ ის ინტერპრეტაცია. ეს უფრო მეტია, მხოლოდ იმიტომ, რომ განხორციელების ენა რომელიც თვითონ აქვს ორაზროვნება. მოდით, ნუ საკმაოდ ადასტურებენ რომ ერთ-ერთი, მაგრამ კარგი hunch. რა შეიძლება იყოს გადახდილი ფასი? ანდრია? 

აუდიტორია: თქვენ აერთიანებს ორი ნაბიჯი, ასე რომ თქვენ ამიტომ აქვს მზარდი სირთულის, ასევე. 

დევიდ ჯ Malan: complex-- უფრო რთული საიდან ვისთვის? 

აუდიტორია: ასე რომ, თარჯიმანი ნაბიჯი, თქვენ აერთიანებს თარჯიმანი და შემდგენელი უბრალოდ წამყვანი up, რომელთა მიზანია 

დევიდ ჯ Malan: Ah, OK. ბედის ირონიით, ეს, ალბათ, ცოტა მარტივი განსახორციელებლად თარჯიმანი, მიუხედავად იმისა, რომ, როგორც ჩანს, სარგებელი upsides ამ მოხერხებულობით. ასე რომ, შესაძლოა, ნამდვილი. მაგრამ ეს ერთგვარი დამოკიდებული, მე ვიტყოდი, ენაზე და როგორ მივიდნენ შესახებ ახორციელებს მას. აქ შეიძლება იყოს გაცილებით მეტი სირთულის, რეალურად, შემდგენელი, მხოლოდ იმიტომ, რომ უნდა წავიდეს რაღაც ისე მაღალი დონის რაღაც ისე დაბალ დონეზე. მაგრამ კარგი აზრის. 

ასე რომ სხვა გზა, შედგენილი პროგრამა, როდესაც გადაიქცა ამ zeros და პირობა, მთავრდება ენის რომ CPU საუბრობს, იმის გამო, რომ ამ მხარეს მსოფლიოში, პროგრამა თქვენ წერილობითი, კოდი თქვენ წერილობითი, არასოდეს რეალურად იღებს გარდაიქმნება ფაქტობრივი ენაზე კომპიუტერული საუბრობს. Zeros და პირობა. იგი რჩება ორიგინალური, მეტი ადამიანის მეგობრული, უფრო იკითხება ენაზე. ასე რომ, რაც შეიძლება გავლენა არსებობს, თუ თქვენ არ რეალურად გადაიტვირთოთ კონვერტაცია თქვენს პროგრამა ძალიან ენის რომ ძირითადი კომპიუტერული ლაპარაკობს? 

აუდიტორია: არ შეიძლება მესმის რაღაც? 

დევიდ ჯ Malan: შესაძლოა არ მესმის რაღაც. და რომ შეიძლება claim-- თუ ეს არ მესმის რაღაც, რომ ხარვეზის ან ნაკლებობა of ფუნქცია თარჯიმანი. ასე რომ იქნებოდა უფრო შეცდომა, ვიდრე ღირებულება. 

აუდიტორია: თქვენ გაქვთ კოდის? დევიდ ჯ Malan: არსებობს კარგი ერთი. ასე რომ, downside აქ თქვენ როგორც ჩანს, ხელი მიუწვდება. თქვენ, ბოლომდე შესახებ, შესაძლოა, როგორც ჩანს გვაქვს წვდომა კოდის. და ეს არ არის ყოველთვის მართალია. მაგრამ ეს არის ნამდვილი შემთხვევაში JavaScript, რომელიც ჩვენ შევხედოთ შემდეგ შესვენების დღეს, რომელიც არის გაგებული პროგრამირების ენა რომ წერთ კოდის. 

მაგრამ, რომ კოდის იღებს გადაეცემა თქვენი სერვერის ბრაუზერში და ეშვება ადამიანის ბრაუზერის. ასე რომ, აქ მას შეეძლო უბრალოდ გახსნა window, როგორც მე უკვე აკეთებს Chrome, და შევხედოთ მას, როგორც ჩვენ მოხვდა გუშინ Google. ეს შეიძლება ცოტა გაუგებარია, მაგრამ ეს არ არის. ასე რომ, აბსოლუტურად ერთი ფასის გადახდა. აუდიტორია: Performance ჰიტი? დევიდ ჯ Malan: ჰო. და ეს სხვა biggie. არსებობს შესრულების მოხვდა. იმის გამო, რომ თქვენ გაქვთ ეს შუა კაცი, რომელიც თავისთავად არის პროგრამა, თქვენ და CPU, როგორც ეწინააღმდეგებოდა უბრალოდ კვების ამ ნედლეულის zeros და პირობა CPU, იქ შესრულების მოხვდა, რომ თქვენ მიიღოს გაგებული ენის. ისეთი, რომ თვითნებურად, პროგრამა რომ შესაძლოა ერთი მეორე აწარმოებს კომპიუტერული ან წუთი აწარმოებს კომპიუტერული აქ, შეიძლება მიიღოს 10 წამში ან 10 წუთი აწარმოებს on კომპიუტერის აქ. ეს საერთოდ არ იქნება, რომ დიდი სხვაობა ფაქტორი 10-- იმიტომ, რომ იქ ოპტიმიზაციით შეგიძლიათ გააკეთოთ. მაგრამ ეს თითქმის ყოველთვის ნელა. ახლა, Flip მხარე, რომ შეშფოთება ის არის, რომ, კარგად კომპიუტერები, ყოველ 12 18 months-- მიხედვით მური კანონი, ასე ვთქვათ უბრალოდ მიღების სწრაფად და სწრაფად. მე მაქვს უფრო და უფრო დისკზე. მე უფრო და უფრო მეტი RAM. ვინ ზრუნავს? 

და ეს არის ერთგვარი გონივრული არგუმენტი. მართლაც, ერთ-ერთი მიზეზი ამიტომ, ჩვენ ვერ შეეგუება ნელი ინტერპრეტაცია ენები იმიტომ, ჩვენ ადამიანები ნამდვილად არ შეამჩნია. კომპიუტერები გვაქვს მიღებული უბრალოდ ასე darn სწრაფად. ვინაიდან უკან დღეს, განსაკუთრებით როდესაც ტექნიკა ბევრად უფრო შეზღუდული, თქვენ ნაკლებად ჰქონდა ყველაფერი, ეს იყო ბევრად უფრო ძვირია ასე რომ, ყველაფერი უფრო ძვირია, ასევე მაშინ თქვენ ნამდვილად სურდა შესუსტებას იმდენი სპექტაკლი, როგორც თქვენ შეიძლება. მაგრამ, რომ საჭიროა წერა ქვედა დონეზე, თუ გნებავთ, ერთად შედგენილი ენაზე. 

ასე, რომ თქვენ მიიღოს ამ შესრულების მოხვდა. არამედ ზოგადად, upsides როგორც ჩანს, ღირს ამ დღეებში. ისე, გარდა იმისა, რომ ინტელექტუალური საკუთრების საკითხი. ეს ერთგვარი readability კოდი, ჩვენ გამოგიგზავნით დაბრუნებას, როდესაც ჩვენ შევხედოთ JavaScript. 

მოდით ცდილობენ კატეგორიზაცია მინიმუმ რამდენიმე მათგანი. ამიტომ შორის შედგენილი ენებზე, ჩვენ უნდა C, C ++, kinda, დალაგების, Java, მიუხედავად იმისა, რომ ცოტა გამონაკლისი, მიზეზი მე შენ გაჩვენებ მხოლოდ ერთი წუთით. C # იქნებოდა ამ სიაში. ჩვენ შევხედოთ უფრო მხოლოდ უფრო თანამედროვე ენებზე. კარგი. და რომ, როგორც ჩანს, უამრავი არსებობს. ვინაიდან ამ მხარეს ღობე, ჩვენ შეიძლება JavaScript და Python, და PHP, და Ruby. და ის არის, რომ საკმარისი ბოლოდროინდელი პირობა? რომ იგრძნობა უამრავი ახლა. კარგი. და მაშინ dot dot dot, მას შემდეგ, რაც სია უსასრულოა. 

და სინამდვილეში, თუ ჩვენ გვინდა, რომ მხოლოდ მისაღებად გრძნობა ამას Wikipedia, შედგენილი ენებზე. მე გამოცნობა ჩვენ შეუძლია მიიღოს ბევრად უფრო ამომწურავი ჩამონათვალი. ასე რომ, აქ ჩვენ მივდივართ. ასე რომ, აქ არის ბევრად უფრო ამომწურავი ჩამონათვალი. და მე იმ იმედით, ვინმეს ვხვდები D როგორც ენა, იმიტომ, რომ ძალიან არსებობს, მაგრამ ისინი გაჩერდნენ D როგორც ჩანს. მიუხედავად იმისა, რომ, შესაძლოა, რეალურად იყოს E. 

Oh, რეალურად, ეს არ უნდა იყოს სიაში ამ დღეებში. Swift ფაქტიურად ენა, რომ Apple- გამოიგონა რომ არის გამოყენებული, სულ უფრო და უფრო ასე რომ, iPhone განვითარებას. მაგრამ ჩვენ დავბრუნდებით რომ ჩვენი დისკუსია მობილური მხოლოდ ცოტა, ისევე. ასე რომ, Swift, ასევე. 

და მაშინ, თუ ჩვენ წასვლა გაგებული language-- გაგებული language-- მაშინ აქ კი აღარ სიაშია. ასე რომ, თუ თქვენ უბრალოდ google და გამორჩა Wikipedia ამ, დაინახავთ ყველა სახის ენებზე. მაგრამ მიზანი არის, დღეს ნამდვილად, უბრალოდ boils ქვემოთ იქნებ ეს საკითხი ინტელექტუალური საკუთრების და წაკითხვა ბოლოსთვის შესახებ და შესრულება, არის კიდევ ერთი biggie ისევე. 

ასე რომ, მათ შორის ამ ენებზე, ვნახოთ თუ ჩვენ შეგვიძლია მოგცეთ მხოლოდ რამდენიმე ნიმუში ენებზე. ჩვენ არ გვინდა, უნდა გაიაროს ყველა ენაზე უსასრულოდ. ოდესმე თუ დაინტერესდა, თუ რა გარკვეული ენის ჰგავს? ჩვენ არ ვხედავთ მომენტში წინ. რატომ არ უნდა მიიღოს რამდენიმე მხატვრული მოითხოვს. ვინ მინდა დაინახოს, თუ რა სხვა ენაზე ჰგავს? ჰო. 

აუდიტორია: Java. 

დევიდ ჯ Malan: Java. კარგი. ასე რომ, მოდით წავიდეთ Java. და მხოლოდ გადმოგცეთ sample-- ჩვენ შეგვიძლია ჩავწეროთ ყველა ამ out, მაგრამ ეს იქნება უფრო სწრაფად, უბრალოდ შევხედოთ სხვისი ნიმუში კოდი. კარგი. ასე რომ, ეს კარგი მაგალითი? უი. კარგი. ასე რომ აქ არის Java მობილური პროგრამის მე დავწერე ადრე, "Hello World". 

ასე რომ, Java, თქვენ ხშირად ვხედავ სიტყვა "კლასი." მაშინ დაინახავთ რამდენიმე სახელი შემდეგ. დაინახავთ curly აფრთხილებს როგორც ჩვენ ვნახეთ ადრე, და ზოგჯერ მიდიან იგივე ხაზი, ზოგჯერ სხვა ხაზები, ეს ერთგვარი პირადი გადაწყვეტილება. დაინახავთ საკვანძო სიტყვები, როგორიცაა "საჯარო", "სტატიკური", "ბათილად." მაგრამ ჩვენ არ ვხედავთ "მთავარი". "მთავარი", ზოგადად, სახელი ძირითადად ფუნქცია ან ძირითადად ბლოკი კოდი რომ იღებს აწარმოებს პროგრამა. 

"String". რა იგულისხმება string ადრე? მე ეს სახის casually. სიმებიანი რა არის? სიტყვა. ეს არის როგორც თანმიმდევრობა სიმბოლო. ინდივიდუალური პერსონაჟი, უკან უკან დაბრუნება, როგორც წესი, მასივი, როგორც ჩვენ განვიხილეთ. და სინამდვილეში, რომ ეს სინტაქსი აქ, ორი კვადრატულ ფრჩხილებში? ეს ნიშნავს, რომ hey კომპიუტერი, აქ მოდის მასივი სტრიქონები. კვადრატული ფრჩხილი ნოტაცია არის გამოიყენება აღინიშნოს, რომ. და მაშინ, ალბათ, მიიღოს გამოიცნოს რა ჯერ ეს ხაზგასმით ბლოკი კოდი ალბათ? 

აუდიტორია: გამომავალი? 

დევიდ ჯ Malan: ჰო. იგი ბეჭდავს რაღაც ეკრანზე. ასე რომ, "სისტემა" არის ერთგვარი მინიშნება თქვენს კომპიუტერში. "Out" ნიშნავს, რომ თქვენი კომპიუტერის გამომავალი ან ეკრანზე. ასე რომ, "system.out.print ln" ალბათ ნიშნავს? "შეს." Print ხაზი, რომელიც პროგრამისტების, როგორიცაა რომ, როგორც ჩანს, სიტყვიერად ზოგიერთი სიტყვა out მათი მთლიანად და მიიღოს სწრაფი ღილაკები სხვა სიტყვებით. მაგრამ "ln" არის ხაზი, ისე ბეჭდვითი ონლაინ. ასე რომ ბეჭდავს out "Hello World! "მოჰყვა ახალი ხაზი. 

ასე რომ, ეს არის ის. მაგრამ ჯავის არის რა ისინი დარეკეთ ობიექტზე ორიენტირებული. და მართლაც, უბრალოდ მისცეს რამდენიმე სხვა განმარტებები იქ, რომ თქვენ შეიძლება ვხედავთ, ზოგადად, უამრავი სხვადასხვა სახის ენებზე, მაგრამ ყველაზე გავრცელებული არის პროცედურული და აუცილებელია ენებზე. არსებობს ფუნქციური ენაზე, რომელიც არ ნიშნავს, რომ სხვები არიან nonfunctional. და შემდეგ იქ ობიექტის ორიენტირებული ენებზე. და ეს არის ალბათ საუკეთესო კატეგორიზაციის ყველაზე ენებზე რომ თქვენ ოდესმე აირჩიოს სახის ტიპიური კომერციული პროექტი. 

ეს იქნება ძალიან ბევრი, მე ვფიქრობ, რათ ხვრელი დაცემას ცდილობს ახსნას სხვადასხვა განსხვავებები. მაგრამ ენებზე ჩვენ ვნახეთ, შესაბამისად far-- C პროცედურული ან აუცილებელია ენაზე. ცოტა ხნის წინ გამოიგონეს ენებზე, როგორც წესი, ბოდიში, ობიექტზე ორიენტირებული, რაც იმას ნიშნავს, მათ აქვთ სხვა თვისებები მათ. შემიძლია ავუხსნა მას ამ გზით? მოდით არ დაცემას. 

ობიექტზე ორიენტირებული საშუალება თქვენ შეგიძლიათ implement-- თქვენ შეგიძლიათ მოდელზე რეალურ სამყაროში ცოტა უფრო ეფექტურად. კაცობრიობა, დროთა განმავლობაში, უკვე figured out, wow, ეს კარგი იქნება, თუ ჩემს ენაზე ჰქონდა ამ ფუნქციის ან, რომ ფუნქცია. ამიტომაც არის, რომ ჩვენ გვაქვს მრავალ ენაზე მსოფლიოში. გონივრული ადამიანი, ჭკვიანი ადამიანი, ეთანხმებით თუ არა და უცვლელად ერთგვარი გავერთიანდეთ განვითარების ახალი languages ​​ყველა ერთად. 

საქმე იმაშია. Apple გამოიგონა Swift in იმედები სავარაუდოდ ამცირებს ბარი iPhone განვითარება, რადგან წინა language-- მოუწოდა Objective-C, რომელიც შეიძლება ასევე იქნება ჩვენს სიაში აქ იყო ბევრად უფრო arcane და ბევრი უფრო გადაიტანოთ ერთი გონება გარშემო. და როგორც პროგრამირების ხდება, სავარაუდოდ, უფრო ხელმისაწვდომი და უფრო ფართოდ მიერ მიღებული ადამიანი კი ნაკლები ტექნიკური, goal-- ეს არის ძალიან მამაცი მიზანია ცდილობენ შეამცირონ ბარიერი შესვლის მიღების ენებზე თავად ადვილია უნდა დაიწყო, მაგრამ არანაკლებ ძლიერი აუცილებლად. 

და ერთი სხვა ენაზე. რატომ არ უნდა შევხედოთ at რაღაც Python, რომელიც ძალიან პოპულარულია ამ დღეებში. Python. Sample პროგრამა. მოდი ვნახოთ. "Hello World" ენებზე. მოდი გავაკეთოთ ეს. "გამარჯობა მსოფლიო." მოდით ვნახოთ, თუ ეს აძლევს ჩვენს ლამაზი მაგალითია. კარგი. ასე რომ, ეს არის რეალურად სახის გართობა. ასე რომ, თუ თქვენ ოდესმე google "Hello World", რომელიც ხდება, რომ ერთ-ერთი პირველი პროგრამები ოდესმე დაწერილი თანამედროვე ენაზე, ისევე, როგორც მტკიცებულება კონცეფცია, ხედავთ ყველა სახის შესრულება ამ. 

ზოგიერთი ენებზე მე კი არ მსმენია. მაგრამ თქვენ შეგიძლიათ see-- მოდით წავიდეთ Basic, ერთი გავიგე წლის წინ, ნაწილი. ეს იყო მხიარული ენის იმიტომ, რომ თქვენ ჰქონდა, როგორც პროგრამისტი, ნომერი ყველა თქვენი ხაზები. არ არის განსხვავებით, რაც მე აკეთებს, როდესაც ვწერდი pseudocode ყვითელი დოკუმენტი ადრე ბინარული ძებნის საძებნი სატელეფონო წიგნი. 

ასე რომ, თუ თქვენ სურდა წასვლა მეორე ხაზი, თქვენ ფაქტიურად ტიპის, წასვლა 10, ან წასვლა 20. და თუ თქვენ წერა ხაზები, კონვენცია იყო ამის გაკეთება, ეს არის line 10, ეს არის ხაზი 20, ეს არის ხაზი 30, 40, არაფერი შორის, რითაც საკუთარ თავს გარკვეული ოთახი თუ თქვენ გადაწყვიტეთ, დაველოდოთ წუთში, მე უნდა დასძინა, ზოგიერთი უფრო კოდი სადღაც. თქვენ მაინც ერთგვარი ცხრა შანსი შესუსტებას, რომ მათ შორის თქვენი პროგრამა სანამ ჰქონდა ხელით renumber ყველაფერი. 

ასე რომ, ეს არის ერთგვარი რას ვგულისხმობ როდესაც ვამბობ, რომ მსოფლიოში არ ამუშავება ახალი თვისებები. სადღაც გზაზე ვინმე მიხვდა, ბიჭი, ეს არის სულელური. ეს არის უბრალოდ შექმნის მუშაობა პროგრამისტი. ასე რომ, ის უბრალოდ სახის აშენებული ახალი ფენა თავზე რომ ისე, რომ თქვენ არ უნდა ფიქრი იმაზე, თუ რა ხაზის ნომრები თქვენი კოდი ფაქტიურად. 

ასე რომ, როდესაც შესაძლოა აირჩიოს ერთ ენაზე ან სხვა? ისე, რაც ამ ენები თქვენ, როგორც წესი, ისმენს ყველაზე თქვენი საკუთარი სამყარო ამ დღეებში? მოდით ვარდნა ქვემოთ Objective-C ძალიან. 

აუდიტორია: C #. დევიდ ჯ Malan: C #. ნება მომეცით, ფერი. გვაქვს ჩვენი სხვა ფერი სადმე? ასე რომ, C #. და რა იცით C #? არაფერი გაზაფხულზე იბადება? 

აუდიტორია: ეს არის პროგრამირების ენაზე. დევიდ ჯ Malan: ეს არის პროგრამირების ენაზე. კარგი. ეს სიმართლეა. ასე რომ, ჩვენ ვსაუბრობთ C #. C # ტენდენცია იყოს გამოყენებული Windows გარემოში, ასე რომ, თუ თქვენ წერა Microsoft პროგრამული უზრუნველყოფა Windows, C # არის ძალიან ხშირად გამოიყენება, თუ არა ეს საგამომცემლო პროგრამული უზრუნველყოფა, ან კი ტელეფონი პროგრამული უზრუნველყოფა Windows ტელეფონები, თუ მქონდა იმ, ან ინტერნეტში კი ძალიან. და სინამდვილეში, შესაძლოა, Kareem აღნიშნული ASP ადრე? ასე რომ, არსებობს ასევე ამ რამ მოუწოდა ფარგლებში, რომელიც ჩვენ შეგვიძლია წარმოგიდგინოთ გაფართოება. ჩარჩო, როგორც ASP. დგას სერვერის აქტიური გვერდები. და ეს არის კოდი და გზა პროგრამირების რომ, ზოგადად, ხდის ადვილია დაწერა ვებ დაფუძნებული პროგრამები. სხვა სიტყვებით, ეს იქნება სუპერ, სუპერ შემაშფოთებელი დაწერა ნახვა იმ ენაზე, C, რომ ჩვენ ვნახეთ ადრე, იმიტომ, რომ თქვენ უნდა გამოიყენოთ ბეჭდვითი + F, თქვენ უნდა გამოიყენოთ, რომ სიტყვით "მთავარი" და curly აფრთხილებს. ბევრი arcane სინტაქსი და მიდგომა განახორციელოს ის, რაც საკმაოდ რთული. ვებ გვერდზე. 

ასე რომ, სხვა ენებზე არ განვითარდა რათა, რომ ასეთი რამ ადვილია. და თავის მხრივ, ხალხი არ ამუშავება ერთად ფარგლებში, ერთგვარი ინსტრუმენტები რომელიც შეგიძლიათ გამოიყენოთ, რომ მას კი ადვილია დაწერა ვებ გვერდებზე. ასე მაგალითად, რათა ეს ბევრად უფრო კონკრეტული, ნება მომეცით გახსენით მხოლოდ ტექსტური ფაილი ერთი წუთით. 

და თქვენ ალბათ გახსოვთ გუშინ რომ ჩვენ რაღაც თქვა: ისევე, როგორც ეს არის ვებ-გვერდზე. HTML. Close HTML. ნება მომეცით გამოტოვოთ ხელმძღვანელი და მხოლოდ ამის სხეულის აქ. ვარაუდობენ, რომ მინდოდა წერა არ არის "Hello World" მაგრამ "გამარჯობა დავით," სადაც დავითი არის სახელი შესული შესახებ. რა რაღაც ASP გააკეთებს, ან JSP-- რომელიც Java სერვერზე pages-- ან ნებისმიერი რაოდენობის სხვა ფარგლებში არის, რომ ისინი არ ენებზე, თავისთავად. ისინი ისევე როგორც დამატებითი პროგრამული უზრუნველყოფა, რომ თქვენ დააყენოთ თქვენს გარემოში რომ მხოლოდ გაუადვილოს პროგრამა. 

ასე მაგალითად, ვიდრე უნდა გავაკეთოთ რაღაც "hello, printf (" დავითი ")" ან, რომ რაღაც სახის თანამშრომლობის mingling-- სახის კოდი ჩვენ ვნახეთ ადრე თქვენ რაღაც ბევრად უფრო მარტივია, როგორიცაა "სახელით%." ასე რომ, ამ ფარგლებში, როგორიცაა ASP-- და მე არ მახსოვს, თუ მე მისაღებად სინტაქსი მხოლოდ უფლება ASP. JSP არის little-- არის ეს უფლება? 

ასე რომ, ASP, ეს არის ერთგვარი სპეციალური სინტაქსი რომ ზოგიერთი დეველოპერები გადავწყვიტეთ ეს შეიძლება დაეხმაროს ხალხი. და შემიძლია გამოვხატო უფრო მოკლედ ჩანაცვლების, მაგალითად. Like დააყენა მნიშვნელობა აქ, სადაც ეს მნიშვნელობა სახელი არ არის N-A-M-E, ეს გარკვეული მნიშვნელობა ინახება იქ. ასე რომ, "სახელი", ამ კონტექსტში, ჩვენ მოვუწოდებთ ცვლადი. ალგებრა აქვს ცვლადები როგორც x და y და z. პროგრამისტები გამოიყენოთ ცვლადები, რომლებიც უფრო აღწერითი ვიდრე x, y და z, როგორც წესი. ასე რომ, "სახელი" ფაქტიურად იყოს გარკვეული სახის მეხსიერების კონტეინერი რაღაც D-A-V-I-D, ჩემი სახელი, ან ვინც სხვა შესული ნახვა. 

ასე რომ, ეს არის ერთგვარი ფონდის თქვენ მიიღებთ გარკვეულ გარემოში. ასე რომ, C # და რაღაც ASP რომ ძალიან ხშირად გამოყენებული იქნას Windows მსოფლიოში, თუ არა მისი საგამომცემლო პროგრამული უზრუნველყოფის ან სერვერზე, განსაკუთრებით, თუ თქვენი სერვერები, თავის მხრივ, გაშვებული Microsoft Windows და Microsoft IIS-- ან ინტერნეტში საინფორმაციო Server, თუ მივიღებ აბრევიატურა right-- რაც Microsoft- ის ვებ სერვერზე. 

ასე რომ, რა სხვა ენებზე ეგ იცნობს, ან გსმენიათ უფრო ხშირად, ვიდრე არ არის? 

აუდიტორია: მე ვიცი, რომ Python ს სახის პოპულარული [INAUDIBLE]. დევიდ ჯ Malan: ძალიან პოპულარულია. ასე რომ, Python აქ ძალიან ხშირად გამოიყენება სამეცნიერო პროგრამები და მონაცემები მეცნიერებაში, სადაც თქვენ გაქვთ ბევრი მონაცემები, რომ გსურთ ანალიზი და თქვენ გინდათ გამოიყენოთ პროგრამირების ენის იგი. R შეიძლება ხშირად უნდა იქნას გამოყენებული, რომ ასევე, სტატისტიკური კონტექსტში. მაგრამ Python აქვს ამდენი თვისებები აშენდა. ასე რომ, ბევრი დამატებითი ბიბლიოთეკების, როგორც ამბობენ. 

ბიბლიოთეკა მხოლოდ კოლექციები კოდი, რომ სხვა ადამიანები წერდა, რომ თქვენ შეგიძლიათ გამოიყენოთ ისე, რომ თქვენ არ უნდა ხელახლა იმ დისკები. ასე რომ, Python ძალიან ხშირად გამოიყენება მონაცემები მეცნიერების პროგრამები. მაგრამ ეს ასევე არის ძალიან ხშირად გამოყენებული ვებ პროგრამები. შეგიძლიათ განახორციელოს დინამიური ნახვა გამოყენებით Python. 

და დინამიური ნახვა, მე ვგულისხმობ არა მხოლოდ კონტენტი როგორც ჩვენ შევქმენით გუშინ მხოლოდ მძიმე კოდირების ლათინური ტექსტი და სხვა მსგავსი რამ, არამედ უნარი რეგისტრაციას, უნარი შეიძინოს რაღაც, უნარი შეამოწმეთ თქვენი სავაჭრო carts, ან მოსწონს. ყველა, რომელიც მოითხოვს დინამიკას და თქვენ საჭიროა გარკვეული ენის, როგორც ერთი ამათგანი. 

აუდიტორია: ასე რომ, ჯერ Python აქვს საკუთარი გაფართოება, მსგავსი მინდა [INAUDIBLE] დევიდ ჯ Malan: ეს იმას. ასე რომ, მსოფლიოში Python, Django არის ძალიან პოპულარული ჩარჩოს Python. WSGI არის კიდევ ერთი მექანიზმი, რომელიც არის ერთგვარი განსხვავებული ამ მაგრამ მსგავსი სულისკვეთება. ეს add-on, რომელიც საშუალებას გაძლევთ აწარმოებს პითონში სერვერზე. არსებობს other-- yeah. ასე რომ, ეს ჩვენ მოვუწოდებთ ფარგლებში. და ეს ცოტა შეურაცხყოფა. ეს არის კიდევ ერთი ვებ სერვერზე ტექნოლოგია. მაგრამ ჩვენ გავაგრძელებთ მარტივი და ის ამ სვეტის მაინც. 

კარგი. WSGI. WSGI. კიდევ ერთი რამ და რეალურად, მოდით ჩემთვის გადაადგილება, რომ საკუთარი სვეტი, იმიტომ, რომ მე დაწეროთ თავს აყენებს მათ იმავე bucket. მოდით დააყენა ამ სერვერთან თვისებები, ასე ვთქვათ. ეს არ არის ტექნიკური ტერმინი. 

ასე რომ, აქ ჩვენ შეიძლება WSGI. არსებობს CGI, რომელიც არის ძველი ტექნიკა ემსახურება up ენებზე როგორიცაა Perl და PHP, და სხვები. ისევ, მე აღნიშნა, ამ თვალსაზრისით არა იმდენად, რომ ერთგვარი ingrain მათ, მაგრამ ისე, რომ, თუ ხედავთ მათ ეს რაღაც თქვენ უბრალოდ google დაწვრილებით. არ არსებობს რეალური წვენი ზოგიერთი რამ. 

მაგრამ მოდით დავუბრუნდეთ იმ ენებზე. ჩვენ ვისაუბრეთ C #, Python. რა შეიძლება გამოიყენოთ ვებ პროგრამირების ამ დღეებში? მოდით ფოკუსირება, რომ ჯერ კიდევ. 

აუდიტორია: PHP. დევიდ ჯ Malan: PHP. და მოდით დავბრუნდებით, რომ ერთი. ასე რომ, PHP ძალიან ხშირად გამოიყენება. PHP ტენდენცია კიდევ ცუდი Rap. დაიწყო off როგორც ენის ხორციელდება ეგ, რომლებიც შესაძლოა არ იყვნენ აუცილებლად საუკეთესო ენის დიზაინერებს. და ასე რომ თქვენ შეგიძლიათ წაიკითხოთ ყველა სახის სტატიები შესახებ, თუ რამდენად ცუდია PHP არის. და სამწუხაროდ, ეს არის გამოვლინება, ნაწილობრივ, მხოლოდ რელიგიური დებატები რომ გადაიზარდოს შორის პროგრამისტები. და ეს არის რაღაც გასათვალისწინებელია, ბიზნეს პერსპექტივა, რომელიც ეს ძალიან ადვილია, ტექნიკური ადამიანი მისაღებად ყველა დამუშავდა მათი მოსაზრებები გარკვეული რამ. და ეს არ ნიშნავს იმას, რომ ერთი ყვირილი ხმამაღლა და ძლიერი, angriest აზრით არის სწორი. ბევრი ჯერ, ეს ნამდვილად უბრალოდ არ აქვს მნიშვნელობა. 

ასე რომ, ხალხი უბრალოდ კამათი, რაც არ უნდა საკუთარი მიმართულებისა და კომფორტს ზონებში არიან. და ასე რომ თქვენ უნდა შევინარჩუნოთ ამის გათვალისწინებით, როდესაც მიღების გადაწყვეტილება, რომელიც მხოლოდ იმიტომ, რომ ვინმე ამბობს ეს არის სწორი ენის სამუშაო, რომელიც შეიძლება იყოს ჭეშმარიტი, მაგრამ ეს ასევე უბრალოდ, შესაძლოა, ეს არის მარჯვენა ენაზე საკუთარი უნარი მითითებული ან კომფორტის ზონიდან. რაც ცუდი არ არის, მაგრამ თქვენ უნდა გვესმოდეს, რომ შეიძლება იყოს ზოგიერთი კონტექსტში არსებობს. არსებობს ობიექტურად არასწორ განცხადებებს, მოსწონს C არასწორი ენა გამოიყენოს ამ დღეებში განხორციელების ვებ თითქმის ყოველთვის. მაგრამ ეს არ არის დაუსაბუთებელი იმის თქმა, რომ რომელიმე ამ არის არასწორი, რომ ჩვენ შემოხაზული დღემდე. 

PHP გაიარა ბევრი ვერსიები. ასე რომ, ენებზე, როგორც წესი, მობილური ნომრები მათთან ასოცირებული. PHP მდე, მე ვფიქრობ, ვერსია 7 ახლა, ასე რომ, ეს უკვე გარშემო საკმაოდ გარკვეული დრო. და როგორც languages ​​მიიღოს ახალი, ისინი ხშირად კიდევ ახალი ფუნქციები. მაგრამ თქვენ უნდა იყოს მავიწყდება ეს იმიტომ, რომ, თუ თქვენი საიტი უკვე განხორციელებული მობილური -7 PHP მაგრამ თქვენ ცდილობთ, რომ აწარმოებს თქვენს ნახვა, ან იქნებ თქვენ გარე განვითარება თქვენი კოდი ვინმე და ისინი გვერდის ეს თქვენ, ან ის, რომ თქვენ და ამბობენ, აქ, დააყენა ამ თქვენს სერვერზე, თუ თქვენს სერვერზე არის რამდენიმე წლის outdated-- თუ არა ეს საკუთარ სერვერზე ან ვებ host-- ეს შეიძლება არ რეალურად აწარმოებს. ასე რომ, ეს არის სახის რამ, რომ ვინმე უნდა იყოს მავიწყდება როდესაც ამაღლების საიტი ან ახორციელებს იგი პირველად. 

გავიგე JavaScript ადრე. ასე რომ, JavaScript არის საინტერესო ერთი, რომ ზოგადად კლიენტის მხარეს, როგორც ვნახავთ შესვენების შემდეგ, რაც იმას ნიშნავს, რომ ეშვება მომხმარებლის ბრაუზერში. მაგრამ ასევე, შეგიძლიათ აწარმოებს JavaScript ამ დღეებში გამოყენებით რაღაც მოუწოდა Node.js, სადაც Node.js არის მექანიზმი გაშვებული JavaScript კოდი სერვერის მხარეს, ნაცვლად გამოყენებით Python, ან PHP, ან სხვა ამგვარი ენებზე. 

JavaScript განსაკუთრებით კარგად შეეფერება სტატისტიკა განაცხადების და რეალურ დროში პროგრამები, ხოლო PHP არ არის დიდი ენის ახორციელებს რაღაც მოსწონს სტატისტიკა სერვერზე, სადაც მომხმარებლები დარჩენა დაკავშირებული იგი მუდმივად. PHP უფრო ვიზიტი me ერთხელ, დავუბრუნდეთ შედეგად, და შემდეგ დააჭირეთ მეორე ბმული ზოგიერთი წამში ან წუთში. ვინაიდან Node.js და JavaScript შეიძლება იყოს გამოიყენება უფრო მუდმივი კავშირები. სხვა ენებზე რომ თქვენ ეჭვი ხშირად გამოიყენება ვებ პერსონალის? 

აუდიტორია: თუ jQuery იყოს ფარგლებში? 

დევიდ ჯ Malan: კარგი კითხვაა. არც. მე მოვუწოდებ jQuery ბიბლიოთეკა, სადაც ერთხელ ბიბლიოთეკაში არის კიდევ რამოდენიმე კოდი რომ ვინმეს აქვს წერია, რომ, ზოგადად, წყვეტს ზოგიერთი პრობლემა, რომელიც რაც, იმედია, უფრო ადვილია, თქვენ უნდა გავაკეთოთ თქვენი სამუშაო. და ნება მომეცით ამის ერთ-ერთი მაგალითია ამ კონტექსტში ინტერნეტში. 

კონტექსტში ინტერნეტში არსებობს ამ ენაზე, JavaScript, რომ ვნახავთ, რომლის დროსაც თქვენ შეიძლება ითქვას, რომ მსგავსი რამ "Document.getElementById". და რა მოვუწოდებ, რომ გუშინ? ჯერ ერთი, ვფიქრობ, იყო უნიკალური ID მივეცი ელემენტს რომ ჩანდა მოსწონს ეს. "P id =" პირველი ">" და მაშინ ჩვენ გვქონდა როგორიცაა "Lorem ipsum", და სხვა. ასე რომ, თუ მე წერილობით პროგრამა JavaScript რათა როგორმე მანიპულირება, შეცვალოს ვებ გვერდები, რომ ჩვენ უკრავდა გუშინ, მე გამოიყენოს ეს ხაზი გაუსვა ხაზი კოდი მიიღოს, რომ კონკრეტული სნიპეტის HTML ჩემი გვერდი, რომ კონკრეტული კვანძში, როგორც ჩვენ მოვუწოდებთ მას. 

თუმცა, jQuery, ნაცვლად წერა ეს, რომელიც ნედლეულის JavaScript code-- მხოლოდ იმ ყუთი, რომ, თუ როგორ წერენ it-- ამის ნაცვლად, უბრალოდ ამბობენ, "#პირველი." სწორედ ექვივალენტი. ასე რომ, ეფუძნება მხოლოდ ამ arcane მაგალითად, რაც, ალბათ, არის არგუმენტი გამოყენებით jQuery? რატომ დეველოპერი გამოიყენოს ბიბლიოთეკა მოსწონს jQuery, ამ საფუძველზე იზოლირებული მაგალითად, ალბათ? 

აუდიტორია: Less კოდი. 

დევიდ ჯ Malan: ჰო. ეს ნაკლებად კოდი. ეს არის მხოლოდ სწრაფად შეიტანოთ. კონტრაპუნქტის არის რომ იგი გამოიყურება scarier. თქვენ ნამდვილად ვერ წაიკითხავს მას მარცხნიდან მარჯვნივ. სინამდვილეში, რადგან ეს, ძირითადად პუნქტუაციის ახლა ნაცვლად ფაქტობრივი სიტყვა, მე შემიძლია სახის ითქვას, რომ "Document.getElementById" იღებს ელემენტს დოკუმენტის მისი პირადობის მოწმობა. მე ნამდვილად შეგიძლიათ გამოიყენოთ არსებობს ასეთი mnemonics ამ რამ აქ. 

ასე რომ, ეს სავაჭრო off. არსებობს დახვეწილობის, რომ მოდის ხშირად გამოყენებით ბიბლიოთეკების, განსაკუთრებით როგორიცაა jQuery. მაგრამ რეალობა ის არის jQuery აქვს სახის საქართველოს დე-ფაქტო სტანდარტი, ისე, რომ თითქმის ყველას ეს დღის ვინც წერს JavaScript კოდი იყენებს jQuery ან რამე როგორც ეს, და აღარ წერს ასეთი verbose გამონათქვამების ეს იმიტომ, რომ ერთხელ, კაცობრიობის გახდა ცნობილი, wow, რომ იყო ერთგვარი გაუშვა შესაძლებლობა რათა ჩვენი ცხოვრება ადვილი. ასე რომ ადამიანები მათი ცხოვრება უფრო ადვილი. კარგი კითხვაა. 

სხვა ენებზე განიხილოს. მე ვიტყოდი, მათ შორის სია Ruby საკმაოდ პოპულარულია. ასე რომ, მსოფლიოში Ruby, არსებობს ჩარჩო მოუწოდა რელსები, რომელიც ძალიან პოპულარულია. ასე რომ, Ruby ლიანდაგზე არის ხშირად გამოყენებული გამოხატვის. ასევე ამ მსოფლიოს, ნება მომეცით წრე Java ვებ პერსონალი, სადაც მსოფლიოში ჯავის ალბათ JSP, ან Java Servlets, რომელიც არის საერთო ტექნიკა. და ეს არის მხოლოდ ერთხელ გზების გამოყენებით რომ ენაზე სერვერის გარემოში. 

ასე რომ, რას ნიშნავს ეს? თუ თქვენ მოხვდით ფიზიკური სერვერზე, თქვენ ფაქტიურად ჩამოტვირთვა სერვერზე პროგრამული უზრუნველყოფა და დააინსტალირეთ ისე, რომ თქვენ გაქვთ მხარდაჭერა ერთი ამ ფარგლებში, რომელიც თქვენ შეიძლება, თავის მხრივ, გამოიყენოთ ერთი ან მეტი ამ ენებზე. და სინამდვილეში, თუ თქვენ იწერთ როგორც ვებ მასპინძელი ან ზოგიერთი cloud მომსახურება ჩვენ ვისაუბრეთ გუშინ, ხშირად პერსონალის უბრალოდ გააჩნია მანქანა კონფიგურაციის თქვენთვის. თქვენ არ უნდა შექმნას ამ ხელით. მაგრამ თუ თქვენ არ, ეს არის სადაც როლი სისტემის ადმინისტრატორს, ასე ვთქვათ, ძალაში პიესა. იგი რეალურად გავაკეთოთ ამ სახის პერსონალის თქვენ, და ე.წ. webmaster ხშირად ეს თქვენთვის. კარგი. ნებისმიერი კითხვები ზოგიერთი აქ? ან რაიმე შესაძლებლობები ყველა გკითხოთ ენებზე? ფარგლებში? მაშინ ნება მომეცით წარმოგიდგინოთ მხოლოდ ერთი ბიბლიოთეკა რომელიც ასევე ძალიან გავრცელებული ამ დღეებში. ეს სია შეიძლება წავიდეს უსასრულოდ. 

ეს ბიბლიოთეკა სახის დაწყებული ცვენას სასარგებლოდ. ეს იყო დაახლოებით. იგი პოპულარიზაცია Twitter გარკვეული დროის განმავლობაში. და ახლა ბევრი საიტები, უამრავი დეველოპერები გამოიყენოთ იგი. მაგრამ ახალი რამ მოდის და მოდის გასწვრივ. მაგრამ ნება მომეცით გადმოგცეთ გრძნობა რას ნიშნავს გამოიყენოთ ბიბლიოთეკა. ასე რომ კიდევ ერთხელ, JavaScript ძალიან პოპულარული ენაზე. CSS, ან კასკადური სტილების, ჩვენ ვისაუბრეთ გუშინ. ეს, ძალიან, არის ყველგან. არავინ აკეთებს ვებ გვერდზე დღეს გამოყენების გარეშე HTML და CSS მინიმალური. მაგრამ ეს ყოველთვის არ არის ადვილი უნდა გავაკეთოთ გარკვეული რამ. 

და ნება მომეცით, წავიდეთ getbootstrap.com. უი. ეს არ არის, თუ როგორ სიტყვიერად. Getbootstrap.com, რომელიც აპირებს გამოიწვიოს ჩემთვის სადესანტო გვერდზე ამ ბიბლიოთეკაში. ასე რომ, ისინი გულუხვად დარეკეთ თავად ფარგლებში, რომელიც სახის ერთგვარი სამართლიანი, მაგრამ მე მაინც ეძახით უფრო ბიბლიოთეკაში ჩარჩოს. მაგრამ ეს მხოლოდ სადავო სემანტიკა. ნება მომეცით წავიდეთ მათი CSS tab და ნება მომეცით წასვლა რაღაც მსგავსი. 

ასე რომ გავიხსენოთ, რა არის ჩვენი ფორმები ჩანდა ისევე როგორც გუშინ on Cloud9? ეს იყო საკმაოდ მახინჯი. ძველი სკოლა ღილაკებით. მე ვფიქრობ, რომ ღილაკს იყო ნაცრისფერი მიერ იყოს. და ყველაფერი იყო ნამდვილად ფორმატირებული საკმაოდ messily. ასე რომ, თუ გსურთ თქვენი ვებ ფორმები უნდა ვეძებოთ პატარა nicer-- ნება მომეცით მიუახლოვდით აქ. 

და გავალამაზოთ მე ნამდვილად უბრალოდ ნიშნავს ძალიან nitpicky ესთეტიკას. ასე რომ შეამჩნია, როგორ ფოსტის ყუთი არ აქვს მომრგვალებული მართკუთხა კუთხეში მას. ასე რომ, ეს ცოტა სუფთა არსებობს. ყურადღება მიაქციეთ, რომ სიტყვა ელ არის იქ, სანამ დავიწყო აკრეფით და მაშინ იგი მიდის. ასე რომ, ლამაზი პატარა ფუნქცია. ყურადღება მიაქციეთ, რომ ის არის სახის glowing ლამაზად, რომელიც ზოგიერთ ამისათვის მიიღოთ უფასოდ თქვენი ბრაუზერი მაგრამ ზოგიერთი ეს არის ასევე ბიბლიოთეკები, კოდი, რომელიც სხვა ადამიანებს აქვთ წერია, რომ გადმოგცეთ ეს. 

რაღაც მსგავსი მაძლევს ჩემი პაროლი. ეს ღილაკი არის პატარა sexier, ვიდრე იყოს. ძალიან vogue ახლა. მას შემდეგ, რაც iOS 7 ან იმდენად, მსოფლიოში მიღებული ძალიან ბინა, იმის გამო, რომ მსოფლიოს წინაშე ჰქონდა უამრავი drop shadows, უამრავი მოსაზრებები ხატები. ისევე, როგორც ტანსაცმელი მსოფლიოში, იქ მოდის ტენდენციები, რომ მოვიდეს და წავიდეს. ახლა ყველაფერი ბინა თქვენი ტელეფონი. 

ფაქტობრივად, ღილაკების iPhone ახლა მხოლოდ ლურჯი კავშირები. იქ არ არის ხშირად მრგვალი ღილაკებით. ასე რომ, ეს უბრალოდ რამ რომ წავიდეს და Vogue, და ეს არის, თუ როგორ შეიძლება რათა უფრო თანამედროვე ეძებს ვებ ფორმით. Buttons. ასე რომ ჩატვირთვის აქვს უამრავი საკმაოდ ღილაკებით. ასე რომ, თუ გსურთ ლურჯი ღილები, მწვანე ღილაკები, ლურჯი, ნარინჯისფერი, წითელი. ჩატვირთვის ხდის ადვილია ვიქმ. ეს არის სახის რამ, რომ თქვენ შეიძლება სრულიად არ კეთდება გუშინ CSS და HTML, მაგრამ ეს მხოლოდ ტკივილი კისრის. ასე რომ, ნაცვლად, რა ჩატვირთვის გვინდა თქვენ ამის გაკეთება არის რაღაც მსგავსი. 

თუ გსურთ button-- გამოდის არის HTML tag ჩვენ არ გამოიყენოთ yesterday-- და თქვენ გინდათ რომ გამოიყურებოდეს მოსწონს ეს მწვანე ღილაკს, თქვენ ფაქტიურად მხოლოდ მისთვის კლასის, რომელიც ჩვენ გავაკეთეთ ვისაუბროთ გუშინ, საქართველოს "BTN btn-წარმატება." 

რატომ ეს სიტყვები? Twitter, ავტორები ჩატვირთვის, გამოვიდა ეს სიტყვები. მათ შეეძლოთ ე.წ. მათ არაფერი უნდათ. მაგრამ რას იღებენ, ახლა არის ვინმეს Twitter, ამ შემთხვევაში, უკვე figured out როგორ შეგაქვს ღილაკს გამოიყურება ლამაზი და სუფთა და მწვანე. ისინი დაფასოებული, რომ ფუნქცია ამ CSS კლასი, სახელწოდებით "ღილაკი" და "btn წარმატებას", ასე, რომ ნებისმიერი ჩვენგანი შეიძლება ახლა გამოყენება გარეშე კი ფიქრი იგი. ასე რომ, ისინი ამოღებული დაშორებით ცნება მწვანე ღილაკს ამიტომ ჩვენ არ უნდა ზრუნავდეს ახორციელებს იგი საკუთარ თავს. ჩვენ შეგვიძლია რეალურად ფოკუსირება ახორციელებს რამ ინტერესი ჩვენთვის. 

თუ ჩვენ გადახვევა ქვემოთ აქ. შეცდომა შეტყობინებები ეკრანზე. ზოგჯერ თქვენ გსურთ ცოტა გაგზავნა როგორც ჩანს, ზედა ბრაუზერში. ნებისმიერი ჩვენგანი შეიძლება ამის გაკეთება რამდენიმე ძალისხმევა, გუშინდელი გაკვეთილი, მაგრამ რატომ ვახვევთ? სწორედ ასეთი უინტერესო ესთეტიკური დეტალურად. მოდით დავდგეთ მხრებზე ჩატვირთვის და მისცეს მათ მოგვცეს რამ, როგორიცაა ეს სადაც ჩვენ ფაქტიურად, მიიღოს წითელი ყუთი, უბრალოდ უნდა გავაკეთოთ პუნქტის tag ერთად კლასის of-- ბოდიში. "ბი ჯი-საფრთხე" მოგვცემდა ეს მოწითალო ყუთში. ახლა მოდით წასვლა სხვა საინტერესო რამ. თუ მე დაბრუნდეს ზევით ამ გვერდზე და წასვლა კომპონენტები, ახლა მსოფლიოს უფრო საინტერესო. მაგალითად, ძალიან გავრცელებული არის ვარდნა ქვემოთ მენიუები მოსწონს ეს. ეს იქნება აბსოლუტური ტკივილი განახორციელოს. და ეს არ იყო, რომ დიდი ხნის წინ, რომ ჩვენ პროგრამისტები უნდა განახორციელოს ეს სახის მენიუები ნულიდან. 

მაგრამ ასეთი საერთო პარადიგმის რომ ბიბლიოთეკების მოსწონს ჩატვირთვის მხოლოდ გაძლევთ შესაძლებლობას, რათა ჩამოშლადი მენიუ ბევრად, ბევრად უფრო ადვილად. არ არსებობს ერთი გზა ამის გაკეთება, მაგრამ თუ წავიკითხე დოკუმენტაცია მე ვხედავ, რომ, OK, მე უნდა გამოიყენოს ამ HTML, თუ მინდა drop მენიუში რომელიც იქცევა, რომ. 

ანალოგიურად, მოდით წავიდეთ ღილაკს ვარდნა ქვემოთ. ასე რომ, ეს არის კიდევ fancier. თუ მე მინდა, რომ ეს ჰგავს ღილაკს მაგრამ რომ პატარა სამკუთხედის ნიშნავს მე უნდა დააწკაპუნეთ მასზე და ამ მენიუ, ამ არის იყენებს ენის მოუწოდა JavaScript. და ჩვენ შეგვიძლია ყველა განახორციელოს ამ JavaScript. თუმცა ისევ და ისევ, ეს არის წამყვანი თქვენ არ გსურთ ხელახლა. თქვენ უბრალოდ უნდა მიიღოს ეს off თაროზე ბიბლიოთეკა ამ. 

მოდით წავიდეთ რაღაც მოსწონს პროგრესი ბარები. ასე რომ რაღაც ეს არის ერთგვარი მაგარი. თუ თქვენ ოდესმე მინახავს პროგრესი ბარი მოძრავი მთელს ეკრანზე, ახორციელებს, რომ ხშირად მხოლოდ დაწნული ხატი. სინამდვილეში, ისევე როგორც განზე, მოდით მე წასვლა Ajax-- რა არის ეს? Ajax ინფორმაცია? უი. Ajaxinfo. მიადევნე თვალი მახსოვს მისამართზე. იქ ჩვენ წავიდეთ. 

ასე რომ, თუ თქვენ ოდესმე მინახავს ზოგიერთი ანიმაცია ხოლო გვერდი დატვირთვის, ან ფიქრი, ან გადარჩენის, შექმნა რაღაც, თქვენ შეიძლება, რომ ასეთი ანიმაციის, როგორც ეს. მოდით შევხედოთ რაღაც როგორც ეს ერთი აქ, და მოდით ავირჩიოთ წინა პლანზე ფერი მწვანე, რომელიც გრძნობს სახის მეგობრული. შემიძლია დააჭირეთ ამ? მოდი ერთი. კარგი. ჩვენ უბრალოდ წითელი, რადგან ის, რაც ჩვენ ვიღებთ. ასე რომ, აქ გვაქვს ეს. 

ასე რომ, თუ თქვენ ოდესმე მინახავს ამ ეკრანზე, რომლის დროსაც მოულოდნელად, როგორც ჩანს, და შემდეგ მოულოდნელად ქრება, რა არის ის, რომ ის ახორციელებს, რომ? ისე, ეს არის მხოლოდ GIF. G-I-F. და ეს არის ანიმაციური ფაილი, რომელიც მხოლოდ იმას ნიშნავს, ეს იგივეა, ძველი სკოლა კომიქსების. არსებობს მხოლოდ bunch სხვადასხვა ფარგლებში, რომელიც მიმდინარეობს [სუსტი] და მხოლოდ იმეორებს. და ეს ქმნის ილუზია მოძრაობა. 

ამიტომ, როგორც კი გვერდი კეთდება ჩატვირთვის ან აკეთებს რაღაც, რას პროგრამისტი გავაკეთოთ? ისე, ის უბრალოდ მალავს ამ იმიჯი. ასე რომ, ყველა პროგრესი ბარი არის სახის მოსწონს ფილმის თქვენ თვალს. თქვენ ერთგვარი oblivious იმ ფაქტს, რომ ის რეალურად არ აკეთებს არაფერს, ეს უბრალოდ მოძრაობს. 

და მაშინ, როდესაც ეს კეთდება პროგრესირებს, ისინი უბრალოდ დამალვა ან ჩართოთ იგი. და ეს ყველაფერი ჯადოსნური რომ ხდება იქ. ჩატვირთვის გაძლევთ რაღაც პატარა fancier, რომლის დროსაც თქვენ შეგიძლიათ რეალურად ვხედავ პროცენტული ეს მიდის, მაგრამ ეს ძალიან არის მხოლოდ ერთგვარი მარტივი ანიმაცია. 

მოდით შევხედოთ ზოგიერთი საბოლოო უფრო რთული მაგალითები აქ. რაღაც მოდალური. ვინმეს ვიცი რა მოდალური არის? მოდალური ფანჯარა ზოგადად ერთ-ერთი, რომელიც უნდა აღებას წინა პლანზე და შეგიშლით ხელს აკეთებს არაფერი. ეს ერთგვარი აიძულებს მომხმარებლის ყურადღება შუა ეკრანზე, საკეტი მათ, როგორც წესი, ყველაფერი. 

ასე რომ, თუ მე დაიწყოს ამ დემო, ეკრანზე ზოგადად გახდეს ნაცრისფერი. ისე, როგორ უნდა გააკეთოს ეს ნაცრისფერი? ისე, ჩვენ, ალბათ, მხოლოდ შეიცვალა ფონის ფერი ისე, როგორც გუშინ ან რამე მაგდაგვარს. იქნებ ეს overlay რომ ნახევრად გამჭვირვალე. და ახლა შეამჩნია შეგიძლიათ გააკეთოთ ლამაზი რამ მოსწონს ეს. ასე რომ, თუ თქვენ ოდესმე დააჭირეთ ღილაკს და მინდა ცოტა პოპ out, როგორც ჩანს, თქვენ შეგიძლიათ ამის გაკეთება. ასე რომ, ვინც ზრუნავს all-- yeah? 

აუდიტორია: ასე რომ, ჩატვირთვის, უნდა მიიღოს იგი მოიცავს, ეს არის ისეთი მარტივი, როგორც, როგორც გუშინ ჩვენ გავაკეთეთ CSS სტილის გვერდი? დევიდ ჯ Malan: მართლაც. კარგი კითხვა. ნება მომეცით წასვლა ნაცნობობა. და დიახ. ყველაფერი რაც თქვენ უნდა გავაკეთოთ იმისათვის, რომ გამოყენების ჩატვირთვის არსებითად ასლი და ჩასვით ეს სამი ხანგრძლივი ხაზები კოდი შევიდა ზევით საკუთარი ვებ გვერდზე ხელმძღვანელი თქვენი page-- და თქვენ და გაშვებული. და იქ სხვადასხვა გზები აკეთებს , მაგრამ ეს იქნება მარტივი. 

ასე რომ, რა არის სასარგებლო ეს ყველაფერი? ისე, თუ თქვენ არა იმდენად განმხორციელებელი ნახვა მაგრამ თქვენ ცდილობთ შეიმუშავონ, ან გსურთ გთავაზობთ ვინმე ერთად მავთულის ჩარჩო დიაგრამები, ასე ვთქვათ, ან უბრალოდ მხატვრის renditions რა გსურთ ამის გაკეთება, მე, ამ დღეს, ხშირად წასვლა საიტი როგორიცაა ჩატვირთვის, სადაც, თუ მე სურს განახორციელოს რაღაც როგორიცაა ცოტა ხნის წინ კამპუსში გვინდოდა განახორციელოს ვებ დაფუძნებული ინსტრუმენტი სანავიგაციო ჰარვარდის რა თქმა უნდა, კატალოგი, უადვილებს სტუდენტები დაათვალიეროთ მეშვეობით კურსები და დაამატოთ კურსებს სავაჭრო სია, ასე ვთქვათ, სახის გადაწყვეტს, თუ რა მათ სურდათ, რომ მიიღოს. 

მე ვცდილობდი წარმოიდგინეთ თავს, რა ინგრედიენტები რომ ჩვენ გვინდა, რომ გამოიყენოთ აშენება ეს? რა ინტერფეისი იყოს? და მხოლოდ გადახედეთ საიტზე, როგორიცაა ამ და სხვა ასეთი ბიბლიოთეკა საიტები, შეგიძლიათ მოიპოვოს შთაგონების, რადგან wow, შემიძლია ამ ელემენტის, და ამ ელემენტის, და ამ ელემენტის. და მაშინ მართლაც რა პროგრამისტი იწყება ამის გაკეთება, განსაკუთრებით ამ დღეებში ამ უფრო თანამედროვე მსოფლიოში ვებ პროგრამირების, არის პროგრამირების სულ უფრო და უფრო შესახებ გაყვანილობა რამ ერთად. ერთგვარი აღების ამ off შელფზე, ეს off შელფზე, ეს off შელფზე, და თქვენ, რომ ჭკვიანი ერთი დაკავშირება ყველა იმ წერტილების, მაგრამ საბოლოო ჯამში, აშენება რაღაც ერთხელ მხრებზე სხვები, ისე, რომ თქვენ არ ატარებენ თვეში ახორციელებს სულელური drop მენიუში, რომელიც რეალურად ძნელია ამის გაკეთება, თუ გსურთ, რომ მუშაობა Chrome, და IE, Firefox, და ნებისმიერი ნომერი სხვა ბრაუზერები. ეს არის, თუ რატომ არ არის ეს მდიდარი კომერციული და ღია პროგრამული მრეწველობის, ასევე. 

აუდიტორია: ასე რომ, ჯერ ჩატვირთვის განახლდა და თქვენ უნდა მაშინ განაახლოთ თქვენი კავშირები? 

დევიდ ჯ Malan: ეს იმას. დიახ, ეს ასეა. ჩატვირთვის არის გაკეთებული მობილური 3.3.6. და საერთოდ, რას გააკეთებდა ეს არის რეალურად ღირს საუბარი. არსებობს რა არის ზოგადად ცნობილია, როგორც სემანტიკური versioning სისტემა მსოფლიოში. ყველას არ აკეთებს ამას. 

მაგრამ თუ ვნახე ვერსია ნომრები რომ ფორმის x.y.z-- ასე მაგალითად, პირველი ვერსია პროგრამა შეიძლება იყოს 1.0.0. თუ ეს ძალიან, ძალიან beta, ან კი alpha სტატუსი, რაც ნიშნავს გამოყენება საკუთარი პასუხისმგებლობით, ეს არ არის ნამდვილად მზად პრემიერ დრო, თქვენ შეიძლება დაიწყოს 0.0.1 ან რაღაც ასეთი აღნიშვნა. მაგრამ თუ პროგრამული იწყება მობილური 1.0, ან ექვივალენტური 1.0.0, როგორც წესი, რა არის საერთო ამ დღეებში, თუმცა არ omnipresent-- არის თუ კომპანია ან ინდივიდუალური პროგრამისტი აფიქსირებს ზოგიერთი ხარვეზის რამდენიმე ცალი პროგრამული უზრუნველყოფა, რომ ნამდვილად იყო შეცდომა, რომლის კორექტირება არ უნდა ზემოქმედების თქვენ at ყველა ეს არ შეიცვლება პროგრამის ქცევას, ეს უბრალოდ აფიქსირებს რაღაც რომელიც არ მუშაობდა properly-- თქვენ, როგორც წესი განახლება z ღირებულება არსებობს. რაც იმას ნიშნავს, ვინმეს მოსწონს Kareem უბრალოდ წასვლას მისი ნახვა, ბრმად შეცვალოს ვერსია ნომერი ეხლა 1.0.0 to 1.0.1, შენახვა, მოვახდენთ, და თეორიულად არ უნდა შიშობენ, რომ ის მხოლოდ გატეხილი მისი ნახვა, რადგან ზოგიერთი ნაკლებობა ფუნქციონირება, რადგან რაღაც დაარღვია. 

ამასობაში, თუ მე პროგრამისტი ან რამდენიმე კომპანია იყო, რათა ზოგიერთი მნიშვნელოვანი ცვლილება, რომელიც დასძენს ფუნქციონალური, მე შეიძლება განახლდეს გვაძლევს 1.1.0 იმიტომ, რომ მე რეალურად ქცევის შეცვლა ბიბლიოთეკაში. მე გაძლევთ, შესაძლოა, მეტი ფუნქცია. და ბოლოს, თუ მე რომ რეალურად ძირეულად შეცვლის პროგრამული უზრუნველყოფა, ბევრი, რომ ეს იქნება შესვენება ბევრი მომხმარებლის ვებ ან პროგრამები, მაშინ მე ვალდებულია, ამ მოდელი, განახლება ძირითადი ვერსია ნომერი ძალიან, რომელიც არღვევს ცვლილება. სხვა სიტყვებით, მე შეიძლება შეწყვეტილი მხარდაჭერა იმ drop მენიუში. ასე რომ, თუ თქვენ გადახვიდეთ 2.0, ნახევარი თქვენი საიტი შესაძლოა შეწყვიტოს მუშაობა. და ეს არის ერთგვარი სიგნალი თანამეგობრობის, თუ რა არის ჩართული მიღების განახლება. კარგი შესაძლებლობა დააყენებს. სხვა კითხვები? კარგი. ისე მოდით შევხედოთ ერთი საბოლოო თემა ამ სეგმენტის პროგრამირების ტექნოლოგია stacks, კერძოდ დაკავშირებული მასალა. 

ასე რომ, მსოფლიოს ტელეფონები დღეს თქვენ ჰქონდეს და iPads, და ზედაპირზე, და ყველა იმ სახის of devices-- თქვენ გაქვთ ბევრი არჩევანი, როდესაც საქმე ახორციელებს განცხადება ან ნახვა დამკვეთის მობილური მოწყობილობების. ასე რომ, მხოლოდ განვაცხადო აშკარაა, ალბათ ამ დღეებში, რა არის პლატფორმების განვითარება პორტალის სივრცეში? რა მოწყობილობები შეიძლება გსურთ მხარს ვუჭერთ თქვენი app ან საიტი? 

აუდიტორია: Apple. დევიდ ჯ Malan: OK. ასე რომ, Apple მოწყობილობები. ასე რომ, ეს იმას ნიშნავს, iPhone, და რომ იმას ნიშნავს, iPad, და შესაძლოა, iPod. სხვა რა? Olivier? 

აუდიტორია: Android. 

დევიდ ჯ Malan: Android. კარგი. ასე რომ, Android ტელეფონები, Android ტაბლეტები, Android ბაზარზე კი messier იმიტომ და მაშინაც კი, Apple ხდება რთული. ვინაიდან ერთხელ iPhone იყო გარკვეული ზომა, და iPad იყო გარკვეული ზომა, და iPod იყო გარკვეული ზომა, ახლა ჩვენ iPad Minis და თხელი პირობა, და iPhone 6 Plus და 6. ეს ხდება სასადილო. ეს ხდება Android მსოფლიოში. 

და მე ვიტყვი, ეს ერთგვარი მოძრავი ჩემი თვალით იმიტომ, დეველოპერი პერსპექტივა, ეს არის ტკივილი კისრის, როდესაც თქვენ არ გაქვთ სტივ ჯობსის ხედვა აბსოლუტური კონტროლი ყველა ამ მოთხოვნებს. Apple ჯერ კიდევ იმიტომ, რომ ისინი პირობა მშენებლობის ტექნიკა. მაგრამ ეს ლამაზი რამ, თუ მე ვარ პროგრამისტი, უბრალოდ ვიცი, რომ ჩემი iPhone ყოველთვის აპირებს უნდა იყოს ამ დიდი, რადგან ეს ნიშნავს, რომ მე ყოველთვის ვიცი რამდენად ეკრანზე უძრავი ქონების მაქვს. ასე რომ, თუ მინდა, რომ ხატი ზედა მარცხენა კუთხეში, ეს იქნება ზუსტად იგივე განათავსეთ თითოეული დამკვეთის მოწყობილობა. 

მაგრამ სამყაროში iPhone 6 იანები და iPhone 6 პლიუსები და მსოფლიოში Android ტელეფონები, ის მთელ რუკაზე. ასე რომ, ეს ხდის მას უფრო რთული პროგრამა რამ, განსაკუთრებით მომხმარებლის ინტერფეისი, რადგან ახლა თქვენ უნდა დაიწყოს მოწყობა თქვენი მომხმარებლის ინტერფეისი შედარებით, არ აბსოლუტურად. და იგივე უკვე ჭეშმარიტი ბრაუზერები, და კომპიუტერები და ლაპტოპები წლის იმიტომ, რომ თქვენ, რა თქმა უნდა, აქვს სხვადასხვა ეკრანის ზომის. 

სხვა რა? ალბათ ზედაპირზე, როგორიცაა Microsoft. თქვენ შეიძლება ჰქონდეს აუდიტორია: Windows ტელეფონი. დევიდ ჯ Malan: რა არის ეს? აუდიტორია: Windows ტელეფონი. დევიდ ჯ Malan: დიახ. ასე რომ, Windows ტელეფონები ჯერ კიდევ გვხვდება. კეთილი ერთგვარი BlackBerrys, მაგრამ ისინი არ დავიშურებთ. და მაშინ მტევნების სხვა მოწყობილობები. ასე რომ, იმ ნაწილს, მოდით ვთქვათ, ეს არის პირობა რომ აინტერესებს მომენტში. რა თქმა უნდა, Apple პერსონალი, რა თქმა უნდა, Android პერსონალი, და მათ შორის Windows, როგორც ზედაპირზე დაფები როგორც ჩანს, მოდაში კარგად. 

ასე რომ, მათ შორის, მოწყობილობები, თუ გვინდა, რომ გააფართოვოს, ვთქვათ, მობილური ყოფნა თქვენი კომპანია, თუ რა სახის დიზაინის გადაწყვეტილებები თქვენ უნდა მიიღოს? ჩვენ უკვე განაცხადა, წელს Apple მსოფლიოში, არსებობს მინიმუმ ორ ენაზე რომლებიც, როგორც წესი გამოიყენება. ერთს ერქვა რა? 

აუდიტორია: Objective-C. 

დევიდ ჯ Malan: ჰო. ასე რომ, Objective-C, რომელიც არის ძველი ერთი. ეს არის ასევე ენაზე, რომელიც მრავალი Mac განაცხადების კიდევ დაწერილი. მაშინ სხვა ახალი ერთი იყო? აუდიტორია: Swift. დევიდ ჯ Malan: Swift. და ეს არის ერთგვარი ორი იცოდეს, რომ შთაბეჭდილება ეგ. შემდეგ Android მსოფლიოში, რა ენაზე ამჯამად Android გამოყენება? 

აუდიტორია: C #? 

აუდიტორია: Java. 

დევიდ ჯ Malan: Java არის ენა "du jour". იმ Windows მსოფლიოში, რა თქმა უნდა, ჩვენ ვიტყვით, C #, ამ შემთხვევაში. ასე რომ, უკვე ეს არის ერთგვარი შემაშფოთებელი, რადგან რა არის takeaway ბიზნეს მფლობელი ან ვინც უბრალოდ სურს გააფართოვოს პორტალის არსებობა? ისევე როგორც, რა არის ეს? მსგავსად, თუ მინდა მხარდასაჭერად საკმაოდ ფართო მომხმარებლის ბაზა, მე უნდა დაწეროს, როგორც ჩანს, სამი ცალკეული პროგრამები. ერთ-ერთ ასეთ ენებზე, ერთი Java, ერთი C #. და მაშინაც კი, თუ მინდა ფუნქციონალური უნდა იყოს იდენტური, რომ არ აქვს მნიშვნელობა. მე მაინც უნდა გამოიყენოთ სხვადასხვა ენებზე, რადგან Apple და Microsoft, და Google ყველა მხარდაჭერით სხვადასხვა გარემოში. და ეს იყო გამოწვევა წლის განმავლობაში. უკან დღეს, როდესაც ხალხი გამოიყენება ყიდვა პროგრამული უზრუნველყოფა კომპიუტერის მაღაზია შემცირება გახვეული ყუთები, თქვენ არც უნდა მიღწევა, რომ Mac შელფზე, ან for-- იქნებ ეს ძალიან მცირე Mac shelf-- ან დიდი Windows შელფზე და შეძენა რამდენიმე პროგრამული უზრუნველყოფა. და ძალიან ხშირად, კი არ იყო არაფერი თქვენ Mac თაროზე. რატომ? ისე, კომპანიების გადაწყვიტა, თუ 90% მსოფლიოს 95% მსოფლიოში აქვს კომპიუტერით, რატომ ვახვევთ კი განხორციელების რამ Mac OS? 

როგორც განზე სულ digression-- რატომ არის ის, რომ Mac როგორც ჩანს, ასე ვიტყვით, რომ ვირუსები, და ჭიები, და უსაფრთხოების? არის Apple უკეთესი ამ? Better შენახვა კომპიუტერები უსაფრთხოა? 

აუდიტორია: პატარა მაყურებელს? 

დევიდ ჯ Malan: ეს არის ალბათ, უფრო დიდია, ცოტა იგი. ასე რომ, ბევრი წევრებს Macs აქვს დიდი ხანია აცხადებდა, oh, იყენებთ Mac, თქვენ უნდა იყოს იმუნური ვირუსები და ჭიები, და ყველა ამ საკითხზე რომ უკვე დიდი ხშირია ები. ეს შეიძლება იყოს, რადგან Apple აქვს უკეთესი პროგრამისტები და წერენ უკეთესი პროგრამული უზრუნველყოფა, ან ოპერაციული სისტემა უკეთესი შექმნილია. შესაძლოა, მაგრამ ალბათ არ. 

ეს, ალბათ, რომ როდესაც თქვენ 12 წლის, ან 30 რაღაც ერთგვარი ზის სახლში წერა მუქარის პროგრამული უზრუნველყოფა აღება მსოფლიოში, თქვენ ვაპირებთ წავიდეთ შემდეგ გაცილებით სამიზნე აუდიტორია. 95% მსოფლიოს, რომელიც შეიძლება გაშვებული Windows ან რამდენიმე ვარიანტები შესახებ. ასე რომ, ცოტა ორივე მხარეს. მაგრამ მათი საკრედიტო, Apple, რომ ჩემი ცოდნა, ნამდვილად არ ითვლება თავად როგორც უფრო უსაფრთხო, მას შემდეგ, რაც თქვენ მხოლოდ მოწვევის დრამა თუ თქვენ, რომ სარჩელი, მე ვფიქრობ. 

კარგი. მიღების გარეშე ძალიან შორს რომ, როგორ უნდა გადაწყვიტოს ეს? გაქვთ იყიდოს ან გაქვთ გადაიხადოს სამი განსხვავებული ადამიანი განვითარდეს თქვენი apps? აირჩიოთ ერთი მეტი სხვა? რა უნდა გაუძღვება თქვენი ფიქრი აქ თქვენ როგორ ფიქრობთ? Kareem? Nope. ვიღაც სხვა. 

აუდიტორია: მოდი აპარატურა. დევიდ ჯ Malan: მოდით ტექნიკის? რას გულისხმობთ? 

აუდიტორია: იყიდება გარემოს. [INAUDIBLE] დევიდ ჯ Malan: ასე რომ, მართალია. მაგრამ თქვენს მომხმარებელს, იმავდროულად, ალბათ iPhones, ალბათ Android ტელეფონები, ალბათ დაფები გააკეთა Microsoft. ასე რომ, თუ თქვენ გაქვთ მობილური სტრატეგია ყველა ამ სხვადასხვა წევრებს? როგორც ჩანს, რომ, თუ ღირს, მოდით ვთქვათ, $ 1,000 რათა iPhone განაცხადი, ის აპირებს დაგიჯდებათ $ 2,000 რათა iPhone განაცხადის და Android განაცხადი, ან $ 3,000 ასევე მხარს ვუჭერთ Windows მოწყობილობების, ასევე. ეს, ალბათ, საკმაოდ understatement, და ეს კი არ იყოს ხაზოვანი დამოკიდებულება იგრძნობა. 

აუდიტორია: თუ გსურთ აქვს app ან არა, თქვენ შეგიძლიათ საპასუხო ნახვა. დევიდ ჯ Malan: კარგი. აუდიტორია: ან შეგიძლიათ მშობლიური app. დევიდ ჯ Malan: ჰო. ასე რომ, ყველა ამ კონტექსტში აქ, ჩვენ ვსაუბრობთ იმაზე, თუ რა ხალხი მოვუწოდებთ შექმნილი პროგრამა. ეს არის პროგრამა, რომელიც დაწერილია მშობლიურ ენაზე რომ მოწყობილობა. ასე შექმნილი Objective-C ან Swift კოდი, ან ჯავაში, ან C #. რაც იმას ნიშნავს, როდესაც თქვენ ჩამოტვირთვა, მოდით ამბობენ Snapchat, პოპულარული პროგრამა, და როდესაც თქვენ ჩამოტვირთვა Facebook for ტელეფონი, თქვენ ჩამოტვირთვის ან მობილური დაწერილი თქვენი iPhone, ან დაწერილი თქვენს Android ტელეფონი, ან წერილობითი თქვენი ზედაპირზე. 

მაგრამ არსებობს ალტერნატივა. როგორც Olivier სიწმინდე, თქვენ შეგიძლიათ რეალურად გამოვიყენოთ HTML 5 ნაცვლად გამოყენებით რასაც აკეთებს პროგრამა, რომლის დროსაც თქვენ უბრალოდ განახორციელოს თქვენი მობილური ყოფნა და ნებისმიერი ფუნქცია. რას ვგულისხმობ მობილური ყოფნა? მომწონს თქვენი ნახვა, რომ თქვენი საკონტაქტო ინფორმაცია, სიაში ყველა თქვენი პროდუქცია, შესაძლოა, მას აქვს სავაჭრო ყიდვა, იქნებ გაყიდოს რამ მეშვეობით. როგორიც არ უნდა იყოს თქვენი განაცხადის, თქვენ განხორციელება, მაგრამ არა Objective-C, ან Swift, ან Java, ან C #, მაგრამ HTML 5, რომელიც ენას ჩვენ ჩანდა at გუშინ, JavaScript და CSS. 

და რა ლამაზი იმ სამი არის, რომ აწარმოებს მათ, თქვენ უნდა მხოლოდ ის, რაც ნაჭერი პროგრამული უზრუნველყოფა? აუდიტორია: ბრაუზერში. დევიდ ჯ Malan: ბრაუზერში. და საუკეთესო მე ვიცი, ეს ყველაფერი მოწყობილობები მოდის ბრაუზერების, ასე რომ, მომხმარებელს არ უნდა დააყენოთ რაღაც განსაკუთრებული. ასე რომ, შეგიძლიათ უბრალოდ გეტყვით თქვენი აუდიტორია, თქვენს მომხმარებელს, წასვლა acme.com თქვენს ბრაუზერი და თქვენ უბრალოდ აქვს ვებ დაფუძნებული გამოცდილება რომ ჯერ კიდევ ავსებს ეკრანზე, მაგრამ თქვენ არ უნდა ფიქრი ყველა ეს ხარჯები და ყველა ამ სირთულის. მაგრამ ნამდვილად არსებობს აპირებს უნდა იყოს დაჭერა აქ, არა? მით უმეტეს, თუ მე მინდა აღვნიშნო, რომ რამდენიმე წლის წინ, ძალიან პირველი ვერსია Facebook- ის მობილური განაცხადის იყო ძირითადად HTML 5 განცხადება. და მათ აქვთ, უფრო ცოტა ხნის წინ, reimplemented ეს მათი სხვა პროგრამები. 

ასე რომ, რატომ არ სასწრაფოდ მინდა ვთქვა, ისე, ცხადია, ჩვენ ვაპირებთ, რომ ამის გაკეთება? რა შეიძლება ფარული ხარჯების იყოს? 

აუდიტორია: შესრულებით. დევიდ ჯ Malan: შესრულებით? როგორ ნიშნავს? 

აუდიტორია: აპის აქვს მეტი შესრულება. 

დევიდ ჯ Malan: ასე რომ, მართალია, რამდენიმე მიზეზის გამო. ჩვენ შეგვიძლია oversimplify პასუხი. და გავიხსენოთ ჩვენი განხილვის გაგებული წინააღმდეგ შედგენილი ენებზე. ეს არის HTML 5 და ეს, უბრალოდ უნდა იყოს ნათელი, JavaScript-- საყოველთაოდ წერილობითი JS-- და CSS ყველა ინტერპრეტაცია ენები, მიუხედავად იმისა, რომ მხოლოდ JavaScript არის პროგრამირების ენა. 

ასე რომ, წინააღმდეგ ეს, რაც ზოგიერთი შედგენილი, მინიმუმ ამ three-- Objective-C, Java და C # - ეს, თეორიულად, უნდა იყოს მხოლოდ სწრაფად. მაგრამ არსებობს კიდევ ერთი რეალობა for-- 

აუდიტორია: ფუნქციები? 

დევიდ ჯ Malan: რა არის ეს? 

აუდიტორია: ფუნქციები. 

დევიდ ჯ Malan: ფუნქციონალობა? როგორ თუ? აუდიტორია: გამოიყენეთ კამერა off თქვენი ტელეფონი ან რამე. თქვენ შეგიძლიათ გამოიყენოთ ის ბრაუზერი. დევიდ ჯ Malan: ზუსტად. ისინი sec-- აუდიტორია: [INAUDIBLE] დევიდ ჯ Malan: ეს არის კიდევ ერთი კარგი ერთი. არსებობს მახასიათებლები, რომ მოდის მობილური ტელეფონები დღეს რომ არ არის, დიზაინი, უსაფრთხოების მიზეზების გამო, ხელმისაწვდომი ვებ ბრაუზერები. იმიტომ, რომ ეს იქნება ერთგვარი ჟრუანტელი რამ, თუ მხოლოდ მაშინ, როდესაც ეწვევით google.com, ან cnn.com, ან website.com, , რომ საიტი აქვს ძალა გახდეს თქვენი კამერა, იღებს სურათს თქვენ, და შემდეგ გამოიყენოთ იგი. მაგრამ თქვენ არ მინდა შემთხვევითი ნახვა რომ თქვენ ძალიან პირველად აქვს, რომ შესაძლებლობა. 

ასე რომ, რა ტელეფონი მწარმოებლები, როგორც წესი, არის, რომ ისინი უბრალოდ უარყოფს ხელმისაწვდომობის რომ სახის ინფორმაცია ბრაუზერი, რაც იმას ნიშნავს, ვერ ასრულებენ კამერა. თქვენ არ შეგიძლიათ განახორციელოს ბიძგი შეტყობინებები, საყვირი, რომ თქვენ თქვენს ეკრანზე მოკლე შეტყობინებები. და სინამდვილეში, კი GPS მხოლოდ სახის ერთგვარი ხელმისაწვდომი ვებ ბრაუზერები. თუ თქვენ ოდესმე, ლეპტოპი ან მობილური მოწყობილობა, გამოყვანილია რაღაც იქნებ cnn.com, არამედ ადგილობრივი საინფორმაციო სადგურები როგორც წესი, ამის გაკეთება, თქვენ მოთხოვნილია ხშირად message-- foxnews.com უნდა იცოდეს, თქვენი ადგილმდებარეობა. დაამტკიცებს ან უარყოფს. 

ისე, ბრაუზერის ცდილობს შედიხართ თქვენი GPS ინფორმაცია თქვენი ტელეფონი. მაგრამ საბედნიეროდ Microsoft, და Apple და Google გადავწყვიტეთ, რომ იგრძნობა ეს სასარგებლო სიტუაცია, ჩვენ გვინდა, Google Maps და სხვა ინსტრუმენტები მუშაობა, მაგრამ ჩვენ არ გვინდა, რომ შემოგეპაროთ ხალხი მხოლოდ საშუალებას აძლევს ნებისმიერ ნახვა, რომ ამის გაკეთება. მოდით სახის შეხვდება შუა და შეეკითხება მომხმარებელს. მაგრამ ეს არ არის აუცილებელი იმ შემთხვევაში, ყველა ტექნიკა, ისევე როგორც კამერა და ერთად ბიძგი შეტყობინებები და მოსწონს, ასე რომ თქვენ შეიძლება უნდა შესწირონ გარკვეული თვისებები. მაგრამ შესრულება ძალიან. ეს ხდება ნაკლებად შესამჩნევი დღეს, ალბათ, როგორც LTE იჭერს და სწრაფად ინტერნეტ სიჩქარის ტელეფონები, მაგრამ შეგიძლიათ სახის გრძნობს განსხვავება. როგორც ვებ დაფუძნებული პროგრამა უბრალოდ გრძნობს ნელა, როგორც წესი, ვიდრე მშობლიური პროგრამა, ნაწილობრივ იმიტომ, რომ ვებ დაფუძნებული განცხადება ზოგადად ინტერნეტში. ეს საუბარი, სერვერები ინტერნეტში. და თუ ქსელის კავშირი ნელი, თუნდაც სენსორული შეიძლება იყოს ნელი. 

მაგრამ მშობლიური განაცხადს, თქვენ უნდა უკვე წინასწარ downloaded-- ალბათ როდესაც თქვენ სახლში საწყისი app store, და თქვენ მაინც წინასწარი გადმოწერილი იგი მთლიანად ადრე, რასაც თქვენი კავშირი speed-- და ახლა თქვენ გაქვთ ყველა ბიტი, რომ საერთოდ უნდა. გარდა შესაძლოა გარკვეული მონაცემები რომ მოდის სერვერზე. 

ასე რომ, ეს არის ვაჭრობის ღ აქ. აქ არის ერთგვარი საშუალო კომპრომისი, ფაქტობრივად. და მე ვფიქრობ, you-- 

აუდიტორია: გამოიყენეთ მონაცემები გასულია. მშობლიური apps, შეგიძლიათ [INAUDIBLE] დევიდ ჯ Malan: აბსოლუტურად. ასე რომ, არსებობს გასულია საკითხი, რომელიც მართლაც შემაშფოთებელი თუ თქვენ ვერ ითამაშოს გარკვეული თამაშის ან გამოყენება ზოგიერთი პროგრამული უზრუნველყოფა მხოლოდ იმიტომ, რომ თქვენ სარდაფში სადღაც და ლიფტი. დამხმარე პროგრამა არის სტაბილური უმაღლესი ალბათობა წინააღმდეგ, ვთქვათ თქვენ გაქვთ ყველა მონაცემები გჭირდებათ ადგილობრივად. 

ასე რომ, არსებობს მესამე ვარიანტი აქ. და მოდით დავხატოთ სპექტრის აპის აქ და web app აქ. და რა არის შუა არის რაღაც called-- და მე ვფიქრობ, რომ თქვენ შეიძლება ჰქონდეს გამოყენებული სიტყვა ადრე, იქნებ? ჰიბრიდული განცხადება. და როგორც სიტყვა გულისხმობს, ეს რაღაც შუა. ეს არის ერთგვარი ვებ პროგრამა და ეს არის ერთგვარი მშობლიური პროგრამა. 

და რას ნიშნავს ეს? თურმე არსებობს frameworks-- გამოიყენოს ტერმინი ადრე პროგრამული უზრუნველყოფა რომ სხვა ადამიანების მიერ დაწერილი თითოეული ამ პლატფორმების. ეს და კიდევ სხვა მოწყობილობები. ფაქტობრივად, ნება მომეცით წასვლა PhoneGap, რომელიც ერთ-ერთი ასეთი ფარგლებში, რომელიც მე მჯერა, Adobe ფლობს ახლა. ნება მომეცით წასვლა ნაცნობობა. მოდი ვნახოთ. აგრეთვე, თუ მე ვხედავ სიაში ინსტრუმენტები. აპარატურა. ვიწყებთ. PhoneGap ტექნიკა. 

მოდი ვნახოთ. PhoneGap ტექნიკის ხელმისაწვდომობა. ვნახოთ, თუ შეგვიძლია ვიპოვოთ პატარა სქემა, რომ ისინი გამოყენებული აქვს. ეს არის კიდევ ერთი საიტი. ეს არის სასარგებლო? No. ეს არის კარგად დაგვრჩა ჩვენი დროის არსებობს. PhoneGap ტექნიკა. მოწყობილობები. მოწყობილობა API. Nope, ისინი გადაიტანეს. 

PhoneGap. მოდით წავიდეთ ერთი ბოლო შევხედოთ ამ და თუ შემიძლია გაჩვენოთ. ვიწყებთ. დააინსტალირეთ PhoneGap. დააინსტალირეთ მობილური აპლიკაცია. მოდი. ისინი რეორგანიზაცია ყველაფერი. კარგი. Oh, ყველა უფლება. ისე, აქ ჩვენ მივდივართ. ეს არ არის ყველა, რომ ნათელი, მაგრამ ეს არის ის, რაც მე სახის ეძებს. 

ასე რომ, PhoneGap არის ჩარჩო, რომ თქვენ შეგიძლიათ ჩამოტვირთოთ უფასოდ, რომელიც გაძლევთ რამდენიმე დამწყებ კოდი, არსებითად. ასე რომ, რამდენიმე კოდი, რომელიც მათ წერილობითი რომ არ გააკეთებს, ბევრი არაფერი. მაგრამ ის, რაც გაძლევთ არსებითად ექვივალენტური განცხადების, რომ მხოლოდ აყენებს დიდი მართკუთხედი მომხმარებლის ეკრანზე. ეს არ დააყენოს URL ბარი, როგორიც ბრაუზერი, არ ბოლო მისამართზე. ეს მხოლოდ აყენებს დიდი მართკუთხედი. და თქვენ კონფიგურაცია ეს დიდი მართკუთხედი, ქვეშ Hood, ფაქტიურად წასვლა acme.com, ან იქნებ m.acme.com, for mobile.acme.com, მაგრამ არ ვიცი ისინი იმ მისამართზე. ყველა ხედავენ არის შინაარსი ვებ გვერდზე. 

მაგრამ რა არის ლამაზი ამ ყოფნა ჰიბრიდული app არის, რომ ის, რაც PhoneGap და სხვა კომპანიები გაძლევს ისინი გაწვდით ცოტა კოდი Objective-C ან Swift, ან ცოტა კოდი Java, ან ცოტა კოდი C #, და, არსებითად, ყველა თქვენ უნდა უზრუნველყოს უმნიშვნელო მისამართი თქვენი ვებ დაფუძნებული პროგრამა. და მაშინ bundle ამ ყველა ერთად და თქვენ მაქვს შედიხართ თქვენს საიტი ინტერნეტით, და თქვენ კი ქეში ადგილობრივი ასლი შიგნით განაცხადის, და მაშინ გადარჩენა თქვენი განცხადება in iPhone ფორმატში, Android ტელეფონი ფორმატი, ზედაპირზე ფორმატში, ან ნებისმიერი რაოდენობის სხვა მოწყობილობები. 

თქვენ ატვირთეთ თითოეული იმ ვერსიები რომ Google Play Store, to App Store, რომ Windows Store, და სხვ. და ახლა, შეგიძლიათ ყველა თქვენი აუდიტორია ჩამოტვირთოთ ნამდვილად შექმნილი app, თუმცა ყველაზე მეტად კოდი იყო ვინმემ სხვის მიერ დაწერილი, მაგრამ შინაარსი, რომ შექმნილი app ყველა მოდის, როგორც წესი, თქვენი საკუთარი ნახვა. ასე, რომ თქვენ გააგრძელოს წერა თქვენი საიტი HTML, JavaScript და CSS. 

ასე რომ, რატომ ბუნდოვანი ამ ხაზების? რატომ აქვს ჰიბრიდული განცხადება რომ სახის შექმნილი, არამედ სახის ვებ დაფუძნებული? რა არის მთელი წერტილი დასძინა, რომ ეს სირთულის? ვგულისხმობ, თუნდაც ისევ, მხოლოდ გადავავლე ამ გვერდზე, ნაცნობობა სახელმძღვანელო იგრძნობა მას აქვს მთელი ბევრი ნაბიჯები ჩემთვის უნდა გავაკეთოთ, სანამ მე can-- აუდიტორია: reusability? დევიდ ჯ Malan: reusability? რას გულისხმობთ? 

აუდიტორია: კოდის. ასე რომ, იგივე კოდი, რომ აწარმოებს ყველა სხვადასხვა პლატფორმაზე მუშაობს. დევიდ ჯ Malan: ჰო. აუდიტორია: [INAUDIBLE] დევიდ ჯ Malan: Perfect. თუ დრო არის მჭიდრო და თუ არ გვაქვს, რომ ბევრი developers-- იქნებ თქვენ გაქვთ ერთი დეველოპერი და ის, რა თქმა უნდა არ ვიცი, ეს ყველაფერი environments-- თქმა არ არის, და რა თქმა უნდა ვერ პროგრამა სამივე ერთდროულად და მოვახდენთ სამი პროდუქციის დროს დაშვებული ერთი, თქვენ შეგიძლიათ მას ავაშენოთ ყველაფერი HTML და JavaScript და CSS, და მაშინ ვისწავლოთ პატარა ცოტა შესახებ შექმნილი apps, მხოლოდ საკმარისი ჩამოტვირთოთ ჩარჩოს, როგორც ეს, რომ შემდეგ ატვირთოთ თქვენი პროდუქტის ყველა სხვადასხვა app მაღაზიები ასე რომ თქვენ ახლა აქვს მშობლიური განცხადება. 

ასე რომ, როგორც ჩანს, მომგებიანი, მაგრამ ერთხელ, უნდა იყოს მკაფიო, რა არის პოტენციალი ხარჯები ან gotchas? 

აუდიტორია: შესრულებით? დევიდ ჯ Malan: ჰო. შესრულება. ძნელი აღწერს სიტყვიერად. ასე რომ, თუ უბრალოდ იღებს რწმენა მობილური განაცხადი, ვებ განაცხადი როგორც წესი, ასრულებენ უფრო ნელა. ეს შეიძლება არ გამოიყურება საკმაოდ უფლება, რადგან iPhone, და Android ტელეფონები, და Windows მოწყობილობები, არსებობს ყოველთვის ერთგვარი ძირითადად სახე და ვგრძნობ, რომ ყველა ღილაკები და მენიუები. 

და კომპანიების ინტერნეტში, შეგიძლიათ ცდილობენ სავარაუდო იმ ესთეტიკის ბიბლიოთეკების, როგორიცაა ჩატვირთვის, მაგრამ user-- თავშეკავებულად user-- აპირებს ვიცი, რომ რაღაც არ არის სწორი აქ. და ეს ჯარიმა, შესაძლოა, ეს არ არის დიდი გარიგება. მაგრამ შესრულების საკითხი აბსოლუტურად არის დიდი გარიგება. მშობლიური პროგრამები, როგორც წესი, მხოლოდ ბევრად უფრო მგრძნობიარე და ამიტომ უკეთესი. ასე რომ, მერე რა შეიძლება იყოს საუკეთესო ორივე სამყაროს? თუ თქვენ განსაკუთრებით პატარა კომპანიის ან მცირე ჯგუფი, თქვენ არ გაქვთ რესურსი განავითაროს ოთახი პარალელურად სამივე პლატფორმაზე, და გულწრფელად, იგრძნობა, რომ ეს არის ცუდი იდეა მაინც იმიტომ, რომ თუ გააფართოვოს ის და სამივე ერთდროულად გააცნობიეროს, ჩვენ უნდა დაემატოს გარკვეული თვისებები ან გაკეთდეს რაღაც განსხვავებულად, ახლა თქვენ უნდა დააფიქსიროს იგი სამ ადგილას, არა ერთი. რა არის იქნებ ოპტიმალური სტრატეგია აქ საერთო ჯამში, თუ რესურსებს და დროს მჭიდრო? 

აუდიტორია: Just ამის შესახებ iOS. 

დევიდ ჯ Malan: ეს არ არის დაუსაბუთებელი. iPhones, მაინც, აშშ, არის სუპერ პოპულარული. Android მაინც, როგორც ჩანს, დომინანტური საბაზრო წილი, მსოფლიო მასშტაბით, საერთო. ასე რომ, თუ თქვენ არ ხართ აუცილებლად წარმომადგენელი საქართველოს მთელ მსოფლიოში ამ კვირაში. მაგრამ ეს არის აბსოლუტურად ერთი გადაწყვეტილება. ვგულისხმობ, კამპუსში აქ მე ვფიქრობ, რომ ზოგიერთი ბარბაროსულ რიგი ან პროცენტული სტუდენტებს აქვს iPhones და არ Android ტელეფონები. არამედ მის ფარგლებს გარეთ, ეს სახის საპირისპირო. ასე რომ თქვენ გადაწყვიტეთ საფუძველზე თქვენი აუდიტორია. იცით, რა თქვენი აუდიტორიის? 

ისე, ჩვენ ვისწავლეთ შეასრულა გუშინ. თქვენ შეიძლება ვთხოვთ. თუ თქვენ გაქვთ ტყვე აუდიტორიას თქვენ შეგიძლიათ გააგზავნოთ გამოკითხვის ფორმა. ან შეიძლება უბრალოდ რა? 

აუდიტორია: Google Analytics? 

დევიდ ჯ Malan: რა არის ეს? 

აუდიტორია: Google Analytics. დევიდ ჯ Malan: Google Analytics. ჰო. ან კიდევ უფრო ერთგვარი ტექნიკურად, უბრალოდ შეხედეთ საკუთარ ვებ სერვერები ჟურნალი. იმის გამო, რომ ის, რაც ხდება ყოველ ჯერზე ბრაუზერის, არა ლეპტოპი, მაგიდაზე ან ტელეფონი თქვენს ნახვა? მათ გაგზავნას, რომ HTTP header, რომელიც გვიჩვენებს, თუ რა ბრაუზერში და OS ისინი გამოყენებით. ასე რომ თქვენ შეგიძლიათ დავასკვნათ, დიდი ალბათობით, რა თქვენი დემოგრაფიული გამოყენებით, რომ გზა და შემდეგ შეცვალოს. 

ასე რომ, ვფიქრობ, რომ მიუღებელია. სწორედ ერთგვარი ცუდი ბიზნესი თუ Android წევრებს არ შეგიძლიათ შეიძინოთ ჩვენი widgets. 

აუდიტორია: თუ თქვენ კარგად დააკისროს თუ არა? დევიდ ჯ Malan: თუ თქვენ აპირებს დააკისროს? ასე რომ, ბატონო, თქვენ რა იხდით. 

აუდიტორია: თუ არა თქვენი app არის კარგად იყოს თავისუფალი თუ ის gonna-- 

დევიდ ჯ Malan: OK. ასე რომ, იქნებ recoup ხარჯები, რომ გზა, or--? 

აუდიტორია: წავიკითხე კვლევა კიდევ ერთხელ, რომ განაცხადა, უფრო Apple წევრებს გადაიხადონ apps versus-- დევიდ ჯ Malan: ეს სიმართლეა იმიტომ, რომ ისინი უკვე გადახდის მეტი მათი მოწყობილობები. ასე რომ, არ არის დაუსაბუთებელი ვარაუდია. 

აუდიტორია: [INAUDIBLE] დევიდ ჯ Malan: OK. ასე რომ, თუ ისინი უფრო მზად არის გადაიხადოს, მაშინ ჯოჯოხეთის ერთად Android მომხმარებლებს. ისინი არ აპირებს გადახდა ჩვენთვის არაფერი მაინც. ჩვენ შეიძლება ასევე ყურადღებას ჩვენი პრიორიტეტები, როგორც მინიმუმ, პირველი რამდენიმე თვის განმავლობაში ან წლის iOS. სრულიად გონივრული. რა არის უფრო ინკლუზიური სტრატეგია, ვიდრე ეს? Maybe-- რა არის ეს? 

აუდიტორია: [INAUDIBLE] 

დევიდ ჯ Malan: მეტი expensive-- იქნებ ინვესტირებას მეტი შიგნით წავიდეთ წინ. აუდიტორია: Yeah. მხოლოდ პორტალის ვებგვერდზე. 

დევიდ ჯ Malan: ასე რომ პორტალის ნახვა და არ კი ფიქრი ამ სირთულის. ან იქნებ გონივრული სტრატეგია, რაც კი Facebook მიიღო, არის დაიწყოს ჰიბრიდული განაცხადის იმიტომ, რომ ეს არ არის რომ ბევრად უფრო რთული, რომ ამის გაკეთება, ვიდრე ეს. თქვენ უბრალოდ უნდა წაიკითხოთ ზოგიერთი დოკუმენტაცია და გაერკვნენ, თუ როგორ ატვირთეთ რამ App Store. იქნებ იწყება ეს ისე, რომ დღეს ერთი, თქვენ შეუძლია ყველა თქვენი მომხმარებლები. და შემდეგ, ისევე, როგორც Facebook და სხვა კომპანიები არ კეთდება, როდესაც თქვენ გაქვთ რესურსები, თქვენ გაქვთ ადამიანი, რატომ არ ხელახლა განხორციელება მხოლოდ iOS განცხადება. თქვენ ჯერ კიდევ აქვს რაღაც ყველასათვის, მიუხედავად იმისა, რომ ეს არის inferior გამოცდილება ალბათ, ჰიბრიდული განცხადება. მაგრამ შეგიძლიათ ეტაპობრივად გააფართოვოს და შეცვლის თქვენი მოკლევადიანი ზომები ჰიბრიდული ნაკადი თქვენს მეტი შექმნილი პროგრამა. 

აუდიტორია: მაგრამ ჰიბრიდული app თქვენ ექნება დაშვება მობილური თვისებები? 

დევიდ ჯ Malan: არ არის აუცილებელი. იქნებ გააკეთოს გაცნობიერებული გადაწყვეტილების მიღების დასაწყისში, თქვენ შეგიძლიათ ატვირთოთ მხოლოდ ფოტო შექმნილი iPhone განაცხადის Facebook, მაგრამ არა Android განაცხადი, თავდაპირველად, მაგალითად. და ეს ცოტა თეთრი ტყუილი, რადგან ვებ პროგრამები უფრო შეზღუდვა ვიდრე ჰიბრიდული პროგრამები გამოდის გარეთ, და თუ ჩვენ წაიკითხა დოკუმენტაცია for PhoneGap და რამ, როგორც ეს, ხალხი არ ამუშავება გზები რათა ვებ დაფუძნებული პროგრამები ხელმისაწვდომობის კამერა, ასე რომ, სანამ თქვენ იყენებთ ჰიბრიდული განცხადება. 

როგორ, რომ მუშაობს? იმის გამო, რომ ჰიბრიდული პროგრამა, ზოგადად, აქვს ცოტა კოდი Objective-C, და Swift და Java, ან C #, მას შეუძლია ტექნიკა. არ არის აუცილებელი, ყველაფერი, მაგრამ ეს შეიძლება ძალიან კარგად იმ შემთხვევაში, რომ თქვენ გაქვთ საკმარისი ხელმისაწვდომობის მისაღებად კამერა, თუნდაც Android პლატფორმებზე, მაგალითად, რომ contrived მაგალითად. 

ნებისმიერი სხვა კითხვები? კარგი. რატომ არ ვიღებთ ჩვენი 15 წუთიანი შესვენება აქ. ჩვენ განაახლონ სამ საბოლოო შევხედოთ ვებ პროგრამირება, მონაცემთა ბაზები, და JavaScript. 