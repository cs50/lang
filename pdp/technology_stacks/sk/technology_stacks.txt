David J. Malan: Takže sme späť. Takže na vysokej úrovni tému v súčasnosti teraz je technológia komíny, čo nie je Zvlášť technický termín, je to skôr o úlovku všetko akýkoľvek počet kombinácií technológií ktoré môžete použiť na riešenie problémov. A možno najviac montáž spôsob, ako začať by bolo pozrieť sa na jazyky, pretože Stále drnčanie preč veľa a takmer všetci v miestnosti má pravdepodobne počuli aspoň jedného. 

A tak prečo sa snažíme odlíšiť what-- odlíšiť tieto jazyky a krátko pohovoril o tom, kedy by ste zvoliť jeden cez druhého, ako sú nejako zásadne rôznymi spôsobmi, najmä keď ste chatovanie s inžiniermi, alebo sa snaží rozhodnúť, koho zamestnať, alebo čo implementácia Návrh na GreenLight, ako by ste vlastne robiť tieto druhy rozhodnutí. 

Takže povedzme, chrastění niektoré veci preč. Z jazykov majú ľudia počul o to, čo príde na myseľ? C. OK. OK, C ++. Čo je to? 

Divákov: Python. 

David J. Malan: Python. Výborne. Čo ešte? Visual Basic. Počul som, že Java. Vizuálne Basic-- alias VB. Java. NET, čo je viac chytiť všetky za to, čo je zvyčajne C # ako jazyk v otázke. A dovoľte, aby som spomenul. Takže sa vrátime k tomu. Prepáč? Je nám ľúto? 

Divákov: SQL. David J. Malan: Scratch? Divákov: SQL. David J. Malan: Oh, SQL. OK. SQL. Takže sa vrátime k to-- v skutočnosti, je to good-- po prestávke rovnako. Čo ešte? 

Divákov: Oracle. 

David J. Malan: So Oracle, nie je jazyk. V skutočnosti by sa používať SQL rovnako. Dajme teda, že po prestávka rovnako. A mrzí, niečo tu? Divákov: Mathematica. David J. Malan: Mathematica? OK, jasné. A MATLAB je v istom zmysle tam občas. 

Divákov: R. 

David J. Malan: R. Poďme sem. Fortran. Istý. Staršie školu. Fortran. COBOL. Budem vyhodiť BASIC. BASIC. Akýkoľvek-- 

Divákov: MATLAB? David J. Malan: MATLAB. Oh, beat vás k nemu. Čokoľvek? Neviem si predstaviť pár druhých. Neviem si predstaviť niekoľko ďalších. A aký bol naposledy? 

Divákov: ASP. 

David J. Malan: ASP? Jo. Stránky Active Server. To by všeobecne spadajú ďalšie jazyky, niekedy C #, tak to si necháme off. Ale vrátime sa k tomu u rámcov a podobne. Čokoľvek iné? PHP je populárny. Ruby je ďalší. JavaScript, nesmie zamieňať s Java, je iný. To je trochu veľa. 

Takže to môže byť určite ohromujúce, ako keby zoznamu už nie je, jednoducho začať vedieť, kde začať. A tak našťastie, poďme pristupovať z niekoľkých uhlov. Po prvé, poďme sa snaží roztriediť aspoň niektoré z týchto jazykov do dvoch širokých vedierka, pripomínajúce rozhovor sme mali pred prestávkou, kde sme sa rozprávali o kompiláciu, a zdrojový kód, a strojový kód, pretože to nie je, ako všetky jazyky fungovať. Takže budeme vyklovnout niekoľko príkladov of-- alebo proti examples-- uvedeného modelu. 

A potom, prečo nie my hovoriť o aplikáciách že tieto jazyky sa všeobecne používa. A úprimne povedané, hoci To je celkom dlhý zoznam, je to len podmnožina tohto zoznamu, ktorý by zvyčajne čerpať z týchto dní riešiť problémy. Niektoré jazyky sú novšie než ostatní. niektoré jazyky populárnejšie než ostatné. Tak to nie je, ako máte taký ohromujúci úloha pred vami Pri rozhodovaní medzi tieto rôzne jazyky. 

Tak ideme na to. Mali sme starší, zdrojový kód, a potom sme mali strojový kód. Pokriky. Písanie zlé slovo. strojový kód. A my sme mali nejaký proces v prostredný called-- jo, kompilátora. Takže kompilátor. 

A čo je strojový kód v skutočnosti beží na na konci bude vaša skutočná CPU. Inými slovami, strojového kódu, I znamenať inštrukcie na najnižšiu úroveň že procesor v skutočnosti chápe. Sčítanie, odčítanie, sťahovať, ukladať a operácie podobne. A tak toto je model pre to, čo je všeobecne známe ako kompilované jazyky. Nie je asi prekvapením. 

Tak toto je model Pre kompilované jazyky. Ale ukazuje sa, je tu ďalšie trieda jazykov volal interpretované languages-- vykladať languages-- že sú mierne odlišné. Píšete v zdrojovom kóde, spúšťať je prostredníctvom tlmočníka, a že interpret je čo beží na procesore. Inými slovami, to, čo robíte nie Posielať je to, čo očividne? strojový kód. Nuly a tie, ktoré CPU Samotný nakoniec chápe. 

Takže v tejto prvej verzii a jazyky ako C, rovnako ako sme videli, píšete v zdrojovom kóde to je trochu tajomný, ale aspoň je to trochu anglicky-like a to najmenej čitateľná akonáhle si na to zvyknúť. Môžete ho spustiť pomocou prekladača a von dostanete nakoniec aj núl a jednotiek. 

Že ako zjednodušujúce. Tam sú niektoré ďalšie kroky tam. V skutočnosti, ak ste niekedy počuli Výraz "jazyk symbolických inštrukcií," To je jeden krok pred sa nuly a jednotky. Že trochu lepšie čitateľné, ale stále dosť tajomný. A tak je tu medzistupne ktoré sú v skutočnosti deje. Ale výstup, nakoniec, Práve tieto nuly a jednotky. 

Ale v interpretovaný svet, kde máte jazyky, ktoré sú interpretované jazyky, v skutočnosti vynechať tento krok. Inými slovami, keď píšete Program, stačí spustiť okamžite ju. Nemusíte ju zostaviť a spustite ho, ako som predtým. Stačí napísať to a spustite ho. A ak chcete vykonať rýchlu zmenu, urobíte rýchlu zmenu a spustite ho. Takže nie je prostredný krok tu. 

Teraz pre tento program som napísal skôr, ktorý bol tento "Hello World" program by ste mohli rozumne wonder-- alebo by mohol rozumne state-- že nebol ten čas náročné zostaviť svoj program. Zdá sa, že to urobil práve takto. A je tu grafický verzia kompilátorov. Ja používam veľmi tajomné verziu, ale mohol zasiahnuť tlačidlo prehrávania a že by v skutočnosti robiť kompilácie pre vás. Som zostavil program a potom opäť ho spustiť, len som to urobiť. A to výstupy vľavo tam, "Ahoj!" To sa mi nezdá, že všetko nevýhodné. Ale keď vaše programy sú viac než len jeden, dva, tri, štyri, päť liniek dlho, môže trvať oveľa viac sekúnd zostaviť. Niekedy dokonca minút alebo celkom dosť času na kompilácii. Koniec koncov, niektoré z Najväčší produkty svetoví sú veci ako operačné systémy, Microsoft Word, Microsoft Excel, ktorý by mohol byť stovky tisíc alebo dokonca milióny riadkov kódu dlhých, a tie, ktoré nie sú len ihneď spustiť. 

Okrem toho, na webe, je to Stalo sa módou používať proste interpretovaný jazyk, sčasti preto, že vás možno vykonať zmenu ako vývojár a potom už len okamžite preložiť stránka prehliadača a okamžite vidieť výsledok. A tak HTML, aj keď nie je programovací jazyk, je jazyk, ktorý je interpretovaný. A my sme videli, že rovnaký efekt včera. Len načítanie stránky po vykonaní zmena Cloud9 a-- voila-- uvidíte nový výsledok. 

Takže to, čo je tu v tom rozdiel? V HTML, recall, mali sme otvorené HTML, otvorená hlava, otvorený titul, v blízkosti názvu, V blízkosti hlava, otvorená karoséria, a tak ďalej. Mali sme všetky z týchto značiek, ktoré sme dosť oveľa povedal, povedz prehliadač čo má robiť. Hej prehliadač, prichádza HTML stránky. Hej prehliadač, prichádza titul. Hej prehliadač, prichádza niektoré text, ktorý by mal byť tučným písmom. A potom poviete opak. Hej prehliadač, to je ono Pre tučne textu. Hej prehliadač, že je to pre telo. A tak ďalej. 

A tak to, čo je prehliadač? Prehliadač je len interpretom. Ide o program, ktorý niekto ako Microsoft alebo Google napísal, ktorého zmyslom života je čítať jazyk, známy ako HTML, a interpretovať. Zhora nadol, zľava doprava. A kedykoľvek prehliadač vidí otvorené držiak, titulná, úzkym držiak, to by malo interpretovať, že v tom zmysle, oh, že znamená, že by mal dať tieto slová cesta tu v hornej časti prehliadača. 

Tak to jednoducho robí to, čo HTML kód hovorí. Ale nie je núl a jednotiek. Neexistuje žiadna kompilácie. Vy to neurobil. Prehliadač to neurobil. Je to jednoducho nie je zapojený. 

Takže v duchu týchto prebiehajúcich tém, dnes a včera, ktorá sa zdá byť báječný funkcie. Šetríte svoj kód a potom stačí ho spustiť, alebo ho interpretovať. Neexistuje žiadne medzistupne. Iste tu stoja? Nemôže byť všetky upsides. Takže to, čo by mohlo byť, že náklady? 

Divákov: Space. 

David J. Malan: Space. Takže, určite. V kompilované svete, máte nielen pôvodné zdrojový kód, ste tiež vytváranie a potom pravdepodobne ukladanie stroj code-- nuly a ones-- a to dostal do zaberajú určité množstvo priestoru. Absolútne. Tak to vás to stálo viac priestoru. Jo? 

Divákov: prehliadača môžu interpretovať rôzne. 

David J. Malan: prehliadača môžu interpretovať rôzne. To je pravda. Ale nie som si istý, že som komfortné vyhlasovať to je, pretože je to interpretované. To je viac, len preto, že je to implementácia jazyka ktorá sama o sebe má nejasnosti. Takže poďme nie celkom potvrdiť že jeden, ale dobré tušenie. Čo iné by mohla byť cena zaplatená? Andrew? 

Publikum: Ty kombinujúci dva kroky, takže si preto majú rastúcu zložitosť rovnako. 

David J. Malan: The complex-- zvýšenie zložitosti, kde? Pre koho? 

Publikum: Takže v interpret krok, budete kombinovať tlmočníkovi a kompilátor len za vedúcu to-- 

David J. Malan: Ach, OK. Je iróniou, že je to asi trochu jednoduchšie implementovať interpret, aj keď by sa mohlo zdať, aby výnosovej upsides tohto pohodlie. Takže možno pravda. Ale celkom to záleží, myslím, by sa povedať, na jazyku a na tom, ako šli o jej vykonávaní. Tam môže byť oveľa viac zložitosti, v skutočnosti, v kompilátora, Len preto, že máte ísť od niečo tak vysokej úrovni k niečomu tak nízkej úrovni. Ale dobrá myšlienka. 

Takže inak povedané, je zostavený program keď premenil týchto núl a jednotiek, končí v jazyku že procesor hovorí, že v tejto strane world program ste napísali, kód ste napísali, v skutočnosti nikdy dostane premenený na skutočné jazyka počítač hovorí. V nuly a jednotky. Zostáva v pôvodnom, ľudskejší priateľský, čitateľnejší jazyk. Takže to, čo by mohlo byť implikácia tam, ak nemáte v skutočnosti obťažovať prevod program samotného jazyka že základná počítač hovorí? 

Divákov: nemusí niečo pochopiť? 

David J. Malan: Might nerozumiete. A to môže claim-- ak to nechápal niečo, to je chyba alebo nedostatok z funkcie v interpretu. Tak, že by bol na chyba ako náklady. 

Publikum: Máte prístup do zdrojového kódu? David J. Malan: Je tu dobrý. Takže Nevýhodou tu je, Zdá sa, mať prístup. Tie, koncový používateľ, by sa mohlo zdať mať prístup k zdrojovému kódu. A to nie je vždy pravda. Ale je pravda, v prípad JavaScriptu čo sa pozrieme na neskôr prestávka dnes, čo je interpretovaný programovací jazyk že píšete v zdrojovom kóde. 

Ale to zdrojový kód dostane prevedené z vášho servera do prehliadača a beží v prehliadači ľudskom to. Tak tu mohla len otvoriť okná, ako som robil v Chrome, a pozrieť sa na to, ako sme sami Pozrel sa na včerajška so spoločnosťou Google. Mohlo by to vyzerať trochu nezrozumiteľný, ale je to tam. Tak to je úplne jedno cena zaplatená. Divákov: Performance hit? David J. Malan: Jo. A to je ďalší potent. Tam je výkon hit. Pretože máte tento prostredný muž, ktorý sám o sebe je program, medzi vami a CPU, na rozdiel od len kŕmenie týchto surový nuly a jednotky do procesora, je tu výkon hit, ktorý vás vziať so interpretovaný jazyk. Tak, že ľubovoľne, program že môže trvať jednu sekundu spustiť na počítači alebo v jednom minúty bežať na počítači tu, môže trvať 10 sekúnd alebo 10 minúty bežať na počítači tu. Je to všeobecne nebude, že veľký difference-- faktora 10-- pretože je tu optimalizácie, ktoré môžete urobiť. Ale je to takmer vždy pomalší. Teraz, odvrátenou stranou k tomuto problému je to, že dobre počítačov, každý 12 až 18 months-- podľa Moorov zákon, tak aby speak-- sú len dostať rýchlejšie a rýchlejšie. Mám stále viac a viac miesta na disku. Mám stále viac a viac pamäte RAM. Kto naozaj zaujíma? 

A to je niečo ako rozumný argument. Jedným z dôvodov, prečo Preto môžeme tolerovať pomalší interpretovaný jazyk, pretože je my ľudia nemajú naozaj nevšimne. Počítače majú dostali len tak sakramentsky rýchlo. Vzhľadom k tomu, späť v deň, a to najmä Pri hardware bol oveľa viac obmedzený, ste mali menej všetkého, to bolo oveľa drahšie takže všetko sú drahšie, no a potom ste naozaj chceli vytlačiť toľko výkonu, ako by ste mohli. Ale to požadované písomne nižšej úrovne, ak chcete, s kompilované jazyka. 

Takže ste si vziať tento výkon hit. Ale všeobecne, je upsides Zdá sa, že stojí za to v týchto dňoch. No, s výnimkou Problematika duševného vlastníctva. taká čitateľnosti kódu, my budeme vrátiť, keď sa pozrieme na JavaScriptu. 

Takže poďme sa pokúsiť zaradiť aspoň niektoré z nich. Takže medzi kompilované jazyky, my by mal C, C ++, trochu, sorta, Java, Aj keď je to trochu výnimkou, pretože Dôvody Ukážem vám za chvíľu. C # by sa na tomto zozname. Pozrieme sa na viac tesne čím viac moderných jazykov. Dobre. A že sa zdá, ako veľa tam. Zatiaľ čo na tejto strane plota, by sme mohli mať JavaScript a Python, a PHP a Ruby. A je to dosť pre tie novšie? Že sa cíti ako kopa teraz. OK. A potom dot dot dot, pretože zoznam je nekonečný. 

A v skutočnosti, ak chceme len získať predstavu o tom tohle-- Wikipédie, kompilovaný jazyk. Hádam, že sa môžeme dostať ďaleko viac vyčerpávajúci zoznam. Tak ideme na to. Tak tu je oveľa viac vyčerpávajúci zoznam. A ja som dúfal, že niekto by sa hádať D ako jazyk, pretože to tiež existuje, ale oni zastavili pri D by sa mohlo zdať. Hoci tam v skutočnosti môže byť E. 

Oh, v skutočnosti, malo by to byť na zozname týchto dňoch. Swift je vlastne jazyk, ktorý Apple vynašiel ktorý je teraz používaný, stále tak vo vývoji iPhone. Ale vrátime do že s našou diskusiou z mobilného telefónu v len trochu rovnako. Takže Swift rovnako. 

A potom, ak ideme do vykladať language-- interpretovať language-- potom tu ešte dlhší zoznam rovnako. Takže len google ak vy a hľadať na Wikipédii pre tých, uvidíte všetky druhy jazykov. Ale účel je, pre dnešok naozaj, len scvrkáva na to možno Problematika duševného vlastníctva a čitateľnosť koncového používateľa a výkon, je ďalší potent rovnako. 

Takže medzi týmito jazykmi, Pozriem sa, či vám môžeme dať len niektoré vzorka jazykov. nechceme prejsť všetky jazyky do nekonečna. Premýšľali ste niekedy, čo istá jazyková vyzerá? Urobili sme vidieť pred chvíľou. Prečo by sme trvať niekoľko z funkcie požiadavky. Kto by chcel vidieť, čo iný jazyk vyzerá? Jo. 

Divákov: Java. 

David J. Malan: Java. Dobre. Tak poďme k Jave. A len preto, aby vám ukáže sample-- môžeme vypísať všetky tieto von, ale to by bolo rýchlejšie len preto, aby pozrite sa na ukážkový kód niekoho iného. Dobre. Takže je to dobrý príklad? Pokriky. OK. Tak tu je Java verzia Program som napísal skôr, "Hello World". 

Takže Java, budete často vidieť "triedu." kľúčových slov Potom uvidíte nejaké meno po tom. Uvidíte zložené zátvorky ako sme videli predtým, a niekedy idú na Rovnaký linka, niekedy aj iné linky, je to niečo osobné rozhodnutie. Uvidíte kľúčové slová ako "Verejný", "statické", "void". Ale my sme videli "hlavné". "Main" je všeobecne názov predvolené funkcie alebo predvolený kus kódu, ktorý dostane spustiť v programe. 

"Reťazec". Čo tým máme na mysli reťazec skôr? Použil som ju trochu nedbalo. Reťazec je čo? Slovo. Je to ako postupnosť znakov. Jednotlivé znaky, Späť na chrbtom k sebe, zvyčajne v poli, ako sme diskutovali. A v skutočnosti, vidieť túto syntax Tu sú dve hranaté zátvorky? To znamená, hej počítač, tu prichádza pole reťazcov. Notácie hranatú zátvorku je bežne používa na označenie, že. A potom môžete pravdepodobne trvať guess-- čo to zdôraznené kus kódu pravdepodobne robiť? 

Divákov: Výstup? 

David J. Malan: Jo. Tlačí niečo na obrazovku. Takže "systém" je niečo ako Odkaz na počítači. "Out" znamená, že váš počítač je Výstup alebo na obrazovke. Takže "System.out.print ln" Pravdepodobne to znamená? "Ln". Tlač čiara, ktorá programátorov, ako je sa zrejme hláskovať niektoré slová von v celom svojom rozsahu a vziať skratky s inými slovami. Ale "ln" je rad, takže tlač online. Tak to vytlačí "Hello World! "Nasleduje nový riadok. 

Tak je to. Ale Java je to, čo bude Výzva objektovo orientovaný. A skutočne, len sa získa pár ďalších definícií tam, že by ste mohli pozri, všeobecne, tam Je mnoho rôznych typov jazykmi, ale najčastejšie sú procesné alebo rozkazovací jazyky. Tam sú funkčné jazyky, ktorá neobsahuje znamenať, že iní sú nefunkčné. A potom je tu objektovo orientované jazyky. A to je možno najlepší kategorizácia väčšine jazykov že by ste niekedy zvoliť pre druh typického komerčného projektu. 

To by bolo príliš veľa, Myslím, že z otvoru krysy ísť dole, aby sa pokúsili vysvetliť rôzne rozdiely. ale jazyky Videli sme teda far-- C je procesný alebo imperatívom jazykom. V poslednej dobe vynašiel jazyky majú tendenciu byť, je mi ľúto, objektovo orientovaný, čo znamená, majú ďalšie funkcie k nim. Môžem to vysvetliť týmto spôsobom? Poďme ani tam dole. 

Objektovo orientované prostriedky môžete implement-- môžete modelovať reálny svet o niečo efektívnejšie. Ľudstvo, v priebehu času, prišiel na to, wow, to by bolo, keby mojom jazyku pekný mal túto funkciu, alebo túto funkciu. A to je dôvod, prečo máme tak mnoho jazykov na svete. Rozumní ľudia, smart ľudia, súhlasí alebo nesúhlasí a vždy nejako zísť na vývoji nových jazykov dohromady. 

Názorný príklad. Apple vynašiel Swift v nádeje pravdepodobne zníži tyč k rozvoju iPhone, pretože predchádzajúce language-- volal Objective-C, čo by mohlo byť tiež v našom zozname here-- Bol oveľa tajomný a veľa ťažšie zábal niečí myseľ okolo. A ako programovanie sa stáva pravdepodobne prístupnejšie a všeobecnejšie prijatej ľudia dokonca menšie technické sa goal-- Je to veľmi statočný cieľom pokúsiť sa znížiť prekážky vstupu na trh tým, že samotní jazyky ľahšie začať s, ale nemenej silný nutne. 

A jeden ďalší jazyk. Prečo by sme sa pozrieť na niečo ako Python, čo je veľmi v móde v týchto dňoch. Python. Ukážkový program. Pozrime sa. "Hello World" jazyky. Poďme to urobiť. "Hello World". Uvidíme, či to dáva us pekný príklad. OK. Takže je to vlastne trochu zábavy. Takže niekedy google, ak "Hello World", ktorý sa stane, že jeden z prvých programov kedy bola napísaná v moderným jazykom, rovnako ako dôkaz poňatie, môžete vidieť všetky druhy implementáciou tohto. 

Niektoré z týchto jazykov Som ani nepočul. Ale môžete see-- poďme do Basic, ten, ktorý som sa naučil pred rokmi čiastočne. Jednalo sa o zábavný jazyk, pretože vás musel, ako programátor, číslo všetkých svojich linkách. Nie na rozdiel od toho, čo som bol robil, keď som písal pseudocode na žltý dokumentu skôr pre binárne vyhľadávanie, pre vyhľadávanie telefónny zoznam. 

A tak, ak by ste chceli ísť na inú linku, by ste doslova písať, prejsť do 10, alebo ísť do 20 ° C. A ak píšete linky, konvencie mala urobiť, je to linka 10, To je v súlade 20, to je v súlade 30, 40, nič medzi tým, čím si nejaké miestnosti Ak sa rozhodnete, počkaj, Mal som pridal niektoré viac kódu niekde inde. Stále mal akúsi deväť šancí na stlačiť, že medzi programom Ako ste museli ručne prečíslovať všetko. 

Tak to je druh, čo mám na mysli keď hovorím, že svet má prísť s novými funkciami. Niekde po ceste niekoho si uvedomil, chlapec je to hlúpe. To je len vytvárať pracovať pre programátora. Tak on alebo ona len tak postavený nová vrstva na vrchole, že takže nemusíte mať strach O tom, čo riadok čísla kódu je v skutočnosti na. 

Takže keď môžete zvoliť jeden jazyk alebo iný? No, kto by z nich Jazyky Máte tendenciu kto sa dozvie o najviac si svoj vlastný svet v týchto dňoch? Poďme rozbaľovacej Objective-C taky. 

Divákov: C #. David J. Malan: C #. Tak nech mi farbu. Ešte máme inú farbu niekde? Takže C #. A čo viete o C #? Čokoľvek na jar na mysli? 

Divákov: Je to programovací jazyk. David J. Malan: Je to programovací jazyk. OK. To je pravda. Takže hovoríme o C #. C # má tendenciu byť použité v prostredie Windows, takže ak píšete softvér spoločnosti Microsoft pre Windows, C # je veľmi často používaný, či už je to pre desktop softvér, alebo aj softvér telefónu na telefónoch Windows, ak ste mali tie, alebo na webe až príliš. A v skutočnosti, možno Kareem spomínaný ASP skôr? Takže je tu tiež tieto veci zvanej rámcov, ktoré môžeme predstaviť podľa prípony. Rámcov, ako je ASP. Stojany pre aktívne stránkach servera. A to je kód a spôsob programovania ktorá všeobecne uľahčuje písať webové aplikácie. Inými slovami, to by bolo super, Super nepríjemné písať webové stránky v jazyku C, ktorý sme videli skôr, pretože budete musieť použiť tlač + F, budete musieť použiť tento kľúčové slovo "Hlavné" a zložené zátvorky. Mnoho tajomné syntaxe a prístupu k vykonávaniu niečo, čo je pomerne zložitý. Webové stránky. 

A tak ďalšie jazyky sa vyvinuli aby sa takéto veci jednoduchšie. A naopak, ľudia majú prísť s rámovou konštrukciou, tak nejako nástrojov ktoré môžete použiť, že robiť to ešte jednoduchšie písať webové stránky. Tak napríklad, aby sa Tento oveľa konkrétnejší, dovoľte mi otvárajú len textový súbor na chvíľu. 

A vy by ste mohli spomenúť včera že sme si povedali niečo podobne, to je webová stránka. HTML. Close HTML. Dovoľte mi preskočiť hlavu a proste telo tu. Predstavme si, že som chcel písať nie "Hello World" ale "Ahoj Davide," kde je David meno aktuálne prihláseného používateľa. Čo sa niečo podobné ASP bude robiť, alebo JSP-- čo je Java servera alebo pages-- ľubovoľný počet ďalších rámcov Je to nie sú jazyky, samo o sebe. Sú rovnako ako dodatočný softvér, ktorý vám by nainštalovať do vášho prostredia že práve uľahčujú programovanie. 

Tak napríklad, skôr než musieť urobiť niečo ako "Ahoj, printf (" David ")" alebo niečo, čo je druh ko-mingling-- druh kódu sme videli before-- by si niečo oveľa jednoduchšie, ako "name%." A tak tieto rámce, ako ASP-- a I Nespomínam si, či som Začínam syntaxe práve pre ASP. JSP je little-- je to pravda? 

Tak s ASP, to je akýsi špeciálny syntaxe že niektorí vývojári sa rozhodli to môže pomáhať ľuďom von. A môžem vyjadriť stručnejšie zástupné symboly, napríklad. Rovnako ako dať hodnotu tu, kde Tento názov hodnota nie je N-A-M-E, je to nejakú hodnotu v nich uložené. Takže "name", v tomto kontexte, by sme nazvali premennú. Algebra má premenné ako x a y a z. Programátori používajú premenné, ktoré sú popisnější než X, Y, a Z obvykle. Takže "name" by doslovne byť nejaký druh pamäťového kontajnera pre niečo podobné D-A-V-I-D, pre moje meno, alebo kto inak je prihlásený do webovej stránky. 

A tak to je ten druh pohodlia získate s určitých prostrediach. Takže C # a niečo ako ASP by veľmi bežne sa používajú vo svete Windows, či už ide o jeho plochu softvér alebo web server, najmä ak sú servery na oplátku systémom Microsoft Windows a Microsoft IIS-- alebo Internet Information Server, keď som si skratku right-- čo je web server Microsoft. 

Takže to, čo iné jazyky sú ľudia oboznámení s, alebo ste počuli o častejšie ako nie? 

Divákov: Ja viem, že je Python druh populárnej [nepočuteľné]. David J. Malan: Veľmi populárne. Takže Python je tu použitý veľmi často vo vedeckých aplikáciách alebo dát veda, kde máte veľa dát, ktoré chcete analyzovať a chcete použiť programovací jazyk pre neho. R môžu byť bežne používaný pre ktoré ako aj, v štatistickej kontexte. Ale Python má toľko funkcie postavená v roku. toľko dodatočné knižníc, ako ľudia hovoria. 

Knižnice sú len zbierky kódu, ktorý ostatní ľudia napísal, že môžete použiť tak, aby vás Nemusíte znovu vynájsť tie kolesá. A tak Python je veľmi často používaný v dátovej vedeckých aplikáciách. Ale je to tiež veľmi často používa vo webových aplikáciách. Môžete implementovať dynamický webové stránky pomocou Python. 

A dynamickú webové stránky, ja znamenať nielen statický obsah ako sme vytvorili včera tým, že Len ťažko kódovanie v latinskom texte a iné také veci, ale skôr schopnosť prihlásiť, možnosť kúpiť niečo, možnosť check-out so svojimi nákupných košíkov, alebo podobne. To všetko si vyžaduje dynamiku a vy Potrebujem jazyk, ako je jedna z nich. 

Divákov: Takže to Python mať vlastnú rozšírenie, podobne rád [nepočuteľný] David J. Malan: to robí. Takže vo svete Python, Django je veľmi obľúbený framework pre Python. WSGI je iný mechanizmus, ktorý je nejako odlišný od toho ale podobný v duchu. Je to add-on, ktorý umožňuje spustiť Python kód na serveri. Je tu other-- jo. Tak to budeme nazývať rámcov. A je to trochu zneužitia. Ide skôr o technológiu webového servera. Ale budeme držať to jednoduchý a dal je v tomto stĺpci však. 

OK. WSGI. WSGI. Ďalšie thing-- a v skutočnosti, nech mi navrhnúť, aby sa na jeho vlastnom stĺpci, pretože by som kričať na seba pre ich uvádzanie v rovnakom vedra. Povedzme to na serveri rysy, povedzme. To nie je technický termín. 

Takže tu by sme mohli byť WSGI. Je tu CGI, ktorý je starší Technika servírujú jazyky ako Perl alebo PHP, alebo niektoré ďalšie. Opäť som sa zmienil tieto podmienky nie toľko, aby nejako farbiť ich, ale tak, aby ak vidíte z nich je to niečo, proste google sa dozviete viac. Nie je tam žiadny skutočný šťava na niektoré z týchto vecí. 

Ale vráťme sa k jazykom. Hovorili sme o C #, Python. Čo iného môžete použiť pre webové programovanie v týchto dňoch? Zamerajme sa na to stále. 

Divákov: PHP. David J. Malan: PHP. A poďme vrátiť sa k tomuto jeden. Takže PHP je veľmi často používaný. PHP má tendenciu sa dostať zlý rap. Začalo to ako jazyk implementovaný o ľudí, ktorí možno neboli nutne Najlepšie jazykoví návrhári. A tak si môžete prečítať všetky druhy Články on o tom, ako zlá je PHP. A bohužiaľ, to je prejavom, v časti, púheho náboženské debaty že vypuknúť medzi programátorov. A to je niečo, stojí za to mať na pamäti, z obchodného hľadiska, že je to pre technické ľudí veľmi ľahké aby všetci pracovali so svojimi názory na niektoré veci. A nemusí to nutne znamenať, že ten jačí najhlasnejšie alebo s najsilnejšou, nejrozzlobenější názor je v poriadku. Mnohokrát, je to naozaj proste nezáleží. 

A tak ľudia sú len dohadovať čokoľvek ich vlastné predsudky alebo komfortnej zóny. A tak by ste mali mať na pamäti, že pri vytváraní rozhodnutie, že práve pretože niekto hovorí, je to ten správny jazyk pre úloha, ktorá by mohla byť pravda, ale tiež to môže byť, že je správny jazyk v rámci vlastnej zručnosť nastaviť alebo komfortná zóna. Čo nie je zlé, ale mali by ste si uvedomiť, že môžu existovať nejaký kontext. Tam sú niektoré objektívne chybné výroky, ako C je nesprávny jazyk používať v týchto dňoch pre realizáciu webové stránky takmer vždy. Ale to nie je nerozumné povedať, že niektorý z nich sú zlé, že sme krúžili tak ďaleko. 

PHP prešla mnohých variantoch. Takže jazyky mávajú verziu Čísla sú s nimi spojené. PHP je až Myslím, verzia 7 teraz, tak to bolo po nejakú dobu. A ako jazyky dostať novšie, často získať nové funkcie. Ale musíte dbať na to pretože ak vaše webové stránky bol implementovaná vo verzii 7 PHP, ale snažíte spustiť svoje webové stránky, alebo možno ste externe vývoj kódu na niekoho iného a e-mail to s vami alebo ho poslať na vás a hovoria tu, dať tento na webovom serveri, ak váš webový server je málo rokov outdated-- či už je to svoj vlastný server alebo web host-- to nemusí v skutočnosti bežať. To sú druhy vecí, ktoré niekto musí byť vedomý pri aktualizácii webu alebo vykonávacích ju prvýkrát. 

Počul som JavaScript skôr. Takže JavaScript je zaujímavý jeden v tom, že je všeobecne na strane klienta, ako uvidíme po prestávke, ktorá znamená, že beží v prehliadači používateľa. Ale môžete tiež spustiť JavaScript v týchto dňoch použitím niečo, čo nazýva Node.js, kde Node.js je mechanizmus pre beh kód JavaScript na strane servera, namiesto použitia Python, alebo PHP alebo iné takéto jazyky. 

JavaScript je obzvlášť vhodná chatu aplikácie a v reálnom čase aplikácie, zatiaľ čo PHP nie je veľký jazyka k realizácii niečoho ako serveru chatu, kde používatelia zostať v spojení s ňou neustále. PHP je viac ma navštíviť raz vrátiť výsledok, a potom kliknite na tlačidlo iný odkaz niektoré sekúnd alebo minút od tejto chvíle. Kým Node.js a JavaScript môžu byť používa skôr pre trvalé pripojenie. Iné jazyky, ktoré ste podozrenie sú bežne používané pre webové veci? 

Divákov: jQuery by byť vytvorený rámec? 

David J. Malan: Dobrá otázka. Ani jeden. Nazval by som jQuery knižnicu, kde Znovu knižnica je len banda kódu že niekto iný má napísal, že vo všeobecnosti rieši niektoré problémy, Vďaka tomu, dúfajme, jednoduchšie pre vás robiť svoju prácu. A dovoľte mi urobiť jeden príklad to v rámci webu. 

V rámci tohto pásu je tu Tento jazyk, JavaScript, že uvidíme neskôr, kedy vás by mohol povedať niečo ako tohle-- "Document.getElementById." A čo hovorím to včera? Po prvé, myslím, bol jedinečný identifikátor som dal k prvku, ktorý vyzeral takto. "P id =" prvý ">" a potom sme mali ako "Lorem ipsum", et cetera. Takže keď som písali program v JavaScript nejako manipulovať, Zmena webových stránok, ktoré sme hrali s včera, Chcel by som použiť zvýraznený riadok kódu získať konkrétne fragment HTML z mojej strane, že konkrétne uzol, ako budeme hovoriť. 

Avšak, v jQuery, namiesto písania to, čo je surový JavaScript code-- len po vybalení z krabice, to je ako na Vás napísať to-- by ste namiesto toho len povedať, "#first." To je ekvivalent. A tak založená len na tejto veľmi tajomný príklad, čo možno je argumentom používania jQuery? Prečo by vývojár použiť knižnicu ako jQuery, na základe tejto izolovanej príkladu možno? 

Divákov: Menej kód. 

David J. Malan: Jo. To je menej kód. Je to jednoducho rýchlejšie písanie. protipólom je že to vyzerá desivejšie. Nemôžete naozaj čítať to zľava doprava. V skutočnosti, pretože je to väčšinou interpunkčné teraz miesto aktuálne slová, Môžem druh usudzovať, že "Document.getElementById" dostane prvok z dokumentu podľa jeho ID. Naozaj môžem použiť žiadny takýto mnemotechnická pomôcky z tejto veci tu. 

Takže je to kompromis. Je tu prepracovanosť, ktorý prichádza často s použitím knižnice, najmä ako jQuery. Ale realita je jQuery má láskavý of stal de facto štandardom, takže takmer každý títo dni kto píše kód JavaScriptu používa jQuery alebo niečo podobné to páči, a už nie píše Tieto podrobného výrazy ako to, pretože opäť ľudstvo sa naučil, wow, to bolo druh premárnenou príležitosťou aby sa náš život jednoduchší. Takže ľudia, aby ich život jednoduchší. Dobrá otázka. 

Iné jazyky, aby zvážila. Povedal by som, že medzi táto Zoznam Ruby je celkom populárny. A tak vo svete Ruby, tam je rámcová zvanej koľajniciach, čo je veľmi populárny. Takže Ruby on Rails je bežne používaný výraz. Aj v tomto svete, dovoľte mi, aby som Kruh Java pre web veci, kde vo svete Javy môžete mať JSP, alebo Java Servlets, čo je bežná technika. A to je len opäť spôsoby využitia že jazyk v serverovom prostredí. 

Čo to teda znamená? Ak máte fyzický Server, by ste doslova stiahnuť softvér webového servera a nainštalujte ju takým spôsobom, že máte podporu pre jeden z Tieto rámce, s ktorými mohol na oplátku, použite jednu alebo viac z týchto jazykov. A v skutočnosti, ak sa zaregistrujete pre ako poskytovateľov webhostingu alebo niektoré z oblaku Služby sme sa rozprávali o včera, často Veci proste príde s Konfigurácia stroja pre vás. Nemusíte ručne nastaviť toto hore. Ale keby to urobil, to je miesto, kde role administrátora systému, tak povediac, vstúpi do hry. On alebo ona by vlastne robiť Tento druh vecí pre vás, alebo takzvaný webmaster by to často robia za vás. Dobre. Akékoľvek otázky týkajúce sa niektoré z nich tu? Alebo akejkoľvek príležitosti na všetko sa opýtať jazyky? Kostry? Potom dovoľte mi predstaviť len jeden ďalší knižnice To je tiež veľmi bežné v týchto dňoch. Tento zoznam by mohol pokračovať do nekonečna. 

A táto knižnica je v istom zmysle začínajú vypadávať láskavosti. Bolo to okolo. To bol propagovaný Twitter na nejakú dobu. A teraz veľa internetových stránok, mnoho vývojárov používať. Ale nové veci prichádzajú von a prichádza spolu. Ale dovoľte mi dať vám pocit čo to znamená použiť knižnicu. Takže znovu, JavaScript je veľmi populárne jazyk. CSS, alebo kaskádové štýly, sme hovorili včera. Aj to je všadeprítomný. Nikto robí webové stránky ešte dnes bez použitia HTML a CSS minimálne. Ale to nie je vždy ľahké robiť určité veci. 

A tak nechaj ma ísť do getbootstrap.com. Pokriky. To nie je, ako sa píše. Getbootstrap.com, ktorý ma bude viesť na vstupnej stránke pre túto knižnicu. Tak oni hovoria veľkoryso sami rámec, ktorý je v istom zmysle akejsi spravodlivé, ale ja by som to ešte nazývať viac knižnice než rámca. Ale to sú len diskutabilné sémantika. Nechaj ma ísť na ich karte CSS a nechaj ma ísť k niečomu takému. 

Takže pripomenúť, aké sú naše formy vyzeral rovnako ako včera na Cloud9? Bolo to celkom škaredý. Old School tlačidla. Myslím, že tlačidlo bolo sivé od default. A všetko bolo naozaj formátované úplne neporiadne. Takže ak chcete, aby vaše webové formuláre vyzerať trochu nicer-- dajte mi priblížiť tu. 

A tým krajší ja naozaj len znamenať veľmi nitpicky estetiku. Tak Všimnite si, ako je e-mailová schránka tam má zaoblený pravouhlé rohy do nej. Takže je to tam trochu čistejšie. Všimnite si, že e-mail slovo Je tam, kým som začať písať a potom to ide preč. Tak to je pekný malý rys. Všimnite si, že to je v istom zmysle žiariace pekne, ktorý niektoré z týchto vás získať zadarmo z vášho prehliadača, ale niektoré to je tiež knižnice, Kód, že ostatní ľudia majú napísané, že ti to dať. 

Niečo také dáva mi moje heslo. Toto tlačidlo je trochu viac sexi než default. Veľmi veľa v móde práve teraz. Odvtedy iOS 7 alebo áno, Svet sa dostal veľmi ploché, zatiaľ čo na svete predtým veľa tieňov, Pozemky z úvah o ikon. Rovnako ako v odevnom svete, tam je módne trendy, ktoré prichádzajú a odchádzajú. Teraz je všetko byt na telefóne. 

V skutočnosti tlačidiel na iPhone sú teraz len modré odkazy. Nie je tu často aj kruhové tlačidlá. Takže to sú len veci ktoré idú dovnútra a von módy, a tak to je, ako by ste mohli aby modernejšie vyzerajúce webového formulára. Tlačidlá. Takže Bootstrap má veľa pekných tlačidiel. Takže ak chcete modré gombíky, zelená tlačidlá, modrá, oranžová, červená. Bootstrap uľahčuje tieto veci robiť. Jedná sa o veľa vecí, že by ste mohli absolútne urobil včera pomocou CSS as HTML, ale je to len bolesť v krku. A tak namiesto toho, čo by Bootstrap ste urobiť, je niečo také. 

Pokiaľ chcete button-- dopadá toto je HTML tag sme nevyužili yesterday-- a chcete, aby to vyzeralo ako je tento odkaz, doslova len dať triedu, ktoré sme urobili hovoriť včera, z "btn btn-úspechu." 

Prečo tieto slová? Twitter, autori bootstrap, prišli s týmito slovami. mohli nazývajú je niečo chcú. Ale to, čo sa teraz dostáva sa niekto iný na Twitteri, v tomto prípade, prišiel na to, ako si urobiť Tlačidlo vyzerajú pekné a čisté a zelené. Oni zbalené túto funkciu v triede CSS, s názvom "btn" a "btn-success", takže každý z nás môže Teraz ju použiť bez premýšľania ono. Takže oni abstrahovať preč poňatie o zelené tlačidlo takže sme nemuseli starať o vykonávacie to sami. Môžeme sa skutočne sústrediť na implementáciu veci nás zaujímajú. 

Ak budeme posúvať tu dole. Chybové hlásenie na obrazovke. Niekedy chcete malý odkaz objaviť sa na hornej časti prehliadača. Každý z nás by to robiť s niektorými snaha, po včerajšej lekcii, ale prečo by ste sa obťažovať? To je taký nezaujímavý estetický detail. Poďme postaviť na ramená bootstrap a nech nám veci, ako je toto, kde sme doslova, dostať sa červené pole, stačí na to odsek štítok s triedou of-- ľúto. "Bg-nebezpečenstvo" by nám dať Tento červenkasté box miesto. A teraz poďme k ďalšie zaujímavé veci. Ak sa mám vrátiť na vrchol Na tejto stránke a prejsť na komponenty, Teraz sa svet dostane oveľa zaujímavejšie. Napríklad, veľmi časté je rozbaľovacie menu, ako je tento. To by bolo absolútne bolesť realizovať. A nebolo to tak dlho Pred že sme programátori bude musieť implementovať tieto druhy ponúk od nuly. 

Ale je to taká spoločná paradigma že knižnice ako bootstrap Len vám možnosť, aby sa rozbaľovacie menu oveľa, oveľa ľahšie. Neexistuje jeden spôsob, ako to urobiť, ale keď som čítal dokumentáciu Chcel by som vidieť, že v poriadku, mal by som používať Tento HTML keď chcem rozbaľovacie menu ktorá sa správa podobne. 

Rovnako tak poďme na tlačidle spadnúť. Tak to je ešte chovateľ. Ak chcem, aby to vyzeralo ako tlačidlo ale ten malý trojuholník znamená, Mal by som na neho kliknite a dostať sa do tohto menu, táto je pomocou jazyka JavaScript s názvom. A my všetci mohli realizovať Tento v JavaScripte. Ale opäť, to je bicykel Nechcete sa objaviť. Len budete chcieť zložiť police knižnice pre toto. 

Poďme k niečomu rovnako ako pokrok bary. Takže niečo také je celkom fajn. Ak ste niekedy videli pokrok bar pohybujúce sa po obrazovke, sa vykonáva tak často je len ikona pradenie. V skutočnosti, rovnako ako stranou, nech ma ísť do Ajax-- čo je to? Ajax info? Pokriky. Ajaxinfo. Nechaj ma pamätať adresu. Tam sme ísť. 

Takže ak ste niekedy videl niektoré animácie zatiaľ čo stránka sa načítava, alebo myslenie, alebo uloženie alebo vytvorenie niečoho, budete mohli vidieť také animácie ako tieto. Takže poďme sa pozrieť na niečom ako je tento tu, a poďme si vybrať farbu popredia green, ktorý sa cíti trochu príjemný. Môžem kliknite na to? Príďte jeden. OK. Budeme jednoducho ísť s červenou, pretože že to, čo dostávame. Tak tu to máme. 

Takže ak ste niekedy videl na obrazovke, čím sa náhle zdá sa, a potom náhle zmizne, čo je to, že je vykonávanie že? No, to je len GIF. G-I-F. A to je animovaný súbor, čo znamená len Je to ako starej školy komiksu. Je tu len banda odlišný rámy, ktoré sa chystáte [koktanie] a len opakovaním. A to sa ustanovuje program ilúzie pohybu. 

Tak, že akonáhle je stránka sa vykonáva načítava alebo robiť niečo, čo programátor robiť? No, on alebo ona jednoducho skryje tento obrázok. Takže všetko, bar pokrok je láskavý of radi film, ktorý sledujete. Si nejako zabúda na skutočnosť, že to nie je vlastne robiť niečo, je to len v pohybe. 

A potom, keď sa to robí pokrok, jednoducho schovať, alebo ho vypnúť. A to je všetko kúzlo že sa tam deje. Bootstrap vám dáva niečo trochu milovník, kde môžete skutočne pozri percenta, ako to ide, ale to príliš je proste tak nejako jednoduché animácie. 

Pozrime sa na niektoré finále Zložitejšie príklady tu. Niečo ako modálne. Vie niekto, čo je modálne? Okno modálne je všeobecne ten, ktorý by mal prevziať kontrolu nad popredia a zabráni robiť niečo iné. Tak nejako núti užívateľa Pozornosť k stredu obrazovky, zamykanie von, typicky, všetkého ostatného. 

Takže keď som spustiť tento demo, na Obrazovka bude všeobecne stane šedá. No, ako to robíme šedá? No, my sme asi len zmenil farbu pozadia ako my včera alebo nieco podobne. Možno je to prekryv že semi-transparentné. A teraz si všimnúť, čo môžete urobiť ozdobné veci, ako je tento. Takže ak ste niekedy kliknúť na tlačidlo a chcete trochu vyskočí sa objaviť, môžete urobiť. A tak kto sa zaujíma o all-- jo? 

Divákov: Tak s bootstrap, aby si to zabudované, Je to tak jednoduché, ako ako včera sme urobili stránku CSS štýly? David J. Malan: Vskutku. Naozaj dobrá otázka. Nechaj ma ísť Začíname. A áno. Všetko, čo musíte urobiť, aby sa Použitie Bootstrap je v podstate kopírovať a vložte tieto tri dlhé rady kód do hornej časti svoje vlastné webové page-- hlava vašej page-- a vy ste hore a beh. A je tu rôzne spôsoby, ako robiť to, ale to by bolo najjednoduchšie. 

Takže to, čo je užitočné tom všetkom? No, ak nie ste toľko realizátor internetových stránok ale snažíte navrhnúť to, alebo ak chcete zabezpečiť niekoho s drôtových rámcových schém, tak povediac, Alebo len umelca stvárnenie toho, čo Ak chcete urobiť, som, aby to deň, často idú na web ako bootstrap, kde Keby som chcú zaviesť something-- ako nedávno na akademickej pôde sme chceli realizovať internetový nástroj pre navigáciu Harvard je samozrejme katalóg, uľahčovať to pre študentov prechádzať kurzy a pridať kurzy pre nákupný zoznam, tak povediac, na druh rozhodnúť, čo chceli vziať. 

Snažil som sa predstaviť pre Sám, aké ingrediencie by Ak chceme použiť na vybudovanie to? Čo by užívateľské rozhranie bude? A práve pozerá cez mieste, ako tento alebo iné takéto knižnice miesta, môžete získať inšpiráciu, pretože wow, Môžem použiť tento widget, a tento widget, a tento widget. A potom naozaj to, čo programátor začne robiť, a to najmä v týchto dňoch v tejto modernejšie svet webové programovanie, Je programovanie je čím ďalej o zapojení veci dohromady. Tak nejako brať to z regálu, to z regálu, to z regálu, a vy je múdra prepojiť všetky tie bodky, ale nakoniec niečo postaviť znova stojaci na ramenách druhých, takže nemusíte utrácať za mesiac implementáciu hlúpu rozbaľovacie menu, čo je vlastne ťažké robiť, keď Chcete to pracovať na Chrome a IE a Firefox, a akýkoľvek rada ďalších prehliadačov. To je dôvod, prečo je to bohatý komerčných a open source softvér priemysel rovnako. 

Divákov: Takže to Bootstrap aktualizovaný a vy budete musieť aktualizovať svoje odkazy? 

David J. Malan: to robí. No, áno, to robí. Bootstrap je v súčasnej dobe vo verzii 3.3.6. A všeobecne to, čo by ste do-- To je v skutočnosti stojí za zmienku. Tam je to, čo je všeobecne známy ako sémantické verzovania systém na svete. Nie každý to robí. 

Ale ak ste videli čísla verzie ktoré sú v tvare x.y.z-- tak napríklad, prvá verzia z programu môže byť 1.0.0. Alebo či je to veľmi, veľmi beta, alebo aj alfa stav, čo znamená, že použitie na vlastné nebezpečenstvo, že to nie je naozaj pripravený na hlavnom vysielacom čase, môžete dokonca začať 0.0.1 alebo niečo také označenie. Ale ak softvér začína na verziu 1,0, alebo ekvivalentne 1.0.0, typicky, čo je bežné v týchto days-- aj keď nie omnipresent-- je v prípade, že spoločnosť alebo Jednotlivé programátor opravy niektoré chyby v nejakom kuse softvéru, ktorý v skutočnosti Bola to chyba, ktorej oprava by nemala Vplyv na vás all-- to nič nemení správanie programu, to jednoducho rieši niečo že nefunguje properly-- by ste typicky aktualizovať Z hodnotu tam. Čo znamená, že niekto ako Kareem by jednoducho ísť do svojej webovej stránky, slepo zmeniť číslo verzie od 1.0.0 až 1.0.1, uložte to, loď to, a teoreticky nie je nutné obávať, že práve rozbité jeho webových stránkach, pretože niektoré chýbajúce funkcionality, pretože niečo zlomil. 

Medzitým, či som programátor alebo nejaká spoločnosť boli aby sa niektoré významné Zmena, ktorá pridáva funkcie, Aj nás mohol aktualizovať 1.1.0 preto, že som vlastne zmene správania knižnice. Dávam vám možno viac funkcií. A napokon, ak by som mal vlastne zásadným spôsobom meniť softvér tak, moc, že ​​to bude zlomiť mnoho užívateľov webových stránok alebo aplikácií, Potom som povinný, v tomto modeli, aby inovovať hlavné číslo verzie taky, čo je lámanie zmena. Inými slovami, mohol by som mať ukončená podpora pre tých kvapky down menu. Takže ak ste upgrade na 2.0, napoly Váš web môže prestať pracovať. A to je druh signálu ku komunite, aby to, čo je zapojený do tvorby upgrade. Dobrú príležitosť na zvýšenie. Ďalšie otázky? Dobre. No poďme sa pozrieť na jeden konečný tému v tomto segmente programovaní technologických komínov a to v súvislosti s mobilnou. 

Takže vo svete mobilných telefónov dnes vy have-- a iPady, a povrchy, a všetky tieto druhy z devices-- máte veľa možností, pokiaľ sa jedná o vykonávaní aplikácie alebo webové stránky pre mobilné zariadenia zákazníka. Takže len preto, aby uviesť zjavné, možno v týchto dňoch, aké sú platforiem rozvíjať v mobilnom priestore? Aké zariadenia budete chcieť podporu pri aplikácii či na webových stránkach? 

Divákov: Apple. David J. Malan: OK. Takže zariadení Apple. Tak to znamená, iPhone, a že znamená iPad, a možno dokonca aj iPod. Čo ešte? Olivier? 

Divákov: Android. 

David J. Malan: Android. OK. telefóny Takže Android, Android tablety, Android Marketu Je dokonca Messier protože-- a i Apple sa stáva chaotický. kým kedysi iPhone bol určitej veľkosti, a iPad bol určitej veľkosti, a iPod bol určitej veľkosti, teraz máme iPad Minis, a tenký Tí, ako aj iPhone 6 Plus a 6. Stáva sa z toho zmätok. Je to stáva Android svet. 

A hovorím to s druhom valcovanie moje oči, pretože od vývojárov perspektíva, to je bolesť v krku, keď nemáte Steve Jobs " vízie absolútnou kontrolou cez všetky tieto špecifikácie. Apple stále robí preto, že sú tie stavebné hardware. Ale je to pekná vec, ak Som vývojár softvéru, len viem, že moje iPhone je vždy bude bude to veľké, pretože to znamená, že vždy viem, koľko obrazovka s nehnuteľnosťami mám. Takže ak chcem dať ikonku V ľavom hornom rohu, že to bude v ten istý uvádzali na zariadenie každého jednotlivého zákazníka. 

Ale vo svete iPhone 6s a iPhone 6 Plusy a vo svete Android telefóny, to je po celej mape. A tak to robí to ťažšie programu veci, najmä užívateľské rozhranie, pretože teraz budete musieť začať aranžovanie vaše používateľské rozhrania relatívne, nie absolútne. A to isté platí už na prehliadačoch, a stolné počítače, notebooky a za roky kvôli tebe, samozrejme, majú rôzne veľkosti obrazovky. 

Čo ešte? Tie by mohli mať povrchy, ako od spoločnosti Microsoft. Tie by mohli have-- Divákov: Windows phone. David J. Malan: Čo je to? Divákov: Windows phone. David J. Malan: Áno. Tak Windows telefóny možno stále nájsť. Druh druhu BlackBerry, ale ďalej snažiť. A potom zväzky z iných zariadení. Takže vo väčšine prípadov, poďme hovoria, to sú tí starať o v túto chvíľu. Iste Apple veci, iste veci Android, a medzi Windows, rovnako ako povrchové tablet Zdá sa, že lov na celkom dobre. 

A tak medzi týmito zariadeniami, Ak chcete dojazdu, povedzme, mobilné prítomnosť pre vaše Spoločnosť, aké druhy rozhodnutí dizajnových máte robiť? No, my sme už uviedli V Apple svete, existuje aspoň dva jazyky , Ktoré sa obvykle používajú. Jeden sa volal, čo? 

Divákov: Objective-C. 

David J. Malan: Jo. Takže Objective-C, ktorý je starší. Je to tiež jazyk, ktorý veľa Mac aplikácie sú stále napísaný v. Potom ďalšie novšie bolo? Divákov: Swift. David J. Malan: Swift. A to sú druh dve vedieť, zapôsobiť na ľudí. Potom v Android svete, aký jazyk má Android používanie? 

Divákov: C #? 

Divákov: Java. 

David J. Malan: Java je jazyk "du Jour." Vo svete Windows, iste, povieme C # v tomto prípade. Tak už je to druh nepríjemné, pretože to, čo je stánok s jedlom pre podnikanie majiteľ alebo niekto, kto práve chce nasadiť mobilné prítomnosť? Rovnako ako, sakra? Rovnako ako v prípade chcem podporiť Pomerne široká užívateľská základňa, Musím napísať, ako sa zdá, tri samostatné aplikácie. Jeden v jednom z týchto jazykov, jeden v Jave, jeden v C #. A aj keď chcem funkčnosť byť identické, na tom nezáleží. Aj napriek tomu je potrebné použiť odlišný jazyky, pretože Apple a Microsoft, a Google všetku podporu rôzne prostredia. A to bol problém po celé roky. Späť v deň, keď ľudia používali na nákup softvéru pri počítači v obchode zmenšiť zabalené krabice, by ste buď musieť siahnuť po Mac policu, alebo for-- možno to veľmi malý Mac shelf-- alebo väčšie police Windows a kúpiť nejaký softvér. A veľmi často, nebol ani niečo pre vás na Mac polici. Prečo? No, firmy rozhodnúť, či 90% na svete, 95% svetovej populácie Má PC, prečo sa obťažovať dokonca vykonávacie veci na Mac OS? 

Ako aside-- celkom digression-- prečo je to, že Mac sa zdá byť tak odolný proti vírusom, a červy, a bezpečnostné hrozby? Je Apple lepšie na to? Lepšie udržať počítač v bezpečí? 

Divákov: Menšie publikum? 

David J. Malan: To je pravdepodobne väčšie bit k nemu. Takže mnoho užívateľov Macu majú dlho tvrdí, oh, používať Mac, budete imúnny voči vírusom, a červy, a všetky tieto veci že už dlho trápili počítačov. To by mohlo byť, pretože Apple má lepšiu programátorov a píšu lepšie softvér, alebo Operačný systém bol navrhnutý tak lepší. Možno áno, ale pravdepodobne nie. 

Je pravdepodobné, že keď ste 12-ročný, alebo 30 niečo nejako sedí doma písanie škodlivý softvér prevziať svet, budete ísť po oveľa väčšiu cieľovú skupinu. 95% na svete, ktorý by mohol so systémom Windows alebo nejakú ich varianty. Takže je tu trochu z oboch strán. Ale k ich cti, Apple, pokiaľ je mi známe, nebola v skutočnosti ponúkal sami ako bezpečnejší, pretože ste práve pozvať dráma, ak urobíte toto tvrdenie, povedal by som. 

Dobre. Bez toho, aby sa príliš ďaleko dole že, ako sme vyriešiť? Máte k nákupu či musíš platiť tri rôzne ľuďom rozvíjať vaše aplikácie? Myslíte si vybrať jeden cez druhého? Aké by mali viesť svoj mysli si o tom myslíš? Kareem? Nie. Niekto iný. 

Divákov: Stačí prísť s hardvérom. David J. Malan: Poďte s hardvérom? Čo tým myslíte? 

Divákov: Pre životné prostredie. [Nepočuteľné] David J. Malan: Takže je to pravda. Ale vaši zákazníci, Medzitým, môže mať iPhone, oni by mohli mať Android telefóny, ktoré môže mať tablety vyrobené spoločnosťou Microsoft. Tak ako sa máte mobilný stratégie Pre všetky tieto rôzne užívateľa? Zdá sa, že ak to stojí, povedzme $ 1,000 robiť iPhone Aplikácie, bude to ťa to stáť $ 2000 až urobiť iPhone aplikácie a Android aplikácie, alebo $ 3000 tiež podporuje zariadenia Windows rovnako. To je asi docela eufemizmus, a to možno ani byť lineárny vzťah takhle. 

Divákov: Ak chcete mať aplikáciu alebo nie, môžete mať citlivejší webové stránky. David J. Malan: Dobrý. Divákov: Alebo môžete mať natívne aplikácie. David J. Malan: Jo. Takže v celom tomto kontexte tu, sme hovorili o tom, čo ľudia by vyžadovalo natívnych aplikácií. To je aplikácia, ktoré sú napísané v rodnom jazyku tohto zariadenia. Takže natívne Objective-C alebo Swift kód, alebo v jazyku Java, alebo v jazyku C #. Čo znamená, že keď si stiahnete, poďme hovoria snapchat, populárne aplikácie, alebo keď si stiahnete Facebook pre telefón, sťahujete buď verzia napísaná pre iPhone, alebo písaný pre váš telefón Android, alebo písaný pre vašu plochu. 

Ale je tu alternatíva. Ako Olivier bol zmieňovať, môžete skutočne používať HTML 5 Namiesto toho, s použitím čo sa nazýva web Aplikácie, pričom stačí realizovať svoj mobilný prítomnosť a akékoľvek funkcie. Čo mám na mysli mobilnom prítomnosťou? Rovnako ako vaše webové stránky, ktorá má vašom kontaktné informácie, zoznam všetkých vaše produkty, možno to má nakupovanie vozík, možno budete predávať veci cez to. Nech už je vaša žiadosť, vy vykonávať, nie sú v Objective-C, alebo Swift, alebo Java alebo C #, ale v HTML 5, ktorý bol jazyk sme sa zaoberali pri včera, JavaScriptu a CSS. 

A čo je pekné o tých, tri je, že k ich spustenie, budete potrebovať len to, čo kus softvéru? Divákov: Webový prehliadač. David J. Malan: Webový prehliadač. A to najlepšie, čo viem, všetky z nich Prístroje sú vybavené webových prehliadačov, takže užívateľ nemusel nainštalovať niečo špeciálne. Takže môžete len povedať svoj publikum, vaši zákazníci, prejsť na acme.com vo vašom prehliadača a budete len majú webovým skúsenosti s že stále vyplní celú obrazovku, ale nemusíte starať o všetko Tieto náklady a všetky tejto zložitosti. Ale určite tam bude byť háčik, nie? Zvlášť ak by som zdôrazniť že pred pár rokmi, úplne prvá verzia mobilné aplikácie Facebooku bola väčšinou HTML 5 aplikácie. A oni majú viac v poslednej dobe, je znovu implementovaná vo svojich ostatných aplikáciách. 

Tak prečo by ste nie okamžite chcel povedať, No, samozrejme budeme robiť? Čo by mohlo byť skryté náklady? 

Divákov: Performance. David J. Malan: Performance? Ako to myslíš? 

Divákov: Natívne aplikácie Má väčší výkon. 

David J. Malan: Takže to je pravda, pretože z niekoľkých dôvodov. Môžeme príliš zjednodušujú odpoveď. A pripomínajú našu diskusiu o interpretovať proti kompilovaných jazykov. To je HTML 5 a spolu s ňou, len aby sa jasné, JavaScript-- obyčajne písaný JS-- a CSS sú všetky interpretovaný jazyk, aj keď iba JavaScriptu je programovací jazyk. 

A to v závislosti na nich, pričom niektoré z nich sú zostavované, aspoň tieto three-- Objective-C, Java a C # - to, Teoreticky by malo byť len rýchlejší. Ale je tu ešte iná realita for-- 

Divákov: Funkčnosť? 

David J. Malan: Čo je to? 

Divákov: funkcií. 

David J. Malan: Funkčnosť? Ako to? Publikum: Pomocou tejto kamery off telefónu alebo tak niečo. Môžete použiť tie s prehliadačom. David J. Malan: Presne tak. sú sec-- Divákov: [nepočuteľné] David J. Malan: To je ďalší dobrý. K dispozícii je funkcia, ktoré prichádzajú s mobilnými telefónmi dnes ktoré nie sú podľa návrhu, na bezpečnosť Dôvody, prístupné na webových prehliadačov. Vzhľadom na to, že by bolo trochu strašidelný vec, ak vo chvíli, keď navštívite google.com, alebo cnn.com, alebo akýkoľvek website.com, že táto webová stránka má silu sa obrátiť na fotoaparáte, vyfotiť z vás, a potom ju používať. Ale by ste nechceli náhodné webové stránky že navštívite vôbec prvýkrát mať túto možnosť. 

A tak to, čo telefón Výrobcovia zvyčajne robiť Je proste odmietnutie prístupu k tomuto druhu informácií do prehliadača, čo znamená, že vám nemôže implementovať fotoaparát. Nedá implementovať oznámenie bez vyžiadanie, sa pípnutie, ktoré dostanete na obrazovke s krátkymi textovými správami. A v skutočnosti, dokonca aj GPS je jediný druh o akési k dispozícii na webové prehliadače. Ak ste niekedy, na notebooku alebo v mobilnom zariadení, vytiahol niečo ako možná CNN.com, ale aj miestne spravodajské stanice inklinujú k tomu budete vyzvaní často s message-- foxnews.com chce poznať vašu polohu. Schváliť alebo odmietnuť. 

No, prehliadač sa pokúša o prístup GPS informácie zo svojho telefónu. Ale našťastie Microsoft, a Apple a Google sa rozhodli, že sa cíti ako Je to užitočný situácie, Chceme Google Maps a ďalšie nástroje pre prácu, ale nechceme tečenia ľudí jednoduchým umožňuje ľubovoľnej webovej stránky, ako to dosiahnuť. Takže poďme sa nejako schádza na polceste a vyzve užívateľa. Ale to nie je nevyhnutne prípad so všetkými hardvér, ako je kamera a push oznámenia a podobne, takže možno budete musieť obetovať niektoré funkcie. Ale výkon príliš. Je to čím ďalej menej zjavný v dnešnej dobe, možno ako LTE uchytí a rýchlejší Internet rýchlosť na telefónoch, ale môžete trochu cítiť rozdiel. Podobne ako webové aplikácie na báze proste pripadá pomalšie, typicky, ako natívne aplikácie, čiastočne pretože webové aplikácie na báze podľa definície je na internete. Je to hovorí k serverom na webe. A ak vaše pripojenie k sieti pomalé, dokonca aj rolovanie môže byť pomalé. 

Ale natívne aplikácie, máte už vopred downloaded-- pravdepodobne keď ste boli doma z obchodu s aplikáciami, alebo aspoň predbežne stiahnuť sa v celom rozsahu skôr, bez ohľadu na vaše pripojenie speed-- a tak teraz máte všetky bitov, ktoré všeobecne potrebujú. Snáď s výnimkou niektorých údajov že pochádza zo servera. 

Takže sa jedná o kompromisy tu. Je tu akýsi stred kompromis, v skutočnosti. A myslím, že vás-- 

Divákov: Použite dát v režime offline. V natívnych aplikácií, môžete [nepočuteľné] David J. Malan: Presne tak. Takže tam je problém v režime offline, čo je naozaj otravné Ak nemôžete hrať nejakú hru alebo použitie Niektorý softvér len preto, že ste v suteréne niekde alebo vo výťahu. Natívne aplikácie je pružný s vyššou pravdepodobnosťou, že proti, predpokladu, že máte všetko Údaje treba lokálne. 

Takže tam je tretia možnosť tu. A poďme čerpať spektra as Natívne aplikácie tu a web app tu. A čo je v polovici je niečo, čo called-- a myslím, že by ste mohli mať používal slovo skôr, možno? Hybridné aplikácie. A ako to slovo znamená, je to niečo v stredu. Je to trochu webové aplikácie a je to niečo ako natívne aplikácie. 

A čo to znamená? Ukazuje sa, že existujú frameworks-- používať termín z earlier-- softvéru že ostatní ľudia písali pre každého z týchto platformách. Tieto a ešte ďalšie zariadenia. V skutočnosti, nechaj ma ísť do PhoneGap, čo je jeden taký rámec, ktorý som verí, Adobe teraz vlastní. Nechaj ma ísť Začíname. Pozrime sa. Uvidíme, či môžem vidieť zoznam nástrojov. Hardware. Začíname. PhoneGap hardware. 

Pozrime sa. PhoneGap prístup k hardvéru. Pozriem sa, či môžeme niečo nájsť zmapovať, že mával. To je na inom mieste. Je to užitočné? Nie. Že to bude strácať čas. PhoneGap hardware. Zariadení. API zariadení. Nie, že som presunul to. 

PhoneGap. Poďme ešte naposledy pozrel na to a uvidíme, či môžem ti ukázať. Začíname. Nainštalovať PhoneGap. Nainštalovať mobilnú aplikáciu. Poď. Už reorganizovaná všetko. Dobre. Oh, v poriadku. No, je to tu. To nie je všetko, že poučný, ale To je to, čo som sa trochu hľadal. 

Takže PhoneGap je rámec, ktorý vás si môžete stiahnuť zadarmo, ktorý vám dáva niektorí štartovací kód, v podstate. Takže nejaký kód, že oni písali že nerobí nič moc. Ale to, čo vám dáva je v podstate ekvivalentná aplikácia, ktorá práve kladie veľký obdĺžnik na obrazovke používateľa. To nekladie URL bar, ako keď browser, nekladie adresu. Je to proste kladie veľký obdĺžnik. A nakonfigurujete tento veľký obdĺžnik, pod kapotou, skutočne ísť do acme.com, alebo možno m.acme.com, pre mobile.acme.com, ale užívateľ nevie sú na tejto adrese. Všetko, čo je vidieť Obsah webovej stránky. 

Ale čo je pekné o tejto bytosti hybridné aplikácie je to, čo PhoneGap a iné spoločnosti dávajú vám je sú to dáva vám trochu kódu v Objective-C alebo Swift, alebo trochu kódu v jazyku Java, alebo trochu kódu v C #, a v podstate, Jediné, čo musíte poskytnúť je minimálne adresa vašej aplikácie na web. A potom sa to zviaže všetko dohromady a vy mať buď prístup k svojmu site prostredníctvom internetu, alebo dokonca do medzipamäte miestnej kopírovať vnútri aplikácie, a potom uložiť vašu žiadosť vo formáte pre iPhone, Android telefón formát, formát povrchu, alebo ľubovoľný počet ďalších zariadení. 

Nahrať každý z týchto verzií do Obchodu Play Google, do obchodu App Store, na Windows Obchod, a tak ďalej. A teraz môžete mať všetky svoje diváci stiahnuť skutočne natívne aplikácie, aj keď väčšina kódu bola napísal niekto iný, ale obsah tohto natívne aplikácie všetko pochádzajú z typicky svojich webových stránkach. Takže budete pokračovať v písaní svoje webové stránky HTML, JavaScript a CSS. 

Tak prečo rozmazanie tieto riadky? Prečo aplikácia hybridný to je druh domorodcov, ale aj druh webu založené? Aký je celý zmysel Pridaním tejto zložitosti? Myslím, že aj napriek tomu, práve z čítal ten tejto stránke Začíname sprievodca cíti ako to má veľa krokov pre mňa urobiť, než som can-- Divákov: znovupoužitelnost? David J. Malan: znovupoužitelnost? Čo tým myslíte? 

Divákov: Zo zdrojového kódu. Takže rovnaký kód pobeží na všetky rôzne platformy. David J. Malan: Jo. Divákov: [nepočuteľné] David J. Malan: Perfect. Ak čas je tesný, a ak vás nemajú že mnoho developers-- Možno máte jeden developer a on alebo ona určite nepozná všetky z nich environments-- určite nie je dobre, a už vôbec nemôže programom vo všetkých troch súčasne a loď tri produkty lehota pre jedného, môžete ho mať, alebo ju postaviť všetko v HTML a JavaScripte a CSS, a potom sa dozvedieť malinké bit o natívnych aplikáciách, akurát k stiahnutiu rámec takto, sa potom nahrať svoj produkt všetky rôzne obchodov s aplikáciami takže teraz máte natívne aplikácie. 

Takže to vyzerá ako win-win, ale opäť, aby bolo jasné, Aké sú potenciálne nákladov alebo Gotchas? 

Divákov: Performance? David J. Malan: Jo. Performance. Je ťažké opísať slovne. Takže ak ste jednoducho vziať na viera mobilné aplikácie, webová aplikácia bude typicky vykonať pomalšie. To nemusí vyzerať úplne v poriadku, pretože v iPhone, a telefóny so systémom Android, a zariadenia so systémom Windows, je tu Vždy akýsi predvolený vzhľad a cítiť sa všetky tlačidiel a menu. 

A spoločnosti webu, môžete skúsiť smerujúce k zblíženiu estetiku s knižnicami ako bootstrap, ale user-- je bystrý user-- bude vedieť, že niečo nie je úplne v poriadku tu. A to je v poriadku, možno že to nie je veľký problém. Ale výkon problém rozhodne je veľký problém. Natívne aplikácie bude mať tendenciu len byť oveľa citlivejšie a preto lepší. A tak to, čo potom môže byť to najlepšie z oboch svetov? Ak ste najmä malé spoločnosť alebo malá skupina, nemáte prostriedky vyvinúť aplikáciu paralelne na všetkých troch platformách, a úprimne povedané, pocit, že je to zlý nápad, rovnako pretože ak to valiť von a na všetky tri súčasne si uvedomiť, mali sme pridali niekoľko funkcií alebo urobil niečo inak, teraz budete musieť opraviť ju tri miesta ani jedného. Čo je možná optimálna Stratégia tu celkovo ak zdroje a čas sú tesné? 

Divákov: Jednoducho to urob na iOS. 

David J. Malan: To nie je nerozumné. iPhone, aspoň v USA, sú super populárne. Android sa zdá, že majú dominantné podiel na trhu, na celom svete, celkovo. takže nie ste nutne reprezentatívne z celej zemegule tento týždeň. Ale to je úplne jedno rozhodnutie. Myslím, že na akademickej pôde tady že niektorí úděsný počet alebo percento vysokoškolákov majú iPhone a telefóny nie sú Android. Ale aj v zahraničí, je to trochu o opaku. Takže ste sa rozhodli na základe svoje publikum. Ako viete, čo vaše publikum má? 

No, sme sa dozvedeli trik včera. Dalo by sa opýtať. Ak máte zaujaté divákov môžete poslať formulár prieskumu. Alebo môžete len to, čo? 

Divákov: Google Analytics? 

David J. Malan: Čo je to? 

Divákov: Google Analytics. David J. Malan: Google Analytics. Jo. Alebo ešte akési technicky, len pozrieť sa na svoje vlastné webové servery protokolov. Vzhľadom k tomu, čo sa deje Zakaždým, keď prehliadač, či laptop, desktop alebo telefón navštívi vaše webové stránky? Posielajú že hlavičky HTTP, ktorý ukazuje, vy aký prehliadač a operačný systém používajú. Takže si môžete odvodiť, s vysokou pravdepodobnosťou, aké sú vaše demografické používa týmto spôsobom a upravte. 

Takže predpokladám, že je to neprijateľné. To je druh zlé pre podnikanie, ak Android užívatelia nemôžu kúpiť naše widgety. 

Divákov: Či už ste Bude účtovať alebo nie? David J. Malan: Nech budete účtovať? Takže v poriadku, dostanete, čo si zaplatí. 

Divákov: Nech je vaša aplikácia bude byť slobodný, alebo či je to gonna-- 

David J. Malan: OK. Takže možno by ste mohli kompenzovať Náklady týmto spôsobom, nebo--? 

Divákov: Čítal som štúdiu raz, že uvedené viac užívateľov Apple platiť za aplikácie versus-- David J. Malan: To je pravda pretože sú už platiť viac za ich zariadení. Takže nie je nerozumné predpoklad. 

Divákov: [nepočuteľné] David J. Malan: OK. Takže ak sú viac ochotní zaplatiť, potom do čerta s užívateľmi Android. Sú to nebude zaplatiť nám nič tak ako tak. Mohli by sme tiež zamerať naše priority, aspoň po dobu prvých niekoľkých mesiacov alebo rok, na iOS. Úplne rozumné. Čo je to obsažnejšie Stratégia ako toto? Maybe-- čo to je? 

Divákov: [nepočuteľné] 

David J. Malan: Viac expensive-- takže možno viac investovať in-- pokračovať. Divákov: Jo. Len mobilné webové stránky. 

David J. Malan: Takže urobiť mobilné webové stránky a nie dokonca starať o tejto zložitosti. Alebo možno rozumná stratégia, ktorý dokonca Facebook trvalo, je začať s hybridným Aplikácia pretože to nie je že oveľa ťažšie, ako to urobiť, ako toto. Musíte len prečítať niektoré dokumentácie a zistiť, ako nahrať veci na App Store. Takže možno začnete s to, aby sa na jeden deň, môžete podporiť všetkých svojich užívateľov. A potom, rovnako ako Facebook a iné spoločnosti urobili, keď máte zdroje, Máte ľudí, prečo nie znovu zaviesť Len aplikácie iOS. Stále máte niečo pre každého, aj keď je to horšie skúsenosti snáď s aplikáciou hybridný. Ale môžete postupne zavádzať a nahradiť krátkodobé opatrenia hybridných aplikácií s Vaše ďalšie natívne aplikácie. 

Divákov: Ale s hybridné aplikácie vám budú mať prístup k funkciám mobilných? 

David J. Malan: Nie nevyhnutne. Takže možno urobíte vedomé rozhodnutie skoro, môžete nahrať iba fotografie na natívne aplikácie pre iPhone na Facebooku, ale nie na aplikáciu pre Android, spočiatku, napríklad. A to je trochu biele lži nasledujúcich dôvodov webové aplikácie majú viac obmedzení ako hybridné aplikácie sa ukáže out, a ak budeme čítať dokumentáciu pre PhoneGap a veci, ako je to, ľudia majú prísť sa spôsoby, dať aplikácií založených web Prístup ku kamere, tak dlho, kým používate hybridné aplikácie. 

Ako to funguje? Vzhľadom k tomu, hybridu Žiadosť podľa definície má trochu kódu v Objective-C, a Swift a Java, alebo v jazyku C # mal prístup k hardvéru. Nie nevyhnutne všetko, ale to by mohlo veľmi dobre to bolo v prípade, že máte dosť prístup sa dostať kameru, aj pre Android platformy pre Napríklad, v tomto príklade neprirodzený. 

Nejaké ďalšie otázky? Dobre. Prečo nie berieme 15 minút prestávka tu. Budeme pokračovať vo tri hodiny s konečnou pozrite sa na webové programovanie, databázy, a Javascript. 