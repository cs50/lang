David J. Malan: Taigi mes vėl. Taigi aukšto lygio tema šiuo metu dabar yra technologijų kaminai, kuri nėra ypač techninis terminas, tai daugiau Pagauk bet skaičius derinius technologijas kad jūs galite naudoti norėdami išspręsti problemas. Ir turbūt labiausiai montavimo būdas pradėti būtų pažvelgti į kalbas, nes Aš nuolat tarškantis ne visa krūva ir labiausiai kiekvienas kambarys turi tikriausiai girdėjote bent vieną. 

Ir tai kodėl gi ne, mes stengiamės atskirti what-- atskirti šias kalbas ir trumpai pasikalbėti apie tai, kada būtų pasirinkti vieną virš kito, kaip jie tarsi iš esmės skirtingi, ir ypač kai jūs kalbatės su inžinierių, arba bando nuspręsti, kam samdyti, ar kas įgyvendinimas pasiūlymas Greenlight, kaip jūs iš tikrųjų padaryti tie rūšių sprendimus. 

Taigi tegul tiesiog Rattle kai ko ne. Iš kalbų Žmonės girdėjau apie, tai, kas ateina į galvą? C. Gerai. Gerai, C ++. Kas tai? 

AUDITORIJA: python. 

David J. Malan: python. Puikus. Kas dar? "Visual Basic. Girdėjau, Java. Vaizdinė Basic-- dar žinoma kaip "VB. "Java". NET, kuri yra daugiau sugauti visus už tai, kas paprastai C #, kaip kalba klausime. Ir leiskite paminėti, kad. Taigi mes grįžti prie to. Aš atsiprašau? Atsiprašome? 

Auditorija: "SQL. David J. Malan: nulio? Auditorija: "SQL. David J. Malan: O SQL. GERAI. "SQL. Taigi mes grįžti į that-- tikrųjų, tai good-- po pertraukos, taip pat. Kas dar? 

Auditorija: "Oracle". 

David J. Malan: Taigi "Oracle", o ne kalba. Tiesą sakant jie būtų naudoti SQL taip pat. Taigi leiskite įdėti, kad po pertrauka, taip pat. Ir atsiprašau, kažkas per čia? Auditorija: Mathematica. David J. Malan: Mathematica? Gerai žinoma. Ir MATLAB yra natūra ten kartais. 

AUDITORIJA R. 

David J. Malan R. Vykime čia. Fortran. Tikrai. Senesni mokykla. Fortran. Cobol. Aš išmesti pagrindinis. Pagrindinis. Any-- 

Auditorija: MATLAB? David J. Malan: MATLAB. O, mušti jums į jį. Ką nors? Galiu galvoti apie kitų pora. Galiu galvoti apie keletą kitų. Ir kas buvo paskutinis? 

AUDITORIJA: ASP. 

David J. Malan ASP? Taip. Active Server Pages. Kad paprastai būtų taikomas kitos kalbos, kartais, C #, taip palikime, kad ne. Bet mes grįžti į tą struktūroms ir tokių. Dar kas nors? PHP yra populiarus. Ruby yra kita. JavaScript neturi būti painiojama su Java, yra kita. Tai tipo daug. 

Taigi ji gali būti tikrai didele, tarsi sąrašas nėra jau tiesiog pradėti žinoti, kur jūs pradėsite. Ir taip, laimei, tegul principo, tai nuo kelių kampų. Pirma, pabandykime kategorijas bent kai kurie iš šių kalbomis į dvi plačias kibirai, primenantis pokalbis mes turėjome prieš pertraukos kur mes kalbėjome apie kompiliavimo, ir kodo, ir mašina kodas, nes tai ne kaip Visos kalbos dirbti. Taigi mes išplėšti iš keletą pavyzdžių of-- priemonių arba atsakomąsias priemones examples-- šio modelio. 

Ir tada, kodėl ne mes kalbėti apie paraiškų kad šiomis kalbomis paprastai naudojami. Ir tiesą sakant, nors tai yra gana ilgas sąrašas, tai tik šio sąrašo poaibis, kad jūs paprastai padaryti iš šių dienų spręsti problemas. Kai kurios kalbos yra naujesnė nei kiti. Kai kurios kalbos yra labiau populiarėja nei kiti. Taigi, tai nėra, kaip jūs turite tokių didžioji užduotis prieš jus spręsdamas tarp Šie įvairiomis kalbomis. 

Taigi leiskite tai padaryti. Mes turėjome anksčiau, kodą, ir tada mes turėjo mašininį kodą. Oi. Rašymas klaidingą žodį. Mašina kodą. Ir mes turėjome šiek tiek į procesą viduryje called-- taip, kompiliatorius. Taigi sudarytojas. 

Ir ką mašina kodas iš tikrųjų veikia, galų gale bus jūsų faktinis procesoriaus. Kitaip tariant, mašina kodas, aš reiškia žemiausią lygį instrukcijas kad CPU tikrai supranta. Be to, atimtis, perkelti, išsaugoti, ir operacijos, pavyzdžiui, kad. Ir todėl tai yra už tai, kas modelis paprastai žinomas kaip surinktais kalbomis. Galbūt nenuostabu. 

Todėl tai yra modelis rengiami kalbų. Tačiau paaiškėja, ten kitas kalbas klasė vadinamas aiškinama languages-- aiškinama languages-- kad yra šiek tiek kitoks. Rašote kodą, paleisti juos per vertėją, ir kad vertėjas yra ką veikia CPU. Kitaip tariant, tai, ką jūs darote ne spinduliavimo yra tai, ką, matyt? Mašina kodą. Nulio ir tie, kurie CPU pati galiausiai supranta. 

Taigi, šio ir pirmojo varianto ir kalbos kaip C, kaip matėme, rašote kodą kad šiek tiek paslaptinga, bet bent jau tai tipo Anglų-kaip ir tai ne mažiau kaip nuskaitoma kai jums priprasti prie jo. Jūs paleisti jį per sudarytojas ir iš jums galiausiai nulių ir. 

Kad supaprastinimas. Yra keletas kitų žingsniai ten. Iš tiesų, jei jūs kada nors girdėjote terminas "asemblerio kalba" tai vienas žingsnis iki kad nulių ir. Tai šiek tiek daugiau skaitoma, bet vis dar gana paslaptinga. Ir taip ten vidurines pakopas kurie, iš tiesų, čia vyksta. Tačiau išėjimas, galiausiai, yra šie nulių ir. 

Bet aiškinti pasaulis, kur jūs turite kalbos, kad yra aiškinami kalbos, jūs iš tikrųjų praleisti šį žingsnį. Kitaip tariant, kai rašote programa, jūs tiesiog iš karto paleisti jį. Jūs neturite kaupia ją ir paleisti jį, kaip aš anksčiau. Jūs tiesiog parašyti ir paleisti jį. Ir jei jūs norite padaryti greitai pakeisti, jums padaryti greitai pakeisti ir iš naujo paleisti ją. Taigi nėra viduriniosios žingsnis čia. 

Dabar, programos Aš parašė anksčiau, kuris buvo ši "Hello World" programa, jums gali pagrįstai wonder-- arba gali pagrįstai state-- tai buvo ne tai, kad laikas reikalaujantis surinkti savo programą. Atrodo, kad tai padarė tik, kaip kad. Ir ten grafinis versijos sudarytojų. Aš naudoju labai slaptas versiją, bet galima pataikyti mygtuką ir kad būtų iš tikrųjų už jus kompiliacija. Aš parengė programą ir tada vėl ją paleisti, aš tiesiog tai padaryti. Ir tai išveda kairėje ten, "Sveiki!" Tai neatrodo visa tai sudėtinga. Bet kai jūsų programos daugiau nei tik vienas, du, trys, keturi, penki linijos ilgio, ji gali imtis kur kas daugiau sekundžių surinkti. Kartais net minučių arba gana šiek tiek laiko, kad surinkti. Po to, kai visi, kai kurie iš Didžiausi pasaulio produktai yra dalykų, pavyzdžiui operacinių sistemų, "Microsoft Word", "Microsoft Excel", kuris gali būti šimtai tūkstančių ar net milijonai eilučių kodo ilgio, ir tie ne tik iš karto įvykdyti. 

Be to, internete, tai tapo madinga naudoti tiesiog aiškinami kalbos, iš dalies, nes jus gali padaryti pokyčius kaip kūrėjas ir tada tiesiog iš karto perkrauti naršyklė puslapis ir iš karto pamatyti rezultatą. Ir taip HTML, o ne programavimo kalba, yra kalba, kuri yra aiškinama. Ir mes matėme tą patį efektą vakar. Jūs tiesiog perkraukite puslapį po to, kai į Cloud9 pokytis and-- voila-- pamatysite naują rezultatą. 

Taigi koks skirtumas čia? HTML, prisiminti, mes turėjome atvirą HTML, atvira galva, atvira pavadinimas, netoli pavadinimas, Uždaryti galva, atviras kėbulas ir pan. Mes turėjome visus šiuos žodžius, kad mes gana kas pasakyta, pasakykite naršyklę, ką daryti. Ei naršyklė, čia ateina HTML puslapį. Ei naršyklė, čia ateina titulą. Ei naršyklė, čia ateina kai tekstas, kuris turėtų būti drąsus. Ir tada galite pasakyti priešingai. Ei naršyklė, tai ją už paryškintu šriftu tekstą. Ei naršyklė, tai viskas organizmui. Ir taip toliau. 

Ir taip, kas yra naršyklė? Naršyklė yra tik vertėjas. Tai yra programa, kuri kažkas panašaus "Microsoft" ar "Google" parašė, kurio tikslas gyvenime yra skaityti kalbą, žinomas kaip HTML ir ją interpretuoti. Iš viršaus į apačią, iš kairės į dešinę. Ir bet kuriuo metu naršyklė mato atvira laikiklis, pavadinimas, netoli laikiklis, jis turėtų išaiškinti, kad kaip apibrėžta, OH, kad reiškia turėčiau pateikti šiuos žodžius būdas čia ne iš naršyklės viršuje. 

Taigi jis tiesiog daro tai, ko HTML kodas sako. Tačiau nėra nulių ir. Nėra kompiliacija. Tu negali padaryti. Naršyklė nebuvo padaryti. Tai tiesiog nedalyvavo. 

Taigi, iš šių vyksta dvasios temos, šiandien ir vakar, kad, atrodo, būti puikus bruožas. Jūs sutaupote savo kodą ir tada tiesiog paleisti jį arba ją interpretuoti. Nėra jokių tarpinių žingsnių. Žinoma, ten kaina? Negali visi bus ilguoju. Taigi, ką gali, kad kaina būtų? 

Auditorija: erdvė. 

David J. Malan: erdvė. Taigi, tikrai. Į sudarytą pasaulyje, jūs turite ne tik originalus kodo, jūs taip pat kuriant ir tada matyt taupymo mašina code-- nuliai ir ones-- ir tai turiu imtis šiek tiek erdvės dydį. Absoliučiai. Taigi, tai jums kainuos daugiau erdvės. Taip? 

Auditorija: Naršyklės galėtų interpretuoti skirtingai. 

David J. Malan: Naršyklės gali ją interpretuoti skirtingai. Tai tiesa. Bet aš nesu įsitikinęs aš patogus teigdamas tai todėl, kad jis yra aiškinama. Tai daugiau tik todėl, kad kurio kalba įgyvendinimas kad ji pati turi dviprasmybių. Taigi tegul ne visai patvirtinti kad viena, bet gera nuojauta. Ką dar gali būti kaina, sumokėta? Andriejus? 

Auditorija: Jūs derinti du žingsniai, todėl jums, todėl turi padidinti sudėtingumą, taip pat. 

David J. Malan: per complex-- Į sudėtingumo kur padidėjimas? Kam? 

Auditorija: Taigi, vertėjo žingsnis, jūs derinant vertėją ir sudarytojas tik už pirmaujanti iki to-- 

David J. Malan: Ak, Gerai. Ironiška, tai tikriausiai šiek tiek paprasčiau įgyvendinti vertėjas, nors atrodytų, kad pajamingumo ilguoju Šio patogumui. Taigi galbūt tiesa. Bet tai kokios priklauso, aš sakyčiau, nuo kalbos ir apie tai, kaip jie nuėjo apie jį įgyvendinant. Čia gali būti daug daugiau sudėtingumo, Tiesą sakant, į sudarytojas, tik todėl, kad jūs turite eiti iš kažkas taip aukšto lygio kažką taip žemo lygio. Bet gera mintis. 

Taigi įdėti kitą Beje, sudaryta programa, kai virto šių nulių ir, baigiasi kalba kad CPU kalba, kadangi šiame Šoninių pasaulis, programa, kurią parašiau, kodas parašiau, niekada iš tikrųjų pasireiškia konvertuojamos į faktinį kalba kompiuteris kalba. Į nulių ir. Jis lieka pirminiame, daugiau žmonių draugiškas, suprantamesnės kalba. Taigi, kas gali būti POVEIKIS ten, jei jūs neturite iš tikrųjų vargintis konvertavimas programa į pačią kalbą kad pagrindinis kompiuteris kalba? 

Auditorija: Might ne suprasti kažką? 

David J. Malan: Might nesuprantate. Ir tai gali claim-- jei ji nesuprato kažkas, kad tai klaida, ar trūkumas vaidybinių į vertėją. Taip, kad būtų daugiau klaida nei savikaina. 

Auditorija: Jūs turite prieigą šaltinio kodo? David J. Malan: Yra gera. Taigi neigiama čia jums Atrodytų, kad turi priėjimą. Jūs, galutinis vartotojas, gali atrodyti, kad turėti prieigą prie kodo. Ir tai ne visada tiesa. Bet tai yra tiesa atvejis JavaScript, kurios mes pažvelgti po pertraukos šiandien, kuris yra aiškinami programavimo kalba kad rašote kodą. 

Bet, kad kodo gauna perkeltas iš serverio į naršyklę ir veikia žmogaus naršyklėje. Taigi čia ji gali tiesiog atidaryti langas, kaip aš darau "Chrome", ir pažvelgti į jį, nes mes patys žvilgtelėjau vakar su "Google". Jis gali atrodyti šiek tiek nesuprantama, bet ji yra. Taigi, kad absoliučiai viena kaina, sumokėta. Auditorija: spektaklio hitu? David J. Malan: Taip. Ir tai kita rimto. Yra spektaklis hitu. Kadangi jūs turite tai viduryje vyras, kuris pats yra programa, tarp jūsų ir CPU, o ne tiesiog maitinti tai žalias nulių ir į CPU, ten spektaklis hitu kad jus imtis su aiškino kalba. Toks, kad, pasirinktinai, programa kad gali užtrukti vieną sekundę paleisti kompiuteryje arba vienos minučių paleisti kompiuteryje čia, gali užtrukti 10 sekundžių arba 10 minučių paleisti kompiuteryje čia. Tai paprastai nesiruošia būti, kad daug iš difference-- veiksnį 10-- nes ten optimizavimas jūs galite padaryti. Bet tai beveik visada lėčiau. Dabar, atvirkštinė pusė to susirūpinimą yra tai, kad, gerai kompiuterių, kiekvienas 12 18 months-- pagal Moore'o dėsnis, taip speak-- yra tik vis greičiau ir greičiau. Turiu daugiau ir daugiau vietos diske. Turiu daugiau ir daugiau RAM. Kas iš tiesų rūpi? 

Ir tai rūšies argumentu. Iš tiesų, viena iš priežasčių, kodėl mes galime toleruoti lėčiau aiškinamas kalbomis, nes mes, žmonės ne tikrai pastebėsite. Kompiuteriai turi Dotarłeś tiesiog taip adyti greitai. Kadangi atgal per dieną, ypač kai aparatinės buvo daug suvaržyta, jums turėjo mažiau visko, jis buvo gerokai brangesnis taigi viskas kainuos daugiau, gerai tada tikrai norėjo išspausti kiek spektaklis, kaip jūs galėtų. Bet tai reikia raštu žemesnio lygio, jei norite, su surinkta kalba. 

Taigi jūs imtis šio spektaklio hitu. Bet apskritai ilguoju atrodo, kad verta šių dienų. Na, išskyrus intelektinės nuosavybės klausimas. Kad skaitomumas rūšiuoti kodo, mes grįžti į kai pažvelgiame JavaScript. 

Taigi pabandykime kategorijas bent keletas iš jų. Taigi tarp surinktais kalbomis, mes būtų su C, C ++, kinda, sorta, "Java", Nors tai iš išimtį tiek, už priežasčių aš jums parodysiu, vos akimirką. C #, būtų į šį sąrašą. Mes pažvelgti į daugiau ne tik daugiau modernių kalbų. Gerai. Ir tai atrodo daug ten. Kadangi šio tvoros pusėje, mes galime turėti JavaScript ir Python, ir PHP, Ruby. Ir tai, kad pakankamai Kuo daugiau naujausių tie? Kad jaučiasi daug dabar. GERAI. Ir tada dot dot dot, nes sąrašas yra begalinis. 

Ir iš tiesų, jei mes norime tiesiog gauti this-- Vikipedijos jausmą, surinkti kalbomis. Spėju, mes galime gauti labiau išsamus sąrašas. Taigi čia mes einame. Taigi čia yra daug išsamus sąrašas. Ir aš tikiuosi kas nors būtų atspėti D kaip kalba, nes tai pernelyg egzistuoja, bet jie sustojo D Atrodytų. Nors iš tiesų gali būti E. 

Oi, iš tiesų, tai turėtų būti sąraše šių dienų. SWIFT yra iš tikrųjų kalba, kad "Apple išrado kad dabar naudojamas, vis Taigi, iPhone plėtrai. Bet mes grįžti į kad mūsų diskusijos iš mobiliajame tik šiek tiek, taip pat. Taip Swift, taip pat. 

Ir tada, jei mes einame į aiškinama language-- aiškinama language-- tada čia dar ilgesniam laikui sąrašas, taip pat. Taigi, jei jūs tiesiog google ir atrodo Vikipedijos už tai, pamatysite visus kalbų rūšių. Bet tikslas, šiandien tikrai, tik suvesta gal tai intelektinės nuosavybės klausimą ir skaitomumas galutinis vartotojas ir veiklos, yra dar vienas rimto taip pat. 

Taigi tarp šių kalbų, leiskite man pamatyti, jei mes galime suteikti jums tik keletas kalbų pavyzdys. Mes nenorime eiti per visi be galo kalbomis. Ar jūs kada nors susimąstėte, ką tikra kalba atrodo? Mes padarėme pamatyti prieš momentas. Kodėl mes pora vaidybinių prašymus. Kas norėtų ką kita kalba atrodo? Taip. 

Auditorija: "Java". 

David J. Malan: "Java". Gerai. Taigi eikime į Java. Ir tiesiog suteikti jums sample-- galėtume rašyti visa tai iš, bet jis būtų greičiau tik pažvelgti kažkieno mėginio kodą. Gerai. Taigi tai yra geras pavyzdys? Oi. GERAI. Taigi čia yra Java versija Programa rašiau anksčiau, "Hello World". 

Taigi Java, jums dažnai matyti raktažodžių "klasės". Tada pamatysite šiek tiek po to vardą. Pamatysite garbanotas petnešos kaip matėme anksčiau, o kartais jie eiti į toje pačioje eilutėje, kartais kitų linijų, tai tipo asmeninis sprendimas. Pamatysite raktažodžius kaip "Visuomenė", "statinio", "tuščia". Bet mes padarėme pamatyti "pagrindinis". "Pagrindinė" paprastai yra numatytosios funkcijos vardas arba numatytasis riekė kodas, kuris gauna paleisti programą. 

"Styga." Ką mums reiškia eilutė anksčiau? Aš jį natūra atsainiai. Styga yra kas? Žodis. Tai kaip simbolių seka. Individualūs simbolių atgal į atgal atgal, paprastai masyvo, kaip mes aptarti. Ir iš tikrųjų, pamatyti šį sintaksė čia, du Kvadrātiekavas? Tai reiškia, ei kompiuteris, čia ateina žinutę eilučių masyvo. Aikštėje laikiklis notacija yra dažniausiai naudojamas žymėti, kad. Ir tada jūs tikriausiai galite imtis guess-- ką ar tai pabrėžė riekė kodas tikriausiai daryti? 

Auditorija: Išėjimo? 

David J. Malan: Taip. Jis spausdina kažką ekrane. Taigi "sistema" yra rūšiuoti nuoroda į jūsų kompiuterį. "Out" reiškia, kad jūsų kompiuteris s produkcijos ar ekranas. Taigi "system.out.print LN" tikriausiai reiškia? "LN". Spausdinti liniją, kuri programuotojai kaip į matyt rašybos keletą žodžių iš jų visas ir imtis nuorodos su kitais žodžiais. Tačiau "LN" yra linija, todėl spausdinimo linija. Taigi spausdina "Labas Pasaulio! ", Po naują eilutę. 

Taigi, kad viskas. Bet Java, ką jie bus kvietimas Objektinis. Ir iš tiesų, tiesiog duoti pora kitų apibrėžimų ten, kad jums gali žr, apskritai, ten yra daug skirtingų tipų kalbas, tačiau labiausiai paplitęs yra procedūrinių arba imperatyvių kalbos. Yra funkcinis kalbos, kuri nėra reiškia, kad kiti yra neveikia. Ir tada ten objektinių kalbų. Ir tai, ko gero, geriausias kategorijas daugumos kalbomis kad jūs kada nors pasirinkti rūšiuoti Tipinio komercinio projekto. 

Tai būtų per daug, Manau, kurių žiurkės skylė eiti, bandyti paaiškinti įvairūs skirtumai. Bet kalbos mes matėme taip far-- C yra procedūrinis arba Būtina kalba. Visai neseniai išrastas kalbos linkę būti, atsiprašau, Objektinis, o tai reiškia, jie turi kitų funkcijų, prie jų. Ar galiu paaiškinti tai šiuo būdu? Leiskite net eiti ten. 

Objektinis priemonės galite implement-- galite modeliuoti realų pasaulį efektyviau mažai. Žmonija, laikui bėgant, jau supratote, Wow, tai būtų malonu, jei mano kalba turėjo šią funkciją arba šią funkciją. Ir štai kodėl mes turime tiek daug kalbų pasaulyje. Protingi žmonės, protingas Žmonės, sutinkate ar nesutinkate ir visada tarsi ateiti kartu visi kartu kurti naujų kalbų. 

Šiuo atveju. "Apple" išrado SWIFT viltys tikriausiai sumažinti baras iPhone plėtrą, nes ankstesnės language-- vadinamas Tikslas-C, kuris galėtų taip pat mūsų sąraše here-- buvo daug paslaptinga ir daug sunkiau apvynioti iš proto aplink. Ir kaip programavimo tampa neabejotinai labiau prieinamas ir plačiau žmonės net priėmė mažiau techninių, The goal-- tai labai narsus tikslas bandyti sumažinti kliūtis patekti į rinką darant patys kalbos lengviau pradėti, bet ne mažiau galinga nebūtinai. 

Ir vienas kita kalba. Kodėl mes pažvelgti ne kažką panašaus Python, kuris yra labai daug madoje šių dienų. Python. Pavyzdys programa. Pažiūrėkime. "Sveikas, pasauli" kalbos. Padarykime tai. "Sveikas Pasauli." Leiskite pamatyti, jei tai suteikia mums gražus pavyzdys. GERAI. Taigi iš tikrųjų tai yra rūšies įdomus. Taigi, jei jūs kada nors google "Hello World", kuris būna, kad vienas iš pirmųjų programų kada parašytas modernia kalba, tik kaip koncepcija įrodymas, jūs galite pamatyti Visi diegimas šio rūšių. 

Kai kurie iš šių kalbomis Aš net girdėję. Bet jūs galite see-- eikime Basic, vienas aš sužinojau prieš keletą metų, iš dalies. Tai buvo įdomus kalba, nes jus turėjo, kaip programuotojas, skaičius visus savo linijas. Ne kitaip, ką buvau daro, kai man buvo raštu Pseudocode ant geltonos dokumento anksčiau už dvejetainį paieškos, paieškai telefono knyga. 

Ir taip, jei norite eiti į kitą eilutę, jūs tiesiog įveskite, pereiti prie 10, arba eikite į 20. Ir jei rašote linijas, Konvencija buvo padaryti, tai 10 eilutė, tai yra linija, 20, tai yra linija, 30, 40, su nieko tarp jų, taip suteikiant sau šiokią tokią jei jūs nuspręsite, palauk, Aš turėjo pridėti kai Morzės abėcėlė kažkur. Jūs vis dar turėjo rūšiuoti devynių šansų išspausti, kad tarp jūsų programa Prieš jums teko rankiniu būdu numeracija viską. 

Taigi tai yra natūra, ką turiu galvoje kai aš sakau, kad pasaulis atėjo su naujų funkcijų. Kažkur pakeliui kažkam supratau, berniukas tai kvaila. Tai tiesiog sukurti dirbti programuotojas. Taigi jis ar ji tiesiog rūšies pastatytas naują sluoksnį viršuje, kad taip, kad jūs neturite jaudintis apie kokia linija numeriai kodą iš tikrųjų yra. 

Taigi, kai gali pasirinkti vieną ar kalba kito? Na, kuris iš jų kalbos jūs linkę išgirsti apie daugelyje savo pasaulį šių dienų? Leiskite išskleidžiamajame Objective-C taip pat. 

Auditorija: C #,. David J. Malan: C #,. Taigi leiskite man spalvą. Ar mes turime kitą mūsų spalvą kažkur? Taigi, C #. O ką jūs žinote apie C #? Viskas pavasarį į galvą? 

Auditorija: Tai programavimo kalba. David J. Malan: Tai programavimo kalba. GERAI. Tai tiesa. Taigi mes kalbame apie C #. C # yra linkęs būti naudojami Windows aplinkoje, Taigi, jei rašote "Microsoft" programinę įrangą Windows C # yra labai plačiai naudojama, ar tai darbastalio programinė įranga, arba net telefono programinę įrangą Windows telefonus, Jei jau tie, arba internete net per daug. Ir iš tiesų, gal Kareemas pirmiau minėtus ASP anksčiau? Taigi ten taip pat jų dalykai vadinami programomis, kurioje mes galime pristatyti iki pratęsimo. Karkasai, kaip ASP. Stovai Active Server Pages. Ir tai yra kodas ir iš programavimo būdas kad paprastai lengviau rašyti interneto programas. Kitaip tariant, jis būtų super, Super erzina parašyti svetainę kalba C, kad mes matėme anksčiau, nes jums reikės naudoti spausdinti + F, jums reikės naudoti šį žodį "Pagrindinis" ir garbanotas petnešos. Su paslaptingų sintaksė daug ir požiūris įgyvendinti kažkas, kad yra gana sudėtinga. Interneto puslapis. 

Ir taip kitomis kalbomis keitėsi padaryti, kad dalykas būtų lengviau natūra. Ir, savo ruožtu, žmonės turi sugalvoti su rėmais, rūšiuoti įrankiai kad jūs galite naudoti, kad padaryti jį net lengviau rašyti tinklalapius. Taigi, pavyzdžiui, padaryti tai daug daugiau betono, leiskite man atverti tik Tekstinis failas akimirką. 

Ir jūs tikriausiai pamenate, kad vakar kad mes kažką pasakė kaip tai interneto puslapis. HTML. Uždaryti HTML. Leiskite praleisti galvą ir just do kūną čia. Tarkime, kad aš norėjau rašyti ne "Hello World" bet "Labas Davidas", kur Davidas yra pavadinimas šiuo metu prisijungęs vartotojas. Kas kažkas panašaus ASP darys, ar JSP-- kuri yra Java serveris pages-- arba bet kitų sistemų skaičius yra jie ne kalbos, savaime. Jie, kaip ir Papildoma programinė įranga, kuri jums būtų įdiegti į savo aplinką kad tik būtų lengviau programuoti. 

Taigi, pavyzdžiui, o ne tereikia kažkas panašaus į "Labas, printf (" Dovydo ")" ar kažkas tai rūšies bendradarbiavimo mingling-- iš kodo natūra mes matėme before-- darytumėte kažką daug paprastesnis, kaip "vardas%." Ir taip šios sistemos, kaip ASP-- ir I nepamenu, jei aš gaunu sintaksė teisingai ASP. JSP yra little-- tai tiesa? 

Taigi su ASP, tai rūšiuoti specialią sintaksę kad kai kurie kūrėjai nusprendė Tai galėtų padėti žmonėms išbristi. Ir aš galiu išreikšti daugiau glaustai pamainymai, pavyzdžiui. Kaip įdėti vertę čia, kur ši vertė pavadinimas yra ne N-A-M-E, tai kai vertė saugomi ten. Taigi "vardas", šiame kontekste mes vadiname kintamąjį. Algebra yra kintamieji kaip x, ir y ir z. Programuotojai naudoti kintamuosius, kurie yra daugiau apibūdinantis nei X, Y, ir Z, paprastai. Taigi "pavadinimas" būtų tiesiog būti kažkokia atminties talpyklą kažką panašaus D-a-V-I-D, mano vardui, ar kitam dar yra prisijungęs prie svetainės. 

Ir todėl tai yra patogumo natūra jūs gaunate su tam tikromis sąlygomis. Taigi, C # ir kažkas panašaus ASP būtų labai paprastai būti naudojamas Windows pasaulyje, ar savo darbalaukį programinė įranga ar serverio, Ypač jei jūsų serveriai yra savo ruožtu Microsoft Windows ir Microsoft IIS-- arba interneto Informacija Serverio, jei gaunu akronimas right-- kuri yra "Microsoft" žiniatinklio serverio. 

Taigi, ką kitas kalbas yra žmonės susipažinę su, ar esate girdėję apie dažniau nei ne? 

Auditorija: Aš žinau, kad Python'o rūšies populiarus [NESIGIRDI]. David J. Malan: Labai populiarus. Taigi Python čia yra naudojama labai dažnai mokslo programų ar duomenų Mokslas, kur jūs turite daug Duomenų, kad norite analizuoti ir norite naudoti programavimo kalba už jį. R gali būti visuotinai naudojamas, kad taip pat, statistine kontekste. Bet Python turi tiek daug funkcijos pastatytas. Tiek daug papildomos bibliotekos, kaip žmonės sako. 

Bibliotekos yra vos kolekcijos kodo, kad kiti žmonės rašė, kad galite naudoti, kad jūs nereikia išradinėti tų ratų. Ir taip Python yra labai dažnai naudojami duomenys mokslo programų. Bet tai taip pat labai dažnai naudojamas interneto programų. Jūs galite įgyvendinti dinamiška interneto svetainę naudojant Python. 

Ir dinaminės svetainės, aš reiškia ne tik statinį turinį kaip mes sukūrėme vakar iki tiesiog sunku kodavimo Lotynų tekstą ir kiti tokie dalykai, o gebėjimas prisijungti, gebėjimas pirkti kažkas, gebėjimas patikrinti su savo vežimėlį ar pan. Visa tai reikalauja dinamiškumo ir jus reikia šiek tiek panašaus į vieną iš šių kalbų. 

Auditorija: Taigi ar Python turėti savo išplėtimo, panašiai kaip ir patinka [NESIGIRDI] David J. Malan: Ji. Taigi, Python pasaulyje, Django yra labai populiarus sistema Python. WSGI yra dar vienas mechanizmas, kuris yra rūšiuoti skiriasi nuo tai bet panaši dvasia. Tai add-on, kuri leidžia jums paleisti Python kodą serveryje. Yra other-- taip. Taigi tai mes vadiname sistemas. Ir tai šiek tiek piktnaudžiavimo. Tai yra daugiau interneto serverio technologiją. Bet mes keep it simple ir įdėti tai šiame stulpelyje vis. 

GERAI. WSGI. WSGI. Kitas thing-- ir iš tikrųjų, tegul man judėti, kad savo skiltyje, nes aš norėčiau klykauti ne savimi jų išleidimą toje pačioje kibirą. Leiskite įdėti į serverį tai savybės, tarkim. Tai ne techninis terminas. 

Taigi čia mes gali būti WSGI. Yra CGI, kuris yra senesnis technika aptarnauja iki kalbomis kaip Perl ar PHP, ar kai kurie kiti. Vėlgi, aš paminėti šiuos terminus ne tiek daug, kad tarsi juos Įsitvirtino, bet taip, kad jei matote jiems tai kažkas jūs tiesiog google skaityti daugiau. Yra pritrūko sulčių kai kurie iš šių dalykų. 

Bet grįžkime į kalbas. Mes kalbėjome apie C #, Python. Ką dar gali jums naudoti Web programavimas šių dienų? Leiskite dėmesys, kad vis dar. 

AUDITORIJA: PHP. David J. Malan: PHP. Ir tegul grįžta į tą vieną. Taigi PHP labai plačiai naudojama. PHP yra linkęs gauti blogą rap. Ji prasidėjo kaip įgyvendinamos kalba iki žmonių, kurie gal buvo nebūtinai geriausia kalbą dizaineriai. Ir todėl jūs galite skaityti visus rūšių straipsniai lankosi apie tai, kaip blogai PHP. Ir deja, tai yra liudija, iš dalies tiesiog religiniai Diskusijos kad prasiveržti tarp programuotojų. Ir tai yra kažkas verta turint omenyje, iš verslo perspektyvos, kad tai labai lengva dėl techninių žmonių gauti visi dirbo su savo nuomonės dėl tam tikrų dalykų. Ir tai nebūtinai reiškia, kad viena šaukiantį garsiai ar stipriausias, Pikčiausia nuomonė yra teisinga. Daug kartų, tai tikrai tiesiog nesvarbu. 

Ir taip žmonės tiesiog teigdamas, kokia jų pačių nuokrypių ar komforto zonos. Ir todėl reikia išlaikyti tai omenyje, priimant sprendimas, kad tik nes kažkas sako kad tai yra tinkama kalba darbas, kad gali būti tiesa, tačiau ji taip pat tik gali būti, kur yra, teisę kalba per savo įgūdžių nustatyti ar komforto zonos. Kuris yra neblogai, bet reikia suprasti, kad ten gali būti kai kurių kontekstas ten. Yra keletas objektyviai neteisingų pareiškimų, kaip C yra netinkama kalba naudoti šių dienų įgyvendinimo svetaines beveik visada. Bet tai nėra neprotinga pasakyti, kad bent vienas iš šių yra blogai, kad mes ratą iki šiol. 

PHP išgyveno daug versijų. Taigi kalbos linkę turėti versiją numeriai su jais susiję. PHP yra iki Manau, versija 7 dabar todėl jis buvo maždaug gana ilgą laiką. Ir kaip kalbos gauti naujesnis, jie dažnai gauti naujų funkcijų. Bet jūs turite turėti omenyje tai nes jei jūsų svetainė buvo įgyvendinamos PHP 7 versija bet bandote paleisti savo svetainę, o gal jūs perkamos Jūsų kodas plėtra į kažkieno ir jie mail tai, kad jūs arba siųsti jį jums ir jie sako, čia įdėti Tai savo interneto serverį, jei žiniatinklio serveris yra keletas metų outdated-- ar tai savo serverį arba interneto host-- jis gali iš tikrųjų paleisti. Taigi tai yra rūšys dalykų, kad kažkas reikia nepamiršti, atnaujinant svetainę arba jo įgyvendinimo pirmą kartą. 

Girdėjau JavaScript anksčiau. Taigi JavaScript yra įdomi vienas tuo, kad ji yra paprastai kliento pusėje, kaip matysime po pertraukos, kuri reiškia, kad jis veikia naudotojo naršyklėje. Bet jūs taip pat galite paleisti JavaScript šių dienų naudojant vadinamąjį Node.js, kur Node.js yra mechanizmas veikia JavaScript kodą serverio pusėje, o ne naudojant Python, arba PHP arba kitos tokios kalbos. 

JavaScript yra ypač gerai tinka už pokalbių programose ir realiu laiku paraiškų, o PHP nėra labai Kalba įgyvendinti kažką lyg pokalbių serverio, kur vartotojai palaikyti ryšį su juo nuolat. PHP yra daugiau aplankyti mane vieną kartą, grįžti rezultatą, tada spustelėkite kitą nuorodą kai sekundžių ar minučių nuo dabar. Kadangi Node.js ir "JavaScript" gali būti naudojama daugiau nuolatinių ryšių. Kitos kalbos, kad jūs įtariate, dažnai naudojami interneto stuff? 

Auditorija: Ar JQuery būti pagrindas? 

David J. Malan: Geras klausimas. Nei. Aš vadinčiau jQuery biblioteka, kurioje vėl biblioteka yra tik kodo krūva kad kažkas turi parašyta, kad paprastai išsprendžia kai kurias problemas, kurios daro tai, tikiuosi, lengviau jums padaryti savo darbą. Ir leiskite man padaryti vieną pavyzdį tai, kad interneto kontekste. 

Atsižvelgiant į interneto kontekste nėra Ši kalba, "JavaScript" kad matysime vėliau, pagal kurią Jums gali pasakyti kažką panašaus this-- "Document.getElementById". Ir ką aš vadinu tai vakar? Pirmiausia, manau, buvo unikalus ID daviau elementui, kuris atrodė kaip šis. "Psl id =" pirmas ">" ir tada mes turėjome kaip "Lorem Ipsum", ir taip toliau. Taigi, jei aš buvo rašyti programą JavaScript kažkaip manipuliuoti, keisti tinklalapius, kad mes buvo žaisti su vakar, Norėčiau naudoti šią paryškintos eilutės kodo gauti, kad ypatingą HTML fragmentą iš mano puslapyje, kad pirma mazgas, kaip mes jį vadiname. 

Tačiau, JQuery, o ne raštu tai, kuris yra žalias JavaScript code-- tik iš dėžutės, tai kaip jus rašyti it-- jums būtų vietoj tiesiog pasakyti, "#Pirmas." Štai ekvivalentas. Ir taip tik remiantis tai labai Arcane pavyzdys, ką galbūt yra naudojant jQuery argumentas? Kodėl kūrėjas naudoti kaip biblioteka JQuery, remiantis šio izoliuotos pavyzdžiui, gal? 

AUDITORIJA: Mažiau kodas. 

David J. Malan: Taip. Tai mažiau kodą. Tai tiesiog greičiau įvesti. Kontrapunkto yra kad jis atrodo baisiau. Jūs tikrai negali skaityti iš kairės į dešinę. Iš tiesų, kadangi tai daugiausia skyrybos dabar vietoj faktinės žodžiai Galiu rūšies daryti išvadą, kad "Document.getElementById" gauna elementas iš pagal jo ID dokumente. Aš tikrai galima naudoti ne toks Mnemoniska šio dalykas čia. 

Taigi tai kompromisą. Yra rafinuotumas, kad ateina dažnai naudojant bibliotekas, ypač kaip JQuery. Tačiau realybė yra JQuery yra natūra iš taps de facto standartas, taip, kad beveik kiekvienas jų dienos, kuris rašo JavaScript kodą naudoja jQuery ar kažką kaip ji, o ne rašo Toks VERBOSE raiškos formomis, kaip tai, nes vėl, žmonija sužinojo, Wow, tai buvo rūšiuoti praleistą galimybę padaryti mūsų gyvenimą paprasčiau. Taigi žmonės, kad jų gyvenimas būtų lengvesnis. Geras klausimas. 

Kitos kalbos apsvarstyti. Sakyčiau, tarp šios sąrašas Ruby yra gana populiarus. Ir taip į pasaulį Rubinas, ten sistema vadinami skersiniai, kuris yra labai populiarus. Taigi Ruby on Rails yra dažniausiai naudojamas išraiška. Taip pat šiame pasaulyje, tegul mane ratas Java interneto stuff, kur Java pasaulyje jums gali tekti JSP arba Java Servlets, kuri yra bendra technologija. Ir tai tik dar kartą naudojimo būdai kad kalba serverio aplinkoje. 

Taigi, ką tai reiškia? Jei turite fizinis serverį, jums būtų tiesiog atsisiųsti interneto serverio programinę įrangą ir įdiegti ją tokiu būdu, kad jūs turite paramą vienai iš šios sistemos, su kuria jūs gali, savo ruožtu, naudoti vieną arba daugiau iš šių kalbų. Ir iš tikrųjų, jei jūs užsiregistruosite kaip žiniatinklio prieglobos arba kai kurie iš debesies paslaugos mes kalbėjome apie vakar, dažnai Daiktai tiesiog ateina su Įrenginio konfigūravimo jums. Jums nereikia nustatyti tai iki rankiniu būdu. Bet jei tu, tai yra, kai vaidmuo Sistemos administratorius, taip sakant, ateina į žaidimą. Jis arba ji būtų iš tikrųjų šios rūšies daiktų už jus, arba vadinamasis administratoriui dažnai tai padaryti už jus. Gerai. Turite klausimų apie kai kuriuos iš jų čia? Arba bet kuri galimybės ne visi paklausti apie kalbas? Karkasai? Tada leiskite man pristatyti tik vienas kitas biblioteka tai taip pat labai dažnas šių dienų. Šis sąrašas gali tęstis iki begalybės. 

Ir tai biblioteka yra natūra pradeda kristi iš malonės. Tai buvo aplink. Ji išpopuliarino Twitter tam tikro laiko. Ir dabar daug svetainių, daug kūrėjų jį naudoti. Tačiau naujų dalykų ateina ir išeidavo kartu. Bet leiskite man tiesiog duoti jums jausmą ką tai reiškia, naudotis biblioteka. Taigi dar kartą, kad JavaScript yra labai populiarus kalba. CSS arba CSS, mes kalbėjome apie vakar. Tai taip pat yra visur. Niekas daro tinklalapį šiandien nenaudojant HTML ir CSS minimaliai. Bet tai ne visada lengva daryti tam tikrus dalykus. 

Ir todėl leiskite man eiti į getbootstrap.com. Oi. Tai ne tai, kaip mes rašybos. Getbootstrap.com, kuris ketina vesti mane į nukreipimo puslapį šio bibliotekoje. Taigi jie dosniai skambinti patys pagrindų, kurie rūšies tarsi teisinga, bet aš vis dar ją vadina daugiau bibliotekoje nei pamatinė. Bet tai tik ginčytina semantika. Leiskite man eiti į savo CSS skirtuką ir leiskite man eiti į kažką panašaus į tai. 

Taigi prisiminti, kas mūsų formos atrodė kaip vakar Cloud9? Tai buvo gana negraži. Old School mygtukai. Manau, kad mygtukas buvo pilka iki numatytas. Ir viskas buvo tikrai suformatuotas gana messily. Taigi, jei jūs norite, kad jūsų interneto formas ieškoti šiek tiek nicer-- leiskite padidinti čia. 

Ir gražiau Aš tikrai tik reiškia labai nitpicky estetika. Taigi pastebėti, kaip elektroninio pašto dėžutė ten turi apvalią stačiakampio kampų į jį. Taigi tai šiek tiek švaresnis ten. Atkreipkite dėmesį, kad žodis siųsti yra ten, kol aš pradėti rašyti ir tada ji nueina. Štai gražus bruožas. Atkreipkite dėmesį, kaip dalykas yra rūšies Žėrintis gražiai, o kai tai jūs gauti nemokamai iš savo naršyklės, tačiau kai kurie tai pat bibliotekos, kodas, kad kiti žmonės turi parašyta, kad duoti jums šį. 

Kažkas panašaus į tai suteikia man mano slaptažodį. Šis mygtukas yra šiek tiek seksualesnis nei numatytas. Labai madinga dabar. Nuo iOS 7 "arba" taip, pasaulis turi Dotarłeś labai plokščia, kadangi pasaulio prieš buvo daug šešėliai, daug svarstymai apie piktogramos. Panašiai kaip drabužių pasaulyje ten mados tendencijos, kad ateina ir išeina. Dabar viskas yra plokščia telefone. 

Tiesą sakant, mygtukai savo "iPhone" dabar tik mėlynos nuorodos. Yra ne dažnai net apvalūs mygtukai. Taigi tai yra tik dalykai kad eiti ir iš Vogue ir todėl tai yra kaip galite padaryti daugiau modernių ieškote internetinę formą. Mygtukus. Taigi Bootstrap "turi daug gražių mygtukus. Taigi, jei norite mėlynas mygtukai, žalia mygtukai, mėlyna, oranžinė, raudona. Bootstrap lengviau padaryti šiuos dalykus. Tai yra dalykų rūšių , kad galėtumėte visiškai padariau vakar su CSS ir HTML, bet tai tik ant kaklo skausmas. Ir todėl vietoj, ką Bootstrap būtų ar turite padaryti, tai kažkas panašaus į tai. 

Jei norite button-- Pasirodo, tai yra HTML tegus mes ne naudoti yesterday-- ir jūs norite atrodyti kaip šis žalią mygtuką, Jūs tiesiogine prasme tiesiog suteikti jai klasę, kurį mes padarėme kalbėti apie vakar, iš "BTN BTN-sėkmės." 

Kodėl šie žodžiai? "Twitter", kad bootstrapu autoriai atėjo su šiais žodžiais. Jie galėjo vadinamas jiems nieko jie nori. Bet ką jūs gaunate dabar yra kažkas Twitter, šiuo atveju, suprato, kaip jūs padaryti Mygtukas atrodo gražus ir švarus ir žalia. Jie supakuoti iki šios funkcijos į CSS klasę, vadinamą "BTN" ir "BTN-sėkmės", kad kiekvienas iš mūsų gali dabar jį naudoti net galvoti apie tai. Taigi jie išgaunamo toli A žalią mygtuką samprata taip mes neturime rūpintis įgyvendinant jį patys. Mes iš tikrųjų gali sutelkti dėmesį į įgyvendinimo dalykų interesų į mus. 

Jei mes slinkite žemyn čia. Klaidų pranešimai ekrane. Kartais jūs norite šiek tiek žinutę pasirodyti naršyklės viršuje. Bet kuris iš mūsų gali tai padaryti su kai pastangų, po vakarykščio pamoką, bet kam jums? Štai toks neįdomus estetinė detalė. Leiskite stovėti ant pečiai bootstrapu ir tegul mums tokius dalykus, kur mes pažodžiui, gauti raudoną langelį, tereikia daryti punktą tegus su klase of-- atsiprašau. "BG-pavojus" turėtų duoti mums tai rausvai dėžutė vietoj. Dabar eime į daugiau įdomių dalykų. Jei aš einu atgal į viršų šį puslapį ir eiti komponentai, dabar pasaulis tampa įdomesnis. Pavyzdžiui, labai dažnai yra išskleidžiamasis meniu kaip šis. Tai būtų absoliutus skausmas įgyvendinti. Ir tai buvo ne tai, kad ilgai prieš, kad mes programuotojai turėtų įgyvendinti šias rūšių meniu nuo nulio. 

Bet tai tokia bendra paradigma kad bibliotekos kaip Bootstrap tiesiog turėtumėte galimybę padaryti išskleidžiamasis meniu, toli lengviau. Nėra vienas būdas tai padaryti, bet jei aš perskaičiau dokumentus Norėčiau pamatyti, kad gerai, turėčiau naudoti HTML jei noriu išskleidžiamąjį meniu kad elgiasi, kaip kad. 

Be to, eikime mygtuką lašas žemyn. Taigi tai yra net mėgėjas. Jei aš noriu, kad tai atrodys mygtuko bet kad mažai trikampis reiškia Turėčiau paspauskite ant jo ir gauti šį meniu, tai naudoja kalbą, pavadintą "JavaScript". Ir mes visi galėtų įgyvendinti tai JavaScript. Bet vėlgi, tai yra rato nenorite išradinėti. Jūs tiesiog norite jį išjungti lentynos biblioteka tai. 

Vykime į kažką kaip progresuoti barai. Taigi kažkas panašaus tai tipo kietas. Jeigu jūs kada nors matė pažangą baras juda per ekraną, įgyvendinti, kad dažnai yra tik verpimo ikona. Iš tiesų, kaip panaikinti, tegul man eiti į Ajax-- kas tai? Ajax informacijos? Oi. Ajaxinfo. Leiskite man prisiminti adresą. Čia mes eiti. 

Taigi, jei jūs kada nors matė kai animacija o Puslapis įkeliamas, ar galvoti, arba taupyti, arba sukurti kažką, jums gali pamatyti tokius animacinius kaip šie. Taigi pažvelkime kažką patiko šį vieną čia ir tegul pasirinkti priekinio plano spalvą žalia, kurie jaučia rūšies draugiškas. Ar galiu spustelėkite šį? Ateina vienas. GERAI. Mes tiesiog eiti su raudona, nes kad tai, ką mes gauname. Taigi čia mes jį. 

Taigi, jei jūs kada nors matė ši ekrane, pagal kurį staiga atrodo, ir tada staiga dingsta, kas yra tai, kad manimi įgyvendinti, kad? Na, tai tik GIF. G-I-F. Ir tai yra animacinis Failas, kuris tiesiog reiškia, tai kaip ir senosios mokyklos komiksas. Yra tik įvairių krūva rėmai, kurie ketina [mikčiojimas] ir tiesiog kartoti. Ir tai sukūrė " iliuzija judėjimo. 

Taip, kai tik puslapis yra padaryta pakrovimo ar daro ką nors, Ką programuotojas padaryti? Na, jis ar ji tiesiog slepia šį vaizdą. Taigi, visi pažangos juosta yra natūra panašaus filmą žiūrite. Jūs esate tarsi pamiršo faktą kad jis nėra iš tikrųjų ką nors, tai tik juda. 

Ir tada, kai tai daroma pažanga, jie tiesiog paslėpti arba išjungti. Ir kad viskas magija kad vyksta ten. Įkrovos suteikia jums kažkas šiek tiek mėgėjas, kuriuo jūs iš tikrųjų galite pamatyti procentą, kaip jis eina, bet ji taip pat yra tiesiog tarsi paprastos animacija. 

Leiskite pažvelgti į kai galutinis daugiau sudėtingų pavyzdžių čia. Kažkas panašaus modalinis. Ar kas nors žino, ką modalinis yra? Modalinis langas yra paprastai vienas, kad turėtų imtis kontroliuoti įgytos ir neleisti jums ką nors kita. Tai tarsi verčia vartotojo anketa dėmesį į ekrano viduryje, fiksavimo juos, paprastai, visa kita. 

Taigi, jei aš pradėti šį demo, kad ekranas paprastai tampa pilka. Na, kaip mes, kad ji pilka? Na, mes tikriausiai tik pasikeitė fono spalvą kaip mes padarėme vakar arba kažkas panašaus. Gal tai viršutinio kad pusiau permatomas. Ir dabar pastebėsite, galite tai padaryti išgalvotas dalykų tai patinka. Taigi, jei jūs kada nors paspausti ant mygtuko ir norite šiek tiek Iššokti pasirodyti, tu gali tai padaryti. Ir taip kas rūpi all-- Yeah? 

Auditorija: Taigi su bootstrap, gauti jį įtraukti, tai taip paprasta, kaip lyg vakar mes padarėme CSS stilių puslapį? David J. Malan: Iš tiesų. Tikrai geras klausimas. Leiskite man eiti į Darbo pradžia. Ir taip. Viskas, ką jums reikia padaryti, siekiant naudojimas "Bootstrap iš esmės kopijuoti ir įklijuokite šiuos tris ilgas linijas kodą į savo interneto page-- viršų Jūsų page-- vadovas ir jūs ir veikia. Ir ten įvairiais būdais ji, bet tai būtų paprasčiausias. 

Taigi, kas yra naudinga apie visa tai? Na, jei esate ne tiek daug Interneto svetainėje, vykdytojas bet jūs bandote kurti ją, arba norite suteikti kam nors su vielos rėmas diagramų, taip sakant, Arba tiesiog menininko perdavimų, kas norite padaryti, aš, tai dieną, dažnai eiti į svetainę kaip Bootstrap, kur, jei aš nori įgyvendinti something-- kaip neseniai miesteliu norėjome įgyvendinti žiniatinklio įrankis naršyti Harvardo universiteto Žinoma katalogas, kad būtų lengviau studentams naršyti kursai ir pridėti kursus Prekių sąrašas, taip sakant, į rūšies nuspręsti, ką jie norėjo pasiimti. 

Aš bandžiau įsivaizduoti aš, ką ingredientų būtų norime naudoti statyti tai? Ką vartotojo sąsaja kaip? Ir tik žiūri per svetainę kaip tai ar kiti tokie biblioteka svetaines, galite gauti įkvėpimo, nes wow, Galiu naudoti šį valdikliui, ir šį valdikliui, ir šį valdikliui. Ir tada tikrai tai, ką programuotojas prasideda daryti, ypač šių dienų šiame daugiau šiuolaikinis pasaulis web programavimas, yra programavimo vis apie laidų dalykus kartu. Rūšiuoti pradėdami vartoti šį nuo lentynos, tai nuo lentynos, tai nuo lentynos, ir jūs yra protingas vienas prisijungti visus tuos taškus, bet galiausiai sukurti kažką dar kartą stovint ant kitų pečių, taip, kad jums nereikia praleisti per mėnesį įgyvendinti kvailas išskleidžiamąjį meniu kuris yra iš tikrųjų sunku padaryti, jei norite, kad ji dirba "Chrome", ir IE ir "Firefox", ir bet skaičius kitų naršyklių. Tai kodėl tai turtingas komercinių ir atviro kodo programinė įranga pramonėje, taip pat. 

Auditorija: Taigi ar Bootstrap atnaujinami ir jūs turite tada atnaujinti saitus? 

David J. Malan: Ji. Na, taip, jis daro. Bootstrap šiuo metu yra versija 3.3.6. Ir apskritai, ką būtų do-- iš tikrųjų tai yra verta paminėti. Yra, kas paprastai žinomas kaip semantinio versijų sistema pasaulyje. Ne visi tai daro. 

Bet jei jūs matėte versijos numerius kad yra formos x.y.z-- taip pavyzdžiui, pirmoji versija dėl programos gali būti 1.0.0. Arba, jei tai labai, labai beta arba net alfa statusas, kuris reiškia naudojimą savo rizika, tai ne tikrai pasirengę žiūrimiausiu laiku, galbūt net pradėti 0.0.1 arba kai toks paskyrimas. Bet jei programinė įranga prasideda versija 1,0 arba analogiškai 1.0.0, paprastai, kas bendro šių days-- nors ne omnipresent-- yra Jeigu įmonė ar individualūs programuotojas pataisymai kai kai gabalas klaidą programinė įranga, kad tikrai buvo klaida, kurios ištaisymas neturėtų poveikis jus all-- tai nekeičia pagal programos elgsena, jis tiesiog fiksuoja kažką kad buvo neveikia properly-- galėtumėte paprastai atnaujinti z reikšmę ten. Tai reiškia, kažkas panašaus Kareem gali tiesiog eiti į savo interneto svetainėje, aklai pakeisti versijos numerį nuo 1.0.0 iki 1.0.1, išskyrus tai, laivas jį, ir teoriškai, o ne turi jaudintis, kad jis tiesiog neveikia savo interneto svetainėje, nes kai funkcionalumo trūkumas, nes kažkas sugedo. 

Tuo tarpu, jei aš, programuotojas ar kai įmonė buvo padaryti kai kurie reikšmingi Pakeisti, kuri funkciškai papildo, Galėčiau mus atnaujinti 1.1.0 nes aš iš tikrųjų keičiant bibliotekoje elgesį. Aš suteikti jums gal daugiau funkcijų. Galiausiai, jei aš buvo iš tikrųjų iš esmės pakeisti programinę įrangą taip, daug, kad ji bus pertrauka daug vartotojų svetaines ar programas, tada aš įpareigotas, šiame modelyje, kad atnaujinti pagrindinės versijos numerį pat kuris yra trūkimo kaita. Kitaip tariant, aš gali turėti Nutraukta parama toms lašo žemyn meniu. Taigi, jei jūs atnaujinti į 2.0, pusę Jūsų svetainė gali nustoti veikti. Ir tai yra rūšiuoti, kad signalas bendruomenei, kokios yra dalyvauja priimant atnaujinti. Gera proga kelti. Kiti klausimai? Gerai. Na tegul pažvelgti Vienas galutinis temą šiame programavimo segmente technologijų kaminai, būtent susiję su mobiliaisiais telefonais. 

Taigi, mobiliuosius telefonus pasaulyje šiandien Jūs have-- ir "iPad" ir paviršiai, ir visi tie rūšių iš devices-- turite iš pasirinkimų, kai daug ji ateina įgyvendinti paraiška arba svetainė savo klientų mobiliuosius įrenginius. Taigi tiesiog pareikšti, kad Matyt, šių dienų, kas yra platformų plėtoti už mobiliojo ryšio erdvėje? Kas įrenginiai gali norite remti jūsų app arba svetainėje? 

Auditorija: "Apple". David J. Malan: Gerai. Taigi "Apple" įrenginiuose. Todėl tai reiškia, "iPhone", ir kad reiškia, iPad, o gal net iPod. Kas dar? Olivier? 

AUDITORIJA: "Android". 

David J. Malan: "Android". GERAI. Taigi Android telefonai Android tabletės, "Android Market" yra dar Messier because-- ir net "Apple" tampa nepatogus. Kadangi kadaise "iPhone" buvo tam tikras dydis, ir "iPad" buvo tam tikras dydis, ir iPod buvo tam tikro dydžio, dabar turime iPad Minis ir plonas vaikai ir iPhone 6 Plus "ir" 6. Tai tampa netvarka. Tai tampa "Android" pasaulyje. 

Ir aš tai sakau su Rūšiuoti valcavimo mano akys, nes iš kūrėjo perspektyva, ji yra skausmas, kaklo kada Jūs neturite Steve Jobs " vizija absoliučios kontrolės virš visų šių specifikacijas. "Apple" vis dar daro, nes jie tie statybos įrangą. Bet tai malonus dalykas, jei Aš programinės įrangos kūrėjas, tiesiog žinau, kad mano iPhone visada vyksta būti tai didelis, nes tai reiškia, kad aš visada žinau kiek ekranas nekilnojamojo turto Turiu. Taigi, jei aš noriu įdėti piktogramą viršutiniame kairiajame kampe, jis ketina būti lygiai toks pats padėkite ant Kiekvienas kliento prietaiso. 

Bet iš iPhone pasaulio 6s ir "iPhone" 6 Pliusai o "Android" pasaulyje telefonai, tai visame žemėlapyje. Ir taip ji tampa sunkiau programos dalykų, ypač vartotojų sąsajos, nes dabar jūs turite pradėti organizuoti Jūsų vartotojo sąsajos santykinai, o ne absoliučiai. Ir tas pats buvo tiesa apie naršykles, ir staliniai kompiuteriai, ir nešiojamųjų kompiuterių metus nes jūs, žinoma, turi įvairių dydžių ekranams. 

Kas dar? Jums gali tekti paviršius, kaip iš "Microsoft". Galbūt have-- AUDITORIJA: "Windows Telefonas. David J. Malan: Kas tai? AUDITORIJA: "Windows Telefonas. David J. Malan: Taip. Taigi langai telefonus dar galima rasti. Rūšies rūšies BlackBerry, bet jie nuolat bando. Ir tada kekių kitų įrenginių. Taigi didžioji dalis, tegul pasakyti tai yra tie, rūpintis tuo momentu. Žinoma Apple Daiktai, tikrai "Android" Daiktai, ir tarp "Windows", kaip paviršiaus tabletės atrodo, gaudyti ant gana gerai. 

Ir taip tarp tų prietaisų, jei norite iškočioti, tarkim, mobiliojo buvimą už savo Įmonės, kokių rūšių dizaino sprendimus jūs turite padaryti? Na, mes jau pasakė "Apple pasaulyje yra bent dvi kalbos , kurie paprastai naudojami. Vienas iš jų buvo vadinamas ką? 

Auditorija: Tikslas-C. 

David J. Malan: Taip. Taip Tikslas-C, kuris yra vyresnio amžiaus vienas. Tai taip pat kalba, kad daugelis Mac programos vis dar parašyta. Tada kitas naujesnis vienas buvo? Auditorija: Swift. David J. Malan: Swift. Ir tie yra natūra du žinoti įspūdį žmonės. Tada Android pasaulyje kokia kalba ji "Android" naudoti? 

Auditorija: C #,? 

Auditorija: "Java". 

David J. Malan: Java kalbos "du jour". Windows pasaulyje, tikrai, mes pasakyti C # toje byloje. Taigi jau tai rūšies erzina, nes tai, kas už verslo Takeaway savininkas arba kažkas, kas tiesiog nori išriedėti mobilųjį buvimą? Kaip, po velnių ją? Kaip, jei noriu paremti gana platus vartotojų bazę, Turiu rašyti, atrodytų, trys atskiri prašymai. Vienas į vieną iš šių kalbų, vienas Java, viena C #. Ir net jei aš noriu funkcionalumą būti vienodi, nesvarbu. Aš vis dar reikia naudoti skirtingas kalbos, nes "Apple", ir "Microsoft", ir "Google" visi palaikymo įvairiose aplinkose. Ir tai buvo iššūkis metų. Atgal į dieną, kai žmonės naudojo pirkti programinę įrangą į kompiuterio parduotuvėje įvyniotų dėžės, jūs arba turi pasiekti, kad Mac lentynos, arba for-- gal tai labai mažas Mac shelf-- ar didesniems langeliams lentyna ir nusipirkti programinę įrangą. Ir labai dažnai, nebuvo net nieko tau ant Mac lentynos. Kodėl? Na, bendrovės nusprendė, jei 90% pasaulio, 95% pasaulio turi kompiuterius, kodėl nerimauti net įgyvendinant dalykų, Mac OS? 

Kaip aside-- viso digression-- kodėl ji yra kad "Mac" atrodo taip nelaidus virusų, ir kirminų, ir grėsmes saugumui? Ar "Apple" geriau tai? Geriau išlaikyti kompiuteriai yra saugūs? 

AUDITORIJA: Mažesnius auditorija? 

David J. Malan: Tai tikriausiai didesnis bitų į jį. Taigi daugelis vartotojų "Mac turi seniai tvirtino, OH, naudoju Mac, jūs būsite apsaugota nuo virusų, ir kirminai, ir visi šie dalykai kad jau seniai kentėjo vnt. Tai gali būti, nes "Apple" turi geresnių programuotojų ir jie rašyti geriau programinę įrangą, arba operacinė sistema buvo geriau sukurta. Galbūt, bet tikriausiai ne. 

Tai tikriausiai, kad, kai esate 12-metų arba 30 kažkas tarsi sėdi namie raštu kenkėjiška programinė įranga perimti pasaulis, jūs ketinate eiti po daug didesnę tikslinę auditoriją. 95% pasaulio, kurie gali būti įdiegta "Windows" arba kai jos variantai. Taigi ten šiek tiek ant abiejų pusių. Bet savo kredito, "Apple", mano žiniomis, tikrai ne šnekama save kaip saugesnė nes jūs tik kviečia dramos jei jums padaryti šį teiginį, manyčiau. 

Gerai. Be getting pernelyg toli žemyn kad kaip mes išspręsti šią problemą? Ar jūs turite pirkti ar jūs turite mokėti tris skirtingus žmones kurti Jūsų programos? Ar galima pasirinkti vieną virš kito? Koks turėtų vadovauti savo galvoju čia jūs manote? Kareemas? Nope. Kažkas kitas. 

Auditorija: Tiesiog ateiti su įranga. David J. Malan: Ateik su įranga? Ką turi galvoje? 

Auditorija: Už aplinka. [NESIGIRDI] David J. Malan: Taigi, kad tai tiesa. Bet jūsų klientai, tuo tarpu, gali turėti iPhone, jie gali turėti "Android" telefonus, jie gali turėti tablečių pagaminti "Microsoft". Taigi, kaip jūs turite mobilųjį strategiją visų šių įvairių vartotojų? Atrodytų, kad jei jis kainuoja, tarkim $ 1,000 iki padaryti iPhone taikymas, ji vyksta kainuos jums $ 2000 iki padaryti iPhone programa, ir "Android" programa, ar $ 3000 taip pat remti Langai prietaisus, taip pat. Tai tikriausiai gana švelniai ir jis gali net būti tiesinė priklausomybė, kaip kad. 

AUDITORIJA: Jei norite turėti programą arba ne, jūs galite turėti reaguoja svetainėje. David J. Malan: Geras. Auditorija: Arba jūs galite turėti gimtoji app. David J. Malan: Taip. Taigi visa tai kontekste čia mes jau kalbėti apie tai, kas žmonės vadina gimtoji programas. Tai yra programos, kurios yra parašytos gimtąja kalba to įrenginio. Taigi gimtoji Tikslas-C arba Swift kodas, ar Java ar C #. O tai reiškia, kai atsisiunčiate, tegul pasakyti "Snapchat, populiarios taikymą, arba kai jums atsisiųsti "Facebook" už telefoną, esate atsisiųsti Arba versija parašyta jūsų iPhone, arba raštu savo "Android" telefoną, arba raštu savo paviršiaus. 

Tačiau yra alternatyva. Olivier buvo užsimindamas, jūs iš tikrųjų galite naudoti HTML 5 Vietoj to, naudojant tai, kas vadinama interneto taikymas, kuriuo jūs tiesiog įgyvendinti savo mobilųjį buvimą ir bet funkcionalumas. Ką reiškia mobiliuoju akivaizdoje? Kaip jūsų svetainę, kad turi jūsų kontaktinė informacija, yra visos savo produktus, o gal jis turi apsipirkti krepšelis, gal parduoti daiktus per ją. Nepriklausomai nuo jūsų paraiška yra, jūs ją įgyvendinti, o ne Objective-C, arba Swift, ar Java ar C #, bet HTML 5, kuris buvo kalba mes pažvelgė ne vakar, JavaScript ir CSS. 

Ir kas malonu apie tuos trys yra, kad jas paleisti, jums reikia, ką gabalas programinės įrangos? Auditorija: Interneto naršyklė. David J. Malan: Interneto naršyklė. Ir geriausiai Žinau, visi iš jų prietaisai yra su interneto naršyklėmis, todėl vartotojas dar turi įdiegti kažką ypatingo. Taigi, galite tiesiog pasakyti savo auditorija, jūsų klientai, eiti į acme.com savo Naršyklė ir jūs tiesiog turėti interneto pagrįstas patirtimi kad dar užpildo ekraną, bet jūs neturite jaudintis visus šios išlaidos ir visi tokio sudėtingumo. Bet tikrai ten vyksta būti sugauti čia, tiesa? Ypač, jei aš atkreipti dėmesį kad prieš porą metų, pirmųjų versija "Facebook" mobiliųjų aplikacijų daugiausia buvo HTML 5 programos. Ir jie turi daugiau Neseniai reimplemented ją kitų savo programų. 

Taigi, kodėl gi jūs ne iš karto noriu pasakyti, Na, žinoma, mes ketiname tai padaryti? Ką paslėptus išlaidos gali būti? 

Auditorija: spektaklio. David J. Malan: spektaklio? Kaip jūs turite galvoje? 

Auditorija: gimtoji programa turi daugiau veiklos. 

David J. Malan: Taigi, kad yra tiesa, dėl keleto priežasčių. Mes galime daug supaprastinti atsakymą. Ir prisiminti, mūsų diskusijas aiškinama palyginti surinktus kalbomis. Tai yra HTML 5 ir su juo, tiesiog, kad būtų aišku, JavaScript-- paprastai parašyta JS-- ir CSS visi aiškinami kalbos, nors tik JavaScript yra programavimo kalba. 

Ir taip prieš tai, kai kurie iš jų yra parengta, bent tai three-- Tikslas-C, Java ir C #, - tai, teoriškai, turėtų būti tiesiog greičiau. Bet yra ir kitas realybės for-- 

Auditorija: funkcionalumas? 

David J. Malan: Kas tai? 

Auditorija: funkcijos. 

David J. Malan: funkcionalumas? Kaip tai? Auditorija: Naudokite fotoaparatą išjungti savo telefoną ar kažką. Jūs galite naudoti tiems, su naršykle. David J. Malan: Būtent. Jie sec-- Auditorija: [NESIGIRDI] David J. Malan: Tai dar viena gera. Yra funkcijų, kurios ateina su mobiliaisiais telefonais šiandien kad ne, dizainas, saugumo priežastys, prieinamos interneto naršyklių. Nes jis būtų rūšies Creepy dalykas, jei tik tada, kai Jūs lankotės "google.com", arba cnn.com, ar website.com, kad svetainė turi galią paversti fotoaparatą, fotografuoti iš jūsų, ir tada jį naudoti. Bet nenorite atsitiktinai svetainę kad lankotės labai pirmą kartą turėti šią galimybę. 

Ir taip kas telefonas Gamintojai paprastai padaryti yra jie tiesiog neleisti susipažinti tai kokios rūšies informacija į naršyklę, o tai reiškia, jums negali įgyvendinti fotoaparatą. Jūs negalite įgyvendinti push pranešimus pyptelėjimų, kad jūs gaunate ekrane su trumpais pranešimais. Ir iš tikrųjų, net GPS yra tik rūšies rūšiuoti turimos interneto naršyklių. Jeigu jūs kada nors, ant laptopo arba mobiliajame įrenginyje, išrautas kažką panašaus gal CNN.com, bet ir vietos naujienų stotys linkę tai padaryti, esate raginami dažnai su Message foxnews.com nori žinoti savo vietą. Patvirtinti arba paneigti. 

Na, naršyklė bando prieiti prie GPS informacija iš jūsų telefono. Bet laimei "Microsoft", ir "Apple" ir "Google" nusprendė, kad jaučiasi tai naudinga situacija, norime Google Maps ir kiti įrankiai dirbti, bet mes nenorime slinkti žmones iš tiesiog leidžia bet kokios svetainės tai padaryti. Taigi leiskite tarsi susitikti pusiaukelėje ir paskatinti vartotoją. Bet tai nebūtinai atveju su visa įranga, kaip ir fotoaparato ir su paspaudimu Pranešimai ir panašūs dirbiniai, taip jums gali tekti paaukoti tam tikras funkcijas. Bet spektaklis taip pat. Jis vis mažiau pastebimas šiandien, galbūt kaip LTE sugavimus ir greičiau interneto greitis apie telefonus, bet jūs galite rūšies pajusite skirtumą. Kaip žiniatinklio taikymo tiesiog jaučiasi lėčiau, paprastai, nei gimtąja taikymo, iš dalies nes žiniatinklio taikymo pagal apibrėžimą yra internete. Tai kalbėti serverių internete. Ir jei jūsų tinklo ryšys lėtas, net nemirksi gali būti lėtas. 

Tačiau gimtoji paraišką, turite jau iš anksto downloaded-- tikriausiai kai buvai namie iš App Store, ar jūs bent iš anksto atsisiųsti ji visas anksčiau, kokia jūsų ryšys speed-- ir taip dabar jūs turite visus bitai, kad jūs paprastai reikia. Išskyrus gal kai kuriuos duomenis kuris ateina iš serverio. 

Taigi tai yra kompromisai čia. Yra rūšies vidutinio kompromisas, iš tikrųjų. Ir aš manau, you-- 

Auditorija: naudoti duomenis neprisijungęs. Gimtąja apps, galite [NESIGIRDI] David J. Malan: Absoliučiai. Taigi ten offline klausimas, kuri yra tikrai erzina jei negali pažaisti žaidimą ar naudotis Kai kurios programinės įrangos tik todėl, kad esate rūsyje kažkur arba liftu. Gimtoji paraišką atsparesnė su aukštuoju tikimybe prieš, kad darant prielaidą, kad turite visas duomenys, kuriuos reikia vietoje. 

Taigi yra ir trečias variantas čia. Ir tegul atkreipti spektrą kaip gimtoji app čia ir Web App čia. Ir kas per vidurį yra kažkas called-- ir manau, kad jums gali tekti naudoti žodį prieš, gal? Hibridinis taikymas. Ir kaip žodis reiškia, tai kažkas per vidurį. Tai tipo interneto taikymo ir tai tipo gimtoji paraišką. 

Ir ką tai reiškia? Pasirodo, yra frameworks-- naudoti terminą nuo earlier-- programinė įranga kad kiti žmonės parašė už kiekvieną iš šių platformų. Šie ir dar kiti prietaisai. Tiesą sakant, leiskite man eiti į PhoneGap, kuris yra vienas iš tokių sistemų, kad aš tiki "Adobe valdo dabar. Leiskite man eiti į Darbo pradžia. Pažiūrėkime. Žr jeigu matau įrankių sąrašas. Techninė įranga. Darbo pradžia. PhoneGap aparatūros. 

Pažiūrėkime. PhoneGap aparatūros prieiga. Leiskite pamatyti, jei mes galime rasti šiek tiek diagramą, kad jie naudojami turėti. Tai kitoje vietoje. Ar tai naudinga? Ne. Štai viskas gaišti savo laiką ten. PhoneGap aparatūros. Prietaisai. Įrenginys "API. Ne, jie jau persikėlė. 

PhoneGap. Vykime vieną paskutinį pažvelgti į tai, ir pamatyti, jei aš galiu parodyti jums. Darbo pradžia. Įdiekite PhoneGap. Įdiekite mobiliąją programą. Nagi. Jie jau reorganizuota viską. Gerai. Oh, viskas gerai. Na, čia mes einame. Tai yra ne visi, kad apšviestų, bet Tai yra tai, ką buvau rūšies ieško. 

Taigi PhoneGap yra sistema, kuri jums galite atsisiųsti nemokamai, kuri suteikia jums kai starteris kodas esmės. Taigi kai kodas, kad jie parašyta kad nedaro daug ką. Bet ką ji suteikia jums iš esmės yra lygiavertis Paraiškos, kad tiesiog kelia didelis stačiakampis naudotojo ekrano. Tai nekeltų URL juostą, tarsi naršyklė, nekeltų adresą. Jis tiesiog kelia didelį stačiakampį. Ir jūs konfigūruoti tai didelis stačiakampis, po gaubtu, kad iš tikrųjų eiti į acme.com, o gal m.acme.com, už mobile.acme.com, bet vartotojas neturi žinoti jie tuo adresu. Visi jie mato yra kiekis puslapyje. 

Bet kas malonu apie šį būties hibridas app yra tai, ką PhoneGap ir kitos bendrovės, duodame jums yra jie suteikia jums šiek tiek kodą į Objective-C arba Swift, arba šiek tiek kodo Java, arba šiek tiek kodą C #, ir iš esmės, Viskas, ką jums turi pateikti yra minimaliai adresas Jūsų interneto pagrindu sukurta programa. Ir tada jūs pluoštas tai visi kartu, ir jūs jį arba prieiti prie jūsų Svetainės internetu, ar jūs netgi talpyklos vietos kopijuoti viduje taikymo, ir tada įrašote savo paraišką iPhone formatu, "Android" telefonas formatas, paviršiaus formatas, arba bet kitų prietaisų skaičius. 

Jūs įkelti kiekviena iš šių versijų "Google" Play Store ", į "App Store", į "Windows Store" ir kt. Ir dabar, jūs galite turėti visus savo auditorijas parsisiųsti tikrai gimtoji app, nors dauguma kodas buvo parašyta kažkas, bet tos gimtoji app turinį visi atvykti, paprastai, savo interneto svetainėje. Taigi jūs ir toliau rašyti savo svetainę HTML, JavaScript ir CSS. 

Tad kodėl Blur šias eilutes? Kodėl hibridinių taikymą kad tipo gimtoji, bet taip pat rūšies Web Based? Kas esmė pridėti šį sudėtingumą? Aš turiu galvoje, net dar, tik iš žvelgdamas per šį puslapį, Pradedama vadovas jaučiasi jis gavo visai daug žingsnių man daryti, kol aš can-- Auditorija: pakartotinis naudojimas? David J. Malan: pakartotinis naudojimas? Ką turi galvoje? 

Auditorija: šaltinio kodą. Taigi tas pats kodas būtų paleisti visi skirtingose ​​platformose. David J. Malan: Taip. Auditorija: [NESIGIRDI] David J. Malan: Puikiai. Jei laikas yra trumpas, ir jei neturite, kad daugelis developers-- O gal jūs turite vieną kūrėjas ir jis ar ji tikrai nėra žinoti visi iš jų environments-- tikrai nėra gerai, ir tikrai negaliu programa visose trijose vienu metu ir atsiųsti tris produktus laikas, per kurį vieną, Jūs galite turėti jį arba ją pastatyti viską HTML ir JavaScript ir CSS, ir tada sužinoti maža maža tiek apie gimtoji apps, tik tiek, kad parsisiųsti pagrindų, kaip tai, tada įkelti savo produktą visi įvairių programų parduotuvėse taip, kad dabar jūs turite gimtoji paraišką. 

Taigi, kad atrodo win-win, Bet vėl, kad būtų aišku, kas yra potencialus išlaidas arba gotchas? 

Auditorija: spektaklio? David J. Malan: Taip. Veiklos. Sunku apibūdinti žodžiais. Taigi, jei jūs tiesiog imtis tikėjimas mobilusis taikymas, paraiškoje interneto bus paprastai atlieka lėčiau. Jis gali atrodyti visai teisus, nes iPhone ir Android telefonams, ir "Windows prietaisai, ten visada yra numatytoji išvaizda tarsi ir jausti, kad visi iš mygtukai ir meniu. 

Ir bendrovių internete, galite pabandyti suderinti tuos estetika su bibliotekomis kaip Bootstrap, bet user-- sumani user-- vyksta žinoti, kad kažkas ne visai čia. Ir tai gerai, gal tai ne big deal. Bet spektaklis klausimas visiškai yra baisi. Gimtoji paraiškos bus linkę tik būti daug labiau reaguoja, todėl geriau. Ir taip, kas tada gali būti geriausias abiejų pasaulių? Jei esate ypač mažas įmonė ar maža grupė, Jūs neturite išteklius plėtoti lygiagrečiai programą visose trijose platformose, ir atvirai, jaučiasi, kad tai bloga idėja vistiek nes jei iškočioti ir visi trys vienu metu realizuoti, turėtume pridėjo keletą funkcijų arba padaryti kažką kitaip, dabar jūs turite ją išspręsti trys vietos, ne vienas. Kas gal optimalus strategija čia apskritai, jei ištekliai ir laikas yra trumpas? 

Auditorija: Just do it iOS. 

David J. Malan: Tai nėra nepagrįstas. iPhone, bent jau JAV, yra super populiarus. "Android" vis dar atrodo, kad dominuoja rinkos dalis, pasaulio, apskritai. Taigi jūs nesate nebūtinai atstovas iš pasaulyje visas šią savaitę. Bet tai visiškai vienas sprendimas. Aš turiu galvoje, miesteliu čia aš manau kai žiaurią skaičių ar procentas studentams turi iPhone "ir ne" Android "telefonai. Tačiau užsienyje, tai tipo priešingai. Taigi jums nuspręsti remiantis savo auditoriją. Kaip jūs žinote, kas jūsų auditorija yra? 

Na, mes sužinojome apgauti vakar. Jūs juos gali paklausti. Jei turite žiūrinčios auditorijos galite siųsti jiems apklausos formą. Arba galite tiesiog daryti tai, ką? 

Auditorija: "Google Analytics"? 

David J. Malan: Kas tai? 

Auditorija: "Google Analytics". David J. Malan: "Google Analytics". Taip. Ar net daugiau tarsi techniškai, tik pažvelgti į savo pačių interneto serverių rąstų. Nes tai, kas atsitinka, kiekvieną kartą, kai naršyklė, ar nešiojamas kompiuteris, stacionaraus ar Telefonas aplankyti jūsų svetainę? Jie siunčia, kad HTTP antraštę, kuri rodo Jūs ką naršyklės ir operacinės sistemos jie naudoja. Taigi galite numanyti, su didele tikimybe, koks jūsų demografinė naudoja, kad taip ir tada reguliuoti. 

Taigi manau, kad tai nepriimtina. Tai tarsi blogai verslui, jei Android vartotojai negali įsigyti mūsų raštai. 

Auditorija: Nesvarbu, ar esate viskas ima ar ne? David J. Malan: Nesvarbu jūs ketinate imti? Taigi Gerai, jūs gaunate tai, ką mokate. 

Auditorija: Nesvarbu, ar jūsų app yra viskas būti laisvas, ar tai gonna-- 

David J. Malan: Gerai. Taigi gal galite susigrąžinti išlaidos, kad taip, or--? 

Auditorija: Aš perskaičiau tyrimą, kai kurie sakė daugiau Apple vartotojai moka už apps versus-- David J. Malan: Tai tiesa nes jie jau esate mokėti daugiau už savo įrenginių. Taigi nėra nepagrįsta prielaida. 

Auditorija: [NESIGIRDI] David J. Malan: Gerai. Taigi, jei jie labiau linkę mokėti, tada į pragarą su Android vartotojams. Jie nesiruošia mokėti mums nieko vistiek. Mes taip pat galėtų sutelkti savo prioritetus, bent pirmuosius kelis mėnesius ar metus, iOS. Visiškai pagrįsta. Kas labiau įskaičiuota strategija, nei? Maybe-- kas tai? 

Auditorija: [NESIGIRDI] 

David J. Malan: Daugiau expensive-- tai gal daugiau investuoti in-- eiti į priekį. AUDITORIJA: Taip. Tiesiog mobili svetainė. 

David J. Malan: Taigi padaryti mobili svetainė, o ne net nerimauti šio sudėtingumo. O gal protinga strategija, kurie net "Facebook" buvo, yra pradėti hibridas taikymas, nes tai nėra kad daug sunkiau padaryti tai nei šis. Jums tereikia perskaityti keletą dokumentus ir išsiaiškinti, kaip nusiųsti dalykus į "App Store". Tai gal jums pradėti su tai, kad vieną dieną,, galite paremti visus savo vartotojams. Ir tada, tik kaip "Facebook" ir kitos bendrovės, padarei, kai turi išteklių, turite žmones, kodėl ne jūs iš naujo įdiegti tik "iOS" programa. Jūs vis dar turite kažką kiekvienam, nors tai yra prastesnės patirtis galbūt, su hibridine taikymo. Bet jūs galite palaipsniui išriedėti ir pakeisti savo trumpalaikius priemonės hibridinių programas su Jūsų daugiau gimtoji programas. 

Auditorija: Bet su hibridas programa jums turės prieigą prie mobiliųjų funkcijų? 

David J. Malan: Nebūtinai. Taigi gal jūs padaryti sąmoningą sprendimą anksti, galite tik įkelti nuotraukas ant gimtoji iPhone taikymo "Facebook", bet ne ant Android taikymo, iš pradžių, pavyzdžiui. Ir tai yra iš balto melo, nes tiek interneto programų turi daugiau apribojimų išskyrus hibridines paraiškas paaiškėja užduotis, ir jei mes skaityti dokumentus už PhoneGap ir dalykų, pavyzdžiui, tai, žmonių sugalvoti būdų suteikti interneto programas prieiga prie fotoaparato, taip ilgai, kaip jūs naudojate hibridas taikymas. 

Kaip tai veikia? Kadangi hibrido taikymas, pagal apibrėžimą, turi kodą Objective-C truputį, ir greitai, ir Java arba C #, jis gali pasiekti įrangą. Nebūtinai viskas, tačiau jis gali labai gerai būti, kad jūs turite pakankamai prieiga gauti fotoaparatą, net Android platformose pavyzdžiui, toje contrived pavyzdžiui. 

Bet kokie kiti klausimai? Gerai. Kodėl mes mūsų 15 minučių pertrauką čia. Mes atnaujinti ne trijų su galutine pažvelgti interneto programavimo, duomenų bazių, ir "JavaScript". 