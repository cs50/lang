1
00:00:00,000 --> 00:00:00,270

2
00:00:00,270 --> 00:00:01,790
DAVIDマラン：再びようこそ、みんな。

3
00:00:01,790 --> 00:00:05,030
だから昨日、あなたはそれを思い出し
我々はここで、これらのトピックに焦点を当てました。

4
00:00:05,030 --> 00:00:08,380
だから我々は、4つの包括的なtopics--を持っていました
プライバシー、セキュリティ、および社会;

5
00:00:08,380 --> 00:00:11,960
インターネット技術。クラウドコンピューティング;
そして最終的に、ウェブ開発。

6
00:00:11,960 --> 00:00:14,170
>> 誰もが持っていました
帯域幅または時間

7
00:00:14,170 --> 00:00:16,900
少しジョンを見て
オリバーの最後の夜？

8
00:00:16,900 --> 00:00:20,120
それは、実際にはかなり面白いです
そうでない場合は少し恐ろしいです。

9
00:00:20,120 --> 00:00:24,700
何でも上の任意の質問
我々は昨日やりましたか？

10
00:00:24,700 --> 00:00:27,600
どれ明確化？

11
00:00:27,600 --> 00:00:35,580
あなたがしたい任意の質問
我々は何らかの形で今日に触れて確認してください？

12
00:00:35,580 --> 00:00:37,300
だから、白紙の状態。

13
00:00:37,300 --> 00:00:38,760
>> だから、今日の議題に何ですか？

14
00:00:38,760 --> 00:00:41,301
だから私は、我々が今日始めるだろうと思っていました
一般的に何を見てと

15
00:00:41,301 --> 00:00:44,460
で計算thinking--として知られています
oversimplifyingの危険性、思考

16
00:00:44,460 --> 00:00:46,636
コンピュータのような、おそらく
エンジニアのように考え、

17
00:00:46,636 --> 00:00:48,510
とを開始しようとしています
自分の考えを整理します

18
00:00:48,510 --> 00:00:52,039
またはあなたのより良い感覚を与えるために
どのような実際に指揮に関与しています

19
00:00:52,039 --> 00:00:54,080
何かをするコンピュータ
プログラミングを介して。

20
00:00:54,080 --> 00:00:56,663
そして、私たちはかなりでそれをしておこう
ハイレベル、ほとんど英語、

21
00:00:56,663 --> 00:00:59,850
しかし、おなじみの使用しようとします
どのように定式化する例

22
00:00:59,850 --> 00:01:01,450
あなたが問題を解決するに行きますか。

23
00:01:01,450 --> 00:01:04,080
>> そして、我々はいくつかのCSを再訪します
トピック、抽象化のような、

24
00:01:04,080 --> 00:01:06,040
これは、カップルを思いつきました
時間の昨日、

25
00:01:06,040 --> 00:01:07,554
アルゴリズム、およびその後の表現。

26
00:01:07,554 --> 00:01:09,720
私たちは始めましょうどこにそしてそれはです
一瞬で、今日。

27
00:01:09,720 --> 00:01:11,481
その後、我々は、プログラミングを見てみましょう。

28
00:01:11,481 --> 00:01:13,480
我々はいくつかを見てみましょう
基本的な構成物

29
00:01:13,480 --> 00:01:16,450
これであなたはよく知っているかもしれません
さらには、非常に直感的かもしれません。

30
00:01:16,450 --> 00:01:18,370
>> 私たちは、実際には、見ていきます、
サンプルプログラムで

31
00:01:18,370 --> 00:01:21,244
非常にアクセス可能な環境、
非常に遊び心、そして実際に標的に

32
00:01:21,244 --> 00:01:22,555
12歳以上のため。

33
00:01:22,555 --> 00:01:25,930
私たちはそこに数分を過ごすことになります
そして、次に低いレベルに物事を取ります

34
00:01:25,930 --> 00:01:30,360
そして実際のいくつかについて話
アルゴリズムとデータ構造、

35
00:01:30,360 --> 00:01:32,360
そうこと、話すこと
プログラマは一般的に使用します

36
00:01:32,360 --> 00:01:35,040
はるかに多くの問題を解決します
効率的にあなたがかもしれないより

37
00:01:35,040 --> 00:01:37,322
完全にそれらなしで行うことができます。

38
00:01:37,322 --> 00:01:40,280
そして昼食後、私たちは見てみよう
ちょうどであるテクノロジー・スタック、で

39
00:01:40,280 --> 00:01:42,240
のがファンシーな方法
技術のコレクション

40
00:01:42,240 --> 00:01:43,690
あなたが使用するかもしれません
いくつかの問題を解決します。

41
00:01:43,690 --> 00:01:46,670
そして、我々はアルファベットについて話しましょう
存在する言語のスープtoday--

42
00:01:46,670 --> 00:01:50,930
JavaやPythonやC ++やPHPと
Rubyと他のもののすべての種類。

43
00:01:50,930 --> 00:01:53,740
>> 私たちは、簡単に見てみよう
デザインパターンで。

44
00:01:53,740 --> 00:01:57,730
プログラマ、時間をかけて、
方法論を採用しています

45
00:01:57,730 --> 00:02:00,690
彼らを助ける傾向にあること
より容易に問題を解決します。

46
00:02:00,690 --> 00:02:04,390
あなたが書いて自分自身を見始めるとき
何度も何度も同じ種類のコード、

47
00:02:04,390 --> 00:02:08,080
人々は、これらの繰り返しを正式
そしてそれらに帰名

48
00:02:08,080 --> 00:02:10,084
その後、それらを使用して
最終的に、それらを推進しています。

49
00:02:10,084 --> 00:02:12,250
そして、私たちは少し話をしましょう
モバイル戦略について、

50
00:02:12,250 --> 00:02:16,099
それが実際に何を意味しているような
モバイルアプリやモバイルウェブサイトを作ります。

51
00:02:16,099 --> 00:02:17,140
あなたは、Androidのためにそれを行うのですか？

52
00:02:17,140 --> 00:02:17,730
あなたはiOSのためにそれを行いますか？

53
00:02:17,730 --> 00:02:19,160
あなたはそれらの両方のためにそれを行いますか？

54
00:02:19,160 --> 00:02:20,326
トレードオフは何ですか？

55
00:02:20,326 --> 00:02:23,180
そして最後に、我々は取りますよ
ルックWebプログラミング、どの

56
00:02:23,180 --> 00:02:25,380
総称であります
本当にすべての時間を記述する

57
00:02:25,380 --> 00:02:28,410
あなたはだソフトウェアを書きます
ウェブ上で実行することを意味し、

58
00:02:28,410 --> 00:02:30,430
携帯電話でかどうか
デスクトップやラップトップ。

59
00:02:30,430 --> 00:02:33,490
私たちは、簡単に見てみましょう
データベースとデザイン

60
00:02:33,490 --> 00:02:39,049
その中で、唯一のため、ほぼすべての場合
面白いWebベースのアプリケーション

61
00:02:39,049 --> 00:02:40,590
これらの日には、データベースのいくつかの種類があります。

62
00:02:40,590 --> 00:02:42,380
それ以外の場合は、希望
ちょうど静的コンテンツです。

63
00:02:42,380 --> 00:02:45,254
そして、データベースは、あなたが行うことができます
経時変化、自分自身かどうか

64
00:02:45,254 --> 00:02:45,960
またはユーザから。

65
00:02:45,960 --> 00:02:47,820
そして、私たちはどのように検討しましょう
設計については行くだろう

66
00:02:47,820 --> 00:02:50,510
そのデータベースと専門用語の種類
それはエンジニアの中に出てくる可能性があります

67
00:02:50,510 --> 00:02:52,790
ホワイトボードでの議論
実際に実装するとき

68
00:02:52,790 --> 00:02:53,900
初めてのアプリ。

69
00:02:53,900 --> 00:02:57,002
>> 私たちは、について簡単に説明します
APIは、有用なサービス

70
00:02:57,002 --> 00:02:59,960
あなたが上に立つために使用できること
他の人の肩、企業かどうか

71
00:02:59,960 --> 00:03:02,619
や個人、そしてあなたを解決
より迅速に自身の問題。

72
00:03:02,619 --> 00:03:04,785
そして、我々は、おそらく手を出しますよ
JavaScriptで少し、

73
00:03:04,785 --> 00:03:08,900
使われているプログラミング言語
ブラウザの両方で、これらの日だけでなく、

74
00:03:08,900 --> 00:03:09,820
サーバインチ

75
00:03:09,820 --> 00:03:11,890
おそらく、我々はよ
、時間が許せば、再訪

76
00:03:11,890 --> 00:03:15,670
ハンズオンウェブスタッフたちの一部
昨日と2を統合

77
00:03:15,670 --> 00:03:17,630
一緒に私たちは休会前に。

78
00:03:17,630 --> 00:03:22,380
>> だからthat--でahead--は何ですよ
そこにいることを欠落しているもの

79
00:03:22,380 --> 00:03:26,289
我々は挿入を確認してくださいしたいと思います
そして、いくつかの点で上にタッチします。

80
00:03:26,289 --> 00:03:28,330
それは心にバネの場合は、
やがてそれを持ち出します。

81
00:03:28,330 --> 00:03:32,010
しかし、なぜ我々は始まりません
計算の考え方を見てください。

82
00:03:32,010 --> 00:03:35,420
>> そして、私はそれを提案してみましょう
計算の考え方は、再び、あります

83
00:03:35,420 --> 00:03:38,830
高レベルの記述の一種
コンピュータ科学者は何を行う可能性があります。

84
00:03:38,830 --> 00:03:42,470
そして実際、それでは、始めましょう
その3成分と

85
00:03:42,470 --> 00:03:44,207
計算の考え方に行くかもしれません。

86
00:03:44,207 --> 00:03:45,790
これは、それを説明するだけで1つの方法です。

87
00:03:45,790 --> 00:03:48,490
我々は確かに定義することができます
任意の数の方法でこれ。

88
00:03:48,490 --> 00:03:50,630
>> しかし、私が提案してみましょう
今日のために、

89
00:03:50,630 --> 00:03:53,910
世界の問題という、
世界の問題のすべて、

90
00:03:53,910 --> 00:03:56,730
により近づいたとき
コンピュータ科学者でし

91
00:03:56,730 --> 00:04:00,990
私たちがよと見ること
入力を呼び出し、その

92
00:04:00,990 --> 00:04:08,142
私たちが呼ぶものに送り込ま取得する必要があります
その後、出力が得られるアルゴリズム。

93
00:04:08,142 --> 00:04:10,600
換言すれば、全体の
私が主張する問題解決の世界

94
00:04:10,600 --> 00:04:13,140
蒸留することができます
これらの3成分。

95
00:04:13,140 --> 00:04:14,450
だから私は入力によって何を意味するのですか？

96
00:04:14,450 --> 00:04:17,060
入力は、あなたがしているものばかりです
解決するために手渡しました。

97
00:04:17,060 --> 00:04:20,052
>> 例えば、ここです
古い学校の問題。

98
00:04:20,052 --> 00:04:22,760
私はここに電話帳を持っている場合と、
私はそれに何かを見てみたいです、

99
00:04:22,760 --> 00:04:23,760
これは私の入力です。

100
00:04:23,760 --> 00:04:26,260
私は千かそこらを持っています
電話帳のページ。

101
00:04:26,260 --> 00:04:27,780
これは私の問題に入力されます。

102
00:04:27,780 --> 00:04:31,507
そして、私は何かを見つけたいです
マイク・スミスので、友人のような

103
00:04:31,507 --> 00:04:33,840
その名前と番号です
うまくいけば、このアドレス帳インチ

104
00:04:33,840 --> 00:04:36,430
>> これは、セルの日前であります
電話は、私はちょうどそれを検索することはできません。

105
00:04:36,430 --> 00:04:38,540
だから私はそれが古いしなければなりません
学校と実際に検索

106
00:04:38,540 --> 00:04:41,331
いくつかの答えをこれらの入力。

107
00:04:41,331 --> 00:04:43,580
そして、その答えはちょうど起こっています
出力と呼ばれていました。

108
00:04:43,580 --> 00:04:44,871
だから入力は電話帳です。

109
00:04:44,871 --> 00:04:47,787
このアルゴリズムは、どのようなセットです
手順は、私がマイク・スミスを見つけるために使用します。

110
00:04:47,787 --> 00:04:50,120
出力は、うまくいけば、あります
マイク・スミスの電話番号。

111
00:04:50,120 --> 00:04:52,703
そして、これはその後、ちょうどだろう
ほとんどすべての問題の代表

112
00:04:52,703 --> 00:04:55,210
あなたが入力渡されるとします
そして、出力を生成します。

113
00:04:55,210 --> 00:04:59,459
>> だから我々は、プロセスを検討する前に、
これによって、私たちはその問題を解決することができ、

114
00:04:59,459 --> 00:05:01,250
マイク・スミスを発見し、
そんな感じ、

115
00:05:01,250 --> 00:05:04,090
それでは、最初のを考えると、
last--入力と出力。

116
00:05:04,090 --> 00:05:08,060
物理的には、もちろん、ここに入力
紙の全体の束を一緒に接着されています

117
00:05:08,060 --> 00:05:09,400
電話帳の形態です。

118
00:05:09,400 --> 00:05:13,660
しかし、コンピュータ、course--ノートパソコンのを
デスクトップ、さらには携帯電話や

119
00:05:13,660 --> 00:05:16,430
これらdays--ものであり、
電子デバイス。

120
00:05:16,430 --> 00:05:20,920
>> そして、一日の終わりに、何
コンピュータへの入力のみ？

121
00:05:20,920 --> 00:05:23,299
まあ、それはのようなものです
ここでは、この電源コード。

122
00:05:23,299 --> 00:05:25,590
私は壁にそれをプラグインし、
私は、電子の流れを取得し、

123
00:05:25,590 --> 00:05:27,048
これは私がマシンを実行することができます。

124
00:05:27,048 --> 00:05:30,420
それとも、それらの電子があります
私のバッテリーの方法によって作成されました。

125
00:05:30,420 --> 00:05:33,790
しかし、一日の終わりに、それはです
唯一の事は私のラップトップに入ります。

126
00:05:33,790 --> 00:05:35,772
そしてそんなに面白いです
ものは、最終的です

127
00:05:35,772 --> 00:05:37,480
かどうか、出てきます
プリンタを介して

128
00:05:37,480 --> 00:05:40,320
または画面やaudiallyなど。

129
00:05:40,320 --> 00:05:45,320
>> すべてのであれば、私たちは私たちのように持っています
コンピュータへの基本的な入力

130
00:05:45,320 --> 00:05:49,160
電気である、これだけ
電子は、中およびまたは外出します

131
00:05:49,160 --> 00:05:54,465
ので、どのように我々は、その入力を使用することができます
実際に情報を表現するには？

132
00:05:54,465 --> 00:05:57,090
言い換えれば、どのように我々は入手できますか
電気の簡単な流れから

133
00:05:57,090 --> 00:06:00,350
実際の表現に
数字または実際の文字

134
00:06:00,350 --> 00:06:03,620
画面上または実際の画像
実際の映画や電子メールや

135
00:06:03,620 --> 00:06:05,690
またはこれらの任意の数の
より高いレベルの概念、

136
00:06:05,690 --> 00:06:07,680
可能ならば、その時
何とか一日の終わり

137
00:06:07,680 --> 00:06:11,950
このように格納されるています
電子機械装置

138
00:06:11,950 --> 00:06:16,260
だけの簡単なingredients--を使用して、
電子は中と出てきますか？

139
00:06:16,260 --> 00:06:19,530
>> だから、それを思わ、
最も単純な形で、

140
00:06:19,530 --> 00:06:23,260
状態の唯一の種類
私は、私の世界を持っています

141
00:06:23,260 --> 00:06:25,350
条件をspeak--します
私world--のいずれかであります

142
00:06:25,350 --> 00:06:33,020
私は電子は、電気を流してきました
流れる、または私はオフ、というようにnot--行います。

143
00:06:33,020 --> 00:06:35,850
そして、のは、オンとオフ正式てみましょう
コンピュータ科学者のかもしれませんが、

144
00:06:35,850 --> 00:06:37,255
1と0だけで。

145
00:06:37,255 --> 00:06:39,880
ちょうどいくつかの任意のを説明してみましょう
しかし、それへの一貫した数。

146
00:06:39,880 --> 00:06:41,970
1は上の意味、0はオフを意味します。

147
00:06:41,970 --> 00:06:45,427
それとも、また、としてこれを見るかもしれません
上の真の手段と偽の手段。

148
00:06:45,427 --> 00:06:47,510
また、黒行うことができます
そして、白または赤と青。

149
00:06:47,510 --> 00:06:48,759
あなただけの2つの記述子が必要です。

150
00:06:48,759 --> 00:06:52,240
そして、コンピュータ科学者は、希望
一般的にちょうど0と1を使用します。

151
00:06:52,240 --> 00:06:58,980
>> だから、その場合は、私の唯一のアルファベット
0と1からなるが、どのように

152
00:06:58,980 --> 00:07:03,360
私はおそらく数を均等に得ることができます
コンピュータ、ましてや数3の2

153
00:07:03,360 --> 00:07:06,140
またはアルファベットの手紙
あるいは画像やムービー？

154
00:07:06,140 --> 00:07:08,910
どのように我々は一種のブートストラップありません
この基本原理から自分自身

155
00:07:08,910 --> 00:07:12,080
実際には0と1との
もっと面白いことを表していますか？

156
00:07:12,080 --> 00:07:14,430
>> さて、その質問を入れてみましょう
ちょっと保留

157
00:07:14,430 --> 00:07:17,520
そして、何かを考えます
うまくいけばお馴染みの、

158
00:07:17,520 --> 00:07:21,150
あなたは本当にについては考えていない場合でも、
それ10、20、30、40、50のための任意の詳細に

159
00:07:21,150 --> 00:07:22,520
より多くの年。

160
00:07:22,520 --> 00:07:24,780
これは何？

161
00:07:24,780 --> 00:07:28,050
あなたはそれをどのように発音しますか？

162
00:07:28,050 --> 00:07:30,770
ていないトリックの質問。

163
00:07:30,770 --> 00:07:32,950
数は、しかし、それは何ですか？

164
00:07:32,950 --> 00:07:34,842
1、2、3、または123。

165
00:07:34,842 --> 00:07:37,800
あなたが言ったかと私は言っています1、2、3、
それはそれを見る一つの方法だからです。

166
00:07:37,800 --> 00:07:39,870
1、2、3、それは配列情報
3つのシンボルの。

167
00:07:39,870 --> 00:07:42,005
それは私たちの写真です
今の言葉を持っています。

168
00:07:42,005 --> 00:07:44,880
そして、あなたは一種のそれらすべてを読めば
英語で一緒に、典型的な人間

169
00:07:44,880 --> 00:07:46,600
123を言うでしょう。

170
00:07:46,600 --> 00:07:48,350
そして、それは一種のです
より高いレベルの概念、

171
00:07:48,350 --> 00:07:50,340
合理的に大きな数のように感じています。

172
00:07:50,340 --> 00:07:51,490
>> しかし、どのように我々はそこに着くのですか？

173
00:07:51,490 --> 00:07:54,640
まあ、それはそれ以来しばらくかかるだろう
あなたは、このようにそれについて考えてきました

174
00:07:54,640 --> 00:07:56,680
しかし、戻って私の一日で、I
種類のこのことを学びました

175
00:07:56,680 --> 00:08:01,030
1の列として、10代
列、および100の列。

176
00:08:01,030 --> 00:08:06,400
Lakisaが言うように、それはあります
1、2、3、それはまた、123です。

177
00:08:06,400 --> 00:08:08,700
しかし、どのように我々は、から入手できますか
前者と後者？

178
00:08:08,700 --> 00:08:12,340
>> さて、あなたは、一般的に行うだろう
100の列は、私は1を持っています。

179
00:08:12,340 --> 00:08:14,794
だから、100倍の1を言ってようなものです。

180
00:08:14,794 --> 00:08:16,210
そして10のコラムで、私は2を持っています。

181
00:08:16,210 --> 00:08:18,464
だから、10回2を言ってようなものです。

182
00:08:18,464 --> 00:08:19,630
1のコラムでは、私は3を持っています。

183
00:08:19,630 --> 00:08:21,720
だから、1回3を言うようなものです。

184
00:08:21,720 --> 00:08:24,290
>> そして、私はこれらの事を追加した場合
一緒に、この、もちろん、

185
00:08:24,290 --> 00:08:27,470
100プラス10プラス3です。

186
00:08:27,470 --> 00:08:31,750
そして、私はこれを取得なぜああ、それはです
123のより高いレベルの概念。

187
00:08:31,750 --> 00:08:37,220
それはちょうど基本的な数学ですが、それによってこれらの
シンボルは、それらに重みを持っているあなたの場合

188
00:08:37,220 --> 00:08:39,620
、プレースホルダまたは列の値になります。

189
00:08:39,620 --> 00:08:42,090
そして、私はすべてを掛けたら、
アウト、私はこの番号を取得します。

190
00:08:42,090 --> 00:08:47,840
>> だから、あなたが知っているどのように多くの方法を話します
binary-- 0とコンピュータのよう1's--？

191
00:08:47,840 --> 00:08:50,410
OK、完璧な、誰もいない、または
あなたのどれもあなたが思うません。

192
00:08:50,410 --> 00:08:52,550
しかし、私はあなたを主張するだろう
実際に、すでにこのことを知っています。

193
00:08:52,550 --> 00:08:55,330
私達はちょうど一種の微調整する必要があります
私たちのメンタルモデルを少し。

194
00:08:55,330 --> 00:08:57,250
しかし、このプロセスはまったく同じです。

195
00:08:57,250 --> 00:09:01,460
>> 私はそこまでこの1を残してみようと
代わりに、一瞬のためにこれをプルダウン。

196
00:09:01,460 --> 00:09:05,060
コンピュータの世界では、
我々は唯一の0と1があります。

197
00:09:05,060 --> 00:09:07,240
ですからことだという
変更するために何をされて行くの？

198
00:09:07,240 --> 00:09:10,920
さて、私の人間の世界では、
十進法、12月の意味10、

199
00:09:10,920 --> 00:09:12,740
私は私の処分でどのように多くの数字を持っていますか？

200
00:09:12,740 --> 00:09:15,270

201
00:09:15,270 --> 00:09:16,540
10、右か？

202
00:09:16,540 --> 00:09:17,880
0から9までのコース。

203
00:09:17,880 --> 00:09:21,210
>> そして、私たちが持っている理由です
10の位と百の位。

204
00:09:21,210 --> 00:09:22,380
それはどこから来ていますか？

205
00:09:22,380 --> 00:09:24,430
まあ、これは、0のパワーに10あります。

206
00:09:24,430 --> 00:09:28,440
これは、10 1の電源10であります
2乗など。

207
00:09:28,440 --> 00:09:32,110
あなたは自分の列を乗じておきます
10によって、ちょうど1で発進

208
00:09:32,110 --> 00:09:33,700
ここでは右端の1インチ

209
00:09:33,700 --> 00:09:35,490
>> の世界ではそのように
コンピュータ、あなたの場合のみ

210
00:09:35,490 --> 00:09:39,600
binary--バイ意味を持っています
2--または0と1、ちょうど私達

211
00:09:39,600 --> 00:09:42,420
本当に変更する必要があります
その数学のベース。

212
00:09:42,420 --> 00:09:46,410
換言すれば、今、私達はちょうどよ
1の列を持っているとthe--

213
00:09:46,410 --> 00:09:51,270
これが2の列をgoing--はどこにあり、
4のカラム、そしておそらく超えました。

214
00:09:51,270 --> 00:09:52,250
何故ですか？

215
00:09:52,250 --> 00:09:55,650
まあ、これは0乗2です。

216
00:09:55,650 --> 00:09:57,270
これは2 1です。

217
00:09:57,270 --> 00:09:59,610
これには、2から2である、と。

218
00:09:59,610 --> 00:10:04,910
>> ここで、一方だから、私たちは1、10年代を持って、
100の1,000の10,000の10万の、1

219
00:10:04,910 --> 00:10:10,560
何百万人など、ここで
我々は、1、2、4、8、16、32、64を有します。

220
00:10:10,560 --> 00:10:13,950
あなただけの2を乗じておきます、
代わりに10を乗じておきます。

221
00:10:13,950 --> 00:10:16,780
だから今、目標であれば
手が表すことです

222
00:10:16,780 --> 00:10:20,240
唯一の0と1を使用して、数字、
我々はそこに着く方法を考えてみましょう。

223
00:10:20,240 --> 00:10:26,540
>> これは、もちろん、パターン0であります
0 0が、何数概念的

224
00:10:26,540 --> 00:10:27,490
それが表すのでしょうか？

225
00:10:27,490 --> 00:10:35,430
さて、4回0プラス2回0プラス
1回0は、ご一緒にそれらを追加してみましょう。

226
00:10:35,430 --> 00:10:40,030
4時間0は、当然、0であり、プラス2
時間0は、もちろん、0プラス1回0であります

227
00:10:40,030 --> 00:10:40,850
もちろん、0です。

228
00:10:40,850 --> 00:10:44,910
だから、ああ、これが表します
数私たち人間は、0として知っています。

229
00:10:44,910 --> 00:10:47,810
>> さて、今、非常にしてみましょう
すぐに早送り。

230
00:10:47,810 --> 00:10:53,600
私の代わりに表さないよ場合
0 0 0が、それでは、1 0 1をやらせます、

231
00:10:53,600 --> 00:10:57,010
それは如何でしょうかLakisa、以前、
ちょうど1 0 1それを発音でしょう。

232
00:10:57,010 --> 00:11:01,020
しかし、今、どのように我々はそれ以上にそれを取りますか
私たち人間が知っているかもしれない数を平準？

233
00:11:01,020 --> 00:11:04,220
だから、この番号は何ですか？

234
00:11:04,220 --> 00:11:06,060
これは、5、私たちは5のように知っている数です。

235
00:11:06,060 --> 00:11:06,870
>> まあ、それはなぜですか？

236
00:11:06,870 --> 00:11:09,620
さて、私たちは本当に一種の缶
念入りにそれを歩きます

237
00:11:09,620 --> 00:11:14,880
4回1、2回0、1回1。

238
00:11:14,880 --> 00:11:19,880
そう、一緒にそれらを追加します。
これは4プラス0プラス1です。

239
00:11:19,880 --> 00:11:21,577
そしてそれは、確かに、5です。

240
00:11:21,577 --> 00:11:24,660
だから、今、少し退屈になっています
何度も何度も計算を行います。

241
00:11:24,660 --> 00:11:26,300
しかし、このプロセスはまったく同じです。

242
00:11:26,300 --> 00:11:28,380
>> 持っている唯一のもの
私たちの世界に変更

243
00:11:28,380 --> 00:11:32,740
我々の列は1、2、4、8、16であることであり、
等、代わりに1、10、100、

244
00:11:32,740 --> 00:11:33,740
千。

245
00:11:33,740 --> 00:11:40,000
私たちのアルファベットを持っているので、それはちょうどです
ちょうど0〜1に0から9まで縮小し。

246
00:11:40,000 --> 00:11:50,851
>> ここで少しクイズ、どのようにと同じように、それで
あなたはバイナリで数7を表しますか？

247
00:11:50,851 --> 00:11:51,350
0？

248
00:11:51,350 --> 00:11:53,490
まあ、0、あなたは0 0 0意味ですか？

249
00:11:53,490 --> 00:11:58,140

250
00:11:58,140 --> 00:11:59,693
、再びカリーナをそれを言います。

251
00:11:59,693 --> 00:12:03,010

252
00:12:03,010 --> 00:12:03,550
パーフェクト。

253
00:12:03,550 --> 00:12:04,370
何故ですか？

254
00:12:04,370 --> 00:12:08,530
それは効果的に4プラス2プラス1です。

255
00:12:08,530 --> 00:12:09,580
とても良い。

256
00:12:09,580 --> 00:12:14,364
>> 我々は少しを表現するにはどうすればよいです
another--方法数は約2？

257
00:12:14,364 --> 00:12:18,360

258
00:12:18,360 --> 00:12:20,690
閉じるが、後方。

259
00:12:20,690 --> 00:12:21,660
だから、これは何ですか？

260
00:12:21,660 --> 00:12:26,290
4プラス1であるので、それは再び5です。

261
00:12:26,290 --> 00:12:28,310
>> だから私は申し訳ありませんwhat's--、カリーナ？

262
00:12:28,310 --> 00:12:29,220
0 1 0。

263
00:12:29,220 --> 00:12:34,762
0 1 0はあっても、理由再び、2となります
それは一種のあなたに飛び出すていない場合は、

264
00:12:34,762 --> 00:12:35,470
ただ計算を行います。

265
00:12:35,470 --> 00:12:40,390
4回0、0、2回
図1は、0 0 1 2倍です。

266
00:12:40,390 --> 00:12:42,830
だから、これは我々が2として知っている番号です。

267
00:12:42,830 --> 00:12:44,030
>> どのように数約8？

268
00:12:44,030 --> 00:12:51,240

269
00:12:51,240 --> 00:12:52,730
フム？

270
00:12:52,730 --> 00:12:53,330
良い。

271
00:12:53,330 --> 00:12:56,130
だから我々は一種の別のプレースホルダが必要です。

272
00:12:56,130 --> 00:12:59,570
私たちは、1 0 0 0を必要としています。

273
00:12:59,570 --> 00:13:02,280
そして、それは私たちの並べ替えのは事実です
古い学校の小数点システムの。

274
00:13:02,280 --> 00:13:05,280
どのように数千を表しているのですか？

275
00:13:05,280 --> 00:13:08,480
>> さて、あなたはあると思われます
種類のタフなスポットで、

276
00:13:08,480 --> 00:13:10,390
表現するためにあなたを求める場合
数千、

277
00:13:10,390 --> 00:13:14,960
あなたのように自分自身を与える場合もあるため
これらの9、​​これらの9、​​これらの0、

278
00:13:14,960 --> 00:13:18,730
その最大の数であるあなた
持っている、あなたはかなり千に取得できませんでした。

279
00:13:18,730 --> 00:13:26,920
だから千場合、あなただけの別のものを必要とします
位置、あなたは1 0 0 0を行うことができるように、

280
00:13:26,920 --> 00:13:29,460
エルゴ数千。

281
00:13:29,460 --> 00:13:34,200
>> だから今、のは、この種のをマッピングしましょう
バックハードウェアへの概念の説明、

282
00:13:34,200 --> 00:13:37,470
再び、入力がちょうどあった場所
この小さな電源ケーブル、電気

283
00:13:37,470 --> 00:13:39,300
入ってくると流出します。

284
00:13:39,300 --> 00:13:44,740
そして、その結果については、こちらからマッピングされます
そこに、よく、私たちは本当に何が必要なのでしょうか？

285
00:13:44,740 --> 00:13:49,460
さて、あなたは内であることを考えることができます
コンピュータ、電球の全体の束、

286
00:13:49,460 --> 00:13:50,450
可能ならば。

287
00:13:50,450 --> 00:13:52,040
彼らは本当にトランジスタと呼ばれています。

288
00:13:52,040 --> 00:13:55,121
トランジスタは単なるスイッチです
それは、オンまたはオフのいずれかとすることができます。

289
00:13:55,121 --> 00:13:56,870
だから、考えることができます
上だトランジスタ

290
00:13:56,870 --> 00:14:00,730
電気が流れることを可能にし、
停止などオフだトランジスタ

291
00:14:00,730 --> 00:14:02,170
流れるから電気。

292
00:14:02,170 --> 00:14:04,130
そして、いうより取ります
ここではライトオーバー、

293
00:14:04,130 --> 00:14:06,450
私はこの種をしない理由
新しい学校のスタイルの。

294
00:14:06,450 --> 00:14:11,360
だから、これは、懐中電灯1であるかもしれません
かろうじてしかし、上にあります。

295
00:14:11,360 --> 00:14:14,050
そして、これは0かもしれないが、今ではオフです。

296
00:14:14,050 --> 00:14:18,277
>> だから私は、この物理デバイスを使用して、
今バイナリシステムを表すことができます。

297
00:14:18,277 --> 00:14:19,235
私はちょうど2つの状態が必要です。

298
00:14:19,235 --> 00:14:21,660
これは、何が問題ではありません。
それがあるか、それが何であるかを色。

299
00:14:21,660 --> 00:14:25,920
重要なのは、私が持っているということです
1上の状態と別の状態をオフにします。

300
00:14:25,920 --> 00:14:30,605
だからここに私の携帯電話を使用して、どのように私を行います
0のように私たちが知っている数を表しますか？

301
00:14:30,605 --> 00:14:34,490

302
00:14:34,490 --> 00:14:38,550
または、等価的に何を置きます
数は今私を表現するのですか？

303
00:14:38,550 --> 00:14:39,810
0、デバイスがオフになっているからです。

304
00:14:39,810 --> 00:14:41,560
>> そして、私はこれを行う場合はどうなりますか？

305
00:14:41,560 --> 00:14:43,583
そして今、どのように私はやります
数2を表しますか？

306
00:14:43,583 --> 00:14:46,380

307
00:14:46,380 --> 00:14:50,930
私はあなたの電話を借りることができます
ここで、我々は昨日のように？

308
00:14:50,930 --> 00:14:58,490
私が表現したいので、もしだから、見てみましょう
数2、これは2番ですか？

309
00:14:58,490 --> 00:14:59,050
いいえ。

310
00:14:59,050 --> 00:15:02,250
何番私が誤っています
ここで表しますか？

311
00:15:02,250 --> 00:15:03,550
これは実際には数3です。

312
00:15:03,550 --> 00:15:05,008
>> だから、これは1、私はオフにしたいですか？

313
00:15:05,008 --> 00:15:09,634
よくor--黒電話、they're--場合
黒電話や白の電話？

314
00:15:09,634 --> 00:15:10,300
白い電話。

315
00:15:10,300 --> 00:15:17,020
だから私はこれをオフにし、我々場合
こっちラインそれを、私たちは1を持っています

316
00:15:17,020 --> 00:15:19,487
2の代わりにと
1の代わりに0。

317
00:15:19,487 --> 00:15:21,195
だから私は今です
数2を表します。

318
00:15:21,195 --> 00:15:24,680
これは、もちろん、数字であろう
3、これらのライトの今両方の理由

319
00:15:24,680 --> 00:15:25,350
上にあります。

320
00:15:25,350 --> 00:15:27,480
>> そして、私は、ここで停止します
それは理にかなっています

321
00:15:27,480 --> 00:15:31,100
私が表現したい場合
番号4または8以上、

322
00:15:31,100 --> 00:15:32,529
私はより多くの携帯電話を必要とするつもりです。

323
00:15:32,529 --> 00:15:33,820
しかし、それは起こっていることすべてです。

324
00:15:33,820 --> 00:15:37,800
だから、あなたが今までと聞いていた場合
A--の内側you--コンピュータに感謝

325
00:15:37,800 --> 00:15:42,269
数百万のトランジスタである、それはです
小さな小さなスイッチのちょうど百万人。

326
00:15:42,269 --> 00:15:44,310
そして、彼らは光じゃありません
オンとオフの球根、

327
00:15:44,310 --> 00:15:48,340
彼らは電気を許可するかのどちらか
どこかに流れたり、それを停止します。

328
00:15:48,340 --> 00:15:52,140
だからあなたの2があります
オンまたはオフ、オンまたはオフにstates--。

329
00:15:52,140 --> 00:15:55,730
>> だから我々は今と思われます
この能力を有すること

330
00:15:55,730 --> 00:16:00,590
この概念を表現すること
私たちは、実際のハードウェアにしたいと思います。

331
00:16:00,590 --> 00:16:05,520
しかし、私たちが今持っているすべての能力であります
数字を表すために、それは思われます。

332
00:16:05,520 --> 00:16:08,580
だから我々は、表現についてどのように行くのですか
アルファベットの文字、どの

333
00:16:08,580 --> 00:16:12,310
機能の次の一種のように感じます
現代のコンピュータに追加したいと思います

334
00:16:12,310 --> 00:16:14,280
あなたは数字を持っていたら？

335
00:16:14,280 --> 00:16:16,930
>> そして実際、あなたが考える場合
それ、歴史的に、コンピュータ

336
00:16:16,930 --> 00:16:19,426
役立つように本当に導入されました
数値計算器。

337
00:16:19,426 --> 00:16:21,300
もちろん、これらの
日、彼らはより多くを行います。

338
00:16:21,300 --> 00:16:23,799
彼らは、あなたを起動した場合でも
典型的には、1つまたは複数の単語を見ます。

339
00:16:23,799 --> 00:16:27,420
それでは、どのように言葉を表しますか、
あなたが持っているすべての場合は、再び、

340
00:16:27,420 --> 00:16:31,054
の終わりに電気
日、または等価的に0と1の？

341
00:16:31,054 --> 00:16:34,430

342
00:16:34,430 --> 00:16:35,690
>> うん。

343
00:16:35,690 --> 00:16:38,320
ええ、私は意味、私たちは一種のでした
この昨日何らかの形で、

344
00:16:38,320 --> 00:16:40,200
どこかの時点で、
私は私が任意に思います

345
00:16:40,200 --> 00:16:46,741
私たちが表現したい場合は、と言いました
文字A、私達はちょうど1ことを呼び出すことができます。

346
00:16:46,741 --> 00:16:49,990
これは、暗号化に関連していました
私たちは、コードのいくつかの種類を必要な場所で、

347
00:16:49,990 --> 00:16:51,160
マッピングのいくつかの種類。

348
00:16:51,160 --> 00:16:56,680
>> そのため、おそらくAはとして表現さ​​れます
1、及びBは、2のように表されます

349
00:16:56,680 --> 00:17:01,560
そしてZが表されます
例えば26、など。

350
00:17:01,560 --> 00:17:07,430
そして唯一の注意点は、私があればということです
私のメールの文字をエンコードします

351
00:17:07,430 --> 00:17:10,430
または私のテキストメッセージで
数字として、あなたのすべて

352
00:17:10,430 --> 00:17:12,640
使用することに同意する必要があります
規則の同じセット。

353
00:17:12,640 --> 00:17:14,619
そして実際、世界
まさにそれを行っています。

354
00:17:14,619 --> 00:17:18,040
>> 世界のシステムがあります
呼ばれるASCII、アメリカンスタンダード

355
00:17:18,040 --> 00:17:21,640
情報交換用コード、
これは、単にいくつかの年の決定であります

356
00:17:21,640 --> 00:17:25,720
前人間がいることを作りました
Aが、等しくないために起こっていることを決定しました

357
00:17:25,720 --> 00:17:32,260
1,2、および26、ならびにそれですforth--
少しdifferent--が、65、66、67。

358
00:17:32,260 --> 00:17:34,010
そして、私はプルアップします
一瞬のチャート。

359
00:17:34,010 --> 00:17:34,580
しかし、それは任意です。

360
00:17:34,580 --> 00:17:36,329
しかし、それは問題ではありません。
それは任意だという。

361
00:17:36,329 --> 00:17:38,620
世界はちょうど一貫しなければなりません。

362
00:17:38,620 --> 00:17:40,540
>> 現在、より最近、
手の込んだものがあります

363
00:17:40,540 --> 00:17:45,430
世界の親切なので、ユニコードと呼ばれます
コンピュータを発明した後に、実現の、

364
00:17:45,430 --> 00:17:50,977
よく以上があること
世界で256シンボル

365
00:17:50,977 --> 00:17:53,560
私たちが表現したいかもしれないこと、
場合は特に、あなたがご紹介

366
00:17:53,560 --> 00:17:58,420
アジア言語および他のシンボル
それはあなたよりも表現力が必要

367
00:17:58,420 --> 00:18:02,150
の最も古いバージョンに合うことができます
ASCIIと呼ばれたこのコードを、。

368
00:18:02,150 --> 00:18:05,250
だから、Unicodeは実際にできます
あなたはより多くの0と2を使用します。

369
00:18:05,250 --> 00:18:08,830
具体的には、あなたが聞いておきます
ワードバイト社会であっても、単に

370
00:18:08,830 --> 00:18:09,400
昨日。

371
00:18:09,400 --> 00:18:12,040
そして、バイトは何再び？

372
00:18:12,040 --> 00:18:14,840
>> バイトは何ですか？

373
00:18:14,840 --> 00:18:15,700
それはちょうど8ビットです。

374
00:18:15,700 --> 00:18:17,150
だからということは、本当に何を意味するのでしょうか？

375
00:18:17,150 --> 00:18:22,400
まあ、それは意味し、以前、我々があったとき
バイナリの話と私が使っていました

376
00:18:22,400 --> 00:18:28,010
私たちがした任意の3ビット
1の位binary--について話して、

377
00:18:28,010 --> 00:18:33,600
2の場所、および4のplace--よく、
バイトはちょうどあなたが話していることを意味し

378
00:18:33,600 --> 00:18:38,730
ない3の単位ではなく
4つ、5、6、7 8個

379
00:18:38,730 --> 00:18:46,910
これは私たちに8の場所を提供し、
16年代、32年代、64年代、および128の。

380
00:18:46,910 --> 00:18:50,010
>> 言い換えれば、ビットは、すべてではありません
そのメジャーの便利な単位、

381
00:18:50,010 --> 00:18:53,132
それはちょうど1ちっちゃいのようなものですので、
情報の一部、オンまたはオフにします。

382
00:18:53,132 --> 00:18:54,840
だから、何年か前に、
世界はちょうど決定します

383
00:18:54,840 --> 00:18:59,060
それはで話をするもう少し便利です
当時のバイト、8物事の用語。

384
00:18:59,060 --> 00:19:01,670
だからこうして生まれました
バイトの概念。

385
00:19:01,670 --> 00:19:03,640
そして、私たちはここに8ビットを有します。

386
00:19:03,640 --> 00:19:06,810
>> そして、それは同様のために、あまりにも、判明します
理由は、世界が年を決めました

387
00:19:06,810 --> 00:19:12,439
前のそのASCII文字を表現するために、
あなたは8ビットの単位を使用するつもりです。

388
00:19:12,439 --> 00:19:14,230
だから、そうでない場合でも、
多くは、あなたがしていることを必要とします

389
00:19:14,230 --> 00:19:18,130
いつもに8ビットを使用するつもり
アルファベットの文字を表します。

390
00:19:18,130 --> 00:19:20,950
そして、これは便利ですが、
よろしければ、次に理由

391
00:19:20,950 --> 00:19:28,720
0 0 0 1 1を持っているメッセージを受け取ります
1 1 0は、別の1 1 1 0 1 0が続きます

392
00:19:28,720 --> 00:19:33,320
0 1、あなたが16を受信した場合
ビット、世界はちょうどすることができます

393
00:19:33,320 --> 00:19:37,460
最初の8が1文字であることを前提としてい
第二8は、別の文字です。

394
00:19:37,460 --> 00:19:39,240
>> あるどのように多くの問題ではありません。

395
00:19:39,240 --> 00:19:41,460
それはちょうどことが重要
我々はすべて一貫しています

396
00:19:41,460 --> 00:19:42,950
我々はこれらのビットを解釈しているとき。

397
00:19:42,950 --> 00:19:44,377
そして、これは単にランダムでした。

398
00:19:44,377 --> 00:19:47,210
それが何かを意味するが、私はしませんでした
本当にそれが何を意味するかを考えます。

399
00:19:47,210 --> 00:19:49,620
>> だから、小さな白いうそです。

400
00:19:49,620 --> 00:19:51,990
もともと、ASCII
実際に7ビットのみを使用。

401
00:19:51,990 --> 00:19:54,180
そして、8番目のビットがあります
拡張ASCIIと呼ばれます。

402
00:19:54,180 --> 00:19:56,290
しかし、ポイントは、最終的には、同じです。

403
00:19:56,290 --> 00:19:58,850
一般的に、世界
8ビットに標準化しました。

404
00:19:58,850 --> 00:20:04,290
>> だから、これは少しであるように思われます
私は唯一の可能性があるため、制限

405
00:20:04,290 --> 00:20:07,970
、大文字のAを表し、
資本Z.を通じて資本B

406
00:20:07,970 --> 00:20:10,940
しかし、実際にはない、私が行けばto--
資源の束があります

407
00:20:10,940 --> 00:20:13,695
オンライン、例えば、
asciitable.com、この

408
00:20:13,695 --> 00:20:16,310
少しになるだろう
最初は圧倒的。

409
00:20:16,310 --> 00:20:18,910
しかし、私は指摘します
ここで重要なものです。

410
00:20:18,910 --> 00:20:24,090
>> これは単にbe--たまたま、私'LL
私はここの上に行けば、見てみましょうwalk--。

411
00:20:24,090 --> 00:20:27,990
ここでは小数であり、
列、数65。

412
00:20:27,990 --> 00:20:32,201
そして、右側の列の文字に
文字、Chr関数は、文字Aです。

413
00:20:32,201 --> 00:20:34,450
そして、あなたは今のところ、無視することができ、
途中ですべてのもの。

414
00:20:34,450 --> 00:20:36,769
これは、16進数で、
オクタル、およびHTMLコード。

415
00:20:36,769 --> 00:20:39,810
このサイトにちょうど投げしようとしています
一度あなたに多くの情報。

416
00:20:39,810 --> 00:20:42,970
しかし、我々は気にすべては10進です
列と文字列。

417
00:20:42,970 --> 00:20:46,190
>> したがって、このロジックにより、ものです
その世界数

418
00:20:46,190 --> 00:20:50,510
小文字を表すことを決定しましたか？

419
00:20:50,510 --> 00:20:52,230
うん、97。

420
00:20:52,230 --> 00:20:55,850
そして、ちょうど混乱します
潜在的に少し、

421
00:20:55,850 --> 00:21:03,715
どのような数世界が決定しました
番号1を表すのでしょうか？

422
00:21:03,715 --> 00:21:06,900

423
00:21:06,900 --> 00:21:10,910
右、we-- 49ので、それはそうです
ここでは、ダウン左下インチ

424
00:21:10,910 --> 00:21:12,320
>> 今、私はそれによって何を意味していますか？

425
00:21:12,320 --> 00:21:14,830
だから、ことが判明します
コンピュータシステムにおいて、

426
00:21:14,830 --> 00:21:16,840
一般的に存在します
基本的な違い

427
00:21:16,840 --> 00:21:19,920
数と文字の間。

428
00:21:19,920 --> 00:21:22,330
番号はものです、我々
ときに育って学びました

429
00:21:22,330 --> 00:21:23,830
私たちは、小学校にスーパー若かったです。

430
00:21:23,830 --> 00:21:25,110
それはあなたが数えるものです。

431
00:21:25,110 --> 00:21:30,220
しかし、文字だけの形状であり、
グリフは、そのように画面上に、話します。

432
00:21:30,220 --> 00:21:36,200
>> 今、私たち人間は一種の参照します
このようなもの。

433
00:21:36,200 --> 00:21:39,060
そして、私たちはああ、それは数2である、と言います。

434
00:21:39,060 --> 00:21:44,999
しかし、いや、それは見えるだけのシンボルです
我々は数2のように知っているような。

435
00:21:44,999 --> 00:21:46,790
そして、これがあります
根本的な違い

436
00:21:46,790 --> 00:21:50,340
実際の数字と文字の間。

437
00:21:50,340 --> 00:21:52,130
これは数あります。

438
00:21:52,130 --> 00:21:54,420
しかし、一般的に、中
コンピュータのコンテキスト

439
00:21:54,420 --> 00:21:56,809
あなたの代わりに表示される場合
このquoted--ような何か

440
00:21:56,809 --> 00:21:58,600
あなたはいつもしません
それが引用された参照してくださいする必要があり、

441
00:21:58,600 --> 00:22:01,474
しかしdiscussion--のためであれば
あなたは、番号の前後に引用符を参照してください、

442
00:22:01,474 --> 00:22:02,730
これは現在の文字です。

443
00:22:02,730 --> 00:22:06,330
したがって、この数2の下
コンピュータの内部フード

444
00:22:06,330 --> 00:22:12,220
パターンで表現されます
数を表すビットの

445
00:22:12,220 --> 00:22:14,850
50オンラインチャートによると。

446
00:22:14,850 --> 00:22:18,300
>> しかし、コンピュータの場合
ちょうどこの、これを見ています

447
00:22:18,300 --> 00:22:24,580
で表現されます
ビット0 0 0 0 0 0 1 0のパターン。

448
00:22:24,580 --> 00:22:29,595
一方、この文字があろう
実際、as--、今表現すること

449
00:22:29,595 --> 00:22:34,710
私は少しharder--を考えるようになったので、この
文字は0で表現されます

450
00:22:34,710 --> 00:22:39,080
0 1--は、私がここで何が必要なのでしょうか？

451
00:22:39,080 --> 00:22:44,450
0 0 1 1 0 0 1 0。

452
00:22:44,450 --> 00:22:45,480
どのように私はこれをしましたか？

453
00:22:45,480 --> 00:22:49,580
まあこれはあなたの場合、数50であり、
これらの列を使用して、それを掛け、

454
00:22:49,580 --> 00:22:53,530
これは、数2であるので、
この二分法が存在する理由です。

455
00:22:53,530 --> 00:22:55,850
>> そして、これはちょうどです
機能のための今ティーザー

456
00:22:55,850 --> 00:22:59,710
プログラミング言語に存在しています
我々は後に、今日簡単に触れるだろうと。

457
00:22:59,710 --> 00:23:01,950
プログラミング言語では、
あなたは、一般的に持っています

458
00:23:01,950 --> 00:23:04,495
常にではないが、物事
異なるデータ型を呼び出します。

459
00:23:04,495 --> 00:23:06,870
言い換えれば、programmer--
彼または彼女が書いている場合、

460
00:23:06,870 --> 00:23:11,150
プログラマは何で決定するために取得します
彼または彼女のデータを格納するためのフォーマット。

461
00:23:11,150 --> 00:23:14,120
することができますいずれかのストアデータとして
数2のような生の数字、。

462
00:23:14,120 --> 00:23:17,940
それとも、文字列として保存することができ、
または文字の並び

463
00:23:17,940 --> 00:23:21,550
あなたは、一般的に発現していること
あなたのプログラミング言語の引用符。

464
00:23:21,550 --> 00:23:25,230
>> あなたは物事を持つことができますcalled--
私はそれらを単純化し過ぎると呼ぶことにします

465
00:23:25,230 --> 00:23:28,870
数字そう本当numbers--こと
数2のような整数ではありません、

466
00:23:28,870 --> 00:23:31,310
しかし、4.56のような数字。

467
00:23:31,310 --> 00:23:33,490
だから、実数もできます
小数点を持っています、

468
00:23:33,490 --> 00:23:36,340
そのためには、異なる基本です
コンピュータ内のデータの一部。

469
00:23:36,340 --> 00:23:41,920
そして、あなたも持つことができます
まだ他のデータ型。

470
00:23:41,920 --> 00:23:45,810
だから、実際のちょうどお誘いです
設計上の決定の最も簡単な

471
00:23:45,810 --> 00:23:50,960
プログラマは可能性があること
ボンネットの下に作ります。

472
00:23:50,960 --> 00:23:52,925
>> だから、何か質問はまだ？

473
00:23:52,925 --> 00:23:57,320

474
00:23:57,320 --> 00:23:59,860
それでは、作ってみましょう
このもう少し本当。

475
00:23:59,860 --> 00:24:02,120
このハードウェアではありません
使用中のそんなにもう。

476
00:24:02,120 --> 00:24:07,420
しかし、おそらくこの部屋の中で最も全員
で育ち、まだハードドライブを使用しています

477
00:24:07,420 --> 00:24:08,010
何らかの方法で。

478
00:24:08,010 --> 00:24:10,100
>> のたとえ最も
私たちのラップトップはもはやありません

479
00:24:10,100 --> 00:24:15,900
このように動作するデバイスを持って、
代わりに、一般的に今日のラップトップ

480
00:24:15,900 --> 00:24:18,590
ソリッドステートドライブを有します
可動部のありません。

481
00:24:18,590 --> 00:24:22,840
そして、それはより高価になる傾向があります、
残念ながら、しかし、少し速いです

482
00:24:22,840 --> 00:24:27,230
そして、はるかに高速、多くの場合、よくA--
その理由の一つです。

483
00:24:27,230 --> 00:24:28,980
そしてまた、それはしていません
多くの熱を発生します。

484
00:24:28,980 --> 00:24:31,680
それはですので、それは、小さくすることができます
一般的に正味の正。

485
00:24:31,680 --> 00:24:35,030
>> しかし、これは私たちがマップすることができます
もう少し具体的にどのような

486
00:24:35,030 --> 00:24:38,460
私たちは、0の時の話をしていると
物理デバイスに今1のレベル。

487
00:24:38,460 --> 00:24:40,810
それは私が話をするための一つのことです
換算で約0と1の

488
00:24:40,810 --> 00:24:43,990
私の携帯電話のまたは抽象的観点から
オンとオフされるスイッチ。

489
00:24:43,990 --> 00:24:45,340
しかし、どのようなハードドライブはどうですか？

490
00:24:45,340 --> 00:24:48,495
あなたのラップトップでは、あなたは古いを持っている場合
1、またはデスクトップコンピュータで、

491
00:24:48,495 --> 00:24:51,200
または確かにサーバーで
あなたが持っている今日、

492
00:24:51,200 --> 00:24:53,070
持っているハードドライブ
スペースのテラバイト、

493
00:24:53,070 --> 00:24:55,560
スペースの4テラバイト、
よくそれは何を意味するのでしょうか？

494
00:24:55,560 --> 00:24:59,560
>> 1ハードドライブ
宇宙手段のテラバイト

495
00:24:59,560 --> 00:25:03,890
1000000000000バイトがあります
何とかその中の、

496
00:25:03,890 --> 00:25:10,450
内部または同等8000000000000ビット。

497
00:25:10,450 --> 00:25:16,240
1テラバイトは8テラビットだろう
または1000000000000ビット、どの

498
00:25:16,240 --> 00:25:19,330
あなたは、ハードを持っている場合を意味します
ドライブ、あなたは何とか持っています

499
00:25:19,330 --> 00:25:22,400
または他兆0の
それの1の内側。

500
00:25:22,400 --> 00:25:25,360
そして、私たちはただ見てみる場合
ハードドライブの任意の画像

501
00:25:25,360 --> 00:25:30,110
代表的には、これは難しいものです
ドライブは、典型的には、内部のようになります。

502
00:25:30,110 --> 00:25:32,600
>> それは、あまりにも、一種のようなものです
古い蓄音機プレーヤー

503
00:25:32,600 --> 00:25:35,350
しかし、一般的で
内部に複数のレコード、そう

504
00:25:35,350 --> 00:25:38,270
複数speak--します
プラッタは、それらが呼び出されているように、

505
00:25:38,270 --> 00:25:42,259
金属円板、および
その後、少し読取ヘッド、

506
00:25:42,259 --> 00:25:43,550
古いレコードプレーヤーのような多くの。

507
00:25:43,550 --> 00:25:46,589
そして、その読取ヘッドが戻り、
前後と何とかビットを読み取ります。

508
00:25:46,589 --> 00:25:49,380
とにも、これらのプラッタ上に何
私たち人間は、それらを見ることができないものの、

509
00:25:49,380 --> 00:25:52,757
実際に、またはこの絵のいずれかで、
小さな小さな磁性粒子があります。

510
00:25:52,757 --> 00:25:55,090
そして、あなたは長いきた場合でも、
電気がどのように機能するかを忘れて、

511
00:25:55,090 --> 00:25:57,550
磁性粒子
それは一般的に帯電しています

512
00:25:57,550 --> 00:26:00,570
北の端と南を持っています
そのように北と南end--。

513
00:26:00,570 --> 00:26:03,000
それで世界がちょうど
いくつかの時間前に決定しました

514
00:26:03,000 --> 00:26:06,570
、その本質的磁気プロトコルの場合
このように整列され、南北、

515
00:26:06,570 --> 00:26:07,610
それでは、1ことを呼びましょう。

516
00:26:07,610 --> 00:26:10,470
それは代わりに、南北の場合は、
ちょうど0ことを呼ぶことにしましょう​​。

517
00:26:10,470 --> 00:26:13,350
だからあなたがでている場合
あなたの処分兆

518
00:26:13,350 --> 00:26:16,300
小さな小さな磁気
particles--とうまくいけば、

519
00:26:16,300 --> 00:26:18,740
ハードウェアの創意工夫で
周りの人々を反転させるため

520
00:26:18,740 --> 00:26:24,450
あなたがしたい場合は、fit--見るように
0の全体の束を表し、あなた

521
00:26:24,450 --> 00:26:28,120
わずか8磁性粒子を必要とします
すべてのこのような整列。

522
00:26:28,120 --> 00:26:30,330
そして、あなたが表現したい場合
8 1の、あなただけの

523
00:26:30,330 --> 00:26:33,170
整列8磁性粒子を必要とします
バックのように背中合わせにします。

524
00:26:33,170 --> 00:26:35,515
>> 私は、とはどういう意味ですか
磁性粒子？

525
00:26:35,515 --> 00:26:38,390
率直に言って、これらすべての年後に、
まだ私の心に来るもの

526
00:26:38,390 --> 00:26:42,139
もしあれば、この男であります
この事で育ちました。

527
00:26:42,139 --> 00:26:43,930
これがためにlittle--です
これらのunfamiliar-- A

528
00:26:43,930 --> 00:26:47,810
小さな子供の頃のおもちゃいます
ここでは、この毛のない男を持っています

529
00:26:47,810 --> 00:26:51,690
それはすべてのこれらの小さな小さな黒いを持っています
それが付属して磁性粒子。

530
00:26:51,690 --> 00:26:53,930
そして、その赤いスティックを使用して、
これだけの磁石であり、

531
00:26:53,930 --> 00:26:58,460
並べ替えの彼に口ひげを与えることができますか
彼に眉毛や髪か何か。

532
00:26:58,460 --> 00:27:00,710
だから実際には、我々はズームインするとき、
、例えば、この中

533
00:27:00,710 --> 00:27:02,950
あなたはこのゲームの一種であります
ウーリーウィリーで遊ぶことができます。

534
00:27:02,950 --> 00:27:06,570
>> そして、これは、これらの言うことだけです
はるかに大きな磁性粒子であります

535
00:27:06,570 --> 00:27:09,890
ハードドライブ上に実際にあるよりも、
そして、はるかに少ない磁性粒子。

536
00:27:09,890 --> 00:27:11,640
しかし、それでは、実際に見てみましょう
あなたが持っていない場合

537
00:27:11,640 --> 00:27:14,720
中に小さな磁性粒子
どのようにあなたが実際にすることができ、ハードドライブ、

538
00:27:14,720 --> 00:27:19,090
データを表現するためにそれらを使用しています。

539
00:27:19,090 --> 00:27:20,070
>> [ビデオ再生]

540
00:27:20,070 --> 00:27:24,190
>> -TheハードドライブはどこにあなたのPCです
店舗の恒久的なデータのほとんどを。

541
00:27:24,190 --> 00:27:27,170
それを行うには、データ
沿ってRAMから移動します

542
00:27:27,170 --> 00:27:31,720
教えソフトウェア信号に
ハードそのデータを格納する方法を駆動します。

543
00:27:31,720 --> 00:27:36,570
ハードドライブ回路は、それらを翻訳します
電圧変動への信号。

544
00:27:36,570 --> 00:27:40,880
これらは、順番に、ハードドライブのを制御します
いくつかの移動の一部parts--移動

545
00:27:40,880 --> 00:27:43,440
部品は、現代のコンピュータに残さ。

546
00:27:43,440 --> 00:27:47,650
>> 信号の一部は、モータを制御します
これは金属被覆プラッタを回転させます。

547
00:27:47,650 --> 00:27:50,980
データは、実際に
これらのプラッタ上に保存されています。

548
00:27:50,980 --> 00:27:56,250
他の信号は、読み取り/書き込みヘッドを移動させます
プラッタ上のデータを読み書きします。

549
00:27:56,250 --> 00:28:00,100
この機械はとても正確です
人間の髪の毛がいなくてもできること

550
00:28:00,100 --> 00:28:02,800
ヘッドの間を通過
そして、プラッタを回転。

551
00:28:02,800 --> 00:28:04,887
しかし、それはすべて素晴らしい速度で動作します。

552
00:28:04,887 --> 00:28:05,470
[END PLAYBACK]

553
00:28:05,470 --> 00:28:06,780
そして、あなたはで見ることができます
ビデオの最後尾、

554
00:28:06,780 --> 00:28:08,340
複数のプラッタは一般的にあります。

555
00:28:08,340 --> 00:28:10,250
そしてその結果、読み取りヘッド
ただトップを読んでいません。

556
00:28:10,250 --> 00:28:12,458
それは一種の3かのようなものです
4以上の読み取りヘッド

557
00:28:12,458 --> 00:28:14,920
それは次のように移動し、
同時にデータを読み出します。

558
00:28:14,920 --> 00:28:17,407
>> だから、多くのがあります
複雑さとタイミングのソート

559
00:28:17,407 --> 00:28:18,740
それは、ハードドライブに関与しています。

560
00:28:18,740 --> 00:28:21,920
そして、事は本当にくそ回転しています
高速なので、多くの複雑さがあります。

561
00:28:21,920 --> 00:28:25,220
しかし、それでは、少し深くズームインしましょう​​と
これらの磁性粒子がどこにあるかを参照してください。

562
00:28:25,220 --> 00:28:27,370
そして、どのように我々は彼らを取得していますされています。

563
00:28:27,370 --> 00:28:28,750
>> [ビデオ再生]

564
00:28:28,750 --> 00:28:31,830
>> 私たちに-LEtの外観
ちょうどスローモーションで見ました。

565
00:28:31,830 --> 00:28:35,230
ときに電気の短いパルス
読み取り/書き込みヘッドに送られ、

566
00:28:35,230 --> 00:28:39,000
それは小さい電磁にフリップ
ほんの一瞬のために。

567
00:28:39,000 --> 00:28:41,390
磁石が作成されます
変更するフィールド、

568
00:28:41,390 --> 00:28:44,600
小さな、小さなの極性
金属粒子の部分

569
00:28:44,600 --> 00:28:46,960
そのコート各プラッタの表面。

570
00:28:46,960 --> 00:28:50,020
これらの小さなパターンシリーズ
ディスク上のチャージアップ領域

571
00:28:50,020 --> 00:28:54,590
データの単一ビットを表します
コンピュータで使用される二進数システム。

572
00:28:54,590 --> 00:28:57,510
>> さて、現在は1に送られた場合
読み取り/書き込みヘッドを介し方法、

573
00:28:57,510 --> 00:28:59,899
領域は、一方向に偏光されます。

574
00:28:59,899 --> 00:29:01,940
現在はに送信された場合
反対方向、

575
00:29:01,940 --> 00:29:04,020
分極が反転します。

576
00:29:04,020 --> 00:29:06,440
どのようにハードディスクからデータを取得するのですか？

577
00:29:06,440 --> 00:29:08,190
ただ、プロセスを逆にします。

578
00:29:08,190 --> 00:29:10,440
だから、上の粒子です
電流を得るディスク

579
00:29:10,440 --> 00:29:12,260
読み取り/書き込みヘッドに移動します。

580
00:29:12,260 --> 00:29:14,580
一緒に数百万を入れて
これらの磁化のセグメント、

581
00:29:14,580 --> 00:29:16,220
あなたがファイルを持っています。

582
00:29:16,220 --> 00:29:21,030
>> 今、単一のファイルの断片であってもよいです
すべてのドライブのプラッタに散らばって、

583
00:29:21,030 --> 00:29:24,060
種類の混乱など
あなたの机の上に書類の。

584
00:29:24,060 --> 00:29:27,590
だから、特別な余分なファイルが保持します
すべてがどこにあるのトラック。

585
00:29:27,590 --> 00:29:30,440
あなたが持っていたくありません
そんな感じ？

586
00:29:30,440 --> 00:29:31,290
>> [END PLAYBACK]

587
00:29:31,290 --> 00:29:36,260
>> だから、おそらく、ですが、そこに示唆されています
削除の昨日からそのトピック。

588
00:29:36,260 --> 00:29:38,380
あなたが削除した場合
ファイル、昨日私たちが言いました

589
00:29:38,380 --> 00:29:41,020
コンピュータは、実際にはないこと
何、あなたが何かをドラッグ

590
00:29:41,020 --> 00:29:44,110
ごみ箱やゴミ箱へ？

591
00:29:44,110 --> 00:29:45,150
それはちょうどそれを忘れました。

592
00:29:45,150 --> 00:29:47,540
しかし、0と1、
磁粉

593
00:29:47,540 --> 00:29:50,640
それは、赤と青のように見えます
ここでは物事、またはここに私の腕、

594
00:29:50,640 --> 00:29:52,350
ハードドライブ上に残っています。

595
00:29:52,350 --> 00:29:56,090
>> それでsoftware--が存在します
Nortonユーティリティと往年

596
00:29:56,090 --> 00:29:58,159
および他のより近代的な
そのsoftware--だけ

597
00:29:58,159 --> 00:30:01,200
探して全体のハードドライブをスキャンします
これらすべての0年代と1の時、それ理由

598
00:30:01,200 --> 00:30:06,890
判明しているほとんどのファイルのフォーマット - 
Word文書、Excelファイル、画像、

599
00:30:06,890 --> 00:30:10,380
すべてfiles--ビデオは、特定の持っています
その中で共通している模様。

600
00:30:10,380 --> 00:30:12,550
すべてのビデオファイルかもしれません
別のビデオであっても、

601
00:30:12,550 --> 00:30:14,870
しかし、最初の数を
ビットは、通常は同じです。

602
00:30:14,870 --> 00:30:16,790
または最後の数ビット
通常は同じです。

603
00:30:16,790 --> 00:30:19,910
>> そして、非常に高い確率で、
あなたはそれらのパターンを探すことができます。

604
00:30:19,910 --> 00:30:23,700
そのファイルは、忘れてしまった場合でも、
あなたは、高い確率で言うことができます

605
00:30:23,700 --> 00:30:28,460
しかしこれは、Word文書のように見えます
それを回復し、それをアン忘れることができます、

606
00:30:28,460 --> 00:30:28,990
可能ならば。

607
00:30:28,990 --> 00:30:32,330
そしてそうそれはあなたが回復することができます方法です
いずれかの偶然されていたデータ

608
00:30:32,330 --> 00:30:36,560
削除されたり削除されたり、意図的に
どのような目的のために削除されました。

609
00:30:36,560 --> 00:30:42,530
>> これとは対照的に、安全な削除は何を行います
このような絵の文脈で？

610
00:30:42,530 --> 00:30:44,059
正確には、それらすべてがランダムになります。

611
00:30:44,059 --> 00:30:46,350
だから、一種の一部を移動させます
それら上下それらのいくつか、

612
00:30:46,350 --> 00:30:49,433
それらのいくつかは変更されませんし、
一般的にそれのうちランダムノイズを行い、

613
00:30:49,433 --> 00:30:52,960
あるいはもしかしたらのすべてを作ります
それらの0またはそれらの1のすべて。

614
00:30:52,960 --> 00:30:56,350
そして、あまりにも一般的にできること
離れてあなたのデータをスクラブ。

615
00:30:56,350 --> 00:31:00,160
>> それでは、問題に今戻りましょう
計算の考え方、それによっての

616
00:31:00,160 --> 00:31:03,270
私たちは式の入力を備えています。

617
00:31:03,270 --> 00:31:06,390
そして、アルゴリズムが与え
あなたが最終的に出力します。

618
00:31:06,390 --> 00:31:09,270
私たちは、入力に今焦点を当て、
出力、今ので、私

619
00:31:09,270 --> 00:31:12,159
請求我々はの方法を持っています
入力および出力を表します。

620
00:31:12,159 --> 00:31:13,450
私達はちょうどバイナリを使用するつもりです。

621
00:31:13,450 --> 00:31:15,910
>> そして、どんなに私たち
今日表現したいです、

622
00:31:15,910 --> 00:31:20,230
それは数字または文字のかどうか
電話帳でその千

623
00:31:20,230 --> 00:31:23,210
末尾の画像や動画、または
一日のために、それはすべて0と1をです。

624
00:31:23,210 --> 00:31:26,640
そして、私もこのかかわらず、と主張しています
ちょうど0で超簡単な世界であります

625
00:31:26,640 --> 00:31:28,240
そして1の、我々は自分自身を構築することができます。

626
00:31:28,240 --> 00:31:32,210
そして、我々はの一例を見てきました
これまでの文字です。

627
00:31:32,210 --> 00:31:35,615
>> それでは、このようになりまし焦点を当ててみましょう
真ん中の成分、アルゴリズム。

628
00:31:35,615 --> 00:31:38,190
とのは、これに戻りましょう
マイク・スミスの例。

629
00:31:38,190 --> 00:31:41,689
だから、確かにこの電話帳、中、
私たちはもうあまり使用しないでください、

630
00:31:41,689 --> 00:31:42,980
解決すべき問題があります。

631
00:31:42,980 --> 00:31:45,040
私たちは、マイク・スミスのような人を見つけたいです。

632
00:31:45,040 --> 00:31:47,520
>> そして、私はマイクを見つけるために何をするのでしょうか？

633
00:31:47,520 --> 00:31:51,197
まあ、私はちょうどこれを開くことができます
この本は、最初のページから開始します

634
00:31:51,197 --> 00:31:52,780
そして、実感、ああ、私はAセクションにいますよ。

635
00:31:52,780 --> 00:31:53,510
マイクはありません。

636
00:31:53,510 --> 00:31:55,510
私はスミスのためのSセクションを必要としています。

637
00:31:55,510 --> 00:31:58,192
だから一度に1ページをめくる保ちます。

638
00:31:58,192 --> 00:32:00,900
私はこれがすべてであることをふりをしてみましょう
ホワイトページとイエローページではなく、

639
00:32:00,900 --> 00:32:02,910
我々は見つけるつもりはないので、
とにかくイエローページでマイク。

640
00:32:02,910 --> 00:32:04,034
しかし、私はホワイトページにいますよ。

641
00:32:04,034 --> 00:32:05,340
そして今、私はBセクションにいますよ。

642
00:32:05,340 --> 00:32:06,810
私はまだ彼を見つけていません。

643
00:32:06,810 --> 00:32:08,890
だから私は一度に1ページをめくる保ちます。

644
00:32:08,890 --> 00:32:10,130
>> これはアルゴリズムです。

645
00:32:10,130 --> 00:32:12,440
これは、命令のセットです
いくつかの問題を解決します。

646
00:32:12,440 --> 00:32:16,480
言い換えれば、見て
ページ、マイクはそれではない場合は、

647
00:32:16,480 --> 00:32:20,020
ページをめくると、繰り返し
何度も何度も何度も、

648
00:32:20,020 --> 00:32:21,760
あなたがそれをやっているように、理想的に見下ろしています。

649
00:32:21,760 --> 00:32:24,120
したがって、このアルゴリズムは、
このプロセスは、正しいですか？

650
00:32:24,120 --> 00:32:27,400

651
00:32:27,400 --> 00:32:28,830
>> ごめんなさい。

652
00:32:28,830 --> 00:32:30,056
いいえ、私はいくつかのNOSを聞きます。

653
00:32:30,056 --> 00:32:33,250

654
00:32:33,250 --> 00:32:36,125
OK、それはええis--、
それは確かに面倒です。

655
00:32:36,125 --> 00:32:39,000
私場合と同様に、我々はここにすべての日になるでしょう
この速度でマイクを探し続けます。

656
00:32:39,000 --> 00:32:41,430
しかし、私はそれが正しいだと主張しましょう​​。

657
00:32:41,430 --> 00:32:43,850
それは愚かだが、それは正しいです。

658
00:32:43,850 --> 00:32:47,209
>> 一日の終わりには、長い間、それがかもしれないとして、
彼がそこにいた場合、私はマイクを見つけるだろう、取ります

659
00:32:47,209 --> 00:32:48,250
そして、私は注意を払っています。

660
00:32:48,250 --> 00:32:50,230
そして、私は最終的に彼のページに到達します。

661
00:32:50,230 --> 00:32:52,890
そして、私はあまりにも遠く取得する場合、場合
私はTのセクションを取得し、

662
00:32:52,890 --> 00:32:55,900
その後、私は少し最適化することができます
そして、だけ言って、HM、すべて完了。

663
00:32:55,900 --> 00:32:57,980
私も無駄にする必要はありません。
Zさんに行く時間。

664
00:32:57,980 --> 00:33:00,010
しかし、これは非常にあります
よろしければ線形アプローチ、

665
00:33:00,010 --> 00:33:03,370
、非常にソートの左から右になります
アプローチ、直線。

666
00:33:03,370 --> 00:33:05,560
そして、その正しいが、遅いです。

667
00:33:05,560 --> 00:33:09,250
>> だから私は、ソート、小学校から覚えています
一年生から最適化、

668
00:33:09,250 --> 00:33:13,756
私はしませんカウントする方法を学んだところ
ものではなく、twos--ので2​​、4、6による。

669
00:33:13,756 --> 00:33:15,630
それは多くの困難に、です
行うが、理論的には、それはです

670
00:33:15,630 --> 00:33:20,149
faster-- 8、10、12、14、など。

671
00:33:20,149 --> 00:33:21,190
どのようにそのアルゴリズムは？

672
00:33:21,190 --> 00:33:23,150
それは、より効率的ですか？

673
00:33:23,150 --> 00:33:23,880
それは速いですか？

674
00:33:23,880 --> 00:33:25,365
>> 観客：それは効率的です。

675
00:33:25,365 --> 00:33:28,560
>> DAVIDマラン：うん、だからだdef--です
文字通り倍の速度、私を想定し

676
00:33:28,560 --> 00:33:30,170
私の指でアップトリップません。

677
00:33:30,170 --> 00:33:32,294
ので、それは、二倍の速さです
私は2を介して回転してい

678
00:33:32,294 --> 00:33:36,560
かつての代わりに1でページが、それはです
潜在的に正しいで、なぜ理由？

679
00:33:36,560 --> 00:33:37,852
>> 観客：あなたはいくつかをスキップしています。

680
00:33:37,852 --> 00:33:41,185
DAVIDマラン：右、マイクが発生した場合どのような
私は後でだときに多分sandwiched--します

681
00:33:41,185 --> 00:33:44,370
電話帳に、マイクがあることを起こります
これらの2つのページの間に挟まれ、

682
00:33:44,370 --> 00:33:46,720
そして私はちょうど盲目的にそれをスキップ。

683
00:33:46,720 --> 00:33:48,490
だから我々はそこに少し修正が必要です。

684
00:33:48,490 --> 00:33:51,290
私はTのセクションをヒットすると、I
ただ自信を持って言うことができません、

685
00:33:51,290 --> 00:33:52,420
我々はマイク・スミスを見つけられませんでした。

686
00:33:52,420 --> 00:33:53,770
私はおそらく戻って倍増する必要があります。

687
00:33:53,770 --> 00:34:00,210
または実際には、かつて私が誰かに届きます
スミスのためのS-Nの代わりに、S-Mという名前の、

688
00:34:00,210 --> 00:34:02,790
すぐに、私は倍増でした
バック、多分彼のため

689
00:34:02,790 --> 00:34:03,900
前のページにありました。

690
00:34:03,900 --> 00:34:05,070
>> しかし、私ははるかに戻って倍増する必要はありません。

691
00:34:05,070 --> 00:34:08,030
理論的には、私は右のそれを行う場合
時間は、私はちょうど1つ前のページに移動します。

692
00:34:08,030 --> 00:34:10,139
だから、それだけで1つの余分なステップを追加しています。

693
00:34:10,139 --> 00:34:13,070
だから私は、二倍の速行ってきました
それは私に1つの余分なページを要しました。

694
00:34:13,070 --> 00:34:14,699
しかし、それはネットの勝利のように感じています。

695
00:34:14,699 --> 00:34:17,230
>> しかし、これはどのようにほとんどの人ではありません
この部屋は、この問題を解決するだろう。

696
00:34:17,230 --> 00:34:20,313
何多分、典型的な人でしょう
数年前にマイク・スミスを見つけるために、いますか？

697
00:34:20,313 --> 00:34:22,900

698
00:34:22,900 --> 00:34:24,800
うん、マイクを見つけることができませんでした。

699
00:34:24,800 --> 00:34:27,190
私は何をしますか？

700
00:34:27,190 --> 00:34:31,027
だから、少し近づくが、私はやります
電話帳について真であるものknow--？

701
00:34:31,027 --> 00:34:32,110
観客：それはシーケンシャルです。

702
00:34:32,110 --> 00:34:32,760
DAVIDマラン：それはシーケンシャルです。

703
00:34:32,760 --> 00:34:33,750
それはアルファベット順です。

704
00:34:33,750 --> 00:34:36,540
そして、私はMセクションにいるそうだとすれば、
マイクは右に明らかにされ、

705
00:34:36,540 --> 00:34:39,949
私は文字通り涙することができます
half--で問題

706
00:34:39,949 --> 00:34:44,360
それはthat--涙よりも、通常は簡単です
問題半分にし、それを捨てて、

707
00:34:44,360 --> 00:34:47,627
今、私はだ問題を抱えているように、
もはや千大変でしたpages--、

708
00:34:47,627 --> 00:34:50,210
私は私が実際に引き裂いたと思うので、
これがないtime--電話帳

709
00:34:50,210 --> 00:34:52,219
1,000ページが、500。

710
00:34:52,219 --> 00:34:54,750
>> だから問題は、大きなとして文字通り半分です。

711
00:34:54,750 --> 00:34:58,170
そして、それはので、かなり魅力的です
私の以前のアルゴリズムと、バージョン

712
00:34:58,170 --> 00:35:02,870
1と2、私が唯一の問題を作っていました
小さい1ページ、小さい方の2つのページ

713
00:35:02,870 --> 00:35:03,470
一度に。

714
00:35:03,470 --> 00:35:07,230
今のに対し、私はそれを500製
一度にすべてのページに小さいです。

715
00:35:07,230 --> 00:35:10,089
>> [OK]を、今、カリムは提案しています
私は右半分に行くこと。

716
00:35:10,089 --> 00:35:12,380
だから私は、大きく分けて行くつもりです
真ん中に、与えるか、または取ります。

717
00:35:12,380 --> 00:35:15,185
そして、私は数学的にこれをしなかった場合、
私は真ん中に右に行くことができます。

718
00:35:15,185 --> 00:35:17,060
そして今、私は、ああ、実現します
私はTセクションにいますよ。

719
00:35:17,060 --> 00:35:18,280
私は実際に行き過ぎました。

720
00:35:18,280 --> 00:35:21,670
>> しかし、私は、再び、引き裂くことができます
半分の問題は、それを捨てます。

721
00:35:21,670 --> 00:35:23,330
そして、私のバイトとして大きくはありません。

722
00:35:23,330 --> 00:35:28,780
それだけで、何を、256ページや250です
ページ、与えるか、または今取ります。

723
00:35:28,780 --> 00:35:31,570
しかし、それはまだ道よります
1ページまたは2ページより。

724
00:35:31,570 --> 00:35:33,345
>> そして今、私は真ん中にほぼ行きます。

725
00:35:33,345 --> 00:35:35,330
ああ、私は今、非常に十分行きませんでした。

726
00:35:35,330 --> 00:35:37,880
だから私は、繰り返し、繰り返し、繰り返し
私はうまくいけばよされるまで、繰り返し

727
00:35:37,880 --> 00:35:40,360
1ページだけを残し。

728
00:35:40,360 --> 00:35:44,000
>> だから場合は、質問を誘うI
およそ1,000ページで開始し、

729
00:35:44,000 --> 00:35:47,340
それは私を取るんでしたどのように多くのステップ
私のアルゴリズムのバージョン1と？

730
00:35:47,340 --> 00:35:50,420
まあ、マイクはSである場合
セクション、最悪の場合には、

731
00:35:50,420 --> 00:35:52,630
それはにかなり近いです
アルファベットの最後。

732
00:35:52,630 --> 00:35:56,559
電話帳は、1,000ページを持っているのであれば、
私は、1,000ページ内にマイクを見つけることができます

733
00:35:56,559 --> 00:35:57,100
ギブオアテイク。

734
00:35:57,100 --> 00:35:59,750
多分それは800かそこらのようなものだが、
それは千にかなり近いです。

735
00:35:59,750 --> 00:36:01,680
>> 一方、第二中
アルゴリズム、どのように多くの

736
00:36:01,680 --> 00:36:06,840
ページには、私がかもしれ最大限になります
マイク・スミスを探すために必要な？

737
00:36:06,840 --> 00:36:09,970
そこ1,000ページですが、私はよ
一度に2をやって。

738
00:36:09,970 --> 00:36:13,045
右、なぜなら、500ishのような最大ので、
私は、全体の電話帳を通って行けば、

739
00:36:13,045 --> 00:36:14,170
その時点で、私は停止することができます。

740
00:36:14,170 --> 00:36:16,669
しかし、私はによっていくつかをオフに剃ることができます
ちょうどTセクションで停止。

741
00:36:16,669 --> 00:36:19,880
しかし、それは最悪の場合500ページにあります。

742
00:36:19,880 --> 00:36:24,710
>> だから何回私は分割することができます
再び半分に1,00oページの電話帳

743
00:36:24,710 --> 00:36:30,450
そして再びagain--から
125から250に500千？

744
00:36:30,450 --> 00:36:32,250
どのくらい私は1つのページをヒットする前に？

745
00:36:32,250 --> 00:36:35,510

746
00:36:35,510 --> 00:36:36,370
うん、それは約10です。

747
00:36:36,370 --> 00:36:40,780
丸めなどに応じて、それはです
合計必要が投入される約10ページ

748
00:36:40,780 --> 00:36:43,290
または電話帳を引き裂かする必要があります。

749
00:36:43,290 --> 00:36:44,710
>> だから、かなり強力です。

750
00:36:44,710 --> 00:36:48,170
私たちは、千ページの問題で開始しました
これらの物語のすべての3インチ

751
00:36:48,170 --> 00:36:51,850
しかし、最初のアルゴリズムで、それ
連れて行ってくれた、最悪の場合、千ページ

752
00:36:51,850 --> 00:36:52,740
マイクを見つけることになります。

753
00:36:52,740 --> 00:36:55,590
第2のアルゴリズム、500
マイクを見つけるためのページ。

754
00:36:55,590 --> 00:36:58,480
第3のアルゴリズム、マイクを見つけるために10ページ。

755
00:36:58,480 --> 00:37:00,230
そして、それはさらにです
強力なあなたが考えるとき

756
00:37:00,230 --> 00:37:01,860
反対側のシナリオの種類について。

757
00:37:01,860 --> 00:37:05,680
電話会社は、次のことを仮定
今年は多分、一緒に2つの町を併合します

758
00:37:05,680 --> 00:37:08,550
そして、電話帳が突然です
代わりに、このことの、この厚いです、

759
00:37:08,550 --> 00:37:12,470
そのように2000ページの代わりに、千。

760
00:37:12,470 --> 00:37:15,640
さて、私の最初のアルゴリズムが探して
2000ページの電話帳でマイク・スミス、

761
00:37:15,640 --> 00:37:21,460
最悪の場合、取るつもりです
来年どのように多くのページになりますか？

762
00:37:21,460 --> 00:37:24,800
>> 電話帳は、2,000ページです
so--よく、ないもう一つ。

763
00:37:24,800 --> 00:37:29,540
電話帳には2倍のように厚い場合
最初のアルゴリズム、最初のアルゴリズム、

764
00:37:29,540 --> 00:37:30,380
2000、右か？

765
00:37:30,380 --> 00:37:33,005
最悪の場合、マイクは本当にです
本の最後に近く、

766
00:37:33,005 --> 00:37:34,110
それは、2000ページのターンです。

767
00:37:34,110 --> 00:37:38,070
で行く第2のアルゴリズム
補数、1,000ページなど。

768
00:37:38,070 --> 00:37:41,490
>> しかし、どのように私の第三では約
最も最近のアルゴリズム？

769
00:37:41,490 --> 00:37:44,950
電話会社が倍増した場合
1,000〜2,000ページ数、

770
00:37:44,950 --> 00:37:47,770
私は涙何回必要
半分にその本は、マイクを見つけるには？

771
00:37:47,770 --> 00:37:48,710
>> AUDIENCE：ちょうど1。

772
00:37:48,710 --> 00:37:51,001
>> DAVIDマラン：ちょうど1より、
1ページの涙であるため、

773
00:37:51,001 --> 00:37:53,270
私は、文字通り分割することができます
あなたは意志た場合や、征服、

774
00:37:53,270 --> 00:37:57,410
半分撮影でその問題
それのうち大規模な一口。

775
00:37:57,410 --> 00:38:01,420
そして、これは一例です
間違いなく効率とアルゴリズム

776
00:38:01,420 --> 00:38:04,100
これで私たちのすべては、
直感的におなじみの一種。

777
00:38:04,100 --> 00:38:07,780
しかし、それは同じように正しいです
私の他のアルゴリズムとして、

778
00:38:07,780 --> 00:38:09,630
その微調整のためにと
第2のアルゴリズム、

779
00:38:09,630 --> 00:38:11,290
それはとてもはるかに効率的です。

780
00:38:11,290 --> 00:38:14,030
>> そして、実際には、どのようなコンピュータ
科学者、または順番にプログラマ、

781
00:38:14,030 --> 00:38:17,580
書き込み時に一般的に行うだろう
コー​​ドは把握しようとしています、

782
00:38:17,580 --> 00:38:19,960
すべての権利、私はしたくありません
ちょうど正しいことするためのプログラム、

783
00:38:19,960 --> 00:38:23,220
私もそれが効率的になりたいです
よく問題を解決します。

784
00:38:23,220 --> 00:38:26,450
今日の現実の世界で想像し、
Googleのインデックス、検索のような

785
00:38:26,450 --> 00:38:31,580
彼らならば数十億のページのように、想像
猫を見つけるために、最初のアルゴリズムを使用

786
00:38:31,580 --> 00:38:34,620
見pages--億のうち、
そのデータベースの最初のページ、

787
00:38:34,620 --> 00:38:37,700
第二、第三、見ているだけ
猫のために、猫を探しています。

788
00:38:37,700 --> 00:38:40,350
すなわち、それは思わかなりくそ遅いです。

789
00:38:40,350 --> 00:38:43,170
彼らは代わりに何かを使用することができます
これは、バイナリサーチと呼ばれます

790
00:38:43,170 --> 00:38:47,420
2を意味しな​​いcoincidence-- biは、我々は、ありません
half--で、2で何かを分割しておきます

791
00:38:47,420 --> 00:38:50,205
彼らはバイナリ検索を使用することができます
そしておそらく、さらに高速の猫を見つけます

792
00:38:50,205 --> 00:38:51,830
または何でもそれはあなたが探しているです。

793
00:38:51,830 --> 00:38:54,125
>> そして率直に言って、あります
でも愛好家のアルゴリズム

794
00:38:54,125 --> 00:38:56,250
それはちょうどよりもはるかに多くを行います
半分に物事を分割します

795
00:38:56,250 --> 00:38:58,180
順序で情報をすばやく見つけることができます。

796
00:38:58,180 --> 00:39:00,880
そして、私たちは少し話をしましょう
昼食後、それらの今日は。

797
00:39:00,880 --> 00:39:02,640
だから、私はちょうどこれを表現してみましょう。

798
00:39:02,640 --> 00:39:05,380
私たちは、に行く必要はありません
任意の数学または実際の数値。

799
00:39:05,380 --> 00:39:07,070
私たちは、抽象的にこのことについて話すことができます。

800
00:39:07,070 --> 00:39:11,580
>> あなたなら、私はちょうど提案してみましょう
今の議論を持ちました

801
00:39:11,580 --> 00:39:13,491
エンジニアと
このアルゴリズムを提案

802
00:39:13,491 --> 00:39:15,490
あなたが作るしようとしています
計算された意思決定、

803
00:39:15,490 --> 00:39:17,285
多分理由
エンジニアはあなたが、あなたに言います

804
00:39:17,285 --> 00:39:19,910
私が実装することができるか、知っています
2分などに線形探索。

805
00:39:19,910 --> 00:39:21,150
ただそれだけのことです。

806
00:39:21,150 --> 00:39:24,790
バイナリサーチは、空想ではありませんが、
10分のように私を取るために起こっています

807
00:39:24,790 --> 00:39:26,650
そう5回限り。

808
00:39:26,650 --> 00:39:30,900
>> 貿易があっても用語で、ここにあります
書くためにどのようなソフトウェアを決定します。

809
00:39:30,900 --> 00:39:34,760
あなたは単純なアルゴリズムを書きますか、
これは、ちょうどあなたに2分かかりますか？

810
00:39:34,760 --> 00:39:39,880
それとも、より多くの時間を過ごしています、10分、
手の込んだアルゴリズムを書きますか？

811
00:39:39,880 --> 00:39:43,540
どのように質問のようなものを決めるのですか？

812
00:39:43,540 --> 00:39:46,710
それとも、それはもう少し本当の作ることができます。

813
00:39:46,710 --> 00:39:50,610
私はそれを取るために起こっている私の上司に伝えます
私のいずれか1週間または10週間

814
00:39:50,610 --> 00:39:52,490
実装します
このようにソフトウェアを、どのように

815
00:39:52,490 --> 00:39:56,103
あなたはどの決めるん
緑色光にアルゴリズム？

816
00:39:56,103 --> 00:39:56,603
カリム？

817
00:39:56,603 --> 00:39:57,550
>> 聴衆：観客、私は推測します。

818
00:39:57,550 --> 00:39:57,960
>> DAVIDマラン：観客。

819
00:39:57,960 --> 00:39:59,460
あなたは視聴者が何を意味するのですか？

820
00:39:59,460 --> 00:40:03,460
>> 観客：それが起こっている場合
ユーザが使用します

821
00:40:03,460 --> 00:40:09,050
誰[聞こえない]ユーザーが[聞こえません]。

822
00:40:09,050 --> 00:40:11,232
しかし、それはあなたがしている何かあれば
自分だけのためにやって

823
00:40:11,232 --> 00:40:13,946
問題を容易にするために、
[聞こえない]より速く。

824
00:40:13,946 --> 00:40:16,820
DAVIDマラン：うん、それは迅速だと
汚い、それを記述するための良い方法です。

825
00:40:16,820 --> 00:40:18,695
実際には、あなたがしている場合
私の時間の多くを記述する

826
00:40:18,695 --> 00:40:23,630
大学院で、これにより、しばしば、
私は意識的に不正なコードを書きましたso--

827
00:40:23,630 --> 00:40:26,490
少なくとも、それがどのように私です
意識的にそうit--を合理化し、

828
00:40:26,490 --> 00:40:30,670
なぜなら私は、コードを書いていたにもかかわらず、
それは、実行するのが比較的遅かったです

829
00:40:30,670 --> 00:40:33,750
私は、コード自体を記述することができました
わずか数分を費やして、かなり速いです

830
00:40:33,750 --> 00:40:35,107
または時間ない日。

831
00:40:35,107 --> 00:40:37,190
そして、それは私が、判明しました
たまに寝する必要がありました。

832
00:40:37,190 --> 00:40:41,270
だから私のコードは、8を必要とした場合でも、
実行するための時間、それは大丈夫ですだけでなく、

833
00:40:41,270 --> 00:40:42,850
私はちょうどそれが実行中にスリープ状態に行きますよ。

834
00:40:42,850 --> 00:40:46,350
>> だから一度、私はこれはと思いました
でも、私は明らかにかかわらず、非常に賢いです

835
00:40:46,350 --> 00:40:48,990
非常にゆっくりと私の博士号を通って働きました。

836
00:40:48,990 --> 00:40:52,270
しかし、その逆はあります
つまり、私が書いていた場合は、ソフトウェア

837
00:40:52,270 --> 00:40:55,930
他の人のための人
、よく、私よりももっと大事

838
00:40:55,930 --> 00:40:59,580
それらを持つことへの8時間待ちます
その検索結果を取り戻します

839
00:40:59,580 --> 00:41:01,350
すべてが魅力的ではありません。

840
00:41:01,350 --> 00:41:04,090
そして、そのように多くの時間を費やし
ソフトウェアを書くために、フロントアップ

841
00:41:04,090 --> 00:41:07,300
それは、より多くの、より効率的です
私たちの第3のアルゴリズムのように、

842
00:41:07,300 --> 00:41:09,780
おそらく、時間をかけてユーザーに利益をもたらします。

843
00:41:09,780 --> 00:41:12,710
だから、本当にオーバー依存します
時間は、これらのコストはどのようにを追加します。

844
00:41:12,710 --> 00:41:14,960
あなたが書くことにするつもりなら
一度それを使用するためのソフトウェア、

845
00:41:14,960 --> 00:41:17,240
おそらく同様に行う可能性があります
彼らが言うように、迅速かつ汚いです。

846
00:41:17,240 --> 00:41:18,198
ただ、それを一緒に投げます。

847
00:41:18,198 --> 00:41:20,560
それは困るコードです
あなた、それはとても悪いです、

848
00:41:20,560 --> 00:41:23,860
しかし、それは正しく仕事を取得し、
にもかかわらず、それは効率的ではありません。

849
00:41:23,860 --> 00:41:27,200
逆に、あなたはより多くの時間を費やします
何かに、それだけで権利を取得。

850
00:41:27,200 --> 00:41:30,730
そして、時間をかけて償却
時間の初期費用

851
00:41:30,730 --> 00:41:34,330
あなたが続ければ、おそらく価値があります
一般的なケースのために最適化します。

852
00:41:34,330 --> 00:41:37,620
>> そして実際、それは内のテーマです
プログラミング、またはコンピュータサイエンスより

853
00:41:37,620 --> 00:41:41,390
一般に、最適化しようと
珍しくない場合について

854
00:41:41,390 --> 00:41:44,390
しかし、どのような操作の共通case--
何度も何度も起こるだろうか？

855
00:41:44,390 --> 00:41:47,730
あなたは十億を持っているつもりなら
あなたのウェブサイト上で検索するユーザーの、

856
00:41:47,730 --> 00:41:52,030
おそらく余分を費やす必要があります
アップフロントより良いソフトウェアを書く週間、

857
00:41:52,030 --> 00:41:53,670
すべてのユーザーが利益を得るようにします。

858
00:41:53,670 --> 00:41:57,840
さて、このAをキャプチャしてみましょう
少し絵ではなく、そんなに

859
00:41:57,840 --> 00:41:58,610
数値。

860
00:41:58,610 --> 00:42:01,680
>> だからここだけの古い学校のチャートです。

861
00:42:01,680 --> 00:42:04,260
そして、私はこれが時間であることとしましょう​​。

862
00:42:04,260 --> 00:42:06,660
そして、それはwhat--問題ではありません。
実際には、いや、ない時間。

863
00:42:06,660 --> 00:42:08,320
それでは、他の軸上にそれを置いてみましょう。

864
00:42:08,320 --> 00:42:15,700
それでは、これは時間であることとしましょう​​、
これは、問題の大きさです。

865
00:42:15,700 --> 00:42:17,830
>> そして、コンピューター科学者
一般的に呼ぶかもしれません

866
00:42:17,830 --> 00:42:20,820
このちょうどn個。 nが似ています
当社のゴーへの変数、

867
00:42:20,820 --> 00:42:26,351
nが数nの数であり、それはです
あなたが持っているものは何でも入力の数。

868
00:42:26,351 --> 00:42:28,100
したがって、この場合、nは
ページ数。

869
00:42:28,100 --> 00:42:30,150
だから、1,000かもしれません
場合は、私たちは語りました。

870
00:42:30,150 --> 00:42:31,969
>> だから時間は、メジャーのいずれかの単位とすることができます。

871
00:42:31,969 --> 00:42:32,760
たぶん、それは第二のです。

872
00:42:32,760 --> 00:42:33,410
たぶん、それは日です。

873
00:42:33,410 --> 00:42:34,590
たぶん、それはページターンのようなものです。

874
00:42:34,590 --> 00:42:35,215
関係ない。

875
00:42:35,215 --> 00:42:38,840
あなたがいること、でカウントするようにしたいものは何でも
等価的に時間やコストになります。

876
00:42:38,840 --> 00:42:42,400
>> それとだから、非常に最初の
アルゴリズム、私の場合、例えば、

877
00:42:42,400 --> 00:42:45,920
千ページの電話帳を持っていました、
私は、そこにドットを描画するつもりです

878
00:42:45,920 --> 00:42:51,450
それが1,000ページだ場​​合、それがかかったので、
およそ千ページが与えるか、または取る、になります。

879
00:42:51,450 --> 00:42:54,100
そして、私が持っていた場合
2000ページの電話帳、

880
00:42:54,100 --> 00:42:57,200
そして、私は2番目を引くつもりです
なぜなら2000ページのために、ここではドット、

881
00:42:57,200 --> 00:42:59,810
それが2000秒のようなものです
またはページがオンまたはものは何でも。

882
00:42:59,810 --> 00:43:02,480
それで、私が以前に言ったとき、それはです
直線関係の種類、

883
00:43:02,480 --> 00:43:06,020
私が望んでいたので、それは、意図的でした
後で線を描画する権利now-- on--。

884
00:43:06,020 --> 00:43:07,770
それはストレートのようなものです
ライン関係。

885
00:43:07,770 --> 00:43:10,180
あなたがする場合は傾きが、1月1日です。

886
00:43:10,180 --> 00:43:14,630
>> 一方、第2のアルゴリズム
あなたは1,000ページを持っている場合は、言いました

887
00:43:14,630 --> 00:43:17,680
あなたは第2のアルゴリズムを使用していました、
私は2のによってカウントところ、ターニング

888
00:43:17,680 --> 00:43:22,564
一度に2つのページ、私が描くべき
私のオリジナルドット以下または上記ドット？

889
00:43:22,564 --> 00:43:23,450
>> AUDIENCE：以下。

890
00:43:23,450 --> 00:43:27,992
>> DAVIDマラン：以下、我々が見たようにので、
それは多くの時間のように短い時間、半分がかかります。

891
00:43:27,992 --> 00:43:29,950
だから、ドットが半分であるべき
他と高いです。

892
00:43:29,950 --> 00:43:33,330
こっちと同じ取引、このドット
おそらく大体があるはずです。

893
00:43:33,330 --> 00:43:39,666
だから、私の第2のアルゴリズム、同様に、
時間とともに線形の関係を有します。

894
00:43:39,666 --> 00:43:41,990
そして、我々はそのように描くことができます。

895
00:43:41,990 --> 00:43:45,950
>> だから今、3番目と最後の
このアルゴリズムは、描画には少し難しいです。

896
00:43:45,950 --> 00:43:49,530
しかし、直感的に、私は千を持っている場合
私の第3のアルゴリズムを使用したページ、

897
00:43:49,530 --> 00:43:52,340
それが唯一の10のステップのように私を取る必要があります。

898
00:43:52,340 --> 00:43:57,500
そして、私は2000ページを持っている場合
私の第3のアルゴリズムと、

899
00:43:57,500 --> 00:44:01,570
それは私にはない10を取る必要があります
ステップが、11、もう一つだけ。

900
00:44:01,570 --> 00:44:03,610
だから我々はかろうじてこれを参照するつもりです。

901
00:44:03,610 --> 00:44:06,010
>> そして、それは場合は、判明します
私は、私は、この上にズームイン

902
00:44:06,010 --> 00:44:09,320
効果を誇張するつもりは、
その線の形状、最終的に、

903
00:44:09,320 --> 00:44:11,990
ストレートline--ではありません
それがあった確かにあれば、なぜなら、

904
00:44:11,990 --> 00:44:15,390
それはより多くのようになります。
それは実際には曲線ですothers--

905
00:44:15,390 --> 00:44:19,265
我々はズームイン場合には、起こっています
ずっとこのように見えます。

906
00:44:19,265 --> 00:44:21,670
よくIt--、[OK]を、この部分を無視します。

907
00:44:21,670 --> 00:44:25,330
それは私のペンは角度のつもりでした。

908
00:44:25,330 --> 00:44:29,000
それは常にある曲線です
いつも、いつも、いつも、増加

909
00:44:29,000 --> 00:44:32,100
増加が、唯一かろうじて。

910
00:44:32,100 --> 00:44:36,260
>> そして、そのように時間をかけて、あなたが持っています
このようなより多くのです関係。

911
00:44:36,260 --> 00:44:37,540
それはほとんどまっすぐに見えます。

912
00:44:37,540 --> 00:44:40,330
しかし、それは今までとてもゆっくりと増加します。

913
00:44:40,330 --> 00:44:44,780
しかし、ほとんどすべてのポイントのために沿って
あなたのx軸、横軸、

914
00:44:44,780 --> 00:44:46,550
それはそれらの他のラインよりも低いです。

915
00:44:46,550 --> 00:44:49,930
>> だから、これは関係あるかもしれません
nは、それによってあなたがnページを持っている場合、

916
00:44:49,930 --> 00:44:51,100
あなたのn秒かかります。

917
00:44:51,100 --> 00:44:53,320
これは、関係のn / 2であるかもしれません。

918
00:44:53,320 --> 00:44:56,710
あなたはnページを持って、それが取ります
あなたのn / 2秒、などの多くの半分。

919
00:44:56,710 --> 00:45:00,590
そして、これは対数的です
関係、これ

920
00:45:00,590 --> 00:45:08,920
あなたが思い出すならば、n個のキャプチャのベース2を記録
成長のこのような、いわば。

921
00:45:08,920 --> 00:45:12,000
だから、これは神聖なの一種であります
これらの3の中で聖杯

922
00:45:12,000 --> 00:45:15,940
ここでは、それだけで以前よりもずっとだから
効率的な、しかし間違いなく、より複雑な

923
00:45:15,940 --> 00:45:18,610
実装します。

924
00:45:18,610 --> 00:45:20,510
質問は？

925
00:45:20,510 --> 00:45:26,220
>> まあ、私はこれを行う、聞かせてみましょう
私は、テキストウィンドウを開きます

926
00:45:26,220 --> 00:45:29,100
ちょうど私たちがしようとすることができます
ここで何かを正式。

927
00:45:29,100 --> 00:45:32,410
だから私は今、先に行くとしましょう
このアルゴリズムを実装します

928
00:45:32,410 --> 00:45:35,170
コー​​ド内のマイク・スミスを見つけるための、
可能ならば、擬似コードコード。

929
00:45:35,170 --> 00:45:36,620
私は、JavaやC ++を使用するつもりはありません。

930
00:45:36,620 --> 00:45:38,610
私は、ソートの使用するつもりです
私たちの英語のような構文、

931
00:45:38,610 --> 00:45:40,151
一般的に擬似コードのコードを呼び出します。

932
00:45:40,151 --> 00:45:41,660
ここで、私は空のウィンドウを持っています。

933
00:45:41,660 --> 00:45:48,180
そして、私は非常にのステップ1を言っています
最初のアルゴリズムは、電話帳をピックアップです。

934
00:45:48,180 --> 00:45:51,740
ステップ2は、最初のページに開いた本です。

935
00:45:51,740 --> 00:45:58,080
ステップ3を見ます
マイク・スミスのためのページです。

936
00:45:58,080 --> 00:46:02,740
ページの場合は、マイクを呼び出します。

937
00:46:02,740 --> 00:46:11,640
他のページをめくると、手順3に進みます。

938
00:46:11,640 --> 00:46:13,590
完了、の言わせて。

939
00:46:13,590 --> 00:46:18,110
>> そしてそれは非常に完璧ではあり​​ません、
これは私たちが一瞬で表示されます。

940
00:46:18,110 --> 00:46:21,050
しかし、ここでは何を考えてみましょう
私がここで紹介してきた概念。

941
00:46:21,050 --> 00:46:24,450
そう1,2及び3ステップ
かなり多くの動詞があります。

942
00:46:24,450 --> 00:46:26,544
彼らは声明をしている、actions--これを行います。

943
00:46:26,544 --> 00:46:28,710
そして、そのようにプログラミングで
言語、我々は一般的だろう

944
00:46:28,710 --> 00:46:32,349
彼らにステートメントを呼び出しますか、
ファンクションまたはプロシージャ、

945
00:46:32,349 --> 00:46:33,640
物事の任意の数のそれらを呼び出します。

946
00:46:33,640 --> 00:46:35,460
しかし、彼らはこれを行うactions--だけです。

947
00:46:35,460 --> 00:46:40,370
>> ステップ4は、根本的に異なっています
なぜなら、それは質問をするようなものです。

948
00:46:40,370 --> 00:46:42,400
我々が親切だと言っています
道路の分岐点での。

949
00:46:42,400 --> 00:46:48,000
マイクがページ上にある場合は、呼び出し
彼ので、あなたがする場合は、左折。

950
00:46:48,000 --> 00:46:52,170
そうでない場合、戻っていくつかに行きます
その他当ページ - というか、申し訳ありませんが、

951
00:46:52,170 --> 00:46:56,650
これは、他のいくつかのステップに戻ります
ループ構文のいくつかの種類を誘導します。

952
00:46:56,650 --> 00:46:59,530
そして、私たちは何度も何度も何度もそれを行います。

953
00:46:59,530 --> 00:47:01,300
>> そして実際に、あなたは何を知っていますか？

954
00:47:01,300 --> 00:47:01,800
うん。

955
00:47:01,800 --> 00:47:04,704

956
00:47:04,704 --> 00:47:09,010
他の書籍停止の終わりにあれば。

957
00:47:09,010 --> 00:47:11,624
だから我々は第三の種類を必要とします
条件、あなたのために

958
00:47:11,624 --> 00:47:14,290
ページの広告を回す維持することはできません
nauseum、最終的に、私はだろうから

959
00:47:14,290 --> 00:47:15,320
本の最後にヒット。

960
00:47:15,320 --> 00:47:18,546
そして、プログラムにバグがあるかもしれません
そのシナリオを予想していません。

961
00:47:18,546 --> 00:47:21,420
そして私はちょうどああ、待って、実現しました
分は、私が第3のシナリオが必要です。

962
00:47:21,420 --> 00:47:23,900
私は、ページのうちだ場合は、I
本当にただ停止する必要があります。

963
00:47:23,900 --> 00:47:25,330
それ以外の場合は未定義です。

964
00:47:25,330 --> 00:47:29,260
何が私が続ければ起こるだろう
ページをめくると戻って言って、

965
00:47:29,260 --> 00:47:31,810
これは、ときにコンピュータであります
あなたが打ったとき、フリーズやクラッシュ

966
00:47:31,810 --> 00:47:34,160
そのようないくつかの予期せぬ事態。

967
00:47:34,160 --> 00:47:37,280
>> さて、どのようなマイクについて
スミスの第三algorithm--

968
00:47:37,280 --> 00:47:43,150
電話帳をピックアップし、
にfirst--する開いた本

969
00:47:43,150 --> 00:47:48,640
いや、ない最初のページこの時、
だろうと、よく、ああmiddle--します

970
00:47:48,640 --> 00:47:49,640
第2のアルゴリズムです。

971
00:47:49,640 --> 00:47:50,590
ちょうど第三にスキップしてみましょう。

972
00:47:50,590 --> 00:47:50,930
>> 聴衆：ああ、すみません。

973
00:47:50,930 --> 00:47:51,971
>> DAVIDマラン：それは結構です。

974
00:47:51,971 --> 00:47:58,590
ちょうどthird--オープンにスキップしてみましょう
真ん中に、今マイク・スミスを探します。

975
00:47:58,590 --> 00:48:02,300
ページの場合は、マイクを呼び出します。

976
00:48:02,300 --> 00:48:04,910
そして、私たちがここで言いたいのですか？

977
00:48:04,910 --> 00:48:06,134
他に何？

978
00:48:06,134 --> 00:48:10,620

979
00:48:10,620 --> 00:48:12,370
私たちは、これを表現することができます
任意の数の方法インチ

980
00:48:12,370 --> 00:48:13,369
全く正しい答えはありません。

981
00:48:13,369 --> 00:48:20,819

982
00:48:20,819 --> 00:48:23,735
[OK]を、そうでない場合は、もう一度、私たちのようにする必要があり
be-- OK、我々は、二つに分割したいん

983
00:48:23,735 --> 00:48:25,630
私たちは、左に行くか右に行きたいですか？

984
00:48:25,630 --> 00:48:29,560
どのように我々はその概念を表現するのですか？

985
00:48:29,560 --> 00:48:31,790
まあ、マイクの場合には、はい、それは公正です。

986
00:48:31,790 --> 00:48:35,050
しかし、[OK]を、ので、それは実際には良い点です。

987
00:48:35,050 --> 00:48:35,550
それはいいです。

988
00:48:35,550 --> 00:48:36,924
私たちは、このロジックと一緒に行くしておこう。

989
00:48:36,924 --> 00:48:38,182
そう - 

990
00:48:38,182 --> 00:48:39,810
>> AUDIENCE：半分以下。

991
00:48:39,810 --> 00:48:40,560
DAVIDマラン：うん。

992
00:48:40,560 --> 00:48:49,820
だから、他のページがある場合、我々は少ない、と言うでしょう
スミスより、スミスの左側に、

993
00:48:49,820 --> 00:48:52,220
見てみましょうthen--、あります
この複雑にするつもり？

994
00:48:52,220 --> 00:49:01,885
他のページには、スミスの前に来る場合、
その半分を捨てて、半分に涙？

995
00:49:01,885 --> 00:49:05,643

996
00:49:05,643 --> 00:49:09,140
>> 聴衆：私は思いました
それは、[聞こえない]でした。

997
00:49:09,140 --> 00:49:11,650
>> DAVIDマラン：私は答えの両方を聞いています。

998
00:49:11,650 --> 00:49:12,431
>> AUDIENCE：左。

999
00:49:12,431 --> 00:49:14,430
DAVIDマラン：OK、投げます
離れLakisaとして、左半分

1000
00:49:14,430 --> 00:49:19,700
左は、以前に述べました
その後、半分、種類のI

1001
00:49:19,700 --> 00:49:23,940
ちょうど私が右に行くto--行きたいです。

1002
00:49:23,940 --> 00:49:27,380
または同等に、と私は少しを作りました
ここで最初の混乱のビット、

1003
00:49:27,380 --> 00:49:30,760
私は効果的にしたいです
もう一度手順2に進み、

1004
00:49:30,760 --> 00:49:38,270
ここで、オープンmiddle--またはopen--へ
ええ、ちょうど真ん中にページ、と言うのを聞かせて。

1005
00:49:38,270 --> 00:49:39,020
そして、これはそれを修正します。

1006
00:49:39,020 --> 00:49:39,936
それはもはやブックません。

1007
00:49:39,936 --> 00:49:42,210
これは、本の半分だけです
真ん中に非常に開いているページ。

1008
00:49:42,210 --> 00:49:44,010
>> else--はほとんどありました。

1009
00:49:44,010 --> 00:49:54,000
ページがスミスの後に来る場合は、他のステップ6、
半分に引き裂く、離れて右半分を投げ、

1010
00:49:54,000 --> 00:49:55,680
その後、ステップ2に進みます。

1011
00:49:55,680 --> 00:49:58,920

1012
00:49:58,920 --> 00:50:05,230
それ以外の場合は、第四のシナリオを終了します
我々がオンに残されたページがありません。

1013
00:50:05,230 --> 00:50:06,394
だから我々はこれをクリーンアップすることができます。

1014
00:50:06,394 --> 00:50:07,560
そして、我々はこれをクリーンアップする必要があります。

1015
00:50:07,560 --> 00:50:10,656
これはあなたの場合、非常に擬似コードのコードです
意志、非常に高いレベルの記述。

1016
00:50:10,656 --> 00:50:12,280
しかし、それは一般的なアイデアをキャプチャありません。

1017
00:50:12,280 --> 00:50:16,040
>> そして、再び、このシナリオでは、我々
条件の概念を持っています、

1018
00:50:16,040 --> 00:50:20,450
枝、道路の分岐点、作ります
この場合decision--、この道を行きます、

1019
00:50:20,450 --> 00:50:23,082
それ以外の場合は、この道を行きます
それ以外の場合は、その道を行きます。

1020
00:50:23,082 --> 00:50:25,040
そして、これは非常に一般的です
プログラミング技術

1021
00:50:25,040 --> 00:50:27,721
どの方向決定します
行くために、いわば。

1022
00:50:27,721 --> 00:50:29,970
そして、我々はまた、いくつかの種類を持っています
構造をループの、どこに

1023
00:50:29,970 --> 00:50:32,440
私たちは何度も何度も何かをやっています。

1024
00:50:32,440 --> 00:50:34,820
>> 今、それははるかに、判明します
この例のように、

1025
00:50:34,820 --> 00:50:37,660
超精密であることは重要です。

1026
00:50:37,660 --> 00:50:42,180
しかし、我々はまた、何かを見てきました
私たちは、抽象化を呼び出しておくこと。

1027
00:50:42,180 --> 00:50:45,490
それは、電話帳をピックアップして何を意味するのでしょうか？

1028
00:50:45,490 --> 00:50:47,740
私達はちょうど種類の取っています
この部屋に付与されたため

1029
00:50:47,740 --> 00:50:49,340
それはいくつかの意味論的な意味を有します。

1030
00:50:49,340 --> 00:50:51,740
私たちのすべては、だけの種類の、ああ、知っています
よく、電話帳をピックアップ。

1031
00:50:51,740 --> 00:50:52,864
ことは、本当に何を意味するのでしょうか？

1032
00:50:52,864 --> 00:50:59,060
まあ、それは本当に伸ばす意味します
手、指を伸ばす、身を乗り出します、

1033
00:50:59,060 --> 00:51:03,890
指の間で本をつまんで、
あなたに向かって手を引っ張って、立ち上がります。

1034
00:51:03,890 --> 00:51:05,940
そして、私たちは本当に可能性があり
これについての知識をひけらかします、

1035
00:51:05,940 --> 00:51:08,640
本当に超精密であること
私がやっているものになど。

1036
00:51:08,640 --> 00:51:13,300
しかし、これらのすべての手順をまとめています
それは、電話帳をピックアップして何を意味するのか。

1037
00:51:13,300 --> 00:51:16,940
>> それで以前、私が言ったときに、各
これらの最初の二つの文の

1038
00:51:16,940 --> 00:51:20,830
考えることができ
続行するか、または機能、

1039
00:51:20,830 --> 00:51:24,090
本当にそれが何を表すのか、私たち
抽象化を呼び出しておきます。

1040
00:51:24,090 --> 00:51:28,770
これは概念的な高レベルのようなものです
その問題の説明

1041
00:51:28,770 --> 00:51:31,110
実際にかなりの数の工程を含みます。

1042
00:51:31,110 --> 00:51:34,190
だから、これは、あまりにも、です
プログラミングのトピックを繰り返し、

1043
00:51:34,190 --> 00:51:41,125
それによって、私はプログラムを作成することもできます
this--ような構文を使用して、

1044
00:51:41,125 --> 00:51:42,000
pick_up_phone_book（）。

1045
00:51:42,000 --> 00:51:44,344

1046
00:51:44,344 --> 00:51:46,510
そして構文的に、私はよ
何かを盗むつもり

1047
00:51:46,510 --> 00:51:48,090
ほとんどのプログラミング言語から。

1048
00:51:48,090 --> 00:51:51,270
>> さて、ステップ1にも見えます
より多くの機能のように、

1049
00:51:51,270 --> 00:51:53,160
プログラマとして、それを呼び出します。

1050
00:51:53,160 --> 00:51:58,650
それは、誰かのことをコードのようになります。
名前を与え、与えています

1051
00:51:58,650 --> 00:52:03,300
私には他にsomehow--使用します
私が強調表示されたものをライン言葉、

1052
00:52:03,300 --> 00:52:07,050
その多分機能を表し
私も自分自身を実装していませんでした。

1053
00:52:07,050 --> 00:52:10,410
古い誰か、より賢く
私はすでに考え出し

1054
00:52:10,410 --> 00:52:12,700
どのように概念を表現
電話帳をピックアップします。

1055
00:52:12,700 --> 00:52:15,860
そして、それは私がちょうど5つのステップのようなものです
私の頭の上から、オフにガタガタ。

1056
00:52:15,860 --> 00:52:19,350
>> しかし、彼または彼女はすでに実装します
これは、それらのいくつかのステップを与えました

1057
00:52:19,350 --> 00:52:22,339
名前、pick_up_phone_book。

1058
00:52:22,339 --> 00:52:24,380
括弧は、
まさにほとんどのプログラマ

1059
00:52:24,380 --> 00:52:27,100
このような文の最後に行います。

1060
00:52:27,100 --> 00:52:30,190
私は今、自分の上に立つことができます
肩と二度と、

1061
00:52:30,190 --> 00:52:32,465
それが何を意味するかを考えます
電話帳をピックアップします。

1062
00:52:32,465 --> 00:52:34,090
私はちょうど電話帳を拾う、と言うことができます。

1063
00:52:34,090 --> 00:52:36,690
そして、それは正確に何です
私たち人間のすべてがここにいました。

1064
00:52:36,690 --> 00:52:38,940
>> 我々は、おそらく1になったとき
2歳、古い年、

1065
00:52:38,940 --> 00:52:41,690
誰かが私たちに教えなければならなかったもの、それを
電話帳をピックアップするためのもの。

1066
00:52:41,690 --> 00:52:43,810
そして、今までそれ以来、
私たちは離れて抽象化しました

1067
00:52:43,810 --> 00:52:46,739
これらの非常につまらないから
機械的な手順。

1068
00:52:46,739 --> 00:52:48,530
そして、我々はちょうど持っています
直観的理解

1069
00:52:48,530 --> 00:52:50,480
それが何を意味するのか
電話帳をピックアップ。

1070
00:52:50,480 --> 00:52:55,730
>> そして、あなたは今、外挿することができます
より複雑things--へ

1071
00:52:55,730 --> 00:52:57,640
建物を建設。

1072
00:52:57,640 --> 00:52:59,940
同様に、いくつかの人々に、
それが実際に意味を持っています。

1073
00:52:59,940 --> 00:53:03,080
請負業者に、建築家、
それはいくつかの意味を持ちます。

1074
00:53:03,080 --> 00:53:06,400
そして、彼らは、場合に何をすべきかを知っているだろう
私は建物を建設行く、と述べました。

1075
00:53:06,400 --> 00:53:10,520
>> しかし、部屋の中で私たちのほとんどはできませんでした
抽象化のレベルを扱います。

1076
00:53:10,520 --> 00:53:14,850
あなたが行く得るように私達に指示する必要があります
シャベルやコンクリートを取りに行きます

1077
00:53:14,850 --> 00:53:17,250
そして、木材の小片を爪
一緒に、他のどのような

1078
00:53:17,250 --> 00:53:18,830
建物の構築に関与しています。

1079
00:53:18,830 --> 00:53:21,690
そして、私たちが持っていないので、それはです
まだ理解するようにプログラムされて

1080
00:53:21,690 --> 00:53:23,629
それは、建物を構築するために何を意味するのか。

1081
00:53:23,629 --> 00:53:24,920
私たちは、その抽象化を持っていません。

1082
00:53:24,920 --> 00:53:26,570
私たちは、その機能を持っていません。

1083
00:53:26,570 --> 00:53:29,930
>> だから、あなたは何をで表示されます
一般的には、プログラミング言語、

1084
00:53:29,930 --> 00:53:34,570
特に、より現代的な言語、
JavaやPHP、Rubyの、およびPythonのような、

1085
00:53:34,570 --> 00:53:37,610
彼らははるかに成熟しています
古い言語よりも、

1086
00:53:37,610 --> 00:53:40,140
CおよびC ++とまだ他のような。

1087
00:53:40,140 --> 00:53:42,580
それで、彼らはより多くの付属してい
機能が組み込まれています。

1088
00:53:42,580 --> 00:53:45,640
より多くのコードが書かれています
過去の人々によって、

1089
00:53:45,640 --> 00:53:50,520
私たちが今呼び出すことができるということか
私がほのめかしているように、召喚または使用

1090
00:53:50,520 --> 00:53:52,231
このとで、ここでのラインを強調しました。

1091
00:53:52,231 --> 00:53:55,230
そして、私たちは話していないにもかかわらず、
プログラミング言語については、それ自体、

1092
00:53:55,230 --> 00:54:00,230
ちょうど擬似コードのコードのすべて
アイデアは、その議論にまだあります。

1093
00:54:00,230 --> 00:54:04,600
そして、それは精度がある判明します
抽象化であるとして、超重要。

1094
00:54:04,600 --> 00:54:06,570
とのはに試してみましょう
次のようにそれを伝えます。

1095
00:54:06,570 --> 00:54:11,000
>> 私が誤って台無しにしている可能性があります
この画面上でスライドを点滅させることにより、

1096
00:54:11,000 --> 00:54:12,260
途中で。

1097
00:54:12,260 --> 00:54:16,550
しかし、私は勇敢なボランティアを求めてみましょう、
あなたが来る気にしない場合。

1098
00:54:16,550 --> 00:54:19,040
あなたは目の前になるだろう
カメラ、あなたはそれでOKなら。

1099
00:54:19,040 --> 00:54:24,950
誰もが思い付くとさせていただきたいと思い
ここにあなたの同僚に指示？

1100
00:54:24,950 --> 00:54:29,540
ただ、こっちに来ていると
こっちに立って、いくつかの言葉を言います。

1101
00:54:29,540 --> 00:54:32,890
>> ビクトリアは、ほとんどが笑っています
最も私の目を避けること。

1102
00:54:32,890 --> 00:54:34,740
あなたがアップに来ることをいといませんか？

1103
00:54:34,740 --> 00:54:35,240
OK。

1104
00:54:35,240 --> 00:54:38,480
そして、あなたの席で皆場合
スクラップ一枚の紙を取り出すことができ、

1105
00:54:38,480 --> 00:54:39,750
可能ならば。

1106
00:54:39,750 --> 00:54:40,760
裏地紙が細かいです。

1107
00:54:40,760 --> 00:54:41,990
このように集まってきます。

1108
00:54:41,990 --> 00:54:44,580
または紙のいくつかのこと
あなたは昨日与えられました、

1109
00:54:44,580 --> 00:54:46,493
ただの白紙
紙の、あなたができれば。

1110
00:54:46,493 --> 00:54:52,240

1111
00:54:52,240 --> 00:54:54,870
そして、あなたがいずれかを持っていない場合は、単に
あなたができればあなたの隣人をお願いします。

1112
00:54:54,870 --> 00:55:04,220

1113
00:55:04,220 --> 00:55:07,580
>> だから今のところ、用
この例では、ビクトリア

1114
00:55:07,580 --> 00:55:11,520
の役割を果たしているために起こっています
プログラマー、エンジニア、誰

1115
00:55:11,520 --> 00:55:16,130
あなたのすべてをプログラムする必要があります
コンピュータは、何かをします。

1116
00:55:16,130 --> 00:55:19,570
そして、私たちはどのような仮定を参照してくださいよ
あなたがすることを決定します。

1117
00:55:19,570 --> 00:55:22,700
私たちは、彼女があることを選択する方法の正確な表示されます。

1118
00:55:22,700 --> 00:55:26,220
そして、このデモが行く場合
教育学だけでなく、ミスの多く

1119
00:55:26,220 --> 00:55:29,220
私たちはその後、使用するだろうと、行われます
その議論の機会として。

1120
00:55:29,220 --> 00:55:32,010
しかし、あなたのための挑戦はすべき
これらのミスを避けるためになります、

1121
00:55:32,010 --> 00:55:32,896
優秀なプログラマーです。

1122
00:55:32,896 --> 00:55:35,520
手元にあるので、挑戦、もし
あなたは、こちらに歩いて好きだったと思います

1123
00:55:35,520 --> 00:55:38,799
画面上のビクトリアの前にあります
here--とうまくいけば、あなたのどれも

1124
00:55:38,799 --> 00:55:40,590
ときに私にこれを覚えています
画面上に光りました。

1125
00:55:40,590 --> 00:55:44,097
そしてので、全く好転しません
この部屋に別の画面があります

1126
00:55:44,097 --> 00:55:44,930
私はオフにすることができること。

1127
00:55:44,930 --> 00:55:46,620
だから、好転しないでください。

1128
00:55:46,620 --> 00:55:49,090
>> ビクトリアの前で
その同じ悲鳴です。

1129
00:55:49,090 --> 00:55:54,170
そして、彼女の仕事は今、あなたのすべてを伝えることです
紙のあなたの部分に何を描きます。

1130
00:55:54,170 --> 00:55:57,020
そして、我々はに基づいて、表示されます
単独で口頭指示、

1131
00:55:57,020 --> 00:56:00,020
コンピュータコード、可能ならば、
どのように正確にあなたの図面

1132
00:56:00,020 --> 00:56:02,330
あなたの実装がありますare--。

1133
00:56:02,330 --> 00:56:02,980
理にかなって？

1134
00:56:02,980 --> 00:56:03,604
>> AUDIENCE：うん。

1135
00:56:03,604 --> 00:56:04,980
DAVIDマラン：OK、実行します。

1136
00:56:04,980 --> 00:56:06,030
>> 聴衆：四角形を描画します。

1137
00:56:06,030 --> 00:56:09,050
>> [笑い]

1138
00:56:09,050 --> 00:56:12,310
>> DAVIDマラン：そして、いや
質問が求められることがあります。

1139
00:56:12,310 --> 00:56:13,720
あなただけは言わているものを行うことができます。

1140
00:56:13,720 --> 00:56:17,570

1141
00:56:17,570 --> 00:56:22,550
ああ、あなたが持っている場合は、今日のスライド
タブで開き、あなたのタブを見ていません。

1142
00:56:22,550 --> 00:56:23,670
OK？

1143
00:56:23,670 --> 00:56:26,135
>> 聴衆：OK、円を描きます。

1144
00:56:26,135 --> 00:56:32,544

1145
00:56:32,544 --> 00:56:34,872
slope--私はスロープを言うことができますか？

1146
00:56:34,872 --> 00:56:35,830
DAVIDマラン：あなたまで。

1147
00:56:35,830 --> 00:56:38,230

1148
00:56:38,230 --> 00:56:38,980
AUDIENCE：スロープ。

1149
00:56:38,980 --> 00:56:46,330

1150
00:56:46,330 --> 00:56:49,795
三角形。

1151
00:56:49,795 --> 00:56:50,850
>> DAVIDマラン：すべての権利。

1152
00:56:50,850 --> 00:56:52,286
そして、ちょっとここに滞在。

1153
00:56:52,286 --> 00:56:56,046

1154
00:56:56,046 --> 00:56:58,910
そして、私は来るつもりです
一瞬で周り。

1155
00:56:58,910 --> 00:57:02,420
そして、その上にあなたの名前を入れる必要はありません。

1156
00:57:02,420 --> 00:57:05,030
私は周りに来てみようと
あなたの図面を集め、

1157
00:57:05,030 --> 00:57:08,330
あなたはそれらを引き裂く気にしない場合。

1158
00:57:08,330 --> 00:57:12,110
>> ここでは、バック得たものです。

1159
00:57:12,110 --> 00:57:14,770
私は、画面上に投影します。

1160
00:57:14,770 --> 00:57:18,310
私は、正方形、円を参照してください、
スロープ、および三角形。

1161
00:57:18,310 --> 00:57:20,130
だから、そこに一つの答えでした。

1162
00:57:20,130 --> 00:57:23,640
そしておっとlet's--。

1163
00:57:23,640 --> 00:57:25,370
ありがとうございました。

1164
00:57:25,370 --> 00:57:30,710
ここでは別の品揃えです、
その背後にあると1。

1165
00:57:30,710 --> 00:57:34,130

1166
00:57:34,130 --> 00:57:37,120
>> だから、彼らはすべての精神をキャプチャするように見えます。

1167
00:57:37,120 --> 00:57:38,600
ありがとうございました。

1168
00:57:38,600 --> 00:57:44,970
そこ別だし、ここでは別の一つです。

1169
00:57:44,970 --> 00:57:51,590
スロープの解釈があります
少し違う、曲線美少し。

1170
00:57:51,590 --> 00:57:57,140
そして、どちらかのための最も近いです
あなたは済ませたとの素晴らしい特異性

1171
00:57:57,140 --> 00:58:03,520
説明、または多分あなたの種類の
前にそれを見て、これは確かにありま​​す

1172
00:58:03,520 --> 00:58:06,340
ビクトリアは、実際に何を説明しました。

1173
00:58:06,340 --> 00:58:09,190
>> しかし、今、あなたのそれらの人
それは非常に権利を取得しませんでした、

1174
00:58:09,190 --> 00:58:11,140
それでは、ここでいくつかの異議を提供してみましょう。

1175
00:58:11,140 --> 00:58:13,770
だから、ビクトリアは、最初に四角形を描画述べました。

1176
00:58:13,770 --> 00:58:15,830
そして今、我々が想定することができ
今日のために

1177
00:58:15,830 --> 00:58:17,538
誰もが知っていること
四角形を描画する方法について説明します。

1178
00:58:17,538 --> 00:58:20,590
しかし、それは右、完全に明確ではないでしょうか。

1179
00:58:20,590 --> 00:58:23,220
他にどのようにあなたが持っている可能性が
描かれた正方形、またはどこに

1180
00:58:23,220 --> 00:58:27,114
曖昧さの一部であるかもしれません
ここでは、コンピュータのために？

1181
00:58:27,114 --> 00:58:28,280
AUDIENCE：ロケーションとサイズ。

1182
00:58:28,280 --> 00:58:28,980
DAVIDマラン：場所、右か？

1183
00:58:28,980 --> 00:58:32,070
あなたのすべては、いくつかの形の紙を持っていました
一般的に長方形が、わずか

1184
00:58:32,070 --> 00:58:32,830
異なるサイズ。

1185
00:58:32,830 --> 00:58:36,250
しかし、あなたは確かに描かれている可能性があり、
あなたが望んでいた場合、巨大な正方形、多分

1186
00:58:36,250 --> 00:58:37,220
小さな正方形。

1187
00:58:37,220 --> 00:58:38,417
多分、それを回転させました。

1188
00:58:38,417 --> 00:58:39,500
私たちはそれを見たとは思いません。

1189
00:58:39,500 --> 00:58:41,790
しかし、それはより多くのダイヤモンドだったかもしれません
以下のようなそれでも、それにもかかわらず、

1190
00:58:41,790 --> 00:58:42,900
広場を数学的。

1191
00:58:42,900 --> 00:58:44,850
だから、間違いなくあいまいでした。

1192
00:58:44,850 --> 00:58:46,709
>> それから彼女は、円を描く、と述べました。

1193
00:58:46,709 --> 00:58:49,250
あなたのいくつかは、次のことを描きました
不合理ではない、それ、

1194
00:58:49,250 --> 00:58:52,450
人間は考えたり読みする傾向があるため
右のほとんどの言語に残って、そうしないように

1195
00:58:52,450 --> 00:58:53,017
悪い推測。

1196
00:58:53,017 --> 00:58:55,100
しかし、その円を持っている可能性があり
正方形の内部になって、

1197
00:58:55,100 --> 00:58:57,600
周りされている可能性が
正方形、他の場所だったかもしれません

1198
00:58:57,600 --> 00:58:59,480
シート上なので、間違いなくあいまいな。

1199
00:58:59,480 --> 00:59:03,290
>> スロープは多分あったかもしれません
口頭で最も自由を取ります

1200
00:59:03,290 --> 00:59:04,200
それが何を意味するのかと。

1201
00:59:04,200 --> 00:59:06,980
そして、あなたのいくつかは解釈します
それ波線など

1202
00:59:06,980 --> 00:59:08,560
または直線など。

1203
00:59:08,560 --> 00:59:11,719
そして三角形は、あまりにも、持つことができます
任意の数の方法で配向されて。

1204
00:59:11,719 --> 00:59:14,760
要するに、でも何かを持つように
そう、すごい、あなたが一目あなたが似ています

1205
00:59:14,760 --> 00:59:17,020
単純な、子供ができました
これを描画し、よくありません

1206
00:59:17,020 --> 00:59:19,640
本当に、あなたがない限り
スーパー、スーパー説得力

1207
00:59:19,640 --> 00:59:22,045
し、コンピュータを伝えます
正確に何をすべきか。

1208
00:59:22,045 --> 00:59:24,420
だから我々はことができれば、あなたが持っている場合
紙の別のシート、してみましょう

1209
00:59:24,420 --> 00:59:26,710
このもう一度試してください。

1210
00:59:26,710 --> 00:59:29,880
そして、私はビクトリア1を与えるつもりです
ここでは、画面上の他の例。

1211
00:59:29,880 --> 00:59:34,060
そして再び、好転しません
あなたのスライドを見ていません。

1212
00:59:34,060 --> 00:59:37,304
そして、私は彼女にする瞬間をあげます
この記述方法を考えます。

1213
00:59:37,304 --> 00:59:39,012
それらを見てみましょうしないでください
あなたの目で恐怖。

1214
00:59:39,012 --> 00:59:40,820
>> [笑い]

1215
00:59:40,820 --> 00:59:43,710
>> そして再び、この時間を活用
それらの持ち帰りの一部

1216
00:59:43,710 --> 00:59:48,130
そして、ほとんどの人を取得しよう
少なくとも正しい答え。

1217
00:59:48,130 --> 00:59:52,260
>> 聴衆：OK、取ります
一枚の紙、見て

1218
00:59:52,260 --> 00:59:54,500
紙のその部分の真ん中インチ

1219
00:59:54,500 --> 00:59:59,591
その部分の真ん中に
紙、立方体を描画します。

1220
00:59:59,591 --> 01:00:01,244
>> [笑い]

1221
01:00:01,244 --> 01:00:02,660
DAVIDマランは：私たちは何を学びましたか？

1222
01:00:02,660 --> 01:00:03,540
私たちはとても接近していました。

1223
01:00:03,540 --> 01:00:06,320

1224
01:00:06,320 --> 01:00:09,045
あなたができればOK、みんなのために、繰り返します。

1225
01:00:09,045 --> 01:00:13,210
>> AUDIENCE：の真ん中で
紙は、オブジェクトを描画します

1226
01:00:13,210 --> 01:00:14,842
これはキューブのように見えます。

1227
01:00:14,842 --> 01:00:17,332
>> DAVIDマラン：OK、それはです
すべてのあなたが仕事を得ます。

1228
01:00:17,332 --> 01:00:20,010

1229
01:00:20,010 --> 01:00:23,080
私は分析することを可能にします
そして重要なあまりありません、

1230
01:00:23,080 --> 01:00:25,720
しかし、主張を作るために
ビクトリア間違いなくその

1231
01:00:25,720 --> 01:00:28,967
非常にで考えているようです
高レベルの抽象化、その

1232
01:00:28,967 --> 01:00:29,800
不合理ではないです。

1233
01:00:29,800 --> 01:00:32,160
そうでなければ、我々はすべてしまうので、
かなり機能不全であること、

1234
01:00:32,160 --> 01:00:35,740
我々は、これまでそれほど正確でなければならなかった場合
すべてに私たちは世界で行います。

1235
01:00:35,740 --> 01:00:38,890
>> しかし、私はmiddle--に行くと言って
我々はこのような良いトラックに思っていました

1236
01:00:38,890 --> 01:00:42,340
そこに、のような非常に真ん中に行きます
キューブを描画し、ページの、と。

1237
01:00:42,340 --> 01:00:45,730
そこで彼女は、抽象化に考えて、
彼女はまだ見ていますので、

1238
01:00:45,730 --> 01:00:48,490
確かに、キューブのように画面上でです。

1239
01:00:48,490 --> 01:00:51,185
しかし、非常に多くの機会があります
そこに解釈のため。

1240
01:00:51,185 --> 01:00:53,560
そして、実際には、そう多くあります
あなたが表現できる他の方法

1241
01:00:53,560 --> 01:00:55,101
つまり、私はその瞬間に提案しますします。

1242
01:00:55,101 --> 01:00:59,770
そこでここでは、1化身を持っています
picture-- whoops-- 1の

1243
01:00:59,770 --> 01:01:02,830
絵の化身なので、
それにはほとんど3次元、

1244
01:01:02,830 --> 01:01:04,160
これはいいです。

1245
01:01:04,160 --> 01:01:08,470
>> ここであなたが持っているもう一つは、です
同じ、それはオープンキューブの一種だが。

1246
01:01:08,470 --> 01:01:12,020
一部の人々はそれを少し取りました
よりフラット、2次元。

1247
01:01:12,020 --> 01:01:13,910
そして、それは大丈夫です。

1248
01:01:13,910 --> 01:01:17,380
だから、確かにありま​​す
紙の中心。

1249
01:01:17,380 --> 01:01:22,720
この1は私はあなたがすると思います
以下のように、私たちはここに行けばあるため、

1250
01:01:22,720 --> 01:01:25,130
これは彼女が記述したものです。

1251
01:01:25,130 --> 01:01:29,570
だから今、私はどのように他提案してみましょう
我々はこの状況を説明することがあります。

1252
01:01:29,570 --> 01:01:34,070
>> 戻る日に、ほとんどの1
プログラミングを学ぶためのより多くの一般的な方法

1253
01:01:34,070 --> 01:01:38,900
コー​​ドを書くことだった、書き込み
命令のライン、

1254
01:01:38,900 --> 01:01:42,640
それは少しを制御しました
画面上のカメ。

1255
01:01:42,640 --> 01:01:45,660
ロゴとこのの他の変形
言語の名前でした。

1256
01:01:45,660 --> 01:01:47,550
そして、亀は、世界に住んでいました。

1257
01:01:47,550 --> 01:01:49,970
>> したがって、この長方形のを想定
スペースは彼の世界です。

1258
01:01:49,970 --> 01:01:53,340
そして、あなたはassuming-- Iによって開始します
本当に、亀を描画する方法がわかりません

1259
01:01:53,340 --> 01:01:54,740
それでは、このようにそれをやらせます。

1260
01:01:54,740 --> 01:01:57,340
そして彼は、シェルを持っています
そしてその後、おそらくいくつかの足。

1261
01:01:57,340 --> 01:01:59,840
だから、この小さなを持っているかもしれません
画面上の文字。

1262
01:01:59,840 --> 01:02:02,270
>> そして、こののオブジェクト
プログラミング言語

1263
01:02:02,270 --> 01:02:06,070
カメを強要することでした
上がるために、ダウン、右、左

1264
01:02:06,070 --> 01:02:08,420
ダウン彼のペンを置くために
または彼のペンアップを選択し、

1265
01:02:08,420 --> 01:02:12,720
彼は実際に画面上に描画できました
この非常に平らな長方形の世界インチ

1266
01:02:12,720 --> 01:02:16,850
だからここで私はあなたが行くことかもしれないと思いました、
そしてどこでダイビングを考慮する必要があります

1267
01:02:16,850 --> 01:02:19,520
記述するときに精神的にダウン
より一般的に指示、

1268
01:02:19,520 --> 01:02:21,720
私が主張するだろう、あなたを入れて
middle--でペンダウン

1269
01:02:21,720 --> 01:02:23,100
我々は取り除きますよ
カメ、私は本当にことができるので、

1270
01:02:23,100 --> 01:02:24,680
非常によく彼を描く保ちます。

1271
01:02:24,680 --> 01:02:27,170
>> そして今、どのように他の可能性
私はキューブを描くと言いますか？

1272
01:02:27,170 --> 01:02:32,830
まあ、我々は引き分けのようなものを言うことができます
対角線の北東部、例えば、

1273
01:02:32,830 --> 01:02:35,182
または上方45度の角度で。

1274
01:02:35,182 --> 01:02:36,640
そしてそれは私をここに得ている可能性があります。

1275
01:02:36,640 --> 01:02:38,380
そして、私はかなり遠くキューブからです。

1276
01:02:38,380 --> 01:02:42,430
しかし、今、私が何かを言うことができます
以下のような左に90度回転

1277
01:02:42,430 --> 01:02:47,370
との線を引きます
同じ長さの北西。

1278
01:02:47,370 --> 01:02:49,470
そして、私は続けることができます
同様の方向を有します。

1279
01:02:49,470 --> 01:02:50,720
そして、簡単なことではないだろう。

1280
01:02:50,720 --> 01:02:53,345
そして率直に言って、我々はおそらくだろう
5分間ここにいました。

1281
01:02:53,345 --> 01:02:59,600
しかし、多分私達はに得ているだろう
、一日の終わりに何か、

1282
01:02:59,600 --> 01:03:04,280
キューブなってしまうが、我々
その抽象化の内側に潜っ

1283
01:03:04,280 --> 01:03:06,370
このような低でそれを行うには
レベルあなたが本当にすることができ

1284
01:03:06,370 --> 01:03:09,795
あなたは全体まで、何をやっている参照してください。
事は、ページ上の実際にそこにあります。

1285
01:03:09,795 --> 01:03:12,670
そして、これは一般的な原則です、
再び、programming--このアイデアの

1286
01:03:12,670 --> 01:03:13,320
抽象化。

1287
01:03:13,320 --> 01:03:15,920
それはとても素晴らしくです
強力な、再びので、

1288
01:03:15,920 --> 01:03:19,281
彼女はちょうど、言ったのすべてのキューブを、描きます
私たちはかなり非常に迅速に定義を理解でしょう。

1289
01:03:19,281 --> 01:03:21,030
私達はちょうど理解するであろう、
OK、立方体を描画します。

1290
01:03:21,030 --> 01:03:24,030
私たちは、向きを知らないかもしれません
私たちは、もう少し正確かもしれません

1291
01:03:24,030 --> 01:03:26,297
しかし、我々は一般的に想像することができます
またはキューブが何であるかを知っています。

1292
01:03:26,297 --> 01:03:28,130
そして、それは便利です、
なぜならかのたびに

1293
01:03:28,130 --> 01:03:31,540
でプログラマーとして座っ
コー​​ドを書くためのキーボード、

1294
01:03:31,540 --> 01:03:33,912
あなたは、このような時に考えていた場合
低レベル、私たちのどれも

1295
01:03:33,912 --> 01:03:35,120
今まで何を成し遂げるだろう。

1296
01:03:35,120 --> 01:03:38,259
そして確かに、私たちのどれもあろう
コー​​ドを書くのプロセスを楽しみます。

1297
01:03:38,259 --> 01:03:41,550
これは、0と1に書き込むようになります
これは、率直に言って、すべてそのずっと前にはなかったです

1298
01:03:41,550 --> 01:03:43,680
人間は、0と1でコードを書いていました。

1299
01:03:43,680 --> 01:03:46,960
そして、我々は非常に迅速に思い付きました
これらのより高いレベルのlanguages​​--

1300
01:03:46,960 --> 01:03:49,410
C ++やJavaなど。

1301
01:03:49,410 --> 01:03:52,500
>> それでは、ちょうどこのもう一度試してみましょう
表を反転、私たちのすべてのように、

1302
01:03:52,500 --> 01:03:55,450
考える機会を持っています
むしろ同じようインチ

1303
01:03:55,450 --> 01:03:59,230
私たちは、1以上のボランティアこれを得ることができます
ボードにまで来て、描画するための時間、

1304
01:03:59,230 --> 01:04:01,480
暗唱しませんか？

1305
01:04:01,480 --> 01:04:02,070
[OK]を、ええ。

1306
01:04:02,070 --> 01:04:04,820
ベンは、アップに来ます。

1307
01:04:04,820 --> 01:04:08,510
そして、ベン、この場合には、あなたに一度
、ボードに直面して、左見ていません

1308
01:04:08,510 --> 01:04:09,370
右見ていません。

1309
01:04:09,370 --> 01:04:12,367
唯一の何をすべきかあなたを
ここでの同僚はあなたを伝えます。

1310
01:04:12,367 --> 01:04:14,950
とで皆のために
部屋、あなたは今、プログラマです。

1311
01:04:14,950 --> 01:04:16,020
彼はコンピュータです。

1312
01:04:16,020 --> 01:04:21,395
私がここで選択されたし、絵
事前にここでこの1です。

1313
01:04:21,395 --> 01:04:24,490

1314
01:04:24,490 --> 01:04:27,660
彼らは考えているjust--ています
面白いジョークのすべてです。

1315
01:04:27,660 --> 01:04:31,510
>> だから、誰かがしたいんだろう
最初の命令をボランティア

1316
01:04:31,510 --> 01:04:35,470
またはステートメントは、そのすべき
コマンドベンのペン？

1317
01:04:35,470 --> 01:04:40,850
そして、我々は多分、総称してこれをやります
一人一人から1命令。

1318
01:04:40,850 --> 01:04:41,440
ごめんなさい？

1319
01:04:41,440 --> 01:04:42,440
>> 聴衆：円を描きます。

1320
01:04:42,440 --> 01:04:45,866
DAVIDマラン：円を描きます
私が聞いた最初の事はあります。

1321
01:04:45,866 --> 01:04:47,100
>> AUDIENCE：最大トップ。

1322
01:04:47,100 --> 01:04:48,140
>> DAVIDマラン：最大トップ。

1323
01:04:48,140 --> 01:04:52,504
[OK]を、私たちは、元に戻す、削除させることができます。

1324
01:04:52,504 --> 01:04:53,420
そして今、他の誰か。

1325
01:04:53,420 --> 01:04:55,994
ダンは、あなたが快適になります
次の命令を提供しますか？

1326
01:04:55,994 --> 01:05:02,070
>> 聴衆：確かに、センターを描きます
円の底部、

1327
01:05:02,070 --> 01:05:07,121
small--少しで
それから、小さなスペース、

1328
01:05:07,121 --> 01:05:15,420
3まで直線を引きます
ボードダウン方法の4分の3

1329
01:05:15,420 --> 01:05:17,845
あなたの左にわずかに角度。

1330
01:05:17,845 --> 01:05:21,250

1331
01:05:21,250 --> 01:05:22,620
>> DAVIDマラン：良いです。

1332
01:05:22,620 --> 01:05:24,086
>> AUDIENCE：わずかな角度。

1333
01:05:24,086 --> 01:05:32,807
>> DAVIDマラン：元に戻す、コントロール-Z。 OK。

1334
01:05:32,807 --> 01:05:34,890
アンドリューは、あなたが提供したいと考えています
次の命令まで？

1335
01:05:34,890 --> 01:05:35,515
>> AUDIENCE：確かに。

1336
01:05:35,515 --> 01:05:43,250
その行の下から、
さらに、わずかangle--

1337
01:05:43,250 --> 01:05:49,024
whoops--多分約三分の
長さの[聞こえません]、

1338
01:05:49,024 --> 01:05:52,928
わずかな角度下向きなど
[聞こえない]の長さの第三。

1339
01:05:52,928 --> 01:05:57,550

1340
01:05:57,550 --> 01:06:00,578
そんなわけで、その点から、
第三の線を引きます

1341
01:06:00,578 --> 01:06:04,150
前の長さの
さらに左へのライン。

1342
01:06:04,150 --> 01:06:08,416

1343
01:06:08,416 --> 01:06:10,040
>> DAVIDマラン：それOK？

1344
01:06:10,040 --> 01:06:12,330
直線は、それはOKですか？

1345
01:06:12,330 --> 01:06:14,900
OK、オリビエ、あなたがしたいです
次を提供するには？

1346
01:06:14,900 --> 01:06:28,564
>> AUDIENCE：[聞こえない]から
円の下部、[聞こえません]。

1347
01:06:28,564 --> 01:06:32,000

1348
01:06:32,000 --> 01:06:45,126
右側に描きます
[聞こえない]センチ。

1349
01:06:45,126 --> 01:06:46,560
>> [笑い]

1350
01:06:46,560 --> 01:06:49,872
>> DAVIDマラン：私はあなたになるだろうと思います
それはここインチだ変換する必要があります。

1351
01:06:49,872 --> 01:06:50,764
>> AUDIENCE：停止。

1352
01:06:50,764 --> 01:06:52,186
>> [笑い]

1353
01:06:52,186 --> 01:06:54,570
>> DAVIDマラン：OK。

1354
01:06:54,570 --> 01:06:56,660
[？アラ、？]したいです
次を提供するには？

1355
01:06:56,660 --> 01:07:00,653

1356
01:07:00,653 --> 01:07:15,443
>> AUDIENCE：描く[聞こえません]
上部の[聞こえない]と同じ。

1357
01:07:15,443 --> 01:07:28,829
[聞こえない]に、円、描画
[聞こえない]と[聞こえない]描きます。

1358
01:07:28,829 --> 01:07:33,799

1359
01:07:33,799 --> 01:07:36,730
>> DAVIDマラン：OK、これ以上元に戻します。

1360
01:07:36,730 --> 01:07:38,390
のは、1つまたは2つの複数の命令を実行してみましょう。

1361
01:07:38,390 --> 01:07:40,825
クリス、あなたは1を提供したいですか？

1362
01:07:40,825 --> 01:07:46,182
>> AUDIENCE：下部にあります
円の、[聞こえません]

1363
01:07:46,182 --> 01:07:51,528
同じラインスロッピングを描きます
左の[聞こえない]に下向き。

1364
01:07:51,528 --> 01:07:59,304

1365
01:07:59,304 --> 01:08:00,590
>> DAVIDマラン：OK。

1366
01:08:00,590 --> 01:08:01,170
アンドリュー？

1367
01:08:01,170 --> 01:08:02,472
私たちは、カリムをdid--？

1368
01:08:02,472 --> 01:08:06,891

1369
01:08:06,891 --> 01:08:13,765
>> AUDIENCE：右の行から開始して、
左ライン、ボトムの終わり、

1370
01:08:13,765 --> 01:08:21,012
あなたは約右に行くつもりです
そのラインと同じ長さ

1371
01:08:21,012 --> 01:08:27,680
あなたはへの描画、にしています
右の[聞こえません]。

1372
01:08:27,680 --> 01:08:33,572

1373
01:08:33,572 --> 01:08:37,991
[聞こえない]度なので、[聞こえません]
右側の度。

1374
01:08:37,991 --> 01:08:41,919

1375
01:08:41,919 --> 01:08:43,500
>> DAVIDマラン：すべての権利。

1376
01:08:43,500 --> 01:08:44,029
一時停止してみましょう。

1377
01:08:44,029 --> 01:08:44,950
まだ好転しないでください。

1378
01:08:44,950 --> 01:08:46,783
一時停止してみましょう、としてみましょう
1他の試みをしてみてください

1379
01:08:46,783 --> 01:08:48,850
我々はベンに明らかにする前に、
彼はどのような描画されています。

1380
01:08:48,850 --> 01:08:51,189
あなたはにベンをシャッフルすることができます
right--または実際に、

1381
01:08:51,189 --> 01:08:54,080
いいえ、ちょうどあなたを与えてみましょう
別のボード、さらに良いです。

1382
01:08:54,080 --> 01:08:57,640
だから、誰かが今たいと思います
アプローチの多くを取るために

1383
01:08:57,640 --> 01:09:02,149
ビクトリアはどこに、以前にかかりました
我々は、より高いレベルの抽象化で話します

1384
01:09:02,149 --> 01:09:05,149
そしてちょうど文で
または2ベンに記述

1385
01:09:05,149 --> 01:09:07,229
何せずに描画します
雑草になって、

1386
01:09:07,229 --> 01:09:10,670
したがって、この低いレベルで、話すには？

1387
01:09:10,670 --> 01:09:11,206
ビクトリア。

1388
01:09:11,206 --> 01:09:11,706
[笑い]

1389
01:09:11,706 --> 01:09:14,249
聴衆：図形を描きます
歩行男の。

1390
01:09:14,249 --> 01:09:18,866
そして、彼の腕や脚
右側でなければなりません。

1391
01:09:18,866 --> 01:09:20,505
>> DAVIDマラン：OK、それはあなたが得るすべてです。

1392
01:09:20,505 --> 01:09:27,210

1393
01:09:27,210 --> 01:09:27,710
大丈夫。

1394
01:09:27,710 --> 01:09:31,609
なぜ我々は彼が何をしたかベンに明らかにしていません。

1395
01:09:31,609 --> 01:09:32,890
だから、拍手。

1396
01:09:32,890 --> 01:09:35,700
それは難しいかもしれませんでした。

1397
01:09:35,700 --> 01:09:37,931
>> だから我々は話をしているにもかかわらず、
かなり愚かな面で

1398
01:09:37,931 --> 01:09:39,680
ただ描画について
写真、うまくいけば

1399
01:09:39,680 --> 01:09:44,226
の程度を本当に理解することができます
必要になる場合があります表現

1400
01:09:44,226 --> 01:09:45,850
何をすべきかをコンピュータに指示するためです。

1401
01:09:45,850 --> 01:09:50,370
そして、実際には、事実ベン
こんなに早くこれを描くことができました

1402
01:09:50,370 --> 01:09:54,227
使用しての証のようなものです
言語、多分より高いレベル

1403
01:09:54,227 --> 01:09:57,060
英語のバージョン、彼を可能にします
言葉だけを使用する、または単語を聞いて

1404
01:09:57,060 --> 01:09:59,990
ビクトリアから、彼を許すこと
これらはただ描きますabstractions--

1405
01:09:59,990 --> 01:10:03,020
に歩く姿
持っているその種のright--

1406
01:10:03,020 --> 01:10:07,100
ではない、それにはいくつかの意味論的意味
ほぼ明らかなように、あなただけのしているとき

1407
01:10:07,100 --> 01:10:10,310
ダウンあなたのペンを置く、と言って、描きます
右に、左に描画します。

1408
01:10:10,310 --> 01:10:12,420
>> そしてこれは、あまりにも、非常にあります
プログラミングでは一般的。

1409
01:10:12,420 --> 01:10:15,253
これは、のようであると言うことだろう
非常に低レベル言語プログラミング

1410
01:10:15,253 --> 01:10:16,730
可能ならば0と1インチ

1411
01:10:16,730 --> 01:10:19,320
そして、これは、より高いレベルになります
Javaでの言語のプログラミング、

1412
01:10:19,320 --> 01:10:20,278
またはそのような何か。

1413
01:10:20,278 --> 01:10:22,050
のビット
単純化し過ぎ、それの

1414
01:10:22,050 --> 01:10:24,310
感情的なようなの並べ替え
あなたはときに感じることを感じて

1415
01:10:24,310 --> 01:10:26,630
一つの種類または別のものを使用して。

1416
01:10:26,630 --> 01:10:32,650
必要によってここに欲求不満のビット
このような精度のために、しかし、機会

1417
01:10:32,650 --> 01:10:34,930
と少し緩めるようにします
ここ解釈。

1418
01:10:34,930 --> 01:10:38,060
しかし、もちろん、バグ
結果として生じる可能性があります。

1419
01:10:38,060 --> 01:10:40,500
>> あなたはhome--で希望される場合は、我々
class--でこれを行うことはありません

1420
01:10:40,500 --> 01:10:41,900
しかし、あなたがしたい場合
この1家庭を持って、

1421
01:10:41,900 --> 01:10:43,387
私たちはこの飛び込むだろうと思いました。

1422
01:10:43,387 --> 01:10:45,970
ですから、これを再生したい場合
あなたの重要な他とのゲーム

1423
01:10:45,970 --> 01:10:49,180
や子供たちなど、あなた
同様にそれを楽しむことがあります。

1424
01:10:49,180 --> 01:10:54,460
>> それでは、先に行くと、最後の1を見てみよう
ここでは、計算的思考のためのもの。

1425
01:10:54,460 --> 01:10:57,010
そして、それはジョンに私たちをもたらします
ないクリップのオリバー、

1426
01:10:57,010 --> 01:11:00,070
あなたは昨夜見たかもしれません、
やや最近の号へ。

1427
01:11:00,070 --> 01:11:03,310
数ヶ月前、フォルクスワーゲン
高射砲のかなりを取りました

1428
01:11:03,310 --> 01:11:05,651
どのような理由のために、あなたが知っていれば？

1429
01:11:05,651 --> 01:11:07,025
彼らはトラブルに何のためになったのですか？

1430
01:11:07,025 --> 01:11:10,270

1431
01:11:10,270 --> 01:11:14,030
>> うん、emissions--ので
排出量をビートにしようとしていました

1432
01:11:14,030 --> 01:11:19,100
基本的に彼らを有することによりテスト
車が少ない環境を汚染します

1433
01:11:19,100 --> 01:11:23,620
自分の車は、試験されていたとき
さらに、環境を汚染

1434
01:11:23,620 --> 01:11:25,547
車がテストされていなかったとき。

1435
01:11:25,547 --> 01:11:28,630
そして、何がますます面白いです
世界では、あなたが推測できるように

1436
01:11:28,630 --> 01:11:34,072
何であるかlike--の議論から
CarPlay、車のためのAppleのソフトウェアit--

1437
01:11:34,072 --> 01:11:35,780
そして多くのその事実
私たちのますます

1438
01:11:35,780 --> 01:11:38,390
クルマにタッチスクリーンを有し、
恐ろしい量があります

1439
01:11:38,390 --> 01:11:41,250
人々年代のソフトウェアの
車今日は、これ

1440
01:11:41,250 --> 01:11:45,650
率直に言ってワーム時の全体の缶を開きます
それは、セキュリティと物理的なリスクになります。

1441
01:11:45,650 --> 01:11:48,070
しかし、今日のために、してみましょう
ちょうど何に集中

1442
01:11:48,070 --> 01:11:52,170
ライティングソフトに関与
それは、システムをgamedている可能性があります。

1443
01:11:52,170 --> 01:11:54,510
>> の定義について
問題、慣れていない人のために、

1444
01:11:54,510 --> 01:11:55,740
のは、ジョン・オリバーを見てみましょう。

1445
01:11:55,740 --> 01:11:58,115
とに精通した者のために
問題は、のは、それを見てみましょう

1446
01:11:58,115 --> 01:12:00,480
ジョン・オリバー経由で楽しいレンズでも同様。

1447
01:12:00,480 --> 01:12:05,810
だから私は、私はこの上でプレーをヒットさせ
3分の導入、と思います。

1448
01:12:05,810 --> 01:12:07,074
畜生。

1449
01:12:07,074 --> 01:12:07,740
[ビデオ再生]

1450
01:12:07,740 --> 01:12:08,170
-車 - 

1451
01:12:08,170 --> 01:12:09,919
DAVIDマラン：明らかに、
YouTubeで、it's--

1452
01:12:09,919 --> 01:12:12,500
 -  --the賢い文字で
ワイルドスピード映画。

1453
01:12:12,500 --> 01:12:16,080
今週、ドイツの自動車メーカー
フォルクスワーゲンは、自分自身を発見しました

1454
01:12:16,080 --> 01:12:19,430
のスキャンダルの途中で
潜在的犯罪者の割合。

1455
01:12:19,430 --> 01:12:23,020
>> -Volkswagenは数十億のためにブレースされています
罰金で、可能な刑事告発

1456
01:12:23,020 --> 01:12:25,530
その幹部のための、など
同社は謝罪します

1457
01:12:25,530 --> 01:12:28,790
11〜万台をリギングするための
それは排出量のテストを打つのに役立ちます。

1458
01:12:28,790 --> 01:12:32,110
>> -Certainディーゼルモデルを設計しました
その洗練されたソフトウェアと

1459
01:12:32,110 --> 01:12:35,410
位置を含む使用済みの情報、
ステアリングホイールと車両の

1460
01:12:35,410 --> 01:12:38,820
スピード、車があったかを決定するために
排出量のテストを受けています。

1461
01:12:38,820 --> 01:12:42,620
そのような状況下では、エンジン
有毒な排出量を削減することになります。

1462
01:12:42,620 --> 01:12:46,040
しかし、車はバイパスに装備されました
それが駆動されたときに。

1463
01:12:46,040 --> 01:12:51,370
排出量は、40に10を増加しました
許容可能なEPAのレベルを超える時間。

1464
01:12:51,370 --> 01:12:55,920
>> -Wow、10〜40倍
EPAよりも大きいができます。

1465
01:12:55,920 --> 01:12:59,570
それは最悪のことです
フォルクスワーゲンは、これまで行っています、

1466
01:12:59,570 --> 01:13:04,200
あなたがあれば言うかもしれないものです
あなたは第二次世界大戦のことを聞いたことがなかったです。

1467
01:13:04,200 --> 01:13:09,710
どのようにしかし、おそらく最も確実な兆候
フォルクスワーゲンはである多くのトラブル、

1468
01:13:09,710 --> 01:13:12,730
であることは非常に人々
トップは辞任しています。

1469
01:13:12,730 --> 01:13:16,320
最高経営責任者（CEO）は、後に水曜日に辞任しました
ダメージ・コントロールを行うためにスクランブル、

1470
01:13:16,320 --> 01:13:20,380
、彼は際限なく残念だったと言っています
それが判明するまで、素晴らしい鳴りました

1471
01:13:20,380 --> 01:13:22,920
彼は唯一の10％残念でした
しかし、彼の口を装備していました

1472
01:13:22,920 --> 01:13:25,600
人工的に彼の気の毒さを膨張させます。

1473
01:13:25,600 --> 01:13:29,700
その間、フォルクスワーゲンの米国
チーフは、彼自身の謝罪を持っていました。

1474
01:13:29,700 --> 01:13:33,580
>> これについて明確にするのを-LEt、
当社は不誠実でした。

1475
01:13:33,580 --> 01:13:37,140
そして、私のドイツ語の単語で、我々
完全にめちゃくちゃにしています。

1476
01:13:37,140 --> 01:13:41,360
>> -Yeah、しかし完全にねじ込ま
アップドイツの作品ではありません。

1477
01:13:41,360 --> 01:13:43,750
そして、ドイツ語
多くの美しいフレーズを持っています

1478
01:13:43,750 --> 01:13:50,070
ちょうどこのような状況を記述するために、
このような大体意味[ドイツ語]、など、

1479
01:13:50,070 --> 01:13:52,870
来る悲しみ
ビジネス関連の嘘から、

1480
01:13:52,870 --> 01:13:59,060
または[ドイツ語]、変換
関与するものの父を恥として

1481
01:13:59,060 --> 01:14:00,352
ガソリンの雲。

1482
01:14:00,352 --> 01:14:02,060
それは美しい言語です。

1483
01:14:02,060 --> 01:14:04,660
それはちょうど舌をオフ帆。

1484
01:14:04,660 --> 01:14:07,920
ところで、あの男の一方
謝罪は誠実に聞こえたかもしれません、

1485
01:14:07,920 --> 01:14:12,260
それは彼がで話していた注目に値します
2016年の公式打ち上げパーティー

1486
01:14:12,260 --> 01:14:17,310
そのまもなく意味フォ​​ルクスワーゲンパサート、
申し訳ありませんと言った後、彼はこのことを言いました。

1487
01:14:17,310 --> 01:14:18,850
>> あなたに来るために非常に多くを-Thank。

1488
01:14:18,850 --> 01:14:19,630
夜をお楽しみください。

1489
01:14:19,630 --> 01:14:21,300
次のアップレニー・クラヴィッツです。

1490
01:14:21,300 --> 01:14:24,640
>> [MUSICのPLAYING]

1491
01:14:24,640 --> 01:14:28,230
>> -OK、OK、あなたを終了します
次のアップで謝罪

1492
01:14:28,230 --> 01:14:31,940
レニー・クラヴィッツはしていません
地味な悔恨を叫びます。

1493
01:14:31,940 --> 01:14:35,830
それは悲鳴、我々はボンに尋ねました
・ジョヴィ、と彼はノーと言いました。

1494
01:14:35,830 --> 01:14:38,600
フォルクスワーゲンのブランドは持っています
ひどく破損して。

1495
01:14:38,600 --> 01:14:42,466
そして率直に言って、彼らの新しい広告
キャンペーンは正確に支援されていません。

1496
01:14:42,466 --> 01:14:47,289
>>  -  [ドイツ語]、フォルクスワーゲンで我々が希望します
であなたを欺くために謝罪します

1497
01:14:47,289 --> 01:14:47,930
私たちの車。

1498
01:14:47,930 --> 01:14:48,513
>> [END PLAYBACK]

1499
01:14:48,513 --> 01:14:54,090
DAVIDマラン：これはでした
回り道of-- sorry--

1500
01:14:54,090 --> 01:14:58,730
これは、回り道でした
根本的な問題を導入

1501
01:14:58,730 --> 01:15:02,810
あなたということですソフトウェア、中
特定の条件を検出する必要があります。

1502
01:15:02,810 --> 01:15:07,680
だから手元の質問がここに
車が潜在的にどうするか、です、

1503
01:15:07,680 --> 01:15:09,870
ソフトウェアで実装され
これらのプログラマによって、

1504
01:15:09,870 --> 01:15:11,850
それは実際にテストされていたことを検出？

1505
01:15:11,850 --> 01:15:14,150
だから、スーパー明確にします
彼らは何をしていましたか？

1506
01:15:14,150 --> 01:15:17,940
どこ環境でした
プログラマは考え出し

1507
01:15:17,940 --> 01:15:20,460
車はされていました
テストされ、彼らは何とか作っ

1508
01:15:20,460 --> 01:15:24,840
車は少なく、少ない排出量を放出します
排出量なので、あまり毒性ガス

1509
01:15:24,840 --> 01:15:25,470
そして、このような。

1510
01:15:25,470 --> 01:15:27,261
しかし、それは正常なとき
道路を走行、

1511
01:15:27,261 --> 01:15:30,350
それはちょうど同じくらい放出するだろう
それは望んでいたとして汚染。

1512
01:15:30,350 --> 01:15:33,870
>> だから、私たちはどのように書くことができます
このアルゴリズムの擬似コード？

1513
01:15:33,870 --> 01:15:37,820
どのように我々は擬似コードを書くことができ
車の中で実行されているソフトウェアのため？

1514
01:15:37,820 --> 01:15:43,390
私はそれが沸騰し、一言で言えば、意味します
このようなものまで。

1515
01:15:43,390 --> 01:15:48,000
試験された場合、以下を放出します。

1516
01:15:48,000 --> 01:15:50,750
他には、より多くを放出します。

1517
01:15:50,750 --> 01:15:52,630
しかし、それは少しです
高すぎるレベル、右か？

1518
01:15:52,630 --> 01:15:58,580
>> それでは、どのような本にようでダイビングをしてみましょう
手段をテストされているの抽象化。

1519
01:15:58,580 --> 01:16:06,340
言い換えれば、あなたは何も知らない場合でも、
質問の車について、どのような

1520
01:16:06,340 --> 01:16:13,440
あなたがいるかどうかを判断するために頼むかもしれません
あなたが車なら、あなたは、テストされていますか？

1521
01:16:13,440 --> 01:16:19,638
どのような特徴があるかもしれません
車がテストされている場合は提示？

1522
01:16:19,638 --> 01:16:21,026
>> AUDIENCE：テスト機器。

1523
01:16:21,026 --> 01:16:22,420
>> DAVIDマラン：テスト機器。

1524
01:16:22,420 --> 01:16:26,060
検査機器もしそうであれば
近く、少ないし、放出します。

1525
01:16:26,060 --> 01:16:28,669
だから私は、実施想像できます
カメラのいくつかの種類を持つこと

1526
01:16:28,669 --> 01:16:29,960
またはあなたの周りに何を検出。

1527
01:16:29,960 --> 01:16:32,870
そして、私は、それを提案してみましょう
あまりにも複雑に感じています

1528
01:16:32,870 --> 01:16:37,914
実際に追加を持っています
ちょうどその目的のためのハードウェア。

1529
01:16:37,914 --> 01:16:44,830
>> 聴衆：あなたがにしている場合
公園、あなたのフードが開いている場合。

1530
01:16:44,830 --> 01:16:47,320
>> DAVIDマラン：公園でか
フードオープンなので、それは良いことです。

1531
01:16:47,320 --> 01:16:47,420
>> AUDIENCE：そして車の走行。

1532
01:16:47,420 --> 01:16:50,480
>> DAVIDマラン：だから、少しです
よりconcrete--や車の走行。

1533
01:16:50,480 --> 01:16:55,690
だから、これはの連動になります
いくつかの異なる条件、可能ならば。

1534
01:16:55,690 --> 01:16:59,227
だから、車は公園内にある場合は、さらに
これは非常に機械的なものですが、

1535
01:16:59,227 --> 01:17:01,060
一般的に、私ができました
ソフトウェアを書く想像し、

1536
01:17:01,060 --> 01:17:03,476
特にがありますので、
多くの場合、そこに光、これらの日、

1537
01:17:03,476 --> 01:17:07,400
私はされてそこに想像できます
シフターを照会することができるソフトウェア

1538
01:17:07,400 --> 01:17:10,634
または、あなたは、公園で何をされません
あなたがドライブに、あなたは逆です。

1539
01:17:10,634 --> 01:17:12,550
そして、私は取り戻すことができます
はいどちらかの答え

1540
01:17:12,550 --> 01:17:14,400
あるいは全く質問のそれらの種類に。

1541
01:17:14,400 --> 01:17:17,630
>> そして私はまた、おそらく答えることができます
質問などは、オープンフードです。

1542
01:17:17,630 --> 01:17:21,860
たぶん、センサーのいくつかの種類があります
その1または0を私に戻って与えるのいずれか、

1543
01:17:21,860 --> 01:17:23,720
trueまたはfalse、ボンネットが開いています。

1544
01:17:23,720 --> 01:17:28,180
そして、車の走行が、私は検出することができました
その何とか何機構を介して？

1545
01:17:28,180 --> 01:17:30,430
同様に、車が実行され、I
それが上だと検出することができ、

1546
01:17:30,430 --> 01:17:32,127
私は何とか検出することができました
車が動いていると？

1547
01:17:32,127 --> 01:17:32,881
>> AUDIENCE：RPMを。

1548
01:17:32,881 --> 01:17:35,190
>> DAVIDマラン：うん、そうあります
常にその針こと

1549
01:17:35,190 --> 01:17:38,034
どのように多く回転するごとに説明します
分車輪が経験しています。

1550
01:17:38,034 --> 01:17:39,200
そして、私はその時に見ることができます。

1551
01:17:39,200 --> 01:17:43,090
そして、それはおそらく、0ではない場合
車が動いていることを意味します。

1552
01:17:43,090 --> 01:17:45,400
しかし、我々はしなければなりません
そこに少し慎重に、

1553
01:17:45,400 --> 01:17:49,780
because--のはthis--簡素化しましょう
私たちが今言った場合、車の走行の場合、

1554
01:17:49,780 --> 01:17:53,070
私たちはあまり放出したくありません、
車が実行されている場合、我々はしたいです

1555
01:17:53,070 --> 01:17:54,310
それはテストされています。

1556
01:17:54,310 --> 01:17:56,320
>> だから、いくつかの他があります
食材の人々

1557
01:17:56,320 --> 01:18:00,550
ソフトウェアがやっている仮説を立てています、
存在しないため、実際のソースコード、

1558
01:18:00,550 --> 01:18:05,130
あなただけの種類のから推測することができます
何についての車の物理的な効果

1559
01:18:05,130 --> 01:18:08,280
下に起こっている可能性があります
ソフトウェアでフード。

1560
01:18:08,280 --> 01:18:17,090
だから車は、おそらく実行している場合
たとえば、後輪は動いていません、

1561
01:18:17,090 --> 01:18:19,420
これが示す可能性があります
テストのいくつかの種類の？

1562
01:18:19,420 --> 01:18:22,830
私はここで何をほのめかしていますか？

1563
01:18:22,830 --> 01:18:24,830
うん、多分、それは1にです
これらのローラーのものの、

1564
01:18:24,830 --> 01:18:28,340
ここで、車輪などを回っています
前面または背面で、

1565
01:18:28,340 --> 01:18:32,570
それは前輪だかどうかに応じて、
後輪駆動、輪のように半

1566
01:18:32,570 --> 01:18:34,420
移動しているが、
他の2つは、これではありません

1567
01:18:34,420 --> 01:18:36,320
現実世界の奇妙な状況があります。

1568
01:18:36,320 --> 01:18:38,110
あなたは上で運転している場合
道路、それは起こるべきではありません。

1569
01:18:38,110 --> 01:18:40,568
しかし、あなたは倉庫にしている場合
ローラーシステムのいくつかの種類に、

1570
01:18:40,568 --> 01:18:41,630
それは確かに起こる可能性があります。

1571
01:18:41,630 --> 01:18:46,980
>> 私は、人々はまた、多分ことを提案したと思います
車が実行され、ステアリングされている場合

1572
01:18:46,980 --> 01:18:51,300
その移動していないホイール、
あまりに信号かもしれないが、

1573
01:18:51,300 --> 01:18:54,090
それはのための合理的だから
道路上の直線コースなどがあります。

1574
01:18:54,090 --> 01:18:57,960
しかし、その後も、人間はおそらくです
確かにそれを少し移動したり、

1575
01:18:57,960 --> 01:18:59,100
数秒を超えます。

1576
01:18:59,100 --> 01:19:01,030
またはのコース
分、オッズは、それはありませんです

1577
01:19:01,030 --> 01:19:03,510
に固執するつもり
全く同じ位置。

1578
01:19:03,510 --> 01:19:05,440
>> 換言すれば、我々
substractionを取ることができ、

1579
01:19:05,440 --> 01:19:08,200
あなたがテストされており、
その機能を打破

1580
01:19:08,200 --> 01:19:10,420
これらの構成要素の成分へ。

1581
01:19:10,420 --> 01:19:13,440
そして、それは本当に何フォルクスワーゲンのです
エンジニアは何とかしました。

1582
01:19:13,440 --> 01:19:17,070
彼らは意識的にソフトウェアを書きました
車がテストされているかどうかを検出、

1583
01:19:17,070 --> 01:19:20,440
そのため、あまり他のを発します
通常の方法で放出します。

1584
01:19:20,440 --> 01:19:22,690
>> そして、ここでの問題は、あまりにも、
ソフトウェアがないということです

1585
01:19:22,690 --> 01:19:26,080
あなたが本当にしない限り見ることができるもの
あなたは、いわゆるソースコードを持っています。

1586
01:19:26,080 --> 01:19:29,060
そのように二つの異なるタイプがあります
code--、少なくとも2つの異なるタイプ

1587
01:19:29,060 --> 01:19:30,130
世界のコードの。

1588
01:19:30,130 --> 01:19:33,150
ソースと呼ばれるものがあります
何とは違っないコード、

1589
01:19:33,150 --> 01:19:37,240
私たちは、ソースコードを書いてきました。

1590
01:19:37,240 --> 01:19:40,099
>> これは、で書かれたソースコードであります
擬似コードと呼ばれる言語、

1591
01:19:40,099 --> 01:19:41,640
これだけで何か英語に似ています。

1592
01:19:41,640 --> 01:19:43,140
それの正式な定義はありません。

1593
01:19:43,140 --> 01:19:46,770
しかし、C、およびJava、C ++、それら
すべての形式言語であることを、

1594
01:19:46,770 --> 01:19:50,610
あなたがそれらに書くとき、あなたは何を持っています
ソースコードを含むテキストフ​​ァイルです。

1595
01:19:50,610 --> 01:19:54,850
>> しかし、またに何かがあります
世界はマシンコードと呼ばれます。

1596
01:19:54,850 --> 01:20:00,579
残念ながら、機械コード、
ちょうど0と1です。

1597
01:20:00,579 --> 01:20:02,870
だから、マシンコードは何ですか
マシンはもちろん、理解しています。

1598
01:20:02,870 --> 01:20:04,470
ソースコードは人間が理解するものです。

1599
01:20:04,470 --> 01:20:08,390
>> そして、一般的ではなく、
常に、プログラムが存在します

1600
01:20:08,390 --> 01:20:14,090
プログラマが使用することは、ソースを取ります
コー​​ドとマシンコードに変換します。

1601
01:20:14,090 --> 01:20:17,400
そして、そのプログラムは、
一般的に、コンパイラと呼ばれます。

1602
01:20:17,400 --> 01:20:19,820
だからあなたの入力はソースコードであり、
あなたの出力は、マシンコードです

1603
01:20:19,820 --> 01:20:22,890
コンパイラはの作品です
そのプロセスを行うソフトウェア。

1604
01:20:22,890 --> 01:20:26,260
だから、これは実際にうまくマッピングします
私たちの入力、アルゴリズム、出力。

1605
01:20:26,260 --> 01:20:30,400
>> しかし、これは非常に特定の化身であります
それを言うためにあるもの、の、

1606
01:20:30,400 --> 01:20:34,200
あなたは、フォルクスワーゲンのの1を所有している場合でも
この有罪である車、

1607
01:20:34,200 --> 01:20:38,390
あなただけで開くことができないようです
フードまたはユーザーズマニュアルを開いたり、見て

1608
01:20:38,390 --> 01:20:42,690
ソースコードで、時間によって理由
それは、あなたの私道に車を達します

1609
01:20:42,690 --> 01:20:45,580
それはすでにです
0と1に変換されます。

1610
01:20:45,580 --> 01:20:51,310
そして、それは、不可能、非常に難しいことではありません
しかし、非常に難しいものの多くを収集するために

1611
01:20:51,310 --> 01:20:53,710
ただ見てから
0と1の基礎となります。

1612
01:20:53,710 --> 01:20:57,150
だから場合は、最終的には、それを把握することができます
あなたはどのようにマシンを理解しますoperates--

1613
01:20:57,150 --> 01:20:59,870
あなたが理解していれば、インテルはinside--
インテル・アーキテクチャー、

1614
01:20:59,870 --> 01:21:01,440
しかし、それは非常に時間がかかります。

1615
01:21:01,440 --> 01:21:05,010
とにもそこに、あなたがかもしれません
すべてを見ることができません

1616
01:21:05,010 --> 01:21:08,220
コー​​ドは実際に行うことができます。

1617
01:21:08,220 --> 01:21:12,521
>> このまたはこれについての質問
より一般的にはプロセスの種類は？

1618
01:21:12,521 --> 01:21:15,134

1619
01:21:15,134 --> 01:21:18,300
そして実際に、私たちは、この議論を結び付けることができます
アップルの昨日の議論に。

1620
01:21:18,300 --> 01:21:22,500
これは、あまりにも、である理由FBIできないだけを
容疑者の携帯電話に行くと見えます

1621
01:21:22,500 --> 01:21:26,820
そして、のために、コードの行を見つけます
例えば、パスコードを有効にします

1622
01:21:26,820 --> 01:21:28,940
またはその80ミリ秒の遅延を有効にします。

1623
01:21:28,940 --> 01:21:31,630
時間によってそれはですので、
仲間のiPhone上で、

1624
01:21:31,630 --> 01:21:34,975
それはすでにです
0と1に変換します。

1625
01:21:34,975 --> 01:21:38,015

1626
01:21:38,015 --> 01:21:40,820
>> さて、私たちのためにここに一時停止してみましょう
計算の考え方を見てください。

1627
01:21:40,820 --> 01:21:42,320
なぜ我々は15分間の休憩を取ることはありません。

1628
01:21:42,320 --> 01:21:44,130
私たちが戻ったときと、我々はよ
プログラミングを見てみましょう

1629
01:21:44,130 --> 01:21:46,550
自身といくつかをマップするために開始
これらの高レベルの概念の

1630
01:21:46,550 --> 01:21:49,780
遊び心のある場合は、実際に、
プログラミング言語。

1631
01:21:49,780 --> 01:21:51,089

