[음악 재생] 

이 CS50-- 하버드이다 대학 소개 지적에 컴퓨터 과학 기업 프로그래밍의 예술. 그리고 내 이름은 데이비드 마란이며, 난 그냥 오늘 아침에 생각했다, 그것은 놀랍게도 이십년 오늘이었다 내가 마지막으로 앉아 있기 때문에 너희들은 지금 어디에. 

그것은 1996 년이었다. 나는 학년이고, 나는 가고 있었다 맨 처음 CS50. 그리고 심지어 신경을 못했다 학년 그것을 자신을 위해, 부분적으로 인해 시간. 나에게 컴퓨터 과학 MEH, 종류를 좋아했다. 나는 괴짜의 비트가 증가했다 최대,하지만 난 정말하지 않았다 지적이 등장 무엇에 관심 단지의 전체 무리가 될 수 있습니다 모든 시간을 프로그래밍했습니다. 

그리고 난 솔직히 깜짝 놀라게했다. 이 과정과 컴퓨터 과학 더 일반적했고, 어느 정도, 아직 필드의이 명성을 가지고 우리의 때문에 많은 경우에, 조심 그것은 익숙하고 확실하다. 나는 쇼핑 할 때까지 그리고 그것은 정말 아니었다 이 클래스 그 학년 fall-- 심지어 다음, 나는 단지 등록 professor-- 때문에 내 첫 번째 멘토 중 하나, 브라이언 지금 Princeton--에서 커니 핸 나 클래스 패스가 실패 취할 수있었습니다. 그리고 실제로, 그 이유 오늘 우리는 허용하고 장려 이 수업을하는 학생들은 unsat / 앉아 있었다. 

그리고 단지 그 다음으로 학기의 끝 나는이 와우처럼 실현 않았다 이러한 생소한 분야 아니었다. 사실,이 선수는 아주, 필드 힘을 실어 더 호쾌, 특히 나중에, 나는 과목을했다으로 드라마 예술 (101)와 라틴 다음 결국 대학원 고고학, 정말를보고 시작 했 이 분야, 컴퓨터의 교차 과학, 인문학과, 자연 과학, 예술, 의학, 등을들 수있다. 그래서 그것은 그냥 무슨이다 컴퓨터 과학에 대한 깔끔한 궁극적으로 우리는 당신이거야 희망 see--의 적용이다 이러한 다른 필드, 어떻게 당신이 할 수있는에 현재와​​ 학기의 일부를 취할 아이디어와 실용적인 기술 다시 자신의 도메인에, 실제로이 교차로를 탐험 교양 과목과 과학. 

당신의 그래서 73 %, 지난 경우 올해는 표시입니다, 전에 CS 과정을 찍은 적이 없다. 나처럼, 당신이, 경우에 따라서 조금 느낌 무서워, 나 솔직히 당신은 아니에요 당신도 여기 왜 정말 확인합니다. 아마도 당신은 그냥 다음 몇 가지 지금 샌더스을 통해 친구. 즉, 완전히 괜찮아요. 여기에 목표는 후크입니다 당신과 당신을 안심하기 당신이 볼 경우 그 왼쪽과 오른쪽에 당신과 친구들을 보게 될 것입니다 거의 많은 경험으로 당신 있다는 자신을 가질 수 있습니다. 그리고 실제로, 우리는 공유 할 통계 나중에 오늘 어떤 인구 통계에 관해서 클래스는 일반적으로처럼 보인다. 

그리고으로는 reassurance--이 우리를 추가 나는이 과정을 통해 갔다하기 때문에 의미합니까 몇 년 ago--에서 과정의 강의 계획서 그이 항아리 무엇 궁극적으로 이 과정에서 문제 정말이 끝나는 곳 아니다 반 친구들에 비해 최대, 하지만 어디 주 (11)의 말 학기는 자신에게 상대를 종료 주 0, 어느입니다 우리는 오늘 여기있는 곳. 그리고 이것은 내가 실현 무엇인가 전 모든 년. 그리고 나는 많이 알고 클래스는이 말을하지만, 그건 컴퓨터 과학에서 특히 그렇습니다. 하루의 끝에서,이 분야 그것은 나에게 있었던 것에 익숙하다 당신에게있을 수 있습니다, 정말 단지 문제 해결에 대한. 그리고 이와 같이, 이것을 있는가 적용은 다른 분야를 얻을 수 있습니다. 그리고 사실, 경우에 우리는 시도 이것이 무엇을 의미하는지 증류하고, 이 문제 해결이다 그 본질에, 나는 아마 ... 일 것. 그래서 어떤 input--있다 그것 당신이 해결하기 위해 노력하고 있다는 점이다. 출력은 희망이다,있다 그 문제에 대한 해결책. 그 다음으로 우리는 것 컴퓨터 과학에서 말하는 이 블랙 박스는에있다 중간 당신은 반드시 그렇지 않은 그것이 어떻게 작동하는지에 대해 신경해야합니다. 당신은 자신이 결국 수도 그 상자 안에 무엇이 구현합니다. 그러나 오늘날의 목적과 이상 일반적으로 삶의 모든 당신은 걱정 이러한 문제를 해결받을 것입니다. 

그리고이 과정은 무엇인가 궁극적에 대한 탐구 의 교차점 이러한 입력과 출력, 이들은 소위 알고리즘, 우리는 곧 알게 되겠지만, 그 무엇 구현 아래가, 후드. 그러나 이러한 입력과 다음은 outputs-- 있다는 사실은 무엇을 의미합니까? 음, 하루의 끝에서, 우리는 필요 정보를 나타내는 몇 가지 방법입니다. 이는 컴퓨터에서 특히 그렇다 이는 그와 같은 공상과 복잡한 보일 수도 꽤 바보 장치입니다. 그것은의 여부를 electricity--합니다 케이블 또는 input-- 같은 배터리 다음은 몇 가지를 생산 화면에 preprogramed 응답. 

그러나 우리는 어떻게에서받을 수 있나요 이 완료 시작? 음, 문제는 어떻게 해결해야하는거야? 글쎄, 우리는에서, 수도 모든 학기의 시작, 출석을하려고 이 같은 방입니다. 그래서 하나, 둘, 셋 같이 할 수 있습니다. 아니면, 내가 그랬다면 종류를 추적하는 myself--의 things-- 추적하기 나는 빨리 손가락이 부족할 수 있습니다. 그래서 난 그냥 해시 marks-- 하나를 만들 수 있습니다 사람, 둘, 셋, 넷, 다섯, 여섯, 일곱, 여덟. 그리고 우리 모두는 아마이 여부를 당신의 손에, 이런 짓을 또는 종이에. 그리고 이것은 단지 실제로 뭔가 단항 notation--라고 여기서 당신은 단지 하나의 문자가있는 경우 당신의 알파벳 하나 해시 마크이 경우, 모든에 대한 당신이 계산하려는 입력, 당신은이 중 하나를 내려 놓고해야 이 마크 중 하나를 편지들. 

괜찮아. 즉, 모든 벌금과 좋은 및 모든 복잡하지. 그러나 컴퓨터는 모든되지 않습니다 훨씬 더 복잡합니다. 사실, 당신의 대부분의 아마 당신이 정말로 한 경우에도 알고 이 것이 무엇을 의미하는지 생각 컴퓨터는 0을 이해 소위 이진 시스템 ones--. 우리 인간 반대로되어 있으므로 훨씬 더 정교한하는 한 우리는 화려을 통해 0을 이해. 

하지만 이진 처음에 있더라도 그 익숙한 눈, 모든, 그것은 바로 시스템처럼 밝혀 그리고 아이디어 우리는 이미 알고있다. 예를 들면 그래서, 이것을 고려하십시오. 이 심볼의 단지 순서입니다. 그리고 당신의 모든 때 아마, 그것을이기는 123-- 아무것도 생각하지 거기에 정말 흥미 롭군요. 그러나 왜이 번호, 123? 이 단지에 상형 문자이다 screen--는 패턴 사람이 그리거나 입력 한을 생각. 하지만 당신은 나 같은 경우 아마 초등학교에서 기억 일종의있다 그 여기에 열 또는 장소. 하나의 장소와 거기에 십의 자리와 수백의 장소. 이 이유는 123 세 가지 기호가 아닌 패턴 되기 때문 물론, 만약 우리 , 수백 곳의 하나가 당신은 100 번 하나의 수학을 다음 두 십의 자리입니다. 그래서 10 번이, 다음 세 가지에의 하나의 장소와 그 1 시간 3입니다. 그리고 당신의 그 모든를 추가 할 때 물론, 당신은 100 플러스 20 플러스 3을 찾으실 수 있습니다. 

그래서 우리는 단지 패턴으로 시작 의 alphabet--을 symbols-- 하지만 우리는에 의미를 매핑 그것은이 컬럼의 방법으로. 글쎄, 그것은 밝혀 컴퓨터는 정말 아니다 당신과 나에서 모두 다른. 하지만 그 대신 10의 힘을 사용하여, 그래서 speak--하는 1, 10, 100, 1000, 10,000 장소 등 실제로을 forth-- 단지의 능력을 사용 2-- 이렇게 한 2,4-하고 우리가 더 많은 숫자를 넣어 경우, 8, 16, 32, 64, 128, 등등. 그리고이 방법 컴퓨터입니다 숫자 0을 나타내는 것, 단지 우리에게 인간을 좋아한다. 

0, 0, 0-- 당신은 아마 추측 할 수 0과 1의 어떤 패턴, 컴퓨터 할 수있는 경우에만 0 말하거나 1-- 무엇 패턴을 표현하는 것입니다 수 우리 인간은 1로 알아? 0, 0, 1 Yeah--. 괜찮아. 따라서 0, 0, 1은 우리가 나타내는 어떻게 1, 그래서 당신은 경사 될 수 있습니다 당신이있는 경우, 숫자 2를 대표하는 네 가지의 장소와 2의 장소 한 장소로, 당신은 잘 말할 수 있습니다 우리가 하나의 장소에 하나가 있다면, 지금 우리가 원하는 2 카운트, 당신은 수도 이 작업을 수행과 제로가이 둡니다. 그러나 물론이없는 방법입니다 소수 시스템 중 하나를 사용할 수 있습니다. 당신은 자리에 넣어 경우 이러한 열의 양쪽 당신은 산술 연산을 할 수있어. 그래서 수는 I 않았다 실수로 단지 대표? 

그래서, 3의 2 회 1 더하기 1 때문에 시간 1은 물론, 우리에게 세 가지를 제공합니다. 그래서이 두 가지 일 것입니다. 비트는 일종의 0으로, 말하자면, 플립 더 이상 9 역할처럼 하나가됩니다 당신이 일을 수행 할 때 0이된다. 이것은 다음 과정의 세 가지 일 것이다. 또 다른 흥미로운 것은 Four-- 사람이 이월 경우, 발생 당신은 말하자면, 1을 수행한다. 그래서 이것은 물론, 4입니다. 

하지만 빨리 감기를 지금하는 경우, 가는 가장 큰 수는 얼마입니까 컴퓨터가 표현 할 수있을가? 그래서이 경우에는 단지 일곱 오른쪽입니까? 당신이 네 가지에서 하나를 가지고 있기 때문에, 두개의 하나 하나에 하나. 그래서 4 플러스 2 플러스 1입니다. 그래서 일곱 당신에게 제공합니다. 그리고 실제로, 그것은 것 첫 눈에 보인다 컴퓨터는 계산 할 수 이보다 더 높은 없습니다. 

그러나 물론 이것은 사실이 아니다. 우리가 원하는 때 우리 인간은 어떻게해야합니까 999와 같은보다 높은 계산하는 방법? 그냥 하나를 가지고 단지 왼쪽으로 네 번째 자리를 추가합니다. 그리고 실제로 우리는 할 수 있었다. 우리는 팔의를 가질 수 및 16의 자리를 배치 및 32의 장소, 64, 128--하고 그냥 무한대까지 계속 유지할 수 있습니다. 그래서이 0과 1 ones-- 소위 바이너리 외 시스템 어떤 컴퓨터 과학자 것입니다 일반적으로 비트 또는 이진 자리를 호출합니다. 

하지만 지금은, 우리가 어떻게에서받을 수 있나요 개념이나 이런 것들의 그래픽 실제 컴퓨터에? 우리는 여기에 단계를 건너 뛰는 것 같습니다. 마지막 음, 만 입력 오늘의 여기 내 노트북​​에 전기의이 흐름입니다. 그것은 오래되었습니다 경우에도 당신이 생각하기 때문에 시간 나에 대해 생각하지 않았다 어떻게 전기 작동, 에 흐르는 전자가있다 또는 밖으로, 그 입력의 나의 종류입니다. 

그래서 우리가있어 모든 것을 있는지 여기에 입력으로 받고, 우리는 그 정보로 무엇을 할 수 있습니까? 음, 우리는 제로로 생각할 수 있습니다 전기의 단지 부재. 아무것도 flowinw 없다, 아무것도 이동, 아무 것도 발생하지 않습니다. 그건 그냥 기본은 0 state--. 이 경우 그러나 전기, 왜 흐르는 우리는 단지 임의적으로하지 않습니다,하지만 전 세계적으로 일관 한 것을 호출합니다. 

따라서 단순히 힘을 가지지 않는함으로써, 우리는 제로, 네 힘을 가지고 우리는 동력 one--, 네 힘이있다. 그리고 그런 식으로 뭔가를 사용하여 물리적 또는 전자 우리는이 개념을 구현하기 위해 시작 뭔가 하나 또는 0을 주도했습니다. 사실, 우리는 여기를 통해 할 수있다. 그래서 여기, 내가 가지고 있지 세 가지 있지만, 팔 전구, 각각의 자신의 스위치가 있습니다. 

그래서 내가 표현하고 싶다면 숫자 일곱 여기에, 나는이 세 가지 전구를 켤 수 있습니다. 그리고 실제로, 내부 내 컴퓨터는 수백만이다 다만 것들을 수십억 보다 작다라는 트랜지스터 스위치, 당신은 단지에와 해제하는 것이. 그래서이 상대적으로 big--된다 내 laptop-- 내부 big-- 스위치 많은, 많은, 많은이며, 더 많은 스위치. 하지만 그들이 모두 정확히 that-- 뭔가를 끄고, 뭔가를 켭니다. 등과 같은 컴퓨터 나타낼 수 그 수백만 또는 수십억 트랜지스터, 많이와 0과 1의 제비. 그리고 다른 하드웨어는 여전히있다 수 있습니다 당신은 정보를 장기 저장 그래서 당신이 당길 때 당신이 그것을 잃지 말고, 연결합니다. 그러나 그것은 다른 날에 대한 이야기​​입니다. 

그래서 우리는 이러한 비트와 함께 무엇을 할 수 있습니까? 우리는 단지 걸릴 수 있음 가구 있구만의 오프 압력 누군가가 와서 할 수 있습니다 여기 및 데모를 제공? 내가 먼저 손을 보았다. 당신의 이름은 무엇입니까? 마데 : 마데. DAVID 마란 : 마데은 최대 어서. 만나서 반갑습니다. 마데 : 만나서 반가워요. 

데이비드 마란 :이 길을 가자. 나는 당신을 입술 할 필요가 없습니다. 괜찮아. 그래서 여기, 우리가 한 번 notice--, 2가 있으며 우리가해서 돌출이를 편집 할 수 있습니다 하나, 2, 4, 여덟, 16, 32, 64, 128. 이것은 의도적이다. 8 비트가 있습니다 here-- digits-- 0과 1 이진. 그리고 약간 measure--의 유용한 장치입니다 측정하지 유용 단위 자체 상. 일반적으로 적어도 원하는 이러한 것들의 팔, 일명 바이트. 그래서 우리는 여기에 비트의 바이트를 가지고있다. 

우리가 당신을에 도전하고 싶어한다면, 예를 들어, 이진, 맞춤법 검사, 이 값은 42 here--. 그에 자상을 원하십니까? 

마데 : [들리지]. DAVID 마란 : 그래, 그냥 밀어 앞에 작은 흰색 스위치. 그리고 당신은 철자 할 (42) 출력, 최대 기회가 이 CS50 응력은 볼이 얻을 경우. 괜찮아. 그래서 당신은 (32)이있다. 우리는 42를 필요로하는 것입니다. 그래서는 8을, 그래서 그 (40)이다. 그리고 excellent-- 매우 잘 수행. 고맙습니다. 

[박수 갈채] 괜찮아. 그래서 우리는 또 하나의 스트레스 볼 수 있습니다. 우리는 수도 경우의이 한 번 더하자. 또 다른 자원 봉사? 무료 스트레스 공, 무료 스트레스 공입니다. 승인. 여기 중간에, 당신이 와서 하시겠습니까? 괜찮아. 알아. 우리는 거기에 갈. 

그래서 번호는 here-- 내려 온다. 당신의 이름은 무엇입니까? 

데비 : 데비. 

DAVID 마란 : 데비. 승인. 최대 데비 어서. 만나서 반갑습니다. 그리고 우리가 거​​ 야 당신이하는 spell-- 당신은 거기 남아 수 있다면 한 moment--의 번호 50입니다. 하지만,하지만,하지만,하지만, 그러나, 이들은 이유가 초등학교 자석. 그냥 모든 권리, 좀 더 열심히있어? 팔은 여전히​​있다. 괜찮아. 그래서 우리는에이 있습니까? 우리는 32있다. 좋은. 32 플러스 (16) 우리를 제공 48-- 너무 가까이. 그리고 멋진. 데비 축하뿐만 아니라. 

[박수 갈채] 

괜찮아. 그래서 우리는 하루 종일이 작업을 수행 할 수 있습니다 그것은 모두가 훨씬 더 얻을하지 않습니다 재미 있고 더 도전. 하지만 정말 point--이다 어떻게 비교적 간단하다 그것은 하루의 끝에, 무슨에이다 컴퓨터가 정보를 저장 않는다 입력을 저장하는 궁극적 저장하거나 그 출력을 나타냅니다. 그러나 혼자 숫자는 아니다 모든 재미. 

인간 그래서, 몇 년 전, 결정, 그거 알아? 이 경우 좋은 것 컴퓨터는 없었다 연산을위한 계산기 작업,하지만 실제로 수 워드 프로세싱 등의 작업을 수행하거나, 이메일 또는 현대 화신 기술이 가지. 그래서 세상은 결정 임의로하지만, 보편적으로, 당신은 자본을 저장하려면 컴퓨터, 문자 A, 그거 알아? 그냥 모두 저장하는 데 동의하자 0과 1 ones-- 일부 패턴 bits-- 그 궁극적으로 십진수 65를 나타냅니다. 우리는 모두에 동의합니다. 

66 B를 나타내는 것, 67 C를 나타내는 것, 그리고 다른 패턴의 다발있다 0과 1, 또는 기본 번호, 그 표현 것이다 또 다른 편지. 만약 당신이 종류의 정신적 그래서 잠시이 흡수, 나는 일부러 통해습니다 H 72 나는 73입니다 I. 만약의 맥락에서 다음 컴퓨터, 워드 프로세싱 프로그램 또는 이메일 가지고 후드 아래에 밝혀 bits-- 패턴의 이러한 패턴 나타내는 비트 72, 후 73, 후 33-- 이 해당 프로그램에 무엇을 주문 할 수 있습니까? 

그래서 안녕,하고 뭔가. 우리는 반드시 참으로 알고 있지만하지 않습니다 33--하지 차트에 earlier-- 단순히 느낌표했다. 그래서 (72)는 33 일, 73 I이며, H이었다 여전히 느낌표가 될 수 있습니다. 하지만 그 모든 벌금과 좋은 사실 요즘보다는 그냥 사용하는 7 ~ 8 뭔가 비트, 감사합니다 반대로 유니 코드라고 하루에 다시 ASCII로, 우리는 실제로 훨씬 더를 나타낼 수 있습니다 단지보다 재미있는 문자 이러한 원래 영어 편지를 바이어스. 그러나 우리는 또한도 나타낼 수 있습니다 색상과 같은 깔끔한 것. 

혹시 약어를 들었다 경우 빨간색, 녹색, 파란색 RGB, 그 그냥 컴퓨터 것을 의미한다 일반적 bits-- 3 세트 사용 대표 비트의 일부 수 당신이 원하는 얼마나 많은 적색 숫자, 비트의 또 다른 세트 얼마나 많은 녹색 당신이 원하는, 다른 세트 번호 얼마나 많은 블루 당신이 원하는. 그래서 큰 숫자는 많은 의미 빨강, 소수은 빨간색을 의미합니다. 그리고 이러한 친절 여기의 중간 값. 

그래서 좀 빨간색을주고, 나에게 몇 가지를 제공합니다 녹색, 나에게 푸른 조금을 제공합니다. 그리고 당신은 그 세 음영을 혼합하는 경우 서로 색이 경우, 이 어두운 그늘을 얻을 노란색 또는 갈색. 하지만 팔의 패턴 플러스 팔 플러스 그래서 24 bits-- eight-- 왼쪽에서 오른쪽으로, 어떻게 컴퓨터입니다 특정 색을 나타내는 것입니다. 지금이 화면에 단지 점이다. 당신은 당신의 TV에서 정말 가까이 보면 당신의 컴퓨터, 당신은 점 또는 픽셀을 볼 수 있습니다. 그리고 당신의 전체 그리드가있는 경우 화소의 가로 및 세로 당신은 이미지를 가지고있다. 그리고 당신은 가지고가는 경우 이미지 후 세척 자신에게 다른 이미지를 보여, 다른 이미지, 다른 이미지, 다른 이미지, 정말 빨리, 물론 당신은 영화가 있습니다. 

우리가 시작했던 곳 그리고 알 수 있습니다. 우리는이 0과 1로 시작했다. 우리는 진수로 거기에서 일 숫자는, 우리는 그들을 방법을 나타냅니다. 이제 우리는 알파벳의 문자를 가지고있다. 그러나 다른 문맥 기다려, 우리는 사용할 수 있습니다 더 많은 비트와 대표 색상 몇 가지. 즉시 당신이이 같이 색상을 표현하는 능력, 가 표현하는 능력을 가지고 사진, 애니메이션 GIF 화면 및 기타 문자. 그리고 당신의 전체 무리가있을 때 이미지는 한번에 인간에 의해 비행 그것은 영화처럼 보인다 그래서 당신은뿐만 아니라 동영상을 찾으실 수 있습니다. 

그래서 사용이 매우 간단한 프리미티브는 우리 할 표현의 방법이 궁극적으로 모든 미디어 이러한 형태의. 그리고 우리는 다시 추상화 한 다시 다시, 우리까지 가장 낮은 수준에서 얻을 이 최고 수준이다. 그래서이 우리에게주는 추상화의 일반적인 생각. 그러나 우리는 여기에서 시작했다. 

여기 지금, 우리는 수도 컴퓨터에 대표 0과 우리의 입력, 0과 우리의 출력, 하지만 무슨 일이 상자 안에 간다? 즉, 여기서 컴퓨터의 과학은 흥미 가져옵니다. 당신이 실제로 가지고 곳이다 당신의 자신의 마음이 문제를 해결하기 위해 부담합니다. 우리는 지금에 대한 규정 할 수 있습니다 학기의 나머지 부분, 예. 나는 어떻게 진 일을 알고있다. 나는 어떻게 ASCII 또는 Unicode-- 기억 매핑이 작품을 편지들입니다. 그리고 그것은 확실히 서 그 우리를 추론하기 빨간색과 녹색 나타낼 수 있으며, 블루,뿐만 아니라 멀티미디어를 나타냅니다. 그러나 이것은 흥미로운 물건입니다. 이 사람을 만드는 것입니다 문제를 해결할 수. 

그리고 하나의 문제 우리는 참으로 수행하려면 출석을 복용, 또는 알고리즘이 일을. 그리고 또, 나는이 작업을 수행 할 수 있습니다. I는 4 개의 하나, 둘, 셋 할 수도 다섯, 여섯, 일곱, 여덟 아홉. 그리고 나는 그것을 쓸 수 아래로 추적합니다. 하지만 그건 단지 내가 어떻게 것 정보를 나타냅니다. 아니면 내가이 faster-- 할 수있는 2, 4, 여섯, 여덟, 열, 12, 14, 16, 18, 20, 22--이 두 번 같은 느낌 빠른하지만 여전히 시간이 훨씬 걸릴 것. 

우리가 아직 활용한다면 그것은 밝혀 다른 resource-- 실제로 컴퓨터 요즘은 여러 개의 CPU 또는 뇌를 가지고있다. 그것은 할 수있는 컴퓨터를 밝혀 한 번에 많은 물건을, 실제로 우리,이 방에, 정확히이 대표 있습니다. 

그래서 사회적으로 약간의 당신이 유머 저를한다면 어색하지만, 단지 세 단계를 들어 보자 날이 바로 장소에있는 모든 사람에게 잠시 일어 서서합니다. 일어나. 그래서 자신에게 생각, 수 one-- 그래서이 방에있는 모든 사람, 하지 않았다 사람들을 제외하고 오블리주, 숫자 하나를 생각하고있다. 그래서 전화 번호는 바로 지금입니다. 즉 바와 같이, 제 1 단계, 또는 컴퓨터 과학자 또는 프로그래머 이렇게 일반적으로 것입니다, 우리는거야 제로 카운트 시작합니다. 가장 적은 수의 우리가 할 수있는 경우 그 전구로 표현 단지 그들을 남겨, 제로 모든 오프, 난 수도뿐만 아니라 단지 에서 계산 시작 제로 대신 하나입니다. 그래서 그게 무슨이다 컴퓨터 과학자는 않습니다. 그래서, 제로 단계 일어 서서 번호 하나 생각합니다. 다음 단계는이 항아리 쌍 누군가가 서 해제 함께 귀하의 번호를 추가합니다. 훌륭한. 

시간이 순간에 따라서, 말 그대로 모두가 참여 제외, 숫자 2의 생각 하나 이상한 사람을 위해 우리가있는 경우 방에있는 사람들의 홀수. 그리고 지금 여기에 세 번째 단계로 이동한다 앉아서해야 당신이 항아리 하나 될 수있다. 당신이 앉아해야 중 하나는, 당신은 여전히​​ 서하는 경우, 하나의 단계로 돌아갑니다. 괜찮아. 괜찮아. 그래서 점점 더 많은 사람들이 해야는 앉아 될 수있다. 이 유도되는 것을 알 수 있습니다 사이클의 어떤 loop--. 여러분 중 일부는 어색하게 붙어 있어야한다 단계 하나를 사이에 앞뒤로가는 두, 하나, 둘, 하나, 둘. 괜찮아. 우리의 첫 번째 버그. 우리는 다룰 것이다. 괜찮아. 내가 일을 함께 자극 해보자. 

이론적으로, 한 사람은 서 모두가 오프 페어링 계속. 하지만 내가 일을 속도를하자 사람들과 여전히 서. 어떤 번호가 생각하는? 46. 승인. 가서 앉아. 너희들은 여전히​​ 서있다. 아직 누가 서있다? 어떤 번호가 생각하는? 승인. 

그래서 우리는 당신에게 돌아올 것입니다. 다시? 그 무엇입니까? 22. OK 사람까지 다른 네 top--? 34. 승인. 여기 여기 내 right-- 최대에 이상? (132), 아주 좋은. (22)? 

승인. 그리고 아직도 누가 서있는거야? 여기? 46, 아주 좋은. 72. 나는 더 이상 멈출 수 없습니다. 네? 30 반갑습니다. 여기? 23? 23. 

그리고 나는 그 사람 생각 너희들, 아니 압력을 제외하고. 아, 잠깐. 28? 그냥 팔. 승인. 그냥 팔. 여기 아래로? 30. 23. 24. 18. 이것은 최악의 구현 지금이 알고리즘의. 승인. 그래서 다른 사람? 다른 누군가? 승인. 하나 더. 16? 승인. 16. 괜찮아. 내가 누군가에 놓친하지 않은 경우 그래서 여기에 눈부심, 내가 입력 쳤을 때, 우리는 알고리즘은, 볼 샌더스에있는 사람들의 총 수입니다. 다시 때문에, 모든 사람처럼이다 당신이 앉아서 같이 전화 번호를 건네 다른 사람에게, 다른 사람에게, 다른 사람에게, 이론에 있기 때문에, 결국, 단지 하나의 어려운 사람이 서 남아 있어야합니다. 하지만 괜찮아요. 우리는 수동으로 물건을주었습니다. 그것은보고 특히 어렵다 이 특별한 공간입니다. 

사람의 총 개수 우리가 여기에 있습니다 (546)라고 생각합니다. 총 수는 내가 물려 받았습니다 교육의 동료에 의해, 누가 그것을 이전했다 학교 느린 방법은 820이었다. 

[웃음] 

[박수 갈채] 

괜찮아. 그래서 확실하게 한 다음,이 버그가 있습니다. 그리고 괜찮아요. 그리고이 다시 생각한다 처음 것을 당신은 반드시 작동하지 않는 물품. 이뿐만 아니라 여기에 나에게 일어났다. 그러나 이제 지금 우리가 어떻게 수도 생각해 보자 뭔가이 같은 생각을 적용 당신은 전에 볼 수도있는 이 오래된 학교 기술 here--입니다 정말 큰 전화 번호부. 그리고 가정이 전화 번호부 그 1000 페이지와 1000 이름이 숫자 순으로 그것의 내부. 

음, 우리는 종류의 비슷한을 적용 할 수 바로이 실제 문제에 대한 생각, 그냥 날 사용. 난 그냥 가지 사기 여러분 모두를 활용하여 많은 다른 CPU를 많이 또는 뇌 일부 알고리즘을 실행. 그러나 그것은 단지 약간의 경우 옛 날, 나는 아직도 할 수 아이디어의 동일한 본질을 활용 분할하고 그 문제를 정복 또 다시, 이에 당신의 절반, 당신의 절반, 당신의 절반, 당신의 절반, 이론적으로, 앉아 유지 우리가 남았다까지 이론적 한 사람과. 

이 오래된 학교에 따라서 technology-- 우리는하지 않습니다 문제는이를 map-- 필요 오래된 학교 기술, 우리는 사람을 찾고 시작할 수 있습니다 마이크 스미스, 한 번에 한 페이지처럼. 그리고 아니, 마이크 여기에없는 것을 알 수있다. 저는는 A 섹션에 여전히입니다. 결국, 나는 발견 나 자신 B 섹션입니다. 그리고 이것은 algorithm--입니다 단계별 지시. 선두 1 페이지 분에서 시작 한 번에, 마이크 스미스를 찾습니다. 문제는이를 correct--입니다 알고리즘 또는 방법? 

네, 맞습니다. 마이크가 여기에 있다면, 결국 나는 그에게 얻을 수 있습니다. 그러나 효율적이 아니다. 그것은 분명히 매우 느리다. 그래서를 활용할 수 같은 twosies은 접근. 나는 두 종류의 작업을 수행 할 수 있습니다 넷, 여섯, 여덟, 열, 12. 그것은 빠른 배입니다. 나는 마이크에 도착하는거야 그는이 있다면 빨리. 이 맞습니까? 네,하지만 나는 little-- 없음을 들었다. 지금은 노를 들었다. 네. 잠재적 버그가 있습니다. 어쩌면 마이크는 실수 도착 두 페이지 사이에 끼워, 내가 통해 비행이기 때문에 한 번에이 두. 적어도 우리는 몇 가지가 필요합니다 그래서 조건 수정 프로그램의 종류. 나는 야, 말할 필요 나는 그 사람을 공격하는 경우 이름은 T 대신의 S로 시작 더 나은 다시 하나 이상의 페이지를 두 번. 처음,하지만 고칠 그래서 버그. 그러나 우리 중 누구도 찾아 갈되지 않습니다 1,000 페이지의 전화를 통해 마이크 스미스 한 번에 한 페이지 예약. 할 거 정상적인 사람은 무엇입니까? 당신은 S 년대에 갈거야, 당신은 어디 S 년대를 알고 있다면. 당신은 중간에 대략 갈 수도 또는 약간 끝으로 왜곡. 그리고 내가 여기 내려보고 나는 M 섹션입니다. 하지만 당신은 무엇을 알 수 있습니까 지금이 문제에 대한, 우리는 반드시하기 전에 알아야하지 않았다 우리 모두 함께 단지 자신을 계산 등가? 음, 마이크는 명확 것입니다 책이 반으로 될 그는 모든 여기 경우는 분류되어 있기 때문에. 

그리고 당신은 매우 dramatically--을 할 수 

[허걱] 

알아. 

[박수 갈채] 

실제로하면 정말 쉽게 당신이 척추를 내려 않습니다. 하지만 당신은 던질 수 멀리 문제의 절반입니다. 지금, 나는 같은 problem-- 왼쪽 해요 전화의 마이크 스미스를 찾아 book-- 하지만 지금은 전화 번호부는 M에서 시작 및 Z에 간다, 그러나 그것은 큰 절반입니다. 

하지만이 인상적 것입니다. 그냥 이론, 너희들처럼 여러분 모두는 한 번에 반 앉았다 문제는 큰 절반있어 반 또 다시 같은 큰. 그래서이 문제가되고있다 큰 등 같은 문제가 있지만, 반. 지금은 250 페이지의 문제입니다. 최대한 빨리 실현으로, 오, 난 실수로 T 섹션입니다. 나는 너무 멀리 갔어요. 나는 절반을 던질 수 멀리 전화 번호부의. 지금, 나는 아래로 해요 문제의 분기. 

그리고 당신은 반복, 반복 할 수 있습니다 이론적으로, 당신이있어, 때까지 반복 한 페이지 왼쪽. 그리고 마이크가 해당 페이지에있는 경우, 지금은이 문제를 해결할 수 있습니다. 그러나 나는 그것을 얼마나 빨리 해결 했습니까? 첫 번째 경우, 같은 날 데려 갔어 아마 1000 단계는 마이크 스미스를 찾을 수 있습니다. 그것은 가구 있구만 촬영 한 수 나는 전화 번호부를 집어 들었다 내가보기 시작 한번에 한 페이지 씩 마이크는 1,000 페이지 이상있을 수 있습니다. 

두 번째 방법 아마 500 단계 나 소요 나는 비행이기 때문에 한 번에 두 개의 관통. 그리고 비록 세 번째 접근법 그것은 특히 강력한입니다. 그러나의 실제로 우리 생각 해보자 세 번째 접근했다. 난 그냥이 전화 할게 무엇을해야합니다 여기서 진술 한 번에. 전화 번호부를 선택합니다. 전화 번호부의 중간에 엽니 다. 이름 봐. 그리고 일이 조금 얻을 더 지적으로 흥미, 간단한 아직도 경우. 스미스는 사이 인 경우 그 현재 페이지에 이름, 다음 조건 뭔가. 그것은 도로에 포크처럼. 마이크를 호출합니다. 마이크는 이름 사이 인 경우 해당 페이지에서 마이크를했다. 하지만 줄 경우 행 사를 할 당신이 경우 나무는 사실이다. 그 질문에 대한 대답은 '예'입니다. 

스미스는 book--에서 이전 다른 경우 즉, 나는 M 섹션에있어 경우 나는 사람을 찾고 있어요 왼쪽은, 그때 나는 무엇을해야하는지 매우 비슷한입니다. 그럼 난 중간에 열립니다 책의 좌측 절반. 그럼 왼쪽으로 이동하고, 이 단계로 돌아갑니다. 이 이름 봐. 

그래서 즉, 같은 일을 하지만 문제에 절반으로되어있어 그. 당신은 어떤 사람 알아? 스미스는 책의 뒷부분에있는 경우 내가 찾고 있어요 페이지를 기반으로, 의 중간에 열려 이 책의 오른쪽 절반 다시 돌아가 두 단계로, else-- 여기에 네 번째 가능성이있다. 마이크의 하나 여기 또는 왼쪽으로 또는 오른쪽 또는 거기에. 그리고 여기에 우리가 더 나은이를 고려합니다. 그리고 사실, 당신이 이제까지 가지고 한 경우 컴퓨터는 당신에 충돌 즉, 때때로, 그러나 항상 단지 인간의 프로그래머의 결과가 아니다 실현, 오 거기, 촬영 실제로이 네 번째 시나리오. 그리고 당신은 코드를 작성하지 않는 경우 이 시나리오를 처리하기 위해, 때때로 당신은 몰라 컴퓨터가 할 수있는 것. 그리고 실제로 프로그램이 충돌 할 수 있습니다. 

그러나이 경우, 나는 생각했다 그것에 대해, 그리고 내가 말했듯이, 다른 종료 그 네 번째를 때문에 논리적 가능한 시나리오. 자, 그냥 추가 할 수 우리 그래서 일부 어휘 용어 주위에 던져 시작할 수 그렇지 않으면 매우 직관적이다. 일의 모든 I했습니다 단지 여기에 노란색으로 강조, 난 그냥 갈거야 기능 또는 절차. 그들은 행동의 단지 종류입니다. 따라서보고 열고, 픽업 에 오픈, 오픈, 전화, 이 단지 작업입니다 quit--, 또는 우리는거야 더 공식적으로 기능을 호출합니다. 

한편, 지금 노란색, 나는 일을 강조했습니다 that-- 그냥 호출 시작하자 그 조건 또는 분기합니다. 이러한 결정 포인트 곳입니다 이 길을 갈 수 있습니다, 이러한 방법으로, 또는 다른 방향으로 여전히. 그래서 그 조건이 될 것입니다. 그리고 지금이 일이 조금 애호가입니다. 의 이러한 질문을 부르 자 부울 식, 마지막 이름 Bool로 누군가 후. 

그리고 부울 식 그냥 뭔가 그것은 참 또는 거짓 없습니다, 예 또는 아니오. 그래서 그 대답을 질문입니다 그래서 조건에 관해서는, 걱정 답변을 다시 얻을이 decision-- 확인 다음 왼쪽 또는 오른쪽, 또는 무언가를 이동 완전히 다른. 

그리고 마지막으로,이 라인은 here-- 돌아가 두 단계로 돌아가서 우리가 할 수 2가 있으며 단계 다른 방법으로이 아이디어를 구현합니다. 그리고 당신의 사람들과 프로그래밍 경험했을 수 있습니다 또는 다르게이 일을 상상할 수있다. 그러나 오늘날의 목적 그건 중요한 그냥 생각. 이 유도되는 것을 우리는 일반적으로 전화 할게 때문에,주기의 어떤 loop-- 나를 다시 뭔가를 만들고있다. 

그래서 지금, 그냥 생각 해보자 좋은 방법이 알고리즘이다. 그것은 맞습니다. 마이크의 책에있는 경우 중 하나 그 4 또 다시 scenarios-- 다시, 우리는 그를 찾을 수 있습니다. 그러나 그것은 얼마나 좋은입니까? 음, 우리는이 없습니다 여기에 너무 공식적인 될 수 있습니다. 하지만 그냥 플롯하자 뭔가, x와 y, 도착 이 문제의 형상 감. 

x 축에 여기 내 문제의 크기입니다. 여기 그리고 그들은 y 축 해결하는 시간이 될 것입니다. 그래서 어쩌면이 페이지의 수입니다. 어쩌면이 초 또는 어떤 turns-- 페이지입니다. 당신이 계산하려는 그러나입니다 이 그림은 표현 될지. 그리고 그 첫 번째 알고리즘은, 내가 갈거야 그냥 직선으로 설명합니다. n 개의 페이지가 있다면 전화 번호부, 그럼 많은 나를 걸릴 수 있습니다 n 개의 단계로 마이크를 찾을 수 있습니다. 만약 버라이존 또는 전화 회사 또 하나의 페이지 내년에 추가 그것은 나에게 걸릴 수 있습니다 하나 더 step-- 시간의 또 하나의 단위는 마이크를 찾을 수 있습니다. 그래서 한 비율은 단지이 하나있다. 그것은 직선의 기울기이다. 

한편, 그 두 번째 algorithm-- 난 경우 으로 ..이 두가는, 넷, 여섯, 여덟, 또는 double-- 두 번 페이지를 통해가는 한 번에 한 번에 두 여전히 직선입니다. 2 한 지금있다 비,하지만 조금만 더 낮게. 이 많은 페이지가 있다면 그래서 노란색 여기 차트, 그 날이 걸릴 수 있습니다 여러 단계 또는 초, 그렇지 않으면 저를 취할 것 레드 라인에 두 배. 

그러나 녹색 선은 실제 테이크 아웃입니다. 이것은 무엇을 우리가 일반적으로 logorithm-- 로그를 호출 N 페이지의 개수 N의. 그러나 중요한 형태이다 오늘, 우리는이 없기 때문에 심지어는 점을하려 생각합니다. 

극단적 인 시나리오에 대해 생각합니다. 버라이존 내일이 두 배로 가정 그 전화 번호부의 페이지 수, 1,000에서 2,000. 첫 번째 알고리즘에서, I 추가로 1,000을 낭비 할 수 있습니다 단계는 이유만으로, 마이크를 찾고 버라이존은 책의 크기를 두 배로. 그것은 algorithm-- 두 번째 수도 나에게 여분의 (500) 조치를 취합니다. 1,000 페이지 이상, 나는 두 이동 마이크를 찾을 수있는 500 이상의 단계를으로 ... 

하지만 세 번째 알고리즘 종류의 마법이다. 버라이존은 수를 두 배로 1,000에서 2,000 페이지, 그러나 얼마나 많은 단계를 수행 그것은 마이크를 찾기 위해 날 데려가? 이 때문에 그냥 할 수있는, 하나의 전화 번호부를 한 번 더 눈물 (A)에 2,000 페이지 문제에서 1000 페이지의 문제, 봐라. 나는 그것의 거대한 물기를 촬영했습니다. 

그리고 당신은 정말 극단적 가면, 전화 번호부한다고 가정 이 회사는 같은 미친 뭔가했다 40 억 페이지 전화 번호부. 글쎄 그것은 얼마나 많은 단계 걸릴 수 있습니다 40 억에 마이크 스미스를 찾을 수 페이지 전화 번호부? 그것은 큰 숫자지만, 단 4 억을 500000000-2000000000에 10 억 여전히 250 천 5 백만 큰 숫자 같은데 그러나 나는 매우 빨리 해요 작은 값에 도착. 

그리고 사실, 내가 할 경우 수학 좋아, 난 단지 나눌 수 40 억 로 약 32 시간 전에 난 그냥 하나에 내려. 그 전화 번호부가 4 인 것처럼 그래서 억 페이지 오래, 더 큰 문제. 몇 초 내에, 어쩌면 32 초, 나는 반으로 나눌 수있다 결국 마이크 또는를 찾을 수 그는이 아니라고 결론 지었다. 그리고는의 본질이다 좋은 알고리즘을 algorithm--. 그리고 그 중 하나입니다 이 같은 클래스의 목표, 내가 방법을 알아 내기 위해 노력하고있다 단지 올바르게없는 문제를 해결 같은 난 항상 그것을 하나의 작업을 수행하는 방법을 알고 으로 ..에서 페이지 만 제대로 잘. 어떻게 좋은 디자인 않습니다 문제에 대한 해결책? 그럼 여기서 잠시 시간을내어 보자 지금 당신에게 감각을 줄 CS50의 과정은 itself--는 소개 몇 가지 코스의 직원. 그냥 2시 전에, 우리는거야 짧은 휴식을 그래서 당신의 그 그 누가 수 있습니다 쇼핑 오리 아웃과을 다른 클래스를 보면 이 온라인의 나머지 부분을보세요. 하지만 지금은, 나를 소개하자 CS50, 클래스 자체, 특히 새로운 것입니다. 

그래서 지난 봄, 우리 으로 .. 소비 꽤 과정의 직원과 난 - 생각 그것이 무엇인지에 대해 우리가 CS50이 원하는, 먼저 돌아가는 원칙은, 그래서, 말하자면 그것은 우리가 원하는 무엇인지 고려 이 과정은 같이 할 수 있습니다 그 학생 등을들 수있다. 그리고 당신은 문제에서 볼 수 있습니다 뿐만 아니라 초대장을 제로로 설정 그 살펴보고 요약 URL 뒤에서 동기의 일부 가을 2016의 특성을 다음과 같습니다. 

당신이 수집 한 수 있습니다 그래서 는 TL에서 : DR 유인물, 교과 오늘뿐만 아니라에서와 같은 과정 카탈로그, CS50 올해, 당신은 참석할 것으로 예상하고 있습니다 물론 그렇게 작업을 today-- done-- 11 월 21 일 마지막 강의. 그리고 당신은 환영하지만 예상하지 않은 중간에 그 강의에 참석, 우리가 무슨 일을하는지 때문에 올해는 촬영한다 실시간 과정의 물질이다. 그래서 모든 것이있을 것입니다 현재와​​ 통합 최선으로 우리는 현재 이벤트를 주는거 와 대화하는 사람들은 수도 에 업계에서 갖는 수 세계,하지만 그 물질을 가능한 결과도 earlier-- 전체 텍스트 성적 증명서 완료 및 검색 가능성과 다른 리소스에 대한 링크. 

그리고 실제로, 우리는 봤는데 몇 시간 동안 주장 우리는 지금,이를 믿는다 우리가 만들 수, 디지털, 더 강력한, 더 몰입 반대로 교육 경험, 여기에 몇 가지 23 번 수집에 사람, 듣는 사람이 나를 좋아 단순히 컴퓨터 과학에 대해 이야기 보다 적극적으로 결합 반대로. 그래서 당신은 과정의 강의에서 볼 수 있습니다 여기 학기 스케치, 때 강의 것와 함께 이는 당신이있어하기 위해 촬영해야 환영하지만 예상하지, 때 그들은 것 코스의 웹 사이트에 공개 될 수있다. 

그리고 우리는 여기에 무엇을 할 거 야 다음 주부터 매주 수요일, 많은 전용으로 더 밀접하다 참여하고자하는 사람, 소위 도보를 통해입니다 어디와 과정의 머리 실제로 일을 할 것입니다 좀 더 친밀한 여기 아래 오케스트라에서 섹션, 여전히 몇 가지 기술을 가지고 과를 살펴 현재 주 문제 세트, 당신이 중 경우 particularly-- 제공 그 이하 comfortable-- 모든 더 당신이 할 수 있습니다 지침 또는 주의 도전을해야합니다. 그리고 마찬가지로, 그 누구 수 없습니다 사람의 그, 아니 큰 거래에 참석한다. 유사하여이 주도한다 과정의 고위 직원 중 하나, Zamalya 같은 기회 포함 문제에 자신을 설정합니다. 

문제는 올해 설정 금요일에 발표 될 예정이다 더 이상, 칠일 후에하지 않는다 하지만 십일 later-- 의도적으로 각각의 문제와 중첩 잘 수용하도록 설정, 우리는 희망을, 썰물과 흐름 학생 스케줄, 특히 중간 고사 또는 운동 경기 나 학자 또는 과외 활동 오락가락하는 경향이 특히 중간 학기. 그것은 당신에게 조금 더 주어야한다 당신 여부를 전면에 관한 판단 CS50 또는 다시로드하여 주를로드 그 대신 다음 주말에. 그래서 과정의 강의 계획서에 보면 여기에 그 스케줄. 그리고 당신은 너무 사이에 알 수 있습니다 변경 사항이 년, 더 익숙한 사람들을 위해 과거에 프로그래밍, 우리는 학기를 시작합니다 우리는 스크래치 오늘 것 언어에 특히 초점 C라고하고 있지 전환 PHP에 있지만라는 언어 학기의 끝으로 파이썬 웹 프로그램의 맥락에서, SQL과 자바 스크립트와 함께, HTML, CSS, 아직 더. 

및 자주 묻는 질문에 대한 대답, 그것은 참으로 사건 CS는 한 번 나는만큼 무서운 아니라고 그것이라고 생각하지만, 많은 작품입니다 내가 들었던로이 될 수 있습니다. 그러나 이것은 여기에 몇 가지를 수있는 말은 가을 2015 학생회 통계, 이에 수평 파란색 선을 시간의 평균 개수를 나타낸다 보고했다. 그리고 당신의 평균을 볼 수 있습니다 10 여섯 아마 16 12--하기 정도 등,하지만 함께 높은 분산은 명확합니다. 그래서뿐만 아니라이 실현 학생들의 편의와 덜 과정에서 편안하고, 그러나 해당 지원 구조는 학생들을 받으실 수 있습니다 성공적으로 학기를 통해. 

사실, FAQ를에 대답,해야 당신은 첫 해로 CS50을? 전혀. 그리고 사실, 나는 후회 않습니다 자신의 길을 발견하는 데 없습니다 또는 새로운 분야를 발견 뿐만 아니라 그 첫 해. 그리고 당신과 CS50를 취해야한다 확실히 저기 ... 다른 과정, 그리고 일반 조언을 우리는 수도 그 CS50은 아마 학생들에게 제공 클래스 또는 소개 클래스의가 아닌 종류 세와 함께해야한다는 기타 또는 네 개의 다른 P-설정 클래스. 하지만 당신은 두 개의 다른 P-세트를 복용하는 경우 클래스, 뭔가 다른, 그리고 CS50, 절대적으로 관리. 나는 많은 학생들을 했어 과거는 매우 성공적으로 그렇게. 

그리고 그 방향으로 당신을 얻을합니다 성공적으로 행을 완료, 과정이 있는가 sections-- 학생들을위한 다른 트랙 더 편안하게, 더 적은 편안하고, 어딘가에 사이에, 이에 과정의에서 첫 번째 문제 세트 당신은 자신을 설명하라는 메시지가 표시됩니다. 그리고 당신은 그 이하 중입니다 경우 편안한, 그것은 일의 종류 당신은 오히려 알고있다. 그리고 실제로, 그되었습니다 CS50에서 인구 성장 꽤 몇 년 동안. 

에 대한 지난 가을의로 예, 클래스의 58 % 로 자신을 설명 적은 편안한 그 중, 그 이상 중 9 %와 편안하고 이 다른 학생들에 자신을 설명하는 빨간 같은 곳 사이에있다. 그리고 당신은 전체 여기에 항목을 볼 수 있습니다 일정 부분의, 모두의 에서 직접 제공됩니다 과정의 실시간, 교육 동료의 놀라운 직원 누구의 일부 물론 보조, 당신은 단지 한 순간에 만날 수 있습니다. 

섹션 자체는 볼과 같은 것 월요일과 화요일과 수요일이 될, 수 있도록하면 다이빙을 할 수 있도록하는 에서 당신이 그렇다면, 참여 후 과정의에서 선택 이전에 그 주 강의. 그리고 근무 시간, 어떤 확실히, 각 통과 년으로, (A)의 더 적은 없었다 과정에 대한 도전한다. 그리고 올해, 우리는하지 계획하고 단지 사무실 하나를 hours-- 잡아 도움을위한 하나의 기회에 수요일 목요일 학생 일요일, 사람들의 마지막 디자인에 의해 오후에있는 스트레스의 일부를 줄이기 위해 그 변함없이 늦은 밤에 발생 마감과 p는-settting looming-- 하지만 근무 시간도 제공됩니다 월요일과 화요일에 수요일, 그리고 금요일과 토요일, HSA에서 우리의 친구들에게 감사합니다. 

CS50는 이제 자신의 공간이 학생들과 CS50의 직원, 67 마운트 오번 거리 꼭대기, 바로 거기에 하버드 광장입니다. 에 대한 비전은 CS50 년대입니다 일주일 내내 TF들과의 CA, 대부분의 전반에 걸쳐 거의 일, 지원이있을 것이다. 당신이있어 경우에 따라서 일부 p 형 세트에 대한 질문 또는 당신은 조금 느낌이있어 차단 또는 조금 혼란, 그리고 도대체, 당신은 시간을 가지고 나 클래스 간의 반 시간, 특히 당신이 할 수있는 square--에서 에서 팝과 그 질문에 대답이 의 혼란을 clarified-- 정신에 아주 많이, 당신은 수학의, 익숙 부서의 자신의 수학 질문 센터, 하지만 클럭 당 주위에 꽤 많은 [? Gcal?] 우리는 온라인으로 게시 할 것이다. 

개인지도는 사람들을 위해 사용할 수 있습니다 자유롭게 코스의 학생, 자신의 직원 당신이 좋아하면 더 하나 하나 친밀한, 두 개 또는 세 친구들 만 작동 과정의 직원 중 하나. 그리고 실제로, 여기이 단지입니다 과정의 직원 중 일부, 몇 당신은거야 그냥 순간에 만난다. 사실, CS50 자신 헤드 교육 연구원, 머리 코스 보조하고, 훈계, 최대에 올 수 있도록 그들에게 인사합니다. 

[박수 갈채] SPEAKER 1 : [들리지]. 

[박수 갈채] 스피커 2 : [들리지]. 

[박수 갈채] SPEAKER 3 : [들리지]. 

[박수 갈채] 

데이비드 마란 : 그리고 우리를 수 CS50의 이사회 두에 가져 가장 고위 직원뿐만 아니라 Rob와 Zamayla. 

[박수 갈채] 

실제로, 롭 모두와 Zamayla 우리와 함께왔다 너무 오래, 나는 수 있었다 CS50의 아카이브로 이동 이 매우 SD를 찾을 수 참여하는 이들의 영상 몇 년 전 무대 자체에. ROB : [들리지]. 

[박수 갈채] ZAMAYLA : [들리지] 

[박수 갈채] 데이비드 마란 : 감사합니다. 그래서 이들 이외에 여기에 팀 구성원, CS50는 거의 100의 팀이있다 누구의 모든 직원, 섹션에 대한 사용할 수 있습니다 및 근무 시간 및 훨씬 더. 롭이 너무 말한대로 그리고,이입니다 가장 중요한 점검 10 년 CS50의 나는 [들리지]에있었습니다. [들리지] 특히 집중 지지 구조를 제공하는, 많이 떨어져 트리밍 이었다 벌크 10 년 축적 의 반복 개발 과정의 문제 세트에. 

그래서 올해뿐만 아니라 클래스 만 또한 코스의 문제 형태 세트, 당신은에 일을 찾아야한다 더 간소화 할, 트리머, 많은 보다 관리 년 과거, 우리와 같은 의 수하물의 일부를 창고 진화 해 자연에 의해 개발 년 반복하는 후. 그래서 새롭게 개선 된 오늘 시작됩니다. 

당신은 좀 더 만나자 에서 [들림]에서 코스의 직원 밖으로 우리가 봉사 2시 반,에서, 전통, 케이크 등. 조금 더 케이크가있다 보다,하지만 당신은거야 대회 에린과 토비아스 여전히 다른 사람. 그리고 내가 당신을 제공 할 수 투어 우리가 듣기 전에 다른 직원들 중 일부에서 뿐만 아니라 기다리고 무엇의 클래스입니다. 사실, 우리는 항상 CS50의의를 시작합니다 학기이 토요일오고 CS50 퍼즐 날이라고 것과. 

그것은 함께 할 수 없다 컴퓨터 과학 그 자체, 하지만 대한 문제와 더 일반적으로 해결. 그리고 당신이 그렇게 참여하도록 선택하는 경우, 초대의 일부 당, 당신은 문을 볼 수도 , 떨어 뜨리거나 여기에 무대에 그것은 팀에 기회 두 서너, 퍼즐과 피자 참여 및 상금과 선율이 토요일 더 지켜봐 주시기 바랍니다. 

당신은 그 모든도 찾을 수 있습니다 금요일 불과 얼음에서, CS50은을 가지고 않습니다 학생들의 전체 무리 점심, 큰 만들려면 클래스는 더 친밀한 느낌 일반적으로 함께 가져 동문 및 산업 친구 그들이했습니다 무엇에 대해 이야기하기 졸업 이후까지 있었다. 마찬가지로, 올해, 우리는 것 열다 최초의 CS50 (50) 중간 학기 contest-- 코딩 모든 사람을 허용 할 수있는 기회 기준에 수신 거부에,이하기 급우에 대한 지혜의 도전, 다시 두 개 또는 세 개 팀에서 해당 프로그램을 사용하여 네, 잘 아는 당신은 그 아래에 있는지 불과 6 ~ 7 후 벨트 클래스의 주 및 참여 경쟁의이 종류에 online-- 당신은 당신의 자신을 연마하려는 경우 그 도전의 기술을 더욱. 학기의 끝에서입니다 소위 CS50 Hackathon-- 7시 시작하는 기회 PM 7:00 AM에 종료, 그리고 그 길을 따라 다이빙하는 12 저녁 시간은 코스의 마지막, 작품에 기회는 설계 및 관심의 대부분 아무것도 구현 당신의 가르침 당신에게 동료의지도. 오전 9시 주위에 일반적으로 우리가 할 피자 1:00 오전 봉사 필립의, 그리고 우리의 몇 가지 오전 5시 00 분 아직도 깨어있는 사람, 있는 셔틀 버스로 운반 다운 아침 식사 IHOP 도로. 

그리고 몇 일 후 소위 CS50는 fare-- 학기 전시회의 끝에서 단지 얼마나 많은 축하 CS50의 학생들은왔다 주 제로 주에있는 모든 방법, 그 중 73 % 있음을 염두에두고 친구들과 당신이 년이 전에 CS 클래스를 촬영하지 않았다. 사실, 여기에, 많은 재 강조합니다 CS50의 직원 몇 얼굴이다. 스피커 4 : [들리지]. SPEAKER 5 : [들리지]. SPEAKER 6 : [들리지]. SPEAKER 7 : [들리지]. SPEAKER 8 : [들리지] SPEAKER 9 : [들리지]. 

스피커 4 : [들리지]. 

스피커 10 : [들리지]. 스피커 11 : [들리지]. 스피커 12 : [들리지]. 스피커 13 : [들리지] 

스피커 14 : [들리지]. 

스피커 13 : [들리지]. 스피커 15 : [들리지] 스피커 16 : [들리지]. 

스피커 11 : [들리지] SPEAKER 5 : [들리지]. DAVID 마란 : 팀의 일부 자체 클래스를 쇼핑. 하지만 그 멤버는 CS50 직원의 현재 위치, 잠시 가입에 올 수 있습니다. CS50의 TF들과 CA와 [? 직원?] 회원이 단지 몇 가지 here-- 의 faces-- 하나의 당신 단지 보고, 몇 가지 다른 것이라면과 몇 가지 다른 아직도. 왜 우리가 가서 허용하지 않습니다 너희들 5 분 휴식. 당신은 밖으로 오리에 필요한 경우 가게 클래스, 그건 괜찮아요. 그리고 5 분, 우리는 다시 시작됩니다 Scratch-- 처음에 살펴 본다 우리의 프로그래밍 언어의 충족 과정의 직원 여기에 몇 가지 더, 궁극적으로 초점 문제에 제로를 설정합니다. 그래서 우리는 다시 5 분 수 있습니다. 

[박수 갈채] 

괜찮아. 그래서 우리는 다시 수 있습니다. 그리고 우리는 남아 시간 오늘, 목표 경기장을 수준입니다 일부 용어의 관점에서, 몇 가지 아이디어의 관점이다. 실제로 때문에, 당 이전 차트의 일부, 의 범위가있을 것입니다 클래스의 경험 수준, 어떤 누구의 학생들이 전에 어떤 프로그램을 촬영, 그들 중 일부는하지 않았습니다. 그래서이 첫 번째 문제와 설정이 첫 번째 언어 우리는 시작할 수있는 기회를해야합니까 오늘 이후 당연시하는 몇 가지 일반적인 어휘 및 아이디어. 

그리고 우리는의 방법으로이 작업을 수행 할 수 있습니다 과정의 첫 번째 languages​​-- C와 파이썬과에 추가 자바 스크립트와 SQL과 HTML과 CSS, 우리는 처음에 초점을 맞추고됩니다 그리고 문제는 제로를 설정 단지에 대한 이 그래픽 언어라는 MIT의 미디어 랩에서 개발 한 스크래치, 도로의 아래, 도움 학생들과 아이들이 특히 자신을 algorithmically-- 표현 무엇을 더 일관된 방식으로 우리는 전산 사고를 호출 할 수 있습니다. 

그리고 그것은 유용한 언어 때문에이다 매우 빠르게 일주일에 다음 주, 우리는 더로 전환 할 라는 전통과 비밀의 언어 순수하게 텍스트입니다 C. 당신은 당신의 키보드를 사용하여 지침을 작성하기 위해 화면이있다. 하지만 당신은 본 적이 경우에도 이전 프로그래밍 언어 단지에서이기는에서 이것이 전부가 비밀 될 당신은 아마 추측 할 수 있습니다 아마 안녕하세요 세계 인쇄합니다. 그러나이 많이있다 이 구문 오버 헤드. 이상한 해시가있다 맨 위로 기호 또는 해시 태그입니다. 꺾쇠 괄호는, 거기에 몇 가지 괄호, 중괄호, 반 colon-- 시각적 너무 많이가있다 방해가 구문. 우리는 코스를 시작 스크래치 얻을 수 있도록 그 모든 과거 지적 재미주의 산만, 과 아이디어를 대신 초점을 맞 춥니 다. 

사실,이 전에 수 있습니다. 따라서,이를 위해 주 이후 여야한다. 이,이 그래픽 언어 스크래치, 이 같은를 구현하는 방법을이다 실행 프로그램을 program-- 단순히 안녕하세요 세계는 말한다. 스크래치가에 대한 좋은거야 그것은이 그래픽 프로그래밍이 있다고 퍼즐 조각 또는 사용 환경 블록 만 함께 연동 것을 그것은 논리적 인 의미가있는 경우 그렇게 할 수 있습니다. 그리고 스크래치와 당신이 개발할 수 있습니다 애니메이션과 쌍방향 게임 예술, 사물의 수와 그 당신이 당신의 자신의 마음에 상상 단순히으로이를 구현 드래그 앤 퍼즐 조각을 떨어 뜨리고. 

그리고 실제로, 우리는 능력을 가지고 있습니다 동일한 아이디어의 일부를 표현하는 난 그냥 잠시 언급 한 전 마이크 스미스의 맥락에서 및 전화 book-- 일을 찾고 함수처럼, 그냥 작업, 할 루프 같은 것들 또 다시 것, 인 변수, 우리가 소개합니다 뭔가, 하지만은 아마 익숙한 자리의 대수학 단지 어떤 종류의 당신이 수있는 몇 가지 값을 저장합니다 later-- 부울 식을 필요로 어디 그 예 아니오 또는 참 이전의 잘못된 질문. 조건은에서와 포크입니다 road-- 그 가지 말하자면. 그리고 일부 애호가가 우리가 오늘날 볼 수 있습니다 기능, 라는 배열과 스레드와 이벤트는, 우리는 다음을 통해 방문거야 다른 언어로 시간. 그러나 스크래치 우리를 수 이 모든을 탐험. 그래서 여기에 스크래치에서,이 보라색 블록 함수 전형적 무엇 처럼 보이는 것. 일부가이 보라색 퍼즐 조각 액션입니다 단어 말처럼, 후는있을 수 있습니다 어떤 방법으로 인수 또는 parameter-- 사용자 정의의 종류 무엇을 그 블록이하는 그래서 그것의 사전 결정되지 않은 것 MIT이 보라색 블록은 말씀. 사실, 당신은에서 볼 수 있습니다 내가 입력 할 수있어 순간 안녕하세요 세계와 같은 단어, 또는 안녕하세요 데이비드, 또는 안녕하세요 Zamayla, 또는 무엇이든 내가 인수에 원하는 그 퍼즐에 흰색 상자를 piece-- 그곳에. 내가 루프를 원하는 경우 그 사이에, 우리는거야 퍼즐 조각을가 있음을 보시려면 이런 작은 오렌지를 찾습니다. 그리고 그 형태는 가지 제안 뭔가가 또 다시 발생 사이클이다. 

내가 말을 안녕하세요 세계 블록을 포장한다면 영원히 스크래치에 차단 A를, 그냥 인사 말을 계속 것 세계 영원히, 말 그대로. 한편, 또 다른있다 스크래치 루프의 유형 우리는 반복 see--거야 block-- 경우, 당신 경우 얼마나 많은 시간을 사전에 알고 당신은 루프가 실행하고자하는 당신을 fact--에 한정된 횟수 숫자를 입력하여 그을 지정할 수 있습니다 또는, 변수에 연결 우리가 볼 수 있습니다로 X 또는 Y 등을들 수있다. 

실제로, 변수 등에 이 경우에 내가있는 일반적인 이름은입니다 정수 변수가 단지 number--를 저장 정수가있을 여기이 오렌지 블록을 사용하는 전 제로하는 같은 변수를 설정하십시오. 다음은 녹색의 예입니다 스크래치에서 부울 식입니다. 이 수학처럼 보인다하더라도 이 같은 공식, 수학 불평등 정말 부울 식입니다. 이것은 참 또는 거짓이다. I는 50 미만이다. 그것은 예 또는 아니오 대답 중 하나입니다 나 참 또는 거짓 답변. 그리고 우리는 일반적으로 전화 할게 그 부울 식. 그리고 50 일 필요는 없습니다. 그것은, Y보다 작은 x를 할 수 있습니다 y--하려면 Y 이상 동일 다른 임의의 개수 질문하라는 메시지가 표시 될 수 있습니다. 

지금, 첫눈에,이 보일 수 있습니다 갑자기 매우 굵은 여기하고있다. 그러나 개념 지혜, 그건 이전부터 꽤 친숙한. X가 Y보다 작 으면, 많은 말보다. X가 크면 다른 Y보다, 다음으로 많이 말한다. 다른 x가 y와 동일하다 말한다. 그래서 우리는 예를 이 세 번째 scenario--의 만 세 번째? 가능성의 X 중 하나입니다 보다 크거나, 작거나 같다. 그래서 우리는 길의 세 가지 방법 포크가 있습니다. 

그리고 멋진 here-- 스크래치 무엇을 발견, 그것은 보이는 하나의 퍼즐이 것 조각이 경우, 다른 블록이다. 그리고 아직 당신을 의미 할 수 있습니다 것 같다 전용 도로의 양방향 포크가 있습니다. 당신은 왼쪽 또는 오른쪽으로 만 갈 수 있습니다 무엇을 그 세 번째 시나리오는? X는 Y는 무엇 동일한 경우는? 더 큰 문제가 없습니다. 하나의 퍼즐 조각을 넣어 그것의 또 다른 내부 의미 상당을 만듭니다 의 지금, 만약 다른 else--하고, 경우 도로에서 세 가지 방법으로 포크가 있습니다. 우리가 볼 수 바와 같이, 스크래치 퍼즐 조각 , 신장 및 성장 할 수 있도록 로 그들에 더 많은 물건을 벼락 공부합니다. 당신은 적합 할 필요가 없습니다 기본 크기 다. 

이것은 우리가 거​​ 뭔가 곧 배열이라고 참조하십시오. 그것은 list-- 어떤 방법처럼 여러 정보를 저장 변수에, 그냥 숫자. 이러한 우리의 대표를 볼 수 있습니다 뭔가 멀티 스레딩을했다. 사실, 모든 당신의 Mac과 PC 요즘 멀티 스레딩을 지원, 이는 말 그대로 수 있음을 의미합니다 한 번에 여러 작업을 수행. 당신은 마이크로 소프트 워드를 할 수 있습니다 전경, 일부 에세이에서 작동합니다. 당신은 브라우저가있을 수 있습니다 배경 구멍에 G 메일이나 북 등을 포함 할 수있다. 컴퓨터가 여러 작업을 수행 할 수 있습니다 이 때문에 오늘날 다중 스레드 프로그램은 그들이에있는 것 특히 또한 멀티 스레드입니다. 

가지라는 이벤트 등이있다 잘 스크래치의 세계에서, 다음 방법을 만들기 위해, 너무 거기에 우리 자신의 정의 퍼즐 조각 일 경우 실제로 사전에 존재하지 않습니다. 그래서 다음의이 동기를 부여 할 수 있습니다. 몇 년 전, 때 내가 첫째, 스크래치 발견 내가 실제로이었다 때 MIT의 대학원생, 우리 자신이 숙제를 할 임무가 주어졌다. 그리고 implemented-- 이는 생각해 보면, 이 때문에 매우 가난한 결정을했다 세계에서 가장 화나는 노래 8 시간 동안 청취합니다 당신의 homework--에서 작업하는 동안 하지만 뭔가 내가 오스카 시간이라고했다, 이는 아마도 익숙한 노래입니다. 

CS50s는 하나의 요르단 하야시를 소유 우리의 고위 직원, 2015을 업그레이드하고 지금 2016, 다시 날 이후, 난 그냥가는 모든 것을 가지고 있었다 오스카의 쓰레기통에. 이제 우리는 재활용 및 퇴비를 지원합니다. 

그러나 그림을 그릴 수 있습니다 의에게 우리가 여기에서 무엇을 할 수 있는지 그리고 약간의 동기를 부여하기 낮은 수준의 예, 우리는 다른 하나를 얻을 수 자원 봉사는 그냥에 와서 나의 첫 번째를 재생 지금까지 숙제? 최대 어서. 당신의 이름은 무엇입니까? 

HENRY : 헨리. 

DAVID 마란 : 헨리는 최대 어서. 최대 어서. 어느 쪽이든 머리를하고, 당신은 잠시 볼 수 있습니다 나는 앞서 갈와 충돌 해요 오른쪽 상단에 녹색 깃발 이동 수단 코너. 작은 정지 신호 아이콘 정지 말할 것입니다, 당신이 시작할 때 그이다 프로그램을 중지합니다. 만나서 반갑습니다. 괜찮아. 그래서 우리는 지침을 보게 될 것입니다 그냥 순간에 화면. 다만하여이 게임을 날 믿어 seconds--에 대한 몇 가지, 우리는 놀고 싶어하지 않을거야 당신이 할 end-- 모든 방법 프로그램이 수행하는 작업의 감각을 얻을. 그리고 바로 헨리에 초점을 맞출 것보다 더 이 게임에 초점에 좋은 또는 나쁜 것을 어떻게 나에 의해 구현되었다 원래 다음 요르단. 즉, 여기서, 변수는? 어디 루프는? 어디 기능은? 우리가 볼 수없는 경우 그리고 우리는 볼 수 있습니다 후드 아래에 그. 

그냥 클릭하고 쓰레기를 드래그 적절한 빈에. 

[음악 재생] 괜찮아. 그것은 아주 좋은입니다. 왜 우리가 그것을 중지하지 않습니다. 고맙습니다. 헨리 축하드립니다. 고맙습니다. 

[박수 갈채] 

그냥 그 프로그램을 디버깅 상상한다. 문제 두 가지가 있다면 song-- 그러나 지금에 분 여기에 정말 무슨 일이야? 로 복잡로는 수도 시간이 지남에 따라 얻을 수가 시작, 실제로 점점 물건 떨어지는 시작 무엇에 대한 흥미 example-- 이런 종류의 우리는 몇 가지를 볼 수 있습니다 others--입니다 당신이 경우 복잡한 과거를 찾거나 게임의 정교함, 매우 단순한 건물이있다 이는 모든 이렇게 연주 블록 당신은 그에게 증류 경우 빌딩 블록은 매우 접근 스스로에게 구현 가능. 예를 들어, 야 약간의 시간이 있었다,하지만 난 내가 처음에 할 때 무슨 짓을했는지 확신 처음이 게임을 나는 미루 완전히 같았다. 나는에 전혀 집중하지 않았다 논리 또는 퍼즐 조각, 나는 그래픽과 발견에 초점을 맞춘 거리의 게시물 및 휴지통 그 모든. 그러나 사람들은 필수했다 처음에는 재료. 내가 미루는 완료되면 및 무엇보다 중요한 프레임 워크를 세우고, 나는 나에게 하나를 만들어 보자, 결정 하늘에서 쓰레기 가을의 조각. 그리고 우리는 스크래치를 볼 수 있습니다 라는 것을 지원 그 수 sprites-- 문자 그래서 그들은에 다른 의상을 다른 본다. 

그래서 나는 쓰레기를 넣어 하나의 스프라이트에 의상. 그리고 난 그냥 필요 하늘에서 떨어질 수 있습니다. 그리고 그것은 밝혀, 스크래치, 대부분의 프로그래밍 언어처럼, 지원하는 임의의 숫자 또는 기술적으로 의사 난수, 그 드래그하여 등 특정 퍼즐 조각을 떨어 뜨리고, 나는 쓰레기를 가질 수 있었다 처음에는 왼쪽에서 왔습니다. 그리고 다음번 그것으로부터 떨어 중앙으로부터 우측 후. 그리고 모든 게임은이었다 않았다 쓰레기 하늘에서 떨어지는 있습니다. 당신은 그것을 가리 키거나 클릭 할 수 없습니다. 당신은 휴지통을 열 수 없습니다. 당신은 아무것도 할 수 없었다. 그러나 아기 단계이었다 나의 궁극적 인 비전을 향해. 

그리고 그 후, 나는 실제로 어떤 종류의 구현 를 클릭 않은 경우 있도록 감지 쓰레기의 조각에 드래그 휴지통, 오스카의 이상 뚜껑을 열고 닫을 것이다. 아무것도 휴지통으로 일어나지 만 것 적어도 뚜껑을 열고 닫을 것이다. 그럼, 확인이 두 단계. 그리고이 될 것 것입니다 모두 문제의 핵심은 0으로 설정 더 일반적으로 프로그래밍,이다 이러한 매우 신중한 아기 조치를 취합니다. 뿐만 아니라 때문에 것은 당신에게에게 허용 않습니다 기분이 솔직히 훨씬 더 달성 quickly-- 그것은이다 세계 최악 오스카 시간을 모두 구현하려고합니다, 다음 시간 이후에 녹색 깃발을 명중, 아무 것도이 같은 예상 작품 여기서 당신도 할 수 있기 때문에 디버깅하거나 시작 해당 프로그램의 문제를 해결? 그냥 압도적이다. 

그리고 진정으로이 아이디어를 수용 의 다시 steps-- 아기 조치를 취하고 및 again-- 구축 결국, 뭔가, 정말 인상적이고 복잡하지만, 처음이 아니라 거의만큼 너무입니다. 사실,이 해 보자. 내가 가서 그리고 - 자체 스크래치하자 , Scratch.MIT.edu에서 웹에 존재 당신은 다음과 같이 말했다됩니다 문제에서 다시 많은 제로의 사양을 설정 이는 CS50의 웹 사이트에 이미 있습니다. 

하지만이 자체가 스크래치 것입니다. 그리고 정말 거기 세 가지 주요 영역. 상단이 왼쪽에서 소위 단계이다. 이 스크래치입니다. 기본 의상은 고양이입니다. 그리고이 직사각형의 세계에 당신이 난 그러고 수있는, 아래, 왼쪽, 권리와 다른 물건. 중간에 여기에 우리의 범주는 또는 퍼즐 조각 우리의 팔레트, 다른 색상 다른 것을 의미한다. 당신이 주변에 찌를 경우, 당신은 볼 수 있습니다 루프 및 조건 같은 것들 변수 및 다른 성분. 

그리고 여기에 스크립트 영역입니다. 내가 드래그 앤 드롭 할 수있는 곳이다 그 퍼즐 조각 일을 할 수 있습니다. 그럼 하나의 일을 할 수 있습니다. 내가 앞서 가자 그리고 - 그것이 어디 알아요. 그래서 바로 클릭 할거야 내가 아는 곳 일이 될 준비가 그러나 가리키고 클릭 주변의 파고는 피할 수 있습니다. 그래서 녹색 깃발을 클릭하면, 내가 어떻게해야할까요? 나는이 작업을 수행하는거야. 나는이 보라색 퍼즐을 끌어 갈거야 조각, 2 초 동안 인사, 나를 확대 할 수 있습니다. 

그리고 나는이 변경거야 나는 그것이 이따가 원하는 것을 할 수 안녕하세요 2 초 동안 세계는 괜찮습니다. 지금, 나는을 클릭거야 녹색 깃발, 또는 내가 정말 원하는 경우, 나는 전체를 선별 한 다음 다시 올 수 있습니다. 그냥 계속됩니다 하나의 창에서 모든 것을. 녹색 flag-- 안녕하세요 세계. 괜찮아. 모든 흥미 없습니다. 그래서 내가 가서이 작업을 수행 할 수 있습니다. 내가 다른 일을 해보자. 녹색 플래그하자 clicked-- 때 소리 같은 것을 할. 그리고 밖으로 그 통지 당신이 얻을 무료로 상자 고양이 소리로 기본 스프라이트입니다. 그래서 지금 내가 가서 보자 이제 녹색 깃발을했다. 

[야옹] 

아. 즉, 사랑스러운입니다. 내가 프로그래밍하고 있습니다. 그래서 내가 무슨 짓을 한거야? 이 프로그램의 것과 동일합니다. 그것은 분명히 매우 간단합니다. 정말 그 정도 모든하지 않았다 노력과 MIT는, 대부분의 작업을했다 하지만 함수 호출했다. 나는 기능을 사용하고 있습니다. 난 그냥 사용하여, 어떤 행동을했습니다 한 보라색 퍼즐 조각이. 

글쎄, 난하고 싶은 경우 행의 세 가지 울음 소리? 내가 가서 둘, 셋을하자. 그리고 알 때 당신을 그 근처에 퍼즐 조각을 가져, 약간의 흰색 선이 나타납니다 일종의 자기, 그리고 스냅됩니다 함께 당신은 가자 때. 의 여기 어떻게되는지 보자. 

[야옹] 

버그가있다. 나는 단지 하나의 야옹 소리. 이유가 될 수 있을까요? 네? 네. 우리는 정말 들리지 않습니다, 하지만 좋은 직관이다. 그들은 모두 같은 시간에 놀고있어. 왜? 음, 컴퓨터는 것입니다 어떻게 당신은 어떻게 그것을 말할 것. 그래서 당신이 말한다면, 놀이 소리, , 사운드를 재생 사운드를 재생, 하지만 당신은 때까지 재생을 말하지 마 당신은, 당신이 완료 될 때까지 재생 완료 이를 통해 날려 버릴거야 프로그램 정말 빠른 당신은 어떻게 그것을 알 수 있습니까 것만. 

그래서 실제로 수정해야 몇 가지 방법이. 난 그냥 이렇게이 없애 수 있습니다. 날이 다른 퍼즐을 해보자 완료 될 때까지 piece--, 소리 야옹을 재생 다음의 세 가지를 드래그 이들과 재생을 클릭합니다. 

[야옹] 

정말 very-- 아니다 매우 자연 방송 해요 감사합니다. 왜하자 난 -하지 않습니다 나 여기 제어로 이동합니다. 좋은. 1 초 잠깐, 지금 나에게 돌아 가자 소리, 놀이 사운드를 완료 할 때까지, 다음 날 1 초를 기다려야 얻을 수 있습니다. 그리고 내가 가서 일을하자 사운드 이상, 여기에서 우리는 간다. 

[야옹] 

좀 더 자연스러운하지만, 이것은 매우 효율적이지 않습니다. 내가 지루해지고있는 것처럼, 모든 일 그것은 잠시, 앞뒤로 클릭 정말 내 work--를 복제 거의 복사 및 붙여 넣기. 사실, 나는 제어하는​​ 경우 , 클릭 또는 클릭 된 권리 난 그냥 복사 및 붙여 넣기 할 수 있었다. 더 나은 사용 만들 것입니까? 이전의 어떤 아이디어? 

그래, 그래서 루프. 그리고 사실, 우리는 주위에 찌르고 경우 우리는 정확하게를 찾을 수 있습니다. 나 이벤트 또는 제어 오히려 가자. 그래서 repeat-- 난 몰라 이 10 배 싶어요. 즉, 빨리 성가신 얻을 것입니다. 그러나 나는 세 번 반복합니다. 내가 소리로 돌아가 보자 당신이 일을 끝낼 때까지 소리를 재생합니다. 내가 컨트롤로 돌아 가자 단 1 초 기다립니다. 그리고 통지, 당신은 수도 이 맞지 않는 생각, 그러나 다시 자기 있다면 당신은 그것을 보자 스냅 장소에서, 그것은 채우기 위해 성장할 것입니다. 지금 무엇을 재생할 수있어? 

[야옹] 승인. 좋은. 그리고이 호출 될 것입니다 또한 맞습니다 프로그램. 그것은 세 번 상당히 meowed 자연스럽게, 그러나 그것은 더 나은 설계되었습니다. 나는 덜 중복을 사용하고 있습니다. 나는 복사 아무것도 붙여하지 않았다. 난 그냥 더 나은 아이디어를 사용했다. 

지금,이 여전히 아니라고 스크래치는하고 있지 흥미로운 아무것도. 그래서 다른 대신 뭔가를 할 수 있습니다. 의 영원히 뭔가를 할 수 있습니다. 그리고 그거 알아? 모션 재미있는 것 같다. 그 10 이동의가 보자 단계와 지금 플레이를했다. 

승인. 그럼 우리가 할 수있는 드래그의 종류 그를, 그는 아직 그는 영원히 이렇게 있기 때문에 실행. 그래서 루프를하고있다 이 할 무슨 말, 하지만이 모든 것을 흥미 없습니다. 이 해 보자. 나를 제어 블록을 추가 할 수 있도록하고, 하나를 사용 처음 그 조건. 

그래서 10 steps--를 이동할 것 10 점의 screen--에 10 픽셀 다음은이 질문을하는 것입니다. 뭔가가 true의 경우, 다음을 수행 이 블록 안에 뭔가. 그래서 그것은 밝혀 감지 전체가 부울 expressions--의 무리 Yes (예)의 질문에 아니오 또는 참 허위 나이 작업을 수행 할 수 form--. 

touching-- 경우 다음 거기에 다운 메뉴이 작은 드롭. 나는 그것을 매개 변수화 할 수 있습니다. 감동 경우는하자 edge-- 그런 일을한다. 그렇다면 edge-- 감동 내가 운동으로 돌아 가자. 그리고 왜하지 우리 단지 180도 돌아서? 괜찮아. 그래서 영원히, 10 단계로 이동합니다. 당신이 접촉하는 경우 가장자리, 180도 회전. 그리고 그 프로그램의 끝이 아니다 당신이에이기 때문에 영원히 차단, 그래서 다시 갈거야 및 다시 다시 다시. 그럼 어떻게되는지 보자. 승인. 약간의 버그가 있지​​만 종류의 멋진. 

그리고 우리는이 몇 가지 바보 같은 일을 추가 할 수 있습니다 그 모든 것을 지적이다 흥미 롭군요. 그러나 우리는이 작은 충돌하는 경우 마이크 button-- 아야. 날이 정리하자. 나 같이이 강화하자 그들은 TV에 말할 것입니다. 청소가 최대 저장하고, 현재 스크립트까지 이동합니다. 

그리고 지금, 내가 소리를 가자. 내가 이름을 지정 할 수 있습니다. 나는이 아야를 호출 할 수 있습니다. 그리고 지금 소리 아야을한다. 가 나타납니다 주목 다운 메뉴 조금 드롭. 어디 보자. 

[아야] 

[웃음] 그러나 우리는 즉시 자신의 t를 변경할 수 있습니다. 우리는 두 배 성가신 될 수 있습니다. 

[아야] 

아니면 우리처럼 만들 경우 으로 .. 1,000 단계 

승인. 그래서 우리는 혼자 그 일을 떠날 것입니다. 그래서 다시, blocks-- I를 구축 슈퍼 간단한 무언가 시작, 그리고, 나는 기능을 추가, 기능을 추가하는 기능을 추가했습니다. 그리고 나는 더 이상 걱정 할 필요가 없습니다 어떻게 이러한 기능의 첫 번째 나는 계속 구현 위에 물건을 레이어입니다. 그래서 사실, 내가 여기에 다른 하나를 수행 할 수 있습니다. 내가 가서 파일을 열 수 있도록 그 나는 사전에 가져 양이라고합니다. 

그래서 약간의 차이를 가지고 이처럼 보이는 문자. 그리고 나를 보자 경우 그럴 수 없어 카운터를 사용하여 뭔가를 이 소위 변수 case--. 나는 앞서 및 Events-- 아래에 갈거야 나에게 녹색 깃발을 클릭하자. 그럼 내가 아는 데이터, 가자 전에 장난 단지에서, 변수가있는 곳입니다. 내가 가서이 끌어 갈거야. 

그래서 카운터 변수를 불러 나는 0으로 초기화거야. 내가 anything-- X를 호출 할 수 있습니다 또는 Y 또는 z--하지만 프로그래밍, 의미 상 뭔가를 호출 유용한 방법, 카운터 등, 즉 그것은, 그것은이 무엇인지 설명 쉽게 많은 코드를 나중에 읽을 수 있습니다. 내가 가서하자 a는 영원히 여기 차단합니다. 그리고 나를 외모로 가자 페이지는 말 블록을한다. 그러나 변수에 대한 멋진 것은 내가있다 뭔가를 입력 할 필요가 없습니다 우리는 이미 것 같은 안녕하세요 세계, 수행, 내가 대신 데이터에 갈 수 있습니다 내 변수를 드래그, 심지어 모양은하지 않지만 꽤 이 맞아야 같이, 그것을 채우기 위해 성장할 것입니다. 그리고 하나의 카운터를 말할 것이다 두 번째로는 spoiler-- 그는 계산하는 것입니다. 우리는 1 초 동안 그것을 말할 수 있습니다. 그럼 난 갈거야 및 그 1 초를 기다릴있다, 그래서 너무 빨리 계산하지 않습니다. 그리고 마지막으로, 카운터 변경 즉 one--에 의해, 하나 카운터를 증분 부가 가치 영원히이 작업을 수행합니다. 

그래서 양도 같은 프로그래머는, 0부터 계산합니다. 그리고 우리는 충분히 기다릴 경우, 그는 영원히 할 것입니다. 하지만 그 때문에, 정확히 사실이 아니에요 사실, 우리가 일주일에 발견 할 것이다, 더 일반적으로 정수와 컴퓨터, 기술적으로 만 finite-- 잘있다, 컴퓨터, 오히려 그들은 정수를 나타내고, 전용 비트 한정된 수있다. 거기에 그 전구 단지 너무 높은 셀 수 당신은 전구 밖으로되기 전에. 그리고 컴퓨터 너무 단지 너무 많은 메모리를 가지고, 단지 많은 트랜지스터를 가지고, 그래서 그것은 단지 너무 높은 셀 수 있습니다. 

그래서, 양 밝혀 나는 2 억 믿을 수있는, 생각 또는 꽤 큰 무엇인가. 그래서 우리는하지 않을거야 이 일이 기다립니다. 하지만 결국 몇 가지 버그가 발생합니다 그것은 매우 현실 세계를 가질 수있다 파급 효과. 그러나 양 이상으로, 그 다만 변수를 소개합니다. 이제 가서 열어 보자 뭔가 내가 사전에 여기에 Cat-- 애완 동물이라고 여기에 고양이를 애완 동물. 그리고 그것은 약간의 여기에 주목 블록,하지만 때 녹색 깃발 , 클릭 영원히 다음을 수행. 당신은 마우스를 건드리지하는 경우 pointer-- 때문에 화면의 커서 arrow-- 플레이 소리 야옹 다음 2 초 기다립니다. 그리고 영원히 이렇게. 그냥 계속 기다립니다 pointer-- 여부를 확인하려면 고양이 포인터를 터치하면. 

그래서 나는 플레이를했다. 어떠한 일이없는 것. 하지만 고양이 위로 커서를 이동, 

[야옹] 

그리고, 그것을 멀리하지 이동하는 경우 더 이상 고양이 듬. 그래서 몇 가지 조건부 논리 루프의 안에 중첩. 방법이 예제에 대해, 의도적으로 고양이를 애완 동물하지 마십시오이라고? 어떤이는 할거야? 

[야옹] 

왜하지 고양이를 애완 동물해야합니까? 

[야옹] 

승인. 그래서 이것은 다른 경우의 예입니다. 그것은 의사 결정 포인트이고 이 루프에 앉아 있기 때문에, 그들은 모두 확인하기입니다. 이 사실인가요? 이 사실인가요? 이 사실인가요? 이 사실인가요? 의 그리고 결국, 하나 그 적용 예정 그래서 당신은 야옹 또는를 듣고 이 경우에 사자의 포효. 

음, 약간 더 멋진 일을하자 나는 스레드 너무 ... 사전에있다. 그래서 스레드는 하나입니다 컴퓨터가 할 수있는 일. 그래서 멀티 스레드 프로그램은 프로그램이다 즉, 한 번에 여러 작업을 수행 할 수 있습니다. 그리고이 모든 예제 지금까지 있었다 하나의 스크립트, 그래서 speak--하기 하나의 프로그램 여기이있다. 그러나이 프로그램이 알 이 스프라이트, 두 문자. 하나는 새입니다. 하나는 고양이입니다. 

나는이 아래로 클릭 할 때 통지 왼쪽, 그들은 각각 자신의 스크립트를 가지고 또는 프로그램은 그들과 연관된. 그 중 두 프로그램 예고, 시작 녹색 깃발 clicked--와 의는 cat-- 살펴 보자 녹색 플래그를 클릭하면. 그리고 참, 지금 플레이를 쳤을 때, 두 가지를 한 번에 일어날 것입니다. 고양이와 새가 모두 있습니다 동시에 작동 할 것 이 효과를 만들 수 있습니다. 그리고 당신은 무슨 일이 일어나고 있는지 상상할 수 있습니다. 루프와 새가있다 그리고 고양이는 루프에 있습니다. 조류처럼 수신 거부된다 나는 아야 말했을 때 전이었다. 그러나 고양이는 분명히 장점이있다. 다른 감지 블록이있다 즉, 의도적으로 고양이 포인트 여기이 경우 새에. 그래서 우리는보고, 떨어져 애타게 수 그 블록을 통해, 무슨 일이 일어나고. 그러나 여기에서 중요한 성분이다. 조류,이 게임이되지 않도록 완전히 boring-- 또는이 animation-- 임의의 방향에서 시작한다. 그리고 컴퓨터 따기입니다 90과 180 사이의 숫자 그래서 본질적으로는 약간의 다른 애니메이션마다. 

그리고 나서, 만약 여기 알 고양이는, 새를 만지고 포효 sound-- 사자 사를 재생할 수 있습니다. 그러나 한편 새의에서 팔레트, 우리는이 있습니다. 영원히, 고양이를 터치하지 않는 경우는, 단지 세 단계를 계속 이동. 그리고 여기에 또 다른 퍼즐 조각입니다. 당신이 가장자리에 있다면, 반송. 그래서 조류는 가지입니다 자신의 사업을 신경 쓰지, 단지 주위를 비행하고 수신 거부, 그것은 정말 조건부 논리를 가지고 고양이 이 새를 잡았 더라면 확인합니다. 괜찮아. 그래서 여기에 다른 일을 할 수 있도록, 이 하나 안녕 안녕 안녕이라는된다. 그리고이 사람은 여기에 단지 않습니다 영원히 루프에서이. 하지만 어떻게 notice--하면 우리는 중지합니까 이 매우 성가신 프로그램? 스페이스 바를 누르십시오. 나는 할 경우 때문에, 왼쪽 program-- 끊임없이의주의 음악을 들었 키 공간 프레스입니다. 스페이스 바를 누르면 경우, 그렇다면, 어떤 역할을합니까? 그것은 매우 일반적인 기술을 수행합니다. 그것은 몇 가지 값과 같은 변수를 설정합니다. 하지만 그 값을 전환합니다. [? 그래서 등장?] shape-- I에 따라 변수를 가질 수 I 미리라는 썼다 그냥 예 또는 아니오라고하는, 음소거. 소리가 음소거 또는되지 않는 이유는 무엇입니까? 참 또는 거짓? 통보, 나는 경우이 항아리 말하는거야 음소거 후 한 변경, 제로, 다른 0으로 음소거 설정합니다. 그래서 그냥 0에서 하나의 값을 뒤집습니다. 나는 그것을 변경 done-- 할 수 2-3에 둘, 셋에서 또는 4-5 또는 6-4. 그러나 그것은 중요하지 않습니다 내가 사용하는 번호, 오랫동안 나는 유지로 그것을 반대 변경. 

그리고 대부분의 모든 프로그래머는 것 제로 one-- 거짓과 진실 선택 오프 on--이를 나타냅니다. 그리고이 여전히 실행 중입니다. 나는 다시 스페이스 바를 치면 

[SEAL 소리] 

이 프로그램은 여전히​​ 실행되고 있습니다. 이 다른 스크립트가 거기에 있기 때문에 즉, 영원히 다음을 수행했다. 음소거 변수가 동일한 경우 zero-- 그래서 당신은 음소거하지 않는 경우 그것은 거짓 경우 logic--입니다 비슷하게, 다음 사운드를 재생, 당신이 음소거하고 있기 때문이다. 그런 다음 사운드를 재생한다 2 초 동안 안녕 안녕 안녕 생각 다음 기다린 그것을 할 다시 다시 다시. 

그리고이 방법으로 우리는 방법에 대한 있나요 프로그램이 상호 작용하는 사람들 께 다시. 그리고 그들은 필요 없어 로 다른 사람과 같이 일한다. 사실, around-- 파고 없는 말장난 intended-- 누군가의 엄청난 금액을 보냈다 구현 인터넷에서 시간 스크래치에 PokemonGo. 심지어 당신을 geolocates 여기 캠브리지 또는 Allston. 당신도 어떤 사람을보고 싶다면 이 항아리 매우 멋진 메뉴 수행 할 수있다. 여기를 클릭합니다. 

이것은 지금 내 화살표 키 날입니다. 나는이 후에 갈거야. 딸깍 하는 소리. 그리고 지금 당신은 PokeBall을 클릭합니다. 내 말은, 나는 당신이 것 같아요 PokeBall을 클릭 예정. 괜찮아. 그래서 그했다. 나는 여기에 갈 수 있습니다. 그리고이 사람은 좀 더 구현 here-- 세 PokeBalls 이상 PokeBalls. 

우리는이 링크를 게시 할 것이다 온라인 그래서 당신은 재생할 수 있습니다. 그러나 통지는있다 몇 가지 기본적인 빌딩 블록입니다. 그것은 많은 애호가 보이는하고있다. 이 인상적이고 더 우리가 일반적으로 것보다 기대, 확실히 문제에 대한 제로를 설정합니다. 나는 얼마나 아무 생각이 이 사람은 온라인 보냈다. 하지만 모든 단지 루프입니다. 사운드 재생이있다. 루프의 어떤 종류가있다 난 여부에 대해 듣고 위쪽 화살표 또는 아래쪽 타격 화살표 또는 왼쪽과 오른쪽 다음 그렇게하면 움직이는 그것은 일부 픽셀 수입니다. 그리고 난에 클릭하면 다른 스프라이트가있다 이 경우 조건의 일종. 그래,이 너무 강렬 해지고있다. 우리는 중단 될 것입니다. 그것은 모든 기본 빌딩 블록입니다. 기타 다른 성분이 없습니다 사람보다 우리는 이미 살펴 보았다. 

그리고 아직 여기, 내가하자 사례 중 하나 최종 세트 그 역시 그림 물감 당신이 무엇을 할 수 있는지. 다음은 아주 간단한 프로그램입니다 그 그냥이 항아리 기침, 기침, 기침을한다. 만에 기초하여 어떤 우리는 지금까지 검토 한 여기서 분명하다 개선을위한 기회를 제공합니다. 이 프로그램은 올바른 것입니다. 그것은 세 번 기침 이는 내가 의도 한 것입니다. 그러나이 제대로 구현입니다. 그것은 심하게 설계되었습니다. 왜? 네. 그것은 루프 아니다. 그리고 그것은 너무 많은 아니에요 이 루프 아니에요, 그것은 중복의 많은이 있다고합니다. 이 복사되고 붙여 넣은 코드, 말하자면. 용액 아마 실제로 루프입니다. 그래서 내가 가서 보자 그을 개선. 그리고 여기이 드래그거야. 내가 가서 반복하자 블록은 세 가지로 변경. 나는 버릴거야 그 블록의 일부. 

그리고 당신은 꽤 직관적 알 수 있습니다. 당신 드래그 앤 드롭 물건 표시 결국 사라집니다. 그리고 난 그냥 여기이 드래그 할 수 있습니다 지금은 여전히​​ 청소기 버전이 있습니다. 하지만 당신은 알아? 이 기회는있다 abstraction-- 이제 새로운 어휘를 정의하기 시작합니다 MIT는 예상하지 않았다. 대기를 반복 있습니다 그리고 영원 경우, 하지만 내가 원한다면 것은 소개 블록으로 단어 기침? 내가이 퍼즐 조각을 원하는 경우 인생에서 누구의 목적은 기침을하는 것입니다? 

음,이 버전을 살펴 보자 여기에, 어느 다음과 같이 내가 만든. 마술, 내가 만든 여기 퍼즐 조각, 이는 스크래치 당신이 할 수 있습니다. 그리고 실제로 C와 파이썬 자바 스크립트는 여러분이이 작업을 수행 할 수 있도록하는 것. 당신은 당신의 자신의 정의를 만들 수 있습니다 당신은 당신이 원하는 전화 조각. 이 경우, 기침 느낀다 합리적인 정의 등을들 수있다. 그리고 다운이 조각 여기에 당신은 그것이 무엇을 의미하는지 정의 할 수 있습니다. 

나는 드래그에서 제외 이 팔레트 here-- 더 이 큰 보라색을 blocks-- 나는 기침에 입력 블록, 나의 새로운 퍼즐 조각의 이름으로. 그리고 나는 사용자가 임의의 시간을 말하는거야 이 새로운 기침 퍼즐 조각을 호출, 발언권과 대기 해. 그래서 여기까지 내 반복 블록, 난 그냥 세 번 기침을 할 수 있습니다. 

그리고 나는 특히, 주장 지금 경우이 내용을 숨 깁니다. 누가 기침이 구현되는 방법을 걱정? 나는 약 치료의 모든 나는 기침을 할 수 있습니다 프로그래머. 나는 구현되는 말을 어떻게 상관 없어. 난 그냥 것을 걱정 고양이는 무언가를 말할 수있다. 내가 할 수있는 거리에 추상적 그 세부 사항 및 이곳에서만 화면에 무엇에 초점을 맞 춥니 다. 그러나 나는 한 단계 더 나아가 걸릴 수 있습니다. 

내가 가진 그 여기에 주목 루프를 세 번 구현했습니다. 그러나 경우 대신 나는이 버전을 잡아? 그리고 무엇을 대신하는 경우 여기에이 버전에서, 난 그냥 데리고 내 퍼즐 조각을 변경 자체에게 인수 및 입력? 그리고 입력 할 수 있습니다 세 같은 번호. 그래서 지금, 나는 프로그램을 쓰고 있어요 경우 나는 고양이가 기침 할, 실제로 퍼즐을 알 수 있습니다 기침을 몇 번 조각 여기 하단에가하는 애호가 때문에 이러한 사용자 지정 퍼즐 조각의 버전 나는 그를 지정할 수 있습니다 기침은 실제로 소요 input--이 같은 주장을합니다. 그리고 그거 알아? 어쩌면 내가 실현, 분을 기다립니다. 기침은 똑같이,이다 그것은 근본적이다 재채기와 같은 생각. 그냥 다르다 화면에 단어. 나는 추상적 인 거리에 있습니다 추가 및 구현 (A)의 마지막 버전 기침 첫눈에있는 찾는 방법이 더 복잡하다. 하지만 무슨 짓을했는지 알 수 있습니다. 지금이 genericized generalized-- 이 퍼즐 조각을 정말 .. 호출 할 단어 n 번을 말한다. 

그리고 지금은 두 개의 새로운 퍼즐 조각을 여기 아래 기침 n 번을 정의합니다. 그리고 기침 기능은 무엇입니까? 내 사용자 지정 퍼즐 조각은 무엇입니까? 그것은 단지 말 블록을 호출 내가 말하고 싶은 단어를 전달, 숫자 전달 시간의 나는 말하고 싶다. 지금은 구현할 수 있기 때문에 단순히 achoo 말에 의해 재채기, 이 경우, 회 몇개. 

그래서 나는 레이어와 레이어 있어요. 그리고 또, 여기에서 핵심은 아니다 그것을 구현되지만 사실 방법 그 경우 나는 그냥 그대로 화면 밖으로 이러한 이동 어떻게 보면 간단하지 경우 예쁜 내 프로그램은 이제 보인다. 그것은 무엇을 수행하기 때문에 내가 추상화 한 말한다 멀리 그 검은 상자 안에 것입니다. 그것은 여기에 보라색 상자 될 일이, 안에 무엇이 그러나 나는 멀리 방해 한 나는 그것이 어떻게 작동하는지 상관하지 않기 때문에. 난 그냥 지금은 작동 관심. 

그리고 실제로, 문제에 이것은 정확히 제로로 설정 아이디어의 레이어의 종류 당신거야 탐구 할 수있는 기회를 가질 수있다. 그것은 정확히 기회입니다 문제 해결 기술을 적용, 아마 무엇에 익숙하지 않은 환경을 제공합니다. 그리고 당신은 프로그래밍되지했는지 전에 또는 그 이전 프로그램, 당신은 거기에 있음을 확인할 수 있습니다 작은 선물 모든 사람이 환경입니다. 그리고 문제 설정 일주일의 시간에 하나, 우리는 초점으로 전환됩니다 라는 높은 수준의 언어에 낮은 대신 C-- 또는 수준의 언어라는 C-- 그 심지어 더 그것이 비록, 강력한 첫눈에 더 많은 비밀 조금. 

그리고 당신은 오늘의 TL에 따라 실현합니다 : DR을, 설정이 문제가 짧은이 있는지 미래의 것보다 시간의 창, 단순히 당신은 그것을 꽤 찾을 수 있어야하기 때문에 얻기 쉬운. 그리고 걱정하지 당신은 클래스가 후반 추가합니다. 우리는 오래 전에하는 것이 해결됩니다. 우리가 케이크를 위해 휴회 전에,하자 불과 2 분 표정으로 마무리 CS50 여기에 당신을 기다립니다 무슨. [음악 재생] 괜찮아. 즉, CS50을 위해 그것을이다. 우리는 당신에게 곧 볼 수 있습니다. 케이크는 현재 제공됩니다. [음악 재생] SPEAKER 17 : 당신이 들었어요 안식년, 최고의? SPEAKER 18 : 아마도 거기 후드 아래에 더. 