[Foninį triukšmą] Ar tai veikia? PATRICK REBESCHINI: Mes galime pradėti. GERAI. Didysis. Pradėkime. Taigi tai yra mano didžiausias malonumas pasveikinti Jus visus šiandien pirmą paskaitą apie, gerai, Įvadas į Kompiuterija ir programavimo. Taip pat žinomas kaip CS50 ar taip, CPSC 100, oficialiai čia Jeilio. 

, Kad galėtume būti ne daugiau susijaudinęs pasveikinti jus visus čia. Mano vardas yra Patrick Rebeschini. Aš esu vadovas instruktorius klasėje. Aš esu čia, atstovaujanti grupė apie 60 darbuotojų kad bus dirbti su jumis visoje semestrą. Šis skaičius yra beveik 60 mūsų. Tačiau kartu nepaprasta įsipareigojimų lygis kad mes įdėti į šį klasė, daro CS50 klasė Jeilio universiteto, kuris siūlo didžiausias paramos dydis jums visiems. Ir mes negalėjo būti labiau didžiuotis siūlo šią klasę čia dar kartą. 

Iš tikrųjų, kaip jūs netrukus patirti, CS50 yra daug daugiau nei klasėje. Tai bendruomenė. Ir jums bus dalis netrukus šios bendruomenės. Tai antrus metus Jeilio siūlo šią klasę. Mes statome ekstremalios sėkmės praėjusiais metais, kur pirmą kartą, čia ne šio universiteto, Bakalauro mokymo asistentas buvo priimtos klasėse. Viskas prasidėjo su Į šią klasę pernai. 

Taigi, kaip jūs žinote, klasės yra mokoma kartu su Harvardo universitete. Mokyti šį kursą mes relying-- mes galime pasikliauti dideliu kompetencija Davidas Malan ir Harvardo komanda. Dovydas buvo mokymas CS50 gerai, 10 metų dabar. Ir kiekvienais metais jis buvo stumti ribas ir gerinti klasėje patirtį. Vėlgi, mes negali būti laimingi tęsti šį bendradarbiavimą su jais. 

Iš tiesų, vienas iš įdomiausių dalys, Aš pasakys naudojant šią klasę dabar tiek Harvarde ir čia Jeilio, yra tikrai neįtikėtina kryžminimas idėjų, kuriomis siekiama pagerinti mokymosi patirtį jums visiems. Taigi, kaip tai platus rezultatas bendradarbiavimas tarp dviejų universitetas, CS50 didžiuojasi paskelbti naują versiją šiemet su pastebimų pokyčių. Davidas visi bus papasakoti apie juos dabar. Taigi please-- o tai yra sakė, prašome prisijungti prie manęs atvykę į duoti didelis audringi plojimai pasveikinti Dovydas ir Harvardo komanda čia Jeilio. 

[Plojimai] 

DAVID Malan: Ačiū. Ačiū. Tai CS50, Harvardo Universiteto ir Jeilio universiteto anketa Įvadas į intelektinės įmonės kompiuterių mokslo ir programavimo menas. Ir ką tai reiškia, kad šio kurso galiausiai, yra apie problemų sprendimo. Iš tiesų daugelis iš jūsų gali atėjau iš vidurinės mokyklos arba praleido pastaruosius porą metų įdomu, ką kai kurie iš jūsų draugų pernai ar kitų klasių. Ir dar, realybė yra, nesvarbu, ką mes padaryti ne dienos pabaigoje į šią klasę, tai bus apie problemų sprendimo. 

Ir kaip toks, gal imtis kai dėl to, perdraudimas kad 73% studentų, kurie pasinaudoti šia klasę, tiek čia Jeilio taip pat Harvardo, niekada ėmėsi CS klasę anksčiau. Taigi, jei jūs sėdite čia auditorija šiandien įdomu kodėl tu sėdi čia į auditoriją šiandien O gal tiesiog po kartu su keliais draugais, O gal buvote tiek smalsu, ką informatikos ir programavimas, suvokti kad dauguma jūsų klasiokų į kairę ir iš jūsų teisė yra labai daug tos pačios demografinės. 

Ir iš tiesų, jei mes žiūrime praėjusių metų statistiką per studentų organo CS50, tiek čia ir Harvarde, 58% studentų apibūdinti save kaip nekomfortiška. 9% yra patogesnė. Ir tada 33% yra kažkur tarp. Ir nėra formalus apibrėžimas ką šie kibirai reiškia. Jūs tarsi žinoti, kad tu mažiau patogūs, jei jūs esate. Jūs jaučiatės šiek tiek neramus su gal yra klasėje. Jūs nesate visiškai tikri, ar kompiuteris Mokslas klasė galiausiai už jus, ir suprasti, kad esate labai gera kompanija. Ir iš tiesų klasifikavimo, ir vertinimas, ir grįžtamasis ryšys, ir visa tai atraminė struktūra klasėje galiausiai labai individualiai. Labiau nei bet dauguma kitos klasės dizainas. Ir iš tiesų, kas galiausiai klausimai šioje klasėje nėra tiek daug, kur jūs galų iki, palyginti su kitais, bet kur, 11 savaitę ar paskutinis, ir, palyginti su sau savaitę 0 čia mūsų pirmasis. Taigi, ką tai reiškia? Na, tai reiškia iš tų 73% studentai praėjusiais metais, kad niekada, kurių buvo imtasi CS klasės anksčiau, padarytais pradėti semestro jie buvo žymėjimą kalba vadinama nulio, kurios mes patys matysite čia ir šiandien. Ir iki pabaigos semestras buvo jie dingo per visą šį sąrašą iššūkius. Nuo kalbų vadinamas C. Vykdymą, kas Iš pirmo žvilgsnio, vyksta būti kaip iš už iššūkį tiek kai, bet gana malonu, kai jūs gauti Super Mario šoktelėti aukštyn ir žemyn piramidės įgyvendinama, nors, tik su kažką vadinama ASCII menas. Įgyvendinant paskutinį šarvuotuose ką studentai praėjusiais metais, tada nebuvo po to buvo įgyvendinti savo savo Cezario šifras ir vigenere šifras. Taigi šifravimo algoritmai , su kuriuo galėtumėte peštynės informacija ir tada Rozszyfrować informacija siųsti slaptus pranešimus. 15 žaidimas. Jei pamenate iš vaikystės arba kai šalis palankumas, kad mažai plastiko žaidimas, kur jums judėti numeriai aukštyn, žemyn, į kairę ir į dešinę bandyti gauti juos, kad, realiai įgyvendinti šį žaidimą ir sprendžiant logikos ten reikia. Ir tada mes dabbled Teismai pernai. 

Taigi viduryje semestro studentai, kurie niekada naudoti savo klaviatūros Šiuo tikslu iki, buvo Rašymas Software atsigauti, taip sakant, JPEG arba nuotraukos kad mes turėjome netyčia ištrinta iš skaitmeninio atminties kortelę iš fotoaparato. Atstatymas slaptas žinutes nuo viduje rastrinis vaizdas, ir kiti tokie tipai grafikos, taip pat. 

tada mes perkėlėme į suteikiant visa klasė žodyno. Tiesiog tikrai didelis tekstinis failas su 150.000 angliškų žodžių. Ir kiekvienas buvo užginčytas kažkaip skaityti, taip sakant, šie žodžiai į atmintį. Į kompiuterio atmintį. Ir tada atsakyti į klausimus į formą, yra tai žodis? Ar tai žodis? Ar tai žodis? Tikrai tik įgyvendinant rašybos tikrintuvas. Ir tada iššūkį vieni kitas su dideliu board-- lyderis lenta pamatyti, kas galėtų naudoti mažesnį atminties, per trumpiausią kurį laiką realiai patikrinti rašybą didelius dokumentus. 

Mes perkėlėme iš tada įgyvendinti tuos savo interneto serverį. Taigi ne todėl tinklalapius kalbomis kaip HTML ir CSS, jei esate susipažinę. Bet iš tikrųjų įgyvendinti serveris, klauso internete prašymų iš naršyklių ir tada reaguoti į šiuos prašymus. Tada įgyvendinti mūsų pačių E-prekyba, kaip svetainę, kur studentai galėtų pirkti ir parduoti atsargas. Piešimas beveik realiu laiku akcijų citatos iš Yahoo Finance ". Ir leidžia studentams pamatyti kaip jų portfelis vystosi. Ir tada pagaliau Mash Up "Google" Naujienos "ir" Google Žemėlapiai pagal kurias studentai iki kadencijos pabaigos žodžiais turėjo galimybę paspausti ir apvalus, ir paieškos, "Google" žemėlapyje. Ir tada pamatyti visas naujienų straipsniai, kad yra proksimalinio tiems tikrose srityse. Taigi tikrai ketina nuo nulio iki 60. 

Ir pakeliui turintys ką mes turėjome Pernai vadinamas, įsilaužėlių papildymai. Kad pakelti kartelę dar tiems iš jūsų, kurie gali labai gerai būti geras suma patirties būdamas, kad 9% daugiau patogūs. Taigi suprantu, kad ten labai Aukštos lubos net tie, iššūkiai studentams iš kito fone. Nes pabaigoje dieną, mes galiausiai orientuota paprasčiausiai apie tai. 

Bet ką tai reiškia, problemų sprendimas? Taigi leiskite pasiūlyti mes distiliuoti ją kaip šis. Taigi problemų sprendimas yra tikrai tiesiog tai rūšies paveikslėlyje. Taigi, jūs turite indėlį į tam tikrą problemą, ką jūs iš tikrųjų norite išspręsti. Tikslas yra gauti rezultatus, išspręsti šią problemą. Ir tada viduryje yra ką mes vadiname juodą langelį. Jūs nebūtinai žinome, ar net rūpintis, kas tą juodą dėžutę viduje. Visi žinote, kad kai jūs maitinate indėlį į tai, Jūs tikiuosi gauti išėjimo arba tirpalas iš jo. Ir nors šiandien mes pažvelgti tiek įėjimai ir išėjimai, Mes ilgalaikis, ir per Žinoma viso semestro, sutelkti dėmesį į tai, kas tame langelyje viduje. 

Ir ten bus melas kažkas vadinamas algoritmai. Žingsnis po žingsnio instrukcijas realiai spręsti tam tikrų problemų. Bet Kas yra kai kurių įėjimai pavyzdys? Tai gal paprastas dalykas ne pradžia kiekvienais mokslo metais, nors galbūt norėsite imtis lankomumą. Taigi, mes galime padaryti vienas, du, trijų, keturių, penkių, šešių, ir kaip būtų, aš nuolat takelis šios informacijos. Galiu tik eiti vienas, du, trijų, keturių, penkių, šešių. Ir tiesiog naudokite rūšiuoti vienaženklio skaičiaus. 

Arba aš iš tikrųjų galėtų įrašyti Tai šiek tiek ilgesnės trukmės. Ir kaip aš atstovauju visiems kad šiame kambaryje žmonės? Na, aš galėtų padaryti kažką panašaus, gerai. Matau vieną asmenį. Gerai. Matau vieną asmuo, trečiasis asmuo, ir taip toliau. Bet niekas skaičiuoja žmogus mėgsta tai. Taigi pažodžiui, dauguma iš mūsų, jei mes net ketina parengti ką nors ne visi, tikriausiai ketina eiti vienas du trys keturi, gal gauti šiek tiek fantazijos, penki, šeši, septyni, aštuoni, devyni, dešimt ir tt. 

Ir tai iš tiesų yra sistema, vadinama Vienetinis. Uno, kaip ir JTO reiškia vieną, kur jūs tik vieną abėcėlės raidę. Jūs ką tik gavau šį maišos ženklą. Ir aš, efektyvumo, tiesiog atkreipė Šie maišos ženklai, galiausiai kaip tiesios linijos. Bet aš galėjo parengti juos kaip mažai lazdas skaičiai. Kur atstovauti vienas asmuo, vienas įėjimas, Aš tiesiog atkreipti lazdą skaičius arba maišos ženklą. Bet tai dar ne viskas, kad išraiškingas. 

Jei viskas, ką turiu, yra tai maišos ženklai, jau nekalbant apie lazdas skaičiai, kaip galėčiau atstovauti kažkas panašaus skaičiaus 15? Arba 15 žmonių kambaryje? Galiu daryti kažką panašaus į 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15. Tai tiesiog nėra masto labai gerai. Kaip įėjimai gauti didelis, mes reikia geresnę sistemą nei šis. 

Ir paaiškėja, kad sistema, kad kompiuteriai naudoti yra ne visi, kad skiriasi iš to, ką jūs ir aš žinau. Iš tiesų, dauguma žmonių šiame kambaryje, net jei esate tarp tų mažiau patogus, nebūtinai žinoti kaip jūsų Mac arba PC tikrai veikia, jūs tikriausiai bent girdėjote, kad po kapotu yra 0 "ir 1-aisiais. Vadinamasis dvejetainis sistema. Taigi iš tiesų, kompiuteriai turi daugiau nei tik maišos ženklai jų leksika, bet ne taip daug žodynas kaip mes, žmonės. 

Iš tiesų, mes, žmonės, nenaudokite dvejetainis. Patinka tai reiškia 2, 0 ir 1. Bet dešimtainis, deka reiškia 10, 0 iki 9. Taigi, mes turime daug daugiau išraiškingas galimybes mūsų normalios žmogaus pasaulyje. Bet aš ginčytis, kad šios sistemos, dvejetainis, o dešimtainis, ir viskas tarp ir už jos ribų, yra iš tikrųjų viskas gana gerai susipažinę. Pavyzdžiui, mano Šis pavyzdys čia 123. Taigi tai tikrai yra, žinoma, numeris žinome kaip 123. Bet viskas, ką aš ką tik atkreipė buvo tik tai modelis simbolių, molio taip sakant. Rūšiuoti formų dėl kreida lentoje. 

Bet kodėl mes iš karto ir intuityviai suvokti tai kaip 123? Na, jei buvo tarsi man pradinėje mokykloje, jūs tikriausiai sužinojo, kad tai yra 1s stulpelis, tai yra 10s kolonėlė, tai yra 100s kolonėlė. Ir kodėl taip yra naudinga? Na, tai paprasta aritmetika jums dabar daryti norint gauti iš simbolių modelio skaičių, mes suprantame, intuityviai. Yra tai, ką, 100 kartų 1, tada 10 kartų 2 ir 1 kartus 3, kuris, žinoma, yra tik 100, ir tai yra 20, ir tai yra trys. Ir todėl, jei mes pridėti tuos together-- ah. Taigi jame slypi motyvavimo rūšiuoti Už kodėl tai simbolių rinkinys reiškia kažką realaus ir skaitinį. 

Na, kompiuteriai daryti tą patį dalyką, bet jie tik gali tikėtis kaip aukštas, kaip vienas. Kadangi galėjau tikėtis tokio pat aukščio kaip trys. Ir iš tiesų, jei aš nuolat ketinu gali eiti kaip aukštas, kaip devynių šioje sistemoje. Kompiuteriai turėti tik nulius ir tie jų abėcėlė. 

Taigi, ką tai reiškia? Na, tai tiesiog reiškia, kad jei kompiuteryje nori atstovauti, sako, kad skaičius 0, gal naudojant tris characters-- trys abėcėlės raides taip sakant, tai kaip kompiuteris rodo 0. Taigi ne visi, kad baisu iki šiol. Tai, ką mes, žmonės būtų tai padaryti. Ir iš tiesų, dauguma iš mūsų tiesiog ignoruoti nulius vistiek. 

Kompiuteris, jei ji nori saugoti numeriu 1, Pasirodo, ketina tai padaryti. Ir kompiuteris saugoti skaičius 2 nėra ketina daryti unarinį sistemą, kurį aš užsiminiau anksčiau. Tai iš tikrųjų ketinate tai padaryti. Ir tai tikriausiai kai modelis prasideda tapti mažiau akivaizdus daugumai žmonių. Tai 2, tai yra 3. Įdomu, tai dabar 4. O dabar tai tikrai atrodo, kad galbūt paslaptingas, bet tai ne, jei mes manome, kas dvejetainis iš tikrųjų reiškia. Tai reiškia, kad turite du Jūsų abėcėlės raidės. Taigi du galimi simboliai kiekvieno vietos rezervavimo. 

Taigi, kad tikrai reiškia, kad mes ketiname į reikia 1s vietoje arba 2S vietą, 4s vieta ir tada 8, ir 16, 32, ir 64. Ir koks skirtumas ten? Kaip tai yra 1, 2, 4, 8, 16, 32, 64. Ir kol mes turėjome 110, 100,000, 10000. Koks panašumas ten? Ir koks modelis? Taip. STUDENTŲ: įgaliojimai 2 vietoj įgaliojimų 10. DAVID Malan: Taip. Įgaliojimai 2 vietoj įgaliojimai 10 d. Ir taip, jei aš norėjau išlaikyti vyksta, 8, 16 ir taip forth-- bet dabar, jei turite tokio pobūdžio iš clue, dabar dvejetainis sistemos iš tiesų yra gana paprasta. Kodėl tai iš 0 Pattern į kompiuterių 0 pasaulyje? Na, nes jis 4 kartus 0, 2 kartų 0, 1 0 ir gausite 0. 

Kodėl tai numeris 1? Tie patys argumentai, tačiau dabar mes turėti 1 iš 1 skiltyje. Kodėl tai 2? Mes turime 1 iš 2s skiltyje. Ir kaip tada daryti aš atstovauju pasakyti, skaičius 7, dvejetainiu? Pasakykite garsiau. 

STUDENTŲ: Trys 1s. 

DAVID Malan: Trys 1s. Taigi 1, 1, 1, nes mes tiesiog reikia 4 plius 2 plius 1 suteikia man 7. Gerai. Taigi iš ten, kaip mes atstovauti 8 su 3 vietos rezervavimo ženklų? Taip. 

STUDENTŲ: 1, 0, 0, 0. 

DAVID Malan: Taip 1, 0, 0, 0. Ir dar gal, I rūšies techniškai reikia pridėti kitą vietaženklį prie lentos. Jei aš noriu, kad tilptų, kad aš iš tikrųjų reikia padaryti kažką panašaus į tai. Taigi aš iš tikrųjų reikia naudoti dabar 8s stulpelis, ir tai gerai. Bet keistas dalykas kompiuterijoje yra kad manimi kainuos mums kažką. Jums reikia daugiau RAM į savo kompiuterį dabar. Jums reikia daugiau atminties nes jums reikia ką nors fizinis saugoti, kad Papildoma tiek, taip sakant. Dvejetainiais skaitmenimis. Ir iš tiesų visa tai atsitiko čia, kaip dešimtainio sistemos, jei mes nuolat pridedant numerius aukštyn ir aukštyn ir daugiau, mes einame į 5 iki 6 iki 7 iki 8 tai kaip atlikti 1, pažodžiui. Ir tada visa kita nueina iki nulio. 

Bet kaip mes iš tikrųjų reiškia šie dalykai fiziškai kompiuterio? Na, bent dienos pabaigoje, tik fizinis įėjimo vyksta į savo kompiuterį čia tai maitinimo laidas, todėl elektros energijos arba elektronai iš sienos. Ir taip kaip man gauti iš kažko fizinė, kaip kad iš tikrųjų atstovaujanti kaip ši idėja vietoj. 

Na, ką galėtume padaryti? Galėtume manyti, kad viskas gerai, Galbūt, jei elektros energija teka Galėčiau ją saugoti ir išlaikyti jį. Ir jei aš ūkį tam tikru elektros energijos, kad tiesiog vyksta savavališkai sudaro 1 d. Ir jei aš traukite už kištuko ir nieko ten, žinote, kad tiesiog vyksta savavališkai atstovauti 0. 

Taigi, jei kažkas ten, 1. Jei nieko ten, 0. Arba jūs galite padaryti tai šiek tiek daugiau vaizdo. Čia yra 0. Nėra nieko įdomiau vykstančius apie apie mano telefoną atgal. Bet jei aš leisti šiek tiek tiek elektros energijos srautas, nors tai šiek tiek ryškios čia, mano žibintuvėlis išvyko. Taigi, aš saugojimo mokestį ir Ergo, šis telefonas dabar reiškia 1. Taigi 0 1. 

Taigi su 1 "iPhone kaip didelis aš galiu skaičiuoti naudojant šį metodą natūra? Aš turiu galvoje, kad 1. Tai dar ne viskas, kad įtikinamos. Taigi, ką daugiau gali mums daryti? Na pažiūrėkime, kas nors ant jų dabar, kad galėčiau pasiskolinti telefoną? Kiekvienam, kas turi telefoną su žibintuvėlis pastatytas? Ar galiu pasiskolinti? Man nereikia, kad atrakinta. Gerai. Ačiū. Leiskite skolintis tai. Gerai. Taigi, jei aš dabar slinkite aukštyn ir čia ką aš atstovaujanti dabar? Taip. Taigi tai trijų, nes tai atitinka 1s stulpelis, tai yra 2s skiltyje. Taigi 1 plius 2 yra 3. Ir tada, jei mes pabandysime gauti tikrai creative-- oi, ačiū. Labai pirmumo. Gerai. dabar turiu tris iPhone. Gerai. 

Ir dabar this-- aš ne padaryti bet toliau nei šis. Ką aš atstovaujanti dabar? Tik septynetai. Bet man reikia fiziškai daugiau atminties, šiuo atveju. Bet kad viskas yra. Jūs galite galvoti apie tai, kas vyksta on-- ačiū you-- viduje jūsų telefone kaip tik yra jungiklis, kuris yra įjungtas ir išjungtas. 

Ir jei jūs kada nors girdėjote žodis tranzistorius. Arba, jei jūs kada nors girdėjote rinkodaros kalbėti Intel Inside, kad manimi kalbėti aparatūros rūšies kad viduje kompiuterio. "Intel" daro procesorius, centrinio procesoriaus įtaisų, kurie yra lyg smegenys viduje kompiuterio. Ir šie procesoriai ir dalykų jie prijungti turėti daug ir daug mažyčių jungikliai. Milijonai, milijardai jungikliai kad gali būti būti įjungta arba išjungta. 

Taigi kompiuterius, laimei, kaip mūsų Mac ir PC, gali tikėtis būdas didesnis nei 7 arba 8 nes jie turi būdas daugiau kaip trys ar keturi bitai. Būdas daugiau nei lygiavertis trys žibintuvėlį, kad mes tiesiog turėjo. Bet dabar tai pradeda gauti gana neįdomu greitai. Jei aš dabar noriu, kad iš tikrųjų būtų galima padaryti kažką įdomiau, Noriu, kad būtų galima pereiti į kažką panašaus į tai. 

Taigi ASCII, tai tikrai ne naudingas akronimas, tačiau Amerikos standartinis kodas informacinių mainų. Tai tiesiog reiškia, keletą metų prieš mes, žmonės nusprendė, Žinai ką, mes norime, kad būtų galima padaryti daugiau kompiuterių, nei tik numeriais. Mes nenorime, kad juos tiesiog būti brangus skaičiuotuvai, mes norėtume, kad būtų galima daryti tokius dalykus kaip tekstų apdorojimo, nors ir labai paprasta. Vėliau mes turėjome laišką ir kitų tokių žiniasklaida. 

Ir taip pasaulis nusprendė keletą metų prieš Pagal šią sistemą ASCII, zinai ka? Tam tikrų tipų programos bet kada pamatyti skaičių, atitinkantį 65, kaip ir bitų modelis. Ir mes galime padaryti matematikos čia ant lentos. Bitų, kurie atstovauja 65 modelis. Negalima galvoti apie tai, kaip 65 dešimtainiais. Pagalvokite apie tai, kaip savavališkai, tačiau visame pasaulyje, nuosekliai, kaip sostinėje A. Ir tada pasaulis nusprendė, žinote, ką? Paimkime kitą bitų modelis. O jei mes kada nors pamatyti numeris 66, tegul tiesiog manyti, kad tai yra kapitalo B. Greitas perduoti H ir aš, jei matote, 72 ar 73, kad turėtų būti H ir I formą atitinkamai. Ir taip tol, kol visas pasaulis sutinka ant tai. Taigi, kad, kai jūs gausite laišką arba jūs galėtumėte gauti failą į USB atmintinę, ar kažkas panašaus that-- kada matote, kad bitai modelį, jūs žinote, kad tai turėtų būti ši laiškas ar kokia nors kita raidė. 

Bet tai konkrečios aplinkybės, į dešinę. Elektroninio pašto programa gali interpretuoti Šie dalykai kaip simbolių, bet grafikų skaičiuotuvas arba skaičiuoklė galėtų atstovauti arba interpretuoti šie dalykai, žinoma, kaip raides. 

Taigi Turint tai sakė, greitai mažai peržiūrą. Tai gal trijų simbolių E-mail, kad manimi buvo išsiųstas į mane. Po gaubtu visa tai 0s ir 1s, bet mes tai nerūpi. Mes ketiname pradėti abstraktus virš 0s ir 1s į laiškus. Ir jei matau 0s ir 1s modelį, kuris tikrai atstovauja 72, užuomina, užuomina, 73, ir tada 33, kas yra žinutė? 

STUDENTŲ: [NESIGIRDI] DAVID Malan: Taigi, jei jūs manote prieš atgal tik akimirka, HI buvo žinia aš bandžiau bendrauti, nes čia H yra 72, Aš tai 73, o dabar 33-- tu nenorėjai nebūtinai tai žinoti iš anksto, bet it turns out, jei jūs iš tikrųjų pamatyti daugiau diagramos ir sistemos kad žmonija susitarta metų Prieš tai tik šauktukas. Ir iš tikrųjų, yra iš modelis simboliai ir numeriai kiekvieną simbolį kad jūs galite turėti savo klaviatūroje. 

Gerai. Leiskite abstraktus toliau. Jei mes nenorime tiesiog dalykų, pavyzdžiui, skaičių ir raidžių, mes iš tikrųjų norime įgyvendinti grafika. Na, jei jūs kada nors išgirdo akronimas RGB. Tai tipo data dabar, bet tai dar kokios ten. RGB raudona, žalia, mėlyna. Ir tai tik sistema pasakyti, žinote, ką, tegul naudoti tris rinkinius bitai. A 8 bitų rinkinys, kitas 8 rinkinį bitai, o kitas 8 bitai rinkinys. Ir tegul naudoja tuos bitus saugoti Kiek raudoną mes nori mūsų ekrane, tai kiek žalia norime mūsų ekrane ir kiek mėlyna norime mūsų ekrane. Ir tai tik reiškia, kad jei turi lot-- didelį skaičių raudona, tai reiškia, kad duoti man raudonos daug. Jei turite didelį numerį žalia, duok man žalia aikštelė. O jei turite tik šiek tiek mėlyna arba nedidelio skaičiaus kaip 33, man šiek tiek mėlyna. Ir jei atsitiktų sujungti tuos Trys dydžiai, taip sakant, jums this-- jums vos gali pamatyti projektorius čia, bet tai migloti atspalvis geltonas arba rudas. 

Tačiau tai yra pasakyti, naudojant, kad modelis 8 plius 8 plius plius 8-- kad 24 bitų modelis yra kaip kompiuteris būtų laikyti, kad geltonos spalvos atspalvį viename mažytė dot pikseliui ekrane. Taigi mes dingo iš 0s ir 1s į dešimtainį numeriai į abėcėlės raidėmis. Arba įdomiau, spalvotas taškus. 

Na, ką, žinoma, tada ateina kitas? Na, kas yra vaizdas, kurį pamatyti Facebook arba gauti elektroniniu paštu? Ar panašiai? Kas yra apibrėžimas techniškai ir vaizdą? Taip. Kas yra vaizdo sudaro, jei jums atrodo tikrai arti prie ekrano? Taip. Tai tik visa krūva taškų. Iš tiesų, jei jūs imtis savo nešiojamas gal vėliau, ir atrodo tikrai glaudžiai ne it-- priklausomai kaip brangu nešiojamas yra kaip aukštos kokybės ekranas yra, jums gali labai gerai pamatyti visas mažai taškų ekrane. 

Ir tie taškai ar taškų, o tai reiškia, ten 24 bitai atstovaujantys kiekvieną pikselį, kad nuotrauka, kad jūs matote "Facebook", arba, kad jūs tiesiog paėmė jūsų iPhone neseniai. Ir taip tai kaip mes gauname dalykų, pavyzdžiui grafika. Na, kas vaizdo? Vaizdo yra tik grafikos rinkinys skraido ekrane vėl ir vėl ir vėl. Ir taip video tikrai, yra tik modeliai Bitų atstovaujančių Grotelės, eilučių ir stulpelių taškų, skraido ekrano atvaizdą, po paveikslą įvaizdį, a.k.a. Filmuota medžiaga. Taigi, kad jį įėjimai ir išėjimai. 

Visi mes turime dabar yra prielaida, kad jūs žinote, ką, jei norime kompiuterį atstovauti informaciją mes turime už tai daro sistemą. Mes galime tai padaryti su 0s ir 1s šiame dienos pabaigoje. Tačiau mes galime abstraktus, todėl kalbėti, viršuje, kad taip, kad būtų sudaro daugiau įdomių dalykų. Ir čia atlikti į CS50 ir kompiuterių mokslas apskritai, dabar mes stovime ant pečių visų žmonių, kurie buvo prieš mus, kuris suprato, kad iš. O dabar tiesiog manyti, kad kompiuteriai gali atstovauti įėjimai ir išėjimai. 

Bet dabar tegul iš tikrųjų kažką daryti su jais. Taigi algoritmas yra tik rinkinys Nurodymų, žingsnis po žingsnio, sprendžiant tam tikrą problemą. Ir ką gali vienas tokios problemos būtų. Taigi tai yra senosios mokyklos technologija, telefono knyga. Ir viduje telefono knyga yra visa krūva vardus ir numerius. Ir tie pavadinimai paprastai yra rūšiuojami pagal abėcėlę. 

Taigi, jei aš norėjau rasti ką nors šis telefonas knyga, kaip Mike Smith, Kas yra būdinga žmogaus ketinate daryti? Na, galima tiesiog atidaryti It Up, pažvelgti į pirmąjį puslapį. Nematau Mike Smith. Pasukite į kitą puslapį, Nematau Mike Smith. Ir tik nesustoti ir eiti. Ar tai žingsnis iki žingsnio požiūrį informacija? Taip. Tai tipo kvaila, tiesa. Tai neefektyvus, tiesa. Nes ji ketina imtis amžinai gauti Mike, bet jis yra teisingas. Nes jei Mike čia Aš iš tiesų jį rasti. 

Taigi, kas yra šiek tiek daugiau protingas žmogus ruošiasi daryti? Jie vis dar gali atidaryti į priekį, o gal skristi per telefonų knygą du puslapiai metu. Dviejų, keturių, šešių, aštuonių. Aš negaliu iš tikrųjų fiziškai tai padaryti labai gerai. Bet teoriškai, tai turėtų būti du kartus taip greitai, du puslapiai metu. Ar šis algoritmas informacija? 

STUDENTŲ: [NESIGIRDI] DAVID Malan: Nebūtinai. Geras. Kodėl, kad įspėjimas? 

STUDENTŲ: Kadangi jis gali būti vienas puslapių, kad jūs praleidžiant. DAVID Malan: Taip. Taigi, net jei man arčiau ir arčiau. Ką daryti, jei jis tiesiog atsitiktinai blogas sėkmės, įtvirtinta tarp dviejų puslapių kad aš plaukioja per? Taigi, mes turime nustatyti pagal tai. Mes iš tikrųjų reikia sakykite, palauk, Galbūt, jei mes einame per toli, gal jei mes paspauskite T skyrių, "T ateina po Smith, tada turėtume bent du kartus atgal bent vieną lapą. Taigi gali būti sutvirtinti, bet yra sąlyginis klausimas ten. Taigi, tai du kartus taip greitai, bet jūs galite turi dvigubai atgal truputį. Bet niekas jo kambarį, net jei tikrai ne telefoniniu knygų nebėra, ketina pradėti iš pradžių. Ką ketinate daryti ieško Mike Smith? Jūs ketinate eiti maždaug į S-aisiais. Arba, jei jūs neturite iš tikrųjų turi Cheat Sheet "ant popieriaus, jūs ketinate eiti bent maždaug į vidurį. Ir tikrai ne knygos priekyje. Jūs ketinate žiūrėti žemyn. Ir matematiškai jūs tikriausiai ketiname pamatyti M skyrių, kuris yra maždaug per vidurį. Ir tada jūs ketinate suvokti, kas yra tiesa? Kur Mike? 

STUDENTŲ: [NESIGIRDI] DAVID Malan: Taip. Taigi jis per šioje pusėje. Ir Taigi, ką galite padaryti? Na, tiek perkeltine prasme ir tiesiog galite ašara per pusę problemą kartą? Ir tada žinau, kad jūs galite mesti tai pusė problemos toli. Ir dabar mes liko iš esmės ta pati problema, bet tai perpus didelis. Ir todėl dabar, kas yra nurodymų? Koks algoritmas rasti Mike Smith? Tai lygiai toks pats dalykas. 

Dabar tai atsitinka būti M skyrių ir tai yra Z skyrių, bet esminis formulė yra vis dar tas pats. Eiti maždaug į vidurį, žiūrėti žemyn, OH, darn ją. Dabar aš T skyriuje Aš nuėjo per toli. Bet čia taip pat gali jums taikyti tą pačią logiką. Metimas pusė problemos toli ir dabar mes liko su problema, kad anketa iš dydžio ketvirtį. Ir mes galime pakartoti, ir mes galime pakartoti, ir mes galime pakartoti, kol teoriškai Yra tik vienas puslapis kairę kuris Mike arba yra arba nėra. 

Taigi, kas yra tokia galinga, apie šią idėją? Aš turiu galvoje, juk tai gana intuityvus. Niekas ketina pradėti ne pradžioje telefonų knygoje ir apversti 1000 puslapių rasti Mike Smith. Beveik visi šiame kambaryje vyksta daryti maždaug, kad algoritmas natūra išsaugoti už ašarojimas. 

Ir taip kodėl mes tai darome? Na, mano efektyvumą. Apsvarstykite, kiek daug geriau tai Algoritmas buvo išmušant jį žemyn į jos sudedamųjų dalių. Taigi, ką aš pirmą kartą tai padaryti? Pasiėmiau telefoną knyga. Ir kompiuteris mokslininkas, ir programuotojas, plačiau it turns out, vyksta pradėti skaičiuoti viską 0. 

Kodėl? Na, tai šiek tiek keista kad mes, žmonės skaičiuoti, paprastai, pradedant nuo vieno. Nes tai, kas mažiausias skaičius mes aiškiai gali kelti pagrįstas net mūsų senosios pradinės mokyklos matematikos? Na, tai buvo 0, ar jis yra po dešimtainio ar dvejetainės. Ir todėl jūs pamatysite pasaulyje skaičiavimo ir programavimo, Tiksliau, mes pradedame skaičiuoti viską nuo 0. 

Taigi aš paėmiau telefonų knygą žingsnį 0. Aš ruošiuosi atvira viduryje telefonų knygoje. Ir tai tikrai yra išraiška, ką aš padariau. Ir tada du žingsnis buvo žvilgsnis pavadinimų. Trečias žingsnis yra šiek tiek skiriasi konceptualiai. Aš prašau sau klausimą. Jei Smith tarp pavadinimų, Aš ruošiuosi priimti sprendimą. Jei jis tarp pavadinimų, tada aš ruošiuosi skambinti Mike. Ir aš ruošiuosi padaryti sprendimą remiantis šia informacija, gabalas. 

Tačiau, jei taip nėra, jei Smith anksčiau knygos į kairę, Aš ruošiuosi atidaryti viduryje iš kairės pusės knygos. Ir tada čia yra sumanumas, Aš ruošiuosi grįžti į du veiksmo. Aš ruošiuosi rūšiuoti stovėti ant savo paties pečių ir tiesiog kartoti praeities darbą aš padariau. Bet darbas man liko yra mažiau, ir mažiau, ir mažiau. Bet jis vis dar ketina dirbti. Bet jei Mike, vietoj to, yra vėliau knygoje į dešinę, Aš ruošiuosi atidaryti viduryje iš dešinės pusės knygos, tada grįžti į du veiksmo. 

Bet ten tikrai ketvirtasis scenarijus. Mike'o arba čia ar čia arba čia or-- 

STUDENTŲ: Ne ten. DAVID Malan: Ne ten. Ir iš tiesų, jei mes neturime numatyti Šis ketvirtasis ir paskutinis scenarijus Mūsų programa gali būti Buggy ar trūkumų tam tikru būdu. Kita, mesti tuo atveju, mes nerastas Mike ne visiems. Ir iš tiesų, jei jūs kada nors pastebėjote, kompiuteris kabo, ar visi staiga žodį ar kai kurių kitų Programa tiesiog netikėtai, o kartais tave klaida žinutė yra tiesiog, kad. Ši programa netikėtai. Jis gali būti bet kokio priežasčių. Bet kartais tai kažkas taip paprasta, kaip šis. Žmogaus programuotojas kuris parašė, kad programinė įranga nesupratau, kad, oi, ten pirmyn dalykas, kad iš tikrųjų gali atsitikti. Ir jei jūs neturite rašyti kodą užfiksuoti, kad ketvirtąjį scenarijų, tai tikrai netikėtas, kartais ką kompiuteris iš tiesų gali padaryti. Dabar galime sušukti nedaugelis iš šių dalykų. Taigi geltonai čia, aš išryškino terminai kad nuo šiol mes tiesiog ketinate skambinti funkcijas. Funkcijos į pasaulio programavimas yra tik kaip veiksmai, ataskaitos veiksmus. Taigi pasiimti, atvira, ieškoti ne, skambinkite, atvira, atviri, mesti rūkyti. Štai funkcija, procedūra, veiksmų, bet sinonimų skaičius būtų dirbti, taip pat. Dabar, kas yra šie dalykai dabar geltona? Jei kita, jei kitas, jei kitur, tai yra tai, kas mes ketiname skambinti sąlygos programavimo, arba filialai, sprendimas jei bus nurodo,. Bet kaip jūs žinote, kurios šakės kelyje imtis, taip sakant? Turime pabrėžti terminai į dešinę ten, kurie yra jų Taip, jokių klausimų. Šie tikri netikri klausimai. Smithas tarp pavadinimų? Smithas anksčiau knygą? Smithas vėliau knygoje? Tai klausimai, į kuris yra taip, arba ne, arba analogiškai tiesa, ar melas, arba analogiškai, vienas ar nulis atsakymas. 

O tuo tarpu ten tik vienas paskutinis gabalas. Tai čia turi kokios reikšmės? Nesvarbu, ar jūs užprogramuoti anksčiau, kaip jūs apibūdinti, kas žingsnis septynių ir 10 darai? Ką tu pasakei? STUDENTŲ: rekursinį žingsnis. DAVID Malan: rekursinį žingsnis. Taip, iš esmės. Tai techniškai kartotinis čia, jei esate susipažinę. Bet mes grįžti prie to. Bet tai aiškiai daro kažką. Vėlgi, tai indukuoti ciklas, kilpa, į dešinę. Jūs tiesiogine prasme vyksta atgal į nors anksčiau žingsnio. Ir taip iš tikrųjų, tai bus įgyvendinti tam tikrą ciklą natūra. Bet jūs nesiruošia gauti įstrigo tai be galo, tiesa. Nes jei jūs nuolat tikrinamas Mike čia arba į kairę, arba ne čia galiausiai jis nesiruošia būti ten. Ir jūs galite tiesiog mesti iš viso kaip už tą paskutinę eilutę. 

Taigi, kad jį žodyno. Ir tai buvo tai, ką mes norėtume paprastai vadiname Pseudocode kodą. Tai nėra tikrasis kalba. Tai tiesiog labai glaustas anglų, bet jis bendrauja tašką. Nėra formalios struktūros čia. Jūs tiesiog naudoti tai nedaug žodžiais, bet taip aiškiai žodžiai kaip jūs galite bendrauti savo idėją. 

Dabar, kaip gerai yra tai, kad algoritmas ir kiek geriau tai? Na, mes neturime patekti į specifika numeriais arba nieko šitaip. Tačiau mes galime pažvelgti į formuoti šio tirpalo. Taigi, jei mes tiesiog atkreipti kai xy sklypas čia ant horizontalios ašies čia. Tegul tik paskambinti problemos dydį. Ir kompiuteris mokslininkas būtų paprastai naudoja n kaip kintamojo čia. Taigi n-puslapiai, arba n žmonių kambaryje arba kokia ji yra, jūs bandote skaičiuoti. 

Ir tada ant vertikalios ašies ant į kairę, kad būtų laikas išspręsti. Taigi, kiek sekundžių daro mane rasti Mike Smith? Arba kiek žingsnių tai užtruks? Kiek puslapis posūkiai tai užtruks? Štai kiek tai kainuoja man laiku išspręsti problemą. Ir mes galime padaryti pirmą algoritmai nuolydis, jei norite, kaip tik šį tiesia linija raudonai. Ir aš jį vadiname n. 

Kodėl n? Kodėl tai tiesiog tai vienas į vieną santykius? Na, jei "Verizon arba kokia telefonų kompanija prideda dar vieną puslapį į telefonų knyga kitais metais, kurios gali stumti Mike vieną daugiau žingsniu arčiau iki galo, priklausomai nuo to, kur, kad puslapis yra. Ir taip poveikis gali tiesiog būti pridėti dar vieną sekundę. Arba vienas puslapis eilė. Vienas su vienu santykiu. 

Priešingai, antra algoritmas. Kiek greičiau buvo, kad intuityviai? Kur aš du puslapius vienu metu? Taip. 

STUDENTŲ: [NESIGIRDI] 

DAVID Malan: Taip. Taigi, tai bus dvigubai greičiau. Ir mes norėtų atkreipti, kad čia priklausomai nuo mastu. Jis vis dar yra tiesi linija, bet mažesnis nei raudona linija. Nes kai skaičius lapų, jei jis trunka jums tai daug priemonių, kurių pirmasis algoritmas, jis ketina imtis jums pusę tiek veiksmų su antruoju. Ir taip geltona linija apibūdinant antrąjį algoritmo tiesiog bus po juo. 

Bet kas tikrai galingas yra galvoti apie trečiasis ir paskutinis, ir nuostabiai labiausiai intuityviojo algoritmas, kad turi šią formą. Techniškai mes vadiname tai logaritminė kreivė. Prisijungti bazę 2 n šiuo atveju. Bet tai tikrai ne klausimas. Kokie klausimai tikrai yra iš esmės skirtingos formos, kad ji turi. Ir jūs galite apsvarstyti, kiek daug trumpesnis ši linija tikrai yra ilgalaikėje perspektyvoje. Jis nuolat didėja. Jis neturi priploti puikiai. Bet jis auga vis tiek daug lėčiau nes problema tampa didesni ir didesni. Ir jūs galite galvoti apie tai šiame way-- jei Verizon "ne tik pridėti vieną puslapį kitąmet, bet vaikinai puslapių į numerį telefonų knygoje, pirmas algoritmas gali imtis dvigubai daugiau žingsnių. Jei tai 1000 puslapių šiuos metų, 2000 puslapių Kitąmet Mike gali būti, kad daug toliau. Taigi, tai 1000 papildomų priemonių, kad jį surasti. Antrasis algoritmas gali būti tik 500 daugiau žingsnių jį rasti, nes vėl, Aš plaukioja per jį du vienu metu. 

Bet kas apie trečią algoritmas? Jei Verizon "padvigubina dydis telefonų knygoje kitais metais nuo 1000 iki 2000 katalogas Kiek daugiau veiksmų yra mano trečiasis algoritmas ketina imtis? Taip, tai tik vieną. Ir tai galinga idėja. Galite imtis 1000 puslapis įkandimo iš tos problemos ne vieną kartą. Ir dabar, jei manote, kad kvailas scenarijus, bet tai tipo sako su galia šio intuition-- rūšies Jei telefono knyga turėjo, kaip, keturis milijardus puslapiai, jaučiasi tikrai didelė problema. Ir iš tiesų, tai gali imtis man keturis milijardus puslapį Pasirodo rasti Mike Smith, kad atveju su pirmuoju algoritmu. Bet kiek žingsnių būtų jis imtis trečiojo algoritmas rasti Mike tarp keturių Milijardas popieriaus lapų? Taigi keturis milijardus jums ašara per pusę. Jūs gaunate du mlrd. Tada vienas milijardas, tada 500 mln, 250 milijonų, 125 million-- tačiau ji jaučiasi tai ketinate užtrukti. Aš gali prireikti 32 pirštus skaičiuoti iki, kad didelis. Bet tai iš tiesų taip vos 32 psl ašarų. Jūs galite pereiti nuo keturių mlrd viename puslapyje dalijimo originalus skaičius Puslapiai pusę 32 kartų iki liekate su tik, kad vienas puslapis. 

Dabar, žinoma, aš oszukiwanie čia. Tai nereiškia, kad mes tiesiog yra tarsi kvailas visiškai su pirmaisiais dviem algoritmai. Aš oszukiwanie tam tikra prasme, arba tikrai aš sverto prielaidą. Kas buvo tiesa apie telefonų knygą į savo pradinę formą, kuri leido man net naudoti, kad trečiąjį algoritmo? Taip? AUDITORIJA: Tai buvo abėcėlę. DAVID Malan: Tai buvo abėcėlę, tiesa? Jei tai buvo tik atsitiktinis Siekiant, tai yra atliekų laiko, visas šis pokalbis. Turiu pažvelgti kas puslapis, jei tai atsitiktine tvarka rasti Mike Smith prieš Pirmąjį galima daryti išvadą, kad jis yra, ar ne. Ir taip kampe mes sumažino tai, kad turiu Daroma prielaida, kad kažkas į šiuo atveju padarė darbą už mane. Ir taip, kad galiausiai pakvietimai klausimas, gerai, palauk. Kaip jūs rūšiuoti 1000 puslapių pavadinimus ir numerius? Tai tikrai kitoks problema, kažkas mes grįžti į ateityje. Bet kai jūs manote apie svetaines kaip "Facebook" ir "Google" už "Gmail" ir tokie dalykai kaip "Google" savo paieškos indeksai, kai turite milijonus ar milijardus vienetų duomenys būtų saugomi šių dienų, searching-- ir jau nekalbant rūšiavimas tuos problems-- galiausiai yra pas save iššūkis. Ir iš tiesų, tai tada yra tiesiog vienas iš tų iššūkių kad mes bus pažvelgti. 

Taigi, dabar tegul šiek tiek laiko ir pažiūrėtų į CS50 išvaizdą pats ir duoti jums jausmą kas parduotuvėje šį semestrą. Iš tiesų, jei jūs dar neturite, do imtis šiame URL išvaizdą. Ir kaip Patrickas užsiminė į, šiemet mes svariai investicijas visiems Į aikštyno paramos daugiau struktūra, kalbant apie darbuotojų etatus ir CAS, biuro valandų skyriai prieinamumas ir Skaitmeniniai medžiagos internete, taip pat. Iš tiesų, kalbant apie aikštyno paskaita, mes čia šiandien. Ir lūkesčiai tai metais oficialiai kurso yra dalyvauti šiandien, žinoma, s paskutinis paskaita ir kursas apytikriai semestro viduryje su kiekvienu paskaitą tarp prieinami paprastai penktadienio popietę internete, tiek Yale studentams ir Harvardo studentai šiemet. Iš tiesų, vienas iš esminių pokyčių yra kad mes priimti ne Harvardo paradigma labai kaip mes čia padarėme paskutinis metų, o dabar šiais metais, kad panašiai, mes vis dar kino dauguma Kurso paskaitos Kembridžas bet padaryti jas prieinamas anksčiau nei turime praeityje taip, kad tie you-- jei jus norėtų, pavyzdžiui, gauti galvos pradėti medžiagų dėl pirmąjį savaitgalį, o kaip antrą savaitgalį, turėsite prieiga prie šių rūšių medžiagų, paieškai, Įdedamas, hyperlinkable į susijusių išteklių visos anksčiau. Kalbant apie pranešimus, kad duoti jums iš aikštyno trajectory-- jausmas ir kai tai gali būti žargonas už dabar, bet ne ilgam, tikri. Mes pradėsime šiandien, galiausiai, žiūrint vienu programavimo kalba vadinama nulio. Mes pereiti vėliau Kitą savaitę į kažką vadinama C ir tada žiūri kitų pastatų blokai sprendžiant problemas, dalykai vadinami matricas ir algoritmai, kaip mes naudojame atminties mūsų privalumas ir trūkumas, ir dalykų, pavyzdžiui, duomenų struktūras, ir tada link sujungtų su galine dalimi į klasė žiūri mašina mokymo ir žiūri į kitą kalba vadinama Python kaip interneto veikia, kaip internetas daugiau paprastai veikia, protokolai kaip HTTP, kalbos duomenų bazių, pavyzdžiui, "SQL, JavaScript, kad internete, ir galiausiai susiejimas visi tie kartu. 

Ir taip iš tiesų, ne pabaigos dieną, jūs nebus mokytis šioje klasėje nulio C arba Python "arba" SQL arba "JavaScript". Jūs, o ne apskritai sužinoti informatikos ir pamatai dalį, ir jūs išmokti programuoti Bet kuriuo iš šių skaičių kalbos pakeliui. Taip iš tikrųjų, vienas iš tikslų, iš galo žinoma yra nusiimti visus aikštyno mokymo ratus tiems galutiniams savaites taip, kad po to, galite grįžti į savo fields-- ar tai yra ar ne kompiuterių mokslo arba inžinerijos, gamtinių mokslai, menai, humanitariniai mokslai, ar beyond-- ir pareikšti kai tai Žinoma idėjos ir šis laukas s idėjos ir praktinis įgūdžiai į savo domeną tam, kad jame spręsti problemas. 

Ką mes daryti čia, tuo tarpu daugumoje ketvirtadieniais po šiandien yra su kurso anketa vadovų pirmaujančių ką mes vadiname Walkthroughs Kurso problema rinkinių. Taigi kiekvieną savaitę, kai mes iškilo problemos nustatyti, mes vaikščioti per tokioje vietoje kaip tai žinoma, iššūkiai, siūlo jums keletą patarimų ir gudrybės ir dizaino technologijas. Bet jei jūs negalėsite kad tie, asmeniškai, suvokti tuos pačius ištekliai bus įdėta vienas iš aikštyno Mokymo padėjėjai su šia problema nustato patys, taip pat. 

Problema nustato šiemet, skirtingai nuo Pernai remiantis atsiliepimais, vis tiek bus išleistas penktadieniais. Tačiau užuot dėl vėlesnis Penktadienis, taip suteikiant jums tik septynias dienas, veiksmingai būti dėl 10 dienų. Ir iš tiesų, tai reikš, kad jie persidengti savaitgalį. Bet mes tikimės, kad šiais metais ypač tai bus leidžia studentams geriau prisitaikyti atoslūgis ir srauto į savo grafikus, ar tai mokslininkai arba extracurriculars ar atletika arba tarpiniame sezoną. Galite priekinių apkrovos ar nugaros apkrovos Jūsų savaitę daugiausia dėmesio skiriama CS50 remiantis tikrąjį savo savaitės kursas apkrova. 

Problema nustato patys apims kalbų spektrą, nors mes sutelkti daugiausia anksti ant C po to, kol mes sutelkti dėmesį į aukštojo lygio, daugiau interneto orientuotas kalbos. Ir tada iš DUK here-- pora jūs turėtumėte imtis, kaip CS50 klasę kaip pirmo kurso? Taigi absoliučiai. Ir iš tiesų, tai ne nebūtinai kažkas jums reikia atidėti, kol Jūs supjaustyti Jūsų dantys kitų rūšių klasėms. O, mano kad daugelis studentų, tarp jų ir aš atgal per dieną, tai yra labai susipažinę laukas, Ypač, jei jūs niekada imtis AP CSA ar kažką panašaus, kad vidurinėje mokykloje. Bet suprantu, kad anksti, ar tai šis kursas ar kokios nors kitos įvadinis kursas, dabar iš tiesų yra geriausias laikas, Manau, kad radote naują kelią ar kai kurių naujų akademinis interesas, taip pat. Ir tada imtis su kitomis courses-- Taigi vienas iš pagrindinių skirtumų čia prieš Harvardo, kad tik mes imtis keturis kursus per semestrą Harvardo dėl tam tikrų priežasčių. Ir vaikinai iš tikrųjų traukti nuo maždaug 36 kursų, iš viso per savo ketverius metus, kuris paprastai reiškia keturis ar penkis klasės. Ir aš manau, kad tai visai teisinga sakyti, ir atsisako CS50, konstrukcijos, yra tikriausiai ne klasės tipo kad jums reikia paprastai pasiimti su kitais keturiais kursai penkerių viso nes psets yra iš dizainas gana intensyvus. Iš tiesų, aš taip pat išmokau tai atgal per dieną. Nenorėčiau apibūdinti CS50 ir informatikos, programavimo kaip tiek daug sunku, kaip yra tik laiko. Tai ne koks dalykas kur po vakarienės, jums galite grįžti į savo bendrabučio kambarys, susėsti ir pradėti sutelkiant dėmesį į pset galvoju, viskas gerai, Aš gonna sprogimo tai atlikti vakarą ir tada pereiti į mano kitą objektą kitą dieną. Kartais jūs tiesiog paspauskite sienos. Turite klaidas savo kode. Jūs nebūtinai žinoti Kaip išspręsti kai kurių problemų. Ir vienas iš pagrindinių ypatybių programavimo sau iki šios dienos yra tiesiog rūšies reikia imtis žingsnis atgal kartais miegoti ant jo ar manote, kad apie tai per kurso iš stumtelėti ar kitu veiklos ir tada grįžti į ją šviežia. Ir jums tereikia šiuos laiko langus. 

Ir iš tiesų, tai kodėl mes prailginta, kiek laiko galima problemines rinkiniai šiais metais, o taip pat, už tą URL Aš taikstytis anksčiau kaip į kas naujo šį semestrą, neapdailintais kraštais problema nustato, kad jie iš esmės ne mažiau griežta, ir takeaways yra ne mažiau, bet ten daug mažiau priekinio reikalas, daug mažiau Legwork, kad jums reikia padaryti kiekvieno problemos televizoriaus priekyje, kaip pamatysite, prieš galite tikrai pasinerti į jo mėsos. Taigi suprantate, kad tie, ir kita pokyčiai yra dėl horizonto geriau prisitaikyti prie mokinių, bet galiausiai įsitikinti kad takeaways yra Iš tiesų, kaip aukštas, kaip įmanoma. Taigi, nors daugiau darbo, nei ji gali būti tipiškas klasės, mes tikimės, kad grįžta jūs ir jums takeaways ir įgūdžiai ir idėjos su kuria jūs išeiti yra dar labiau didelis, kaip rezultatas. Ir jums there-- ir tai yra vienas iš pagrindinių takeaways, kaip Patrickas užsiminė earlier-- yra Žinoma, parama struktūra. Taigi ne tik CS50 turėti vieną iš didžiausi kursų štabų miesteliu. Ji taip pat turi vieną iš šių Patys bakalauro. Iš tiesų, CS50 pernai buvo pirmoji klasė turėti bakalauro mokymo personalo. Ir testamentas tą sėkmę dabar daryti daugelis kitų aikštynų Jeilio CS turėti, kad, taip pat. Ir studentams, ypač, Ar šie Tas ir kursų padėjėjai būti paremti visai tinklas paramos lėšų, tarp jų skyriuose arba Recitations, savaitės galimybės turėti daugiau intymių diskusijas ir atsiliepimai medžiagos tikslingai skirtingų takelių, studentams mažiau patogūs, patogiau, arba kur nors tarp jų. Tai bus sekti prieinamumą paskaitos pagal keletą dienų per savaitę pirmadieniais ir antradieniais. Ir tada biuro hours-- vienas ant vieno galimybės pagalbos iš kurso KI ir Tas bus trečiadieniais ir ketvirtadieniais ir sekmadieniais įvairiais kartus, visi iš kurių bus paskelbtas kurso tinklalapyje, net daugiau nei pernai, taip pat. 

Bet kas svarbiausia CS50, jei ne tiesa šiek tiek neįprasta, yra žinoma, kad kultūra mes bandėme auginti, tiek Cambridge daugelį metų ir dabar visai neseniai New Haven. Ir iš tiesų, artėja tai Šeštadienis, jei dar nesate girdėję, yra CS50 Dėlionės diena, kuri turi nieko daryti su kompiuterių mokslo bet yra visiškai skirta siųsti pranešimas, kad kompiuteris mokslas apie problemų sprendimo. Ir iš tiesų, jei norite partneris su viena ar du ar tris draugus ir suformuoti komandą CS50 Puzzle diena, pažvelgti prie skelbimų, kurie yra išeitis. Ir tris valandas picos ir galvosūkiai ir prizai laukia. Ir iš tiesų, nes Pirmą kartą šiais metais, ji negali būti laikoma kartu su Harvardo. Jis bus čia nepriklausomai Jeilio. Todėl nuolat akis iš tiems, jei turite ne. Dauguma kiekvieną penktadienį semestro mes stengiamės padaryti didelį klasę jaučiasi mažas ir pareikšti apie 50 studentus pietūs su kurso darbuotojų, su alumni, draugams nuo pramonės pasikalbėti apie tai, kas gyvenime yra kaip po klasė kaip CS50 ir per vasarą ir po baigimo. Todėl nuolat akis iš Kvietimai į tai. Pirmą kartą kada šiemet mes laikykite pirmasis CS50 kodavimas konkursas, neprivalomas opt-in galimybė vidurio semestro, juk iš mūsų turėjo kai šešių ar septynių savaičių programavimo C pagal savo diržus konkuruoti, Jei būtų taip choose-- vėl nuo teams-- bando spręsti, kaip daug iššūkių kaip jūs galite programavimo su Jūsų draugai prieš kitus. 

Ir link semestro uodegos mes Užsakomieji kai autobusai, iš tikrųjų praleisti šiek tiek laiko Cambridge, jei norite norėčiau prisijungti prie mūsų, nes Vadinamasis CS50 hackathon. 7 val pradėsime. Apie 9 val, mes turime pica. Maždaug 1:00, mes turime Burritos. Ir kas dar miega ant autobusu namo aplink 5:00, mes sustoti blynams ne IHOP kelyje home-- 12-os valandų galimybė pasinerti Būk su klasiokais ir darbuotojų Be abejo galutinio projekto, kuris yra galimybė eiti toli už Žinoma problema rinkiniai ir dizainas ir įgyvendinti pats nieko jums įdomūs, kad galiausiai bus rodoma čia Commons. Pirmasis CS50 tikroji paskutinį kartą metų pabaiga-of-semestro paroda ar šventė, ką kiekvienas klasėje buvo atlikta, ypač tiems, vėlgi, kurie ėjo iš nieko į kažką, nuo nulio iki 60, neturėdamas išankstinio foną ir eksponuoti, galiausiai, kažkas visai miesteliu ir, jei internete, pasaulis pamatyti, kaip gerai. 

Dabar, tai čia yra tik keletas iš Tas ir CAS, kad daro CS50 įmanoma. Leiskite pakviesti bet tų darbuotojų kurie čia sugalvoti scenoje, taip pat kurso anketa galvų, pasiūlyti keletą žodžių įkvėpimo, taip pat. 

ANDI: Sveiki, vaikinai. Ar jus vaikinai mane girdi? Dėkojame, kad sutikote su mumis apie tai miela, lietingą ketvirtadienio popietę. Mano vardas Ieva. Aš Berkeley jaunesnysis. Ir kartu su Stelios ir vasarą, mes jūsų trys galvos mokymas padėjėjai šio artėjančius metus. Taigi, manau, šou hands-- kaip daugelis iš jūsų neturi būdamas AP ketinimą pagrindinis, nei tikrai nardymo giliai į kompiuterių mokslo kaip pagrindinis čia? Nuostabu. Štai puikus. 

Taigi aš iš tikrųjų pasaulinė reikalus ir pažinimo mokslas svarbus. Aš tiesiog atėjo į Jeilio su ketinimą iš niekada nereikėtų pažvelgti į skaičius dar kartą mano gyvenime. Kai aš atėjau į Yale, tai buvo kažkas, kad niekada nebuvo mano radaro. Norėjau sužinoti apie poeziją. Norėjau sužinoti apie Tarptautiniai santykiai. Norėjau sužinoti apie akvarelė brėžiniai. Taip, mes siūlome klasę apie akvarelės brėžinius. 

Bet aš niekada iš tikrųjų buvo įdomu nieko STEM susiję. Bet tada vyresni aš gavo, tuo labiau supratau, kad kiekvienas laukas tikrai kai jausmas dirba informatikos, arba jei ne informatikos, skaičiavimas. Iš tiesų, mano pasaulio reikalų Capstone projektas mes naudojame Analytics "duomenys analizuoti teroristų išpuolių už Boko Haram Nigerijoje. Ir taip, kaip jūs galite pamatyti, nepriklausomai kas pagrindinis jūs galų gale siekia ar ką jūsų interesai čia Yale yra, programavimas ir pamatai bet kokio įgūdžiai yra super naudingas. Ir CS50 tikrai gerai įrengtas rūšies skolinti savo daug išteklių jums, nepriklausomai nuo to, kaip jums patogu yra arba kaip domina esate siekti klasę. 

Vasara ketiname kalbėti šiek tiek tiek apie tai, ką jūs vaikinai ketinate sužinoti apie šiais metais. VASAROS: Sveiki, visi. Aš Vasaros VU. Aš į Morzės jaunesnysis. Ir aš iš tikrųjų pradėjau kaip CS50 studentas save. prieš Taigi trejus metus, buvau Gap Year. Aš niekada priimtas AP klasė vidurinėje mokykloje, bet aš maniau, kad mano laisvo laiko, tai būčiau kietas išmokti kodą. Taigi aš greitai "Google" paieškos, ieškojome, kas buvo internete, ir pamačiau šį vaizdo įrašą su Muppets ir didžėjai ir vėsios svetainėse. Man buvo panašiai, aš noriu sužinoti, kaip tai padaryti. 

Todėl aš paėmė kursą, ir aš tiesiog įsimylėjo su juo. Bet aš atsimenu, yra taip pavydi vaikai, kurie galėtų dalyvauti hackathon, dalyvauti Dėlionės diena, lankyti įstaigą valandų, gauti pagalbos iš darbuotojų etatus asmeniškai. Ir todėl aš niekada įsivaizdavau kad aš gauti galimybę būti čia dalyvauja žinoma, kad pirmą kartą gavo man domina kompiuteryje mokslas ir yra priežastis, kodėl Aš informatikos pagrindinių šiandien. Taigi aš jus perspėti, šios klasės ketina ištiesti jums. Tai vyksta iššūkis jums. Bet jis taip pat ketina išmokyti jus, kaip daryti dalykus kad jūs niekada įsivaizdavau galėtumėte. 

STELIOS: Sveiki, visi. Mano vardas yra Stelios. Esu iš Branford jaunesnysis Kolegijos ir Tarybos dokumentas svarbus. Aš taip pat iš Athens, Graikija. Aš tikrai laukiu susitikimo su jumis visais, kalbasi su jumis skyriuje, bent Biuro valandų, penktadienio pietums. Aš tikrai malonu, nes mes įdėti tiek daug pastangų į sukurti unikalią paramą struktūra jus visus padaryti jūsų patirtį su kursas geriausiai. Ir tikiuosi, kad nors dauguma Jūs tikriausiai nepriima AP Žinoma, prieš, tikiuosi, kad tai CS50 jums ką kibirkščių susidomėjimą toliau siekti kompiuterį Mokslas ir ateityje, kaip ji tai darė su tiek daugelis žmonių praeityje. Taigi ačiū už tai, kad čia malonu jus matyti. Jasonas Hirschhorn. Jason Hirschhorn: Sveiki, visi. Mano vardas Jason Hirschhorn. Gyvenu Silliman. Ir nuėjau į Harvardo kaip undergrad ir specializavosi socialinių tyrimų ir minored kompiuterių mokslo. Ir vienas iš mano pagrindinių vaidmenų čia yra paremti šią nuostabią darbuotojus kaip jie palaiko jus visus. Iš tiesų, tai yra ne visi iš jų. Yra 55 bakalaurai ir absolventų čia jums visiems padėti. Ir aš Manyti vienas iš geriausių dalys kurso jums visi vis dirbti su juos, gauti juos pažinti, gauti juos matyti, tiek CS50 ir už jos ribų CS50 šį semestrą ir daug semestrus ateiti. Taigi tikiuosi jums imtis Žinoma, nes tikiuosi jums gauti bendrauti su nuostabus personalas turime scenoje. 

GARSIAKALBIS: Na, leiskite man baigti sakydamas jis bus įdomus. DAVID Malan: Na, Ačiū visai mūsų komandos. Leiskite artimosios šviesos ir leisti kai mūsų komandos daugiau tiek iš Kembridžo ir New Haven, pasisveikinti, nes šie vaikinai failą išjungtas. Ir po to mes pereiti prie pirmasis mūsų programavimo užduočių su šia kalba vadinama nulio. Taigi ačiū komandai. Leiskite artimosios šviesos ir išgirsti iš kelių kitų. 

[Plojimai] 

[Vaizdo įrašų atkuriamų] 

-Iš CS50 misija yra padaryti jums patogiau su visiškai nauju būdu mąstymo, šio skaičiavimo mąstyseną. -Tai Padarė informatikos įdomus, kuris ką aš nelabai suprantame, buvo įmanoma, kol aš paėmė klasę. -Aš Buvo, pavyzdžiui, Whoa. Aš tikrai verčiant mano mintis į kompiuterį dabar. 

-Even Jei Neturime foną kompiuterių mokslo ar patirties, iš tikrųjų tai yra už jus klasės. 

-Taigi Aš tikrai noriu Mano studentus tik karščiuotis apie kompiuterių mokslo. Ne tik programavimo, bet galvoju kaip kompiuterių specialistas yra tikrai tai, ką noriu bandyti mokyti savo pirmakursis. 

-CS50 Yra sunku ir naudingas. 

-An Patirtis. 

-Extravaganza. 

-Tai Atneša mums į kitą lygį. 

[GROJA MUZIKA] 

-The TFS yra, manau, The kraujas kurso. 

-I'm Džiaugiamės, kad mano studentai padedu turite, kad AHA momentas suvokti ką jie iš tikrųjų bando daryti, išsiaiškinti, kaip padaryti pset. 

-CS50 Tikrai sunku kursą. Tačiau, skirtingai nei bet kuri kita Žinoma tikrai Jeilio, ji turi toks didelis, remia bendruomenė. -Tu Visiškai ne reikia žinoti, ką apie kodavimo gebėti imtis kursą. -Tai Nuostabu žiūrėti, kiek žmonės būna vieną semestrą. 

-Jūs Buvo ne vienas sėdi jūsų kambaryje mokymosi kodas, bet tai buvo daugiau nei tik klasėje. Tai buvo patirtis. -The Geriausias būdas išmokti sąvokas ir apdoroti juos yra mokyti kitus. 

-Kas Yra telefono padalinti? 

[GROJA MUZIKA] 

-O Tai CS50. 

[GROJA MUZIKA] 

-Tai CS50. 

-Got Problemą? Ašara per pusę. 

[GROJA MUZIKA] 

Išmesk tai. 

DAVID Malan: Gerai. Taigi leiskite tackle-- į šiek tiek tiek, beje, tai buvo tai tradicija tam tikrų priežasčių 10 metų tarnauti tortą ne pradėti ir CS50 pabaiga. Taigi Jūsų laukia pabaigoje šiandien, be to, planas, rodo, bus šiek tiek tortą, taip pat ir Žinoma, darbuotojai pasakyti labas. Bet dabar, tegul perėjimas prie Pirmasis mūsų kalbomis, kurioje mes praleisti tikrai tik per savaitę ir vienas problema nustatyti šiame domene, nulio. Ir jūs rasite, jei jūs užprogramuotas anksčiau, daug iš idėjas ir galimybės yra pažįstamas jums. Bet jūs pamatysite, kad tai smagu pakeliui išsiaiškinti, kaip tiksliai išversti kai kurios idėjos jau žinote su šia konkrečia aplinka tikrai nustebinti savo šeimą ir draugai su savo darbu, o tai gali eiti internete, jei to pageidautų, po to. 

Ir jei jūs neturite prieš patirtį ir yra tarp daugumos studentai mažiau patogios, suprasti, kad daugelis idėjų mes tik ištirti su Reality-- dalykų kaip telefonų knygos ir lankomumo ir taip forth-- išversti gana gražiai prie kompiuterio, bet ne, jei jūs naudojate, Iš pradžių, kaip ši kalba. Todėl tai yra programa, parašyta kalba vadinamas C Ir mes praleisti gana didelis laiko C, galiausiai. Bet šansai yra, tai atrodys šiek tiek paslaptingas jums iš pirmo žvilgsnio. Tiesą sakant, ten keistai daug sintaksės, skliausteliuose, kampas skliausteliuose, garbanotas petnešos, citatos ir kabliataškis. Ir iš tiesų, jei jūs pasinerti į programavimas pirmą kartą žiūri ir bando sukurti stuff kaip tai, sąžiningai jums taip įklimpusi taip dažnai tiesiog kvaila Individualiųjų požymių, kad neturi nieko intelektualiai įdomu apie tai. 

Bet įsivaizduokite, jei galite sukurti tas pats program--, kuri, kaip galima rūšies išvadą, tikriausiai spausdina "Labas, pasauli" vienaip ar kitaip. Mes galime išgryninti tą pačią idėją tik du įspūdį, jei bus. Iš tiesų, "Scratch yra įdomus nes tai tik grafine kalba. Galite vilkti ir upuść juos įspūdį, kad tik susikabinti jei ji daro logine prasme tai daryti. Ir taip nulio, mes greitai pamatyti, tai kaip galėtumėte įgyvendinti, kad tos pačios Programa, su vos dviem įspūdį kad gana daug padaryti, ką jie sako. 

Bet mes matome tik momento, kai iš statybinių blokelių, kad mes, paminėtų į anksčiau ir dar keli yra viskas, galiausiai ketina sudaryti kai kurie iš mūsų pirmųjų programas. Mes ketiname turėti daiktus kaip functions-- tik veiksmai, kurie ką nors padaryti, kaip pasakyti labas, pasauli. Mes ketiname turėti kilpas, dalykų, kurie sužadina ciklų vėl ir vėl, kaip ir mes padarė prieš akimirka su paieškos Mike Smith. Kintamieji, kaip algebra, jei jums turi X arba Y, kuriame galima laikyti numerį. Na, į programą, jūs iš tikrųjų galite laikyti daugiau nei tik numeriais. Galite išsaugoti žodžius ir sakinius ir grafika ir kitų dalykų dar. Būlio išraiškos, tiesiog questions-- taip arba ne, true arba false. Sąlygos, todėl sprendimai remiantis šių TAIP / NE atsakymus. 

Ir tada mėgėjas dalykų, pavyzdžiui, masyvo ir verpalai ir įvykiai ir bet koks kitas numeris funkcijos, bet kurie visi map labai gražiai labai draugiškas blokai tai patinka. Tai bus funkcija A violetinė įspūdį, kad tiesiog sako ką jos pavadinimas is-- šiuo atveju pasakyti. Ir tada dažnai, ten baltas langas, kad jums galite įvesti arba vilkite tam tikrą vertę į. Ir tai, kas paprastai vadinamas argumentas ar parametras. Tai pakeistų būdas numatytoji elgsena dėlionės dalis ar veikia taip, kad ji kažkas užsakymą už jus tarsi sakydamas, Labas, pasauli arba labas Andy ar labas, Jasonas ar kokios nors kitos sakinys vietoj. 

Jei norite pasakyti, kad lot-- pažodžiui forever-- galima imtis kito įspūdį vadinamas amžinai ir tiesiog įtvirtinta du kartu, kaip šis. Ir tai kilpa, kaip vaizdas rodo, reiškia tiesiog pasakyti labas, pasaulis amžiams, vėl ir vėl ir vėl. Arba, jei tik nori daryti tai baigtinis skaičius laikais, kaip 50 kartų, ten bus dar vienas galvosūkis gabalas that-- pakartoti 50 kartų. 

Tuo tarpu, jei norite turėti kintamąjį šia kalba mes apie žaisti su, galite naudoti apelsinų blokas panašaus į tai. Ir šis kintamasis aš savavališkai vadinamas I "sveikojo skaičiaus. Ir aš tiesiog nustatyti, kad jis lygus 0. Ir tai gal i, šiame case-- tai variable-- atstovauja kažkieno rezultatą į žaidimą. Jūs pradedate nuo nulio, o kaskart padaryti tikslą ar kažką panašaus, kad gausite vieną papildomą tašką. 

Galite užduoti klausimus nulio. Jei mes vilkite ir upuść įspūdį vienetų akimirką, kaip tai, galite užduoti klausimus, pavyzdžiui, Na, yra i mažiau nei 50? Gal jūs turite 50 taškų laimėti. Ir taip, tai būtų klausimas norite paklausti. Arba apskritai, jums Galima sakyti, yra x mažiau nei y, kur yra du kintamieji dalyvauja? Dabar, tai vienas yra daug didesnis iš pirmo žvilgsnio, bet tikrai ne visi, kad sudėtingesnė. 

Tai tik kombinacija Sąlygų ir kintamųjų ir Būlio išraiškos paklausti trijų questions-- yra x mažiau nei Y? Jei taip, tai pasakyti. Tarkim, x yra mažiau nei m. Kitur, jei x yra didesnis nei Y, dar x turi būti lygi m. Ir kadangi su Mike Smith, ten buvo keturi scenarijai, čia numerių pasaulyje, x yra arba mažiau nei, didesnis nei arba lygi. Visi mes turime yra trys šakės kelyje. Ir tada ten mėgėjas įspūdį, kaip tai dalykų, pavyzdžiui, masyvų, kur mes vyksta, kad būtų galima saugoti informaciją. Mes ketiname pamatyti blokus, kurie leidžia mums įgyvendinti daug temų, kita funkcija, mes naudosime ir tada taip pat kažkas vadinamas renginius. Bet kol mes gauti, kad taškas ir sukurti dar, galiausiai, mūsų pačių užsakymą įspūdį, galime iš tikrųjų atverti pati programa. 

Taigi tai yra nulio. Tai galima rasti scratch.mit.edu. Ir kviečiame Jus žaisti dabar ar vėliau, taip pat. Tai atsitinka būti offline versija. Tiems, kurie to nedaro nebūtinai turi didelę interneto, Jūs galite atsisiūsti tą pačią programinę įrangą, taip pat. Ir ten tikrai tik trys komponentų šią programinę įrangą. Viršutiniame kairiajame kampe ekranas yra etape rūšiuoti kad nulio, kas pagal nutylėjimą atrodo kaip katė, gyvena viduje. Jis gali judėti aukštyn, žemyn, į kairę, ir į dešinę ir daryti daugybę kitų dalykų, ir gali atrodyti bet kokia keliais būdais remiantis apie kostiumus, kurį priskiriate jam. Bet tai, ką mes vadiname Sprite, charakterio rūšiuoti. Ir Jūs galite turėti kelis simbolių, kaip mes greitai pamatyti. 

Per vidurį dabar visa tai dėlionė objektai ir šių kategorijų arba padėklai jų. Taigi dabar, aš spustelėjote Motion. Ir todėl aš matau visas Pasiūlymas susijusių įspūdį ar blokai, todėl funkcijos, kurios daryti su einame, žemyn, į kairę arba į dešinę arba kita operacija. Bet jei aš spustelėjote Ieško, jums gali pamatyti dalykus kaip tarkim bloke kad mes matėme vos prieš akimirką. Ir jei aš spustelėkite Control, pamatysite dalykų, pavyzdžiui, pakartotinis ir amžinai o jei bloką mes matėme prieš momentas. 

Ir todėl jūs rasite kad mes tiesiog subraižyti kai kurių paviršius įspūdį kartu, bet visa tai gana intuityvus ir taškas ir spustelėkite. Iš tiesų, įbrėžimams buvo sukurta jaunesniems studentams padėti jiems lizdo kūrybinio mąstymo. Ir dar nuostabiai, tai nuostabus kertiniu akmeniu tiksliai idėjų mes ketiname ištirti C ir Python ir JavaScript, taip pat. 

Dešinėje pusėje, pagaliau, čia tai, vadinamąjį scenarijus plotą. Ir tai tik tuščias šiferis su kurį pradėti rašyti programą. Ir aš lygiai taip pat. Dabar, aš atsitikti žinoti, kur viskas yra nes aš tai padariau kelis kartus. Bet aš žinau, kad pagal įvykių kategoriją, ten tai blokas here-- kai žalia vėliava paspaudėte. Ir pastebėsite, jei aš nutolinti ir atgal per čia ant scenos, Scratch gyvenimas per šį tiek stačiakampio pasaulis, ant kurio yra žalia vėliava ir raudona sustojimo ženklas. Taigi eiti ir sustoti, atitinkamai. 

Ir taip ką aš noriu padaryti kai ta žalia vėliava paspaudėte? Na, leiskite man eiti į tą Ieško kategoriją. Ir leiskite man eiti į priekį ir vilkite ir upuść tai. Ir pastebėsite, kaip greitai, kaip ji pasireiškia arti, jie tarsi magnetinės. Taigi, jei aš dabar atleiskite, ji užsifiksuos kartu gražus ir švariai. Ir aš ruošiuosi eiti į priekį ir pasakyti kažką panašaus Labas, pasauli dvi sekundes. Leiskite nutolinti ir spustelėkite dabar žalia vėliava, ir sako, labas, pasauli. Gerai. Taigi, kad viskas gerai ir gerai. Ne visi, kad įdomus. Leiskite, kad ji šiek tiek mielesnis. Ir aš žinau, kad avansas, įbrėžimams atsitinka ateiti su kai mielas dalykų kaip šis. Taigi žaisti garso meow, kol padaryta. Taigi leiskite tai padaryti. 

[MIAU] 

Aw, tai žavinga. Ir jei aš spustelėkite jį again-- 

[MIAU] 

Ir vėl. 

[MIAU] 

Bet aš nuolat turintis atgaivinti nulio. Bet aš galiu padaryti geriau nei tai. Kodėl ne aš tiesiog vilkite trys iš jų. Ir dabar tai tris kartus žavinga. 

[Meowing] 

Gerai, iš tikrųjų, tai šiek tiek šliaužiantis. Taigi, mes turime kažką tarp ten. Jei aš einu į kontrolės, atrodo, kad ten tikrai laukti blokas. Ir taip pastebėsite, jei aš užveskite pelės žymeklį ant there-- ir leiskite, kad tai šiek tiek didesnis. Jei aš užveskite, ji vyksta przystawkę į vietą. Taigi laukti vieną sekundę, palaukite vieną sekundę. Leiskite paspausti žalią vėliavą dar kartą. 

[Meowing] 

Gerai, šiek tiek daugiau gamtos, bet nėra labai veiksminga. Taigi tai yra teisinga, jei mano programa s tikslas buvo meow tris kartus. Bet tai nėra labai gerai suprojektuoti. I rūšies sumažinti kai kampuose. Aš turiu šiek tiek tingus. Ką jaučia like-- ką man atrodo padaręs blogai, ar galėtumėte pasakyti? Taip? Taip, per vidurį. Auditorija: Naudota daugiau atminties nei jums reikia nes jūs naudojate tiek daug skirtingų linija. DAVID Malan: Taip, taip, daugiau eilučių. Ir tai nebūtinai būtų atmintis, nors tai gali būti vertinama kaip tokiu būdu. Bet tai definitely-- ten yra nenaudingi. Ir aš tiesiog rūšies tempia ir nukrito tuos pačius dalykus. Ir jei jūs rūšies extrapolate-- jei tai ne akivaizdu here-- gerai, kaip būtų Aš meow 30 kartų? Norėčiau vilkite ir upuść, kaip, 30 daugiau poros įspūdį. Ir tikrai, ten geriau. Ir mes matėme geresnį būdą. Kas intuityviai būtų būti geresnis būdas? Taip, tiesiog naudokite kilpą. Nėra kopijuoti ir įklijuoti. Ir iš tiesų, kada tai semestrą, jei jums pradėti rasti sau velkant ir numetant, ar tikrai kopijuoti ir įklijuoti, pavojingas įprotis patekti į dėl tai tik nelabai aptarnavimo. Pavyzdžiui, jei noriu pakeisti garsas į ką nors kita, Turiu pakeisti jį dabar iš trijų vietos, o ne tik vieną. Nes iš tiesų, jei aš nutraukti šį away-- Aš tikiu tik ketina atsieti jį panašaus. Leiskite patraukti pakartoti blokas, ir tada spustelėkite trys, trys tipas, mesti kai kurie iš jų kelio tiesiog leisdami eiti. Ir tada pastebėti neatrodo kaip ji dera, bet magnetiškai, ji vyksta ne tik užsifiksuotų bet augti, kad tilptų formą. Taigi, kad gerai. Ir dabar, jei aš spustelėkite Atkurti. 

[Meowing] Labai gražus. Gerai. O dabar tai labai lengva pakeisti, taip pat, nes aš galiu tik pakeisti vieną numerį vienoje vietoje. Bet tai taip pat yra ne visi, kad įdomus. Leiskite tikrųjų turi Įbrėžimams ne meow, bet judėti. Leiskite man eiti į Pasiūlymas ir perkelti 10 žingsnių viduje of-- oi, leiskite man išspręsti šią problemą. Leiskite jį perkelti 10 steps-- iš tikrųjų, tegul ne tai pakartoti. Leiskite patraukti valdymo blokas, ir padaryti taip amžinai. Forever perkelti 10 žingsnių. Ir spustelėkite Atkurti. 

GERAI. Taigi, laimei, jis sustoja. Priešingu atveju, vaikai gaus labai nusiminusi kai jie tarsi praranda savo katę. Bet bent jau aš galiu vilkite jį atgal į ekraną. Bet tai dar ne viskas, kad puikus iš žaidimo ar animacija. Būtų malonu, jei gal Jis sugrįžta prie krašto. Taigi, ką mes galime padaryti? Kas konstruktas mums reikia turėti Scratch nuspręsti Bounce, jūs manote, Net jei jūs niekada matyti nulio anksčiau? Taip, nugaros. AUDITORIJA: Jums reikia jei bloko arba jei-tada. DAVID Malan: Taip, taip, kai rūšies, jei blokas arba jei-tada. Taigi iš tikrųjų, mes turime vieną iš šių čia. Taigi if-- todėl leiskite man gauti atsikratyti judėjimą. Leiskite priartinti todėl didesnis. Taigi, kaip apie tai. Forever jei Sensing-- mes nematėme anksčiau. Man reikia Būlio išraiška. Ir it turns out, jei liečiant ką? Jei liečiant kraštą, ką aš noriu daryti? Na, jei aš einu atgal į Pasiūlymas, Pasirodo, oi, galiu apsisukti. Leiskite vilkite tai čia. Kodėl ne aš eiti į priekį ir apsisukti 180 laipsnių? 

O dabar leiskite man tiesiog perkelti pabaigoje. Galėčiau įdėti judėjimą pradžia arba pabaiga. Bet logiškai, kiekvieną kartą aš judėti, aš norite patikrinti, aš neliesti kraštą? Aš neliesti kraštą? Aš neliesti kraštą? Taigi, kad logiškai aš apsisukti, jei taip. Taigi leiskite nukentėjo žaisti. 

GERAI. Taigi tai šiek tiek Buggy, taip sakant. Ir klaida yra tik klaida į kompiuterinę programą. Bet bent jau jis veikia. Ir iš tiesų, aš galiu eiti čia. Ir leiskite man padaryti jį ne 10 žingsnių ne laikas, bet visa tai animacija. Tai viskas, animaciją ar net filmas yra. Leiskite pereiti 20 žingsnių vienu metu. Taigi 20 kartų daugiau dalykų vyksta vieną kartą, arba du kartus, kaip daugelis, šiuo atveju. Ir jis juda greičiau. Leiskite pakeisti 30. 100. 1,000. Ir tai vyksta labai greitai. Ir tai is-- Taip, gerai. 

Taigi dabar mes tiesiog Messing su juo. Gerai, kad klaidų. Tačiau mes galime vilkite jį iš kelio čia. Tačiau mes galime padaryti daugiau įdomus su tuo, taip pat. Kaip apie this-- jis aukštyn kojom. Tačiau paaiškėja, Scratch-- ir ten yra iš tikrųjų, Turiu atsisakyti, nėra akademinės vertė, ką aš apie tai. Bet jei aš atverti mikrofoną, tegul jį sustabdyti ir padaryti kažką panašaus į tai. Ouch! 

[LAUGH] 

Tai buvo žavinga. Ačiū. Dabar, tai yra tai, ką mano balsas atrodo, kai aš klykauti Ouch. Aš nemanau, kad mes sugauti savo juoką. Tai gerai. Leiskite Išsaugoti kaip "Ouch". Leiskite Išsaugoti kaip "Ouch". Ir dabar mes grįžti į scenarijų. Ir dabar aš need-- pažiūrėkime, Garsas. Oh, žaisti garso Ouch. Taigi, jei aš neliesti kraštą, leiskite man Pirmasis žaisti Ouch, tada apsisukti. O dabar tegul įdėti jį per vidurį. 

[Sakydamas: "OI"] 

Du kartus taip greitai. 

GERAI. Bet tai tiesiog daryti tai, ką aš sakau. Taigi iš tikrųjų jis yra teisingas, tai tik šiek tiek erzina greitai. Taigi leiskite pridėti kažką įdomiau tai. Leiskite tikrųjų atverti vienas, kad aš iš anksto, taikliai pavadino gyvūną augintinį Kačių, kad tai daro. Štai scenarijų čia. Ką tai vyksta daryti anglų kalbos žodžių? Kas tai siekiama padaryti? Taip, eime some-- Yeah? 

Auditorija: Kai pet katė, ji Miau. DAVID Malan: Taip, todėl, kai jūs pet katė, ji ketina meow. Taigi, kitaip tariant, ten dabar amžinai kilpa vis dar kartu su sąlyga, kartu su Būlio išraiškos, kartu su pora funkcijų, poveikis iš kurių, kai aš žaisti Ši programa, nieko atsitinka, kol aš perkeltumėte žymeklį arčiau ir arčiau ir arčiau and-- 

[MIAU] Tada tai kaip Petting katė. [MIAU] Tik tada, kai jums iš tikrųjų perkelkite žymeklį virš jo. Dabar, aš taip pat plakta ne pet katė, kuri tai daro vietoj. 

[Meowing] 

Taigi jis tiesiog nuolat meowing. 

[Meowing] 

Bet jei aš gauti per close-- 

[Meowing] 

[ROAR] 

Taigi, kaip tai veikia? Dabar aš tiesiog turiu dvipusis kelio išsišakojimas. Jei liečiant pelės žymeklį, tada žaisti liūtas garsą. Kita tiesiog žaisti Miau garso, ir tada laukti tris sekundes, kad kad tai tipo darai tai labai ramiai. Gerai. Štai derinant kai daugiau idėjų dar. Paimkime pažvelgti šiame pavyzdyje Aš plakta vadinamus temas. Ir tai vienas yra iš esmės skiriasi tuo, kad ji svertų iš daugelio funkcija programavimo kalba, vadinama siūlai, iš programos gebėjimas tiesiog padaryti du dalykus vienu metu. Iš tiesų, šių dienų, jei jūs naudojate "Google Docs" arba "Microsoft Word", ir jūsų dokumento nuolat yra rašybos patikrinti net kaip jūs type-- ar jūs nukentėjo Command-P arba Control-P ir spausdinti kažkas, tai spausdinant, o jūs ir toliau rašyti. šiandien programas iš tiesų gali padaryti kelių dalykų vienu metu, kaip ir nulio čia. 

Taigi čia, aš turiu du animacinius dabar paukštis ir katė. Ir jei aš spustelėkite kiekvieną iš tiems, simbolių vienu metu, Matau dabar paukščio scenarijai viršuje dešinėje. Dabar matau katės. Paukščių, katės. Taigi, kiekvienas iš jų turi savo scenarijų. Tačiau pranešimas, kas įspūdį jie abu prasideda? Kai žalia vėliava paspaudėte. Ir paukštis, kai žalia vėliava paspaudėte. Taigi, kai aš spustelėkite žalią vėliavą, abiejų šių scenarijų ar programų ketinate lygiagrečiai. Ir jūs pastebėsite, kad paukštis yra tiesiog negalvodamas šoktelėti nuo krašto. Katė akivaizdžiai buvo užprogramuotas su strateginio pranašumo. And-- 

[ROAR] Gerai. Taigi kačių sugauti šiuo atveju paukštis. Kodėl taip yra? Na, pranešimas pradžių mes tiesiog paukštis tiesiog negalvodamas vyksta šį pirmą vietą, ir tada amžinai, jei ne neliesti katė, tiesiog perkelti. Ir jei jūs ant krašto, Bounce. Ir tiesiog perkelti. Ir jei jūs ant krašto, Bounce. Bet katė, tuo tarpu, turi papildomos logikos kad sako this-- pirma, tiesiog taip kad tai nėra visiškai šališkas prieš paukštis, pastebėsite, kad aš naudoti žalią įspūdį ten kad iš tikrųjų susitvarko atsitiktinių skaičių. Daugelio kalbų funkcija yra suteikti Jūs atsitiktinai arba pseudoatsitiktinis numeriai. Šiuo atveju taip, katė iš pradžių pasirenka atsitiktinį skaičių tarp, pavyzdžiui, 90 laipsnių ir 180 laipsnių, iš esmės, todėl kad ten šiek tiek prieštarauja. Ir tada amžinai, jei liečiant paukštis, žaisti liūtas garsą. Priešingu atveju, tiesiog atkreipti į paukščio. Nukreipkite į paukščio. Punktas link paukščio, kuris yra įspūdį pas save šioje byloje. Na, mes galime padaryti vienas kitas dalykas čia. Leiskite atverti renginių programa čia. Ir čia mes vėl turime dvi sprites, kuri atrodo kaip šių dviejų lėlėmis čia. Ir kas įdomu čia yra tai. Oranžinė vaikinas turi tai rinkinys įspūdį čia. "Forever padaryti following-- jei tarpo mygtuką, sakykite, Marco ir tada transliuoti įvykį. O tuo tarpu, mėlyna vaikinas čia turi this-- kai gausite renginį, pasakyti Polo. Taigi paaiškėja, į nulio ir kitomis kalbomis, Yra būdų dvi programas arba du scenarijai, šiuo atveju, į tarpusavio ryšį taip, kad, kai aš nukentėjo tarpo, jis sako "Marco. Ir kitas girdi, kad, taip kalbėti, ir sako, Polo atsakymą. Taigi galite rašyti programas, kurios iš tikrųjų bendrauti tokiu būdu. O jei aš šį vieną, o ne, Aš netgi galite pridėti kintamųjų, tik naudojant vieną Sprite šiuo atveju. Tai vienas ypač erzina. 

[SEAL BARKING] 

Dabar, pranešimas dėl teisės mes turime kai papildoma logika čia. Kaip man sustabdyti šį antspaudą nuo lojimo? 

[SEAL BARKING] 

Atrodo, ant dešinėje pusė yra tai, kas žaisti garsą. Bet tai tik žaidžia skambėti, jei kas yra tiesa? Jeigu variable-- oranžinė block-- prislopintas yra lygus nuliui. Kaip aš galiu pasikeisti prislopintas būti 1, tai reiškia, tiesa, kad tai prislopintas? Matyt, kitas scenarijus, galiu nukentėjo tarpo, ir dabar jis sustoja. Taigi, mes galime turėti šią tarpusavio santykius visoje scenarijus, taip pat, tiesiog dalintis kintamąjį abiejuose panašaus į tai. Dabar, tai yra ne visi, kad įdomus. Vykime į priekį ir tai padaryti ir sujungti iš šių idėjų daug su šia programa čia. Prieš mes darome, kad, nors kaip apie vieną savanorį? Leiskite spaudimą išjungtas mane, nes aš ne iš tikrųjų žaisti šį žaidimą. Leiskite, kad kas nors mums nemačiau anksčiau. Jūs turite būti patogi ateina ant scenos Čia, kamera. Gerai, nagi iki. Labai drąsus. Koks tavo vardas? 

Idris Idris. DAVID Malan: Atsiprašome? Idris Idris. DAVID Malan: Idris malonu susitikti su jumis. Nagi į viršų. Ir dabar, į savo mobilųjį telefoną telefonas, jums žaisti Pokemon eiti? 

Idris Nr DAVID Malan: Tikrai? Idris Taip. DAVID Malan: Gerai. Gerai. Na, malonu susitikti su jumis. Užeikite. Aš ne vieną. Taigi mes išsiaiškinti kartu kaip žaisti šį, kuris nors iš tikrųjų ėjo ir įgyvendinamos nulio keičiant katė esmės skirtingų simbolių visi kartu. Ir jei aš viso ekrano režimą tai čia mes ketiname pamatyti šį žaidimą kartu. Puslapis įkeliamas, dar pakrovimo. Nagi. Leiskite tai padaryti. Nagi. Šis žaidimas yra toks didelis, kad jis sudužo. Budėjimo. Pabandykite dar kartą. Nagi. Gerai. 

Čia mes eiti. GERAI. Žalioji vėliava. Taigi čia mes einame. 

[GROJA MUZIKA] 

Pasirinkite vidutinio lygio čia. Spauskite mėlyną vaikinas ten. Gerai. Ir jūs galite naudoti rodyklę keys-- aukštyn, žemyn, kairėn, dešinėn. Dabar aptarkime, kaip ir mes this-- ir tada eiti po simbolio ten. Taip. Ir dabar spustelėkite jį su pele. O taip. Perkelti. Kur rodyklė? Čia jūs einate. Taigi spustelėkite čia. Taip. Gerai. Taigi, dabar, aš sakė turite kišti kamuolys, kad jei spustelėkite jį, ji bus tai padaryti. Labai gerai. Praktikuojančių šiandien, aš nustatėme, kad šis žaidimo versija iš tikrųjų nėra labai sunku. Taigi, jei norite vėl eiti čia nužengti į šį Poke kamuolio. Ir tada eiti imtis teise. Pabandykite paspaudę ant jos. Oi, iš tikrųjų, tai parduotuvė, matyt. Gerai, kad uždarytumėte kad. Niekada padaryti, kad prieš. Gal eiti į tai, ką čia. Oi, ten jūs einate. Palaukite, yra viena ten. Oi, yra dar vienas. GERAI. Žemyn. Taip, spustelėkite. 

Gerai, kad yra labai mielas. Gerai, labai gerai padaryta. Šis žaidimas nėra labai sunku. GERAI. Sveikiname. Čia mes turime CS50 streso kamuolys jums. Tačiau mano, tik už akimirką ką kai takeaways ten. Lengviau, nei realus žaidimas, matyt. Bet visi mes ketiname čia yra simbolių kad tikriausiai turi tam tikros rūšies Vijos susijęs su juo. Tai ne katė. Būtent šis personažas vietoj. Ir tai kilpa yra tik nuolat sakydamas, jei iki rodyklės mygtuką, jei rodyklę žemyn paspaudžiamas, jei rodyklė į kairę arba į dešinę paspaustas arrow paspaudžiamas, judėti aukštyn arba žemyn arba į kairę arba į dešinę. Arba, jei yra kita įspūdį ten kad sako, kai palietus kitą Sprite, kai liesti vieną iš simbolių į Poke kamuolį jei neliesti, tai padaryti. 

Taigi visi idėjas, kurias taip naudoju kas tikrai tik gali būti taikomos šiuo konkrečiu konteksto žaisti šį žaidimą, taip pat. Leiskite man eiti į priekį ir patraukite dar vieną kitos čia, iš tikrųjų. Leiskite man eiti į priekį ir patraukite iki, tarkim, tai. Tai, ką mes remiksavo. Pagaminta vienas iš mūsų studentai Kembridže ir tada aš per ir pakeitė beveik kiekvieną Harvardo instancija į Yale šį kartą. Ar kas nors patinka konkuruoti su gebenėmis čia kitoje kaupimo visų šių idėjų? Nagi žemyn, taip. Koks tavo vardas? 

DINA: Dina. 

DAVID Malan: Adina? 

DINA: Dina. 

DAVID Malan: Dina, nagi žemyn. Gerai, Dina. Taigi, šis žaidimas tampa sunkiau ir sunkiau, nes šiame žaidime, ten kintamieji yra naudojami taip pat kad nuolat sekti nuo kokio lygio esate žaidime. Taigi malonu susitikti su jumis. Ateik. Ir todėl čia tikslas yra rūšiuoti iš padaryti savo kelią per labirintą kad šis studentas įgyvendinti. 

Ir tik nustatyti etapą, kiekvienas Šių nuotraukų ekrane yra savo Sprite, savo charakterį. Taigi tai buvo pagal nutylėjimą katėms bet studentas juos pakeitė į įvairias gebenėmis logotipų čia. Ir tada pamatysite, kad tik naudojant sąlygas ir kilpas ir funkcijos ir daugiau, gausite tai. 

[GROJA MUZIKA] [Muzika - MC Hammer, "U negali liesti  Šis "] 

Taip, gerai. Taip, nesustoti. Pirmas lygis labai lengva. Jūs tiesiog turite eiti per ten. Bet vėl, mano, tai yra tik kilpa klausytis rodyklės keys-- aukštyn, žemyn, kairėn, dešinėn. O dabar jutimo blokas. Labai gražus. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Labai gražus. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Labai gražus. Gana lengva, Crimson. Gerai. Levels-- Uh-Oh. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Ir dar kartą, tai trys Harvardo herbo, jums tereikia logika sakydamas, jei ant krašto, Bounce. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Gerai, tai, ką jūs darote, yra įdomesnis nei kodėl. Labai gražus. Labai gražus. Uh Oh. 

[Muzika - MC Hammer, "U negali liesti  Šis "] Manau, kad jūs turite paaukoti save. [Muzika - MC Hammer, "U negali liesti  Šis "] Greitai! 

[Muzika - MC Hammer, "U negali liesti  Šis "] Gražus. Tai gerai. Jūs gausite ją. Taip taip! Labai gražus. 

[Didelio džiaugsmo] 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Gražus! 

[Muzika - MC Hammer, "U negali liesti  Šis "] Supratau. Nagi! Antra į paskutinę lygiu. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Gerai. 

[Muzika - MC Hammer, "U negali liesti  Šis "] Taip. Gerai panaudoti kintamųjų čia. [Muzika - MC Hammer, "U negali liesti  Šis "] Taip. [Muzika - MC Hammer, "U negali liesti  Šis "] Gražus. [Muzika - MC Hammer, "U negali liesti  Šis "] Viskas gerai. Mes turime gauti iki galo. Ten. Oi! 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Gali paleisti vėlai ir šiandien, bet tai viskas bus verta. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Tu gali tai padaryti! Taip! 

[Didelio džiaugsmo] 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Tai vienas tikrai sunku. 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Mes jums duos dar du gyvenimus. Ar gali tai padaryti? 

[Muzika - MC Hammer, "U negali liesti  Šis "] 

Gerai. Kaip apie dideliame ture aplodismentų vis. Jūs turite į sekundę iki paskutinio lygio. Ačiū. 

[Plojimai] 

Taigi tai tik pasakyti, kiek jūs gali daryti su šių rūšių dalykų. Ir realizuoti, taip pat, kad kai įspūdį ne exist-- Ir iš tiesų, tai bus vienas iš galias, pirmoji problema rinkiniai ir beyond-- yra iš tikrųjų sukurti savo. Ir tai tik fragmentą vienas iš pavyzdžių Galėsite žaisti Su internetu, kur jei jūs neturite pastatyti į nulio kažkas panašaus į kosulys įspūdį, jūs iš tikrųjų galite padaryti tai patys. 

Ir taip visa tai ir dar daugiau laukia. Ir tik tapyti galutinis nuotrauka iš tiesų, kas į priekį parduotuvėje už jus klasėje, remiantis keletą nuotraukų iš klasiokų praeitis, leiskite artimosios šviesos paskutinį kartą ir parodyti jums CS50. 

[GROJA MUZIKA] 

Gerai. Štai jį CS50. Tortas dabar tarnavo. 

[GROJA MUZIKA] 